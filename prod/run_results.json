{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-01-22T04:45:24.412637Z", "invocation_id": "15074bc9-1795-437c-aff9-01b31816c063", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.662703Z", "completed_at": "2025-01-22T04:45:20.684807Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.686335Z", "completed_at": "2025-01-22T04:45:20.686355Z"}], "thread_id": "Thread-4", "execution_time": 0.16806578636169434, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.stg_fb__age_gender_demographic", "compiled": true, "compiled_code": "WITH \nsource as (\n    select * \n    from `agile-scheme-394814`.`Facebook_v2`.`p_age_gender_demographic__*`\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval 3 day)\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by json_value(data,'$.account_id'),json_value(data,'$.campaign_id'),json_value(data,'$.gender'),json_value(data,'$.age'),json_value(data,'$.date_start')\n    )\n) \nSELECT\n        DATE(json_value(data, '$.date_start')) AS date_start,\n        DATE(json_value(data, '$.date_stop')) AS date_stop,\n        json_value(data,'$.account_id') AS account_id,\n        json_value(data,'$.account_name') AS account_name,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.age') AS age,\n        json_value(data,'$.gender') AS gender,\n        CAST(json_value(DATA, '$.clicks') AS float64) AS clicks,\n        CAST(json_value(DATA, '$.cpc') AS float64) AS cpc,\n        CAST(json_value(DATA, '$.cpm') AS float64) AS cpm,\n        CAST(json_value(DATA, '$.ctr') AS float64) AS ctr,\n        CAST(json_value(DATA, '$.impressions') AS float64) AS impressions,\n        CAST(json_value(DATA, '$.reach') AS float64) AS reach,\n        CAST(json_value(DATA, '$.spend') AS float64) AS spend,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'page_engagement'\n        ) as\n        no__page_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'post_engagement'\n        ) as\n        no__post_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'link_click'\n        ) as\n        no__link_click ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        add_to_cart__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        no__add_to_cart ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        onsite_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        no__onsite_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        offsite_conversion__fb_pixel_purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        no__offsite_conversion__fb_pixel_purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        offline_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        no__offline_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        no__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.messaging_conversation_started_7d'\n        ) as\n        no__onsite_conversion__messaging_conversation_started_7d ,\n\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__age_gender_demographic`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.560457Z", "completed_at": "2025-01-22T04:45:20.685562Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.688685Z", "completed_at": "2025-01-22T04:45:20.688696Z"}], "thread_id": "Thread-3", "execution_time": 0.17167401313781738, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.stg_fb__ad_insights", "compiled": true, "compiled_code": "WITH \nsource as (\n    select * \n    from `agile-scheme-394814`.`Facebook_v2`.`p_ad_insights__*`\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval 3 day)\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by json_value(data,'$.account_id'),json_value(data,'$.campaign_id'),json_value(data,'$.adset_id'),json_value(data,'$.ad_id'),json_value(data,'$.date_start')\n    )\n) \n\nselect\n        DATE(json_value(data, '$.date_start')) AS date_start,\n        DATE(json_value(data, '$.date_stop')) AS date_stop,\n        json_value(data,'$.account_id') AS account_id,\n        json_value(data,'$.account_name') AS account_name,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.adset_name') AS adset_name,\n        json_value(data,'$.adset_id') AS adset_id,\n        json_value(data,'$.ad_id') AS ad_id,\n        json_value(data,'$.ad_name') AS ad_name,\n        CAST(json_value(DATA, '$.clicks') AS float64) AS clicks,\n        CAST(json_value(DATA, '$.cpc') AS float64) AS cpc,\n        CAST(json_value(DATA, '$.cpm') AS float64) AS cpm,\n        CAST(json_value(DATA, '$.ctr') AS float64) AS ctr,\n        CAST(json_value(DATA, '$.impressions') AS float64) AS impressions,\n        CAST(json_value(DATA, '$.reach') AS float64) AS reach,\n        CAST(json_value(DATA, '$.spend') AS float64) AS spend,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'page_engagement'\n        ) as\n        no__page_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'post_engagement'\n        ) as\n        no__post_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'link_click'\n        ) as\n        no__link_click ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        add_to_cart__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        no__add_to_cart ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        onsite_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        no__onsite_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        offsite_conversion__fb_pixel_purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        no__offsite_conversion__fb_pixel_purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        offline_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        no__offline_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        no__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.messaging_conversation_started_7d'\n        ) as\n        no__onsite_conversion__messaging_conversation_started_7d ,\n    \nfrom deduplicate", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.520504Z", "completed_at": "2025-01-22T04:45:20.687383Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.690440Z", "completed_at": "2025-01-22T04:45:20.690451Z"}], "thread_id": "Thread-1", "execution_time": 0.1754446029663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.stg_fb__account_insights", "compiled": true, "compiled_code": "WITH \nsource as (\n    select * \n    from `agile-scheme-394814`.`Facebook_v2`.`p_account_insights__*`\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval 3 day)\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by json_value(data,'$.account_id'),json_value(data,'$.date_start')\n    )\n) \nSELECT\n        DATE(json_value(data, '$.date_start')) AS date_start,\n        DATE(json_value(data, '$.date_stop')) AS date_stop,\n        json_value(data,'$.account_id') AS account_id,\n        json_value(data,'$.account_name') AS account_name,\n        CAST(json_value(DATA, '$.clicks') AS float64) AS clicks,\n        CAST(json_value(DATA, '$.cpc') AS float64) AS cpc,\n        CAST(json_value(DATA, '$.cpm') AS float64) AS cpm,\n        CAST(json_value(DATA, '$.ctr') AS float64) AS ctr,\n        CAST(json_value(DATA, '$.impressions') AS float64) AS impressions,\n        CAST(json_value(DATA, '$.reach') AS float64) AS reach,\n        CAST(json_value(DATA, '$.spend') AS float64) AS spend,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'page_engagement'\n        ) as\n        no__page_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'post_engagement'\n        ) as\n        no__post_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'link_click'\n        ) as\n        no__link_click ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        add_to_cart__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        no__add_to_cart ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        onsite_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        no__onsite_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        offsite_conversion__fb_pixel_purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        no__offsite_conversion__fb_pixel_purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        offline_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        no__offline_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        no__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.messaging_conversation_started_7d'\n        ) as\n        no__onsite_conversion__messaging_conversation_started_7d ,\n\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__account_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.545372Z", "completed_at": "2025-01-22T04:45:20.688075Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.691391Z", "completed_at": "2025-01-22T04:45:20.691402Z"}], "thread_id": "Thread-2", "execution_time": 0.17505764961242676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.stg_fb__ad_accounts", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_ad_accounts__*` original\n        group by json_value(data,'$.id')\n    )\n)\n\nselect \n    safe_cast(json_value(data,'$.account_status') as bool) as is_active,\n    json_value(data,'$.name') as account_name,\n    json_value(data,'$.id') as account_id,\n    regexp_extract(json_value(data,'$.id'),r'_(\\d+)') as id,\n    json_value(data,'$.owner') as bm_id,\n    json_value(data,'$.business_name') as business_name,\n    json_value(data,'$.currency') as currency,\n    safe_cast( json_value(data,'$.is_personal') as bool) as is_personal,\n    safe_cast(json_value(data,'$.age') as float64) as age,\n    safe_cast(json_value(data,'$.spend_cap') as float64) as spend_cap,\n    safe_cast(json_value(data,'$.amount_spent') as float64) as amount_spent,\n    json_value(data,'$.timezone_name') as timezone_name,\n    timestamp(json_value(data,'$.created_time')) as created_time,\nfrom source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_accounts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.698869Z", "completed_at": "2025-01-22T04:45:20.719250Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.720687Z", "completed_at": "2025-01-22T04:45:20.720696Z"}], "thread_id": "Thread-4", "execution_time": 0.02767014503479004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.stg_fb__page_insights", "compiled": true, "compiled_code": "with deduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_page_insights__*` original\n        group by id\n    )\n)\nselect\n    json_value(data,'$.id') as metric_id,\n    split(json_value(data,'$.id'),\"/\")[safe_offset(0)] as page_id,\n    json_value(data,'$.name') as metric_name,\n    json_value(data,'$.period') as aggregate_period,\n    json_value(data,'$.title') as metric_title,\n    json_value(data,'$.description') as metric_description,\n    json_extract_array(data,'$.values') as values,\n    _batched_at as last_sync_at,\nfrom deduplicate", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__page_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.705106Z", "completed_at": "2025-01-22T04:45:20.721612Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.724724Z", "completed_at": "2025-01-22T04:45:20.724734Z"}], "thread_id": "Thread-3", "execution_time": 0.02928900718688965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.stg_fb__page_posts", "compiled": true, "compiled_code": "with deduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_page_posts__*` original\n        group by json_value(data,'$.id')\n    )\n)\nselect \n  json_value(data,'$.id') as post_id,\n  split(json_value(data,'$.id'),'_')[safe_offset(0)] as page_id,\n  json_value(data,'$.message') as body_content,\n  timestamp(json_value(data,'$.created_time')) as created_time,\n  json_value(data,'$.permalink_url') as permalink_url,\n  from deduplicate", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__page_posts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.714142Z", "completed_at": "2025-01-22T04:45:20.723447Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.726328Z", "completed_at": "2025-01-22T04:45:20.726339Z"}], "thread_id": "Thread-2", "execution_time": 0.028890609741210938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.stg_fb__post_insights", "compiled": true, "compiled_code": "with deduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_post_insights__*` original\n        group by id\n    )\n)\nselect\n    json_value(data,'$.id') as metric_id,\n    split(json_value(data,'$.id'),\"/\")[safe_offset(0)] as post_id,\n    split(split(json_value(data,'$.id'),\"/\")[safe_offset(0)],\"_\")[safe_offset(0)] as page_id,\n    json_value(data,'$.name') as metric_name,\n    json_value(data,'$.period') as aggregate_period,\n    json_value(data,'$.title') as metric_title,\n    json_value(data,'$.description') as metric_description,\n    json_extract_array(data,'$.values') as values,\n    _batched_at as last_sync_at,\nfrom deduplicate", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.709666Z", "completed_at": "2025-01-22T04:45:20.724075Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.727290Z", "completed_at": "2025-01-22T04:45:20.727301Z"}], "thread_id": "Thread-1", "execution_time": 0.030532360076904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.stg_fb__pages", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_pages__*` original\n        group by json_value(data,'$.id')\n    )\n)\n\nselect \n    json_value(data,'$.id') as page_id,\n    json_value(data,'$.name') as page_name,\n    json_value(data,'$.about') as page_about,\n    json_value(data,'$.category') as page_category,\n    json_value(data,'$.global_brand_page_name') as global_brand_page_name,\n    json_value(data,'$.has_transitioned_to_new_page_experience') as has_transitioned_to_new_page_experience,\n    json_value(data,'$.link') as page_link,\n    json_value(data,'$.phone') as page_phone,\n    json_value(data,'$.website') as page_website,\n    json_value(data,'$.store_code') as store_code,\n    json_value(data,'$.store_number') as store_number,\n    json_value(data,'$.single_line_address') as single_line_address,\n    json_value(data,'$.business.id') as bm_id,\n    json_value(data,'$.business.name') as bm_name,\nfrom source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__pages`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.732098Z", "completed_at": "2025-01-22T04:45:20.751558Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.790142Z", "completed_at": "2025-01-22T04:45:20.790154Z"}], "thread_id": "Thread-4", "execution_time": 0.06458330154418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.stg_fb__region_demographic", "compiled": true, "compiled_code": "WITH \nsource as (\n    select * \n    from `agile-scheme-394814`.`Facebook_v2`.`p_region_demographic__*`\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval 3 day)\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by json_value(data,'$.account_id'),json_value(data,'$.region'),json_value(data,'$.campaign_id'),json_value(data,'$.date_start')\n    )\n) \n\nselect\n        DATE(json_value(data, '$.date_start')) AS date_start,\n        DATE(json_value(data, '$.date_stop')) AS date_stop,\n        json_value(data,'$.account_id') AS account_id,\n        json_value(data,'$.account_name') AS account_name,\n        json_value(data,'$.region') AS region,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        CAST(json_value(DATA, '$.clicks') AS float64) AS clicks,\n        CAST(json_value(DATA, '$.cpc') AS float64) AS cpc,\n        CAST(json_value(DATA, '$.cpm') AS float64) AS cpm,\n        CAST(json_value(DATA, '$.ctr') AS float64) AS ctr,\n        CAST(json_value(DATA, '$.impressions') AS float64) AS impressions,\n        CAST(json_value(DATA, '$.reach') AS float64) AS reach,\n        CAST(json_value(DATA, '$.spend') AS float64) AS spend,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'page_engagement'\n        ) as\n        no__page_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'post_engagement'\n        ) as\n        no__post_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'link_click'\n        ) as\n        no__link_click ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        add_to_cart__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        no__add_to_cart ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        onsite_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        no__onsite_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        offsite_conversion__fb_pixel_purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        no__offsite_conversion__fb_pixel_purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        offline_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        no__offline_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        no__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.messaging_conversation_started_7d'\n        ) as\n        no__onsite_conversion__messaging_conversation_started_7d ,\n    \nfrom deduplicate", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__region_demographic`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.767518Z", "completed_at": "2025-01-22T04:45:20.792474Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.793952Z", "completed_at": "2025-01-22T04:45:20.793962Z"}], "thread_id": "Thread-2", "execution_time": 0.051706552505493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_facebookAds__accountInsights", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            date_start\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_AccountInsights__*`\n    where date_start <'2024-07-01'\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by account_id\n    )\n)\nSELECT\n    account_id,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__accountInsights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.782811Z", "completed_at": "2025-01-22T04:45:20.794906Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.801304Z", "completed_at": "2025-01-22T04:45:20.801315Z"}], "thread_id": "Thread-1", "execution_time": 0.052619218826293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_facebookAds__audienceInsights", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_AudienceInsights__*`\n    WHERE\n        date_start < '2024-07-01'\n),\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by account_id, campaign_id, adset_id, ad_id, date_start, age, gender\n    )\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    age,\n    gender,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__audienceInsights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.752178Z", "completed_at": "2025-01-22T04:45:20.800673Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.803330Z", "completed_at": "2025-01-22T04:45:20.803341Z"}], "thread_id": "Thread-3", "execution_time": 0.07203483581542969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.base_ga4__events", "compiled": true, "compiled_code": "\n\n    \n\n\n\n\nwith source as (\n    select\n        \n    parse_date('%Y%m%d',event_date) as event_date_dt\n    , event_timestamp\n    , event_name\n    , event_params\n    , event_previous_timestamp\n    , event_value_in_usd\n    , event_bundle_sequence_id\n    , event_server_timestamp_offset\n    , user_id\n    , user_pseudo_id\n    , privacy_info\n    , user_properties\n    , user_first_touch_timestamp\n    , user_ltv\n    , device\n    , geo\n    , app_info\n    , traffic_source\n    , stream_id\n    , platform\n    , ecommerce.total_item_quantity\n    , ecommerce.purchase_revenue_in_usd\n    , ecommerce.purchase_revenue\n    , ecommerce.refund_value_in_usd\n    , ecommerce.refund_value\n    , ecommerce.shipping_value_in_usd\n    , ecommerce.shipping_value\n    , ecommerce.tax_value_in_usd\n    , ecommerce.tax_value\n    , ecommerce.unique_items\n    , ecommerce.transaction_id\n    , items\n\n    from `agile-scheme-394814`.`analytics`.`events_*`\n    where cast(left(replace(_table_suffix, 'intraday_', ''), 8) as int64) >= 20231001\n    \n        and parse_date('%Y%m%d', left(replace(_table_suffix, 'intraday_', ''), 8)) in (current_date,date_sub(current_date, interval 1 day))\n    \n),\nrenamed as (\n    select\n        \n    event_date_dt\n    , event_timestamp\n    , lower(replace(trim(event_name), \" \", \"_\")) as event_name -- Clean up all event names to be snake cased\n    , event_params\n    , event_previous_timestamp\n    , event_value_in_usd\n    , event_bundle_sequence_id\n    , event_server_timestamp_offset\n    , user_id\n    , user_pseudo_id\n    , privacy_info.analytics_storage as privacy_info_analytics_storage\n    , privacy_info.ads_storage as privacy_info_ads_storage\n    , privacy_info.uses_transient_token as privacy_info_uses_transient_token\n    , user_properties\n    , user_first_touch_timestamp\n    , user_ltv.revenue as user_ltv_revenue\n    , user_ltv.currency as user_ltv_currency\n    , device.category as device_category\n    , device.mobile_brand_name as device_mobile_brand_name\n    , device.mobile_model_name as device_mobile_model_name\n    , device.mobile_marketing_name as device_mobile_marketing_name\n    , device.mobile_os_hardware_model as device_mobile_os_hardware_model\n    , device.operating_system as device_operating_system\n    , device.operating_system_version as device_operating_system_version\n    , device.vendor_id as device_vendor_id\n    , device.advertising_id as device_advertising_id\n    , device.language as device_language\n    , device.is_limited_ad_tracking as device_is_limited_ad_tracking\n    , device.time_zone_offset_seconds as device_time_zone_offset_seconds\n    , device.browser as device_browser\n    , device.browser_version as device_browser_version\n    , device.web_info.browser as device_web_info_browser\n    , device.web_info.browser_version as device_web_info_browser_version\n    , device.web_info.hostname as device_web_info_hostname\n    , geo.continent as geo_continent\n    , geo.country as geo_country\n    , geo.region as geo_region\n    , geo.city as geo_city\n    , geo.sub_continent as geo_sub_continent\n    , geo.metro as geo_metro\n    , app_info.id as app_info_id\n    , app_info.version as app_info_version\n    , app_info.install_store as app_info_install_store\n    , app_info.firebase_app_id as app_info_firebase_app_id\n    , app_info.install_source as app_info_install_source\n    , traffic_source.name as user_campaign\n    , traffic_source.medium as user_medium\n    , traffic_source.source as user_source\n    , stream_id\n    , platform\n    , struct(\n        total_item_quantity\n        , purchase_revenue_in_usd\n        , purchase_revenue\n        , refund_value_in_usd\n        , refund_value\n        , shipping_value_in_usd\n        , shipping_value\n        , tax_value_in_usd\n        , tax_value\n        , unique_items\n        , transaction_id        \n    ) as ecommerce\n    , (select \n        array_agg(struct(\n            unnested_items.item_id\n            , unnested_items.item_name\n            , unnested_items.item_brand\n            , unnested_items.item_variant\n            , unnested_items.item_category\n            , unnested_items.item_category2\n            , unnested_items.item_category3\n            , unnested_items.item_category4\n            , unnested_items.item_category5\n            , unnested_items.price_in_usd\n            , unnested_items.price\n            , unnested_items.quantity\n            , unnested_items.item_revenue_in_usd\n            , unnested_items.item_revenue\n            , unnested_items.item_refund_in_usd\n            , unnested_items.item_refund\n            , unnested_items.coupon\n            , unnested_items.affiliation\n            , unnested_items.location_id\n            , unnested_items.item_list_id\n            , unnested_items.item_list_name\n            , unnested_items.item_list_index\n            , unnested_items.promotion_id\n            , unnested_items.promotion_name\n            , unnested_items.creative_name\n            , unnested_items.creative_slot\n            , unnested_items.item_params\n        )) from unnest(items) as unnested_items \n    ) items\n    , (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'ga_session_id') as \n    \n    session_id\n    \n    , (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_location') as \n    \n    page_location\n    \n    , (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'ga_session_number') as \n    \n    session_number\n    \n    , COALESCE(\n        (SELECT value.int_value FROM unnest(event_params) WHERE key = \"session_engaged\"),\n        (CASE WHEN (SELECT value.string_value FROM unnest(event_params) WHERE key = \"session_engaged\") = \"1\" THEN 1 END)\n    ) as session_engaged\n    , (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'engagement_time_msec') as \n    \n    engagement_time_msec\n    \n    , (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_title') as \n    \n    page_title\n    \n    , (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_referrer') as \n    \n    page_referrer\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'source') as \n    \n    event_source\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'medium') as \n    \n    event_medium\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'campaign') as \n    \n    event_campaign\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'content') as \n    \n    event_content\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'term') as \n    \n    event_term\n    \n    , CASE \n        WHEN event_name = 'page_view' THEN 1\n        ELSE 0\n    END AS is_page_view\n    , CASE \n        WHEN event_name = 'purchase' THEN 1\n        ELSE 0\n    END AS is_purchase\n\n    from source\n)\n\nselect * from renamed\nqualify row_number() over(partition by event_date_dt, stream_id, user_pseudo_id, session_id, event_name, event_timestamp, to_json_string(ARRAY(SELECT params FROM UNNEST(event_params) AS params ORDER BY key))) = 1", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_ga4__events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.796213Z", "completed_at": "2025-01-22T04:45:20.804250Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.807266Z", "completed_at": "2025-01-22T04:45:20.807276Z"}], "thread_id": "Thread-4", "execution_time": 0.014186382293701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_facebookAds__creatives", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook`.`p_CreativesInsights__*` original\n        group by account_id,\n            ad_id,\n            id\n    )\n)\nSELECT\n    account_id,\n    ad_id,\n    body,\n    image_url,\n    thumbnail_url,\n    call_to_action_type,\n    title,\n    name,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__creatives`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.822745Z", "completed_at": "2025-01-22T04:45:20.828211Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.834755Z", "completed_at": "2025-01-22T04:45:20.834764Z"}], "thread_id": "Thread-3", "execution_time": 0.025340795516967773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_googleAds__adgroups", "compiled": true, "compiled_code": "SELECT\n        DISTINCT ad_group_id,\n        campaign_id,\n        customer_id AS account_id,\n        ad_group_type,\n        FIRST_VALUE(ad_group_name) over(\n            PARTITION BY ad_group_id,\n            campaign_id\n            ORDER BY _DATA_DATE desc, _LATEST_DATE DESC\n        ) AS ad_group_name,\n    FROM\n        `agile-scheme-394814`.`GoogleAds`.`ads_AdGroup_1322374205`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__adgroups`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.811702Z", "completed_at": "2025-01-22T04:45:20.826568Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.828859Z", "completed_at": "2025-01-22T04:45:20.828870Z"}], "thread_id": "Thread-2", "execution_time": 0.023246288299560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_facebookAds__regionInsights", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_RegionInsights__*`\n    WHERE\n        date_start < '2024-07-01'\n),\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by account_id, campaign_id, adset_id, ad_id, date_start, region\n    )\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    region,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__regionInsights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.817582Z", "completed_at": "2025-01-22T04:45:20.833785Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.837361Z", "completed_at": "2025-01-22T04:45:20.837369Z"}], "thread_id": "Thread-1", "execution_time": 0.029236316680908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_googleAds__accounts", "compiled": true, "compiled_code": "SELECT\n    DISTINCT customer_id AS account_id,\n    FIRST_VALUE(customer_descriptive_name) over w1 AS account_name,\n    FIRST_VALUE(customer_currency_code) over w1 AS currency_code,\n    FIRST_VALUE(customer_manager) over w1 AS is_manager_account\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_Customer_1322374205`\n    where _LATEST_DATE = _DATA_DATE\n    window w1 as ( PARTITION BY customer_id\n        ORDER BY\n        _DATA_DATE desc, _LATEST_DATE desc rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING)", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__accounts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.829867Z", "completed_at": "2025-01-22T04:45:20.838390Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.841317Z", "completed_at": "2025-01-22T04:45:20.841325Z"}], "thread_id": "Thread-4", "execution_time": 0.02462172508239746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_googleAds__campaigns", "compiled": true, "compiled_code": "SELECT\n    DISTINCT campaign_id,\n    customer_id AS account_id,\n    campaign_advertising_channel_type AS advertising_channel,\n    (\n        FIRST_VALUE(campaign_bidding_strategy_type) over w1\n    ) AS bidding_stategy,\n    (\n        FIRST_VALUE(campaign_budget_period) over w1\n    ) as budget_period,\n    (\n        FIRST_VALUE(campaign_budget_amount_micros) over w1 / 1e6\n    ) AS budget,\n    FIRST_VALUE(campaign_name) over w1 AS campaign_name\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_Campaign_1322374205`\n    window w1 as (\n        PARTITION BY campaign_id\n        ORDER BY _DATA_DATE desc, _LATEST_DATE desc rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__campaigns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.845945Z", "completed_at": "2025-01-22T04:45:20.866662Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.874693Z", "completed_at": "2025-01-22T04:45:20.874704Z"}], "thread_id": "Thread-3", "execution_time": 0.03500723838806152, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_googleAds__criterions", "compiled": true, "compiled_code": "SELECT\n    ad_group_criterion_criterion_id AS criterion_id,\n    ad_group_id,\n    ad_group_criterion_display_name AS criterion_name,\n    ad_group_criterion_negative AS is_negative,\n    ad_group_criterion_type AS criterion_type,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCriterion_1322374205`\nWHERE\n    _LATEST_DATE = _DATA_DATE", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__criterions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.851182Z", "completed_at": "2025-01-22T04:45:20.873301Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.885727Z", "completed_at": "2025-01-22T04:45:20.885739Z"}], "thread_id": "Thread-2", "execution_time": 0.0434420108795166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_kiotViet__customers", "compiled": true, "compiled_code": "\nWITH source AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_customers_list__*`\n        \n          where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n        \n    UNION ALL\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_webhook_customer_update`\n        \n          where date(_batched_at) >= date(_dbt_max_partition)\n        \n),\nraw_ AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\nSELECT\n    id,\n    code,\n    NAME,\n    gender,\n    birthDate,\n    contactNumber,\n    branchId,\n    TYPE,\n    raw_.groups,\n    debt,\n    totalInvoiced,\n    totalPoint,\n    totalRevenue,\n    rewardPoint,\n    createdDate,\n    modifiedDate,\nFROM\n    raw_", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.861465Z", "completed_at": "2025-01-22T04:45:20.885048Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.887608Z", "completed_at": "2025-01-22T04:45:20.887618Z"}], "thread_id": "Thread-1", "execution_time": 0.0439610481262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_kiotViet__invoices", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        * except(invoiceDelivery,invoiceDetails),\n        invoiceDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_invoices_list__*` invoice1\n        \n          where date(createdDate) in (select distinct date(createdDate) from `agile-scheme-394814`.`KiotViet`.`p_invoices_list__*` where parse_date('%Y%m%d',_TABLE_SUFFIX) >= current_date\n        )\n        \n        \n\n    union all \n\n    select * except(invoiceDelivery,invoice_details),\n    invoice_details as invoiceDetails\n    from `agile-scheme-394814`.`KiotViet`.`p_invoices_list2__*` \n        \n          where date(createdDate) in (select distinct date(createdDate) from `agile-scheme-394814`.`KiotViet`.`p_invoices_list2__*` where parse_date('%Y%m%d',_TABLE_SUFFIX) >= current_date\n        )\n        \n\n        \n),\nraw_ AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\nSELECT\n    id,\n    uuid,\n    code,\n    purchaseDate,\n    branchId,\n    soldById,\n    customerId,\n    orderCode,\n    total,\n    totalPayment,\n    statusValue,\n    COALESCE(first_value(createdDate ignore nulls) over (partition by id order by _batched_at asc), \n    first_value(_batched_at) over (partition by id order by _batched_at asc)\n     ) createdDate ,\n    modifiedDate,\n    discountRatio,\n    discount,\n    payments,\n    invoiceDetails,\n    \"invoice\" as transaction_type,\nFROM\n    raw_", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.875929Z", "completed_at": "2025-01-22T04:45:20.888566Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.891471Z", "completed_at": "2025-01-22T04:45:20.891480Z"}], "thread_id": "Thread-4", "execution_time": 0.041192054748535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_kiotViet__purchaseOrders", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n    SELECT\n        *\n    EXCEPT(purchaseOrderDetails),\n        purchaseOrderDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list__*`\n    \n      where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    \n\n    UNION ALL\n\n    SELECT\n        *\n    EXCEPT(purchaseOrder_details),\n        purchaseOrder_details AS purchaseOrderDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list2__*`\n    \n      where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    \n),\nraw_ AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\nSELECT\n    id,\n    code,\n    purchaseDate,\n    branchId,\n    purchaseById,\n    supplierId,\n    supplierName,\n    supplierCode,\n    partnerType,\n    total,\n    totalPayment,\n    discount,\n    discountRatio,\n    CASE\n        WHEN status = 3 THEN \"\u0110\u00e3 nh\u1eadp h\u00e0ng\"\n        WHEN status = 1 THEN \"Phi\u1ebfu t\u1ea1m\"\n        WHEN status = 4 THEN \"\u0110\u00e3 hu\u1ef7\"\n    END AS transaction_status,\n    createdDate,\n    purchaseOrderDetails,\nFROM\n    raw_", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.896114Z", "completed_at": "2025-01-22T04:45:20.920733Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.926513Z", "completed_at": "2025-01-22T04:45:20.926522Z"}], "thread_id": "Thread-3", "execution_time": 0.03667259216308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_kiotViet__returns", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        *\n    EXCEPT(returnDetails),\n        returnDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_returns_list__*`\n\n    \n    where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    \n\n    UNION ALL\n\n    SELECT\n        *\n    EXCEPT(return_details),\n        return_details AS returnDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_returns_list2__*`\n\n    \n    where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    \n),\nraw_ AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modifiedDate DESC,_batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\nSELECT\n    id,\n    code,\n    invoiceId,\n    returnDate,\n    branchId,\n    receivedById,\n    customerId,\n    returnTotal,\n    returnDiscount,\n    totalPayment,\n    returnFee,\n    returnFeeRatio,\n    saleChannelId,\n    statusValue,\n    createdDate,\n    modifiedDate,\n    payments,\n    returnDetails,\n    \"return\" AS transaction_type\nFROM\n    raw_", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.915672Z", "completed_at": "2025-01-22T04:45:20.927440Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.929837Z", "completed_at": "2025-01-22T04:45:20.929847Z"}], "thread_id": "Thread-1", "execution_time": 0.03606367111206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_pancake__customers", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_customers__*` original\n        group by id, psid\n    )\n)\nSELECT\n    source.id AS customer_id,\n    source.name AS customer_name,\n    source.gender,\n    date_add(\n        source.inserted_at,\n        INTERVAL 7 HOUR\n    ) inserted_at,\n    source.phone_numbers,\n    source.lives_in AS city,\n    source.psid AS customer_facebook_id,\n    source.recent_orders,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_pancake__customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.921794Z", "completed_at": "2025-01-22T04:45:20.929218Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.932181Z", "completed_at": "2025-01-22T04:45:20.932192Z"}], "thread_id": "Thread-4", "execution_time": 0.026113271713256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_pancake__posts", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_posts__*` original\n        group by id,page_id\n    )\n)\nSELECT\nsource.is_dynamic_linked,\nsource.reactions,\nsource.like_count,\nsource.message,\nsource.delete_comment,\nsource.privacy,\nsource.rating_point,\nsource.type,\nsource.is_removed,\nsource.story_tags,\nsource.comment_count,\nsource.live_video_ended_time,\nsource.id as post_id,\nsource.admin_creator,\nsource.link,\ndate_add(source.inserted_at, interval 7 hour) inserted_at,\nsource.has_running_rules,\nsource.page_id,\nsource.recommendation_type,\nsource.sub_type,\ndate_add(source.updated_at, interval 7 hour) updated_at,\nsource.edit_history,\nsource.dynamic_post_id,\nsource.from,\nsource.is_mention,\nsource.reaction_count,\nsource.live_video_status,\nsource.story,\nsource.share_last_cursor,\nsource.phone_number_count,\nsource.status_type,\nsource.product_id,\nsource.is_visitor_post,\nsource.comments_mirroring_domain,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_pancake__posts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.906865Z", "completed_at": "2025-01-22T04:45:20.930852Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:20.933981Z", "completed_at": "2025-01-22T04:45:20.933991Z"}], "thread_id": "Thread-2", "execution_time": 0.041522979736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.base_pancake__conversations", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n    select * from \n    `agile-scheme-394814`.`Pancake`.`p_conversations__*`\n    where 1=1\n    \n    and date(date_add(datetime(inserted_at), INTERVAL 7 HOUR)) in (\n        select \n        date(date_add(datetime(inserted_at), INTERVAL 7 HOUR)) \n        from `agile-scheme-394814`.`Pancake`.`p_conversations__*`\n      where parse_date('%Y%m%d', _TABLE_SUFFIX) >= date_sub(CURRENT_DATE(), interval 3 day)\n    )\n    \n),\n\ndeduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\n\nSELECT\n    source.id AS conversation_id,\n    date_add(datetime(source.inserted_at), INTERVAL 7 HOUR) AS inserted_at,\n    source.type,\n    customers.fb_id AS customer_fb_id,\n    customers.id AS customer_id,\n    source.last_sent_by.admin_id AS user_id,\n    source.last_sent_by.admin_name AS user_name,\n    source.last_sent_by.name AS page_name,\n    source.message_count,\n    source.post_id,\n    source.page_id,\n    date_add(\n        source.updated_at,\n        INTERVAL 7 HOUR\n    ) AS updated_at,\n    tags.id AS tag_id,\n    tags.text AS tag_value,\n    source.snippet,\n    ads.ad_id,\n    ads.post_id as ad_post_id,\n    ads.inserted_at AS ad_inserted_at,\n    source.tag_histories\nFROM\n    deduplicate as source\n    LEFT JOIN unnest(tags) tags\n    LEFT JOIN unnest(customers) customers\n    LEFT JOIN unnest(ads) ads\nWHERE\n    (\n        source.last_sent_by.name\n    ) LIKE '%5S%'", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_pancake__conversations`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.960975Z", "completed_at": "2025-01-22T04:45:20.997570Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.027713Z", "completed_at": "2025-01-22T04:45:21.027726Z"}], "thread_id": "Thread-1", "execution_time": 0.09163260459899902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_5sfashion__orders", "compiled": true, "compiled_code": "with base_orders as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`WebsiteDB`.`p_websitev2__orders` original\n        group by id\n    )\n\n),\n\nbase_order_shippings as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`WebsiteDB`.`p_websitev2__order_shipings` original\n        group by id\n    )\n)\n\n\nselect \n-- orders\njson_value(o.data,'$.id') as order_id,\njson_value(o.data,'$.code') as order_code,\njson_value(o.data,'$.token') as token,\ntimestamp(json_value(o.data,'$.created_at')) as created_at,\ntimestamp(json_value(o.data,'$.updated_at')) as updated_at,\nsafe_cast(json_value(o.data,'$.total_price') as float64) as total_price,\nsafe_cast(json_value(o.data,'$.total_ship') as float64) as total_ship,\nsafe_cast(json_value(o.data,'$.total') as float64) as total,\n\n--order shipings\nnullif(json_value(os.data,'$.phone'),\"\") as customer_phone,\njson_value(os.data,'$.name') as customer_name,\nnullif(json_value(os.data,'$.email'),\"0\") as customer_email,\nto_hex(md5(cast(coalesce(cast(json_value(os.data,'$.province_id') as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(json_value(os.data,'$.district_id') as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(json_value(os.data,'$.ward_id') as string), '_dbt_utils_surrogate_key_null_') as string))) as location_id,\n\nfrom base_orders o\nleft join base_order_shippings os on json_value(o.data,'$.id') = json_value(os.data,'$.order_id')", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.984499Z", "completed_at": "2025-01-22T04:45:21.026642Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.033733Z", "completed_at": "2025-01-22T04:45:21.033742Z"}], "thread_id": "Thread-4", "execution_time": 0.08585786819458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_esms__sent_data", "compiled": true, "compiled_code": "\n\n\n\nWITH \nincrement as (\n  select * except(sentresult, campaign),\n  first_value(campaign ignore nulls) over (partition by smsid order by _batched_at desc) as campaign, \n  from `agile-scheme-394814`.`Esms`.`p__sms_sent_data_v2__*`\n  where (campaign not in ('ZNS||2024-03-15-2024-17-03|| WK 84 LL - 5S mua h\u00e0ng 6 th\u00e1ng') or campaign is null)\n  \n   and parse_date('%Y%m%d', _TABLE_SUFFIX) >= date_add(current_date, interval -1 day)\n  \n  union all \n  select * except(sentresult,campaign) ,\n  first_value(campaign ignore nulls) over (partition by smsid order by _batched_at desc) as campaign, \n  from `agile-scheme-394814`.`Esms`.`p__sms_sent_data_v1__*`\n  where (campaign not in ('ZNS||2024-03-15-2024-17-03|| WK 84 LL - 5S mua h\u00e0ng 6 th\u00e1ng') or campaign is null)\n  \n   and parse_date('%Y%m%d', _TABLE_SUFFIX) >= date_add(current_date, interval -1 day)\n  \n),\n\nsource AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from increment original\n        group by smsid,phone\n    )\n)\nSELECT\n  phone,\n  to_hex(md5(cast(coalesce(cast(phone as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(SmsId as string), '_dbt_utils_surrogate_key_null_') as string))) AS sent_id,\n  CASE\n    WHEN smstype = 25 AND regexp_contains(content,r'^\\(.*\\)$') THEN 'CSKH||THONG BAO DON HANG'\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN 'QC||FLASHSALES'\n    ELSE COALESCE(campaign,'QC||KHONG PHAN LOAI')\n  END AS campaign,\n  referenceid AS reference_id,\n  sellprice AS sms_cost,\n  CASE\n    sendstatus\n    WHEN 1 THEN \"Ch\u1edd duy\u1ec7t\"\n    WHEN 2 THEN \"Ch\u1edd g\u1eedi\"\n    WHEN 3 THEN \"\u0110ang g\u1eedi\"\n    WHEN 4 THEN \"T\u1eeb ch\u1ed1i\"\n    WHEN 5 THEN \"Th\u00e0nh c\u00f4ng\"\n    WHEN 7 THEN \"Th\u1ea5t b\u1ea1i\"\n    END AS sent_status,\n  \n  CASE\n    when senttime like \"/Date%\" then date(timestamp_millis(safe_cast(regexp_extract(senttime,r'(\\d+)\\+') as int64)),\"Asia/Saigon\")\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN date('2024-02-02')\n    WHEN campaign IN ('KM th\u00e1ng 3 - 8000 ng\u00e0y 1','KM T3 dot 2- 8000') THEN date('2024-03-01')\n    WHEN campaign IN (\"QC||2024-02-26-2024-03-03|| CT DON KHO - KH 3 THANG\") THEN date('2024-03-07')\n    when senttime is not null then date(parse_datetime('%d/%m/%Y %H:%M:%S',COALESCE(senttime, MIN(senttime) over (PARTITION BY campaign))))\n    else date(regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(0)])\n  END as sent_time,\n  smsid AS sms_id,\n  CASE\n    smstype\n    WHEN 1 THEN 'Tin qu\u1ea3ng c\u00e1o'\n    WHEN 2 THEN 'Tin CSKH'\n    WHEN 8 THEN 'Tin C\u1ed1 \u0111\u1ecbnh gi\u00e1 r\u1ebb'\n    WHEN 24 THEN 'Zalo \u01b0u ti\u00ean'\n    WHEN 25 THEN 'Zalo b\u00ecnh th\u01b0\u1eddng'\n    END AS sms_type,\n  CASE\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN '2024-02-02'\n    WHEN campaign IN ('KM th\u00e1ng 3 - 8000 ng\u00e0y 1','KM T3 dot 2- 8000') THEN '2024-03-01'\n    WHEN campaign IN (\"QC||2024-02-26-2024-03-03|| CT DON KHO - KH 3 THANG\") THEN '2024-03-07'\n    ELSE regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(0)]\n  END AS start_date,\n  CASE\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN '2024-02-07' \n    WHEN campaign IN ('KM th\u00e1ng 3 - 8000 ng\u00e0y 1','KM T3 dot 2- 8000') THEN '2024-03-03'\n    WHEN campaign IN (\"QC||2024-02-26-2024-03-03|| CT DON KHO - KH 3 THANG\") THEN '2024-03-17'\n    ELSE coalesce(regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(1)],regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(0)])\n  END AS end_date,\n  CASE\n    WHEN regexp_contains(LOWER(content), r'phong van|chon loc ho so|ung tuyen') THEN 'TUYEN DUNG'\n    WHEN smstype = 25 AND regexp_contains(content,r'^\\(.*\\)$') THEN 'THONG BAO DON HANG'\n    WHEN campaign IS NULL THEN 'KHONG PHAN LOAI'\n    ELSE regexp_extract(campaign,r'\\|-\\s?(.*)$')\n  END AS audience\nFROM\n  source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.028815Z", "completed_at": "2025-01-22T04:45:21.037814Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.039890Z", "completed_at": "2025-01-22T04:45:21.039900Z"}], "thread_id": "Thread-2", "execution_time": 0.05817437171936035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_forecaster__forecast", "compiled": true, "compiled_code": "\nWITH source AS (\n        select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by forecast_date\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`AutoForecaster`.`forecast` original\n        group by forecast_date\n    )\n)\n\nselect \nforecast_date,\nestimates.date as date_in_future,\nestimates.mean_hat as mean_estimated,\nestimates.mean_ci_upper_hat as mean_upper_estimated,\nestimates.mean_ci_lower_hat as mean_lower_estimated,\nexponential_smoothing.forecast as forecasted_value\nfrom source\nleft join unnest(estimates) estimates\nleft join unnest(exponential_smoothing) exponential_smoothing\nwhere estimates.date = exponential_Smoothing.date", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_forecaster__forecast`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.055396Z", "completed_at": "2025-01-22T04:45:21.060025Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.060789Z", "completed_at": "2025-01-22T04:45:21.060798Z"}], "thread_id": "Thread-2", "execution_time": 0.013151168823242188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_googleads__campaign_conversion_stats", "compiled": true, "compiled_code": "\n\nSELECT\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_conversion_action_name AS conversion_name,\n    stats.segments_conversion_attribution_event_type AS conversion_attribution_type,\n    stats.segments_slot AS slot,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_CampaignConversionStats_1322374205`\n    stats", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_conversion_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.049096Z", "completed_at": "2025-01-22T04:45:21.061802Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.063850Z", "completed_at": "2025-01-22T04:45:21.063861Z"}], "thread_id": "Thread-4", "execution_time": 0.025374174118041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_googleads__ad_group_stats", "compiled": true, "compiled_code": "\n\nSELECT\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros/1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_AdGroupBasicStats_1322374205`\n    stats", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.041468Z", "completed_at": "2025-01-22T04:45:21.062413Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.064822Z", "completed_at": "2025-01-22T04:45:21.064832Z"}], "thread_id": "Thread-1", "execution_time": 0.02787637710571289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats", "compiled": true, "compiled_code": "\n\nSELECT\n    stats.ad_group_id,\n    stats.segments_date AS date,\n    stats.campaign_id,\n    stats.segments_ad_network_type AS network_type,\n    stats.metrics_top_impression_percentage AS top_impression_percentage,\n    stats.metrics_search_top_impression_share AS search_top_impression_share,\n    stats.metrics_video_quartile_p100_rate AS video_quartile_p100_rate,\n    stats.metrics_video_quartile_p75_rate AS video_quartile_p75_rate,\n    stats.metrics_video_quartile_p50_rate AS video_quartile_p50_rate,\n    stats.metrics_video_quartile_p25_rate AS video_quartile_p25_rate,\n    stats.metrics_absolute_top_impression_percentage AS absolute_top_impression_percentage,\n    stats.metrics_content_impression_share AS content_impression_share,\n    stats.metrics_content_rank_lost_impression_share AS content_rank_lost_impression_share,\n    stats.metrics_cross_device_conversions AS cross_device_conversions,\n    stats.metrics_engagements AS engagements,\n    stats.metrics_relative_ctr AS relative_ctr,\n    stats.metrics_search_absolute_top_impression_share AS search_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_absolute_top_impression_share AS search_budget_lost_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_top_impression_share AS search_budget_lost_top_impression_share,\n    stats.metrics_search_impression_share AS search_impression_share,\n    stats.metrics_search_rank_lost_absolute_top_impression_share AS search_rank_lost_absolute_top_impression_share,\n    stats.metrics_search_rank_lost_impression_share AS search_rank_lost_impression_share,\n    stats.metrics_search_rank_lost_top_impression_share AS search_rank_lost_top_impression_share,\n    stats.metrics_video_views AS video_views,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCrossDeviceStats_1322374205`\n    stats", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_cross_device_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.089861Z", "completed_at": "2025-01-22T04:45:21.095757Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.096450Z", "completed_at": "2025-01-22T04:45:21.096458Z"}], "thread_id": "Thread-4", "execution_time": 0.02697134017944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_googleads__keyword_stats", "compiled": true, "compiled_code": "\nSELECT\n    stats.segments_date AS date,\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_device AS device,\n    stats.segments_slot AS slot,\n    stats.segments_ad_network_type AS network_type,\n    keyword.ad_group_criterion_keyword_match_type AS match_type,\n    keyword.ad_group_criterion_keyword_text as keyword,\n    SUM(\n        stats.metrics_clicks\n    ) AS clicks,\n    SUM(\n        stats.metrics_conversions\n    ) AS conversions,\n    SUM(\n        stats.metrics_conversions_value\n    ) AS conversions_value,\n    SUM(\n        stats.metrics_cost_micros / 1e6\n    ) AS cost,\n    SUM(\n        stats.metrics_impressions\n    ) AS impressions,\n    SUM(\n        stats.metrics_interactions\n    ) AS interactions,\n    SUM(\n        stats.metrics_view_through_conversions\n    ) AS view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_KeywordBasicStats_1322374205`\n    stats\n    LEFT JOIN `agile-scheme-394814`.`GoogleAds`.`ads_Keyword_1322374205`\n    keyword\n    ON stats.ad_group_criterion_criterion_id = keyword.ad_group_criterion_criterion_id\n    AND stats.ad_group_id = keyword.ad_group_id\nWHERE 1=1\n    and keyword._LATEST_DATE = keyword._DATA_DATE\n    group by 1,2,3,4,5,6,7,8", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__keyword_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.080477Z", "completed_at": "2025-01-22T04:45:21.097480Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.099682Z", "completed_at": "2025-01-22T04:45:21.099692Z"}], "thread_id": "Thread-1", "execution_time": 0.03158450126647949, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_googleads__search_query_stats", "compiled": true, "compiled_code": "\n\nSELECT\n    segments_date AS DATE,\n    ad_group_id,\n    campaign_id,\n    search_term_view_search_term AS search_term,\n    segments_ad_network_type AS network_type,\n    segments_search_term_match_type AS match_type,\n    search_term_view_status AS view_status,\n    AVG(metrics_absolute_top_impression_percentage) absolute_top_impression_percentage,\n    SUM(metrics_all_conversions) all_conversions,\n    AVG(metrics_all_conversions_from_interactions_rate) all_conversions_from_interactions_rate,\n    SUM(metrics_all_conversions_value) all_conversions_value,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_all_conversions) cost_per_all_conversions,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_engagements) engagements,\n    SUM(metrics_impressions) impressions,\n    SUM(metrics_interactions) interactions,\n    AVG(metrics_top_impression_percentage) top_impression_percentage,\n    SUM(metrics_value_per_all_conversions) value_per_all_conversions,\n    SUM(metrics_value_per_conversion) value_per_conversion,\n    AVG(metrics_video_quartile_p100_rate) video_quartile_p100_rate,\n    AVG(metrics_video_quartile_p25_rate) video_quartile_p25_rate,\n    AVG(metrics_video_quartile_p50_rate) video_quartile_p50_rate,\n    AVG(metrics_video_quartile_p75_rate) video_quartile_p75_rate,\n    SUM(metrics_video_views) video_views,\n    SUM(metrics_view_through_conversions) view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_SearchQueryStats_1322374205`\nWHERE\n    1 = 1 group by 1,2,3,4,5,6,7", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__search_query_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.074121Z", "completed_at": "2025-01-22T04:45:21.099007Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.101371Z", "completed_at": "2025-01-22T04:45:21.101381Z"}], "thread_id": "Thread-2", "execution_time": 0.035675048828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_googleads__campaign_stats", "compiled": true, "compiled_code": "\n\nSELECT\n    to_hex(md5(cast(coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_date as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_device as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_ad_network_type as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_slot as string), '_dbt_utils_surrogate_key_null_') as string))) AS row_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros / 1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_CampaignBasicStats_1322374205`\n    stats", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.110950Z", "completed_at": "2025-01-22T04:45:21.123549Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.124309Z", "completed_at": "2025-01-22T04:45:21.124318Z"}], "thread_id": "Thread-4", "execution_time": 0.023702383041381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_googleads__shopping_product_stats", "compiled": true, "compiled_code": "\n\nSELECT\n    segments_date AS date,\n    ad_group_id,\n    campaign_id,\n    upper(segments_product_item_id) item_id,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_impressions) impressions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_ShoppingProductStats_1322374205`\n    group by 1,2,3,4", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__shopping_product_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.106310Z", "completed_at": "2025-01-22T04:45:21.125308Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.127419Z", "completed_at": "2025-01-22T04:45:21.127430Z"}], "thread_id": "Thread-1", "execution_time": 0.022948265075683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__asms", "compiled": true, "compiled_code": "\n\nSELECT\n    asm AS asm_name,\n    CASE\n        WHEN store_name = '5S Th\u00e1i B\u00ecnh 1' THEN '5S Th\u00e1i b\u00ecnh 1'\n        WHEN store_name LIKE '5S Thanh Ho\u00e1%' THEN REGEXP_REPLACE(\n            store_name,\n            'Thanh Ho\u00e1',\n            'Thanh H\u00f3a'\n        )\n        ELSE store_name\n    END AS store_name,\n    * except(store_name,asm)\nFROM\n    `agile-scheme-394814`.`GSheet`.`_ext_asm_list_2`\nWHERE\n    asm <> \"ASM\"", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__asms`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.117999Z", "completed_at": "2025-01-22T04:45:21.126779Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.129103Z", "completed_at": "2025-01-22T04:45:21.129114Z"}], "thread_id": "Thread-2", "execution_time": 0.012993812561035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__company_targets", "compiled": true, "compiled_code": "\n\nselect \ndepartment,\ndate_trunc(parse_date('%m/%e/%Y', reporting_period),month) reporting_period,\ntarget_id,\ntarget_name,\nunit,\nvalue,\nfrom `agile-scheme-394814`.`GSheet`.`_ext_target_2025`\nwhere target_id is not null", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__company_targets`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.132889Z", "completed_at": "2025-01-22T04:45:21.146725Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.156204Z", "completed_at": "2025-01-22T04:45:21.156215Z"}], "thread_id": "Thread-4", "execution_time": 0.02790975570678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__construction", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`GSheet`.`_ext_constructing_procedure` original\n        group by json_value(data,'$.row_number')\n    )\n)\n\nSELECT\n    to_hex(md5(cast(coalesce(cast(nullif(json_value(data,'$.row_number'),'') as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(nullif(json_value(data,'$.branch_name'),'') as string), '_dbt_utils_surrogate_key_null_') as string))) as project_id,\n\n    nullif(json_value(data,'$.branch_name'),'') as branch_name,\n    nullif(json_value(data,'$.asm'),'') as asm,\n    nullif(json_value(data,'$.created_at'),'') as created_at,\n    nullif(json_value(data,'$.province'),'') as province,\n    \"Thi c\u00f4ng\" as construction_type,\n\n    date(timestamp(nullif(json_value(data,'$.bd_info.review_start_date'),\"\")),'Asia/Saigon') as review_start_date,\n    date(timestamp(nullif(json_value(data,'$.bd_info.actual_start_contruction_date'),\"\")),'Asia/Saigon') as actual_start_contruction_date,\n\n    \n    array(\n       select as struct\n       case \n        when json_value(paper_works,'$.key') = 'constructing' then 'X\u00e2y d\u1ef1ng'\n       \n        when json_value(paper_works,'$.key') = 'electricity' then 'H\u1ec7 th\u1ed1ng \u0111i\u1ec7n/\u0110H'\n       \n        when json_value(paper_works,'$.key') = 'signboard' then 'Bi\u1ec3n b\u1ea3ng'\n       \n        when json_value(paper_works,'$.key') = 'interior' then 'N\u1ed9i th\u1ea5t'\n       \n        when json_value(paper_works,'$.key') = 'others' then 'Kh\u00e1c'\n        end as type,\n        date(timestamp(nullif(json_value(paper_works,'$.value.deadline'),\"\")),'Asia/Saigon') as deadline,\n        date(timestamp(nullif(json_value(paper_works,'$.value.finish_date'),\"\")),'Asia/Saigon') as finish_date,\n        json_value(paper_works,'$.value.step_flag') as step_flag,\n    from unnest(analytics.json_transform(json_extract(data,'$.paper_works'))) as paper_works) as paper_works,\n    array(\n       select as struct\n       case \n        when json_value(procedure,'$.key') = 'site_review' then 'Kh\u1ea3o s\u00e1t m\u1eb7t b\u1eb1ng'\n       \n        when json_value(procedure,'$.key') = 'construction_estimate' then 'D\u1ef1 to\u00e1n & PA Thi c\u00f4ng'\n       \n        when json_value(procedure,'$.key') = 'start_construction' then 'B\u1eaft \u0111\u1ea7u thi c\u00f4ng'\n       \n        when json_value(procedure,'$.key') = 'facility_transfer' then 'B\u00e0n giao'\n       \n        when json_value(procedure,'$.key') = 'preliminary_acceptance_review' then 'Nghi\u1ec7m thu l\u1ea7n 1'\n       \n        when json_value(procedure,'$.key') = 'defect_fix' then 'S\u1eeda ch\u1eefa l\u1ed7i (n\u1ebfu c\u00f3)'\n       \n        when json_value(procedure,'$.key') = 'final_acceptance_review' then 'Nghi\u1ec7m thu cu\u1ed1i'\n       \n        when json_value(procedure,'$.key') = 'post_transfer_review' then 'Feedback sau b\u00e0n giao'\n        end as type,\n        date(timestamp(nullif(json_value(procedure,'$.value.deadline'),\"\")),'Asia/Saigon') as deadline,\n        date(timestamp(nullif(json_value(procedure,'$.value.finish_date'),\"\")),'Asia/Saigon') as finish_date,\n        json_value(procedure,'$.value.step_flag') as step_flag,\n        safe_cast(json_value(procedure,'$.value.step_num') as int64) as step_num,\n    from unnest(analytics.json_transform(json_extract(data,'$.procedure'))) as procedure\n    where json_value(procedure,'$.key') not in ('review_notes','constructing_notes')\n    ) as procedure,\n    array(\n        select as struct\n            case \n            when json_value(value_type,'$.key') = 'constructing' then 'X\u00e2y d\u1ef1ng'\n            \n            when json_value(value_type,'$.key') = 'electricity' then 'H\u1ec7 th\u1ed1ng \u0111i\u1ec7n/\u0110H'\n            \n            when json_value(value_type,'$.key') = 'signboard' then 'Bi\u1ec3n b\u1ea3ng'\n            \n            when json_value(value_type,'$.key') = 'interior' then 'N\u1ed9i th\u1ea5t'\n            \n            when json_value(value_type,'$.key') = 'others' then 'Kh\u00e1c'\n             else json_value(value_type,'$.key') end as cost_category,\n            sum(case when json_value(setup_cost,'$.key') ='actual' then safe_cast(json_value(value_type,'$.value') as int64) end)  as actual,\n            sum(case when json_value(setup_cost,'$.key') ='estimate' then safe_cast(json_value(value_type,'$.value') as int64) end) as estimate\n    from unnest(analytics.json_transform(json_extract(data,'$.setup_cost'))) as setup_cost,\n    unnest(analytics.json_transform(json_extract(setup_cost,'$.value'))) as value_type\n    where json_value(setup_cost,'$.key') not in ('description','flag','total_invest_ment')\n    group by case \n            when json_value(value_type,'$.key') = 'constructing' then 'X\u00e2y d\u1ef1ng'\n            \n            when json_value(value_type,'$.key') = 'electricity' then 'H\u1ec7 th\u1ed1ng \u0111i\u1ec7n/\u0110H'\n            \n            when json_value(value_type,'$.key') = 'signboard' then 'Bi\u1ec3n b\u1ea3ng'\n            \n            when json_value(value_type,'$.key') = 'interior' then 'N\u1ed9i th\u1ea5t'\n            \n            when json_value(value_type,'$.key') = 'others' then 'Kh\u00e1c'\n             else json_value(value_type,'$.key') end\n    ) as setup_cost,\n\nFROM\n    `agile-scheme-394814`.`GSheet`.`_ext_constructing_procedure`\nWHERE\n    nullif(json_value(data,'$.row_num'),'') is not null", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__construction`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.147357Z", "completed_at": "2025-01-22T04:45:21.158305Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.160229Z", "completed_at": "2025-01-22T04:45:21.160240Z"}], "thread_id": "Thread-1", "execution_time": 0.0281527042388916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__contents", "compiled": true, "compiled_code": "with source as (\nselect \n    *, \n    parse_date('%Y%m%d',_TABLE_SUFFIX) as content_month\nfrom `agile-scheme-394814`.`GSheet`.`_ext_content__*`\nwhere approval_status = 'Posted'\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by content_code\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__contents`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.151771Z", "completed_at": "2025-01-22T04:45:21.158936Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.161186Z", "completed_at": "2025-01-22T04:45:21.161197Z"}], "thread_id": "Thread-2", "execution_time": 0.016679763793945312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__cs_calls", "compiled": true, "compiled_code": "with source as (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`GSheet`.`_ext_cscalls__*` original\n        group by json_value(data,'$.customer_phone'),json_value(data,'$.call_month')\n    )\n),\n\nraw_ as (\nselect\n  json_value(data, '$.asm') as asm,\n  json_value(data, '$.branch_name') as branch_name,\n  parse_date('%Y-T%m',json_value(data, '$.call_month')) as call_month,\n  json_value(data, '$.customer_dob') as customer_dob,\n  json_value(data, '$.customer_gender') as customer_gender,\n  json_value(data, '$.customer_name') as customer_name,\n  regexp_replace(json_value(data, '$.customer_phone'),r'\\D',\"\") as customer_phone,\n  json_value(data, '$.customer_total_purchasing_value') as customer_total_purchasing_value,\n  json_value(data, '$.call_status') as call_status,\nfrom source\nwhere nullif(json_value(data, '$.branch_name'),'') is not null\n)\n\nselect * except(customer_phone),\ncase \n        when \n            length(customer_phone) = 9 and regexp_contains(customer_phone,r'^[1-9]') \n            then concat('0',customer_phone) \n        else \n            regexp_replace(customer_phone,r'^(84|840)','0')\n        end as customer_phone,\nfrom raw_\nwhere customer_phone is not null", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__cs_calls`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.203972Z", "completed_at": "2025-01-22T04:45:21.214545Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.215884Z", "completed_at": "2025-01-22T04:45:21.215895Z"}], "thread_id": "Thread-1", "execution_time": 0.04376220703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__internal_training", "compiled": true, "compiled_code": "\n\nwith source as (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`GSheet`.`_ext_internal_training` original\n        group by emp_code,instructor,start_date,course_name\n    )\n)\n\nselect \n    emp_code,\n    emp_name,\n    format as course_format,\n    course_name,\n    instructor,\n    date(date_add(start_date,interval 7 hour)) start_date,\n    date(date_add(end_date,interval 7 hour)) end_date,\n    safe_cast(hours as float64) hours,\n    safe_cast(rating_content as float64) rating_content,\n    safe_cast(rating_online as float64) rating_online,\n    safe_cast(rating_host as float64) rating_host,\n    safe_cast(rating_instructor as float64) rating_instructor,\n    safe_cast(rating_avg as float64) rating_avg,\n    safe_cast(test_score as float64) test_score,\n    ifnull(safe_cast(training_cost as float64),0) training_cost,\nfrom source\nwhere emp_code is not null", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__internal_training`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.219273Z", "completed_at": "2025-01-22T04:45:21.224783Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.226940Z", "completed_at": "2025-01-22T04:45:21.226951Z"}], "thread_id": "Thread-1", "execution_time": 0.009213685989379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__manufacture_plan", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`GSheet`.`_ext_manufacture_plan__*` original\n        group by json_value(data,'$.product_code'),json_value(data,'$.original_code'),json_value(data,'$.vendor'),json_value(data,'$.month'),json_value(data,'$.year')\n    )\n\n)\n\n\nselect \n    json_value(data,'$.product_code') as product_code,\n    json_value(data,'$.original_code') as original_code,\n    nullif(json_value(data,'$.vendor'),'') as vendor,\n    coalesce(\n        SAFE.parse_date('%a %b %d %Y  00:00:00 GMT+0700 (Indochina Time)',json_value(data,\"$.expected_deliver_date\")),\n        SAFE.parse_date('%d/%m %Y',regexp_extract(json_value(data,\"$.expected_deliver_date\"), r'(\\d{2}/\\d{2})' )||\" \"|| json_value(data,'$.year') )\n     ) as expected_deliver_date,\n    safe_cast(json_value(data,\"$.expected_volumn\") as float64) expected_deliver_amount,\n    nullif(json_value(data,'$.po_code'),'') as po_code,\n    json_value(data,'$.year')||json_value(data,'$.month') as plan_month,\nfrom source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__manufacture_plan`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.209069Z", "completed_at": "2025-01-22T04:45:21.225775Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.227993Z", "completed_at": "2025-01-22T04:45:21.228003Z"}], "thread_id": "Thread-2", "execution_time": 0.05513310432434082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__maintainance", "compiled": true, "compiled_code": "\n\n\n\nSELECT\n    date(created_at) created_at,\n    branch_code,\n    requested_category AS request_category,\n    request_sub_category,\n    description,\n    related_documents,\n    priority,\n    maintainance_approval,\n    execution_plan,\n    safe_cast(replace(estimated_cost,\",\",\"\") AS int64) AS estimated_cost,\n    pic,\n    coalesce(DURATION, 7) as duration,\n    coalesce(deadline, DATE_ADD(created_at, INTERVAL 7 DAY)) AS deadline,\n    actual_finish_date,\n    case \n        when  actual_finish_date is null then \"\u0110ang th\u1ef1c hi\u1ec7n\"\n        when coalesce(actual_finish_date, CURRENT_DATE()) > deadline then \"Tr\u1ec5 Deadline\" \n        when actual_finish_date <= deadline then \"\u0110\u00fang Deadline\"\n    end as status,\n    safe_cast(replace(actual_cost,\",\",\"\") AS int64) AS actual_cost,\n    acceptance_date,\n    acceptance_state,\n    requester_type,\n    date_diff(actual_finish_date,created_at,day) as duration_to_finish,\nFROM\n    `agile-scheme-394814`.`GSheet`.`_ext_maintainance_sheet`\nWHERE\n    created_at >= '2024-01-01'", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__maintainance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.233662Z", "completed_at": "2025-01-22T04:45:21.245088Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.245791Z", "completed_at": "2025-01-22T04:45:21.245799Z"}], "thread_id": "Thread-1", "execution_time": 0.015317440032958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__pancake_tags", "compiled": true, "compiled_code": "\n\nSELECT\n    tag_value, category\nFROM\n    `agile-scheme-394814`.`GSheet`.`_ext_pancake_tags`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__pancake_tags`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.238126Z", "completed_at": "2025-01-22T04:45:21.255651Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.256587Z", "completed_at": "2025-01-22T04:45:21.256598Z"}], "thread_id": "Thread-2", "execution_time": 0.02538132667541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__sales_budget", "compiled": true, "compiled_code": "\n\n\n\n\nWITH source AS (\n\n    SELECT\n        *\n    EXCEPT(`ASM - Showroom`,`M\u00f4 h\u00ecnh`)\n    FROM\n        `agile-scheme-394814`.`GSheet`.`_ext_sales_budget__*`\n    WHERE\n        MONTH >= '2023-11-01' \n    qualify ROW_NUMBER() over ( PARTITION BY showroom, MONTH ORDER BY _batched_at DESC) = 1\n),\nformated AS (\n    SELECT\n        CASE\n            WHEN source.showroom = '5S H\u1ea3i D\u01b0\u01a1ng' THEN '5S H\u1ea3i D\u01b0\u01a1ng 1'\n            WHEN source.showroom = '5S Th\u00e1i Nguy\u00ean 1' THEN '5S Th\u00e1i Nguy\u00ean'\n            WHEN source.showroom = '5S GO' THEN '5S Go Th\u00e1i B\u00ecnh'\n            WHEN source.showroom = '5S H\u00e0 T\u0129nh 1' THEN '5S H\u00e0 T\u0129nh'\n            WHEN source.showroom = '5S Th\u00e1i B\u00ecnh 1' THEN '5S Th\u00e1i b\u00ecnh 1'\n            ELSE source.showroom\n        END AS branch,\n        source.month AS budget_month,\n        \n        ARRAY_AGG(\n            STRUCT(\n                milestones.start,\n                milestones.end,\n                milestones.value,\n                regexp_extract(milestones.key,r'^(.*) -') AS milestone_name,\n                CASE\n                    trim(LOWER(regexp_extract(milestones.key, r'- ([^()]+)$'))) \n                    WHEN 'doanh s\u1ed1' THEN 'sales_target'\n                    WHEN 'dt/ ng\u00e0y' THEN 'sales_target_psd'\n                    WHEN 'gttb/kh' THEN 'sales_per_visit'\n                    WHEN 'l\u01b0\u1ee3t kh\u00e1ch' THEN 'traffic_target'\n                    WHEN 'blg' THEN 'gross_margin'\n                    WHEN 'upt' THEN 'upt'\n                    WHEN 'g\u00eda b\u00e1n tb' THEN 'ausp'\n                    WHEN 'aov' THEN 'aov'\n                    WHEN 'cr' THEN 'cr'\n                    END AS budget_type\n            )\n        ) AS milestones\n    FROM\n        source,\n        unnest(milestones) milestones \n        group by 1,2\n)\nSELECT\n    formated.*,\nFROM\n    formated", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__sales_budget`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.249455Z", "completed_at": "2025-01-22T04:45:21.259158Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.260584Z", "completed_at": "2025-01-22T04:45:21.260595Z"}], "thread_id": "Thread-1", "execution_time": 0.013148307800292969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__traffic", "compiled": true, "compiled_code": "with source as (\n    select\n        safe.parse_date('%d/%m/%Y',json_value(data, '$.date')) as date,\n        json_value(data, '$.branch_name') as branch_name,\n        json_value(data, '$.employee_name') as employee_name,\n        safe_cast(replace(json_value(data,'$.traffic'),',','.') as float64) as traffic,\n        safe_cast(replace(json_value(data,'$.traffic'),',','.') as float64) as working_hour,\n        _batched_at \n    from `agile-scheme-394814`.`GSheet`.`_ext_traffic__*`\n    where nullif(json_value(data, '$.traffic'),'undefined') is not null\n        and nullif(json_value(data, '$.date'),'') is not null\n        )\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by date, branch_name, employee_name\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__traffic`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.261507Z", "completed_at": "2025-01-22T04:45:21.275787Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.276525Z", "completed_at": "2025-01-22T04:45:21.276552Z"}], "thread_id": "Thread-2", "execution_time": 0.01839137077331543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__bankaccounts", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_bankAccounts_list__*` original\n        group by id\n    )\n)\n\n\nSELECT\n    id AS bankAccount_id,\n    bankName as bankAccount_name,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__bankaccounts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.269525Z", "completed_at": "2025-01-22T04:45:21.284749Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.285393Z", "completed_at": "2025-01-22T04:45:21.285401Z"}], "thread_id": "Thread-1", "execution_time": 0.018022537231445312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__branches", "compiled": true, "compiled_code": "\n\nwith source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modifiedDate DESC,_batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_branches_list__*` original\n        group by id\n    )\n)\n\nSELECT\n    b.id as branch_id,\n    b.branchName as branch_name,\n    b.address,\n    b.wardName ward_name,\n    regexp_replace(b.contactNumber,r'\\.|\\,|\\s','') as contact_number,\n    b.email,\n    b.createdDate as created_Date,\n    b.modifiedDate as modified_date,\n    case \n        when b.branchName = '5S Web' then 'Online'\n        when b.branchName like 'DX%' then \"\u0110i\u1ec3m x\u1ea3\"\n        when b.branchName like 'PU%' then \"Popup\"\n        when b.branchName like '5S%' then \"Offline\"\n        else \"Kho & CH kh\u00e1c Kiotviet\" end as channel\nFROM\n    source b", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.279676Z", "completed_at": "2025-01-22T04:45:21.308071Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.309309Z", "completed_at": "2025-01-22T04:45:21.309318Z"}], "thread_id": "Thread-2", "execution_time": 0.03104233741760254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__categories", "compiled": true, "compiled_code": "\n\n\n\nWITH source AS (\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modifiedDate DESC,_batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_categories_list__*` original\n        group by categoryId\n    )\n)\n\n\n  SELECT\n    r1.categoryName category,\n    r1.categoryId as category_id,\n    case when coalesce(r2.categoryName,r1.categoryName) = coalesce(r3.categoryName,r2.categoryName,r1.categoryName) then r1.categoryName else coalesce(r2.categoryName,r1.categoryName) end as sub_productline,\n    \n    coalesce(r3.categoryName,r2.categoryName,r1.categoryName) AS productLine,\n    CASE\n    WHEN regexp_contains(LOWER(r2.categoryName),r'^qu\u00e0 t\u1eb7ng|nl q\u00f9a t\u1eb7ng t\u00fai x\u00e1ch balo') \n      or regexp_contains(LOWER(r1.categoryName),r'^qu\u00e0 t\u1eb7ng|nl q\u00f9a t\u1eb7ng t\u00fai x\u00e1ch balo') THEN 'qta'\n      WHEN regexp_contains(LOWER(r2.categoryName),r't\u1ea5t|ba l\u1ed7 l\u00f3t|s\u1ecbp|ph\u1ee5 ki\u1ec7n|\u00e1o l\u00f3t c\u1ed9c tay|d\u00e2y l\u01b0ng|gi\u00e0y|kh\u1ea9u trang|v\u00ed|carvat') \n      or regexp_contains(LOWER(r1.categoryName),r't\u1ea5t|ba l\u1ed7 l\u00f3t|s\u1ecbp|ph\u1ee5 ki\u1ec7n|\u00e1o l\u00f3t c\u1ed9c tay|d\u00e2y l\u01b0ng|gi\u00e0y|kh\u1ea9u trang|v\u00ed|carvat') THEN 'pkn'\n      WHEN regexp_contains(LOWER(r2.categoryName),r's\u01a1 mi d\u00e0i') \n      or regexp_contains(LOWER(r1.categoryName),r's\u01a1 mi d\u00e0i') THEN 'smd'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n khaki') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n khaki') THEN 'qkd'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n jean') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n jean') THEN 'qbd'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n \u00e2u') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n \u00e2u') THEN 'qau'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o bomber') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o bomber') THEN 'akb'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o blazer') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o blazer') THEN 'abz'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o gi\u00f3 b\u1ed9') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o gi\u00f3 b\u1ed9') THEN 'agb'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o gi\u00f3|b\u1ed9 gi\u00f3|\u00e1o kho\u00e1c gi\u00f3|\u00e1o kho\u00e1c') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o gi\u00f3|b\u1ed9 gi\u00f3|\u00e1o kho\u00e1c gi\u00f3|\u00e1o kho\u00e1c') THEN 'akg'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o gi\u1eef nhi\u1ec7t') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o gi\u1eef nhi\u1ec7t') THEN 'agn'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o kho\u00e1c da') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o kho\u00e1c da') THEN 'akd'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o len') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o len') THEN 'alo'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o n\u1ec9 r\u1eddi') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o n\u1ec9 r\u1eddi') THEN 'ano'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o phao') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o phao') THEN 'akc'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o polo d\u00e0i tay') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o polo d\u00e0i tay') THEN 'apd'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o thun d\u00e0i tay') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o thun d\u00e0i tay') THEN 'apo'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o n\u1ec9 b\u1ed9') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o n\u1ec9 b\u1ed9') THEN 'anb'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o vest|b\u1ed9 \u0111\u1ed3|b\u1ed9 vest') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o vest|b\u1ed9 \u0111\u1ed3|b\u1ed9 vest') THEN 'avb'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'b\u1ed9 n\u1ec9') \n      or regexp_contains(LOWER(r1.categoryName),r'b\u1ed9 n\u1ec9') THEN 'bni'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n gi\u00f3 b\u1ed9') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n gi\u00f3 b\u1ed9') THEN 'qgb'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n d\u00e0i casual') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n d\u00e0i casual') THEN 'qdc'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n n\u1ec9 b\u1ed9') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n n\u1ec9 b\u1ed9') THEN 'qnb'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n vest') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n vest') THEN 'qve'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n d\u00e0i th\u1ec3 thao') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n d\u00e0i th\u1ec3 thao') THEN 'qdt'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n n\u1ec9 r\u1eddi|qu\u1ea7n n\u1ec9 casual') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n n\u1ec9 r\u1eddi|qu\u1ea7n n\u1ec9 casual') THEN 'qni'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o ba l\u1ed7') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o ba l\u1ed7') THEN 'abl'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o ch\u1ed1ng n\u1eafng') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o ch\u1ed1ng n\u1eafng') THEN 'acn'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o s\u00e1t n\u00e1ch') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o s\u00e1t n\u00e1ch') THEN 'asn'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'b\u1ed9 t-shirt|tshirt|t-shirt c\u0169|t-shirt th\u1ec3 thao|t-shirt thi\u1ebft k\u1ebf') \n      or regexp_contains(LOWER(r1.categoryName),r'b\u1ed9 t-shirt|tshirt|t-shirt c\u0169|t-shirt th\u1ec3 thao|t-shirt thi\u1ebft k\u1ebf') THEN 'ats'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n short gi\u00f3') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n short gi\u00f3') THEN 'qsg'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n short kaki') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n short kaki') THEN 'qsk'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun|qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac|qu\u1ea7n b\u1ed9 polo|qu\u1ea7n b\u1ed9 tshirt|qu\u1ea7n short v\u1ea3i|qu\u1ea7n short \u00e2u') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun|qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac|qu\u1ea7n b\u1ed9 polo|qu\u1ea7n b\u1ed9 tshirt|qu\u1ea7n short v\u1ea3i|qu\u1ea7n short \u00e2u') THEN 'qst'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'qu\u1ea7n short casual') \n      or regexp_contains(LOWER(r1.categoryName),r'qu\u1ea7n short casual') THEN 'qsc'\n      WHEN regexp_contains(LOWER(r2.categoryName),r's\u01a1 mi c\u1ed9c') \n      or regexp_contains(LOWER(r1.categoryName),r's\u01a1 mi c\u1ed9c') THEN 'smc'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'\u00e1o b\u1ed9 polo|b\u1ed9 polo') \n      or regexp_contains(LOWER(r1.categoryName),r'\u00e1o b\u1ed9 polo|b\u1ed9 polo') THEN 'apb'\n      WHEN regexp_contains(LOWER(r2.categoryName),r'polo') \n      or regexp_contains(LOWER(r1.categoryName),r'polo') THEN 'apc'\n      ELSE LOWER(r2.categoryName)\n  END AS ads_product_mapping,\n  CASE\n    WHEN regexp_contains(lower(r1.categoryName),r'^qu\u00e0 t\u1eb7ng|nl q\u00f9a t\u1eb7ng t\u00fai x\u00e1ch balo') THEN 'QU\u00c0 T\u1eb6NG'\n      WHEN regexp_contains(lower(r1.categoryName),r't\u1ea5t|ba l\u1ed7 l\u00f3t|s\u1ecbp|ph\u1ee5 ki\u1ec7n|\u00e1o l\u00f3t c\u1ed9c tay|d\u00e2y l\u01b0ng|gi\u00e0y|kh\u1ea9u trang|v\u00ed|carvat') THEN 'PH\u1ee4 KI\u1ec6N'\n      WHEN regexp_contains(lower(r1.categoryName),r's\u01a1 mi d\u00e0i') THEN 'QUANH N\u0102M'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n khaki') THEN 'QUANH N\u0102M'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n jean') THEN 'QUANH N\u0102M'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n \u00e2u') THEN 'QUANH N\u0102M'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o bomber') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o blazer') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o gi\u00f3 b\u1ed9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o gi\u00f3|b\u1ed9 gi\u00f3|\u00e1o kho\u00e1c gi\u00f3|\u00e1o kho\u00e1c') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o gi\u1eef nhi\u1ec7t') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o kho\u00e1c da') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o len') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o n\u1ec9 r\u1eddi') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o phao') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o polo d\u00e0i tay') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o thun d\u00e0i tay') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o n\u1ec9 b\u1ed9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o vest|b\u1ed9 \u0111\u1ed3|b\u1ed9 vest') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'b\u1ed9 n\u1ec9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n gi\u00f3 b\u1ed9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n d\u00e0i casual') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n n\u1ec9 b\u1ed9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n vest') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n d\u00e0i th\u1ec3 thao') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n n\u1ec9 r\u1eddi|qu\u1ea7n n\u1ec9 casual') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o ba l\u1ed7') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o ch\u1ed1ng n\u1eafng') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o s\u00e1t n\u00e1ch') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'b\u1ed9 t-shirt|tshirt|t-shirt c\u0169|t-shirt th\u1ec3 thao|t-shirt thi\u1ebft k\u1ebf') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n short gi\u00f3') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n short kaki') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun|qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac|qu\u1ea7n b\u1ed9 polo|qu\u1ea7n b\u1ed9 tshirt|qu\u1ea7n short v\u1ea3i|qu\u1ea7n short \u00e2u') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n short casual') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r's\u01a1 mi c\u1ed9c') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o b\u1ed9 polo|b\u1ed9 polo') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'polo') THEN 'XU\u00c2N H\u00c8'\n      ELSE 'KH\u00d4NG PH\u00c2N LO\u1ea0I' END AS product_group,\nFROM\n    source\n    r1\n    left JOIN source\n    r2\n    ON r1.parentId = r2.categoryId\n    left JOIN source\n    r3\n    ON r2.parentId = r3.categoryId\n    ", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__categories`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.298371Z", "completed_at": "2025-01-22T04:45:21.308731Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.310268Z", "completed_at": "2025-01-22T04:45:21.310278Z"}], "thread_id": "Thread-1", "execution_time": 0.018259525299072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__inventories", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        branchId AS branch_id,\n        productId AS product_id,\n        onhand AS on_hand,\n        reserved,\n        actualReserved AS actual_reserved,\n        maxQuantity AS max_quantity,\n        minQuantity AS min_quantity,\n        _batched_at,\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_webhook_inventory_update`\n\nWHERE 1=1\n\n    and date(_batched_at) >= current_date\n\n\nUNION ALL\nSELECT\n    branchId AS branch_id,\n    productId AS product_id,\n    onhand AS on_hand,\n    reserved,\n    actualReserved AS actual_reserved,\n    maxQuantity AS max_quantity,\n    minQuantity AS min_quantity,\n    _batched_at,\nFROM\n    `agile-scheme-394814`.`KiotViet`.`p_products_inventory__*`\nWHERE 1=1\n\n    and DATE(_batched_at) >= DATE(current_date)\n\n)\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by product_id,branch_id, date(_batched_at)\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__inventories`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.321335Z", "completed_at": "2025-01-22T04:45:21.331858Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.334113Z", "completed_at": "2025-01-22T04:45:21.334123Z"}], "thread_id": "Thread-1", "execution_time": 0.020593643188476562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__transfers_details", "compiled": true, "compiled_code": "\n\n\n\nwith source as (\n    SELECT *\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_transfers_list__*`\n    WHERE\n        1=1\n    \n        and date(dispatchedDate) in (\n            select \n                distinct date(dispatchedDate) \n            from `agile-scheme-394814`.`KiotViet`.`p_transfers_list__*` \n                where parse_date('%Y%m%d',_TABLE_SUFFIX) >= current_date\n            )\n    \n),\n\nraw_ as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\n\nselect\n    dispatchedDate as sent_date,\n    receivedDate as received_date,\n    code as transfer_code,\n    description,\n    fromBranchId as transfer_branch_id,\n    toBranchId as receipt_branch_id,\n    isActive as is_active,\n    case status \n    \n        when 2 then '\u0110ang chuy\u1ec3n'\n    \n        when 3 then '\u0110\u00e3 nh\u1eadn'\n    \n        when 4 then '\u0110\u00e3 h\u1ee7y'\n     end as transfer_status,\n    id as transfer_id,\n    transferDetails.productId as product_id,\n    transferDetails.productCode as product_code,\n    transferDetails.productName as product_name,\n    transferDetails.sendQuantity as send_quantity,\n    transferDetails.receiveQuantity as receive_quantity,\n    transferDetails.sendPrice as send_price,\n    transferDetails.receivePrice as receive_price,\n    transferDetails.price as price,\nfrom raw_\nleft join unnest(transferDetails) transferDetails", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__transfers_details`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.315552Z", "completed_at": "2025-01-22T04:45:21.335078Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.336684Z", "completed_at": "2025-01-22T04:45:21.336691Z"}], "thread_id": "Thread-2", "execution_time": 0.02389049530029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__locations", "compiled": true, "compiled_code": "\n\nWITH source AS (\n        select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_locations_list__*` original\n        group by id\n    )\n)\n\n\n\nSELECT\n    NAME,\n    normalName,\n    regexp_extract(\n        NAME,\n        r'^(.*)\\s-\\s(?:.*)'\n    ) AS province,\n    regexp_extract(\n        NAME,\n        r'^(?:.*)\\s-\\s(.*)'\n    ) AS district,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__locations`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.341134Z", "completed_at": "2025-01-22T04:45:21.354231Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.354908Z", "completed_at": "2025-01-22T04:45:21.354919Z"}], "thread_id": "Thread-1", "execution_time": 0.016523361206054688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__users", "compiled": true, "compiled_code": "\n\nWITH source AS (\n        select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_users_list__*` original\n        group by id\n    )\n)\n\n\nSELECT\n    id as user_id,\n    userName as user_name,\n    givenName as given_name,\n    birthDate as birth_date,\nFROM\n   source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__users`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.345960Z", "completed_at": "2025-01-22T04:45:21.363681Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.364401Z", "completed_at": "2025-01-22T04:45:21.364409Z"}], "thread_id": "Thread-2", "execution_time": 0.0253143310546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__bills", "compiled": true, "compiled_code": "\n\n\n\n\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_bills_*` original\n        group by id\n    )\n)\nSELECT\n    safe_cast(b.id AS int64) AS bill_id,\n    safe_cast(b.relatedBillId AS int64) AS related_bill_id,\n    safe_cast(b.depotId AS int64) AS depot_id,\n    safe_cast(b.orderId AS int64) AS order_id,\n    safe_cast(b.requirementBillId AS int64) AS requirement_bill_id,\n    safe_cast(b.inventoryCheckId AS int64) AS inventory_check_id,\n    DATE(b.date) AS bill_date,\n    b.createdDateTime AS created_date,\n    safe_cast(b.customerId AS int64) AS customer_id,\n    safe_cast(b.saleId AS int64) AS sale_id,\n    CASE b.type\n    \n    WHEN '1' THEN 'Nh\u1eadp kho'\n\n    WHEN '2' THEN 'Xu\u1ea5t kho'\n END AS bill_type,\nCASE b.mode\n\nWHEN '1' THEN 'Giao h\u00e0ng'\n\nWHEN '2' THEN 'B\u00e1n l\u1ebb'\n\nWHEN '3' THEN 'Chuy\u1ec3n kho'\n\nWHEN '4' THEN 'Qu\u00e0 t\u1eb7ng'\n\nWHEN '5' THEN 'Nh\u00e0 cung c\u1ea5p'\n\nWHEN '6' THEN 'B\u00e1n s\u1ec9'\n\nWHEN '8' THEN 'Ki\u1ec3m kho'\n\nWHEN '10' THEN 'Kh\u00e1c'\n END AS bill_mode,\nsafe_cast(b.createdByID AS int64) AS created_by_id,\nsafe_cast(b.technicalId AS int64) AS technical_id,\nb.discount,\nb.points,\nb.usedPoints AS used_points,\nb.money,\nb.saleBonus AS sale_bonus,\nb.moneyTransfer AS money_transfer,\nb.cash,\nb.installmentMoney AS installment_money,\nb.creditMoney AS credit_money,\nb.usedPointsMoney AS money_used_points,\nb.returnFee AS return_fee,\nb.payment,\nb.description,\nb.supplierId AS supplier_id,\nb.couponCode AS coupon_code,\nsafe_cast(b.couponValue AS int64) AS coupon_value,\nsafe_cast(b.customerMoney AS int64) AS customer_money,\nb.moneyReturn AS money_return,\nb.cashAccount AS cash_account,\nb.transferAccount AS transfer_account,\nb.creditCode AS credit_code,\nb.installmentAccount AS installment_account,\nARRAY_AGG(\n    STRUCT(\n        safe_cast(products.id AS int64) AS product_id, \n        products.code AS product_code, \n        products.name AS product_name, \n        safe_cast(products.quantity AS int64) AS quantity, \n        safe_cast(products.price AS int64) AS price, \n        safe_cast(products.discount AS int64) AS discount, \n        safe_cast(products.vat AS int64) AS vat, \n        safe_cast(products.extendedWarrantyMoney AS int64) AS extended_warranty_money\n        )\n) AS products\nFROM\n    source b,\n    unnest(products) products\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__bills`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.357886Z", "completed_at": "2025-01-22T04:45:21.373159Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.374394Z", "completed_at": "2025-01-22T04:45:21.374405Z"}], "thread_id": "Thread-1", "execution_time": 0.017897605895996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__carriers", "compiled": true, "compiled_code": "\n\nWITH source AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_carriers_*` original\n        group by id\n    )\n)\nSELECT\n  safe_cast(\n    carriers.id AS int64\n  ) AS carrier_id,\n  safe_cast(\n    services.id AS int64\n  ) AS service_id,\n  CONCAT(\n    carriers.name,\n    ' - ',\n    services.name\n  ) AS service_name\nFROM\n  source carriers,\n  unnest(services) services", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__carriers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.368086Z", "completed_at": "2025-01-22T04:45:21.373778Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.375359Z", "completed_at": "2025-01-22T04:45:21.375369Z"}], "thread_id": "Thread-2", "execution_time": 0.00874471664428711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__categories", "compiled": true, "compiled_code": "\n\nwith source as (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_categories_*` original\n        group by id\n    )\n)\n\nSELECT\n    c1.code AS category_code_level1,\n    c1.id AS category_id_level1,\n    c1.name AS category_name_level1,\n    c2.code AS category_code_level2,\n    c2.id AS category_id_level2,\n    c2.name AS category_name_level2,\n    c3.code AS category_code_level3,\n    c3.id AS category_id_level3,\n    c3.name AS category_name_level3,\n    c4.code AS category_code_level4,\n    c4.id AS category_id_level4,\n    c4.name AS category_name_level4,\nFROM\n    source\n    c1\n    LEFT JOIN source\n    c2\n    ON c1.id = c2.parentId\n    LEFT JOIN source\n    c3\n    ON c2.id = c3.parentId\n    LEFT JOIN source\n    c4\n    ON c3.id = c4.parentId\nWHERE\n    c1.parentId IS NULL", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__categories`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.380374Z", "completed_at": "2025-01-22T04:45:21.392733Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.393369Z", "completed_at": "2025-01-22T04:45:21.393378Z"}], "thread_id": "Thread-1", "execution_time": 0.015648365020751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__customers", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT\n    *\n  FROM\n    `agile-scheme-394814`.`Nhanhvn`.`p_customers_*`\n  WHERE\n    1 = 1\n\nAND parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(DATE(_dbt_max_partition), INTERVAL -2 DAY)\n\n),\n\ndeduplicate AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\n\nSELECT\n  safe_cast(id AS int64) AS customer_id,\n  NAME AS customer_name,\n  email AS email,\n  mobile AS contact_number,\n  CASE\n    WHEN gender = '1' THEN true\n    WHEN gender = '2' THEN false\n  END AS gender,\n  address,\n  birthday,\n  safe_cast(totalMoney AS int64) AS total_money,\n  DATE(startedDate) AS first_purchase_date,\n  safe_cast(startedDepotId AS int64) AS first_purchase_depot_id,\n  safe_cast(points AS int64) AS points,\n  safe_cast(totalBills AS int64) AS total_bills,\n  DATE(lastBoughtDate) AS last_bought_date,\nFROM\n  deduplicate", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.387721Z", "completed_at": "2025-01-22T04:45:21.401510Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.407272Z", "completed_at": "2025-01-22T04:45:21.407281Z"}], "thread_id": "Thread-2", "execution_time": 0.028896570205688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__depots", "compiled": true, "compiled_code": "\n\nWITH source AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_stores_*` original\n        group by id\n    )\n)\n\nSELECT\n    safe_cast(id as int64) AS depot_id,\n    NAME AS depot_name,\n    mobile AS contact_number,\n    cityName AS city,\n    districtName AS district,\n    address\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__depots`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.396426Z", "completed_at": "2025-01-22T04:45:21.411035Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.434657Z", "completed_at": "2025-01-22T04:45:21.434667Z"}], "thread_id": "Thread-1", "execution_time": 0.03962111473083496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__ordersdetails", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select * from \n    `agile-scheme-394814`.`Nhanhvn`.`p_orders_*`\n    where 1=1\n    and createdDateTime is not null\n    \n    and date(createdDateTime) in (\n        select distinct date(createdDateTime) \n        from `agile-scheme-394814`.`Nhanhvn`.`p_orders_*` \n        where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(current_date, interval -1 day)\n        )\n    \n    \n),\n\ndeduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n),\n\ndeleted_orders as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by orderId desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_webhook_orderDelete` original\n        group by orderId\n    )\n),\n\nsalechannels AS (\n    SELECT\n        *\n    FROM\n        unnest([ \n            struct<sale_channel_id NUMERIC, sale_channel string> \n            (1, 'Admin'), (2, 'Website'), (10, 'API'), \n            (20, 'Facebook'), (21, 'Instagram'), (41, 'Lazada.vn'), (42, 'Shopee.vn'), \n            (43, 'Sendo.vn'), (45, 'Tiki.vn'), (46, 'Zalo Shop'), (47, '1Landing.vn'), \n            (48, 'Tiktok Shop'), (49, 'Zalo OA'), (50, 'Shopee Chat'), (51, 'Lazada Chat')\n            ])\n)\nSELECT\n    safe_cast(orders.id AS int64) AS order_id,\n    orders.shopOrderId AS shop_order_id,\n    farm_fingerprint(salechannels.sale_channel) sales_channel_id,\n    orders.merchantTrackingNumber AS tracking_number,\n    safe_cast(orders.depotId AS int64) AS depot_id,\n    orders.depotName AS depot_name,\n    orders.type AS order_type,\n    safe_cast(orders.moneyDiscount AS int64) AS order_discount,\n    safe_cast(orders.moneyDeposit AS int64) AS money_deposit,\n    safe_cast(orders.moneyTransfer AS int64) AS money_transfer,\n    safe_cast(orders.depositAccount AS int64) AS deposit_account,\n    safe_cast(orders.transferAccount AS int64) AS transfer_account,\n    safe_cast(orders.usedPoints AS int64) AS used_points,\n    safe_cast(orders.moneyUsedPoints AS int64) AS money_used_points,\n    safe_cast(orders.carrierId AS int64) AS carrier_id,\n    safe_cast(orders.serviceId AS int64) AS service_id,\n    orders.carrierCode AS carrier_code,\n    safe_cast(orders.shipFee AS int64) AS ship_fee,\n    safe_cast(orders.codFee AS int64) AS cod_fee,\n    safe_cast(orders.customerShipFee AS int64) AS customer_ship_fee,\n    safe_cast(orders.returnFee AS int64) AS return_fee,\n    safe_cast(orders.overWeightShipFee AS int64) AS overweight_fee,\n    safe_cast(orders.declaredFee AS int64) AS declared_fee,\n    orders.description,\n    safe_cast(orders.customerId AS int64) AS customer_id,\n    orders.customerMobile AS customer_contact_number,\n    ARRAY_TO_STRING([orders.customerWard, orders.customerDistrict, orders.customerCity],', ') AS ship_address,\n    safe_cast(orders.createdById AS int64) AS created_by_id,\n    safe_cast(orders.saleId AS int64) AS sale_id,\n    orders.createdDateTime AS created_date,\n    DATE(nullif(orders.deliveryDate,'0000-00-00')) AS delivery_date,\n    DATE(nullif(orders.sendCarrierDate,'0000-00-00')) AS send_carrier_date,\n    orders.statusName AS order_status,\n    safe_cast(orders.calcTotalMoney AS int64) AS receivables,\n    farm_fingerprint(\n        CASE\n            WHEN COALESCE(orders.trafficSourceName,salechannels.sale_channel) IN ('API','Admin') THEN 'Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n'\n            ELSE COALESCE(orders.trafficSourceName,salechannels.sale_channel)\n        END\n    ) AS traffic_source_id,\n    orders.couponCode AS coupon_code,\n    safe_cast(orders.returnFromOrderId AS int64) return_from_order_id,\n    _batched_at as last_sync,\n    ARRAY_AGG(\n        STRUCT(\n            safe_cast(products.productId AS int64) AS product_id, \n            products.productCode AS product_code, \n            safe_cast(products.price AS int64) AS price, \n            safe_cast(products.quantity AS int64) AS quantity, \n            safe_cast(products.discount AS int64) AS item_discount\n            )\n    ) products,\nFROM\n    deduplicate orders,\n    unnest(products) products\n    LEFT JOIN salechannels\n    ON orders.saleChannel = salechannels.sale_channel_id \n    left join deleted_orders\n    on orders.id = deleted_orders.orderId\n    where deleted_orders.orderId is null\ngroup by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.411663Z", "completed_at": "2025-01-22T04:45:21.437603Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.440019Z", "completed_at": "2025-01-22T04:45:21.440030Z"}], "thread_id": "Thread-2", "execution_time": 0.030536413192749023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__products", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_products_*` original\n        group by idNhanh\n    )\n),\nbase_cat AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_categories_*` original\n        group by id\n    )\n),\ncategory AS (\n  SELECT\n    safe_cast(products.idNhanh AS int64) AS product_id,\n    products.typeName AS type_name,\n    safe_cast(products.avgCost AS int64) AS avg_cost,\n    products.code AS product_code,\n    COALESCE(regexp_extract(products.code, r'[A-Z]{3}(2[1-5])'), \"C\u0169\") AS YEAR,\n    COALESCE(regexp_extract(products.code,r'([A-Za-z0-9-]+)(?:[A-Z]{3}\\d{1,5}$)'),products.code) AS class_code,\n    products.barcode,\n    products.name AS product_name,\n    safe_cast(products.price AS int64) price,\n    products.status AS product_status,\n    categories.name AS category_name,\n    CASE\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 gi\u00f3') THEN 'B\u1ed9 gi\u00f3'\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 vest|vest') THEN 'B\u1ed9 Vest'\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 n\u1ec9') THEN 'B\u1ed9 n\u1ec9'\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 t-shirt|\u00e1o ph\u00f4ng') THEN 'B\u1ed9 T-shirt'\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 polo') THEN 'B\u1ed9 Polo'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n \u00e2u') THEN 'Qu\u1ea7n \u00e2u'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n khaki|kaki') THEN 'Qu\u1ea7n khaki'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n jean') THEN 'Qu\u1ea7n Jean'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n d\u00e0i th\u1ec3 thao|jogger|qu\u1ea7n gi\u00f3') THEN 'Qu\u1ea7n d\u00e0i th\u1ec3 thao'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n n\u1ec9') THEN 'Qu\u1ea7n n\u1ec9 r\u1eddi'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short gi\u00f3') THEN 'Qu\u1ea7n short gi\u00f3'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac') THEN 'Qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun|qu\u1ea7n short th\u1ec3 thao') THEN 'Qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short kaki|qu\u1ea7n short khaki') THEN 'Qu\u1ea7n short kaki'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short casual') THEN 'Qu\u1ea7n short casual'\n      WHEN regexp_contains(LOWER(products.name), r's\u01a1 mi d\u00e0i') THEN 'S\u01a1 Mi D\u00e0i'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o gi\u1eef nhi\u1ec7t') THEN '\u00c1o gi\u1eef nhi\u1ec7t'\n      WHEN regexp_contains(LOWER(products.name), r'polo d\u00e0i tay') THEN '\u00c1o polo d\u00e0i tay'\n      WHEN regexp_contains(LOWER(products.name), r'blazer') THEN '\u00c1o Blazer'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o thun') THEN '\u00c1o thun d\u00e0i tay'\n      WHEN regexp_contains(LOWER(products.name), r'bomber') THEN '\u00c1o Bomber'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o n\u1ec9') THEN '\u00c1o n\u1ec9 r\u1eddi'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o len') THEN '\u00c1o len'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o phao|\u00e1o kho\u00e1c ch\u1ea7n b\u00f4ng|\u00e1o kho\u00e1c l\u00f4ng v\u0169|\u00e1o kho\u00e1c si\u00eau nh\u1eb9|\u00e1o kho\u00e1c phao') THEN '\u00c1o phao'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o gi\u00f3|\u00e1o kho\u00e1c gi\u00f3') THEN '\u00c1o gi\u00f3'\n      WHEN regexp_contains(LOWER(products.name), r'tshirt|t-shirt') THEN 'Tshirt'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o s\u00e1t n\u00e1ch|tanktop|tank top') THEN '\u00c1o s\u00e1t n\u00e1ch'\n      WHEN regexp_contains(LOWER(products.name), r'polo') THEN 'Polo'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o ba l\u1ed7') THEN '\u00c1o ba l\u1ed7'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o ch\u1ed1ng n\u1eafng') THEN '\u00c1o ch\u1ed1ng n\u1eafng'\n      WHEN regexp_contains(LOWER(products.name), r's\u01a1 mi c\u1ed9c') THEN 'S\u01a1 mi c\u1ed9c'\n      WHEN regexp_contains(LOWER(products.name), r't\u1ea5t') THEN 'T\u1ea4T'\n      WHEN regexp_contains(LOWER(products.name), r'ba l\u1ed7') THEN 'BA L\u1ed6 L\u00d3T'\n      WHEN regexp_contains(LOWER(products.name), r'ph\u1ee5 ki\u1ec7n|v\u00ed') THEN 'PH\u1ee4 KI\u1ec6N'\n      WHEN regexp_contains(LOWER(products.name), r's\u1ecbp|qu\u1ea7n l\u00f3t') THEN 'S\u1ecaP'\n      END AS sub_productline\n  FROM\n    source products\n    LEFT JOIN base_cat categories\n    ON products.categoryId = categories.id\n)\nSELECT\n  *,\n  CASE\n    WHEN year = \"custom\" THEN regexp_extract(product_code,r\"{'24': '^(?:[ZXY0]{0,3})([BC0][A-Z]{3}[0-9]{3,5})'}\")\n    WHEN year = \"default\" THEN regexp_extract(product_code,r\"^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})\")\n    ELSE regexp_extract(product_code,r\"^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})\") END AS product_design_code,\n  CASE\n    WHEN LOWER(sub_productline) IN ('\u00e1o blazer') THEN 'abz'\n    WHEN LOWER(sub_productline) IN ('\u00e1o ch\u1ed1ng n\u1eafng') THEN 'acn'\n    WHEN LOWER(sub_productline) IN ('\u00e1o gi\u00f3 b\u1ed9') THEN 'agb'\n    WHEN LOWER(sub_productline) IN ('\u00e1o gi\u1eef nhi\u1ec7t') THEN 'agn'\n    WHEN LOWER(sub_productline) IN ('\u00e1o bomber') THEN 'akb'\n    WHEN LOWER(sub_productline) IN ('\u00e1o phao') THEN 'akc'\n    WHEN LOWER(sub_productline) IN ('\u00e1o kho\u00e1c da') THEN 'akd'\n    WHEN LOWER(sub_productline) IN ('\u00e1o gi\u00f3','b\u1ed9 gi\u00f3') THEN 'akg'\n    WHEN LOWER(sub_productline) IN ('\u00e1o len') THEN 'alo'\n    WHEN LOWER(sub_productline) IN ('\u00e1o n\u1ec9 b\u1ed9') THEN 'anb'\n    WHEN LOWER(sub_productline) IN ('\u00e1o n\u1ec9 r\u1eddi') THEN 'ano'\n    WHEN LOWER(sub_productline) IN ('\u00e1o b\u1ed9 polo') THEN 'apb'\n    WHEN LOWER(sub_productline) IN ('b\u1ed9 polo','polo') THEN 'apc'\n    WHEN LOWER(sub_productline) IN ('\u00e1o polo d\u00e0i tay') THEN 'apd'\n    WHEN LOWER(sub_productline) IN ('\u00e1o thun d\u00e0i tay') THEN 'apo'\n    WHEN LOWER(sub_productline) IN ('b\u1ed9 t-shirt','tshirt','t-shirt c\u0169','t-shirt th\u1ec3 thao','t-shirt thi\u1ebft k\u1ebf','\u00e1o s\u00e1t n\u00e1ch') THEN 'ats'\n    WHEN LOWER(sub_productline) IN ('\u00e1o s\u00e1t n\u00e1ch','\u00e1o ba l\u1ed7') THEN 'att'\n    WHEN LOWER(sub_productline) IN ('\u00e1o vest','b\u1ed9 \u0111\u1ed3','b\u1ed9 vest') THEN 'avb'\n    WHEN LOWER(sub_productline) IN ('b\u1ed9 n\u1ec9') THEN 'bni'\n    WHEN LOWER(sub_productline) IN ('t\u1ea5t','ba l\u1ed7 l\u00f3t','s\u1ecbp','ph\u1ee5 ki\u1ec7n') THEN 'pkn'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n \u00e2u') THEN 'qau'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n jean') THEN 'qbd'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n d\u00e0i th\u1ec3 thao') THEN 'qdt'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n gi\u00f3 b\u1ed9') THEN 'qgb'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n khaki') THEN 'qkd'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n n\u1ec9 b\u1ed9') THEN 'qnb'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n n\u1ec9 r\u1eddi') THEN 'qni'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n short gi\u00f3') THEN 'qsg'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n short kaki') THEN 'qsk'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac','qu\u1ea7n b\u1ed9 polo','qu\u1ea7n b\u1ed9 tshirt','qu\u1ea7n short v\u1ea3i','qu\u1ea7n short \u00e2u') THEN 'qst'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n short casual') THEN 'qsc'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n vest') THEN 'qve'\n    WHEN LOWER(sub_productline) IN ('s\u01a1 mi c\u1ed9c') THEN 'smc'\n    WHEN LOWER(sub_productline) IN ('s\u01a1 mi d\u00e0i') THEN 'smd'\n    END AS ads_product_mapping,\n  CASE\n    WHEN sub_productline IN ('B\u1ed9 gi\u00f3','B\u1ed9 Vest','B\u1ed9 n\u1ec9') THEN 'B\u1ed8 \u0110\u1ed2 - THU \u0110\u00d4NG'\n    WHEN sub_productline IN ('B\u1ed9 T-shirt','B\u1ed9 Polo') THEN 'B\u1ed8 \u0110\u1ed2 - XU\u00c2N H\u00c8'\n    WHEN sub_productline IN ('Qu\u1ea7n \u00e2u','Qu\u1ea7n khaki','Qu\u1ea7n Jean') THEN 'QU\u1ea6N - QUANH N\u0102M'\n    WHEN sub_productline IN ('Qu\u1ea7n n\u1ec9 r\u1eddi','Qu\u1ea7n short gi\u00f3') THEN 'QU\u1ea6N - THU \u0110\u00d4NG'\n    WHEN sub_productline IN ('Qu\u1ea7n short gi\u00f3','Qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','Qu\u1ea7n short kaki','Qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac','Qu\u1ea7n short casual') THEN 'QU\u1ea6N - XU\u00c2N H\u00c8'\n    WHEN sub_productline IN ('S\u01a1 Mi D\u00e0i') THEN '\u00c1O - QUANH N\u0102M'\n    WHEN sub_productline IN ('\u00c1o gi\u1eef nhi\u1ec7t','\u00c1o polo d\u00e0i tay','\u00c1o Blazer','\u00c1o thun d\u00e0i tay','\u00c1o Bomber','\u00c1o n\u1ec9 r\u1eddi','\u00c1o len','\u00c1o phao','\u00c1o gi\u00f3') THEN '\u00c1O - THU \u0110\u00d4NG'\n    WHEN sub_productline IN ('Tshirt','\u00c1o s\u00e1t n\u00e1ch','Polo','\u00c1o ba l\u1ed7','\u00c1o ch\u1ed1ng n\u1eafng','S\u01a1 mi c\u1ed9c') THEN '\u00c1O - XU\u00c2N H\u00c8'\n    WHEN sub_productline IN ('T\u1ea4T','BA L\u1ed6 L\u00d3T','PH\u1ee4 KI\u1ec6N','S\u1ecaP') THEN '\u0110\u1ed2 L\u00d3T, PH\u1ee4 KI\u1ec6N'\n    END AS productline,\nFROM\n  category", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__products`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.164376Z", "completed_at": "2025-01-22T04:45:21.447519Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.449096Z", "completed_at": "2025-01-22T04:45:21.449104Z"}], "thread_id": "Thread-4", "execution_time": 0.289628267288208, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_gsheet__facebook_budget", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n    SELECT\n        *\n    EXCEPT(`ASM - Showroom`)\n    FROM\n        `agile-scheme-394814`.`GSheet`.`_ext_facebook_budget__*`\n    WHERE\n        MONTH >= '2023-11-01' \n    qualify ROW_NUMBER() over (\n            PARTITION BY showroom,\n            MONTH\n            ORDER BY\n                _batched_at DESC\n        ) = 1\n),\nformated AS (\n    SELECT\n        CASE\n            WHEN source.showroom = '5S H\u1ea3i D\u01b0\u01a1ng' THEN '5S H\u1ea3i D\u01b0\u01a1ng 1'\n            WHEN source.showroom = '5S Th\u00e1i Nguy\u00ean 1' THEN '5S Th\u00e1i Nguy\u00ean'\n            WHEN source.showroom = '5S GO' THEN '5S Go Th\u00e1i B\u00ecnh'\n            WHEN source.showroom = '5S H\u00e0 T\u0129nh 1' THEN '5S H\u00e0 T\u0129nh'\n            WHEN source.showroom = '5S Th\u00e1i B\u00ecnh 1' THEN '5S Th\u00e1i b\u00ecnh 1'\n            ELSE source.showroom\n        END AS branch,\n        source.month AS budget_month,\n        \n        ARRAY_AGG(\n            STRUCT(\n                milestones.start,\n                milestones.end,\n                milestones.value,\n                regexp_extract(milestones.key,r'^(.*) -') AS milestone_name,\n                CASE\n                    LOWER(regexp_extract(milestones.key, r'- ([^()]+)$')) \n                    WHEN 'ng\u00e2n s\u00e1ch' THEN 'budget'\n                    WHEN 'doanh s\u1ed1' THEN 'sales_target'\n                    WHEN 'l\u01b0\u1ee3t kh\u00e1ch' THEN 'traffic_target'\n                    WHEN 'gttb/kh' THEN 'aov'\n                    END AS budget_type\n            )\n        ) AS milestones\n    FROM\n        source,\n        unnest(milestones) milestones \n        group by 1,2\n)\nSELECT\n    formated.*,\n    \n    \n    \n    \nFROM\n    formated \n    \n    ", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__facebook_budget`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.441084Z", "completed_at": "2025-01-22T04:45:21.450078Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.452222Z", "completed_at": "2025-01-22T04:45:21.452233Z"}], "thread_id": "Thread-1", "execution_time": 0.01545858383178711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__sales_channels", "compiled": true, "compiled_code": "\n\n\n\nSELECT\n    distinct *\nFROM\n    unnest([ struct <channel string, channel_id int64>\n     \n    ('Admin', farm_fingerprint('Admin')) ,\n     \n    ('Website', farm_fingerprint('Website')) ,\n     \n    ('API', farm_fingerprint('API')) ,\n     \n    ('Facebook', farm_fingerprint('Facebook')) ,\n     \n    ('Instagram', farm_fingerprint('Instagram')) ,\n     \n    ('Lazada.vn', farm_fingerprint('Lazada.vn')) ,\n     \n    ('Shopee.vn', farm_fingerprint('Shopee.vn')) ,\n     \n    ('Sendo.vn', farm_fingerprint('Sendo.vn')) ,\n     \n    ('Tiki.vn', farm_fingerprint('Tiki.vn')) ,\n     \n    ('Zalo Shop', farm_fingerprint('Zalo Shop')) ,\n     \n    ('1Landing.vn', farm_fingerprint('1Landing.vn')) ,\n     \n    ('Tiktok Shop', farm_fingerprint('Tiktok Shop')) ,\n     \n    ('Zalo OA', farm_fingerprint('Zalo OA')) ,\n     \n    ('Shopee Chat', farm_fingerprint('Shopee Chat')) ,\n     \n    ('Lazada Chat', farm_fingerprint('Lazada Chat')) ,\n     \n    ('Website', farm_fingerprint('Website')) ,\n     \n    ('S\u00e0n', farm_fingerprint('S\u00e0n')) ,\n     \n    ('FB - WEB', farm_fingerprint('FB - WEB')) ,\n     \n    ('Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n', farm_fingerprint('Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n')) \n    \n    ])", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__sales_channels`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.453189Z", "completed_at": "2025-01-22T04:45:21.461436Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.470485Z", "completed_at": "2025-01-22T04:45:21.470497Z"}], "thread_id": "Thread-2", "execution_time": 0.022294282913208008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__users", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_users_*` original\n        group by id\n    )\n)\n\nSELECT\n    safe_cast(id as int64) AS user_id,\n    userName AS user_name,\n    email AS email,\n    mobile AS contact_number,\n    roleName AS role,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__users`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.462789Z", "completed_at": "2025-01-22T04:45:21.478009Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.479466Z", "completed_at": "2025-01-22T04:45:21.479478Z"}], "thread_id": "Thread-4", "execution_time": 0.0206298828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pagespeed__metrics", "compiled": true, "compiled_code": "\n\n\n\n\n\nWITH source AS (\n    SELECT\n        url,\n        strategy,\n        DATE(_batched_at) AS analysis_date,\n        JSON_VALUE(data,'$.loadingExperience.overall_category') AS overall_speed_category,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.accessibility.score') as float64) AS accessibility_score,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.best-practices.score') as float64) AS best_practices_score,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.performance.score') as float64) AS performance_score,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.pwa.score') as float64) AS pwa_score,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.seo.score') as float64) AS seo_score,\n        \n        \n        json_extract(data,'$.loadingExperience.metrics.CUMULATIVE_LAYOUT_SHIFT_SCORE') AS CUMULATIVE_LAYOUT_SHIFT_SCORE,\n        \n        json_extract(data,'$.loadingExperience.metrics.EXPERIMENTAL_TIME_TO_FIRST_BYTE') AS EXPERIMENTAL_TIME_TO_FIRST_BYTE,\n        \n        json_extract(data,'$.loadingExperience.metrics.FIRST_CONTENTFUL_PAINT_MS') AS FIRST_CONTENTFUL_PAINT_MS,\n        \n        json_extract(data,'$.loadingExperience.metrics.FIRST_INPUT_DELAY_MS') AS FIRST_INPUT_DELAY_MS,\n        \n        json_extract(data,'$.loadingExperience.metrics.INTERACTION_TO_NEXT_PAINT') AS INTERACTION_TO_NEXT_PAINT,\n        \n        json_extract(data,'$.loadingExperience.metrics.LARGEST_CONTENTFUL_PAINT_MS') AS LARGEST_CONTENTFUL_PAINT_MS,\n        \n    FROM\n        (select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`PageSpeedInsights`.`PageSpeedInsights` original\n        group by url,strategy,date(_batched_at)\n    ))\n),\npreprocess AS (\n    SELECT\n        *\n    FROM\n        source unpivot(\n            metrics FOR metric_name IN (CUMULATIVE_LAYOUT_SHIFT_SCORE,EXPERIMENTAL_TIME_TO_FIRST_BYTE,FIRST_CONTENTFUL_PAINT_MS,FIRST_INPUT_DELAY_MS,INTERACTION_TO_NEXT_PAINT,LARGEST_CONTENTFUL_PAINT_MS)\n            )\n)\nSELECT\n    * EXCEPT(distributions,metrics),\n    json_value(metrics,'$.category') metric_category,\n    cast(json_value(metrics,'$.percentile') as float64) metric_percentile_value,\n    json_value(distributions,'$.min') || COALESCE('-' || json_value(distributions, '$.max'), '+') AS metric_range,\n    cast(json_value(distributions,'$.proportion') as float64) AS range_proportion,\n    CASE\n        WHEN CAST(json_value(distributions, '$.min') AS int64) = 0 THEN 'FAST'\n        WHEN json_value(distributions,'$.max') IS NULL THEN 'SLOW'\n        ELSE 'AVERAGE'\n    END AS range_distribution_category\nFROM\n    preprocess,\n    unnest(json_extract_array(metrics, '$.distributions')) distributions", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pagespeed__metrics`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.473048Z", "completed_at": "2025-01-22T04:45:21.481077Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.489863Z", "completed_at": "2025-01-22T04:45:21.489871Z"}], "thread_id": "Thread-1", "execution_time": 0.02787470817565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__customer_engagements", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_customer_engagements__*` original\n        group by hour,page_id\n    )\n)\nSELECT\n    source.comment,\n    source.hour,\n    source.inbox,\n    source.new_customer,\n    source.new_customer_from_inbox,\n    source.old_order_count,\n    source.order_count,\n    source.total,\n    source.page_id,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__customer_engagements`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.482677Z", "completed_at": "2025-01-22T04:45:21.493223Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.501057Z", "completed_at": "2025-01-22T04:45:21.501068Z"}], "thread_id": "Thread-2", "execution_time": 0.02246570587158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__orders", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_pos_orders__*` original\n        group by id,shop_id\n    )\n)\n\nselect \nsource.page_id,\nsource.id as order_id,\nsource.shop_id,\ncase source.status\n\nwhen 0 then 'M\u1edbi'\n\nwhen 17 then 'Ch\u1edd x\u00e1c nh\u1eadn'\n\nwhen 11 then 'Ch\u1edd h\u00e0ng'\n\nwhen 12 then 'Ch\u1edd in'\n\nwhen 13 then '\u0110\u00e3 in'\n\nwhen 20 then '\u0110\u00e3 \u0111\u1eb7t h\u00e0ng'\n\nwhen 1 then '\u0110\u00e3 x\u00e1c nh\u1eadn'\n\nwhen 8 then '\u0110ang \u0111\u00f3ng h\u00e0ng'\n\nwhen 9 then 'Ch\u1edd chuy\u1ec3n h\u00e0ng'\n\nwhen 2 then '\u0110\u00e3 g\u1eedi h\u00e0ng'\n\nwhen 3 then '\u0110\u00e3 nh\u1eadn'\n\nwhen 16 then '\u0110\u00e3 thu ti\u1ec1n'\n\nwhen 4 then '\u0110ang tr\u1ea3 h\u00e0ng'\n\nwhen 15 then 'Ho\u00e0n 1 ph\u1ea7n'\n\nwhen 5 then '\u0110\u00e3 ho\u00e0n'\n\nwhen 6 then '\u0110\u00e3 h\u1ee7y'\n\nwhen 7 then '\u0110\u00e3 x\u00f3a'\n\nwhen 10 then '\u0110\u01a1n Webcake'\n\nwhen 21 then '\u0110\u01a1n Storecake'\n\nend as status,\nsource.shipping_address.*,\nsource.bill_phone_number as phone_number,\nsource.assigning_seller_id as seller_id,\ndatetime_add(datetime(source.inserted_at), interval 7 hour) inserted_at,\ndatetime_add(datetime(source.updated_at), interval 7 hour) updated_at,\nsource.customer.customer_id as customer_id,\nsource.conversation_id,\nsource.total_price_after_sub_discount,\nsource.total_price,\nsource.time_assign_seller as seller_assigned_at,\nsource.p_utm_campaign,\nsource.p_utm_medium,\nsource.p_utm_source,\nsource.p_utm_term,\nsource.p_utm_content,\nfrom source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.493859Z", "completed_at": "2025-01-22T04:45:21.503898Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.512045Z", "completed_at": "2025-01-22T04:45:21.512057Z"}], "thread_id": "Thread-4", "execution_time": 0.0212709903717041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__page_stats", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_page_stats__*` original\n        group by hour,page_id\n    )\n)\nSELECT\n    source.customer_comment_count,\n    source.customer_inbox_count,\n    source.hour,\n    source.inbox_interactive_count,\n    source.new_customer_count,\n    source.new_inbox_count,\n    source.page_comment_count,\n    source.page_inbox_count,\n    source.phone_number_count,\n    source.today_uniq_website_referral,\n    source.today_website_guest_referral,\n    source.uniq_phone_number_count,\n    source.page_id,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__page_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.506468Z", "completed_at": "2025-01-22T04:45:21.513847Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.520062Z", "completed_at": "2025-01-22T04:45:21.520073Z"}], "thread_id": "Thread-1", "execution_time": 0.02110004425048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__pages", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_pages__*` original\n        group by id\n    )\n)\nSELECT\n    source.avatar_url,\n    source.business,\n    source.connected,\n    source.id AS page_id,\n    source.last_global_id_crawl,\n    source.name AS page_name,\n    source.need_fix_webhook,\n    source.page_content_sync_group_id,\n    source.role_in_page,\n    source.shop_id,\n    source.special_feature,\n    source.timezone,\n    source.username,\n    source.status,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__pages`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.515240Z", "completed_at": "2025-01-22T04:45:21.522616Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.524685Z", "completed_at": "2025-01-22T04:45:21.524696Z"}], "thread_id": "Thread-2", "execution_time": 0.013443946838378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__user_stats", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_user_stats__*` original\n        group by page_id,user_id,hour\n    )\n)\nSELECT\nsource.hour,\nsource.page_id,\nsource.user_id,\nsource.average_response_time,\nsource.comment_count,\nsource.hour_in_integer,\nsource.inbox_count,\nsource.order_count,\nsource.phone_number_count,\nsource.private_reply_count,\nsource.unique_comment_count,\nsource.unique_inbox_count,\nFROM\n    source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__user_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.525660Z", "completed_at": "2025-01-22T04:45:21.536871Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.539111Z", "completed_at": "2025-01-22T04:45:21.539122Z"}], "thread_id": "Thread-4", "execution_time": 0.018184185028076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__users", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_users__*` original\n        group by id\n    )\n)\nselect \nsource.id as user_id, \nsource.name as user_name,\nsource.email as user_email\nfrom source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__users`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.531788Z", "completed_at": "2025-01-22T04:45:21.546585Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.548065Z", "completed_at": "2025-01-22T04:45:21.548076Z"}], "thread_id": "Thread-1", "execution_time": 0.02418351173400879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_sp__daily_performance", "compiled": true, "compiled_code": "\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`SHOPEE`.`ad_daily_performance` original\n        group by json_value(data, \"$.date\")\n    )\n)\nSELECT\n    parse_date('%d-%m-%Y',json_value(s.data,'$.date')) as date,\n    safe_cast(json_value(s.data,'$.impression') as float64) as impression,\n    safe_cast(json_value(s.data,'$.clicks') as float64) as clicks,\n    safe_cast(json_value(s.data,'$.expense') as float64) as expense,\n    safe_cast(json_value(s.data,'$.broad_order') as float64) as broad_order,\n    safe_cast(json_value(s.data,'$.broad_gmv') as float64) as broad_gmv,\n    safe_cast(json_value(s.data,'$.broad_item_sold') as float64) as broad_item_sold,\n    safe_cast(json_value(s.data,'$.broad_roas') as float64) as broad_roas,\n    safe_cast(json_value(s.data,'$.direct_order') as float64) as direct_order,\n    safe_cast(json_value(s.data,'$.direct_gmv') as float64) as direct_gmv,\n    safe_cast(json_value(s.data,'$.direct_item_sold') as float64) as direct_item_sold,\n    safe_cast(json_value(s.data,'$.direct_roas') as float64) as direct_roas,\n    safe_cast(json_value(s.data,'$.broad_conversions') as float64) as broad_conversions,\n    safe_cast(json_value(s.data,'$.direct_conversions') as float64) as direct_conversions,\n    safe_cast(json_value(s.data,'$.cost_per_conversion') as float64) as cost_per_conversion,\nFROM\n    source s", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_sp__daily_performance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.541764Z", "completed_at": "2025-01-22T04:45:21.549687Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.555556Z", "completed_at": "2025-01-22T04:45:21.555565Z"}], "thread_id": "Thread-2", "execution_time": 0.017247438430786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_sp__hourly_performance", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`SHOPEE`.`ad_hourly_performance` original\n        group by json_value(data, \"$.date\"), json_value(data, \"$.hour\")\n    )\n)\nSELECT\n    parse_date('%d-%m-%Y',json_value(s.data,'$.date')) as date,\n    safe_cast(json_value(s.data,'$.impression') as float64) as impression,\n    safe_cast(json_value(s.data,'$.clicks') as float64) as clicks,\n    safe_cast(json_value(s.data,'$.expense') as float64) as expense,\n    safe_cast(json_value(s.data,'$.broad_order') as float64) as broad_order,\n    safe_cast(json_value(s.data,'$.broad_gmv') as float64) as broad_gmv,\n    safe_cast(json_value(s.data,'$.broad_item_sold') as float64) as broad_item_sold,\n    safe_cast(json_value(s.data,'$.broad_roas') as float64) as broad_roas,\n    safe_cast(json_value(s.data,'$.direct_order') as float64) as direct_order,\n    safe_cast(json_value(s.data,'$.direct_gmv') as float64) as direct_gmv,\n    safe_cast(json_value(s.data,'$.direct_item_sold') as float64) as direct_item_sold,\n    safe_cast(json_value(s.data,'$.direct_roas') as float64) as direct_roas,\n    safe_cast(json_value(s.data,'$.broad_conversions') as float64) as broad_conversions,\n    safe_cast(json_value(s.data,'$.direct_conversions') as float64) as direct_conversions,\n    safe_cast(json_value(s.data,'$.cost_per_conversion') as float64) as cost_per_conversion,\n    safe_cast(json_value(s.data, '$.hour') as int64) as hour,\nFROM\n    source s", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_sp__hourly_performance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.551094Z", "completed_at": "2025-01-22T04:45:21.558787Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.569111Z", "completed_at": "2025-01-22T04:45:21.569121Z"}], "thread_id": "Thread-4", "execution_time": 0.021971464157104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_sp__items", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`SHOPEE`.`item_list` original\n        group by json_value(data,\"$.item_id\")\n    )\n)\n\nselect \njson_value(o.data,'$.item_id') as item_id,\njson_value(o.data,'$.item_name') as item_name,\njson_value(o.data,'$.item_sku') as item_sku,\njson_value(o.data,'$.item_status') as item_status,\njson_value(o.data,'$.category_id') as category_id,\njson_value(o.data,'$.brand.brand_id') as brand_id,\njson_value(o.data,'$.brand.original_brand_name') as brand_name,\n\nfrom source o", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_sp__items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.560077Z", "completed_at": "2025-01-22T04:45:21.571672Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.587246Z", "completed_at": "2025-01-22T04:45:21.587258Z"}], "thread_id": "Thread-1", "execution_time": 0.030853748321533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_sp__orders", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`SHOPEE`.`order_list` original\n        group by json_value(data,\"$.order_sn\")\n    )\n)\n\nselect \ncase \n    when nullif(json_value(o.data,'$.cancel_by'),\"\") =\"buyer\" then \"Ng\u01b0\u1eddi d\u00f9ng\" \n    when nullif(json_value(o.data,'$.cancel_by'),\"\") =\"system\" then \"H\u1ec7 th\u1ed1ng\" \n    end as cancel_by,\ncase when nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Need to Change Delivery Address\" then \"Thay \u0111\u1ed5i \u0111\u1ecba ch\u1ec9 giao h\u00e0ng\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Don't Want to Buy Anymore\" then \"Kh\u00f4ng c\u00f2n nhu c\u1ea7u\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Modify existing order (colour, size, address, voucher, etc.)\" then \"Thay \u0111\u1ed5i th\u00f4ng tin \u0111\u01a1n h\u00e0ng \u0111\u00e3 c\u00f3\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Need to Modify Order\" then \"C\u1ea7n thay \u0111\u1ed5i th\u00f4ng tin \u0111\u01a1n h\u00e0ng\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Need to input / Change Voucher Code\" then \"Th\u00eam/\u0111\u1ed5i m\u00e3 khuy\u1ebfn m\u1ea1i\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Others\" then \"Kh\u00e1c\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Others / change of mind\" then \"Kh\u00e1c/ \u0110\u1ed5i \u00fd\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Unpaid Order\" then \"Ch\u01b0a thanh to\u00e1n\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Failed Delivery\" then \"Giao th\u1ea5t b\u1ea1i\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Payment Procedure too Troublesome\" then \"L\u1ed7i thanh to\u00e1n\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Need to change delivery address\" then \"Thay \u0111\u1ed5i \u0111\u1ecba ch\u1ec9 giao h\u00e0ng\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Found Cheaper Elsewhere\" then \"T\u00ecm th\u1ea5y s\u1ea3n ph\u1ea9m gi\u00e1 th\u1ea5p h\u01a1n\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Other\" then \"Kh\u00e1c\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Seller is not responsive to my inquiries\" then \"Ng\u01b0\u1eddi b\u00e1n kh\u00f4ng ph\u1ea3n h\u1ed3i\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Unsuccessful / Rejected Payment\" then \"Thanh to\u00e1n kh\u00f4ng th\u00e0nh c\u00f4ng/b\u1ecb t\u1eeb ch\u1ed1i\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Seller did not Ship\" then \"Ng\u01b0\u1eddi b\u00e1n kh\u00f4ng giao h\u00e0ng\"\nend as cancel_reason,\ndate_add(timestamp_seconds(safe_cast(json_value(o.data,'$.create_time') as int64)),interval 7 hour) as create_time,\ndate_add(timestamp_seconds(safe_cast(json_value(o.data,'$.update_time') as int64)), interval 7 hour) as update_time,\nsafe_cast(json_value(o.data,'$.total_amount') as float64) as total_amount,\njson_value(o.data,'$.order_sn') as order_sn,\ncase  when json_value(o.data,'$.order_status') in (\"READY_TO_SHIP\",\"PROCESSED\",\"RETRY_SHIP\",\"SHIPPED\") then \"SHIPPED\"\nwhen json_value(o.data,'$.order_status') in (\"CANCELLED\",\"IN_CANCEL\") then \"CANCELLED\"\nwhen json_value(o.data,'$.order_status') in (\"TO_RETURN\") then \"TO_RETURN\"\nwhen json_value(o.data,'$.order_status') in (\"COMPLETED\") then \"COMPLETED\"\nwhen json_value(o.data,'$.order_status') in (\"UNPAID\") then \"UNPAID\"\nwhen json_value(o.data,'$.order_status') in (\"TO_CONFIRM_RECEIVE\") then \"TO_CONFIRM_RECEIVE\"\nend as order_status,\njson_value(o.data,'$.payment_method') as payment_method,\njson_extract_array(o.data,'$.item_list') item_list,\njson_extract_array(o.data,'$.package_list') package_list,\nfrom source o", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_sp__orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.572256Z", "completed_at": "2025-01-22T04:45:21.595022Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.596859Z", "completed_at": "2025-01-22T04:45:21.596870Z"}], "thread_id": "Thread-2", "execution_time": 0.03756880760192871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_tiktokads__ad_insights", "compiled": true, "compiled_code": "\n\n\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Tiktok`.`p_ad_report_daily__*` original\n        group by JSON_VALUE(data, '$.dimensions.ad_id'),JSON_VALUE(data, '$.dimensions.stat_time_day')\n    )\n),\nunnested_keys AS (\n    SELECT\n        json_value(\n                DATA,\n                '$.dimensions.ad_id'\n            ) AS ad_id,json_value(\n                DATA,\n                '$.dimensions.stat_time_day'\n            ) AS stat_time_day,safe_cast(json_value(DATA, '$.metrics.adgroup_id') AS string) AS adgroup_id,\n            safe_cast(json_value(DATA, '$.metrics.adgroup_name') AS string) AS adgroup_name,\n            safe_cast(json_value(DATA, '$.metrics.advertiser_id') AS string) AS advertiser_id,\n            safe_cast(json_value(DATA, '$.metrics.advertiser_name') AS string) AS advertiser_name,\n            safe_cast(json_value(DATA, '$.metrics.campaign_id') AS string) AS campaign_id,\n            safe_cast(json_value(DATA, '$.metrics.campaign_name') AS string) AS campaign_name,\n            safe_cast(json_value(DATA, '$.metrics.placement_type') AS string) AS placement_type,\n            safe_cast(json_value(DATA, '$.metrics.objective_type') AS string) AS objective_type,\n            safe_cast(json_value(DATA, '$.metrics.add_to_wishlist') AS float64) AS add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.add_to_wishlist_rate') AS float64) AS add_to_wishlist_rate,\n            safe_cast(json_value(DATA, '$.metrics.app_event_add_to_cart') AS float64) AS app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.app_event_add_to_cart_rate') AS float64) AS app_event_add_to_cart_rate,\n            safe_cast(json_value(DATA, '$.metrics.average_video_play') AS float64) AS average_video_play,\n            safe_cast(json_value(DATA, '$.metrics.average_video_play_per_user') AS float64) AS average_video_play_per_user,\n            safe_cast(json_value(DATA, '$.metrics.checkout') AS float64) AS checkout,\n            safe_cast(json_value(DATA, '$.metrics.checkout_rate') AS float64) AS checkout_rate,\n            safe_cast(json_value(DATA, '$.metrics.clicks') AS float64) AS clicks,\n            safe_cast(json_value(DATA, '$.metrics.comments') AS float64) AS comments,\n            safe_cast(json_value(DATA, '$.metrics.complete_payment') AS float64) AS complete_payment,\n            safe_cast(json_value(DATA, '$.metrics.complete_payment_rate') AS float64) AS complete_payment_rate,\n            safe_cast(json_value(DATA, '$.metrics.conversion') AS float64) AS conversion,\n            safe_cast(json_value(DATA, '$.metrics.conversion_rate') AS float64) AS conversion_rate,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_1000_reached') AS float64) AS cost_per_1000_reached,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_add_to_wishlist') AS float64) AS cost_per_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_app_event_add_to_cart') AS float64) AS cost_per_app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_checkout') AS float64) AS cost_per_checkout,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_complete_payment') AS float64) AS cost_per_complete_payment,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_conversion') AS float64) AS cost_per_conversion,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_cta_purchase') AS float64) AS cost_per_cta_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_cta_registration') AS float64) AS cost_per_cta_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_download_start') AS float64) AS cost_per_download_start,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_initiate_checkout') AS float64) AS cost_per_initiate_checkout,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_on_web_add_to_wishlist') AS float64) AS cost_per_on_web_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_page_event_search') AS float64) AS cost_per_page_event_search,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_product_details_page_browse') AS float64) AS cost_per_product_details_page_browse,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_purchase') AS float64) AS cost_per_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_registration') AS float64) AS cost_per_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_result') AS float64) AS cost_per_result,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_secondary_goal_result') AS float64) AS cost_per_secondary_goal_result,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_add_to_wishlist') AS float64) AS cost_per_total_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_app_event_add_to_cart') AS float64) AS cost_per_total_app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_checkout') AS float64) AS cost_per_total_checkout,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_purchase') AS float64) AS cost_per_total_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_registration') AS float64) AS cost_per_total_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_view_content') AS float64) AS cost_per_total_view_content,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_user_registration') AS float64) AS cost_per_user_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_view_content') AS float64) AS cost_per_view_content,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_vta_conversion') AS float64) AS cost_per_vta_conversion,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_vta_purchase') AS float64) AS cost_per_vta_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_vta_registration') AS float64) AS cost_per_vta_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_web_event_add_to_cart') AS float64) AS cost_per_web_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.cpc') AS float64) AS cpc,\n            safe_cast(json_value(DATA, '$.metrics.cpm') AS float64) AS cpm,\n            safe_cast(json_value(DATA, '$.metrics.cta_app_install') AS float64) AS cta_app_install,\n            safe_cast(json_value(DATA, '$.metrics.cta_conversion') AS float64) AS cta_conversion,\n            safe_cast(json_value(DATA, '$.metrics.cta_purchase') AS float64) AS cta_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cta_registration') AS float64) AS cta_registration,\n            safe_cast(json_value(DATA, '$.metrics.ctr') AS float64) AS ctr,\n            safe_cast(json_value(DATA, '$.metrics.download_start') AS float64) AS download_start,\n            safe_cast(json_value(DATA, '$.metrics.download_start_rate') AS float64) AS download_start_rate,\n            safe_cast(json_value(DATA, '$.metrics.dpa_target_audience_type') AS float64) AS dpa_target_audience_type,\n            safe_cast(json_value(DATA, '$.metrics.engaged_view') AS float64) AS engaged_view,\n            safe_cast(json_value(DATA, '$.metrics.engaged_view_15s') AS float64) AS engaged_view_15s,\n            safe_cast(json_value(DATA, '$.metrics.follows') AS float64) AS follows,\n            safe_cast(json_value(DATA, '$.metrics.impressions') AS float64) AS impressions,\n            safe_cast(json_value(DATA, '$.metrics.initiate_checkout') AS float64) AS initiate_checkout,\n            safe_cast(json_value(DATA, '$.metrics.initiate_checkout_rate') AS float64) AS initiate_checkout_rate,\n            safe_cast(json_value(DATA, '$.metrics.likes') AS float64) AS likes,\n            safe_cast(json_value(DATA, '$.metrics.on_web_add_to_wishlist') AS float64) AS on_web_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.on_web_add_to_wishlist_per_click') AS float64) AS on_web_add_to_wishlist_per_click,\n            safe_cast(json_value(DATA, '$.metrics.page_event_search') AS float64) AS page_event_search,\n            safe_cast(json_value(DATA, '$.metrics.page_event_search_rate') AS float64) AS page_event_search_rate,\n            safe_cast(json_value(DATA, '$.metrics.product_details_page_browse') AS float64) AS product_details_page_browse,\n            safe_cast(json_value(DATA, '$.metrics.product_details_page_browse_rate') AS float64) AS product_details_page_browse_rate,\n            safe_cast(json_value(DATA, '$.metrics.profile_visits') AS float64) AS profile_visits,\n            safe_cast(json_value(DATA, '$.metrics.purchase') AS float64) AS purchase,\n            safe_cast(json_value(DATA, '$.metrics.purchase_rate') AS float64) AS purchase_rate,\n            safe_cast(json_value(DATA, '$.metrics.reach') AS float64) AS reach,\n            safe_cast(json_value(DATA, '$.metrics.real_time_conversion') AS float64) AS real_time_conversion,\n            safe_cast(json_value(DATA, '$.metrics.real_time_conversion_rate') AS float64) AS real_time_conversion_rate,\n            safe_cast(json_value(DATA, '$.metrics.real_time_cost_per_conversion') AS float64) AS real_time_cost_per_conversion,\n            safe_cast(json_value(DATA, '$.metrics.real_time_cost_per_result') AS float64) AS real_time_cost_per_result,\n            safe_cast(json_value(DATA, '$.metrics.real_time_result') AS float64) AS real_time_result,\n            safe_cast(json_value(DATA, '$.metrics.real_time_result_rate') AS float64) AS real_time_result_rate,\n            safe_cast(json_value(DATA, '$.metrics.registration') AS float64) AS registration,\n            safe_cast(json_value(DATA, '$.metrics.registration_rate') AS float64) AS registration_rate,\n            safe_cast(json_value(DATA, '$.metrics.result') AS float64) AS result,\n            safe_cast(json_value(DATA, '$.metrics.result_rate') AS float64) AS result_rate,\n            safe_cast(json_value(DATA, '$.metrics.sales_lead') AS float64) AS sales_lead,\n            safe_cast(json_value(DATA, '$.metrics.secondary_goal_result') AS float64) AS secondary_goal_result,\n            safe_cast(json_value(DATA, '$.metrics.secondary_goal_result_rate') AS float64) AS secondary_goal_result_rate,\n            safe_cast(json_value(DATA, '$.metrics.shares') AS float64) AS shares,\n            safe_cast(json_value(DATA, '$.metrics.skan_sales_lead') AS float64) AS skan_sales_lead,\n            safe_cast(json_value(DATA, '$.metrics.skan_total_sales_lead') AS float64) AS skan_total_sales_lead,\n            safe_cast(json_value(DATA, '$.metrics.skan_total_sales_lead_value') AS float64) AS skan_total_sales_lead_value,\n            safe_cast(json_value(DATA, '$.metrics.spend') AS float64) AS spend,\n            safe_cast(json_value(DATA, '$.metrics.total_active_pay_roas') AS float64) AS total_active_pay_roas,\n            safe_cast(json_value(DATA, '$.metrics.total_add_to_wishlist') AS float64) AS total_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.total_add_to_wishlist_value') AS float64) AS total_add_to_wishlist_value,\n            safe_cast(json_value(DATA, '$.metrics.total_app_event_add_to_cart') AS float64) AS total_app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.total_app_event_add_to_cart_value') AS float64) AS total_app_event_add_to_cart_value,\n            safe_cast(json_value(DATA, '$.metrics.total_checkout') AS float64) AS total_checkout,\n            safe_cast(json_value(DATA, '$.metrics.total_checkout_value') AS float64) AS total_checkout_value,\n            safe_cast(json_value(DATA, '$.metrics.total_complete_payment_rate') AS float64) AS total_complete_payment_rate,\n            safe_cast(json_value(DATA, '$.metrics.total_download_start_value') AS float64) AS total_download_start_value,\n            safe_cast(json_value(DATA, '$.metrics.total_initiate_checkout_value') AS float64) AS total_initiate_checkout_value,\n            safe_cast(json_value(DATA, '$.metrics.total_on_web_add_to_wishlist_value') AS float64) AS total_on_web_add_to_wishlist_value,\n            safe_cast(json_value(DATA, '$.metrics.total_page_event_search_value') AS float64) AS total_page_event_search_value,\n            safe_cast(json_value(DATA, '$.metrics.total_product_details_page_browse_value') AS float64) AS total_product_details_page_browse_value,\n            safe_cast(json_value(DATA, '$.metrics.total_purchase') AS float64) AS total_purchase,\n            safe_cast(json_value(DATA, '$.metrics.total_purchase_value') AS float64) AS total_purchase_value,\n            safe_cast(json_value(DATA, '$.metrics.total_registration') AS float64) AS total_registration,\n            safe_cast(json_value(DATA, '$.metrics.total_sales_lead') AS float64) AS total_sales_lead,\n            safe_cast(json_value(DATA, '$.metrics.total_sales_lead_value') AS float64) AS total_sales_lead_value,\n            safe_cast(json_value(DATA, '$.metrics.total_user_registration_value') AS float64) AS total_user_registration_value,\n            safe_cast(json_value(DATA, '$.metrics.total_view_content') AS float64) AS total_view_content,\n            safe_cast(json_value(DATA, '$.metrics.total_view_content_value') AS float64) AS total_view_content_value,\n            safe_cast(json_value(DATA, '$.metrics.total_web_event_add_to_cart_value') AS float64) AS total_web_event_add_to_cart_value,\n            safe_cast(json_value(DATA, '$.metrics.user_registration') AS float64) AS user_registration,\n            safe_cast(json_value(DATA, '$.metrics.user_registration_rate') AS float64) AS user_registration_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_checkout') AS float64) AS value_per_checkout,\n            safe_cast(json_value(DATA, '$.metrics.value_per_complete_payment') AS float64) AS value_per_complete_payment,\n            safe_cast(json_value(DATA, '$.metrics.value_per_download_start') AS float64) AS value_per_download_start,\n            safe_cast(json_value(DATA, '$.metrics.value_per_initiate_checkout') AS float64) AS value_per_initiate_checkout,\n            safe_cast(json_value(DATA, '$.metrics.value_per_on_web_add_to_wishlist') AS float64) AS value_per_on_web_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.value_per_page_event_search') AS float64) AS value_per_page_event_search,\n            safe_cast(json_value(DATA, '$.metrics.value_per_product_details_page_browse') AS float64) AS value_per_product_details_page_browse,\n            safe_cast(json_value(DATA, '$.metrics.value_per_total_add_to_wishlist') AS float64) AS value_per_total_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.value_per_total_app_event_add_to_cart') AS float64) AS value_per_total_app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.value_per_total_purchase') AS float64) AS value_per_total_purchase,\n            safe_cast(json_value(DATA, '$.metrics.value_per_total_view_content') AS float64) AS value_per_total_view_content,\n            safe_cast(json_value(DATA, '$.metrics.value_per_user_registration') AS float64) AS value_per_user_registration,\n            safe_cast(json_value(DATA, '$.metrics.value_per_web_event_add_to_cart') AS float64) AS value_per_web_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.video_play_actions') AS float64) AS video_play_actions,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p100') AS float64) AS video_views_p100,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p25') AS float64) AS video_views_p25,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p50') AS float64) AS video_views_p50,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p75') AS float64) AS video_views_p75,\n            safe_cast(json_value(DATA, '$.metrics.video_watched_2s') AS float64) AS video_watched_2s,\n            safe_cast(json_value(DATA, '$.metrics.video_watched_6s') AS float64) AS video_watched_6s,\n            safe_cast(json_value(DATA, '$.metrics.view_content') AS float64) AS view_content,\n            safe_cast(json_value(DATA, '$.metrics.view_content_rate') AS float64) AS view_content_rate,\n            safe_cast(json_value(DATA, '$.metrics.vta_app_install') AS float64) AS vta_app_install,\n            safe_cast(json_value(DATA, '$.metrics.vta_conversion') AS float64) AS vta_conversion,\n            safe_cast(json_value(DATA, '$.metrics.vta_purchase') AS float64) AS vta_purchase,\n            safe_cast(json_value(DATA, '$.metrics.vta_registration') AS float64) AS vta_registration,\n            safe_cast(json_value(DATA, '$.metrics.web_event_add_to_cart') AS float64) AS web_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.web_event_add_to_cart_rate') AS float64) AS web_event_add_to_cart_rate,\n            safe_cast(json_value(DATA, '$.metrics.onsite_shopping_roas') AS float64) AS onsite_shopping_roas,\n            safe_cast(json_value(DATA, '$.metrics.onsite_shopping') AS float64) AS onsite_shopping,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_onsite_shopping') AS float64) AS cost_per_onsite_shopping,\n            safe_cast(json_value(DATA, '$.metrics.onsite_shopping_rate') AS float64) AS onsite_shopping_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_onsite_shopping') AS float64) AS value_per_onsite_shopping,\n            safe_cast(json_value(DATA, '$.metrics.total_onsite_shopping_value') AS float64) AS total_onsite_shopping_value,\n            safe_cast(json_value(DATA, '$.metrics.onsite_initiate_checkout_count') AS float64) AS onsite_initiate_checkout_count,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_onsite_initiate_checkout_count') AS float64) AS cost_per_onsite_initiate_checkout_count,\n            safe_cast(json_value(DATA, '$.metrics.onsite_initiate_checkout_count_rate') AS float64) AS onsite_initiate_checkout_count_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_onsite_initiate_checkout_count') AS float64) AS value_per_onsite_initiate_checkout_count,\n            safe_cast(json_value(DATA, '$.metrics.total_onsite_initiate_checkout_count_value') AS float64) AS total_onsite_initiate_checkout_count_value,\n            safe_cast(json_value(DATA, '$.metrics.onsite_on_web_detail') AS float64) AS onsite_on_web_detail,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_onsite_on_web_detail') AS float64) AS cost_per_onsite_on_web_detail,\n            safe_cast(json_value(DATA, '$.metrics.onsite_on_web_detail_rate') AS float64) AS onsite_on_web_detail_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_onsite_on_web_detail') AS float64) AS value_per_onsite_on_web_detail,\n            safe_cast(json_value(DATA, '$.metrics.total_onsite_on_web_detail_value') AS float64) AS total_onsite_on_web_detail_value,\n            safe_cast(json_value(DATA, '$.metrics.onsite_on_web_cart') AS float64) AS onsite_on_web_cart,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_onsite_on_web_cart') AS float64) AS cost_per_onsite_on_web_cart,\n            safe_cast(json_value(DATA, '$.metrics.onsite_on_web_cart_rate') AS float64) AS onsite_on_web_cart_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_onsite_on_web_cart') AS float64) AS value_per_onsite_on_web_cart,\n            safe_cast(json_value(DATA, '$.metrics.total_onsite_on_web_cart_value') AS float64) AS total_onsite_on_web_cart_value,\n            \n    FROM\n        source\n)\nSELECT\n    *\nEXCEPT(stat_time_day),\n    DATE(stat_time_day) AS date\nFROM\n    unnested_keys", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__ad_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.589728Z", "completed_at": "2025-01-22T04:45:21.599255Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.605949Z", "completed_at": "2025-01-22T04:45:21.605961Z"}], "thread_id": "Thread-4", "execution_time": 0.01947927474975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_tiktokads__adgroups", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n    SELECT\n        json_extract_array(data,'$.actions') AS actions,\n        json_value(data,'$.adgroup_app_profile_page_state') AS adgroup_app_profile_page_state,\n        json_value(data,'$.adgroup_id') AS adgroup_id,\n        json_value(data,'$.adgroup_name') AS adgroup_name,\n        json_value(data,'$.advertiser_id') AS advertiser_id,\n        json_extract_array(data,'$.age_groups') AS age_groups,\n        json_value(data,'$.app_download_url') AS app_download_url,\n        json_value(data,'$.app_id') AS app_id,\n        json_value(data,'$.app_type') AS app_type,\n        json_value(data,'$.attribution_event_count') AS attribution_event_count,\n        json_extract_array(data,'$.audience_ids') AS audience_ids,\n        safe_cast(json_value(data,'$.auto_targeting_enabled') as bool) AS auto_targeting_enabled,\n        json_value(data,'$.bid_display_mode') AS bid_display_mode,\n        safe_cast(json_value(data,'$.bid_price') as float64) AS bid_price,\n        json_value(data,'$.bid_type') AS bid_type,\n        json_value(data,'$.billing_event') AS billing_event,\n        json_value(data,'$.brand_safety_partner') AS brand_safety_partner,\n        json_value(data,'$.brand_safety_type') AS brand_safety_type,\n        safe_cast(json_value(data,'$.budget') as float64) AS budget,\n        json_value(data,'$.budget_mode') AS budget_mode,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.catalog_id') AS catalog_id,\n        json_extract_array(data,'$.category_exclusion_ids') AS category_exclusion_ids,\n        json_value(data,'$.category_id') AS category_id,\n        json_value(data,'$.click_attribution_window') AS click_attribution_window,\n        safe_cast(json_value(data,'$.comment_disabled') as bool) AS comment_disabled,\n        json_extract_array(data,'$.contextual_tag_ids') AS contextual_tag_ids,\n        safe_cast(json_value(data,'$.conversion_bid_price') as float64) AS conversion_bid_price,\n        json_value(data,'$.conversion_window') AS conversion_window,\n        datetime(json_value(data,'$.create_time')) AS create_time,\n        json_value(data,'$.creative_material_mode') AS creative_material_mode,\n        json_value(data,'$.dayparting') AS dayparting,\n        json_value(data,'$.deep_bid_type') AS deep_bid_type,\n        safe_cast(json_value(data,'$.deep_cpa_bid') as float64) AS deep_cpa_bid,\n        json_value(data,'$.delivery_mode') AS delivery_mode,\n        json_extract_array(data,'$.device_model_ids') AS device_model_ids,\n        json_extract_array(data,'$.device_price_ranges') AS device_price_ranges,\n        json_extract_array(data,'$.excluded_audience_ids') AS excluded_audience_ids,\n        json_extract_array(data,'$.excluded_custom_actions') AS excluded_custom_actions,\n        json_value(data,'$.feed_type') AS feed_type,\n        json_value(data,'$.frequency') AS frequency,\n        json_value(data,'$.frequency_schedule') AS frequency_schedule,\n        json_value(data,'$.gender') gender,\n        json_value(data,'$.identity_authorized_bc_id') AS identity_authorized_bc_id,\n        json_value(data,'$.identity_id') AS identity_id,\n        json_value(data,'$.identity_type') AS identity_type,\n        json_extract_array(data,'$.included_custom_actions') AS included_custom_actions,\n        json_extract_array(data,'$.interest_category_ids') AS interest_category_ids,\n        json_extract_array(data,'$.interest_keyword_ids') AS interest_keyword_ids,\n        safe_cast(json_value(data,'$.inventory_filter_enabled') as bool) AS inventory_filter_enabled,\n        json_value(data,'$.ios14_quota_type') AS ios14_quota_type,\n        safe_cast(json_value(data,'$.is_hfss') as bool) AS is_hfss,\n        safe_cast(json_value(data,'$.is_new_structure') as bool) AS is_new_structure,\n        safe_cast(json_value(data,'$.is_smart_performance_campaign') as bool) AS is_smart_performance_campaign,\n        json_extract_array(data,'$.isp_ids') AS isp_ids,\n        json_value(data,'$.keywords') AS keywords,\n        json_extract_array(data,'$.languages') AS languages,\n        json_extract_array(data,'$.location_ids') AS location_ids,\n        datetime(json_value(data,'$.modify_time')) AS modify_time,\n        json_extract_array(data,'$.network_types') AS network_types,\n        json_value(data,'$.next_day_retention') AS next_day_retention,\n        json_extract_array(data,'$.operating_systems') AS operating_systems,\n        json_value(data,'$.operation_status') AS operation_status,\n        json_value(data,'$.optimization_event') AS optimization_event,\n        json_value(data,'$.optimization_goal') AS optimization_goal,\n        json_value(data,'$.pacing') AS pacing,\n        json_value(data,'$.pixel_id') AS pixel_id,\n        json_value(data,'$.placement_type') AS placement_type,\n        json_extract_array(data,'$.placements') AS placements,\n        json_value(data,'$.product_source') AS product_source,\n        json_value(data,'$.promotion_type') AS promotion_type,\n        json_value(data,'$.purchased_impression') AS purchased_impression,\n        json_value(data,'$.purchased_reach') AS purchased_reach,\n        json_value(data,'$.rf_estimated_cpr') AS rf_estimated_cpr,\n        json_value(data,'$.rf_estimated_frequency') AS rf_estimated_frequency,\n        json_value(data,'$.rf_purchased_type') AS rf_purchased_type,\n        datetime(json_value(data,'$.schedule_end_time')) AS schedule_end_time,\n        json_value(data,'$.schedule_infos') AS schedule_infos,\n        datetime(json_value(data,'$.schedule_start_time')) AS schedule_start_time,\n        json_value(data,'$.schedule_type') AS schedule_type,\n        safe_cast(json_value(data,'$.scheduled_budget') as float64) AS scheduled_budget,\n        safe_cast(json_value(data,'$.search_result_enabled') as bool) AS search_result_enabled,\n        json_value(data,'$.secondary_optimization_event') AS secondary_optimization_event,\n        json_value(data,'$.secondary_status') AS secondary_status,\n        safe_cast(json_value(data,'$.share_disabled') as bool) AS share_disabled,\n        json_value(data,'$.shopping_ads_type') AS shopping_ads_type,\n        safe_cast(json_value(data,'$.skip_learning_phase') as bool) AS skip_learning_phase,\n        json_value(data,'$.smart_audience_enabled') AS smart_audience_enabled,\n        json_value(data,'$.smart_interest_behavior_enabled') AS smart_interest_behavior_enabled,\n        json_value(data,'$.spending_power') AS spending_power,\n        json_value(data,'$.statistic_type') AS statistic_type,\n        json_value(data,'$.store_authorized_bc_id') AS store_authorized_bc_id,\n        json_value(data,'$.store_id') AS store_id,\n        safe_cast(json_value(data,'$.video_download_disabled') as bool) AS video_download_disabled,\n        json_value(data,'$.view_attribution_window') AS view_attribution_window,\n        json_extract_array(data,'$.zipcode_ids') AS zipcode_ids,\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_adgroup__*`\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modify_time desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by advertiser_id, campaign_id, adgroup_id\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__adgroups`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.599990Z", "completed_at": "2025-01-22T04:45:21.608364Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.618145Z", "completed_at": "2025-01-22T04:45:21.618157Z"}], "thread_id": "Thread-1", "execution_time": 0.022093534469604492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_tiktokads__ads", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    SELECT\n        json_value(data,'$.ad_format') AS ad_format,\n        json_value(data,'$.ad_id') AS ad_id,\n        json_value(data,'$.ad_name') AS ad_name,\n        json_value(data,'$.ad_text') AS ad_text,\n        json_value(data,'$.ad_texts') AS ad_texts,\n        json_value(data,'$.adgroup_id') AS adgroup_id,\n        json_value(data,'$.adgroup_name') AS adgroup_name,\n        json_value(data,'$.advertiser_id') AS advertiser_id,\n        json_value(data,'$.app_name') AS app_name,\n        json_value(data,'$.avatar_icon_web_uri') AS avatar_icon_web_uri,\n        json_value(data,'$.brand_safety_postbid_partner') AS brand_safety_postbid_partner,\n        json_value(data,'$.brand_safety_vast_url') AS brand_safety_vast_url,\n        json_value(data,'$.call_to_action') AS call_to_action,\n        json_value(data,'$.call_to_action_id') AS call_to_action_id,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.card_id') AS card_id,\n        json_value(data,'$.carousel_image_labels') AS carousel_image_labels,\n        json_value(data,'$.click_tracking_url') AS click_tracking_url,\n        datetime(json_value(data,'$.create_time')) AS create_time,\n        safe_cast(json_value(data,'$.creative_authorized') as bool) AS creative_authorized,\n        json_value(data,'$.creative_type') AS creative_type,\n        json_value(data,'$.deeplink') AS deeplink,\n        json_value(data,'$.deeplink_type') AS deeplink_type,\n        json_value(data,'$.display_name') AS display_name,\n        json_value(data,'$.identity_id') AS identity_id,\n        json_value(data,'$.identity_type') AS identity_type,\n        json_extract_array(data,'$.image_ids') AS image_ids,\n        json_value(data,'$.impression_tracking_url') AS impression_tracking_url,\n        safe_cast(json_value(data,'$.is_aco') as bool) AS is_aco,\n        safe_cast(json_value(data,'$.is_new_structure') as bool) AS is_new_structure,\n        json_value(data,'$.landing_page_url') AS landing_page_url,\n        json_value(data,'$.landing_page_urls') AS landing_page_urls,\n        datetime(json_value(data,'$.modify_time')) AS modify_time,\n        json_value(data,'$.music_id') AS music_id,\n        json_value(data,'$.operation_status') AS operation_status,\n        json_value(data,'$.optimization_event') AS optimization_event,\n        json_value(data,'$.page_id') AS page_id,\n        json_value(data,'$.playable_url') AS playable_url,\n        json_value(data,'$.profile_image_url') AS profile_image_url,\n        json_value(data,'$.secondary_status') AS secondary_status,\n        json_value(data,'$.tracking_pixel_id') AS tracking_pixel_id,\n        safe_cast(json_value(data,'$.vast_moat_enabled') as bool) AS vast_moat_enabled,\n        json_value(data,'$.video_id') AS video_id,\n        json_value(data,'$.viewability_postbid_partner') AS viewability_postbid_partner,\n        json_value(data,'$.viewability_vast_url') AS viewability_vast_url,\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_ad__*`\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modify_time desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by advertiser_id, campaign_id, adgroup_id,ad_id\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__ads`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.609047Z", "completed_at": "2025-01-22T04:45:21.619876Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.627243Z", "completed_at": "2025-01-22T04:45:21.627255Z"}], "thread_id": "Thread-2", "execution_time": 0.02209925651550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_tiktokads__age_gender_insights", "compiled": true, "compiled_code": "\n\n\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Tiktok`.`p_ad_age_gender_report__*` original\n        group by JSON_VALUE(data, '$.dimensions.ad_id'),JSON_VALUE(data, '$.dimensions.stat_time_day'), JSON_VALUE(data, '$.dimensions.age'), JSON_VALUE(data, '$.dimensions.gender')\n    )\n),\nunnested_keys AS (\n    SELECT\n        json_value(\n                DATA,\n                '$.dimensions.ad_id'\n            ) AS ad_id,json_value(\n                DATA,\n                '$.dimensions.age'\n            ) AS age,json_value(\n                DATA,\n                '$.dimensions.gender'\n            ) AS gender,json_value(\n                DATA,\n                '$.dimensions.stat_time_day'\n            ) AS stat_time_day,safe_cast(json_value(DATA, '$.metrics.adgroup_id') AS string) AS adgroup_id,\n            safe_cast(json_value(DATA, '$.metrics.adgroup_name') AS string) AS adgroup_name,\n            safe_cast(json_value(DATA, '$.metrics.advertiser_id') AS string) AS advertiser_id,\n            safe_cast(json_value(DATA, '$.metrics.advertiser_name') AS string) AS advertiser_name,\n            safe_cast(json_value(DATA, '$.metrics.campaign_id') AS string) AS campaign_id,\n            safe_cast(json_value(DATA, '$.metrics.campaign_name') AS string) AS campaign_name,\n            safe_cast(json_value(DATA, '$.metrics.placement_type') AS string) AS placement_type,\n            safe_cast(json_value(DATA, '$.metrics.objective_type') AS string) AS objective_type,\n            safe_cast(json_value(DATA, '$.metrics.average_video_play') AS float64) AS average_video_play,\n            safe_cast(json_value(DATA, '$.metrics.clicks') AS float64) AS clicks,\n            safe_cast(json_value(DATA, '$.metrics.comments') AS float64) AS comments,\n            safe_cast(json_value(DATA, '$.metrics.conversion') AS float64) AS conversion,\n            safe_cast(json_value(DATA, '$.metrics.conversion_rate') AS float64) AS conversion_rate,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_conversion') AS float64) AS cost_per_conversion,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_result') AS float64) AS cost_per_result,\n            safe_cast(json_value(DATA, '$.metrics.cpc') AS float64) AS cpc,\n            safe_cast(json_value(DATA, '$.metrics.cpm') AS float64) AS cpm,\n            safe_cast(json_value(DATA, '$.metrics.ctr') AS float64) AS ctr,\n            safe_cast(json_value(DATA, '$.metrics.follows') AS float64) AS follows,\n            safe_cast(json_value(DATA, '$.metrics.impressions') AS float64) AS impressions,\n            safe_cast(json_value(DATA, '$.metrics.likes') AS float64) AS likes,\n            safe_cast(json_value(DATA, '$.metrics.profile_visits') AS float64) AS profile_visits,\n            safe_cast(json_value(DATA, '$.metrics.real_time_conversion') AS float64) AS real_time_conversion,\n            safe_cast(json_value(DATA, '$.metrics.result') AS float64) AS result,\n            safe_cast(json_value(DATA, '$.metrics.result_rate') AS float64) AS result_rate,\n            safe_cast(json_value(DATA, '$.metrics.shares') AS float64) AS shares,\n            safe_cast(json_value(DATA, '$.metrics.spend') AS float64) AS spend,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p100') AS float64) AS video_views_p100,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p25') AS float64) AS video_views_p25,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p50') AS float64) AS video_views_p50,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p75') AS float64) AS video_views_p75,\n            safe_cast(json_value(DATA, '$.metrics.video_watched_2s') AS float64) AS video_watched_2s,\n            safe_cast(json_value(DATA, '$.metrics.video_watched_6s') AS float64) AS video_watched_6s,\n            \n    FROM\n        source\n)\nSELECT\n    *\nEXCEPT(stat_time_day),\n    DATE(stat_time_day) AS date\nFROM\n    unnested_keys", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__age_gender_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.621244Z", "completed_at": "2025-01-22T04:45:21.629863Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.631873Z", "completed_at": "2025-01-22T04:45:21.631883Z"}], "thread_id": "Thread-4", "execution_time": 0.014519453048706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_tiktokads__campaigns", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n    SELECT\n        json_value(DATA,'$.advertiser_id') AS advertiser_id,\n        json_value(DATA,'$.campaign_id') AS campaign_id,\n        json_value(DATA,'$.campaign_name') AS campaign_name,\n        json_value(DATA,'$.campaign_type') AS campaign_type,\n        json_value(DATA,'$.objective') AS objective,\n        json_value(DATA,'$.objective_type') AS objective_type,\n        json_value(DATA,'$.operation_status') AS operation_status,\n        json_value(DATA,'$.secondary_status') AS secondary_status,\n        json_value(DATA,'$.app_promotion_type') AS app_promotion_type,\n        safe_cast(json_value(DATA, '$.budget') AS int64) AS budget,\n        json_value(DATA,'$.budget_mode') AS budget_mode,\n        json_value(DATA,'$.budget_optimize_on') AS budget_optimize_on,\n        json_value(DATA,'$.deep_bid_type') AS deep_bid_type,\n        safe_cast(json_value(DATA,'$.is_advanced_dedicated_campaign') AS bool) AS is_advanced_dedicated_campaign,\n        safe_cast(json_value(DATA, '$.is_new_structure') AS bool) AS is_new_structure,\n        safe_cast(json_value(DATA, '$.is_search_campaign') AS bool) AS is_search_campaign,\n        safe_cast(json_value(DATA,'$.is_smart_performance_campaign') AS bool) AS is_smart_performance_campaign,\n        safe_cast(json_value(DATA, '$.roas_bid') AS float64) AS roas_bid,\n        datetime(json_value(DATA, '$.create_time')) AS create_time,\n        datetime(json_value(DATA, '$.modify_time')) AS modify_time,\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_campaign__*`\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modify_time desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by advertiser_id, campaign_id\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__campaigns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.632817Z", "completed_at": "2025-01-22T04:45:21.645894Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.653423Z", "completed_at": "2025-01-22T04:45:21.653434Z"}], "thread_id": "Thread-1", "execution_time": 0.0253450870513916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_tiktokads__creative_report", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    SELECT\n        json_value(data, '$.info.image_id') AS image_id,\n        json_value(data, '$.info.material_id') AS material_id,\n        json_value(data, '$.info.page_id') AS page_id,\n        json_value(data, '$.info.video_id') AS video_id,\n        SAFE_CAST(json_value(data, '$.metrics.add_to_wishlist') AS INT64) AS add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.add_to_wishlist_rate') AS FLOAT64) AS add_to_wishlist_rate,\n        SAFE_CAST(json_value(data, '$.metrics.app_event_add_to_cart') AS INT64) AS app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.app_event_add_to_cart_rate') AS FLOAT64) AS app_event_add_to_cart_rate,\n        SAFE_CAST(json_value(data, '$.metrics.average_video_play') AS FLOAT64) AS average_video_play,\n        SAFE_CAST(json_value(data, '$.metrics.checkout') AS INT64) AS checkout,\n        SAFE_CAST(json_value(data, '$.metrics.checkout_rate') AS FLOAT64) AS checkout_rate,\n        SAFE_CAST(json_value(data, '$.metrics.clicks') AS INT64) AS clicks,\n        SAFE_CAST(json_value(data, '$.metrics.complete_payment') AS INT64) AS complete_payment,\n        SAFE_CAST(json_value(data, '$.metrics.complete_payment_rate') AS FLOAT64) AS complete_payment_rate,\n        SAFE_CAST(json_value(data, '$.metrics.conversion') AS INT64) AS conversion,\n        SAFE_CAST(json_value(data, '$.metrics.conversion_rate') AS FLOAT64) AS conversion_rate,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_add_to_wishlist') AS FLOAT64) AS cost_per_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_app_event_add_to_cart') AS FLOAT64) AS cost_per_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_checkout') AS FLOAT64) AS cost_per_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_complete_payment') AS FLOAT64) AS cost_per_complete_payment,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_conversion') AS FLOAT64) AS cost_per_conversion,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_download_start') AS FLOAT64) AS cost_per_download_start,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_initiate_checkout') AS FLOAT64) AS cost_per_initiate_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_page_event_search') AS FLOAT64) AS cost_per_page_event_search,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_product_details_page_browse') AS FLOAT64) AS cost_per_product_details_page_browse,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_purchase') AS FLOAT64) AS cost_per_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_registration') AS FLOAT64) AS cost_per_registration,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_add_to_wishlist') AS FLOAT64) AS cost_per_total_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_app_event_add_to_cart') AS FLOAT64) AS cost_per_total_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_checkout') AS FLOAT64) AS cost_per_total_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_purchase') AS FLOAT64) AS cost_per_total_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_registration') AS FLOAT64) AS cost_per_total_registration,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_view_content') AS FLOAT64) AS cost_per_total_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_user_registration') AS FLOAT64) AS cost_per_user_registration,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_view_content') AS FLOAT64) AS cost_per_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_web_event_add_to_cart') AS FLOAT64) AS cost_per_web_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.cpc') AS FLOAT64) AS cpc,\n        SAFE_CAST(json_value(data, '$.metrics.cpm') AS FLOAT64) AS cpm,\n        SAFE_CAST(json_value(data, '$.metrics.ctr') AS FLOAT64) AS ctr,\n        SAFE_CAST(json_value(data, '$.metrics.download_start_rate') AS FLOAT64) AS download_start_rate,\n        SAFE_CAST(json_value(data, '$.metrics.impressions') AS INT64) AS impressions,\n        SAFE_CAST(json_value(data, '$.metrics.initiate_checkout') AS INT64) AS initiate_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.initiate_checkout_rate') AS FLOAT64) AS initiate_checkout_rate,\n        SAFE_CAST(json_value(data, '$.metrics.page_event_search') AS INT64) AS page_event_search,\n        SAFE_CAST(json_value(data, '$.metrics.page_event_search_rate') AS FLOAT64) AS page_event_search_rate,\n        SAFE_CAST(json_value(data, '$.metrics.product_details_page_browse') AS INT64) AS product_details_page_browse,\n        SAFE_CAST(json_value(data, '$.metrics.product_details_page_browse_rate') AS FLOAT64) AS product_details_page_browse_rate,\n        SAFE_CAST(json_value(data, '$.metrics.purchase') AS INT64) AS purchase,\n        SAFE_CAST(json_value(data, '$.metrics.purchase_rate') AS FLOAT64) AS purchase_rate,\n        SAFE_CAST(json_value(data, '$.metrics.registration') AS INT64) AS registration,\n        SAFE_CAST(json_value(data, '$.metrics.registration_rate') AS FLOAT64) AS registration_rate,\n        SAFE_CAST(json_value(data, '$.metrics.sales_lead') AS INT64) AS sales_lead,\n        SAFE_CAST(json_value(data, '$.metrics.spend') AS FLOAT64) AS spend,\n        SAFE_CAST(json_value(data, '$.metrics.total_add_to_wishlist') AS INT64) AS total_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.total_add_to_wishlist_value') AS FLOAT64) AS total_add_to_wishlist_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_app_event_add_to_cart') AS INT64) AS total_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.total_app_event_add_to_cart_value') AS FLOAT64) AS total_app_event_add_to_cart_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_checkout') AS INT64) AS total_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.total_checkout_value') AS FLOAT64) AS total_checkout_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_complete_payment_rate') AS FLOAT64) AS total_complete_payment_rate,\n        SAFE_CAST(json_value(data, '$.metrics.total_download_start_value') AS FLOAT64) AS total_download_start_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_initiate_checkout_value') AS FLOAT64) AS total_initiate_checkout_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_page_event_search_value') AS FLOAT64) AS total_page_event_search_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_product_details_page_browse_value') AS FLOAT64) AS total_product_details_page_browse_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_purchase') AS INT64) AS total_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.total_purchase_value') AS FLOAT64) AS total_purchase_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_registration') AS INT64) AS total_registration,\n        SAFE_CAST(json_value(data, '$.metrics.total_sales_lead') AS INT64) AS total_sales_lead,\n        SAFE_CAST(json_value(data, '$.metrics.total_sales_lead_value') AS FLOAT64) AS total_sales_lead_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_user_registration_value') AS FLOAT64) AS total_user_registration_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_view_content') AS INT64) AS total_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.total_view_content_value') AS FLOAT64) AS total_view_content_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_web_event_add_to_cart_value') AS FLOAT64) AS total_web_event_add_to_cart_value,\n        SAFE_CAST(json_value(data, '$.metrics.user_registration') AS INT64) AS user_registration,\n        SAFE_CAST(json_value(data, '$.metrics.user_registration_rate') AS FLOAT64) AS user_registration_rate,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_checkout') AS FLOAT64) AS value_per_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_complete_payment') AS FLOAT64) AS value_per_complete_payment,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_download_start') AS FLOAT64) AS value_per_download_start,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_initiate_checkout') AS FLOAT64) AS value_per_initiate_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_page_event_search') AS FLOAT64) AS value_per_page_event_search,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_product_details_page_browse') AS FLOAT64) AS value_per_product_details_page_browse,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_add_to_wishlist') AS FLOAT64) AS value_per_total_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_app_event_add_to_cart') AS FLOAT64) AS value_per_total_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_purchase') AS FLOAT64) AS value_per_total_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_view_content') AS FLOAT64) AS value_per_total_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_user_registration') AS FLOAT64) AS value_per_user_registration,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_web_event_add_to_cart') AS FLOAT64) AS value_per_web_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.video_play_actions') AS INT64) AS video_play_actions,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p100') AS INT64) AS video_views_p100,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p25') AS INT64) AS video_views_p25,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p50') AS INT64) AS video_views_p50,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p75') AS INT64) AS video_views_p75,\n        SAFE_CAST(json_value(data, '$.metrics.video_watched_2s') AS INT64) AS video_watched_2s,\n        SAFE_CAST(json_value(data, '$.metrics.video_watched_6s') AS INT64) AS video_watched_6s,\n        SAFE_CAST(json_value(data, '$.metrics.view_content') AS INT64) AS view_content,\n        SAFE_CAST(json_value(data, '$.metrics.view_content_rate') AS FLOAT64) AS view_content_rate,\n        SAFE_CAST(json_value(data, '$.metrics.web_event_add_to_cart') AS INT64) AS web_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.web_event_add_to_cart_rate') AS FLOAT64) AS web_event_add_to_cart_rate,\n        _batched_at\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_creative_report__*`\n\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by material_id\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__creative_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.640288Z", "completed_at": "2025-01-22T04:45:21.652810Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.654504Z", "completed_at": "2025-01-22T04:45:21.654514Z"}], "thread_id": "Thread-2", "execution_time": 0.023448467254638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_tiktokads__video_insight", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    SELECT\n        json_extract_array(data, '$.info.country_code') AS country_code,\n        json_value(data, '$.info.create_time') AS create_time,\n        json_value(data, '$.info.currency') AS currency,\n        json_value(data, '$.info.identity') AS identity,\n        json_value(data, '$.info.material_id') AS material_id,\n        json_value(data, '$.info.material_name') AS material_name,\n        json_extract_array(data, '$.info.placement') AS placement,\n        json_value(data, '$.info.video_material_source') AS video_material_source,\n        safe_cast(json_value(data, '$.metrics.clicks') as float64) AS clicks,\n        safe_cast(json_value(data, '$.metrics.conversion') as float64) AS conversion,\n        safe_cast(json_value(data, '$.metrics.conversion_rate_v2') as float64) AS conversion_rate_v2,\n        safe_cast(json_value(data, '$.metrics.cost_per_conversion') as float64) AS cost_per_conversion,\n        safe_cast(json_value(data, '$.metrics.cpc') as float64) AS cpc,\n        safe_cast(json_value(data, '$.metrics.cpm') as float64) AS cpm,\n        safe_cast(json_value(data, '$.metrics.ctr') as float64) AS ctr,\n        safe_cast(json_value(data, '$.metrics.impressions') as float64) AS impressions,\n        safe_cast(json_value(data, '$.metrics.organic_video_views') as float64) AS organic_video_views,\n        safe_cast(json_value(data, '$.metrics.spend') as float64) AS spend,\n        _batched_at,\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_video_insight__*`\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by material_id\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__video_insight`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.647273Z", "completed_at": "2025-01-22T04:45:21.655475Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.657548Z", "completed_at": "2025-01-22T04:45:21.657558Z"}], "thread_id": "Thread-4", "execution_time": 0.012454509735107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.weather", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Misc`.`p__weather__*` original\n        group by lat,long,time\n    )\n),\n\nsource_hourly AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Misc`.`p__weather_hourly__*` original\n        group by lat,long,time\n    )\n),\n\nhourly as (\n    select date(source_hourly.time) as date,\n    extract(hour from timestamp(source_hourly.time)) as hour,\n    source_hourly.rain,\n    source_hourly.temperature2m,\n    source_hourly.lat,\n    source_hourly.long,\n    from source_hourly\n),\n\nhourly_aggregate as (\n    select \n    hourly.date,\n    hourly.lat,\n    hourly.long,\n    count( distinct case when hourly.rain>=3 then hourly.hour end) as raining_hour,\n    sum(hourly.rain) as rain_sum,\n    avg(hourly.temperature2m) as avg_temp,\n    from hourly\n    where hourly.hour between 9 and 23\n    group by 1,2,3\n)\n\nSELECT\n    DATE(\n        source.time\n    ) AS date,\n    source.temperature2mMax AS temperature_2m_max,\n    source.temperature2mMin AS temperature_2m_min,\n    source.temperature2mMean AS temperature_2m_mean,\n    source.apparentTemperatureMax AS apparent_temperature_max,\n    source.apparentTemperatureMin AS apparent_temperature_min,\n    source.apparentTemperatureMean AS apparent_temperature_mean,\n    source.rainSum AS rain_sum,\n    source.windSpeed10mMax AS wind_speed10m_max,\n    source.lat AS lat,\n    source.long AS long,\n    safe_divide(hourly_aggregate.raining_hour,14) as rain_pct,\n    hourly_aggregate.rain_sum as selling_hour_rain,\n    hourly_aggregate.avg_temp as selling_hour_avg_temp,\nFROM\n    source\n    left join hourly_aggregate \n    on source.lat= hourly_aggregate.lat \n    and source.long = hourly_aggregate.long \n    and DATE(source.time) = hourly_aggregate.date", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`weather`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.666334Z", "completed_at": "2025-01-22T04:45:21.668892Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.673204Z", "completed_at": "2025-01-22T04:45:21.673216Z"}], "thread_id": "Thread-2", "execution_time": 0.01303720474243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sado_analytics_services.kiotviet__removed_branch", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.669524Z", "completed_at": "2025-01-22T04:45:21.671908Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.674161Z", "completed_at": "2025-01-22T04:45:21.674171Z"}], "thread_id": "Thread-1", "execution_time": 0.015722036361694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ga4.ga4_source_categories", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.677229Z", "completed_at": "2025-01-22T04:45:21.679618Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.681599Z", "completed_at": "2025-01-22T04:45:21.681610Z"}], "thread_id": "Thread-4", "execution_time": 0.009163618087768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sado_analytics_services.product_categories", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.684616Z", "completed_at": "2025-01-22T04:45:21.686999Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.692414Z", "completed_at": "2025-01-22T04:45:21.692424Z"}], "thread_id": "Thread-2", "execution_time": 0.012295961380004883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sado_analytics_services.promotions", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.687645Z", "completed_at": "2025-01-22T04:45:21.691073Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.693357Z", "completed_at": "2025-01-22T04:45:21.693367Z"}], "thread_id": "Thread-1", "execution_time": 0.012529611587524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sado_analytics_services.provinces", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.696451Z", "completed_at": "2025-01-22T04:45:21.698843Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.700921Z", "completed_at": "2025-01-22T04:45:21.700930Z"}], "thread_id": "Thread-4", "execution_time": 0.009287595748901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sado_analytics_services.regions", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.703939Z", "completed_at": "2025-01-22T04:45:21.708107Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.722307Z", "completed_at": "2025-01-22T04:45:21.722318Z"}], "thread_id": "Thread-2", "execution_time": 0.022847414016723633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "snapshot.sado_analytics_services.stg_gsheet__cogs", "compiled": true, "compiled_code": "\n\n    \n\n    select \n    product_code , \n    inventory_value_per_unit,\n    from `agile-scheme-394814`.`GSheet`.`_ext_cogs_v2`\n    where regexp_extract(_FILE_NAME,r'cogs__(\\d{6})') = format_date('%Y%m',current_date)\n    \n", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__cogs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.708775Z", "completed_at": "2025-01-22T04:45:21.724758Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.731910Z", "completed_at": "2025-01-22T04:45:21.731921Z"}], "thread_id": "Thread-1", "execution_time": 0.03177309036254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_facebookads__adsinsights", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n    select * from `agile-scheme-394814`.`Facebook`.`p_AdsInsights__*`\n          where 1=1\n          and date_start <'2024-07-01'\n        \n          and date_start >= date_add(current_date, INTERVAL -7 DAY)\n        \n    \n),\ndeduplicate as (select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start\n    ))\nSELECT\n        safe_cast(account_id as string) account_id ,\n        safe_cast(campaign_id as string) campaign_id,\n        safe_cast(adset_id as string) adset_id ,\n        safe_cast(ad_id as string) ad_id ,\n        to_hex(md5(cast(coalesce(cast(account_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(adset_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ad_id as string), '_dbt_utils_surrogate_key_null_') as string))) as ad_key,\n        date_start ,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value\n    FROM\n        deduplicate\n\nunion all\nselect \n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    to_hex(md5(cast(coalesce(cast(account_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(adset_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ad_id as string), '_dbt_utils_surrogate_key_null_') as string))) as ad_key,\n    date_start,\n    clicks,\n    impressions,\n    reach,\n    spend,\n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_insights`\nwhere 1=1 \n\n  and date_start >= date_add(current_date, INTERVAL -7 DAY)\n", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__adsinsights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.725430Z", "completed_at": "2025-01-22T04:45:21.739449Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.740931Z", "completed_at": "2025-01-22T04:45:21.740942Z"}], "thread_id": "Thread-4", "execution_time": 0.0193941593170166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.dim_fb__campaigns", "compiled": true, "compiled_code": "\n\nWITH selected_fields AS (\n    SELECT\n        account_id,\n        campaign_id,\n        adset_id,\n        ad_id,\n        campaign_name,\n        adset_name,\n        ad_name,\n        date_start,\n        to_hex(md5(cast(coalesce(cast(account_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(adset_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ad_id as string), '_dbt_utils_surrogate_key_null_') as string))) as ad_key,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_insights`\n        qualify row_number() over (partition by account_id,campaign_id,adset_id,ad_id order by date_start desc) = 1\n),\ncurrent_campaign_name as (\n    select distinct\n    * except(campaign_name),\n    first_value(campaign_name) over (partition by campaign_id order by date_start desc rows between unbounded preceding and unbounded following) as campaign_name,\n    from selected_fields\n),\ncurrent_adset_name as (\n    select distinct\n    * except(adset_name),\n    first_value(adset_name) over (partition by campaign_id, adset_id order by date_start desc rows between unbounded preceding and unbounded following) as adset_name,\n    from current_campaign_name\n),\ncurrent_ad_name as (\n    select distinct\n    * except(ad_name),\n    first_value(ad_name) over (partition by campaign_id, adset_id,ad_id order by date_start desc rows between unbounded preceding and unbounded following) as ad_name,\n    from current_adset_name\n)\nselect a.* except(date_start), \nacc.account_name,\nfrom current_ad_name a\nleft join `agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_accounts` acc on a.account_id = acc.account_id", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_fb__campaigns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.734347Z", "completed_at": "2025-01-22T04:45:21.748387Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.750678Z", "completed_at": "2025-01-22T04:45:21.750688Z"}], "thread_id": "Thread-2", "execution_time": 0.02016139030456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__ad_accounts", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_accounts`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__ad_accounts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.741907Z", "completed_at": "2025-01-22T04:45:21.750037Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.752209Z", "completed_at": "2025-01-22T04:45:21.752220Z"}], "thread_id": "Thread-1", "execution_time": 0.013555288314819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.fct_fb__page_impressions_by_age_gender", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__page_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'page_impressions_by_age_gender_unique'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\ncase split(json_value(m,\"$.key\"),\".\")[safe_offset(0)] \nwhen \"F\" then \"Female\" \nwhen 'M' then 'Male' \nwhen 'U' then 'Unknown' \nend as gender_group,\nsplit(json_value(m,\"$.key\"),\".\")[safe_offset(1)] as age_group,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,gender_group,age_group\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_impressions_by_age_gender`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.753915Z", "completed_at": "2025-01-22T04:45:21.763983Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.775006Z", "completed_at": "2025-01-22T04:45:21.775017Z"}], "thread_id": "Thread-4", "execution_time": 0.025903701782226562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.fct_fb__page_impressions_by_city", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__page_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'page_impressions_by_city_unique'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\njson_value(m,\"$.key\") as city,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,city\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_impressions_by_city`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.764600Z", "completed_at": "2025-01-22T04:45:21.776971Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.779068Z", "completed_at": "2025-01-22T04:45:21.779078Z"}], "thread_id": "Thread-2", "execution_time": 0.01804208755493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.fct_fb__page_insights", "compiled": true, "compiled_code": "WITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        safe_cast(json_value(metric_values, '$.value') AS float64) AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__page_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name NOT IN (\n            'page_actions_post_reactions_total','page_consumptions_by_consumption_type_unique','page_consumptions_by_consumption_type','page_cta_clicks_logged_in_total','page_cta_clicks_logged_in_unique','page_fan_adds_by_paid_non_paid_unique','page_fans_city','page_fans_country','page_fans_localepage_fans_online','page_impressions_by_age_gender_unique','page_impressions_by_city_unique','page_impressions_by_country_unique','page_impressions_by_locale_unique','page_impressions_by_story_type_unique','page_impressions_by_story_type','page_impressions_viral_frequency_distribution','page_negative_feedback_by_type_unique','page_negative_feedback_by_type','page_video_views_by_paid_non_paid','page_video_views_by_uploaded_hosted'\n        )\n) \nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from extracted_metric_value original\n        group by metric_id,metric_time\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.770438Z", "completed_at": "2025-01-22T04:45:21.778374Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.780653Z", "completed_at": "2025-01-22T04:45:21.780664Z"}], "thread_id": "Thread-1", "execution_time": 0.018845558166503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.dim_fb__posts", "compiled": true, "compiled_code": "WITH extracted_fields AS (\n    SELECT\n        *\n    EXCEPT(body_content),\n        SPLIT(body_content,\"\\n\") [safe_offset(0)] AS tag_line,\n        SPLIT(body_content,\"-----------\") [safe_offset(0)] AS main_body,\n        SPLIT(body_content,\"-----------\") [safe_offset(2)] AS first_footer,\n        SPLIT(body_content,\"-----------\") [safe_offset(4)] AS second_footer,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__page_posts`\n)\nSELECT\n    *,\n    to_hex(md5(cast(coalesce(cast(tag_line as string), '_dbt_utils_surrogate_key_null_') as string))) AS content_id,\nFROM\n    extracted_fields", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_fb__posts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.782320Z", "completed_at": "2025-01-22T04:45:21.790610Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.792481Z", "completed_at": "2025-01-22T04:45:21.792493Z"}], "thread_id": "Thread-4", "execution_time": 0.014983415603637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.fct_fb__post_insights", "compiled": true, "compiled_code": "WITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        date_add(date(TIMESTAMP(json_value(metric_values, '$.end_time'))), interval 1 day) AS metric_time,\n        safe_cast(json_value(metric_values, '$.value') AS float64) AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name NOT IN (\n            'post_activity_by_action_type','post_activity_by_action_type_unique','post_clicks_by_type','post_clicks_by_type_unique','post_impressions_by_paid_non_paid','post_impressions_by_story_type','post_impressions_by_story_type_unique','post_negative_feedback_by_type','post_negative_feedback_by_type_unique','post_reactions_by_type_total','post_video_retention_graph','post_video_retention_graph_autoplayed','post_video_retention_graph_clicked_to_play','post_video_view_time_by_age_bucket_and_gender','post_video_view_time_by_country_id','post_video_view_time_by_distribution_type','post_video_view_time_by_region_id','post_video_views_by_distribution_type'\n        )\n) \nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from extracted_metric_value original\n        group by metric_id,metric_time\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__post_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.793422Z", "completed_at": "2025-01-22T04:45:21.806462Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.808597Z", "completed_at": "2025-01-22T04:45:21.808608Z"}], "thread_id": "Thread-2", "execution_time": 0.019640445709228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.fct_fb__video_retention", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'post_video_retention_graph','post_video_retention_graph_autoplayed','post_video_retention_graph_clicked_to_play'\n        )\n),\nunnested_data as (\nselect e.* except(metric_value),\n    safe_cast(json_value(m,\"$.key\") as int64) as second,\n    safe_cast(json_value(m,\"$.value\") as float64) as metric_value,\nfrom extracted_metric_value e, \nunnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,second\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_retention`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.799966Z", "completed_at": "2025-01-22T04:45:21.807947Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.810149Z", "completed_at": "2025-01-22T04:45:21.810159Z"}], "thread_id": "Thread-1", "execution_time": 0.02030038833618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.fct_fb__video_view_time_by_age_gender", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'post_video_view_time_by_age_bucket_and_gender'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\ncase split(json_value(m,\"$.key\"),\".\")[safe_offset(0)] \n    when \"F\" then \"Female\" \n    when 'M' then 'Male' \n    when 'U' then 'Unknown' \n    end as gender_group,\nsplit(json_value(m,\"$.key\"),\".\")[safe_offset(1)] as age_group,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,gender_group,age_group\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_view_time_by_age_gender`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.811894Z", "completed_at": "2025-01-22T04:45:21.825558Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.827836Z", "completed_at": "2025-01-22T04:45:21.827847Z"}], "thread_id": "Thread-4", "execution_time": 0.02076435089111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.fb.fct_fb__video_view_time_by_city", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'post_video_view_time_by_region_id'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\njson_value(m,\"$.key\") as city,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,city\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_view_time_by_city`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.828896Z", "completed_at": "2025-01-22T04:45:21.843698Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.849703Z", "completed_at": "2025-01-22T04:45:21.849713Z"}], "thread_id": "Thread-1", "execution_time": 0.030673742294311523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_facebookads__audienceinsights", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        safe_cast(account_id as string) account_id,\n        safe_cast(campaign_id as string) campaign_id ,\n        date_start ,\n        age,\n        gender,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__audienceInsights`\n)\nSELECT\n    *\nFROM\n    source\n\n\nunion all\n\nselect \n    account_id ,\n    campaign_id ,\n    date_start ,\n    age,\n    gender,\n    clicks,\n    impressions,\n    reach,\n    spend,\n\n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n    \nfrom `agile-scheme-394814`.`dbt_prod`.`stg_fb__age_gender_demographic`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__audienceinsights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.820493Z", "completed_at": "2025-01-22T04:45:21.836300Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.856451Z", "completed_at": "2025-01-22T04:45:21.856462Z"}], "thread_id": "Thread-2", "execution_time": 0.03833413124084473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_facebookads__accountinsights", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        safe_cast(account_id as string) account_id,\n        date_start,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__accountInsights`\n)\nSELECT\n    *\nFROM\n    source\n\nunion all\nselect \n    account_id,\n    date_start,\n    clicks,\n    impressions,\n    reach,\n    spend,\n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_fb__account_insights`\nwhere 1=1 \n\n  and date_start >= '2024-07-01'\n", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__accountinsights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:20.937723Z", "completed_at": "2025-01-22T04:45:21.859769Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.876139Z", "completed_at": "2025-01-22T04:45:21.876150Z"}], "thread_id": "Thread-3", "execution_time": 0.9447536468505859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.metricflow_time_spine", "compiled": true, "compiled_code": "\nwith days as (\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n     + \n    \n    p12.generated_number * power(2, 12)\n     + \n    \n    p13.generated_number * power(2, 13)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n     cross join \n    \n    p as p12\n     cross join \n    \n    p as p13\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 10958\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n        datetime_add(\n            cast( DATE(2000,01,01) as datetime),\n        interval row_number() over (order by 1) - 1 day\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= DATE(2030,01,01)\n\n)\n\nselect * from filtered\n\n\n),\n\nfinal as (\n    select cast(date_day as date) as date_day\n    from days\n)\n\nselect *\nfrom final", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`metricflow_time_spine`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.860384Z", "completed_at": "2025-01-22T04:45:21.879508Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.891144Z", "completed_at": "2025-01-22T04:45:21.891155Z"}], "thread_id": "Thread-4", "execution_time": 0.05557441711425781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__events", "compiled": true, "compiled_code": "-- This staging model contains key creation and window functions. Keeping window functions outside of the base incremental model ensures that the incremental updates don't artificially limit the window partition sizes (ex: if a session spans 2 days, but only 1 day is in the incremental update)\nwith base_events as (\n    select * from `agile-scheme-394814`.`dbt_prod`.`base_ga4__events`\n),\n-- Add key that captures a combination of stream_id and user_pseudo_id to uniquely identify a 'client' (aka. a device) within a single stream\ninclude_client_key as (\n    select *\n    , to_base64(md5(concat(user_pseudo_id, stream_id))) as client_key\n    from base_events\n),\n-- Add key for sessions. session_key will be null if client_key is null due to consent being denied. ga_session_id may be null during audience trigger events. \ninclude_session_key as (\n    select \n        *,\n        to_base64(md5(CONCAT(client_key, CAST(session_id as STRING)))) as session_key\n    from include_client_key\n),\n-- Add a key that combines session key and date. Useful when working with session table within date-partitioned tables\ninclude_session_partition_key as (\n    select \n        *,\n        CONCAT(session_key, CAST(event_date_dt as STRING)) as session_partition_key\n    from include_session_key\n),\n-- Add unique key for events\ninclude_event_key as (\n    select \n        *,\n        to_base64(md5(CONCAT(session_key, event_name, CAST(event_timestamp as STRING), to_json_string(event_params)))) as event_key -- Surrogate key for unique events.  \n    from include_session_partition_key\n),\ndetect_gclid as (\n    select\n        * except (event_source, event_medium, event_campaign),\n        case\n            when (page_location like '%gclid%' and event_source is null) then \"google\"\n            else event_source\n        end as event_source,\n        case\n            when (page_location like '%gclid%' and event_medium is null) then \"cpc\"\n            when (page_location like '%gclid%' and event_medium = 'organic') then \"cpc\"\n            else event_medium\n        end as event_medium,\n        case\n            when (page_location like '%gclid%' and event_campaign is null) then \"(cpc)\"\n            when (page_location like '%gclid%' and event_campaign = 'organic') then \"(cpc)\"\n            else event_campaign\n        end as event_campaign\n    from include_event_key\n),\n\nextract_query_params as (\n    select\n        *,\n    REGEXP_EXTRACT( page_location, r'gclid=([^&|\\?|#]*)'  )\n as query_param_gclid\n            ,\n    REGEXP_EXTRACT( page_location, r'fbclid=([^&|\\?|#]*)'  )\n as query_param_fbclid\n            ,\n    REGEXP_EXTRACT( page_location, r'keyword=([^&|\\?|#]*)'  )\n as query_param_keyword\n            from detect_gclid\n),\n\nremove_query_params as (\n    select \n        * EXCEPT (page_location, page_referrer),\n        page_location as original_page_location,\n        page_referrer as original_page_referrer,\n        \n   REGEXP_EXTRACT(page_location, '(?:\\\\w+:)?\\\\/\\\\/[^\\\\/]+([^?#]+)')\n as page_path,\n        -- If there are query parameters to exclude, exclude them using regex\n        \n        \nREGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(page_location, '(\\\\?|&)(gclid|fbclid|_ga)=[^&]*', '\\\\1'), '\\\\?&+', '?'), '&+', '&'), '\\\\?$|&$', '')\n as page_location,\n        \nREGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(page_referrer, '(\\\\?|&)(gclid|fbclid|_ga)=[^&]*', '\\\\1'), '\\\\?&+', '?'), '&+', '&'), '\\\\?$|&$', '')\n as page_referrer\n        \n\n        \n        from extract_query_params\n        \n),\nenrich_params as (\n    select \n        *,\n        \n    REGEXP_EXTRACT(page_location, '(?:http[s]?://)?(?:www\\\\.)?(.*?)(?:(?:/|:)(?:.)*|$)')\n as page_hostname,\n        \n    REGEXP_EXTRACT(page_location, '\\\\?(.+)')\n as page_query_string,\n    from remove_query_params\n),\npage_key as (\n    select\n        *,\n        (concat( cast(event_date_dt as string), page_location )) as page_key,\n        case\n            when event_name = 'page_view' then to_base64(md5(concat(session_key, page_referrer)))\n            else to_base64(md5(concat(session_key, page_location)))\n        end as page_engagement_key\n    from enrich_params\n)\nselect * from page_key", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.880431Z", "completed_at": "2025-01-22T04:45:21.893062Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.900863Z", "completed_at": "2025-01-22T04:45:21.900873Z"}], "thread_id": "Thread-1", "execution_time": 0.0303192138671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_facebookads__creatives", "compiled": true, "compiled_code": "SELECT\n    COALESCE(\n        thumbnail_url,\n        image_url\n    ) as thumbnailUrl,\n    name,\n    regexp_extract (\n        body,\n        r\"^(.*)\\n\"\n    ) title,\n    body,\n    call_to_action_type,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__creatives`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__creatives`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.886103Z", "completed_at": "2025-01-22T04:45:21.894479Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.902907Z", "completed_at": "2025-01-22T04:45:21.902918Z"}], "thread_id": "Thread-2", "execution_time": 0.027574539184570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_googleads__ad_groups", "compiled": true, "compiled_code": "\n\nSELECT\n    ag.account_id,\n    ag.campaign_id,\n    ag.ad_group_id,\n    ag.ad_group_type,\n    ag.ad_group_name\nFROM\n   `agile-scheme-394814`.`dbt_prod`.`base_googleAds__adgroups`\n    ag", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_groups`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.895135Z", "completed_at": "2025-01-22T04:45:21.905406Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.911965Z", "completed_at": "2025-01-22T04:45:21.911976Z"}], "thread_id": "Thread-3", "execution_time": 0.021629810333251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_facebookads__regioninsights", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        safe_cast(account_id as string) account_id,\n        safe_cast(campaign_id as string) campaign_id,\n        date_start ,\n        region,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__regionInsights`\n)\nSELECT\n    *\nFROM\n    source\n\nunion all \nselect \n    account_id ,\n    campaign_id,\n    date_start ,\n    region,\n    clicks,\n    impressions,\n    reach,\n    spend,\n        \n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_fb__region_demographic`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__regioninsights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.907460Z", "completed_at": "2025-01-22T04:45:21.915850Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.924872Z", "completed_at": "2025-01-22T04:45:21.924883Z"}], "thread_id": "Thread-4", "execution_time": 0.022760868072509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_googleads__campaigns", "compiled": true, "compiled_code": "\n\nSELECT\n    A.account_name,\n    A.currency_code,\n    C.campaign_id,\n    C.campaign_name,\n    C.advertising_channel,\n    C.bidding_stategy,\n    C.budget,\n    C.budget_period,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_googleAds__accounts` A\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`base_googleAds__campaigns` C\n    ON A.account_id = C.account_id", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaigns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.916436Z", "completed_at": "2025-01-22T04:45:21.926679Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.933512Z", "completed_at": "2025-01-22T04:45:21.933523Z"}], "thread_id": "Thread-1", "execution_time": 0.026843547821044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__invoicedetails", "compiled": true, "compiled_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    invoices.discount*safe_divide(invoiceDetails.subTotal,invoices.total+invoices.discount) as order_discount,\n    invoiceDetails.productId as product_id,\n    invoiceDetails.productCode as product_code,\n    invoiceDetails.quantity,\n    invoiceDetails.price,\n    invoiceDetails.discountRatio as discount_ratio,\n    invoiceDetails.discount,\n    invoiceDetails.subTotal,\n    invoices.transaction_type,\n    invoices.modifiedDate as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`\n    invoices\n    left join unnest(invoiceDetails) invoiceDetails", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.920988Z", "completed_at": "2025-01-22T04:45:21.927997Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.935151Z", "completed_at": "2025-01-22T04:45:21.935162Z"}], "thread_id": "Thread-2", "execution_time": 0.022310972213745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__invoicepayments", "compiled": true, "compiled_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    invoices.transaction_type,\n    invoices.modifiedDate as modified_date\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`\n    invoices\n    left join unnest(payments) payments", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicepayments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.928651Z", "completed_at": "2025-01-22T04:45:21.936963Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.942908Z", "completed_at": "2025-01-22T04:45:21.942919Z"}], "thread_id": "Thread-3", "execution_time": 0.022716999053955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__invoices", "compiled": true, "compiled_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    soldById AS employee_id,\n    customerId as customer_id,\n    orderCode AS reference_transaction_id,\n    total,\n    totalPayment as total_payment,\n    statusValue AS transaction_status,\n    createdDate as created_Date,\n    coalesce(modifiedDate,createdDate) as modified_date,\n    discountRatio as discount_ratio,\n    discount,\n    transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.938288Z", "completed_at": "2025-01-22T04:45:21.946080Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.952080Z", "completed_at": "2025-01-22T04:45:21.952091Z"}], "thread_id": "Thread-4", "execution_time": 0.017716169357299805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails", "compiled": true, "compiled_code": "SELECT\n    purchaseOrders.id AS transaction_id,\n    purchaseOrders.code AS transaction_code,\n    purchaseOrders.purchaseDate AS transaction_date,\n    purchaseOrders.transaction_status,\n    purchaseOrders.branchId as branch_id,\n    purchaseOrders.purchaseById AS employee_id,\n    purchaseOrders.supplierId as supplier_id,\n    purchaseOrderDetails.productId as product_id,\n    purchaseOrderDetails.productCode as product_code,\n    purchaseOrderDetails.quantity,\n    purchaseOrderDetails.price,\n    purchaseOrderDetails.discountRatio as discount_ratio,\n    purchaseOrderDetails.discount,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders` purchaseOrders\n    left join unnest(purchaseOrderDetails) purchaseOrderDetails", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__purchaseorderdetails`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.947602Z", "completed_at": "2025-01-22T04:45:21.954438Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.964911Z", "completed_at": "2025-01-22T04:45:21.964922Z"}], "thread_id": "Thread-1", "execution_time": 0.022811174392700195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__purchaseorders", "compiled": true, "compiled_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    purchaseById AS employee_id,\n    supplierId as supplier_id,\n    partnerType as partner_type,\n    total,\n    totalPayment as total_payment,\n    discount,\n    discountRatio as discount_ratio ,\n    transaction_status,\n    createdDate as created_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__purchaseorders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.960013Z", "completed_at": "2025-01-22T04:45:21.967591Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.970190Z", "completed_at": "2025-01-22T04:45:21.970202Z"}], "thread_id": "Thread-3", "execution_time": 0.018909454345703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__returndetails", "compiled": true, "compiled_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue as transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    returns.saleChannelId as salechannel_id,\n    returns.returnDiscount*safe_divide(returnDetails.price*returnDetails.quantity,returns.returnTotal+returns.returnDiscount) as order_discount,\n    returnDetails.productId as product_id,\n    returnDetails.productCode as product_code,\n    returnDetails.quantity,\n    returnDetails.price,\n    returnDetails.subTotal,\n    returns.transaction_type,\n    returns.modifiedDate as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`\n    returns\n    left join unnest(returnDetails) returnDetails", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.955816Z", "completed_at": "2025-01-22T04:45:21.969567Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.975648Z", "completed_at": "2025-01-22T04:45:21.975659Z"}], "thread_id": "Thread-2", "execution_time": 0.028845787048339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__suppliers", "compiled": true, "compiled_code": "\n\nSELECT\n    distinct\n    supplierId as supplier_id,\n    supplierName as supplier_name,\n    supplierCode as supplier_code\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__suppliers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.971151Z", "completed_at": "2025-01-22T04:45:21.982186Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.984461Z", "completed_at": "2025-01-22T04:45:21.984471Z"}], "thread_id": "Thread-4", "execution_time": 0.018717288970947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__returnpayments", "compiled": true, "compiled_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue AS transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    returns.transaction_type,\n    modifiedDate as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`\n    returns\n    left join unnest(payments) payments", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returnpayments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.977620Z", "completed_at": "2025-01-22T04:45:21.985378Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:21.988028Z", "completed_at": "2025-01-22T04:45:21.988038Z"}], "thread_id": "Thread-1", "execution_time": 0.01920008659362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__returns", "compiled": true, "compiled_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    invoiceId AS reference_transaction_id,\n    returnDate AS transaction_date,\n    branchId  as branch_id,\n    receivedById AS employee_id,\n    customerId as customer_id,\n    returnTotal AS total,\n    returnFeeRatio as return_fee_ratio,\n    returnDiscount as return_discount,\n    totalPayment as total_payment,\n    returnFee as return_fee,\n    statusValue AS transaction_status,\n    saleChannelId as salechannel_id,\n    createdDate as created_date ,\n    coalesce(modifiedDate,createdDate) as modified_date,\n    transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.992850Z", "completed_at": "2025-01-22T04:45:21.999606Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.002169Z", "completed_at": "2025-01-22T04:45:22.002180Z"}], "thread_id": "Thread-2", "execution_time": 0.01852250099182129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__posts", "compiled": true, "compiled_code": "SELECT\n    regexp_extract(message,r'^(.*\\n.*)') post_title,\n    admin_creator.id AS user_id,\n    admin_creator.name AS user_name,\n    updated_at,\n    inserted_at,\n    page_id,\n    post_id,\n    like_count,\n    reaction_count,\n    comment_count,\n    phone_number_count,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_pancake__posts`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__posts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:21.988961Z", "completed_at": "2025-01-22T04:45:22.000866Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.006948Z", "completed_at": "2025-01-22T04:45:22.006959Z"}], "thread_id": "Thread-3", "execution_time": 0.024198293685913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__customers", "compiled": true, "compiled_code": "SELECT\n    customer_id,\n    customer_name,\n    gender,\n    inserted_at,\n    phone_numbers,\n    city,\n    customer_facebook_id,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_pancake__customers`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.010226Z", "completed_at": "2025-01-22T04:45:22.018722Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.034256Z", "completed_at": "2025-01-22T04:45:22.034267Z"}], "thread_id": "Thread-1", "execution_time": 0.032875776290893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__conversations", "compiled": true, "compiled_code": "\n\nSELECT\n    conversations.inserted_at,\n    to_hex(md5(cast(coalesce(cast(conversation_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as string), '_dbt_utils_surrogate_key_null_') as string))) as conversation_id,\n    conversations.conversation_id as chat_id,\n    conversations.customer_id,\n    conversations.user_id,\n    conversations.page_id,\n    conversations.post_id,\n    conversations.tag_id,\n    conversations.message_count,\n    conversations.snippet,\n    conversations.type,\n    coalesce(conversations.updated_at, conversations.inserted_at) as updated_at,\n    conversations.ad_id,\n    conversations.ad_inserted_at,\n    conversations.ad_post_id,\n    conversations.tag_histories\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_pancake__conversations`\n    conversations", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__conversations`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.020798Z", "completed_at": "2025-01-22T04:45:22.147649Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.155101Z", "completed_at": "2025-01-22T04:45:22.155116Z"}], "thread_id": "Thread-2", "execution_time": 0.13949108123779297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_stg_5sfashion__orders__order_id_.a11aa2146b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect `order_id`\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__orders`\nwhere `order_id` is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.035981Z", "completed_at": "2025-01-22T04:45:22.161117Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.167580Z", "completed_at": "2025-01-22T04:45:22.167588Z"}], "thread_id": "Thread-3", "execution_time": 0.15041637420654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_stg_5sfashion__orders__order_id_.cc1d908e3a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select `order_id` as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__orders`\n  where `order_id` is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.156066Z", "completed_at": "2025-01-22T04:45:22.169260Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.171500Z", "completed_at": "2025-01-22T04:45:22.171510Z"}], "thread_id": "Thread-4", "execution_time": 0.1363370418548584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__sms_campaigns", "compiled": true, "compiled_code": "\n\nSELECT\n    DISTINCT campaign,\n    date(start_date) start_date,\n    date(end_date) end_date,\n    audience,\n    sms_type,\n    sms_id\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`", "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__sms_campaigns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.162643Z", "completed_at": "2025-01-22T04:45:22.172373Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.175003Z", "completed_at": "2025-01-22T04:45:22.175013Z"}], "thread_id": "Thread-1", "execution_time": 0.020740985870361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_stg_esms__sent_data_sent_id.47c6bc997c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sent_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`\nwhere sent_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.175942Z", "completed_at": "2025-01-22T04:45:22.188755Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.195315Z", "completed_at": "2025-01-22T04:45:22.195327Z"}], "thread_id": "Thread-2", "execution_time": 0.025350332260131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_stg_esms__sent_data_sent_id.7d9e07e2b4", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select sent_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`\n  where sent_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.180789Z", "completed_at": "2025-01-22T04:45:22.190099Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.196907Z", "completed_at": "2025-01-22T04:45:22.196918Z"}], "thread_id": "Thread-3", "execution_time": 0.02620530128479004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.google_ad_group_performance", "compiled": true, "compiled_code": "\n\nWITH ad_group_stats AS (\n\n    SELECT\n        ad_group_id,\n        campaign_id,\n        DATE,\n        SUM(clicks) clicks,\n        SUM(conversions) conversions,\n        SUM(conversions_value) conversions_value,\n        SUM(cost) cost,\n        SUM(impressions) impressions,\n        SUM(interactions) interactions,\n        SUM(view_through_conversions) view_through_conversions,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_stats`\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    ags.campaign_id,\n    ags.ad_group_id,\n    ags.date,\n    ags.network_type,\n    ags.top_impression_percentage,\n    ags.search_top_impression_share,\n    ags.video_quartile_p100_rate,\n    ags.video_quartile_p75_rate,\n    ags.video_quartile_p50_rate,\n    ags.video_quartile_p25_rate,\n    ags.absolute_top_impression_percentage,\n    ags.content_impression_share,\n    ags.content_rank_lost_impression_share,\n    ags.cross_device_conversions,\n    ags.engagements,\n    ags.relative_ctr,\n    ags.search_absolute_top_impression_share,\n    ags.search_budget_lost_absolute_top_impression_share,\n    ags.search_budget_lost_top_impression_share,\n    ags.search_impression_share,\n    ags.search_rank_lost_absolute_top_impression_share,\n    ags.search_rank_lost_impression_share,\n    ags.search_rank_lost_top_impression_share,\n    ags.video_views,\n    s.clicks,\n    s.conversions,\n    s.cost,\n    s.impressions,\n    s.interactions,\n    s.view_through_conversions,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_cross_device_stats`\n    ags\n    LEFT JOIN ad_group_stats s\n    ON ags.campaign_id = s.campaign_id\n    AND ags.ad_group_id = s.ad_group_id\n    AND ags.date = s.date", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`google_ad_group_performance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.190757Z", "completed_at": "2025-01-22T04:45:22.198666Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.205768Z", "completed_at": "2025-01-22T04:45:22.205778Z"}], "thread_id": "Thread-4", "execution_time": 0.019915103912353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.google_campaign_performance", "compiled": true, "compiled_code": "\n\nWITH campaign_stats AS (\n\n    SELECT\n        campaign_id,\n        DATE,\n        slot,\n        SUM(cost) AS ads_cost,\n        SUM(impressions) AS ads_impressions,\n        SUM(clicks) AS ads_clicks,\n        SUM(conversions) AS ads_conversions,\n        SUM(interactions) AS ads_interactions,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`\n    GROUP BY\n        1,\n        2,\n        3\n),\ncampaign_conversion_stats AS (\n    SELECT\n        campaign_id,\n        DATE,\n        slot,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase','web_purchase')) THEN (conversions)\n                ELSE NULL\n            END\n        ) AS ads_purchase,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase','web_purchase')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_purchase_value,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('add_to_cart','web_add_to_cart')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_atc,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_call', 'website_message','web_click_calls', 'web_messages')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_contacts,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_conversion_stats`\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    cs.*,\n    ccs.ads_purchase,\n    ccs.ads_purchase_value,\n    ccs.ads_contacts,\n    ccs.ads_atc,\nFROM\n    campaign_stats cs\n    LEFT JOIN campaign_conversion_stats ccs\n    ON cs.campaign_id = ccs.campaign_id\n    AND cs.date = ccs.date\n    AND cs.slot = ccs.slot", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`google_campaign_performance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.199353Z", "completed_at": "2025-01-22T04:45:22.213714Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.220414Z", "completed_at": "2025-01-22T04:45:22.220424Z"}], "thread_id": "Thread-1", "execution_time": 0.0311276912689209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`\nwhere date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.208205Z", "completed_at": "2025-01-22T04:45:22.221553Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.223736Z", "completed_at": "2025-01-22T04:45:22.223745Z"}], "thread_id": "Thread-2", "execution_time": 0.018778324127197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select row_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`\n  where row_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.215235Z", "completed_at": "2025-01-22T04:45:22.230703Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.233678Z", "completed_at": "2025-01-22T04:45:22.233689Z"}], "thread_id": "Thread-3", "execution_time": 0.0269320011138916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__contents", "compiled": true, "compiled_code": "\n\nselect \n* except (sheet_name,_batched_at),\ncase when sheet_name = 'PAGE T\u1ed4NG' then 'social' else 'performance' end as content_type,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__contents`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__contents`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.225358Z", "completed_at": "2025-01-22T04:45:22.236182Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.248450Z", "completed_at": "2025-01-22T04:45:22.248461Z"}], "thread_id": "Thread-4", "execution_time": 0.026418447494506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__training_performance", "compiled": true, "compiled_code": "\n\n\n\nwith _metrics as (\n    select\n        date_trunc(start_date,month) as month,\n        sum(training_cost) as total_training_cost,\n        sum(hours) as total_hours,\n        count(emp_code) as total_trainees,\n        sum(training_cost)/count(emp_code) as avg_training_cost,\n        sum(hours)/count(emp_code) as avg_training_hr,\n        avg(rating_avg) as avg_rating,\n        avg(test_score) as avg_test_score,\n        avg(rating_content) as avg_rating_content,\n        avg(rating_online) as avg_rating_online,\n        avg(rating_host) as avg_rating_host,\n        avg(rating_instructor) as avg_rating_instructor,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__internal_training`\n    group by 1\n),\n\n_target as (\n  select *\n    from (\n      select \n        reporting_period, \n        target_id, \n        value\n      from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__company_targets`\n      where department = 'P. \u0110\u00e0o t\u1ea1o'\n  ) \n  pivot(\n      sum(value) as target for target_id in (\n        \n          \"DT.001\" as num_trainee,\n        \n          \"DT.002\" as avg_training_hr,\n        \n          \"DT.003\" as rating,\n        \n          \"DT.004\" as avg_training_cost\n        \n      )\n    )\n)\n\nselect \n  m.*,\n  t.* except(reporting_period)\nfrom _metrics m \nleft join _target t on m.month = t.reporting_period", "relation_name": "`agile-scheme-394814`.`dbt_prod_hr`.`fct__training_performance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.238201Z", "completed_at": "2025-01-22T04:45:22.269110Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.275743Z", "completed_at": "2025-01-22T04:45:22.275754Z"}], "thread_id": "Thread-1", "execution_time": 0.04287457466125488, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__manufacture_plan_plan_month__product_code__vendor__po_code.ca65599709", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        plan_month, product_code, vendor, po_code\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__manufacture_plan`\n    group by plan_month, product_code, vendor, po_code\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.252633Z", "completed_at": "2025-01-22T04:45:22.269775Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.276703Z", "completed_at": "2025-01-22T04:45:22.276714Z"}], "thread_id": "Thread-2", "execution_time": 0.04208564758300781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__maintainance_branch_code__created_at__description.19787c00ce", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        branch_code, created_at, description\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__maintainance`\n    group by branch_code, created_at, description\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.262153Z", "completed_at": "2025-01-22T04:45:22.275099Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.277737Z", "completed_at": "2025-01-22T04:45:22.277748Z"}], "thread_id": "Thread-3", "execution_time": 0.02590179443359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_pancake__tags", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_tags__*` original\n        group by id\n    )\n)\n\nSELECT\ndistinct\n    source.id AS tag_id,\n    source.text AS tag_value,\n    ref.category\nFROM\n    source\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__pancake_tags` ref on source.text = ref.tag_value", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__tags`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.270492Z", "completed_at": "2025-01-22T04:45:22.279352Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.282366Z", "completed_at": "2025-01-22T04:45:22.282376Z"}], "thread_id": "Thread-4", "execution_time": 0.021112442016601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__customers", "compiled": true, "compiled_code": "\n\nWITH staging AS (\n\n    SELECT\n        C.id AS customer_id,\n        C.code AS customer_code,\n        C.NAME AS customer_name,\n        C.gender,\n        EXTRACT(\n            MONTH\n            FROM\n                C.birthDate\n        ) AS birth_month,\n        C.birthDate AS birth_date,\n        regexp_replace(C.contactNumber,r'\\D','') AS contact_number,\n        C.branchId AS branch_id,\n        C.TYPE AS customer_type,\n        C.groups AS customer_groups,\n        C.debt,\n        C.totalInvoiced AS total_invoiced,\n        C.totalPoint AS total_point,\n        C.totalRevenue AS total_revenue,\n        C.rewardPoint AS rewardpoint,\n        C.createdDate AS created_date,\n        B.branch_name,\n        C.modifieddate as modified_date,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__customers` C\n    left join  `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches` B on C.branchId = B.branch_id\n)\nSELECT\n    DISTINCT staging.customer_id,\n    staging.customer_name,\n    staging.gender,\n    staging.birth_month,\n    staging.birth_date,\n    case \n        when \n            length(staging.contact_number) = 9 \n            and regexp_contains(staging.contact_number,r'^[1-9]') \n            then concat('0',staging.contact_number) \n        else \n            regexp_replace(staging.contact_number,r'^(84|840)','0') \n        end as contact_number,\n    staging.branch_id,\n    staging.customer_type,\n    staging.customer_groups,\n    staging.debt,\n    staging.total_invoiced,\n    staging.total_point,\n    staging.total_revenue,\n    staging.rewardpoint,\n    staging.created_date,\n    staging.branch_name,\n    staging.modified_date,\n    CASE\n        WHEN DATE_TRUNC(DATE(staging.created_date), MONTH) < DATE_TRUNC(CURRENT_DATE(), MONTH) THEN 'old'\n        ELSE 'new'END AS customer_recency_group,\n    FROM\n        staging", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.287452Z", "completed_at": "2025-01-22T04:45:22.317080Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.319411Z", "completed_at": "2025-01-22T04:45:22.319422Z"}], "thread_id": "Thread-1", "execution_time": 0.038056373596191406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_kiotviet__products", "compiled": true, "compiled_code": "\n\n\n\nWITH source AS (\n\n  SELECT\n    p.*\n  FROM\n    `agile-scheme-394814`.`KiotViet`.`p_products_list__*` p \n    left join `agile-scheme-394814`.`KiotViet`.`p_webhook_product_delete` wh on p.id = wh.id\n\n  WHERE wh.id is null\n  \n    and parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(CURRENT_DATE,INTERVAL -1 DAY)\n  \n),\ndeduplicate AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modifiedDate DESC,_batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n),\npreprocess AS (\n  SELECT\n    p.id AS product_id,\n    p.categoryId AS category_id,\n    p.fullName AS product_name,\n    p.code as extended_code,\n    REGEXP_REPLACE(p.fullName,r'\\s\\-.*$','') AS class_name,\n    regexp_extract(p.code,r'-?([A-Z0-9a-z.]+)$') AS product_code,\n    regexp_extract(p.code,r'(\\w+)-') AS product_code_prefix,\n    COALESCE(regexp_extract(p.code, r'[A-Z]{3}(2[1-5])'), \"C\u0169\") AS year,\n    REGEXP_REPLACE(p.code,r'\\d{2}$','') AS class_code,\n    p.trademarkName AS trademarkName,\n    p.allowsSale AS is_alow_sale,\n    p.isActive AS is_active,\n    CASE\n      p.type\n      WHEN 1 THEN 'Combo'\n      WHEN 2 THEN 'H\u00e0ng ho\u00e1'\n      WHEN 3 THEN 'D\u1ecbch v\u1ee5'\n    END AS type,\n    p.attributes,\n    C.sub_productline,\n    C.category,\n    C.productline,\n    C.ads_product_mapping,\n    C.product_group,\n  FROM\n    deduplicate p\n    INNER JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__categories` AS C\n    ON p.categoryId = C.category_id\n)\nSELECT\n  *,\n  coalesce(safe_cast(regexp_extract(product_code_prefix,r'[CX]?(\\d+)[CX]?') as int64),1) as product_multiplier,\n  CASE\n        WHEN p.year = \"22\" THEN regexp_extract(product_code, r\"^[X0]{1,2}\")\n        WHEN p.year = \"23\" THEN regexp_extract(product_code, r\"^[Y0]{1,2}\")\n        else regexp_extract(product_code, r\"^Y{1,2}|^0{1,2}\") end\n      AS tax_code,\n  CASE\n        WHEN p.year = \"24\" THEN regexp_extract(product_code, r\"^(?:[ZXY0]{0,3})([BC0][A-Z]{3}[0-9]{3,5})\")\n        else regexp_extract(product_code, r\"^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})\") end\n      AS product_design_code,\n  regexp_extract(product_code, r\"^(?:[ZXY0]{0,3})(?:[BC0]?[A-Z]{3}[0-9]{3,5})([A-Z]{3})\")AS color_code,\n  regexp_extract(product_code, r\"^(?:[ZXY0]{0,3})(?:[BC0]?[A-Z]{3}[0-9]{3,5})(?:[A-Z]{3})(\\d{2})\")AS size_code,\n  regexp_extract(product_code, r\"^[ZXY0]{0,2}?(?:[CB0]?[A-Z]{3}\\d{3,5})(?:[A-Z]{3})(?:\\d{2})([KT0])\")AS weaving_method_code,\n  regexp_extract(product_code, r\"^[ZXY0]{0,2}?(?:[CB0]?[A-Z]{3}\\d{3,5})(?:[A-Z]{3})(?:\\d{2})(?:[KT0])([0-6])\")AS form_code,\n  FROM\n  preprocess p", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.300587Z", "completed_at": "2025-01-22T04:45:22.317936Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.321336Z", "completed_at": "2025-01-22T04:45:22.321347Z"}], "thread_id": "Thread-3", "execution_time": 0.037482261657714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_kiotviet__transfers_details_transfer_id__product_id.3f26bf0e47", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transfer_id, product_id\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__transfers_details`\n    group by transfer_id, product_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.307018Z", "completed_at": "2025-01-22T04:45:22.318750Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.322340Z", "completed_at": "2025-01-22T04:45:22.322351Z"}], "thread_id": "Thread-2", "execution_time": 0.039121150970458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__curent_inventory", "compiled": true, "compiled_code": "\n\nwith source as (select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__inventories` original\n        group by product_id,branch_id\n    ))\nselect * from source where on_hand > 0", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`fct__curent_inventory`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.331579Z", "completed_at": "2025-01-22T04:45:22.359419Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.361208Z", "completed_at": "2025-01-22T04:45:22.361219Z"}], "thread_id": "Thread-1", "execution_time": 0.03485727310180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_nhanhvn__inventories", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        safe_cast(\n            id AS int64\n        ) AS product_id,\n        datetime_add(\n            _batched_at,\n            INTERVAL 7 HOUR\n        ) AS updated_at,\n        safe_cast(\n            depots.depotId AS int64\n        ) AS depot_id,\n        depots.available,\n        depots.remain,\n        depots.shipping,\n        depots.damaged,\n        depots.holding,\n        depots.warranty,\n        depots.warrantyHolding AS warranty_holding,\n    FROM\n        `agile-scheme-394814`.`Nhanhvn`.`p_webhook_inventoryChange`,\n        unnest(depots) depots\n    WHERE\n        depots.remain IS NOT NULL\n    \n    AND date(_batched_at) >= date(_dbt_max_partition)\n    \nUNION ALL\nSELECT\n    safe_cast(\n        idNhanh AS int64\n    ) AS product_id,\n    TIMESTAMP(datetime_add(_batched_at, INTERVAL 7 HOUR)) AS updated_at,\n    safe_cast(\n        depots.depotId AS int64\n    ) AS depot_id,\n    depots.available,\n    depots.remain,\n    depots.shipping,\n    depots.damage,\n    depots.holding,\n    depots.warranty,\n    depots.warrantyHolding AS warranty_holding,\nFROM\n    `agile-scheme-394814`.`Nhanhvn`.`p_inventory_*`,\n    unnest(depots) depots\nWHERE\n    depots.remain <> 0\n    \n      and date(TIMESTAMP(datetime_add(_batched_at, INTERVAL 7 HOUR))) >= date(_dbt_max_partition)\n    \n)\nSELECT\n    inv.product_id,\n    d.depot_name,\n    inv.updated_at,\n    inv.available,\n    inv.remain,\n    inv.shipping,\n    inv.damaged,\n    inv.holding,\n    inv.warranty,\n    inv.warranty_holding,\nFROM\n    source inv\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__depots`\n    d\n    ON inv.depot_id = d.depot_id", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__inventories`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.340446Z", "completed_at": "2025-01-22T04:45:22.360275Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.364637Z", "completed_at": "2025-01-22T04:45:22.364648Z"}], "thread_id": "Thread-4", "execution_time": 0.03760671615600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.orders_items", "compiled": true, "compiled_code": "\n\n\nwith orders as (\n    SELECT\n    orders.* except(products),\n    products.product_id,\n    products.product_code,\n    products.price,\n    sum(products.quantity) quantity,\n    sum(products.item_discount) item_discount,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`\n    orders,\n    unnest(products) products\n    \n      where date(last_sync) >= date(_dbt_max_partition)\n    \n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41\n\n)\n\nSELECT\n    orders.order_id,\n    orders.sales_channel_id,\n    orders.depot_name,\n    orders.customer_id,\n    COALESCE(\n        orders.created_by_id,\n        orders.sale_id\n    ) AS created_by_id,\n    orders.traffic_source_id,\n    orders.order_type,\n    orders.order_status,\n    orders.created_date,\n    orders.product_id,\n    orders.product_code,\n    carriers.service_name,\n    orders.delivery_date,\n    orders.price,\n    orders.quantity,\n    orders.ship_address,\n    orders.item_discount,\n    orders.last_sync,\n    orders.order_discount /(COUNT(product_id) over w1) order_discount,\n    orders.money_used_points /(COUNT(product_id) over w1) AS money_used_points,\n    date_diff(orders.delivery_date, DATE(orders.created_date), DAY) /(COUNT(product_id) over w1) AS fulfillment_time,\n    ((orders.price - orders.item_discount) * orders.quantity) AS item_gross_amount,\n    (\n        orders.ship_fee + orders.cod_fee\n    ) /(COUNT(product_id) over w1) AS delivery_fee,\n    (\n        orders.receivables + orders.money_transfer + orders.money_deposit + orders.customer_ship_fee\n    ) /(COUNT(product_id) over w1) AS sub_total,\n    (COUNT(product_id) over w1) AS order_total_lines,\nFROM\n    orders\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__carriers`\n    carriers\n    ON orders.carrier_id = carriers.carrier_id\n    AND orders.service_id = carriers.service_id\nWHERE\n    orders.order_status IN (\n        'M\u1edbi','Ch\u1edd x\u00e1c nh\u1eadn','\u0110ang x\u00e1c nh\u1eadn','\u0110\u00e3 x\u00e1c nh\u1eadn','\u0110\u1ed5i kho h\u00e0ng','\u0110ang \u0111\u00f3ng g\u00f3i','\u0110\u00e3 \u0111\u00f3ng g\u00f3i','Ch\u1edd thu gom','\u0110ang chuy\u1ec3n','Th\u00e0nh c\u00f4ng'\n    ) window w1 AS (\n        PARTITION BY orders.order_id\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`orders_items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.348057Z", "completed_at": "2025-01-22T04:45:22.364004Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.366981Z", "completed_at": "2025-01-22T04:45:22.366993Z"}], "thread_id": "Thread-3", "execution_time": 0.03927755355834961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_stg_nhanhvn__ordersdetails_order_id.866b820324", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.401279Z", "completed_at": "2025-01-22T04:45:22.413951Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.414937Z", "completed_at": "2025-01-22T04:45:22.414948Z"}], "thread_id": "Thread-4", "execution_time": 0.018861055374145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__pagespeed_cwv", "compiled": true, "compiled_code": "\n\n\n\nselect \ndistinct\nanalysis_date,\nurl,\nstrategy,\nmetric_range,\nrange_distribution_category,\n\navg(percentile_cumulative_layout_shift_score) as percentile_cumulative_layout_shift_score,\navg(proportion_cumulative_layout_shift_score) as proportion_cumulative_layout_shift_score,\n\navg(percentile_experimental_time_to_first_byte) as percentile_experimental_time_to_first_byte,\navg(proportion_experimental_time_to_first_byte) as proportion_experimental_time_to_first_byte,\n\navg(percentile_first_contentful_paint_ms) as percentile_first_contentful_paint_ms,\navg(proportion_first_contentful_paint_ms) as proportion_first_contentful_paint_ms,\n\navg(percentile_first_input_delay_ms) as percentile_first_input_delay_ms,\navg(proportion_first_input_delay_ms) as proportion_first_input_delay_ms,\n\navg(percentile_interaction_to_next_paint) as percentile_interaction_to_next_paint,\navg(proportion_interaction_to_next_paint) as proportion_interaction_to_next_paint,\n\navg(percentile_largest_contentful_paint_ms) as percentile_largest_contentful_paint_ms,\navg(proportion_largest_contentful_paint_ms) as proportion_largest_contentful_paint_ms,\n\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_pagespeed__metrics`\nPIVOT (avg(metric_percentile_value) as percentile, avg(range_proportion) as proportion FOR metric_name IN (\n    'CUMULATIVE_LAYOUT_SHIFT_SCORE','EXPERIMENTAL_TIME_TO_FIRST_BYTE','FIRST_CONTENTFUL_PAINT_MS','FIRST_INPUT_DELAY_MS','INTERACTION_TO_NEXT_PAINT','LARGEST_CONTENTFUL_PAINT_MS'\n))\n\ngroup by 1,2,3,4,5", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__pagespeed_cwv`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.408605Z", "completed_at": "2025-01-22T04:45:22.424557Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.426026Z", "completed_at": "2025-01-22T04:45:22.426037Z"}], "thread_id": "Thread-1", "execution_time": 0.02816319465637207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__branches", "compiled": true, "compiled_code": "\n\nWITH branches AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`\n    WHERE 1=1\n        \n        and branch_id not in (1000087891,86414)\n),\n\nasm_list as ( \nselect \n    distinct\n    *\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__asms`\n)\n\nSELECT\n    branches.branch_id,\n    coalesce(branches.branch_name, asm_list.store_name) as branch_name,\n    asm_list.branch_code,\n    branches.channel,\n\n    asm_list.asm_name,\n    safe_cast(asm_list.phone as string) phone,\n    asm_list.email,\n\n    asm_list.local_page,\n    asm_list.local_page_code,\n    asm_list.region_page,\n    asm_list.pic as fb_ads_pic,\n\n    asm_list.province,\n    asm_list.province_code,\n    asm_list.region,\n    asm_list.region_code,\n\n    asm_list.opening_day,\n    asm_list.close_date,\n\n    asm_list.frontage,\n    asm_list.area_sqm,\n\n    coalesce(asm_list.type,branches.channel) as model_type,\nFROM\n    asm_list\nfull outer JOIN  branches\n    ON asm_list.store_name = branches.branch_name\n\nunion all \n\nselect \n    channel_id as branch_id,\n    channel as branch_name,\n    cast(null as string) as branch_code,\n    \"Online & Ecom\" as channel,\n\n    \"Online\" as asm_name,\n    cast(null as string) as phone,\n    cast(null as string) as email,\n\n    cast(null as string) as local_page,\n    cast(null as string) as local_page_code,\n    cast(null as string) as region_page,\n    cast(null as string) as fb_ads_pic,\n\n    \"Online & Ecom\" as province,\n    \"HNO\" as province_code,\n    \"Online & Ecom\" as region,\n    \"HNO\" as region_code,\n\n    date(\"2022-10-10\") as opening_day,\n    cast(null as date) as close_date,\n\n    cast(null as float64) as frontage,\n    cast(null as float64) as area_sqm,\n\n    \"S\u00e0n\" as type,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__sales_channels`", "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.417011Z", "completed_at": "2025-01-22T04:45:22.426923Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.435668Z", "completed_at": "2025-01-22T04:45:22.435679Z"}], "thread_id": "Thread-3", "execution_time": 0.03602194786071777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__pagespeed_score", "compiled": true, "compiled_code": "\n\n\n\nselect \ndistinct\nanalysis_date,\nurl,\nstrategy,\n-- metrics\noverall_speed_category,\naccessibility_score,best_practices_score,performance_score,pwa_score,seo_score,\n(accessibility_score+best_practices_score+performance_score+seo_score)/4 as overall_score\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_pagespeed__metrics`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__pagespeed_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.427581Z", "completed_at": "2025-01-22T04:45:22.437643Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.442123Z", "completed_at": "2025-01-22T04:45:22.442135Z"}], "thread_id": "Thread-4", "execution_time": 0.01853179931640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.pancake_performance__by__users", "compiled": true, "compiled_code": "\n\nwith user_stats as (\n    select \n    user_id,\n    hour,\n    avg(average_response_time) average_response_time,\n    sum(comment_count) comment_count,\n    sum(inbox_count) inbox_count,\n    sum(phone_number_count) phone_number_count,\n    sum(private_reply_count) private_reply_count,\n    sum(unique_comment_count) unique_comment_count,\n    sum(unique_inbox_count) unique_inbox_count,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_pancake__user_stats`\n    \n    where\n         date(hour) >= date(_dbt_max_partition)\n        \n        group by 1,2\n),\norders as (\n    select \n    seller_id,\n    date_trunc(inserted_at, hour) as hour,\n    count(distinct order_id) num_order,\n    sum(total_price) as total_payment,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_pancake__orders`\n    where\n    seller_id is not null\n    and status = '\u0110\u00e3 x\u00e1c nh\u1eadn'\n    \n         and date(updated_at) >= date_add(date(_dbt_max_partition), interval -3 day)\n        \n    group by 1,2\n)\n\nselect \nus.* except(hour, user_id),\ncoalesce(us.user_id, o.seller_id) as user_id,\ncoalesce(us.hour, o.hour) as hour,\no.num_order,\no.total_payment\nfrom user_stats us\nfull outer join orders o on us.user_id = o.seller_id and us.hour = o.hour", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`pancake_performance__by__users`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.444215Z", "completed_at": "2025-01-22T04:45:22.462189Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.464124Z", "completed_at": "2025-01-22T04:45:22.464134Z"}], "thread_id": "Thread-1", "execution_time": 0.027375459671020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct_sp__orders", "compiled": true, "compiled_code": "\n\n\n\nwith extracted_values as (\n    select \no.order_sn as order_number,\no.order_status,\no.cancel_by,\no.cancel_reason,\ndate(o.create_time) as transaction_date,\no.payment_method,\njson_value(item_list,'$.add_on_deal') as add_on_deal,\njson_value(item_list,'$.add_on_deal_id') as add_on_deal_id,\njson_value(item_list,'$.item_id') as item_id,\njson_value(item_list,'$.item_name') as item_name,\njson_value(item_list,'$.item_sku') as item_sku,\nsafe_cast(json_value(item_list,'$.main_item') as bool) as main_item,\njson_value(item_list,'$.model_id') as model_id,\njson_value(item_list,'$.model_name') as model_name,\nsafe_cast(json_value(item_list,'$.model_discounted_price') as float64) as model_discounted_price,\nsafe_cast(json_value(item_list,'$.model_original_price') as float64) as model_original_price,\nsafe_cast(json_value(item_list,'$.model_quantity_purchased') as int64) as model_quantity_purchased,\njson_value(item_list,'$.model_sku') as model_sku,\nCOALESCE(regexp_extract(json_value(item_list,'$.model_sku'), r'[A-Z]{3}(2[1-5])'), \"C\u0169\") AS year,\njson_value(item_list,'$.order_item_id') as order_item_id,\njson_value(item_list,'$.promotion_group_id') as promotion_group_id,\njson_value(item_list,'$.promotion_id') as promotion_id,\nnullif(json_value(item_list,'$.promotion_type'),\"\") as promotion_type,\nsafe_divide(o.total_amount, count(json_value(item_list,'$.model_sku')) over(partition by o.order_sn)) as line_amount,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_sp__orders` o\nleft join unnest(item_list) as item_list\n)\nselect \n    * except(promotion_type),\n    regexp_extract(model_sku,r'-?(\\w+)') as product_code,\n    \n    CASE\n        WHEN year = \"24\" THEN regexp_extract(model_sku, r\"^(?:[ZXY0]{0,3})([BC0][A-Z]{3}[0-9]{3,5})\")\n        else regexp_extract(model_sku, r\"^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})\") end\n    AS class_code,\n    case  when promotion_type = \"product_promotion\" then \"\u01afu \u0111\u00e3i s\u1ea3n ph\u1ea9m\"\n    when promotion_type = \"flash_sale\" then \"Flash Sale\"\n    when promotion_type = \"bundle_deal\" then \"\u01afu \u0111\u00e3i combo\"\n    when promotion_type = \"add_on_deal_main\" then \"\u01afu \u0111\u00e3i mua k\u00e8m s\u1ea3n ph\u1ea9m ch\u00ednh\"\n    when promotion_type = \"add_on_deal_sub\" then \"\u01afu \u0111\u00e3i mua k\u00e8m s\u1ea3n ph\u1ea9m ph\u1ee5\"\n    end as promotion_type\nfrom extracted_values", "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`fct_sp__orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.453022Z", "completed_at": "2025-01-22T04:45:22.471766Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.473297Z", "completed_at": "2025-01-22T04:45:22.473308Z"}], "thread_id": "Thread-3", "execution_time": 0.02994823455810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__ad_insights_ad_id__adgroup_id__campaign_id__date.31b24e06d5", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        ad_id, adgroup_id, campaign_id, date\n    from `agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__ad_insights`\n    group by ad_id, adgroup_id, campaign_id, date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.465173Z", "completed_at": "2025-01-22T04:45:22.475034Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.477057Z", "completed_at": "2025-01-22T04:45:22.477066Z"}], "thread_id": "Thread-4", "execution_time": 0.02490711212158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__age_gender_insights_ad_id__adgroup_id__campaign_id__date__age__gender.b054b6c435", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        ad_id, adgroup_id, campaign_id, date, age, gender\n    from `agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__age_gender_insights`\n    group by ad_id, adgroup_id, campaign_id, date, age, gender\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.478663Z", "completed_at": "2025-01-22T04:45:22.484885Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.490165Z", "completed_at": "2025-01-22T04:45:22.490176Z"}], "thread_id": "Thread-1", "execution_time": 0.015938997268676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg__ad_product_categories", "compiled": true, "compiled_code": "\n\nselect * from `agile-scheme-394814`.`dbt_prod`.`product_categories`", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg__ad_product_categories`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.485496Z", "completed_at": "2025-01-22T04:45:22.496345Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.498051Z", "completed_at": "2025-01-22T04:45:22.498062Z"}], "thread_id": "Thread-3", "execution_time": 0.020170927047729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__provinces", "compiled": true, "compiled_code": "\nselect * from `agile-scheme-394814`.`dbt_prod`.`provinces`", "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__provinces`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.491222Z", "completed_at": "2025-01-22T04:45:22.499782Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.501860Z", "completed_at": "2025-01-22T04:45:22.501870Z"}], "thread_id": "Thread-4", "execution_time": 0.017803668975830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__regions", "compiled": true, "compiled_code": "\nselect * from `agile-scheme-394814`.`dbt_prod`.`regions`", "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__regions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.503443Z", "completed_at": "2025-01-22T04:45:22.512217Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.537917Z", "completed_at": "2025-01-22T04:45:22.537928Z"}], "thread_id": "Thread-1", "execution_time": 0.03889346122741699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.facebook_performance", "compiled": true, "compiled_code": "\n\n\n\n  SELECT\n    adsinsights.account_id,\n    adsinsights.date_start,\n    \n    \n    \n    adsinsights.ad_key,\n    SUM(adsinsights.impressions) impressions,\n    SUM(adsinsights.spend) spend,\n    SUM(adsinsights.clicks) clicks,\n    SUM(adsinsights.reach) reach,\n    SUM(adsinsights.link_click) link_click,\n    SUM(adsinsights.post_engagement) post_engagement,\n    SUM(adsinsights.offline_conversion_purchase) offline_conversion_purchase,\n    SUM(adsinsights.offline_conversion_purchase_value) offline_conversion_purchase_value,\n    SUM(adsinsights.pixel_purchase) pixel_purchase,\n    SUM(adsinsights.pixel_purchase_value) pixel_purchase_value,\n    SUM(adsinsights.meta_purchase) meta_purchase,\n    SUM(adsinsights.meta_purchase_value) meta_purchase_value,\n    SUM(adsinsights.messaging_conversation_started_7d) _results_message\n  FROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__adsinsights`\n    adsinsights\n    where 1=1\n    \n       and date_start >= date_add(current_date, interval -1 day)\n    \n\n    group by 1,2,3", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.512894Z", "completed_at": "2025-01-22T04:45:22.544251Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.547500Z", "completed_at": "2025-01-22T04:45:22.547510Z"}], "thread_id": "Thread-3", "execution_time": 0.044834136962890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.stg_facebookads__campaigns", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH \ncampaign_names as (\n    select \n    _batched_at, \n    safe_cast(account_id as string) account_id ,\n    safe_cast(campaign_id as string) campaign_id,\n    safe_cast(adset_id as string) adset_id ,\n    safe_cast(ad_id as string) ad_id ,\n    campaign_name, adset_name, ad_name\n    from `agile-scheme-394814`.`Facebook`.`p_AdsInsights__*`\n    where date_start < '2024-07-01'\n    union all\n    select \n    cast(null as timestamp) as _batched_at, account_id, campaign_id, adset_id, ad_id, campaign_name, adset_name, ad_name\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`dim_fb__campaigns`\n),\ncurrent_campaign_name AS (\n\n    SELECT\n        DISTINCT account_id,\n        \n        FIRST_VALUE (campaign_name) over campaign_window AS campaign_name,\n        FIRST_VALUE (adset_name) over adset_window AS adset_name,\n        FIRST_VALUE (ad_name) over ad_window AS ad_name,\n        \n        \n        campaign_id,\n        adset_id,\n        ad_id,\n        to_hex(md5(cast(coalesce(cast(account_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(adset_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ad_id as string), '_dbt_utils_surrogate_key_null_') as string))) AS ad_key,\n    FROM\n        campaign_names\n        window campaign_window AS (\n            PARTITION BY campaign_id\n            ORDER BY\n                _batched_at DESC rows BETWEEN unbounded preceding\n                AND unbounded following\n        ),\n        adset_window AS (\n            PARTITION BY campaign_id,\n            adset_id\n            ORDER BY\n                _batched_at DESC rows BETWEEN unbounded preceding\n                AND unbounded following\n        ),\n        ad_window AS (\n            PARTITION BY campaign_id,\n            adset_id,\n            ad_id\n            ORDER BY\n                _batched_at DESC rows BETWEEN unbounded preceding\n                AND unbounded following\n        ) \n        \n        \n),\nconvention_version AS (\n    SELECT\n        *,\n        CASE\n            WHEN campaign_name LIKE '5S%' THEN 'B2406'\n            ELSE '2406'\n        END AS convention_version_number\n    FROM\n        current_campaign_name\n),\nnew_naming_convention AS (\n    SELECT\n        *,\n        \n    \n    SPLIT(campaign_name,\"_\") [safe_offset(0)] AS channel,\n    SPLIT(campaign_name,\"_\") [safe_offset(1)] AS brand_name,\n    UPPER(SPLIT(campaign_name,\"_\") [safe_offset(2)]) AS ad_location,\n    CASE\n        length(SPLIT(campaign_name, \"_\") [safe_offset(2)])\n        WHEN 2 THEN \"Country\"\n        WHEN 3 THEN \"Province\"\n        WHEN 4 THEN \"Economic Region\"\n        WHEN 5 THEN \"Store\"\n    END AS ad_location_layer,\n    SPLIT(campaign_name,\"_\") [safe_offset(3)] AS campaign_category,\n    SPLIT(REGEXP_EXTRACT(campaign_name,r\"{(.*)}\"), \"_\") [safe_offset(0)] AS event_name,\n    REGEXP_REPLACE(REGEXP_EXTRACT(REGEXP_EXTRACT(campaign_name,r\"{(.*)}\"), r\"_(.*)\"),r\"_\",\" \") AS content_edge,\n    REGEXP_EXTRACT(campaign_name, r\"(?:.*)_(.*)$\") AS ad_pic,\n    \n    \n    SPLIT(adset_name ,\"_\") [safe_offset(0)] AS audience_type,\n    CASE LEFT(adset_name , 3)\n    WHEN 'lal' THEN 'Lookalike'\n    WHEN 'int' THEN 'Interest'\n    WHEN 'ret' THEN 'Retargeting'\n    WHEN 'mas' THEN 'Mass'\n    ELSE 'Unknown' END AS target_method,\n    SPLIT(adset_name ,\"_\") [safe_offset(1)] AS original_audience_name,\n    SPLIT(SPLIT(adset_name , \"_\") [safe_offset(1)], \"-\") [safe_offset(0)] AS audience_demographic,\n    SPLIT(SPLIT(adset_name , \"_\") [safe_offset(1)], \"-\") [safe_offset(1)] AS audience_region,\n    SPLIT(SPLIT(adset_name , \"_\") [safe_offset(1)], \"-\") [safe_offset(2)] AS audience_source_name,\n    \n    \n    case\n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'crs' then 'Carousel'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'vid' then 'Video'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'sgm' then 'Single Image'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'clt' then 'Collection'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'rls' then 'Reels'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'mix' then 'Mixed'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'str' then 'Story'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'pcr' then 'Product Catalog + Carousel'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'pcl' then 'Product Catalog + Collection'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'pcm' then 'Product Catalog + Mixed'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'liv' then 'Live Stream'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'txt' then 'Text'\n    end AS media_type,\n    regexp_extract(ad_name,r\"_(\\w+)\") AS content_code,\n    \n\n    FROM\n        convention_version\n    WHERE\n        convention_version.convention_version_number = '2406'\n\n),\nold_naming_convention AS (\n    SELECT\n        *,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){4}(.*?)_(?:.*?)$\") AS big_campaign,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){4}(.*?_.*?)_(?:.*?)$\") AS content_group,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){1}(.*?)_(?:.*?)$\") AS pic,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){6}(.*?)_(?:.*?)$\") AS promoted_productline,\n        regexp_extract (\n            campaign_name,\n            r\"^(.*?)_\"\n        ) AS page,\n        regexp_extract (LOWER(campaign_name), r\"(?:.*?_){7}(.*?)_(?:.*?)\") AS media_type,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){2}(.*?)_(?:.*?)$\") AS funnel,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){3}(.*?)_(?:.*?)$\") AS ad_type,\n    FROM\n        convention_version\n    WHERE\n        convention_version.convention_version_number = 'B2406'\n        ),\n    renaming_old_convention AS (\n            SELECT\n                o.account_id,\n                \n                o.campaign_name,\n                o.adset_name,\n                o.ad_name,\n                \n                \n                o.campaign_id,\n                o.adset_id,\n                o.ad_id,\n                o.ad_key,\n                o.convention_version_number,\n                'fb' AS channel,\n                '5s' AS brand_name,\n                o.page AS ad_location,\n                CASE\n                    WHEN o.page IN (\n                        \"5SFTHA\",\n                        \"5SFTIE\",\n                        \"5SFTUN\",\n                        \"5SFTRA\",\n                        \"5SFT\",\n                        \"5SFG\",\n                        \"5SF\",\n                        \"5SFTUY\"\n                    ) THEN \"PIC Region\"\n                    ELSE \"Store\"\n                END AS ad_location_layer,\n                o.ad_type AS campaign_category,\n                o.big_campaign AS event_name,\n                CASE\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o blazer\") THEN 'sp abz'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o ch\u1ed1ng n\u1eafng|\u00e1o cn\") THEN 'sp acn'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o gi\u00f3 b\u1ed9\") THEN 'sp agb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o gi\u1eef nhi\u1ec7t\") THEN 'sp agn'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"bomber|akb\") THEN 'sp akb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o phao|phao|akc\") THEN 'sp akc'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o kho\u00e1c da\") THEN 'sp akd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o gi\u00f3|akg\") THEN 'sp akg'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o len\") THEN 'sp alo'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o n\u1ec9 b\u1ed9\") THEN 'sp anb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o n\u1ec9|ani|ano\") THEN 'sp ano'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o b\u1ed9 polo\") THEN 'sp apb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"polo|apc\") THEN 'sp apc'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"polo d\u00e0i tay\") THEN 'sp apd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o thun|thun n\u1ec9\") THEN 'sp apo'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"t-shirt|tshirt|shirt|ats\") THEN 'sp ats'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"tanktop|\u00e1o ba l\u1ed7|abl|att\") THEN 'sp att'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o vest|b\u1ed9 \u0111\u1ed3\") THEN 'sp avb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"b\u1ed9 n\u1ec9|bni\") THEN 'sp bni'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"ph\u1ee5 ki\u1ec7n|s\u1ecbp\") THEN 'sp pkn'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"jeans|qbd\") THEN 'sp qbd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n gi\u00f3 |qdt\") THEN 'sp qdt'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n gi\u00f3 b\u1ed9\") THEN 'sp qgb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"kaki d\u00e0i|qkd\") THEN 'sp qkd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n n\u1ec9 b\u1ed9\") THEN 'sp qnb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n n\u1ec9|qni\") THEN 'sp qni'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"short casual|qsc\") THEN 'sp qsc'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"short gi\u00f3|qsg\") THEN 'sp qsg'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"short kk|qsk\") THEN 'sp qsk'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"short tt|short th\u1ec3 thao|b\u1ed9 th\u1ec3 thao|qst|qsa|short \u00e2u\") THEN 'sp qst'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n vest\") THEN 'sp qve'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"smc|s\u01a1 mi c\u1ed9c\") THEN 'sp smc'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"smd|s\u01a1 mi d\u00e0i\") THEN 'sp smd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"th h\u00e0ng \u0111\u00f4ng|thu \u0111\u00f4ng|\u0111\u00f4ng sang|\u0111\u00f4ng th\") THEN 'th thu \u0111\u00f4ng'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"th h\u00e0ng h\u00e8|h\u00e8 th\") THEN 'th xu\u00e2n h\u00e8'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"th quanh n\u0103m|quanh n\u0103m th\") THEN 'th quanh n\u0103m'\n                END AS content_edge,\n                o.pic AS ad_pic,\n                CAST(NULL AS STRING) AS audience_type,\n                CAST(NULL AS STRING) AS target_method,\n                CAST(NULL AS STRING) AS original_audience_name,\n                CAST(NULL AS STRING) AS audience_demographic,\n                CAST(NULL AS STRING) AS audience_region,\n                o.funnel AS audience_source_name,\n                o.media_type,\n                o.content_group AS content_code\n            FROM\n                old_naming_convention o\n        )\n\n        SELECT\n            *\n        FROM\n            new_naming_convention\n        UNION ALL\n        SELECT\n            *\n        FROM\n            renaming_old_convention", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.538915Z", "completed_at": "2025-01-22T04:45:22.545688Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.549087Z", "completed_at": "2025-01-22T04:45:22.549098Z"}], "thread_id": "Thread-4", "execution_time": 0.03765249252319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__page_impressions_by_age_gender", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_impressions_by_age_gender`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__page_impressions_by_age_gender`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.550808Z", "completed_at": "2025-01-22T04:45:22.557982Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.563370Z", "completed_at": "2025-01-22T04:45:22.563382Z"}], "thread_id": "Thread-1", "execution_time": 0.01846146583557129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__page_impressions_by_city", "compiled": true, "compiled_code": "\n\nSELECT\n    * except(city),\n    trim(SPLIT(city,\" - \")[safe_offset(1)]) AS country,\n    trim(SPLIT(city,\" - \")[safe_offset(0)]) AS city,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_impressions_by_city`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__page_impressions_by_city`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.559261Z", "completed_at": "2025-01-22T04:45:22.569425Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.571692Z", "completed_at": "2025-01-22T04:45:22.571703Z"}], "thread_id": "Thread-4", "execution_time": 0.015218019485473633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__posts", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_fb__posts`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__posts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.564354Z", "completed_at": "2025-01-22T04:45:22.570336Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.572640Z", "completed_at": "2025-01-22T04:45:22.572650Z"}], "thread_id": "Thread-3", "execution_time": 0.01697516441345215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__page_insights", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_insights`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__page_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.575888Z", "completed_at": "2025-01-22T04:45:22.587708Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.589125Z", "completed_at": "2025-01-22T04:45:22.589135Z"}], "thread_id": "Thread-1", "execution_time": 0.018239498138427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__post_insights", "compiled": true, "compiled_code": "\n\nSELECT\n    * \n    \nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__post_insights`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__post_insights`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.583468Z", "completed_at": "2025-01-22T04:45:22.594351Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.595950Z", "completed_at": "2025-01-22T04:45:22.595960Z"}], "thread_id": "Thread-4", "execution_time": 0.0149993896484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__video_retention", "compiled": true, "compiled_code": "\n\nSELECT\n    * except(metric_value,second),\n    safe_cast(second as int64) as second,\n    safe_cast(metric_value as float64) as metric_value,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_retention`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__video_retention`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.590161Z", "completed_at": "2025-01-22T04:45:22.596933Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.599015Z", "completed_at": "2025-01-22T04:45:22.599026Z"}], "thread_id": "Thread-3", "execution_time": 0.016430139541625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__video_view_time_by_age_gender", "compiled": true, "compiled_code": "\n\nSELECT\n    * except(metric_value),\n    safe_cast(metric_value as float64)/1000 as metric_value,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_view_time_by_age_gender`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__video_view_time_by_age_gender`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.602039Z", "completed_at": "2025-01-22T04:45:22.618025Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.621646Z", "completed_at": "2025-01-22T04:45:22.621656Z"}], "thread_id": "Thread-1", "execution_time": 0.02416706085205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__video_view_time_by_city", "compiled": true, "compiled_code": "\n\nSELECT\n    * except(metric_value,city),\n    safe_cast(metric_value as float64)/1000 as metric_value,\n    trim(SPLIT(city,\" - \")[safe_offset(1)]) AS country,\n    trim(SPLIT(city,\" - \")[safe_offset(0)]) AS city,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_view_time_by_city`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__video_view_time_by_city`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.607773Z", "completed_at": "2025-01-22T04:45:22.632910Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.635036Z", "completed_at": "2025-01-22T04:45:22.635047Z"}], "thread_id": "Thread-4", "execution_time": 0.03451395034790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__client_key_first_last_events", "compiled": true, "compiled_code": "\n\nwith first_last_event as (\n    select\n        client_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_event,\n        LAST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_event,\n        stream_id\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where client_key is not null --remove users with privacy settings enabled\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\nevents_by_client_key as (\n    select distinct\n        client_key,\n        first_event,\n        last_event,\n        stream_id\n    from first_last_event\n),\nevents_joined as (\n    select\n        events_by_client_key.*,\n        timestamp_micros(events_first.event_timestamp) as first_visit,\n        events_first.geo_continent as first_geo_continent,\n        events_first.geo_country as first_geo_country,\n        events_first.geo_region as first_geo_region,\n        events_first.geo_city as first_geo_city,\n        events_first.geo_sub_continent as first_geo_sub_continent,\n        events_first.geo_metro as first_geo_metro,\n        events_first.device_category as first_device_category,\n        events_first.device_mobile_brand_name as first_device_mobile_brand_name,\n        events_first.device_mobile_model_name as first_device_mobile_model_name,\n        events_first.device_mobile_marketing_name as first_device_mobile_marketing_name,\n        events_first.device_mobile_os_hardware_model as first_device_mobile_os_hardware_model,\n        events_first.device_operating_system as first_device_operating_system,\n        events_first.device_operating_system_version as first_device_operating_system_version,\n        events_first.device_vendor_id as first_device_vendor_id,\n        events_first.device_advertising_id as first_device_advertising_id,\n        events_first.device_language as first_device_language,\n        events_first.device_is_limited_ad_tracking as first_device_is_limited_ad_tracking,\n        events_first.device_time_zone_offset_seconds as first_device_time_zone_offset_seconds,\n        events_first.device_browser as first_device_browser,\n        events_first.device_browser_version as first_device_browser_version,\n        events_first.device_web_info_browser as first_device_web_info_browser,\n        events_first.device_web_info_browser_version as first_device_web_info_browser_version,\n        events_first.device_web_info_hostname as first_device_web_info_hostname,\n        events_first.user_campaign as first_user_campaign,\n        events_first.user_medium as first_user_medium,\n        events_first.user_source as first_user_source,\n        events_last.geo_continent as last_geo_continent,\n        events_last.geo_country as last_geo_country,\n        events_last.geo_region as last_geo_region,\n        events_last.geo_city as last_geo_city,\n        events_last.geo_sub_continent as last_geo_sub_continent,\n        events_last.geo_metro as last_geo_metro,\n        events_last.device_category as last_device_category,\n        events_last.device_mobile_brand_name as last_device_mobile_brand_name,\n        events_last.device_mobile_model_name as last_device_mobile_model_name,\n        events_last.device_mobile_marketing_name as last_device_mobile_marketing_name,\n        events_last.device_mobile_os_hardware_model as last_device_mobile_os_hardware_model,\n        events_last.device_operating_system as last_device_operating_system,\n        events_last.device_operating_system_version as last_device_operating_system_version,\n        events_last.device_vendor_id as last_device_vendor_id,\n        events_last.device_advertising_id as last_device_advertising_id,\n        events_last.device_language as last_device_language,\n        events_last.device_is_limited_ad_tracking as last_device_is_limited_ad_tracking,\n        events_last.device_time_zone_offset_seconds as last_device_time_zone_offset_seconds,\n        events_last.device_browser as last_device_browser,\n        events_last.device_browser_version as last_device_browser_version,\n        events_last.device_web_info_browser as last_device_web_info_browser,\n        events_last.device_web_info_browser_version as last_device_web_info_browser_version,\n        events_last.device_web_info_hostname as last_device_web_info_hostname,\n        events_last.user_campaign as last_user_campaign,\n        events_last.user_medium as last_user_medium,\n        events_last.user_source as last_user_source,\n        timestamp_micros(events_last.event_timestamp) as last_seen_at,\n    from events_by_client_key\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` events_first\n        on events_by_client_key.first_event = events_first.event_key\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` events_last\n        on events_by_client_key.last_event = events_last.event_key\n    where 1=1\n    \n        and events_last.event_date_dt >= date_sub(current_date, interval 1 day)\n        and events_first.event_date_dt >= date_sub(current_date, interval 1 day)\n    \n)\nselect * from events_joined", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.622602Z", "completed_at": "2025-01-22T04:45:22.634385Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.636599Z", "completed_at": "2025-01-22T04:45:22.636610Z"}], "thread_id": "Thread-3", "execution_time": 0.029726028442382812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__derived_user_properties", "compiled": true, "compiled_code": "\n\n-- Remove null client_key (users with privacy enabled)\nwith events_from_valid_users as (\n    select * from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where client_key is not null\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\nunnest_user_properties as\n(\n    select \n        client_key,\n        event_timestamp\n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_location') as \n    \n    page_location\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'store') as \n    \n    store\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'location') as \n    \n    location\n    \n        \n    from events_from_valid_users\n)\n\nSELECT DISTINCT\n    client_key\n    \n        , LAST_VALUE(page_location IGNORE NULLS) OVER (user_window) AS most_recent_page_location\n    \n        , LAST_VALUE(store IGNORE NULLS) OVER (user_window) AS visited_branch\n    \n        , LAST_VALUE(location IGNORE NULLS) OVER (user_window) AS searched_branch\n    \n    , last_value(timestamp_micros(event_timestamp)) over (user_window) as last_updated,\nFROM unnest_user_properties\nWINDOW user_window AS (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__derived_user_properties`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.638326Z", "completed_at": "2025-01-22T04:45:22.651572Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.668157Z", "completed_at": "2025-01-22T04:45:22.668169Z"}], "thread_id": "Thread-1", "execution_time": 0.03454780578613281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_click", "compiled": true, "compiled_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en \n \n with click_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'outbound') as \n    \n    outbound\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_classes') as \n    \n    link_classes\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_domain') as \n    \n    link_domain\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_url') as \n    \n    link_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_element') as \n    \n    click_element\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_id') as \n    \n    link_id\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_region') as \n    \n    click_region\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_tag_name') as \n    \n    click_tag_name\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_url') as \n    \n    click_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'file_name') as \n    \n    file_name\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n where event_name = 'click'\n)\n\nselect * from click_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_click`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.652151Z", "completed_at": "2025-01-22T04:45:22.676815Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.678092Z", "completed_at": "2025-01-22T04:45:22.678102Z"}], "thread_id": "Thread-4", "execution_time": 0.02947521209716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_file_download", "compiled": true, "compiled_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en&ref_topic=9756175\n \n with event_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.float_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'file_extension') as \n    \n    file_extension\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'file_name') as \n    \n    file_name\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_classes') as \n    \n    link_classes\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_domain') as \n    \n    link_domain\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_id') as \n    \n    link_id\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_text') as \n    \n    link_text\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_url') as \n    \n    link_url\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'file_download'\n)\n\nselect * from event_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_file_download`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.660960Z", "completed_at": "2025-01-22T04:45:22.677475Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.684572Z", "completed_at": "2025-01-22T04:45:22.684581Z"}], "thread_id": "Thread-3", "execution_time": 0.03527951240539551, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_first_visit", "compiled": true, "compiled_code": "-- TODO: Unclear why there are first_visit events firing when the ga_session_number is >1. This might cause confusion.\n\nwith first_visit_with_params as (\n select \n    *,\n    (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_location') as \n    \n    landing_page\n     \n    \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'first_visit'\n)\n\nselect * from first_visit_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_first_visit`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.671741Z", "completed_at": "2025-01-22T04:45:22.687834Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.689760Z", "completed_at": "2025-01-22T04:45:22.689770Z"}], "thread_id": "Thread-1", "execution_time": 0.019695520401000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_items", "compiled": true, "compiled_code": "\n\n\nwith items_with_params as (\n    select\n        event_key,\n        client_key,\n        session_key,\n        event_name,\n        event_date_dt,\n        stream_id,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'transaction_id') as \n    \n    transaction_id\n    ,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'currency') as \n    \n    currency\n    ,\n        (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    ,\n        (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'tax') as \n    \n    tax\n    ,\n        (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'shipping') as \n    \n    shipping\n    ,\n        (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'affiliation') as \n    \n    affiliation\n    ,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'coupon') as \n    \n    coupon\n    ,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'delivery_method') as \n    \n    delivery_method\n    ,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'payment_type') as \n    \n    payment_type\n    ,\n        i.item_id,\n        i.item_name,\n        i.item_brand,\n        i.item_variant,\n        i.item_category,\n        i.item_category2,\n        i.item_category3,\n        i.item_category4,\n        i.item_category5,\n        i.price_in_usd,\n        i.price,\n        i.quantity,\n        i.item_revenue_in_usd,\n        i.item_revenue,\n        i.item_refund_in_usd,\n        i.item_refund,\n        i.location_id,\n        i.item_list_id,\n        i.item_list_name,\n        i.item_list_index,\n        i.promotion_id,\n        i.promotion_name,\n        i.creative_name,\n        i.creative_slot\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`,\n        unnest(items) as i\n    where event_name in ('add_payment_info', 'add_shipping_info', 'add_to_cart','add_to_wishlist','begin_checkout' ,'purchase','refund', 'remove_from_cart','select_item', 'select_promotion','view_item_list','view_promotion', 'view_item')\n    \n      and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n)\n\nselect * from items_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.691407Z", "completed_at": "2025-01-22T04:45:22.705847Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.707266Z", "completed_at": "2025-01-22T04:45:22.707277Z"}], "thread_id": "Thread-4", "execution_time": 0.0201876163482666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_page_view", "compiled": true, "compiled_code": "with page_view_with_params as (\n   select * except(page_engagement_key),\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.float_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    ,\n      case when split(split(page_location,'/')[safe_ordinal(4)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(4)],'?')[safe_ordinal(1)]) end as pagepath_level_1,\n      case when split(split(page_location,'/')[safe_ordinal(5)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(5)],'?')[safe_ordinal(1)]) end as pagepath_level_2,\n      case when split(split(page_location,'/')[safe_ordinal(6)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(6)],'?')[safe_ordinal(1)]) end as pagepath_level_3,\n      case when split(split(page_location,'/')[safe_ordinal(7)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(7)],'?')[safe_ordinal(1)]) end as pagepath_level_4,\n      to_base64(md5(concat(session_key, page_location))) as page_engagement_key\n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'page_view'\n)\nselect *\nfrom page_view_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.698876Z", "completed_at": "2025-01-22T04:45:22.708161Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.717378Z", "completed_at": "2025-01-22T04:45:22.717389Z"}], "thread_id": "Thread-3", "execution_time": 0.0290372371673584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_scroll", "compiled": true, "compiled_code": "with scroll_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'percent_scrolled') as \n    \n    percent_scrolled\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'scroll'\n)\n\nselect * from scroll_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_scroll`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.708807Z", "completed_at": "2025-01-22T04:45:22.719956Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.721895Z", "completed_at": "2025-01-22T04:45:22.721906Z"}], "thread_id": "Thread-1", "execution_time": 0.01684737205505371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_session_start", "compiled": true, "compiled_code": "with session_start_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.float_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'session_start'\n)\n\nselect * from session_start_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_session_start`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.722828Z", "completed_at": "2025-01-22T04:45:22.733772Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.735215Z", "completed_at": "2025-01-22T04:45:22.735226Z"}], "thread_id": "Thread-4", "execution_time": 0.016871929168701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_to_query_string_params", "compiled": true, "compiled_code": "with event_and_query_string as \n(\n    select \n        event_key,\n        split(page_query_string, '&') as qs_split\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n),\nflattened_qs as\n(\n    select \n        event_key, \n        params \n    from event_and_query_string, unnest(qs_split) as params\n),\nsplit_param_value as \n(\n    select \n        event_key, \n        split(params,'=')[SAFE_OFFSET(0)] as param, \n        NULLIF(split(params,'=')[SAFE_OFFSET(1)], '') as value \n    from flattened_qs\n)\n\nselect * from split_param_value", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_to_query_string_params`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.728192Z", "completed_at": "2025-01-22T04:45:22.736168Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.738158Z", "completed_at": "2025-01-22T04:45:22.738169Z"}], "thread_id": "Thread-3", "execution_time": 0.01706528663635254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_user_engagement", "compiled": true, "compiled_code": "-- Event defined as \"when the app is in the foreground or webpage is in focus for at least one second.\"\n \n with user_engagement_with_params as (\n   select *\n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'user_engagement'\n)\n\nselect * from user_engagement_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_user_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.739108Z", "completed_at": "2025-01-22T04:45:22.750997Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.767687Z", "completed_at": "2025-01-22T04:45:22.767698Z"}], "thread_id": "Thread-1", "execution_time": 0.03338432312011719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_video_complete", "compiled": true, "compiled_code": "-- Defined as when the video ends. For embedded YouTube videos that have JS API support enabled. Collected by default via enhanced measurement.\n-- More info: https://support.google.com/firebase/answer/9234069?hl=en\n \n with video_complete_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_current_time') as \n    \n    video_current_time\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_duration') as \n    \n    video_duration\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_percent') as \n    \n    video_percent\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_url') as \n    \n    video_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_provider') as \n    \n    video_provider\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'vide_title') as \n    \n    vide_title\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'visible') as \n    \n    visible\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'video_complete'\n)\n\nselect * from video_complete_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_video_complete`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.751610Z", "completed_at": "2025-01-22T04:45:22.771077Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.776729Z", "completed_at": "2025-01-22T04:45:22.776740Z"}], "thread_id": "Thread-4", "execution_time": 0.029366254806518555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_video_start", "compiled": true, "compiled_code": "-- Defined as when the video starts playing. For embedded YouTube videos that have JS API support enabled. Collected by default via enhanced measurement.\n-- More info: https://support.google.com/firebase/answer/9234069?hl=en\n \n with video_start_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_current_time') as \n    \n    video_current_time\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_duration') as \n    \n    video_duration\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_percent') as \n    \n    video_percent\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_url') as \n    \n    video_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_provider') as \n    \n    video_provider\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'vide_title') as \n    \n    vide_title\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'visible') as \n    \n    visible\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'video_start'\n)\n\nselect * from video_start_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_video_start`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.761054Z", "completed_at": "2025-01-22T04:45:22.777681Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.779278Z", "completed_at": "2025-01-22T04:45:22.779288Z"}], "thread_id": "Thread-3", "execution_time": 0.029630184173583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__event_view_search_results", "compiled": true, "compiled_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en \n \n with event_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'search_term') as \n    \n    search_term\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'unique_search_term') as \n    \n    unique_search_term\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n where event_name = 'view_search_results'\n)\n\nselect * from event_with_params", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_view_search_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.771684Z", "completed_at": "2025-01-22T04:45:22.780188Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.782236Z", "completed_at": "2025-01-22T04:45:22.782246Z"}], "thread_id": "Thread-1", "execution_time": 0.012674570083618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__page_conversions", "compiled": true, "compiled_code": "\n\nselect \n    page_key\n    \n    , countif(event_name = 'purchase') as purchase_count\n    \n    , countif(event_name = 'message') as message_count\n    \n    , countif(event_name = 'call') as call_count\n    \n    , countif(event_name = 'generate_lead') as generate_lead_count\n    \n    , countif(event_name = 'store_visit') as store_visit_count\n    \nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\ngroup by 1", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__page_conversions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.785223Z", "completed_at": "2025-01-22T04:45:22.804434Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.806250Z", "completed_at": "2025-01-22T04:45:22.806261Z"}], "thread_id": "Thread-4", "execution_time": 0.0255277156829834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__page_engaged_time", "compiled": true, "compiled_code": "with pek_time as (\nselect\n    page_engagement_key,\n    sum(engagement_time_msec) as page_engagement_time,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\ngroup by 1\n),\nmatched_pv as ( -- need to replace the pek with one that uses page_location to match back to correct page_view\n    select\n        to_base64(md5(concat(session_key, page_location))) as page_engagement_key, \n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where event_name = 'page_view'\n),\ndenominator as ( \n    select\n        page_engagement_key,\n        count(page_engagement_key) as page_engagement_denominator, --for sessions with multiple hits to the same page\n    from matched_pv\n    group by 1\n)\nselect\n    denominator.page_engagement_key,\n    case\n        when pek_time.page_engagement_time is null then null -- safe_divide in the numerator would return 0; we need null to prevent page views with no recorded engagement time from factoring in to later calculations\n        else safe_divide(pek_time.page_engagement_time , denominator.page_engagement_denominator) \n    end as page_engagement_time_msec, --technically the average engagement time for that page in that session\n    case \n        when pek_time.page_engagement_time is null then null -- remove page_views with no engagement time from the denominator\n        else denominator.page_engagement_denominator \n    end as page_engagement_denominator\nfrom denominator \nleft join pek_time using(page_engagement_key)", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__page_engaged_time`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.792330Z", "completed_at": "2025-01-22T04:45:22.814456Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.816121Z", "completed_at": "2025-01-22T04:45:22.816131Z"}], "thread_id": "Thread-3", "execution_time": 0.032412052154541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__session_conversions_daily", "compiled": true, "compiled_code": "\n\n    \n\n\n\n\n\nwith event_counts as (\n    select \n        session_key,\n        session_partition_key,\n        min(event_date_dt) as session_partition_date -- The date of this session partition\n        \n        , countif(event_name = 'purchase') as purchase_count\n        \n        , countif(event_name = 'message') as message_count\n        \n        , countif(event_name = 'call') as call_count\n        \n        , countif(event_name = 'generate_lead') as generate_lead_count\n        \n        , countif(event_name = 'store_visit') as store_visit_count\n        \n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where 1=1\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day))\n    \n    group by 1,2\n)\n\nselect * from event_counts", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__session_conversions_daily`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.807335Z", "completed_at": "2025-01-22T04:45:22.817099Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.819274Z", "completed_at": "2025-01-22T04:45:22.819284Z"}], "thread_id": "Thread-1", "execution_time": 0.027831554412841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__sessions_first_last_pageviews", "compiled": true, "compiled_code": "\nwith page_views_first_last as (\n    select\n        session_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_key,\n        LAST_VALUE(event_key) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_page_view_event_key,\n        FIRST_VALUE(timestamp_micros(event_timestamp)) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_time,\n        FIRST_VALUE(event_date_dt) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_date,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where event_name = 'session_start'\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\npage_views_by_session_key as (\n    select distinct\n        session_key,\n        first_page_view_event_key,\n        last_page_view_event_key,\n        first_page_view_event_time,\n        first_page_view_event_date\n    from page_views_first_last\n)\n\nselect * from page_views_by_session_key", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.822312Z", "completed_at": "2025-01-22T04:45:22.854703Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.855547Z", "completed_at": "2025-01-22T04:45:22.855557Z"}], "thread_id": "Thread-4", "execution_time": 0.03795909881591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__sessions_traffic_sources_daily", "compiled": true, "compiled_code": "\n\n    \n\n\n\n\nwith session_events as (\n    select\n        client_key\n        ,session_partition_key\n        ,event_date_dt as session_partition_date\n        ,event_timestamp\n        ,events.event_source\n        ,event_medium\n        ,event_campaign\n        ,event_content\n        ,event_term\n        ,source_category\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` events\n    left join `agile-scheme-394814`.`dbt_prod`.`ga4_source_categories` source_categories on events.event_source = source_categories.source\n    where session_partition_key is not null\n    and event_name != 'session_start'\n    and event_name != 'first_visit'\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day))\n    \n\n   ),\nset_default_channel_grouping as (\n    select\n        *\n        ,\ncase\n  -- Direct: Source exactly matches \"(direct)\" AND Medium is one of (\"(not set)\", \"(none)\")\n  when (\n      event_source is null\n        and event_medium is null\n    )\n    or (\n      event_source = '(direct)'\n      and (event_medium = '(none)' or event_medium = '(not set)')\n    )\n    then 'Direct'\n\n  -- Cross-network: Campaign Name contains \"cross-network\"\n  when REGEXP_CONTAINS(event_campaign, r\"cross-network\")\n    then 'Cross-network'\n\n  -- Paid Shopping:\n  --   (Source matches a list of shopping sites\n  --   OR\n  --   Campaign Name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$)\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when (\n      source_category = 'SOURCE_CATEGORY_SHOPPING'\n      or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    )\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Shopping'\n\n  -- Paid Search:\n  --   Source matches a list of search sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SEARCH'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Search'\n\n  -- Paid Social:\n  --   Source matches a regex list of social sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Social'\n\n  -- Paid Video:\n  --   Source matches a list of video sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Video'\n\n  -- Display:\n  --   Medium is one of (\"display\", \"banner\", \"expandable\", \"interstitial\", \"cpm\")\n  when event_medium in ('display', 'banner', 'expandable', 'interstitial', 'cpm')\n    then 'Display'\n\n  -- Paid Other:\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Other'\n\n  -- Organic Shopping:\n  --   Source matches a list of shopping sites\n  --   OR\n  --   Campaign name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$\n  when source_category = 'SOURCE_CATEGORY_SHOPPING'\n    or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    then 'Organic Shopping'\n\n  -- Organic Social:\n  --   Source matches a regex list of social sites\n  --   OR\n  --   Medium is one of (\"social\", \"social-network\", \"social-media\", \"sm\", \"social network\", \"social media\")\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    or event_medium in (\"social\",\"social-network\",\"social-media\",\"sm\",\"social network\",\"social media\")\n    then 'Organic Social'\n\n  -- Organic Video:\n  --   Source matches a list of video sites\n  --   OR\n  --   Medium matches regex ^(.*video.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    or REGEXP_CONTAINS(event_medium, r\"^(.*video.*)$\")\n    then 'Organic Video'\n\n  -- Organic Search:\n  --   Source matches a list of search sites\n  --   OR\n  --   Medium exactly matches organic\n  when source_category = 'SOURCE_CATEGORY_SEARCH' or event_medium = 'organic'\n    then 'Organic Search'\n\n  -- Referral:\n  --   Medium is one of (\"referral\", \"app\", or \"link\")\n  when event_medium in (\"referral\", \"app\", \"link\")\n    then 'Referral'\n\n  -- Email:\n  --   Source = email|e-mail|e_mail|e mail\n  --   OR\n  --   Medium = email|e-mail|e_mail|e mail\n  when REGEXP_CONTAINS(event_source, r\"email|e-mail|e_mail|e mail\")\n    or REGEXP_CONTAINS(event_medium, r\"email|e-mail|e_mail|e mail\")\n    then 'Email'\n\n  -- Affiliates:\n  --   Medium = affiliate\n  when event_medium = 'affiliate'\n    then 'Affiliates'\n\n  -- Audio:\n  --   Medium exactly matches audio\n  when event_medium = 'audio'\n    then 'Audio'\n\n  -- SMS:\n  --   Source exactly matches sms\n  --   OR\n  --   Medium exactly matches sms\n  when event_source = 'sms'\n    or event_medium = 'sms'\n    then 'SMS'\n\n  -- Mobile Push Notifications:\n  --   Medium ends with \"push\"\n  --   OR\n  --   Medium contains \"mobile\" or \"notification\"\n  --   OR\n  --   Source exactly matches \"firebase\"\n  when REGEXP_CONTAINS(event_medium, r\"push$\")\n    or REGEXP_CONTAINS(event_medium, r\"mobile|notification\")\n    or event_source = 'firebase'\n    then 'Mobile Push Notifications'\n\n  -- Unassigned is the value Analytics uses when there are no other channel rules that match the event data.\n  else 'Unassigned'\nend\n\n as default_channel_grouping\n    from session_events\n),\nfirst_session_source as (\n    select\n        client_key\n        ,session_partition_key\n        ,session_partition_date\n        ,event_timestamp\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN event_source END) IGNORE NULLS) OVER (session_window), '(direct)') AS session_source\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_medium, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_medium\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(source_category, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_source_category\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_campaign, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_campaign\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_content, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_content\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_term, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_term\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(default_channel_grouping, 'Direct') END) IGNORE NULLS) OVER (session_window), 'Direct') AS session_default_channel_grouping\n    from set_default_channel_grouping\n    WINDOW session_window AS (PARTITION BY session_partition_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n),\nfind_non_direct_session_partition_key as (\n\n    select\n        *\n        ,if(session_source <> '(direct)', session_partition_key, null) as non_direct_session_partition_key --provide the session_partition_key only if source is not direct. Useful for last non-direct attribution modeling\n    from first_session_source\n)\n\nselect\n        client_key\n        ,session_partition_key\n        ,session_partition_date\n        ,session_source\n        ,session_medium\n        ,session_source_category\n        ,session_campaign\n        ,session_content\n        ,session_term\n        ,session_default_channel_grouping\n        ,non_direct_session_partition_key\n        ,min(event_timestamp) as session_partition_timestamp\nfrom find_non_direct_session_partition_key\ngroup by 1,2,3,4,5,6,7,8,9,10,11", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.838453Z", "completed_at": "2025-01-22T04:45:22.861201Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.868008Z", "completed_at": "2025-01-22T04:45:22.868019Z"}], "thread_id": "Thread-3", "execution_time": 0.0472416877746582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__user_properties", "compiled": true, "compiled_code": "\n\n-- Remove null client_key (users with privacy enabled)\nwith events_from_valid_users as (\n    select * from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where client_key is not null\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\nunnest_user_properties as\n(\n    select \n        client_key,\n        event_timestamp\n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(user_properties) where key = 'phone') as \n    \n    phone\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(user_properties) where key = 'address') as \n    \n    address\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(user_properties) where key = 'email') as \n    \n    email\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(user_properties) where key = 'name') as \n    \n    name\n    \n        \n    from events_from_valid_users\n)\n-- create 1 CTE per user property \n\n,non_null_phone as\n(\n    select\n        client_key,\n        event_timestamp,\n        phone\n    from unnest_user_properties\n    where\n        phone is not null\n),\nlast_value_phone as \n(\n    select\n        client_key,\n        LAST_VALUE(phone) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS phone,\n        LAST_VALUE(event_timestamp) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_updated\n    from non_null_phone\n),\nlast_value_phone_grouped as \n(\n    select\n        client_key,\n        phone,\n        max(last_updated) as last_updated\n    from last_value_phone\n    group by client_key, phone\n)\n\n,non_null_address as\n(\n    select\n        client_key,\n        event_timestamp,\n        address\n    from unnest_user_properties\n    where\n        address is not null\n),\nlast_value_address as \n(\n    select\n        client_key,\n        LAST_VALUE(address) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS address,\n        LAST_VALUE(event_timestamp) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_updated\n    from non_null_address\n),\nlast_value_address_grouped as \n(\n    select\n        client_key,\n        address,\n        max(last_updated) as last_updated\n    from last_value_address\n    group by client_key, address\n)\n\n,non_null_email as\n(\n    select\n        client_key,\n        event_timestamp,\n        email\n    from unnest_user_properties\n    where\n        email is not null\n),\nlast_value_email as \n(\n    select\n        client_key,\n        LAST_VALUE(email) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS email,\n        LAST_VALUE(event_timestamp) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_updated\n    from non_null_email\n),\nlast_value_email_grouped as \n(\n    select\n        client_key,\n        email,\n        max(last_updated) as last_updated\n    from last_value_email\n    group by client_key, email\n)\n\n,non_null_name as\n(\n    select\n        client_key,\n        event_timestamp,\n        name\n    from unnest_user_properties\n    where\n        name is not null\n),\nlast_value_name as \n(\n    select\n        client_key,\n        LAST_VALUE(name) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS name,\n        LAST_VALUE(event_timestamp) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_updated\n    from non_null_name\n),\nlast_value_name_grouped as \n(\n    select\n        client_key,\n        name,\n        max(last_updated) as last_updated\n    from last_value_name\n    group by client_key, name\n)\n\n,\nclient_keys as \n(\n    select distinct\n        client_key\n    from events_from_valid_users\n),\njoin_properties as \n(\n    select\n        client_key\n        \n        ,last_value_phone_grouped.phone\n        \n        ,last_value_address_grouped.address\n        \n        ,last_value_email_grouped.email\n        \n        ,last_value_name_grouped.name\n        \n        ,timestamp_micros(greatest(\n            \n            last_value_phone_grouped.last_updated ,\n            \n            last_value_address_grouped.last_updated ,\n            \n            last_value_email_grouped.last_updated ,\n            \n            last_value_name_grouped.last_updated \n            \n        )) as last_updated\n    from client_keys\n    \n    left join last_value_phone_grouped using (client_key)\n    \n    left join last_value_address_grouped using (client_key)\n    \n    left join last_value_email_grouped using (client_key)\n    \n    left join last_value_name_grouped using (client_key)\n    \n)\n\n\nselect distinct * from join_properties", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__user_properties`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.861876Z", "completed_at": "2025-01-22T04:45:22.870619Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.877026Z", "completed_at": "2025-01-22T04:45:22.877037Z"}], "thread_id": "Thread-1", "execution_time": 0.039342641830444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.page_location_with_gclid_is_cpc", "compiled": true, "compiled_code": "-- Google has changed the combination of parameters that are used to identify a CPC source in the past.\n-- In order to detect new changes, this test checks that a page_location with a gclid is classified as cpc.\n\n\nselect\n    count(event_source) as sources\n    , count(event_medium) as mediums\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\nwhere original_page_location like '%gclid%'\n    and event_source != 'google'\n    and event_medium != 'cpc'\nhaving sources > 0\n    or mediums > 0", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.871295Z", "completed_at": "2025-01-22T04:45:22.879454Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.888172Z", "completed_at": "2025-01-22T04:45:22.888184Z"}], "thread_id": "Thread-4", "execution_time": 0.020971298217773438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__events_event_key.985cc306e5", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select event_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n  where event_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.880136Z", "completed_at": "2025-01-22T04:45:22.889928Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.898241Z", "completed_at": "2025-01-22T04:45:22.898252Z"}], "thread_id": "Thread-3", "execution_time": 0.022022485733032227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.int_kiotviet__revenue_items", "compiled": true, "compiled_code": "\n\nSELECT\n    date(invoices.transaction_date) transaction_date,\n    invoices.transaction_code,\n    safe_cast(invoices.transaction_id as string) transaction_id,\n    invoices.branch_id,\n    invoices.customer_id,\n    invoices.product_id,\n    invoices.product_code,\n    invoices.price,\n    invoices.transaction_type,\n    \n    'kiotviet' as source,\n    sum(invoices.quantity) quantity,\n    avg(COALESCE(\n        invoices.discount_ratio,\n        safe_divide(invoices.discount * 100,invoices.price),0\n        )) discount_ratio,\n    avg(invoices.discount) discount,\n    sum(invoices.order_discount) order_discount,\n    sum(invoices.subtotal) subTotal,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails` invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.quantity <> 0\n\n    AND date(invoices.transaction_date) in (\n        select\n        distinct date(transaction_date) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n    \n\ngroup by 1,2,3,4,5,6,7,8,9,10", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_kiotviet__revenue_items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.891277Z", "completed_at": "2025-01-22T04:45:22.901398Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.909070Z", "completed_at": "2025-01-22T04:45:22.909081Z"}], "thread_id": "Thread-1", "execution_time": 0.021725177764892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.int_kiotviet__invoices", "compiled": true, "compiled_code": "\n\nSELECT\n        invoices.transaction_id,\n        invoices.transaction_code,\n        DATE(invoices.transaction_date) transaction_date,\n        CAST(NULL AS int64) AS reference_transaction_id,\n        invoices.branch_id,\n        invoices.customer_id,\n        invoices.employee_id,\n        invoices.total,\n        invoices.total_payment,\n        invoices.discount,\n        invoices.discount_ratio,\n        CAST(NULL AS int64) AS return_fee,\n        invoices.transaction_type,\n        DATE(\n            COALESCE(\n                invoices.modified_date,\n                invoices.transaction_date\n            )\n        ) AS modified_date,\n        'kiotviet' AS source,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n        invoices\n    WHERE\n        invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n\n\n\nAND date(invoices.transaction_date )in (\n    select \n    distinct DATE(transaction_date) \n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices` \n    where DATE(modified_date)  >= date_add(current_date, INTERVAL -1 DAY)\n)\n", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_kiotviet__invoices`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.902880Z", "completed_at": "2025-01-22T04:45:22.916469Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.917932Z", "completed_at": "2025-01-22T04:45:22.917944Z"}], "thread_id": "Thread-4", "execution_time": 0.018842220306396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_stg_kiotviet__invoices_modified_date.ee9db5f44f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect modified_date\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\nwhere modified_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.911572Z", "completed_at": "2025-01-22T04:45:22.919546Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.928394Z", "completed_at": "2025-01-22T04:45:22.928405Z"}], "thread_id": "Thread-3", "execution_time": 0.026332378387451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_stg_kiotviet__invoices_transaction_id.a5024f2ad6", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select transaction_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n  where transaction_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.920131Z", "completed_at": "2025-01-22T04:45:22.930159Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.932183Z", "completed_at": "2025-01-22T04:45:22.932194Z"}], "thread_id": "Thread-1", "execution_time": 0.015161514282226562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.int_kiotviet__return_items", "compiled": true, "compiled_code": "\n\nwith pre_order_discount as (\nSELECT\n    date(returns.transaction_date) transaction_date,\n    returns.transaction_code,\n    safe_cast(returns.transaction_id as string) transaction_id,\n    returns.branch_id,\n    returns.customer_id,\n    returns.product_id,\n    returns.product_code,\n    returns.price,\n    returns.transaction_type,\n    'kiotviet' as source,\n    -sum(returns.quantity) quantity, \n    CAST(NULL AS float64) AS discount_ratio,\n    CAST(NULL AS float64) AS discount,\n    -sum(returns.order_discount) as order_discount,\n    -sum(returns.price*returns.quantity) subtotal,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n\nAND date(returns.transaction_date) in (\n        select \n        date(transaction_date) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n\ngroup by 1,2,3,4,5,6,7,8,9,10\n)\n\nselect * except(order_discount),\nsafe_divide(subtotal*order_discount,sum(subtotal) over (partition by transaction_code )) as order_discount\nfrom pre_order_discount", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_kiotviet__return_items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.933827Z", "completed_at": "2025-01-22T04:45:22.945195Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.960746Z", "completed_at": "2025-01-22T04:45:22.960757Z"}], "thread_id": "Thread-4", "execution_time": 0.03139019012451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.revenue_items", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    CAST(NULL AS int64) AS reference_transaction_id,\n    invoices.transaction_date,\n    invoices.transaction_status,\n    invoices.branch_id,\n    invoices.employee_id,\n    invoices.customer_id,\n    invoices.product_id,\n    invoices.product_code,\n    invoices.price,\n    invoices.transaction_type,\n    invoices.modified_date,\n    sum(invoices.quantity) quantity,\n    avg(COALESCE(\n        invoices.discount_ratio,\n        safe_divide(\n            invoices.discount * 100,\n            invoices.price\n        ),\n        0\n    )) discount_ratio,\n    avg(invoices.discount) discount,\n    sum(invoices.subtotal) subTotal,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.quantity <> 0\n\n    AND date(invoices.transaction_date) in (\n        select\n        date(transaction_date) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n    \n\ngroup by 1,2,3,4,5,6,7,8,9,10,11,12,13\n\nUNION ALL\n\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.reference_transaction_id,\n    returns.transaction_date,\n    returns.transaction_status,\n    returns.branch_id,\n    returns.employee_id,\n    returns.customer_id,\n    returns.product_id,\n    returns.product_code,\n    returns.price,\n    returns.transaction_type,\n    returns.modified_date,\n    sum(returns.quantity) quantity, \n    CAST(NULL AS float64) AS discount_ratio,\n    CAST(NULL AS float64) AS discount,\n    sum(returns.price*returns.quantity) subtotal,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n\nAND date(returns.transaction_date) in (\n        select \n        date(transaction_date) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n\n\ngroup by 1,2,3,4,5,6,7,8,9,10,11,12,13", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue_items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.953934Z", "completed_at": "2025-01-22T04:45:22.962877Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.964393Z", "completed_at": "2025-01-22T04:45:22.964402Z"}], "thread_id": "Thread-1", "execution_time": 0.020684242248535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.revenue", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    invoices.transaction_date,\n    CAST(NULL AS int64) AS reference_transaction_id,\n    invoices.branch_id,\n    invoices.customer_id,\n    invoices.employee_id,\n    invoices.total,\n    invoices.total_payment,\n    invoices.discount,\n    invoices.discount_ratio,\n    CAST(\n        NULL AS int64\n    ) AS return_fee,\n    invoices.transaction_type,\n    date(coalesce(invoices.modified_date, invoices.transaction_date)) as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    \n      and date(coalesce(invoices.modified_date, invoices.transaction_date)) >= date_add(date(_dbt_max_partition), interval -2 day)\n    \nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.transaction_date,\n    returns.reference_transaction_id,\n    returns.branch_id,\n    returns.customer_id,\n    returns.employee_id,\n    (- returns.total) AS total,\n    returns.total_payment,\n    returns.return_discount,\n    CAST(\n        NULL AS float64\n    ) discount_ratio,\n    returns.return_fee,\n    returns.transaction_type,\n    date(coalesce(returns.modified_date, returns.transaction_date)) as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n    \n      and date(coalesce(returns.modified_date, returns.transaction_date)) >= date_add(date(_dbt_max_partition), interval -2 day)\n    ", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.945868Z", "completed_at": "2025-01-22T04:45:22.965337Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.967465Z", "completed_at": "2025-01-22T04:45:22.967475Z"}], "thread_id": "Thread-3", "execution_time": 0.034459829330444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.int_kiotviet__returns", "compiled": true, "compiled_code": "\n\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    DATE(returns.transaction_date) transaction_date,\n    returns.reference_transaction_id,\n    returns.branch_id,\n    returns.customer_id,\n    returns.employee_id,\n    (- returns.total) AS total,\n    returns.total_payment,\n    returns.return_discount,\n    CAST(NULL AS float64) discount_ratio,\n    returns.return_fee,\n    returns.transaction_type,\n    DATE(\n        COALESCE(\n            returns.modified_date,\n            returns.transaction_date\n        )\n    ) AS modified_date,\n    'kiotviet' AS source,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n\n\n\nAND date(returns.transaction_date )in (\n    select \n    distinct DATE(transaction_date) \n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns` \n    where DATE(modified_date)  >= date_add(current_date, INTERVAL -1 DAY)\n)\n", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_kiotviet__returns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.968469Z", "completed_at": "2025-01-22T04:45:22.979963Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.987491Z", "completed_at": "2025-01-22T04:45:22.987502Z"}], "thread_id": "Thread-4", "execution_time": 0.024013280868530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.conversations_engaged", "compiled": true, "compiled_code": "\n\n\nWITH tags AS (\n\n    SELECT\n        DISTINCT *\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_pancake__tags`\n),\nraw_ AS (\n    SELECT\n        conversations.inserted_at,\n        conversations.conversation_id,\n        conversations.customer_id,\n        conversations.user_id,\n        conversations.page_id,\n        conversations.post_id,\n        conversations.message_count,\n        conversations.snippet,\n        conversations.type,\n        conversations.ad_id,\n        conversations.ad_post_id,\n        conversations.ad_inserted_at,\n        CASE\n            WHEN COUNT(ad_id) over(\n                PARTITION BY conversations.ad_id\n            ) > 0 THEN 'Ads'\n            ELSE 'Non-Ads'\n        END AS ads_assisted,\n        tags.tag_value,\n        tags.category,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_pancake__conversations`\n        conversations\n        LEFT JOIN tags\n        ON conversations.tag_id = tags.tag_id\n    WHERE 1=1\n\n and ( \n    date(conversations.inserted_at) in (\n        select date(inserted_at) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_pancake__conversations` \n        where DATE(updated_at) >= date_sub(CURRENT_DATE, interval 1 day)\n        )\n)\n\n)\nSELECT\n    DISTINCT *\nFROM\n    raw_ \n    pivot (string_agg(distinct tag_value,',') for category IN (\n        \"Nh\u00e2n s\u1ef1\" AS agent\n        ,\n    \n        \"Ph\u00e2n lo\u1ea1i\" AS conversation_type\n        ,\n    \n        \"Ph\u00e2n lo\u1ea1i ch\u01b0\u01a1ng tr\u00ecnh\" AS promotion_type\n        ,\n    \n        \"Ph\u00e2n lo\u1ea1i KH\" AS customer_type\n        ,\n    \n        \"Ti\u1ebfn tr\u00ecnh ch\u0103m s\u00f3c\" AS stage\n        ,\n    \n        \"Tr\u1ea1ng th\u00e1i x\u1eed l\u00fd\" AS claim_status\n        \n    ))", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`conversations_engaged`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.980676Z", "completed_at": "2025-01-22T04:45:22.995946Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:22.997840Z", "completed_at": "2025-01-22T04:45:22.997850Z"}], "thread_id": "Thread-1", "execution_time": 0.020926237106323242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__customers", "compiled": true, "compiled_code": "\n\nwith kiotviet_cus as (\n    select \n    customer_id as kiotviet_customer_id,\n    contact_number, \n    customer_name,\n    gender, \n    date(birth_date) birth_date, \n    birth_month,\n    date(created_date) created_date,\n    date(modified_date) as last_modified_date,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers`\n    where regexp_contains(contact_number, r'^0\\d{9}$')\n    \n    qualify ROW_NUMBER() over( PARTITION BY contact_number ORDER BY modified_date DESC) = 1\n),\nnhanhvn_cus as (\n    select\n    customer_id as nhanhvn_customer_id,\n    customer_name,\n    email,\n    contact_number,\n    gender,\n    address,\n    birthday,\n    first_purchase_date,\n    last_bought_date as last_modified_date\n    from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__customers`\n    where regexp_contains(contact_number, r'^0\\d{9}$')\n    \n    qualify ROW_NUMBER() over( PARTITION BY contact_number ORDER BY last_bought_date DESC) = 1\n)\n\n    select \ncoalesce(k.contact_number, n.contact_number) contact_number,\ncoalesce(k.kiotviet_customer_id,n.nhanhvn_customer_id) as universal_customer_id,\nk.kiotviet_customer_id,\nn.nhanhvn_customer_id,\ncoalesce(k.customer_name,n.customer_name) customer_name,\ncoalesce(k.gender,n.gender) gender,\ncoalesce(k.birth_date,date(n.birthday)) birth_date,\ncoalesce(k.birth_month,extract(month from date(n.birthday))) birth_month,\ndate_diff(current_date(),coalesce(k.birth_date,date(n.birthday)),day) as age,\ncoalesce(k.created_date,n.first_purchase_date) created_date,\ngreatest(k.last_modified_date,n.last_modified_date) as last_modified_date,\nn.address,\nfrom kiotviet_cus k \nfull outer join nhanhvn_cus n on k.contact_number = n.contact_number", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.988625Z", "completed_at": "2025-01-22T04:45:22.999016Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.003162Z", "completed_at": "2025-01-22T04:45:23.003173Z"}], "thread_id": "Thread-3", "execution_time": 0.02395486831665039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.offline_conversion", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.transaction_code,\n    invoices.created_date,\n    unix_seconds(\n        timestamp_add(\n            invoices.transaction_date,\n            INTERVAL -7 HOUR\n        )\n    ) transaction_date,\n    invoices.total,\n    REGEXP_REPLACE(customers.contact_number, \"^0\", \"84\") AS contact_number,\n    CASE WHEN customers.gender THEN 'm' ELSE 'f' END AS gender,\n    branches.branch_name,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n    invoices\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`\n    branches\n    ON invoices.branch_id = branches.branch_id\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers`\n    customers\n    ON invoices.customer_id = customers.customer_id\nWHERE\n    1 = 1\n    AND invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.total > 0\n    AND customers.contact_number <> ''\n    AND customers.contact_number IS NOT NULL\n    AND transaction_code NOT LIKE 'HDD_%'", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`offline_conversion`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.004146Z", "completed_at": "2025-01-22T04:45:23.025525Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.026994Z", "completed_at": "2025-01-22T04:45:23.027005Z"}], "thread_id": "Thread-4", "execution_time": 0.03012228012084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__manufactoring_progress", "compiled": true, "compiled_code": "\n\n\n\n-- This model is used to store the manufacturing progress of the products.\nWITH plan AS (\n    SELECT\n        product_code,\n        \n        plan_month,\n        \n        sum(expected_deliver_amount) as expected_deliver_amount,\n        max(expected_deliver_date) expected_deliver_date,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__manufacture_plan`\n        where product_code is not null\n    group by 1,2\n),\n-- actual progress\nactual_progress as (\n    select \n    po.transaction_code,\n    po.transaction_status,\n    po.supplier_id,\n    date(po.transaction_date) transaction_date,\n    p.product_design_code,\n    sum(quantity) quantity\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__purchaseorderdetails` po\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products` p on po.product_id = p.product_id\n    where po.product_id is not null\n    and po.branch_id = 49880\n    and po.supplier_id not in (209080)\n    and po.transaction_status not in ('\u0110\u00e3 hu\u1ef7')\n    group by 1,2,3,4,5\n)\n\nSELECT\n  plan.*,\n  ap.transaction_code,\n  ap.transaction_status,\n  ap.supplier_id,\n  ap.transaction_date,\n  \n  ap.quantity as actual_receipt_amount,\n  greatest(count(ap.transaction_code) over (partition by plan.product_code,date_trunc(date(ap.transaction_date),month)),1) as num_receipt_count,\n  case \n  \n    when left(plan.product_code,4) in ('0TAT','0BLL','0BOX','0BRF','0DLS') then 'Ph\u1ee5 ki\u1ec7n' \n    \n    when left(plan.product_code,4) in ('0ASM','0SMD') then '\u00c1o s\u01a1 mi (d\u00e0i)' \n    when left(plan.product_code,4) in ('0QKK','0QKD') then 'Qu\u1ea7n Kaki' \n    when left(plan.product_code,4) in ('0QJE','0QBD') then 'Qu\u1ea7n Jean' \n    when left(plan.product_code,4) in ('0QAU') then 'Qu\u1ea7n \u00e2u' \n    \n    when left(plan.product_code,4) in ('0AKB') then '\u00c1o Bomber' \n    when left(plan.product_code,4) in ('0ABZ') then '\u00c1o Blazer' \n    when left(plan.product_code,4) in ('BAKG','BQDT','BAGB') then 'B\u1ed9 gi\u00f3' \n    when left(plan.product_code,4) in ('0AKG') then '\u00c1o Gi\u00f3 (l\u1ebb)' \n    when left(plan.product_code,4) in ('0AGN') then '\u00c1o gi\u1eef nhi\u1ec7t' \n    when left(plan.product_code,4) in ('0AKH') then '\u00c1o kho\u00e1c th\u1eddi trang' \n    when left(plan.product_code,4) in ('0AKD') then '\u00c1o kho\u00e1c da' \n    when left(plan.product_code,4) in ('0ALE') then '\u00c1o len' \n    when left(plan.product_code,4) in ('0ANI','0ANO','0AKN') then '\u00c1o n\u1ec9 (r\u1eddi)' \n    when left(plan.product_code,4) in ('0APH','0AKC') then '\u00c1o phao' \n    when left(plan.product_code,4) in ('0APD') then '\u00c1o polo d\u00e0i tay' \n    when left(plan.product_code,4) in ('0APO','0ATH') then '\u00c1o thun d\u00e0i tay' \n    when left(plan.product_code,4) in ('BANI','BQNI','BAKN','BANK','BANH') then 'B\u1ed9 n\u1ec9' \n    when left(plan.product_code,4) in ('0QDT') then 'Qu\u1ea7n gi\u00f3 (l\u1ebb)' \n    when left(plan.product_code,4) in ('0QNI') then 'Qu\u1ea7n n\u1ec9 (l\u1ebb)' \n    when left(plan.product_code,4) in ('0QDC') then 'Qu\u1ea7n d\u00e0i Casual' \n    \n    when left(plan.product_code,4) in ('0ABL') then '\u00c1o ba l\u1ed7' \n    when left(plan.product_code,4) in ('0ACN') then '\u00c1o ch\u1ed1ng n\u1eafng' \n    when left(plan.product_code,4) in ('0ASN') then '\u00c1o s\u00e1t n\u00e1ch' \n    when left(plan.product_code,4) in ('0ATS') then '\u00c1o T-shirt' \n    when left(plan.product_code,4) in ('0QSG') then 'Qu\u1ea7n short gi\u00f3' \n    when left(plan.product_code,4) in ('0QSK') then 'Qu\u1ea7n short kaki' \n    when left(plan.product_code,4) in ('0QST') then 'Qu\u1ea7n short th\u1ec3 thao' \n    when left(plan.product_code,4) in ('0QSC') then 'Qu\u1ea7n short casual' \n    when left(plan.product_code,4) in ('0SMC') then 'S\u01a1 mi c\u1ed9c' \n    when left(plan.product_code,4) in ('0APB') then '\u00c1o b\u1ed9 polo' \n    when left(plan.product_code,4) in ('0APC') then '\u00c1o Polo' \n     \n  end as product_group,\n  case\n  when left(plan.product_code,4) in ('0TAT','0BLL','0BOX','0BRF','0DLS') then 'Ph\u1ee5 ki\u1ec7n' \n    when left(plan.product_code,4) in ('0ASM','0SMD') then 'Quanh n\u0103m' \n    when left(plan.product_code,4) in ('0QKK','0QKD') then 'Quanh n\u0103m' \n    when left(plan.product_code,4) in ('0QJE','0QBD') then 'Quanh n\u0103m' \n    when left(plan.product_code,4) in ('0QAU') then 'Quanh n\u0103m' \n    when left(plan.product_code,4) in ('0AKB') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0ABZ') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('BAKG','BQDT','BAGB') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0AKG') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0AGN') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0AKH') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0AKD') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0ALE') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0ANI','0ANO','0AKN') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0APH','0AKC') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0APD') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0APO','0ATH') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('BANI','BQNI','BAKN','BANK','BANH') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0QDT') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0QNI') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0QDC') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0ABL') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0ACN') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0ASN') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0ATS') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0QSG') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0QSK') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0QST') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0QSC') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0SMC') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0APB') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0APC') then 'Xu\u00e2n h\u00e8' \n     end as seasonal,\n\nFROM\n  plan\nLEFT JOIN actual_progress ap on plan.product_code = ap.product_design_code\nand date_trunc(plan.expected_deliver_date,month) = date_trunc(date(ap.transaction_date),month)", "relation_name": "`agile-scheme-394814`.`dbt_prod_merchandise`.`fct__manufactoring_progress`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.020560Z", "completed_at": "2025-01-22T04:45:23.033822Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.035336Z", "completed_at": "2025-01-22T04:45:23.035347Z"}], "thread_id": "Thread-1", "execution_time": 0.021049022674560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_group\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`\nwhere product_group is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.028017Z", "completed_at": "2025-01-22T04:45:23.036325Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.038362Z", "completed_at": "2025-01-22T04:45:23.038372Z"}], "thread_id": "Thread-3", "execution_time": 0.0186614990234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_stg_kiotviet__products_product_id.487bb521de", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select product_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`\n  where product_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.041375Z", "completed_at": "2025-01-22T04:45:23.052328Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.053784Z", "completed_at": "2025-01-22T04:45:23.053795Z"}], "thread_id": "Thread-4", "execution_time": 0.016957759857177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__location_groups", "compiled": true, "compiled_code": "\n\nSELECT\n    local_page_code,\n    local_page,\n    region,\n    province,\n    asm_name,\n    fb_ads_pic,\n    MAX(opening_day) opening_day,\n    MAX(close_date) close_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches`\nWHERE\n    1=1 \n    and channel = 'Offline' \n    and local_page_code is not null\n    group by 1,2,3,4,5,6", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__location_groups`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.047317Z", "completed_at": "2025-01-22T04:45:23.059197Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.060970Z", "completed_at": "2025-01-22T04:45:23.060981Z"}], "thread_id": "Thread-1", "execution_time": 0.02110576629638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__constructing_tasks", "compiled": true, "compiled_code": "\n\nwith raw_ as (\n    select \n        c.project_id,\n        c.branch_name,\n        c.asm,\n        c.created_at,\n        c.province,\n        c.construction_type,\n        c.review_start_date,\n        c.project_id||\":pw:\"||paper_works.type as task_id,\n        \"2.Ho\u00e0n thi\u1ec7n h\u1ed3 s\u01a1 quy\u1ebft to\u00e1n\" as task_group_name,\n        paper_works.type as task_name,\n        paper_works.deadline,\n        paper_works.finish_date,\n        case\n            when coalesce(paper_works.finish_date,current_date) > paper_works.deadline then \"Tr\u1ec5 Deadline\"\n            when paper_works.finish_date = paper_works.deadline then \"\u0110\u00fang Deadline\"\n            when paper_works.finish_date < paper_works.deadline then \"Tr\u01b0\u1edbc Deadline\"\n        end as flag\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__construction` c\n    left join unnest(c.paper_works) paper_works\n\n    union all \n\n    select \n        c.project_id,\n        c.branch_name,\n        c.asm,\n        c.created_at,\n        c.province,\n        c.construction_type,\n        c.review_start_date,\n        c.project_id||\":pc:\"||procedure.type as task_id,\n        \"1.Quy tr\u00ecnh thi c\u00f4ng\" as task_group_name,\n        procedure.step_num ||\".\"||procedure.type as task_name,\n        procedure.deadline,\n        procedure.finish_date,\n        case\n            when coalesce(procedure.finish_date,current_date) > procedure.deadline then \"Tr\u1ec5 Deadline\"\n            when procedure.finish_date = procedure.deadline then \"\u0110\u00fang Deadline\"\n            when procedure.finish_date < procedure.deadline then \"Tr\u01b0\u1edbc Deadline\"\n        end as flag\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__construction` c\n    left join unnest(c.procedure) procedure\n)\nselect raw_.*,\ncoalesce(lag(finish_date) over (partition by project_id,task_group_name order by task_name),review_start_date) as previous_task_finish_date,\nb.area_sqm,\nb.frontage,\nfrom raw_ \nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on raw_.branch_name = b.branch_name\nwhere deadline is not null", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`fct__constructing_tasks`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.054828Z", "completed_at": "2025-01-22T04:45:23.062602Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.064608Z", "completed_at": "2025-01-22T04:45:23.064619Z"}], "thread_id": "Thread-3", "execution_time": 0.01819896697998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__construction_estimates", "compiled": true, "compiled_code": "\n\nwith estimates as (\n    select distinct\n        c.project_id,\n        c.branch_name,\n        c.asm,\n        c.created_at,\n        c.province,\n        setup_cost.*,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__construction` c\n    left join unnest(c.setup_cost) setup_cost\n)\n\nselect \n    e.* ,\n    b.area_sqm,\n    b.frontage,\nfrom estimates e\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on e.branch_name = b.branch_name", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`fct__construction_estimates`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.066173Z", "completed_at": "2025-01-22T04:45:23.080955Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.082329Z", "completed_at": "2025-01-22T04:45:23.082340Z"}], "thread_id": "Thread-4", "execution_time": 0.020467042922973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        user_id, hour\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`pancake_performance__by__users`\n    group by user_id, hour\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.076021Z", "completed_at": "2025-01-22T04:45:23.083293Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.088402Z", "completed_at": "2025-01-22T04:45:23.088412Z"}], "thread_id": "Thread-1", "execution_time": 0.023006677627563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`pancake_performance__by__users`\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.093837Z", "completed_at": "2025-01-22T04:45:23.108767Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.114333Z", "completed_at": "2025-01-22T04:45:23.114344Z"}], "thread_id": "Thread-4", "execution_time": 0.02499985694885254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_performance_date_start__ad_key.086a5acd08", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        date_start, ad_key\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance`\n    group by date_start, ad_key\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.101786Z", "completed_at": "2025-01-22T04:45:23.116237Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.117711Z", "completed_at": "2025-01-22T04:45:23.117721Z"}], "thread_id": "Thread-1", "execution_time": 0.025440216064453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__client_key_first_last_events_client_key.ed9b2aba25", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_events`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.109389Z", "completed_at": "2025-01-22T04:45:23.124418Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.130807Z", "completed_at": "2025-01-22T04:45:23.130818Z"}], "thread_id": "Thread-3", "execution_time": 0.029816865921020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__derived_user_properties_client_key.74573345b3", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__derived_user_properties`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.119325Z", "completed_at": "2025-01-22T04:45:23.133992Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.140646Z", "completed_at": "2025-01-22T04:45:23.140657Z"}], "thread_id": "Thread-4", "execution_time": 0.023764371871948242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__client_key_first_last_pageviews", "compiled": true, "compiled_code": "\n\nwith page_views_first_last as (\n    select\n        client_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_key,\n        LAST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_page_view_event_key\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view`\n    where client_key is not null -- Remove users with privacy settings enabled\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\npage_views_by_client_key as (\n    select distinct\n        client_key,\n        first_page_view_event_key,\n        last_page_view_event_key\n    from page_views_first_last\n),\n\npage_views_joined as (\n    select\n        page_views_by_client_key.*,\n        first_page_view.page_location as first_page_location,\n        first_page_view.page_hostname as first_page_hostname,\n        first_page_view.page_referrer as first_page_referrer, \n        last_page_view.page_location as last_page_location,\n        last_page_view.page_hostname as last_page_hostname,\n        last_page_view.page_referrer as last_page_referrer,\n        timestamp_micros(last_page_view.event_timestamp) as last_seen_at,\n    from page_views_by_client_key\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view` first_page_view\n        on page_views_by_client_key.first_page_view_event_key = first_page_view.event_key\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view` last_page_view\n        on page_views_by_client_key.last_page_view_event_key = last_page_view.event_key\n        where 1=1\n    \n        and first_page_view.event_date_dt >= date_sub(current_date, interval 1 day)\n        and last_page_view.event_date_dt  >= date_sub(current_date, interval 1 day)\n    \n)\n\nselect * from page_views_joined", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_pageviews`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.135281Z", "completed_at": "2025-01-22T04:45:23.149926Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.163446Z", "completed_at": "2025-01-22T04:45:23.163457Z"}], "thread_id": "Thread-1", "execution_time": 0.031821250915527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.not_null_stg_ga4__event_page_view_page_location.8b37318084", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect page_location\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view`\nwhere page_location is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.143085Z", "completed_at": "2025-01-22T04:45:23.166929Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.173006Z", "completed_at": "2025-01-22T04:45:23.173017Z"}], "thread_id": "Thread-3", "execution_time": 0.03848624229431152, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.fct_ga4__pages", "compiled": true, "compiled_code": "\n\nwith page_view as (\n    select\n        event_date_dt,\n        stream_id,\n        page_location,  -- includes query string parameters not listed in query_parameter_exclusions variable\n        page_key,\n        page_engagement_key,\n        count(event_name) as page_views,\n        count(distinct client_key ) as distinct_client_keys,\n        sum( if(session_number = 1,1,0)) as new_client_keys,\n        sum(entrances) as entrances,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view`\n\n        where event_date_dt >= date_sub(current_date, interval 1 day)\n\n    group by 1,2,3,4,5\n), page_engagement as (\n    select\n        page_view.event_date_dt,\n        page_view.stream_id,\n        page_view.page_location,\n        page_view.page_key,\n        sum(page_view.page_views) as page_views,  -- page_engagement_key references the page_referrer; need to re-aggregate metrics\n        sum(page_view.distinct_client_keys) as distinct_client_keys,\n        sum(page_view.new_client_keys) as new_client_keys,\n        sum(page_view.entrances) as entrances,\n        sum(page_engagement_time_msec) as total_engagement_time_msec,\n        sum( page_engagement_denominator) as avg_engagement_time_denominator\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__page_engaged_time`\n    right join page_view using (page_engagement_key)\n    group by 1,2,3,4\n), scroll as (\n    select\n        event_date_dt,\n        page_location, \n        count(event_name) as scroll_events\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_scroll`\n    \n            where event_date_dt >= date_sub(current_date, interval 1 day)\n    \n    group by 1,2\n)\n\n,\njoin_conversions as (\n    select \n        *\n    from page_engagement\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__page_conversions` using (page_key)\n)\nselect\n    join_conversions.*  except (page_key),\n    ifnull(scroll.scroll_events, 0) as scroll_events\nfrom join_conversions\nleft join scroll using (event_date_dt, page_location)\n", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__pages`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.155182Z", "completed_at": "2025-01-22T04:45:23.167519Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.173964Z", "completed_at": "2025-01-22T04:45:23.173975Z"}], "thread_id": "Thread-4", "execution_time": 0.025710582733154297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.fct_ga4__sessions_daily", "compiled": true, "compiled_code": "\n\n\nwith session_metrics as (\n    select \n        session_key,\n        session_partition_key,\n        client_key,\n        stream_id,\n        max(user_id) as user_id, -- user_id can be null at the start and end of a session and still be set in the middle\n        min(event_date_dt) as session_partition_date, -- Date of the session partition, does not represent the true session start date which, in GA4, can span multiple days\n        min(event_timestamp) as session_partition_min_timestamp,\n        countif(event_name = 'page_view') as session_partition_count_page_views,\n        sum(event_value_in_usd) as session_partition_sum_event_value_in_usd,\n        ifnull(max(session_engaged), 0) as session_partition_max_session_engaged,\n        sum(engagement_time_msec) as session_partition_sum_engagement_time_msec,\n        min(session_number) as session_number\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` e\n    where session_key is not null\n    \n            and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n    group by 1,2,3,4\n)\n\n    ,\n    session_conversions as (\n    select * from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__session_conversions_daily`\n    where 1=1\n    \n            and session_partition_date >= date_sub(current_date, interval 1 day) \n    \n    ),\n    join_metrics_and_conversions as (\n        select \n            session_metrics.client_key,\n            session_metrics.stream_id,\n            session_metrics.user_id,\n            session_metrics.session_partition_min_timestamp,\n            session_metrics.session_partition_count_page_views,\n            session_metrics.session_partition_sum_event_value_in_usd,\n            session_metrics.session_partition_max_session_engaged,\n            session_metrics.session_partition_sum_engagement_time_msec,\n            session_metrics.session_number,\n            session_conversions.*\n        from session_metrics left join session_conversions using (session_partition_key)\n    )\n\n    select * from join_metrics_and_conversions\n", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions_daily`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.168130Z", "completed_at": "2025-01-22T04:45:23.177422Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.179344Z", "completed_at": "2025-01-22T04:45:23.179354Z"}], "thread_id": "Thread-1", "execution_time": 0.013956546783447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__session_conversions_daily_session_partition_key.03be265557", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__session_conversions_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.180913Z", "completed_at": "2025-01-22T04:45:23.198588Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.200033Z", "completed_at": "2025-01-22T04:45:23.200044Z"}], "thread_id": "Thread-3", "execution_time": 0.023405790328979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__sessions_traffic_sources", "compiled": true, "compiled_code": "-- depends_on: `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews`\n\n\n\nwith session_events as (\n    select\n        events.session_key\n        ,events.event_timestamp\n        ,events.event_source\n        ,events.event_medium\n        ,events.event_campaign\n        ,events.event_content\n        ,events.event_term\n        ,source_categories.source_category\n        ,events.event_date_dt\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` events\n    left join `agile-scheme-394814`.`dbt_prod`.`ga4_source_categories` source_categories on events.event_source = source_categories.source\n    \n    inner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews` pv \n    on events.session_key = pv.session_key and events.event_date_dt = date(pv.first_page_view_event_date)    \n    \n    where events.session_key is not null\n    and event_name != 'session_start'\n    and event_name != 'first_visit'\n    \n      and date(pv.first_page_view_event_time) >= date_sub(current_date, interval 1 day)\n    \n   ),\nset_default_channel_grouping as (\n    select\n        *\n        ,\ncase\n  -- Direct: Source exactly matches \"(direct)\" AND Medium is one of (\"(not set)\", \"(none)\")\n  when (\n      event_source is null\n        and event_medium is null\n    )\n    or (\n      event_source = '(direct)'\n      and (event_medium = '(none)' or event_medium = '(not set)')\n    )\n    then 'Direct'\n\n  -- Cross-network: Campaign Name contains \"cross-network\"\n  when REGEXP_CONTAINS(event_campaign, r\"cross-network\")\n    then 'Cross-network'\n\n  -- Paid Shopping:\n  --   (Source matches a list of shopping sites\n  --   OR\n  --   Campaign Name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$)\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when (\n      source_category = 'SOURCE_CATEGORY_SHOPPING'\n      or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    )\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Shopping'\n\n  -- Paid Search:\n  --   Source matches a list of search sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SEARCH'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Search'\n\n  -- Paid Social:\n  --   Source matches a regex list of social sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Social'\n\n  -- Paid Video:\n  --   Source matches a list of video sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Video'\n\n  -- Display:\n  --   Medium is one of (\"display\", \"banner\", \"expandable\", \"interstitial\", \"cpm\")\n  when event_medium in ('display', 'banner', 'expandable', 'interstitial', 'cpm')\n    then 'Display'\n\n  -- Paid Other:\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Other'\n\n  -- Organic Shopping:\n  --   Source matches a list of shopping sites\n  --   OR\n  --   Campaign name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$\n  when source_category = 'SOURCE_CATEGORY_SHOPPING'\n    or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    then 'Organic Shopping'\n\n  -- Organic Social:\n  --   Source matches a regex list of social sites\n  --   OR\n  --   Medium is one of (\"social\", \"social-network\", \"social-media\", \"sm\", \"social network\", \"social media\")\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    or event_medium in (\"social\",\"social-network\",\"social-media\",\"sm\",\"social network\",\"social media\")\n    then 'Organic Social'\n\n  -- Organic Video:\n  --   Source matches a list of video sites\n  --   OR\n  --   Medium matches regex ^(.*video.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    or REGEXP_CONTAINS(event_medium, r\"^(.*video.*)$\")\n    then 'Organic Video'\n\n  -- Organic Search:\n  --   Source matches a list of search sites\n  --   OR\n  --   Medium exactly matches organic\n  when source_category = 'SOURCE_CATEGORY_SEARCH' or event_medium = 'organic'\n    then 'Organic Search'\n\n  -- Referral:\n  --   Medium is one of (\"referral\", \"app\", or \"link\")\n  when event_medium in (\"referral\", \"app\", \"link\")\n    then 'Referral'\n\n  -- Email:\n  --   Source = email|e-mail|e_mail|e mail\n  --   OR\n  --   Medium = email|e-mail|e_mail|e mail\n  when REGEXP_CONTAINS(event_source, r\"email|e-mail|e_mail|e mail\")\n    or REGEXP_CONTAINS(event_medium, r\"email|e-mail|e_mail|e mail\")\n    then 'Email'\n\n  -- Affiliates:\n  --   Medium = affiliate\n  when event_medium = 'affiliate'\n    then 'Affiliates'\n\n  -- Audio:\n  --   Medium exactly matches audio\n  when event_medium = 'audio'\n    then 'Audio'\n\n  -- SMS:\n  --   Source exactly matches sms\n  --   OR\n  --   Medium exactly matches sms\n  when event_source = 'sms'\n    or event_medium = 'sms'\n    then 'SMS'\n\n  -- Mobile Push Notifications:\n  --   Medium ends with \"push\"\n  --   OR\n  --   Medium contains \"mobile\" or \"notification\"\n  --   OR\n  --   Source exactly matches \"firebase\"\n  when REGEXP_CONTAINS(event_medium, r\"push$\")\n    or REGEXP_CONTAINS(event_medium, r\"mobile|notification\")\n    or event_source = 'firebase'\n    then 'Mobile Push Notifications'\n\n  -- Unassigned is the value Analytics uses when there are no other channel rules that match the event data.\n  else 'Unassigned'\nend\n\n as default_channel_grouping\n    from session_events\n),\nsession_source as (\n    select\n        session_key\n        ,FIRST_VALUE( event_date_dt IGNORE NULLS) OVER (session_window) AS session_partition_date\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN event_source END) IGNORE NULLS) OVER (session_window), '(direct)') AS session_source\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_medium, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_medium\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(source_category, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_source_category\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_campaign, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_campaign\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_content, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_content\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_term, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_term\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(default_channel_grouping, 'Direct') END) IGNORE NULLS) OVER (session_window), 'Direct') AS session_default_channel_grouping\n    from set_default_channel_grouping\n    WINDOW session_window AS (PARTITION BY session_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n)\nselect distinct * \nfrom session_source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.191695Z", "completed_at": "2025-01-22T04:45:23.201023Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.214104Z", "completed_at": "2025-01-22T04:45:23.214115Z"}], "thread_id": "Thread-4", "execution_time": 0.03615689277648926, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__sessions_first_last_pageviews_session_key.8984455c5e", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.201635Z", "completed_at": "2025-01-22T04:45:23.216032Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.218054Z", "completed_at": "2025-01-22T04:45:23.218065Z"}], "thread_id": "Thread-1", "execution_time": 0.020273447036743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily", "compiled": true, "compiled_code": "\n\n    \n\n\n\nwith last_non_direct_session_partition_key as (\n  select\n    client_key\n    ,session_partition_key\n    ,session_partition_date\n    ,session_source\n    ,session_medium\n    ,session_source_category\n    ,session_campaign\n    ,session_content\n    ,session_term\n    ,session_default_channel_grouping\n    ,non_direct_session_partition_key\n    ,CASE\n      WHEN non_direct_session_partition_key is null\n      THEN \n          last_value(non_direct_session_partition_key ignore nulls) over(\n          partition by client_key\n          order by\n              session_partition_timestamp range between 2592000000000 preceding\n              and current row -- lookback window \n          )\n      ELSE non_direct_session_partition_key\n    END as session_partition_key_last_non_direct,\n  from\n  `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily`\n  \n      -- Add 30 to static_incremental_days to include the session attribution lookback window\n      where session_partition_date >= date_sub(current_date, interval (31 ) day)\n  \n)\n,join_last_non_direct_session_source as (\n  select\n    last_non_direct_session_partition_key.client_key\n    ,last_non_direct_session_partition_key.session_partition_key\n    ,last_non_direct_session_partition_key.session_partition_date\n    ,last_non_direct_session_partition_key.session_source\n    ,last_non_direct_session_partition_key.session_medium\n    ,last_non_direct_session_partition_key.session_source_category\n    ,last_non_direct_session_partition_key.session_campaign\n    ,last_non_direct_session_partition_key.session_content\n    ,last_non_direct_session_partition_key.session_term\n    ,last_non_direct_session_partition_key.session_default_channel_grouping\n    ,last_non_direct_session_partition_key.session_partition_key_last_non_direct\n    ,coalesce(last_non_direct_source.session_source, '(direct)') as last_non_direct_source -- Value will be null if only direct sessions are within the lookback window\n    ,coalesce(last_non_direct_source.session_medium, '(none)') as last_non_direct_medium\n    ,coalesce(last_non_direct_source.session_source_category, '(none)') as last_non_direct_source_category\n    ,coalesce(last_non_direct_source.session_campaign, '(none)') as last_non_direct_campaign\n    ,coalesce(last_non_direct_source.session_content, '(none)') as last_non_direct_content\n    ,coalesce(last_non_direct_source.session_term, '(none)') as last_non_direct_term\n    ,coalesce(last_non_direct_source.session_default_channel_grouping, 'Direct') as last_non_direct_default_channel_grouping\n  from last_non_direct_session_partition_key\n  left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily` last_non_direct_source on\n    last_non_direct_session_partition_key.session_partition_key_last_non_direct = last_non_direct_source.session_partition_key\n  \n      -- Only keep the records in the partitions we wish to replace (as opposed to the whole 30 day lookback window)\n      where last_non_direct_session_partition_key.session_partition_date in (current_date,date_sub(current_date, interval 1 day))\n  \n)\n\nselect * from join_last_non_direct_session_source", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.219682Z", "completed_at": "2025-01-22T04:45:23.232373Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.233768Z", "completed_at": "2025-01-22T04:45:23.233779Z"}], "thread_id": "Thread-3", "execution_time": 0.01855182647705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_daily_session_source.5204b8a71d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_source\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily`\nwhere session_source is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.227241Z", "completed_at": "2025-01-22T04:45:23.234724Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.242242Z", "completed_at": "2025-01-22T04:45:23.242253Z"}], "thread_id": "Thread-4", "execution_time": 0.02335047721862793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__sessions_traffic_sources_daily_session_partition_key.0a63631827", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.235330Z", "completed_at": "2025-01-22T04:45:23.245443Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.253126Z", "completed_at": "2025-01-22T04:45:23.253137Z"}], "thread_id": "Thread-1", "execution_time": 0.026729345321655273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__user_properties_client_key.1ff0272413", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__user_properties`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.246755Z", "completed_at": "2025-01-22T04:45:23.261241Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.262694Z", "completed_at": "2025-01-22T04:45:23.262704Z"}], "thread_id": "Thread-3", "execution_time": 0.01949906349182129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_revenue_items_transaction_id__product_id__price.e8265edabd", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, product_id, price\n    from `agile-scheme-394814`.`dbt_prod_sales`.`revenue_items`\n    group by transaction_id, product_id, price\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.255605Z", "completed_at": "2025-01-22T04:45:23.263688Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.268779Z", "completed_at": "2025-01-22T04:45:23.268788Z"}], "thread_id": "Thread-4", "execution_time": 0.022813081741333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_revenue_transaction_id.716496c532", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select transaction_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_sales`.`revenue`\n  where transaction_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.275675Z", "completed_at": "2025-01-22T04:45:23.292526Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.293338Z", "completed_at": "2025-01-22T04:45:23.293346Z"}], "thread_id": "Thread-3", "execution_time": 0.02359485626220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_fct__customers_contact_number.7ec23edb3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_number\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\nwhere contact_number is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.281763Z", "completed_at": "2025-01-22T04:45:23.301429Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.303287Z", "completed_at": "2025-01-22T04:45:23.303297Z"}], "thread_id": "Thread-4", "execution_time": 0.029786109924316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_fct__customers_universal_customer_id.e16d885fed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect universal_customer_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\nwhere universal_customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.287579Z", "completed_at": "2025-01-22T04:45:23.302075Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.304600Z", "completed_at": "2025-01-22T04:45:23.304610Z"}], "thread_id": "Thread-1", "execution_time": 0.029699325561523438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_fct__customers_contact_number.5bd80552c1", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select contact_number as unique_field\n  from `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n  where contact_number is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.296589Z", "completed_at": "2025-01-22T04:45:23.308162Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.310328Z", "completed_at": "2025-01-22T04:45:23.310339Z"}], "thread_id": "Thread-3", "execution_time": 0.015355110168457031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_fct__customers_universal_customer_id.942475d339", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select universal_customer_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n  where universal_customer_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.315241Z", "completed_at": "2025-01-22T04:45:23.326849Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.332412Z", "completed_at": "2025-01-22T04:45:23.332424Z"}], "thread_id": "Thread-4", "execution_time": 0.021280765533447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__pages", "compiled": true, "compiled_code": "\n\nSELECT\n    p.*,\n    lg.region,\n    lg.province,\n    lg.fb_ads_pic,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_fb__pages`\n    p\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod_marketing`.`dim__location_groups`\n    lg\n    ON p.store_code = lg.local_page_code", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__pages`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.320970Z", "completed_at": "2025-01-22T04:45:23.333363Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.335595Z", "completed_at": "2025-01-22T04:45:23.335606Z"}], "thread_id": "Thread-1", "execution_time": 0.023758649826049805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_dim__location_groups_local_page_code.04c63063c8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect local_page_code\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`dim__location_groups`\nwhere local_page_code is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.327503Z", "completed_at": "2025-01-22T04:45:23.334978Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.337159Z", "completed_at": "2025-01-22T04:45:23.337170Z"}], "thread_id": "Thread-3", "execution_time": 0.022665977478027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_dim__location_groups_local_page_code.ec23d72d30", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select local_page_code as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim__location_groups`\n  where local_page_code is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.340888Z", "completed_at": "2025-01-22T04:45:23.418990Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.430392Z", "completed_at": "2025-01-22T04:45:23.430403Z"}], "thread_id": "Thread-4", "execution_time": 0.09401345252990723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__campaigns", "compiled": true, "compiled_code": "with  __dbt__cte__int__product_group as (\nselect distinct \n    category_name,\n    lower(product_group_code) product_group_code,\n    product_group,\n    season,\n    from \n    `agile-scheme-394814`.`dbt_prod`.`stg__ad_product_categories`\n), store_group as (\n    select\n    distinct \n    local_page, \n    local_page_code,\n    region_code,\n    province_code,\n    from `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches`\n    where local_page_code is not null\n),\npreprocessing as \n(\n    select \n        distinct c.* except(ad_location,event_name),\n        case \n            when regexp_contains(content_edge,r\"^th|sp th\") then \"T\u1ed5ng h\u1ee3p\"\n            when content_edge like \"sp%\" then \"S\u1ea3n ph\u1ea9m\"\n            when content_edge like \"cb%\" then \"Combo\"\n            when content_edge like \"br%\" then \"Th\u01b0\u01a1ng hi\u1ec7u\"\n            when content_edge like \"nd%\" then \"Nh\u1eadn di\u1ec7n\"\n            when content_edge like \"qt%\" then \"Qu\u00e0 t\u1eb7ng\"\n        end as content_edge_group,\n        case when lower(event_name) = 'kt' then 'KHAI TR\u01af\u01a0NG' else upper(event_name) end as event_name,\n        case \n            when c.ad_location_layer =\"Country\" then \"Vietnam\" \n            else coalesce(s.local_page_code,p.province_code, r.region_code, b.branch_code,c.ad_location) \n        end as ad_location,\n        case \n            when c.ad_location_layer =\"Store\" \n            and coalesce(s.local_page_code, b.local_page_code, c.ad_location) = \"TBH12\" \n            and convention_version_number ='2406'\n            and lower(event_name) in ('kt','khai tr\u01b0\u01a1ng') then 'TBH13'\n            when c.ad_location_layer =\"Store\" then coalesce(s.local_page_code, b.local_page_code, c.ad_location) \n        end as ad_group_location,\n        coalesce(p.province_code,p2.province_code,p3.province_code) as province,\n        coalesce(r.region_code,r2.region_code, r3.region_code) as region,\n        \"Vietnam\" as country,\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns` c\n-- join store group base on convention version number\nleft join store_group s on case when c.convention_version_number = 'B2406' then c.ad_location = s.local_page else c.ad_location = s.local_page_code end \n-- if the store group is null, join with branches\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on c.ad_location = b.branch_code and s.local_page_code is null\n-- if the store group is null, join with branches\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__provinces` p on c.ad_location = p.province_code\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__provinces` p2 on s.province_code = p2.province_code\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__provinces` p3 on b.province_code = p3.province_code\n\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__regions` r on c.ad_location = r.region_code\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__regions` r2 on s.region_code = r2.region_code\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__regions` r3 on b.region_code = r3.region_code\n)\nselect \n    p.* except(ad_pic),\n    case \n        when ad_location in ('5SFTHA') or regexp_contains(lower(ad_pic),r'thang|th\u1eafng')  then 'Th\u1eafng'\n        when ad_location in ('5SFTIE','TIEN') or regexp_contains(lower(ad_pic),r'tien|ti\u1ebfn') then 'Ti\u1ebfn'\n        when ad_location in ('5SFTUN','TUNG') or regexp_contains(lower(ad_pic),r'tung|t\u00f9ng')  then 'T\u00f9ng'\n        when ad_location in ('5SFTRA') or regexp_contains(lower(ad_pic),r'trang|ht') then 'Trang'\n        when ad_location in ('5SFTUY','TUYE') or  regexp_contains(lower(ad_pic),r'tuyen|tuy\u1ec1n') then 'Tuy\u1ec1n'\n    else ad_pic end as ad_pic,\n    upper(coalesce(pg.category_name,regexp_replace(regexp_extract(p.content_edge,r'\\w{2} (.*)'),r\"\\s+?\\d+\",\"\")\n    ) ) as category_name,\n    upper(case when coalesce(pg.product_group,regexp_replace(regexp_extract(p.content_edge,r'\\w{2} (.*)'),r\"\\s+?\\d+\",\"\")\n    ) = 'atb' then 'ats' else coalesce(pg.product_group,regexp_replace(regexp_extract(p.content_edge,r'\\w{2} (.*)'),r\"\\s+?\\d+\",\"\")\n    ) end ) as product_group,\n    upper(coalesce(pg.season,regexp_replace(regexp_extract(p.content_edge,r'\\w{2} (.*)'),r\"\\s+?\\d+\",\"\")\n    )) as season,\n    \n    from preprocessing p\n    left join __dbt__cte__int__product_group pg on regexp_extract(p.content_edge,r'\\w{2} (\\w{3})') = pg.product_group_code\n    ", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__campaigns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.388139Z", "completed_at": "2025-01-22T04:45:23.433977Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.441224Z", "completed_at": "2025-01-22T04:45:23.441236Z"}], "thread_id": "Thread-1", "execution_time": 0.10113096237182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__inventory_items", "compiled": true, "compiled_code": "\n\nWITH  __dbt__cte__int__product_group as (\nselect distinct \n    category_name,\n    lower(product_group_code) product_group_code,\n    product_group,\n    season,\n    from \n    `agile-scheme-394814`.`dbt_prod`.`stg__ad_product_categories`\n), kiotviet_products AS (\n    SELECT\n        kiot.product_id AS kiotviet_product_id,\n        kiot.product_name,\n        kiot.product_code,\n        kiot.product_code_prefix,\n        kiot.extended_code,\n\n        kiot.product_design_code,\n        kiot.class_name,\n\n        kiot.category,\n        kiot.sub_productline,\n        kiot.productline,\n        kiot.product_group,\n\n        kiot.ads_product_mapping,\n        kiot.year,\n        kiot.color_code,\n        kiot.size_code,\n        kiot.form_code,\n        kiot.weaving_method_code,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`\n        kiot\n    WHERE\n        kiot.productline NOT IN ('NGUY\u00caN PH\u1ee4 LI\u1ec6U','NPL 2023','DANH M\u1ee4C V\u1eacN CHUY\u1ec2N')\n        \n),\nnhanhvn__products AS (\n    SELECT\n        product_id AS nhanhvn_product_id,\n        product_name,\n        product_code,\n        product_design_code,\n        category_name,\n        sub_productline,\n        productline,\n        ads_product_mapping\n    FROM\n        (\n            select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by product_id desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__products` original\n        group by product_code\n    )\n        )\n    WHERE 1=1\n        \n        and product_code is not null\n),\nitems as (\nSELECT\n    coalesce(p1.extended_code,p2.product_code) AS extended_code,\n    coalesce(p1.product_code,p2.product_code) AS product_code,\n    coalesce(p1.product_name,p2.product_name) AS product_name,\n    coalesce(p1.product_design_code,p2.product_design_code) AS product_design_code,\n    p1.class_name,\n    coalesce(p1.sub_productline,p2.sub_productline) as sub_productline,\n    coalesce(p1.productline,p2.productline) as productline,\n    \n    \n    coalesce(p1.ads_product_mapping,p2.ads_product_mapping) as ads_product_mapping,\n    coalesce(p1.category,p2.category_name) AS category,\n    p1.kiotviet_product_id,\n    p2.nhanhvn_product_id,\n    p1.year,\n    p1.color_code,\n    p1.size_code,\n    p1.form_code,\n    p1.weaving_method_code,\nFROM\n    kiotviet_products p1 \n    full OUTER JOIN nhanhvn__products p2\n    ON p1.extended_code = p2.product_code\n    where (p1.productline not in ('\u0110\u1ed2NG PH\u1ee4C') or p1.productline is null)\n)\n\nselect \nit.*,\nregexp_extract(it.product_code,r'(?:Y|0)?([B0]\\w{3}[0-9S]{3,5})') class_code,\nupper(p.category_name) category_name,\nupper(p.product_group) product_group,\nupper(p.season) season,\nfrom items it \nleft join __dbt__cte__int__product_group p \non it.ads_product_mapping =  p.product_group_code", "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.408716Z", "completed_at": "2025-01-22T04:45:23.434556Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.442195Z", "completed_at": "2025-01-22T04:45:23.442206Z"}], "thread_id": "Thread-3", "execution_time": 0.09116482734680176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.dim_ga4__client_keys", "compiled": true, "compiled_code": "\n\nwith include_first_last_events as (\n    select \n        *\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_events`\n    \n      where date(last_seen_at) >= date_sub(current_date, interval 1 day)\n    \n),\ninclude_first_last_page_views as (\n    select \n        include_first_last_events.*,\n        first_last_page_views.first_page_location,\n        first_last_page_views.first_page_hostname,\n        first_last_page_views.first_page_referrer,\n        first_last_page_views.last_page_location,\n        first_last_page_views.last_page_hostname,\n        first_last_page_views.last_page_referrer,\n    from include_first_last_events \n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_pageviews` as first_last_page_views using (client_key)\n    \n      where date(first_last_page_views.last_seen_at) >= date_sub(current_date, interval 1 day)\n    \n),\ninclude_user_properties as (\n\nselect p.*, \n\n\n    dup.* except(last_updated,client_key),\n\n\n    up.* except(last_updated,client_key),\n\n\nfrom include_first_last_page_views p\n\n-- If derived user properties have been assigned as variables, join them on the client_key\ninner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__derived_user_properties` as dup using (client_key)\n\n\n-- If user properties have been assigned as variables, join them on the client_key\ninner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__user_properties` as up using (client_key)\n\n\n)\n\nselect * from include_user_properties", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__client_keys`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.435156Z", "completed_at": "2025-01-22T04:45:23.444823Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.447018Z", "completed_at": "2025-01-22T04:45:23.447029Z"}], "thread_id": "Thread-4", "execution_time": 0.01469564437866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__client_key_first_last_pageviews_client_key.4cb23d702f", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_pageviews`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.448610Z", "completed_at": "2025-01-22T04:45:23.459725Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.465205Z", "completed_at": "2025-01-22T04:45:23.465216Z"}], "thread_id": "Thread-1", "execution_time": 0.019754886627197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.fct_ga4__sessions", "compiled": true, "compiled_code": "-- Stay mindful of performance/cost when using this model. Making this model partitioned on date is not possible because there's no way to create a single record per session AND partition on date. \n-- depends_on: `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews`\n\n\n   with aggregated as (\n    select\n    client_key,\n    session_key,\n    stream_id,\n    max(user_id) as user_id,\n    min(session_partition_min_timestamp) as session_start_timestamp,\n    min(session_partition_date) as session_start_date,\n    sum(session_partition_count_page_views) as count_pageviews,\n    sum(session_partition_sum_event_value_in_usd) as sum_event_value_in_usd,\n    max(session_partition_max_session_engaged) as is_session_engaged,\n    sum(session_partition_sum_engagement_time_msec) as sum_engaged_time_msec,\n    min(session_number) as session_number\n    \n        \n            , sum(purchase_count) as count_purchase\n        \n            , sum(message_count) as count_message\n        \n            , sum(call_count) as count_call\n        \n            , sum(generate_lead_count) as count_generate_lead\n        \n            , sum(store_visit_count) as count_store_visit\n        \n    \nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions_daily` s\n\n  where session_partition_date >= date_sub(current_date, interval 1 day)\n\ngroup by 1,2,3\n)\n\nselect \naggregated.* \nfrom aggregated\n\n  inner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews` pv \n  on pv.session_key = aggregated.session_key and pv.first_page_view_event_date = aggregated.session_start_date\n  where pv.first_page_view_event_date >= date_sub(current_date, interval 1 day)\n", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.460334Z", "completed_at": "2025-01-22T04:45:23.471289Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.473101Z", "completed_at": "2025-01-22T04:45:23.473109Z"}], "thread_id": "Thread-3", "execution_time": 0.025260448455810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__pages", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__pages`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__pages`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.466281Z", "completed_at": "2025-01-22T04:45:23.474045Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.476099Z", "completed_at": "2025-01-22T04:45:23.476109Z"}], "thread_id": "Thread-4", "execution_time": 0.01718759536743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_fct_ga4__pages__event_date_dt_stream_id_page_location_.7db1d0597c", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select (event_date_dt || stream_id || page_location) as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__pages`\n  where (event_date_dt || stream_id || page_location) is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.479075Z", "completed_at": "2025-01-22T04:45:23.500847Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.502404Z", "completed_at": "2025-01-22T04:45:23.502414Z"}], "thread_id": "Thread-1", "execution_time": 0.0278317928314209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_fct_ga4__sessions_daily_session_partition_key.c7a2a3ef6c", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.486485Z", "completed_at": "2025-01-22T04:45:23.501737Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.503387Z", "completed_at": "2025-01-22T04:45:23.503394Z"}], "thread_id": "Thread-3", "execution_time": 0.0258181095123291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.dim_ga4__sessions", "compiled": true, "compiled_code": "\n\n\n-- Dimension table for sessions based on the first event that isn't session_start or first_visit.\nwith session_first_event as \n(\n    select e.*\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` e\n    inner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews` pv \n    on e.session_key = pv.session_key and e.event_date_dt = date(pv.first_page_view_event_date)\n    where e.event_name != 'first_visit' \n    and e.event_name != 'session_start'\n    \n      and date(pv.first_page_view_event_time)  >= date_sub(current_date, interval 1 day)\n    \n    qualify row_number() over(partition by e.session_key order by event_timestamp) = 1\n),\n session_start_dims as (\n    select \n        session_key,\n        event_date_dt as session_partition_date,\n        event_timestamp as session_start_timestamp,\n        page_path as landing_page_path,\n        page_location as landing_page,\n        page_hostname as landing_page_hostname,\n        page_referrer as landing_page_referrer,\n        geo_continent,\n        geo_country,\n        geo_region,\n        geo_city,\n        geo_sub_continent,\n        geo_metro,\n        stream_id,\n        platform,\n        device_category,\n        device_mobile_brand_name,\n        device_mobile_model_name,\n        device_mobile_marketing_name,\n        device_mobile_os_hardware_model,\n        device_operating_system,\n        device_operating_system_version,\n        device_vendor_id,\n        device_advertising_id,\n        device_language,\n        device_is_limited_ad_tracking,\n        device_time_zone_offset_seconds,\n        device_browser,\n        device_web_info_browser,\n        device_web_info_browser_version,\n        device_web_info_hostname,\n        session_number,\n        session_number = 1 as is_first_session,\n        user_campaign,\n        user_medium,\n        user_source,\n    from session_first_event\n),\njoin_traffic_source as (\n    select \n        session_start_dims.*,\n        sessions_traffic_sources.session_source,\n        sessions_traffic_sources.session_medium,\n        sessions_traffic_sources.session_campaign,\n        sessions_traffic_sources.session_content,\n        sessions_traffic_sources.session_term,\n        sessions_traffic_sources.session_default_channel_grouping,\n        sessions_traffic_sources.session_source_category\n    from session_start_dims\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources` sessions_traffic_sources using (session_key)\n    \n      where sessions_traffic_sources.session_partition_date >= date_sub(current_date, interval 1 day)\n    \n),\ninclude_session_properties as (\n    select \n        * \n    from join_traffic_source\n    \n)\n\nselect * from include_session_properties", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.495921Z", "completed_at": "2025-01-22T04:45:23.504273Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.507203Z", "completed_at": "2025-01-22T04:45:23.507213Z"}], "thread_id": "Thread-4", "execution_time": 0.02162456512451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_session_source.49313fe211", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_source\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources`\nwhere session_source is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:22.354068Z", "completed_at": "2025-01-22T04:45:23.513468Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.531984Z", "completed_at": "2025-01-22T04:45:23.531995Z"}], "thread_id": "Thread-2", "execution_time": 1.2036292552947998, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.calendar", "compiled": true, "compiled_code": "WITH date_spine AS (\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 2759\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n        datetime_add(\n            cast( cast('2018-01-01' as Date) as datetime),\n        interval row_number() over (order by 1) - 1 day\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= date_add( current_date() , interval 6 month)\n\n)\n\nselect * from filtered\n\n\n),\n_milestone AS (\n    SELECT\n        milestones.*\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__facebook_budget`,\n        unnest(milestones) milestones\n),\n_milestone2 AS (\n    SELECT\n        distinct milestones.milestone_name, milestones.start, milestones.end\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__sales_budget`,\n        unnest(milestones) milestones\n)\n\n,\ncalendar AS (\n    SELECT\n        DISTINCT DATE(date_day) AS date,\n        EXTRACT(DAY FROM date_day) AS day_of_month,\n        format_date('%A',date_day) AS day_name,\n        DATE_TRUNC(DATE(date_day), MONTH) AS start_of_month,\n        LAST_DAY(date_day,MONTH) AS end_of_month,\n        DATE_TRUNC(DATE(date_day), isoweek) AS start_of_week,\n        LAST_DAY(DATE(date_day), isoweek) AS end_of_week,\n        format_date('%B',date_day) AS month_name,\n        format_date('%Y.%m',date_day) AS year_month,\n        format_date('%YQ%Q',date_day) AS year_quarter,\n        EXTRACT(YEAR FROM date_day) AS YEAR,\n        EXTRACT(MONTH FROM date_day) AS MONTH,\n        format_date('%m.%d', date_day) as month_day,\n        format_date('%u', date_day) as day_of_week,\n\n    FROM\n        date_spine\n),\ncalendar_fmt AS (\n    SELECT\n        *,\n        \"Tu\u1ea7n \" || DENSE_RANK() over (\n            PARTITION BY start_of_month\n            ORDER BY\n                GREATEST(\n                    start_of_month,\n                    start_of_week\n                ) ASC\n        ) || ' (' || format_date(\"%d/%m\", GREATEST(start_of_month, start_of_week)) || ' - ' || format_date(\"%d/%m\", LEAST(end_of_week, end_of_month)) || ')' AS period,\n        format_date(\n            \"%Y.%mT\",\n            DATE\n        ) || DENSE_RANK() over (\n            PARTITION BY start_of_month\n            ORDER BY\n                GREATEST(\n                    start_of_month,\n                    start_of_week\n                ) ASC\n        ) AS period_code\n    FROM\n        calendar\n)\nSELECT\n    distinct\n    d.*\nEXCEPT(\n        period,\n        period_code\n    ),\n    COALESCE(\n        b.milestone_name,\n        d.period\n    ) AS period,\n    COALESCE(\n        CONCAT(format_date('%Y.%m', d.date), 'T', regexp_extract(b.milestone_name, r'Tu\u1ea7n (\\d+)')),\n        d.period_code\n    ) AS period_code,\n    trim(regexp_extract(b2.milestone_name, r\"([^()]+)\")) as promotion,\nFROM\n    calendar_fmt d\n    LEFT JOIN _milestone b\n    ON d.date >= b.start\n    and d.date <= b.end\n    LEFT JOIN _milestone2 b2\n    ON d.date >= b2.start\n    and d.date <= b2.end", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`calendar`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.519796Z", "completed_at": "2025-01-22T04:45:23.534651Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.542155Z", "completed_at": "2025-01-22T04:45:23.542165Z"}], "thread_id": "Thread-3", "execution_time": 0.0316314697265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.dim_ga4__sessions_daily", "compiled": true, "compiled_code": "\n\n    \n\n\n\n\nwith event_dimensions as \n(\n    select \n        client_key,\n        session_key,\n        session_partition_key,\n        event_date_dt as session_partition_date,\n        event_timestamp,\n        page_path,\n        page_location,\n        page_hostname,\n        page_referrer,\n        geo_continent,\n        geo_country,\n        geo_region,\n        geo_city,\n        geo_sub_continent,\n        geo_metro,\n        stream_id,\n        platform,\n        device_category,\n        device_mobile_brand_name,\n        device_mobile_model_name,\n        device_mobile_marketing_name,\n        device_mobile_os_hardware_model,\n        device_operating_system,\n        device_operating_system_version,\n        device_vendor_id,\n        device_advertising_id,\n        device_language,\n        device_is_limited_ad_tracking,\n        device_time_zone_offset_seconds,\n        device_browser,\n        device_web_info_browser,\n        device_web_info_browser_version,\n        device_web_info_hostname,\n        user_campaign,\n        user_medium,\n        user_source,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where event_name != 'first_visit' \n    and event_name != 'session_start'\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day))\n    \n)\n,traffic_sources as (\n    select \n        session_partition_key,\n        session_source,\n        session_medium,\n        session_campaign,\n        session_content,\n        session_term,\n        session_default_channel_grouping,\n        session_source_category,\n        -- last non-direct traffic sources\n        last_non_direct_source,\n        last_non_direct_medium,\n        last_non_direct_campaign,\n        last_non_direct_content,\n        last_non_direct_term,\n        last_non_direct_default_channel_grouping,\n        last_non_direct_source_category\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\n    where 1=1\n    \n            and session_partition_date in (current_date,date_sub(current_date, interval 1 day))\n     \n)\n\n,session_dimensions as \n(\n    select    \n        distinct -- Distinct call will, in effect, group by session_partition_key\n        stream_id\n        ,session_key\n        ,session_partition_key\n        ,session_partition_date\n        ,FIRST_VALUE(event_timestamp IGNORE NULLS) OVER (session_partition_window) AS session_partition_start_timestamp\n        ,FIRST_VALUE(page_path IGNORE NULLS) OVER (session_partition_window) AS landing_page_path\n        ,FIRST_VALUE(page_location IGNORE NULLS) OVER (session_partition_window) AS landing_page_location\n        ,FIRST_VALUE(page_hostname IGNORE NULLS) OVER (session_partition_window) AS landing_page_hostname\n        ,FIRST_VALUE(page_referrer IGNORE NULLS) OVER (session_partition_window) AS referrer\n        ,FIRST_VALUE(geo_continent IGNORE NULLS) OVER (session_partition_window) AS geo_continent\n        ,FIRST_VALUE(geo_country IGNORE NULLS) OVER (session_partition_window) AS geo_country\n        ,FIRST_VALUE(geo_region IGNORE NULLS) OVER (session_partition_window) AS geo_region\n        ,FIRST_VALUE(geo_city IGNORE NULLS) OVER (session_partition_window) AS geo_city\n        ,FIRST_VALUE(geo_sub_continent IGNORE NULLS) OVER (session_partition_window) AS geo_sub_continent\n        ,FIRST_VALUE(geo_metro IGNORE NULLS) OVER (session_partition_window) AS geo_metro\n        ,FIRST_VALUE(platform IGNORE NULLS) OVER (session_partition_window) AS platform\n        ,FIRST_VALUE(device_category IGNORE NULLS) OVER (session_partition_window) AS device_category\n        ,FIRST_VALUE(device_mobile_brand_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_brand_name\n        ,FIRST_VALUE(device_mobile_model_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_model_name\n        ,FIRST_VALUE(device_mobile_marketing_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_marketing_name\n        ,FIRST_VALUE(device_mobile_os_hardware_model IGNORE NULLS) OVER (session_partition_window) AS device_mobile_os_hardware_model\n        ,FIRST_VALUE(device_operating_system IGNORE NULLS) OVER (session_partition_window) AS device_operating_system\n        ,FIRST_VALUE(device_operating_system_version IGNORE NULLS) OVER (session_partition_window) AS device_operating_system_version\n        ,FIRST_VALUE(device_vendor_id IGNORE NULLS) OVER (session_partition_window) AS device_vendor_id\n        ,FIRST_VALUE(device_advertising_id IGNORE NULLS) OVER (session_partition_window) AS device_advertising_id\n        ,FIRST_VALUE(device_language IGNORE NULLS) OVER (session_partition_window) AS device_language\n        ,FIRST_VALUE(device_is_limited_ad_tracking IGNORE NULLS) OVER (session_partition_window) AS device_is_limited_ad_tracking\n        ,FIRST_VALUE(device_time_zone_offset_seconds IGNORE NULLS) OVER (session_partition_window) AS device_time_zone_offset_seconds\n        ,FIRST_VALUE(device_browser IGNORE NULLS) OVER (session_partition_window) AS device_browser\n        ,FIRST_VALUE(device_web_info_browser IGNORE NULLS) OVER (session_partition_window) AS device_web_info_browser\n        ,FIRST_VALUE(device_web_info_browser_version IGNORE NULLS) OVER (session_partition_window) AS device_web_info_browser_version\n        ,FIRST_VALUE(device_web_info_hostname IGNORE NULLS) OVER (session_partition_window) AS device_web_info_hostname\n        ,FIRST_VALUE(user_campaign IGNORE NULLS) OVER (session_partition_window) AS user_campaign\n        ,FIRST_VALUE(user_medium IGNORE NULLS) OVER (session_partition_window) AS user_medium\n        ,FIRST_VALUE(user_source IGNORE NULLS) OVER (session_partition_window) AS user_source\n        from event_dimensions\n    WINDOW session_partition_window AS (PARTITION BY session_partition_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n)\n,join_traffic_source as (\n    select \n        session_dimensions.*,\n        session_source,\n        session_medium,\n        session_campaign,\n        session_content,\n        session_term,\n        session_default_channel_grouping,\n        session_source_category,\n        -- last non-direct traffic sources\n        last_non_direct_source,\n        last_non_direct_medium,\n        last_non_direct_campaign,\n        last_non_direct_content,\n        last_non_direct_term,\n        last_non_direct_default_channel_grouping,\n        last_non_direct_source_category\n    from session_dimensions\n    left join traffic_sources sessions_traffic_sources using (session_partition_key)\n)\n,join_session_properties as (\n    select \n        * \n    from join_traffic_source\n    \n)\n\n-- Collapse \nselect distinct * from join_session_properties", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions_daily`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.514793Z", "completed_at": "2025-01-22T04:45:23.535305Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.543110Z", "completed_at": "2025-01-22T04:45:23.543120Z"}], "thread_id": "Thread-1", "execution_time": 0.03328442573547363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__sessions_traffic_sources_session_key.417549e35d", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.536087Z", "completed_at": "2025-01-22T04:45:23.545732Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.553263Z", "completed_at": "2025-01-22T04:45:23.553274Z"}], "thread_id": "Thread-4", "execution_time": 0.0392606258392334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_default_channel_grouping.2483b5ae6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_non_direct_default_channel_grouping\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\nwhere last_non_direct_default_channel_grouping is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.547082Z", "completed_at": "2025-01-22T04:45:23.555713Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.562987Z", "completed_at": "2025-01-22T04:45:23.562999Z"}], "thread_id": "Thread-2", "execution_time": 0.021651744842529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_source.449fe23be6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_non_direct_source\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\nwhere last_non_direct_source is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.557718Z", "completed_at": "2025-01-22T04:45:23.571891Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.574600Z", "completed_at": "2025-01-22T04:45:23.574611Z"}], "thread_id": "Thread-3", "execution_time": 0.02225208282470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_source.db8c720050", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_source\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\nwhere session_source is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.564642Z", "completed_at": "2025-01-22T04:45:23.573957Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.598743Z", "completed_at": "2025-01-22T04:45:23.598755Z"}], "thread_id": "Thread-1", "execution_time": 0.0446619987487793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_partition_key.5383afcda4", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.575522Z", "completed_at": "2025-01-22T04:45:23.617103Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.624008Z", "completed_at": "2025-01-22T04:45:23.624020Z"}], "thread_id": "Thread-4", "execution_time": 0.06015944480895996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.int_nhanhvn__ordersdetails", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__int_customer_id_converter as (\nSELECT\n        kiotviet_customer_id,\n        nhanhvn_customer_id\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n    WHERE\n        kiotviet_customer_id IS NOT NULL\n        AND nhanhvn_customer_id IS NOT NULL\n) SELECT\n        order_id AS transaction_id,\n        shop_order_id AS transaction_code,\n        COALESCE(\n            delivery_date,\n            send_carrier_date,\n            DATE(created_date)\n        ) AS transaction_date,\n        return_from_order_id AS reference_transaction_id,\n        traffic_source_id AS branch_id,\n        COALESCE(\n            cic.kiotviet_customer_id,\n            customer_id\n        ) AS customer_id,\n        created_by_id AS employee_id,\n        receivables AS total,\n        (receivables + money_transfer - customer_ship_fee) AS total_payment,\n        order_discount AS discount,\n        safe_divide(\n            order_discount,\n            order_discount + receivables\n        ) AS discount_ratio,\n        return_fee,\n        CASE\n            order_type\n            WHEN 'Giao h\u00e0ng t\u1eadn nh\u00e0' THEN 'invoice'\n            WHEN 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng' THEN 'return'\n        END AS transaction_type,\n        COALESCE(\n            delivery_date,\n            send_carrier_date,\n            DATE(created_date)\n        ) AS modified_date,\n        'nhanhvn' AS source,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails` orders\n        LEFT JOIN __dbt__cte__int_customer_id_converter cic\n        ON orders.customer_id = cic.nhanhvn_customer_id\n    WHERE\n        1 = 1\n\nand delivery_date in (\n    select \n    COALESCE(\n            delivery_date,\n            send_carrier_date,\n            DATE(created_date)\n        )\n    from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`\n    where date(last_sync) >= date_add(CURRENT_DATE, INTERVAL -1 DAY)\n    \n)\n\nAND order_status IN (\"Th\u00e0nh c\u00f4ng\")\nAND order_type IS NOT NULL", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_nhanhvn__ordersdetails`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.600496Z", "completed_at": "2025-01-22T04:45:23.625706Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.744796Z", "completed_at": "2025-01-22T04:45:23.744810Z"}], "thread_id": "Thread-2", "execution_time": 0.17163848876953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.int_nhanhvn__revenue_items", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__int_customer_id_converter as (\nSELECT\n        kiotviet_customer_id,\n        nhanhvn_customer_id\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n    WHERE\n        kiotviet_customer_id IS NOT NULL\n        AND nhanhvn_customer_id IS NOT NULL\n) SELECT\n        delivery_date AS transaction_date,\n        cast(order_id as string) AS transaction_code,\n        cast(order_id as string) as transaction_id,\n        traffic_source_id AS branch_id,\n        coalesce(cic.kiotviet_customer_id, s.customer_id) customer_id,\n        product_id,\n        product_code,\n        price AS price,\n        CASE\n            order_type\n            WHEN 'Giao h\u00e0ng t\u1eadn nh\u00e0' THEN 'invoice'\n            WHEN 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng' THEN 'return'\n        END AS transaction_type,\n        'nhanhvn' AS source,\n        sum(quantity) AS quantity,\n        safe_divide(sum(item_discount),sum(price*quantity)) as discount_ratio,\n        sum(item_discount) as discount,\n        \n        sum(item_discount) as order_discount,\n        sum(item_gross_amount) as subtotal,\n        \n        \n    FROM\n        `agile-scheme-394814`.`dbt_prod_online_sales`.`orders_items` s \n        left join __dbt__cte__int_customer_id_converter cic on s.customer_id = cic.nhanhvn_customer_id\n        where s.order_status IN (\"Th\u00e0nh c\u00f4ng\")\n        \n          and delivery_date in (\n            select distinct delivery_date from `agile-scheme-394814`.`dbt_prod_online_sales`.`orders_items` \n            where date(last_sync) >= date_add(current_date, interval -1 day)\n            )\n        \n    group by 1,2,3,4,5,6,7,8,9", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_nhanhvn__revenue_items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.627737Z", "completed_at": "2025-01-22T04:45:23.753501Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.759783Z", "completed_at": "2025-01-22T04:45:23.759794Z"}], "thread_id": "Thread-3", "execution_time": 0.1372370719909668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_dim__campaigns_ad_key.aa80a608f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_key\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`dim__campaigns`\nwhere ad_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.745856Z", "completed_at": "2025-01-22T04:45:23.759133Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.761426Z", "completed_at": "2025-01-22T04:45:23.761437Z"}], "thread_id": "Thread-1", "execution_time": 0.13822531700134277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_dim__campaigns_ad_key.125cd75bbe", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ad_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim__campaigns`\n  where ad_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.754934Z", "completed_at": "2025-01-22T04:45:23.762377Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.771397Z", "completed_at": "2025-01-22T04:45:23.771408Z"}], "thread_id": "Thread-4", "execution_time": 0.020629167556762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__inventory_classes", "compiled": true, "compiled_code": "\nselect \ndistinct\nproduct_design_code as class_code,\nfirst_value(sub_productline ignore nulls) over w1 as sub_productline,\nfirst_value(productline ignore nulls) over w1 as productline,\nfirst_value(category ignore nulls) over w1 as category,\nfirst_value(product_group ignore nulls) over w1 as product_group,\nfirst_value(season ignore nulls) over w1 as season\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_items`\nwhere product_design_code is not null\nand (category not in ('WEBSITE (Kh\u00f4ng x\u00f3a)') or category is null)\nwindow w1 as (partition by product_design_code order by kiotviet_product_id rows BETWEEN unbounded preceding and unbounded following)\n", "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_classes`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.763731Z", "completed_at": "2025-01-22T04:45:23.776137Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.786840Z", "completed_at": "2025-01-22T04:45:23.786851Z"}], "thread_id": "Thread-2", "execution_time": 0.03275299072265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_dim__inventory_items_extended_code__kiotviet_product_id__nhanhvn_product_id.ae3a5bfc21", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        extended_code, kiotviet_product_id, nhanhvn_product_id\n    from `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_items`\n    group by extended_code, kiotviet_product_id, nhanhvn_product_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.777411Z", "completed_at": "2025-01-22T04:45:23.789381Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.796273Z", "completed_at": "2025-01-22T04:45:23.796284Z"}], "thread_id": "Thread-3", "execution_time": 0.02401876449584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__client_keys", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__client_keys`\n    where not regexp_contains(lower(name),r'test|it|tesst')", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__client_keys`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.782602Z", "completed_at": "2025-01-22T04:45:23.790119Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.797222Z", "completed_at": "2025-01-22T04:45:23.797232Z"}], "thread_id": "Thread-1", "execution_time": 0.024162769317626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__excluded_clients", "compiled": true, "compiled_code": "\n\nSELECT\n    client_key,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__client_keys`\nWHERE\n    regexp_contains(LOWER(NAME), r'test|it|tesst')", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.790735Z", "completed_at": "2025-01-22T04:45:23.800505Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.807524Z", "completed_at": "2025-01-22T04:45:23.807554Z"}], "thread_id": "Thread-4", "execution_time": 0.030878543853759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_dim_ga4__client_keys_client_key.971e8b17de", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__client_keys`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.801276Z", "completed_at": "2025-01-22T04:45:23.809232Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.817213Z", "completed_at": "2025-01-22T04:45:23.817225Z"}], "thread_id": "Thread-2", "execution_time": 0.021723031997680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.fct_ga4__client_keys", "compiled": true, "compiled_code": "select\n    client_key,\n    stream_id,\n    min(session_start_timestamp) as first_seen_timestamp,\n    max(session_start_timestamp) as last_seen_session_timestamp,\n    min(session_start_date) as first_seen_date,\n    max(session_start_date) as last_seen_date,\n    sum(count_pageviews) as count_pageviews,\n    sum(is_session_engaged) as count_engaged_sessions,\n    sum(sum_event_value_in_usd) as sum_event_value_in_usd,\n    sum(sum_engaged_time_msec) as sum_engaged_time_msec,\n    count(distinct session_key)  as count_sessions\n    \n        \n            , sum(count_purchase) as count_purchase\n        \n            , sum(count_message) as count_message\n        \n            , sum(count_call) as count_call\n        \n            , sum(count_generate_lead) as count_generate_lead\n        \n            , sum(count_store_visit) as count_store_visit\n        \n    \nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions`\ngroup by 1, 2", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__client_keys`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.811210Z", "completed_at": "2025-01-22T04:45:23.824177Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.827050Z", "completed_at": "2025-01-22T04:45:23.827060Z"}], "thread_id": "Thread-3", "execution_time": 0.021015644073486328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_fct_ga4__sessions_session_key.93f6a798f0", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.818174Z", "completed_at": "2025-01-22T04:45:23.825735Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.832946Z", "completed_at": "2025-01-22T04:45:23.832957Z"}], "thread_id": "Thread-1", "execution_time": 0.026181936264038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__sessions", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__sessions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.828040Z", "completed_at": "2025-01-22T04:45:23.841484Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.847262Z", "completed_at": "2025-01-22T04:45:23.847273Z"}], "thread_id": "Thread-4", "execution_time": 0.024924755096435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_dim_ga4__sessions_session_key.5ade237063", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.836351Z", "completed_at": "2025-01-22T04:45:23.848958Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.859058Z", "completed_at": "2025-01-22T04:45:23.859069Z"}], "thread_id": "Thread-2", "execution_time": 0.03283095359802246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.facebook_budget", "compiled": true, "compiled_code": "\n\n\nWITH processed AS (\n    SELECT\n        *\n    EXCEPT\n        (\n            val_budget , \n        \n            val_sales_target , \n        \n            val_traffic_target , \n        \n            val_aov \n        ),\n        \n            safe_divide(val_budget, date_diff(tb.end, tb.start, DAY) + 1) AS daily_budget,\n        \n            safe_divide(val_sales_target, date_diff(tb.end, tb.start, DAY) + 1) AS daily_sales_target,\n        \n            safe_divide(val_traffic_target, date_diff(tb.end, tb.start, DAY) + 1) AS daily_traffic_target,\n        \n            safe_divide(val_aov, date_diff(tb.end, tb.start, DAY) + 1) AS daily_aov,\n        \nFROM\n    (\n        SELECT\n            case when branch =  '5S Nam Giang' then '5S Nam Giang 2' else branch end as branch,\n            milestones.*,\n        FROM\n            `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__facebook_budget` b,\n            unnest(milestones) milestones\n    ) \n    pivot (\n    SUM(VALUE) AS val for budget_type IN ('budget','sales_target','traffic_target','aov')\n    ) AS tb\n),\nfinal as (SELECT\n    processed.*,\n    C.date,\nFROM\n    processed\n    CROSS JOIN `agile-scheme-394814`.`dbt_prod`.`calendar` C \nWHERE\n    C.date >= processed.start\n    AND C.date <= processed.end \n        \n          and processed.start >=  date_trunc(date(_dbt_max_partition),month)\n        \n        )\n\nselect final.*,\nbranch.branch_id,\nbranch.local_page_code,\nbranch.fb_ads_pic,\n\nfrom final\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` branch\non lower(final.branch) = lower(branch.branch_name)\nwhere 1=1\nand branch.branch_id not in (select branch_id from `agile-scheme-394814`.`dbt_prod`.`kiotviet__removed_branch`)", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_budget`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.851011Z", "completed_at": "2025-01-22T04:45:23.870679Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.873677Z", "completed_at": "2025-01-22T04:45:23.873688Z"}], "thread_id": "Thread-3", "execution_time": 0.027835607528686523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__working_days", "compiled": true, "compiled_code": "\n\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as string), '_dbt_utils_surrogate_key_null_') as string))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week,promotion),\n    case when b.channel in ('\u0110i\u1ec3m x\u1ea3','Popup') then b.channel\n    when b.branch_name in ('5S VinPearl') then b.branch_name\n    when date_diff(c.date,b.opening_day,day) <= 10 then 'Khai tr\u01b0\u01a1ng' \n    else coalesce(p.promotion,c.promotion) end as promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on coalesce(b.opening_day,'2023-01-01') <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere 1=1\n\nand b.channel not in ('Kho & CH kh\u00e1c Kiotviet')\nand c.date <= current_date()\n", "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`fct__working_days`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.874600Z", "completed_at": "2025-01-22T04:45:23.887722Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.890336Z", "completed_at": "2025-01-22T04:45:23.890347Z"}], "thread_id": "Thread-4", "execution_time": 0.021159887313842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `agile-scheme-394814`.`dbt_prod`.`calendar`\nwhere date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.880299Z", "completed_at": "2025-01-22T04:45:23.889735Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.901725Z", "completed_at": "2025-01-22T04:45:23.901736Z"}], "thread_id": "Thread-2", "execution_time": 0.03179335594177246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_calendar_date.b4cbc0583a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select date as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`calendar`\n  where date is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.891298Z", "completed_at": "2025-01-22T04:45:23.904649Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.907317Z", "completed_at": "2025-01-22T04:45:23.907328Z"}], "thread_id": "Thread-1", "execution_time": 0.021214723587036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.dim__sessions_daily", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions_daily`", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__sessions_daily`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.896471Z", "completed_at": "2025-01-22T04:45:23.906034Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.908929Z", "completed_at": "2025-01-22T04:45:23.908940Z"}], "thread_id": "Thread-3", "execution_time": 0.022069931030273438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_dim_ga4__sessions_daily_session_partition_key.e40d884a13", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.911340Z", "completed_at": "2025-01-22T04:45:23.936741Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.939473Z", "completed_at": "2025-01-22T04:45:23.939484Z"}], "thread_id": "Thread-4", "execution_time": 0.0343017578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__transactions", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.*,\n    to_hex(md5(cast(coalesce(cast(transaction_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as string), '_dbt_utils_surrogate_key_null_') as string))) AS transaction_source_id,\n    to_hex(md5(cast(coalesce(cast(branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as string), '_dbt_utils_surrogate_key_null_') as string))) AS branch_revenue_id,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__invoices` invoices\nUNION ALL\nSELECT\n    returns.*,\n    to_hex(md5(cast(coalesce(cast(transaction_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as string), '_dbt_utils_surrogate_key_null_') as string))) AS transaction_source_id,\n    to_hex(md5(cast(coalesce(cast(branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as string), '_dbt_utils_surrogate_key_null_') as string))) AS branch_revenue_id,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__returns` returns\nUNION ALL\nSELECT\n    order_details.*,\n    to_hex(md5(cast(coalesce(cast(transaction_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as string), '_dbt_utils_surrogate_key_null_') as string))) AS transaction_source_id,\n    to_hex(md5(cast(coalesce(cast(branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as string), '_dbt_utils_surrogate_key_null_') as string))) AS branch_revenue_id,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`int_nhanhvn__ordersdetails` order_details", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.922512Z", "completed_at": "2025-01-22T04:45:23.938842Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.953587Z", "completed_at": "2025-01-22T04:45:23.953599Z"}], "thread_id": "Thread-2", "execution_time": 0.04702472686767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__revenue_items", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith preprocessed as (\n    select \nto_hex(md5(cast(coalesce(cast(branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(product_code as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as string), '_dbt_utils_surrogate_key_null_') as string))) as revenue_item_id,\n\ntransaction_date,\ntransaction_code,\ntransaction_id,\nbranch_id,\ncustomer_id,\nproduct_id,\nproduct_code,\nprice,\ntransaction_type,\nsource,\nquantity,\ndiscount_ratio,\ndiscount,\norder_discount,\nsubTotal\nfrom `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__revenue_items` \nunion all\n\nselect \nto_hex(md5(cast(coalesce(cast(branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(product_code as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as string), '_dbt_utils_surrogate_key_null_') as string))) as revenue_item_id,\n\ntransaction_date,\ntransaction_code,\ntransaction_id,\nbranch_id,\ncustomer_id,\nproduct_id,\nproduct_code,\nprice,\ntransaction_type,\nsource,\nquantity,\ndiscount_ratio,\ndiscount,\norder_discount,\nsubTotal\nfrom `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__return_items`\n\nunion all\n\nselect \nto_hex(md5(cast(coalesce(cast(branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(product_code as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as string), '_dbt_utils_surrogate_key_null_') as string))) as revenue_item_id,\n\ntransaction_date,\ntransaction_code,\ntransaction_id,\nbranch_id,\ncustomer_id,\nproduct_id,\nproduct_code,\nprice,\ntransaction_type,\nsource,\nquantity,\ndiscount_ratio,\ndiscount,\norder_discount,\nsubTotal\nfrom `agile-scheme-394814`.`dbt_prod`.`int_nhanhvn__revenue_items`\n)\n\nselect p.*,\nc.inventory_value_per_unit*p.quantity as cogs\nfrom preprocessed p\nleft join `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__cogs` c \non p.product_code = c.product_code \nand p.transaction_date >= date(c.dbt_valid_from) \nand (p.transaction_date < date(c.dbt_valid_to) or c.dbt_valid_to is null)", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`fct__revenue_items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.940446Z", "completed_at": "2025-01-22T04:45:23.955973Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.958944Z", "completed_at": "2025-01-22T04:45:23.958955Z"}], "thread_id": "Thread-1", "execution_time": 0.023877859115600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_dim__inventory_classes_class_code.e12511cf37", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select class_code as unique_field\n  from `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_classes`\n  where class_code is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.945319Z", "completed_at": "2025-01-22T04:45:23.957328Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.961668Z", "completed_at": "2025-01-22T04:45:23.961679Z"}], "thread_id": "Thread-3", "execution_time": 0.025813579559326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__items_performance", "compiled": true, "compiled_code": "\n\n\n\n\nwith event_format as (\nselect e.* except(event_name),\n/*\n    begin_checkout event actually another add_to_cart (nothing different in term of operation)\n  */\n  case \n    when e.event_name = 'begin_checkout' then 'add_to_cart' \n    else e.event_name end as event_name,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_items` e\nleft join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients` ex on e.client_key = ex.client_key\nwhere e.event_name in ( 'purchase','view_item','add_to_cart','begin_checkout')\nand ex.client_key is null\nand e.item_id is not null\n\n  and e.event_date_dt >= date_add(current_date, interval -1 day)\n\n)\n\nselect\n  regexp_replace(item_id,r'\\W','') as item_id,\n  client_key,\n  session_key,\n  event_date_dt,\n\n  item_variant,\n\n  coupon,\n  promotion_name,\n  payment_type,\n  delivery_method,\n  \n  count(distinct case when event_name = 'purchase' then event_key end) as num_purchase,\n  sum(case when event_name = 'purchase' then quantity end) as total_purchase_quantity,\n  avg(case when event_name = 'purchase' then price end) as avg_purchase_price,\n  \n  count(distinct case when event_name = 'view_item' then event_key end) as num_view_item,\n  sum(case when event_name = 'view_item' then quantity end) as total_view_item_quantity,\n  avg(case when event_name = 'view_item' then price end) as avg_view_item_price,\n  \n  count(distinct case when event_name = 'add_to_cart' then event_key end) as num_add_to_cart,\n  sum(case when event_name = 'add_to_cart' then quantity end) as total_add_to_cart_quantity,\n  avg(case when event_name = 'add_to_cart' then price end) as avg_add_to_cart_price,\n  \n  \n  count(distinct transaction_id) as num_orders,\n  sum(item_revenue) as total_item_revenue,\n  sum(shipping) as total_shipping,\n  sum(tax) as total_tax,\n\nfrom event_format\n\ngroup by 1,2,3,4,5,6,7,8,9", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__items_performance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.968600Z", "completed_at": "2025-01-22T04:45:23.989066Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.990913Z", "completed_at": "2025-01-22T04:45:23.990933Z"}], "thread_id": "Thread-4", "execution_time": 0.03289151191711426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__sessions", "compiled": true, "compiled_code": "\n\nSELECT\n    s.*\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions` s\nleft join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients` ex on s.client_key = ex.client_key\nwhere ex.client_key is null", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__sessions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.984103Z", "completed_at": "2025-01-22T04:45:23.990211Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.993198Z", "completed_at": "2025-01-22T04:45:23.993209Z"}], "thread_id": "Thread-3", "execution_time": 0.026685476303100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_fct_ga4__client_keys_client_key.47115ed1b5", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__client_keys`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.974863Z", "completed_at": "2025-01-22T04:45:23.991941Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.994920Z", "completed_at": "2025-01-22T04:45:23.994931Z"}], "thread_id": "Thread-2", "execution_time": 0.030518770217895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__sessions_daily", "compiled": true, "compiled_code": "\n\nSELECT\n    sd.*\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions_daily` sd\n    left join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients` ex on sd.client_key = ex.client_key\nwhere ex.client_key is null", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__sessions_daily`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:23.979401Z", "completed_at": "2025-01-22T04:45:23.992556Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:23.995873Z", "completed_at": "2025-01-22T04:45:23.995884Z"}], "thread_id": "Thread-1", "execution_time": 0.03072953224182129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__client_keys", "compiled": true, "compiled_code": "\n\nSELECT\n    cl.*\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__client_keys` cl \nleft join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients` ex on cl.client_key = ex.client_key\nwhere ex.client_key is null", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__client_keys`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.003059Z", "completed_at": "2025-01-22T04:45:24.063959Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.071555Z", "completed_at": "2025-01-22T04:45:24.071566Z"}], "thread_id": "Thread-4", "execution_time": 0.07409214973449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__sales_budget", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nWITH  __dbt__cte__int__working_days as (\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as string), '_dbt_utils_surrogate_key_null_') as string))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week,promotion),\n    case when b.channel = '\u0110i\u1ec3m x\u1ea3' then b.channel\n    when date_diff(c.date,b.opening_day,day) <= 10 then 'Khai tr\u01b0\u01a1ng' \n    else coalesce(p.promotion,c.promotion) end as promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on coalesce(b.opening_day,'2023-01-01') <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere 1=1\n\nand b.channel not in ('Kho & CH kh\u00e1c Kiotviet')\nand c.date <= current_date()\n\n\n), processed AS (\n    SELECT\n        *\n    EXCEPT\n        (val_sales_target , \n        val_traffic_target , \n        val_gross_margin , \n        val_upt , \n        val_ausp , \n        val_aov , \n        val_cr \n        ),\n        safe_divide(val_sales_target, date_diff(tb.end, tb.start, DAY) + 1) AS daily_sales_target,\n        safe_divide(val_traffic_target, date_diff(tb.end, tb.start, DAY) + 1) AS daily_traffic_target,\n        val_gross_margin , \n        val_upt , \n        val_ausp , \n        val_aov , \n        val_cr \n        FROM\n    (\n        SELECT\n            case when branch =  '5S Nam Giang' then '5S Nam Giang 2' else branch end as branch,\n            milestones.*,\n        FROM\n            `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__sales_budget` b,\n            unnest(milestones) milestones\n    ) \n    pivot (\n    SUM(VALUE) AS val for budget_type IN ('sales_target','traffic_target','gross_margin','upt','ausp','aov','cr')\n    ) AS tb\n)\n\nselect \nw.branch_id,\nw.promotion,\nw.date,\nw.branch_name,\ndaily_sales_target,\ndaily_traffic_target,\nval_gross_margin,\nval_upt,\nval_ausp,\nval_aov,\nval_cr,\nfrom __dbt__cte__int__working_days w\nleft join processed p on lower(p.branch) = lower(w.branch_name)\nand p.start <= w.date and p.end >= w.date", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__sales_budget`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.043559Z", "completed_at": "2025-01-22T04:45:24.075373Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.078236Z", "completed_at": "2025-01-22T04:45:24.078246Z"}], "thread_id": "Thread-2", "execution_time": 0.07722163200378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.facebook_dashboard", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith offline_performance as (\n  SELECT\n  asm.local_page_code, \n  asm.fb_ads_pic AS pic,\n  DATE(r.transaction_date) transaction_date,\n      count(distinct  transaction_id) AS val_transaction_id,\n        count(distinct \n        CASE\n          WHEN transaction_type = 'invoice' THEN transaction_id\n        END ) AS num_invoice_transaction_id,\n      \n        count(distinct \n        CASE\n          WHEN transaction_type = 'return' THEN transaction_id\n        END ) AS num_return_transaction_id,\n      \n      sum( total) AS val_total,\n        sum(\n        CASE\n          WHEN transaction_type = 'invoice' THEN total\n        END ) AS num_invoice_total,\n      \n        sum(\n        CASE\n          WHEN transaction_type = 'return' THEN total\n        END ) AS num_return_total,\n      \n      sum( total_payment) AS val_total_payment,\n        sum(\n        CASE\n          WHEN transaction_type = 'invoice' THEN total_payment\n        END ) AS num_invoice_total_payment,\n      \n        sum(\n        CASE\n          WHEN transaction_type = 'return' THEN total_payment\n        END ) AS num_return_total_payment,\n      COUNT(\n      DISTINCT r.branch_id\n    ) AS num_stores,\n  FROM\n    `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` r\n    INNER JOIN `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` asm\n    ON r.branch_id = asm.branch_id\n  WHERE\n    date(r.transaction_date) >= date_add(current_date, interval -30 day)\n  AND r.branch_id NOT IN (1000087891)\n    and asm.asm_name is not null\n    and asm.channel = 'Offline'\n  group by 1,2,3 \n),\n\nfacebook_budget AS (\n  SELECT\n    budget.local_page_code,\n    budget.date,\n    budget.fb_ads_pic,\n      SUM(daily_budget) AS daily_budget,\n    \n      SUM(daily_sales_target) AS daily_sales_target,\n    \n      SUM(daily_traffic_target) AS daily_traffic_target,\n    FROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`facebook_budget`\n    budget\n  WHERE\n    budget.date <= CURRENT_DATE()\n    and budget.date >= date_add(current_date, interval -30 day)\n    group by 1,2,3\n),\nfacebook_performance as (\n  SELECT\n    cp.ad_group_location,\n    cp.ad_pic,\n    fb.date_start,\n    \n      SUM(fb.impressions) AS impressions,\n    \n      SUM(fb.spend) AS spend,\n    \n      SUM(fb.clicks) AS clicks,\n    \n      SUM(fb.reach) AS reach,\n    \n      SUM(fb.link_click) AS link_click,\n    \n      SUM(fb.post_engagement) AS post_engagement,\n    \n      SUM(fb.offline_conversion_purchase) AS offline_conversion_purchase,\n    \n      SUM(fb.offline_conversion_purchase_value) AS offline_conversion_purchase_value,\n    \n      SUM(fb.pixel_purchase) AS pixel_purchase,\n    \n      SUM(fb.pixel_purchase_value) AS pixel_purchase_value,\n    \n      SUM(fb.meta_purchase) AS meta_purchase,\n    \n      SUM(fb.meta_purchase_value) AS meta_purchase_value,\n    \n  FROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__adsinsights` fb\n    left join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__campaigns` cp on fb.ad_key = cp.ad_key\n  WHERE \n  \n    date_start >= date_add(current_date, interval -30 day)\n  \n  \n  and fb.account_id not in (\n    -- wookids\n    \"311864311227191\",\"622771789982135\",\"3744530109108893\",\"3472468196325797\",\n    -- ecom\n    \"521606912204785\",\"151869866811869\",\n    -- HR\n    \"572603800939181\",\n    -- branding\n    \"836481701438037\",\n    -- web\n    \"382523215230249\"\n    )\n  group by 1,2,3\n)\n\nselect f.* except(date_start,ad_group_location,ad_pic),\n  o.* except(transaction_date,local_page_code,pic),\n  b.* except(date,local_page_code,fb_ads_pic),\n  coalesce(f.date_start, o.transaction_date,b.date) as date,\n  coalesce(f.ad_group_location, o.local_page_code, b.local_page_code) as local_page_code,\n  coalesce(o.pic,f.ad_pic, b.fb_ads_pic) as ad_pic\nfrom facebook_performance f\nfull outer join  offline_performance o \non f.date_start = o.transaction_date \nand f.ad_group_location = o.local_page_code\nand f.ad_pic = o.pic\nfull outer join facebook_budget b\non coalesce(o.transaction_date,f.date_start) = b.date\nand coalesce(o.local_page_code,f.ad_group_location) = b.local_page_code\nand coalesce(o.pic,f.ad_pic) = b.fb_ads_pic", "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`facebook_dashboard`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.058867Z", "completed_at": "2025-01-22T04:45:24.076126Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.079200Z", "completed_at": "2025-01-22T04:45:24.079210Z"}], "thread_id": "Thread-1", "execution_time": 0.07751727104187012, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__cs_calls", "compiled": true, "compiled_code": "\n\n\n\n\nWITH calls AS (\n\n    SELECT\n        cs.call_status,\n        cs.call_month,\n        c.kiotviet_customer_id AS customer_id,\n        cs.branch_name,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__cs_calls`\n        cs\n        INNER JOIN `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers` C\n        ON cs.customer_phone = c.contact_number\n        AND kiotviet_customer_id IS NOT NULL\n),\ntransactions AS (\n    SELECT\n        customer_id,\n        transaction_date,\n        branch_id, \n        \n            count(distinct  transaction_id) AS val_transaction_id,\n            \n                count(distinct  CASE\n                    WHEN transaction_type = 'invoice' THEN transaction_id\n                END ) AS num_invoice_transaction_id,\n            \n                count(distinct  CASE\n                    WHEN transaction_type = 'return' THEN transaction_id\n                END ) AS num_return_transaction_id,\n            \n        \n            sum( total) AS val_total,\n            \n                sum( CASE\n                    WHEN transaction_type = 'invoice' THEN total\n                END ) AS num_invoice_total,\n            \n                sum( CASE\n                    WHEN transaction_type = 'return' THEN total\n                END ) AS num_return_total,\n            \n        \n            sum( total_payment) AS val_total_payment,\n            \n                sum( CASE\n                    WHEN transaction_type = 'invoice' THEN total_payment\n                END ) AS num_invoice_total_payment,\n            \n                sum( CASE\n                    WHEN transaction_type = 'return' THEN total_payment\n                END ) AS num_return_total_payment,\n            \n        \n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n    WHERE\n        source = 'kiotviet'\n        AND transaction_date >= '2024-10-01'\n    group by 1,2,3\n)\nSELECT\n    c.call_status,\n    c.call_month,\n    c.customer_id AS customer_id,\n    c.branch_name,\n    t.* except(customer_id)\nFROM\n    calls c\n    left join transactions t\n    ON c.customer_id = t.customer_id\n    AND lower(c.call_status) NOT IN (\n        \"kh\u00f4ng nghe m\u00e1y\",\n        \"t\u1eeb ch\u1ed1i\",\n        \"thu\u00ea bao\"\n    )\n    AND (\n        (t.transaction_date >= c.call_month\n            AND t.transaction_date < date_add(c.call_month, INTERVAL 1 MONTH))\n        OR t.transaction_date IS NULL\n    )", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__cs_calls`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.083185Z", "completed_at": "2025-01-22T04:45:24.100347Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.103084Z", "completed_at": "2025-01-22T04:45:24.103096Z"}], "thread_id": "Thread-4", "execution_time": 0.026401281356811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__customers_attributes", "compiled": true, "compiled_code": "\n\nwith updated_customers as (\n    select distinct customer_id\n    from `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n    where customer_id is not null\n    \n       and transaction_date >= date_add(current_date(), interval -7 day)\n    \n),\n\nagg_metrics as (\n    SELECT\n    u.customer_id,\n    COUNT(\n        DISTINCT CASE\n            WHEN transaction_type = 'invoice' THEN t.transaction_source_id\n        END\n    ) AS num_transactions,\n    SUM(t.total) AS total_purchased_goods_value,\n    SUM(t.total_payment) AS total_monetary_value,\n    MAX(t.transaction_date) AS last_purchase_date,\n    MIN(t.transaction_date) AS first_purchase_date,\n    COUNT(\n        CASE\n            WHEN t.source = 'nhanhvn' THEN t.transaction_id\n        END\n    ) > 1 AS has_online_purchase,\nFROM\n    updated_customers u\n    inner join `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` t on u.customer_id = t.customer_id\n    group by 1\n),\n\nagg_dimensions as (\n    SELECT\n        u.customer_id,\n        first_value(t.branch_id) over w1 as registered_branch_id,\n        last_value(t.branch_id) over w1 as last_purchase_branch_id,\n    FROM\n        updated_customers u\n    inner join `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` t on u.customer_id = t.customer_id\n    qualify row_number() over (partition by u.customer_id order by t.transaction_date asc ) = 1\n\n    window w1 AS (\n        partition by u.customer_id order by t.transaction_date asc rows between unbounded preceding and unbounded following\n    )\n)\n\nselect \n    m.*,\n    d.* except(customer_id),\nfrom agg_metrics m \ninner join agg_dimensions d on m.customer_id = d.customer_id", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`fct__customers_attributes`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.090169Z", "completed_at": "2025-01-22T04:45:24.101794Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.109248Z", "completed_at": "2025-01-22T04:45:24.109259Z"}], "thread_id": "Thread-3", "execution_time": 0.031777143478393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__sms_revenue", "compiled": true, "compiled_code": "\n\nWITH revenue AS (\n    SELECT\n        r.customer_id,\n        C.contact_number,\n        DATE(r.transaction_date) transaction_date,\n        SUM(r.total) total,\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` r\n        LEFT JOIN `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers` C\n        ON r.customer_id = C.universal_customer_id\n        left join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on r.branch_id = b.branch_id\n    WHERE\n        r.transaction_type = 'invoice'\n        AND C.contact_number IS NOT NULL\n        and b.channel = 'Offline'\n        \ngroup by 1,2,3\n    ),\n    sms_data AS (\n        SELECT\n            *\n        FROM\n            `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`\n            sms\n        WHERE\n            sms.sent_time IS NOT NULL\n            AND sent_status in ('Th\u00e0nh c\u00f4ng')\n            and (audience not in ('TUYEN DUNG','THONG BAO DON HANG') or audience is null)\n        \n)\nSELECT\n    sms.* except(start_date, end_date,audience),\n    revenue.transaction_date,\n    revenue.total,\n    revenue.customer_id,\nFROM\n    sms_data sms\n    LEFT JOIN revenue\n    ON sms.phone = revenue.contact_number\nWHERE\n    DATE(sms.sent_time) < revenue.transaction_date \n    AND (\n        revenue.transaction_date  <= DATE(sms.end_date)  or date_diff(revenue.transaction_date, DATE(sms.sent_time), DAY) <= 10 \n    )\n\nqualify ROW_NUMBER() over( PARTITION BY revenue.customer_id, revenue.transaction_date ORDER BY sms.sent_time DESC) = 1", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__sms_revenue`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.119695Z", "completed_at": "2025-01-22T04:45:24.133115Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.135991Z", "completed_at": "2025-01-22T04:45:24.136003Z"}], "thread_id": "Thread-1", "execution_time": 0.036690473556518555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.accepted_values_fct__transactions_transaction_type__invoice__return.9c79d27315", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        transaction_type as value_field,\n        count(*) as n_records\n\n    from `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n    group by transaction_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'invoice','return'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.104084Z", "completed_at": "2025-01-22T04:45:24.134543Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.137556Z", "completed_at": "2025-01-22T04:45:24.137565Z"}], "thread_id": "Thread-2", "execution_time": 0.03940892219543457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.rfm_movement", "compiled": true, "compiled_code": "\n\n\nWITH calendar AS (\n\n  SELECT\n    DISTINCT start_of_month,\n  FROM\n    `agile-scheme-394814`.`dbt_prod`.`calendar`\n),\nsource AS (\n  SELECT\n    customer_id,\n    DATE(transaction_date) transaction_date,\n    DATE_TRUNC(DATE(transaction_date), MONTH) transaction_month,\n    SUM(total) total,\n    COUNT( DISTINCT CASE WHEN transaction_type = 'invoice' THEN DATE_TRUNC(transaction_date, DAY) END) num_transactions,\n  FROM\n    `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n  WHERE\n    customer_id IS NOT NULL\n    \n  GROUP BY\n    1,\n    2,\n    3\n),\naggregated_and_cross_join AS (\n  SELECT\n    calendar.start_of_month,\n    source.customer_id,\n    SUM(CASE WHEN calendar.start_of_month = source.transaction_month THEN total END) total,\n    SUM(CASE WHEN calendar.start_of_month = source.transaction_month THEN num_transactions END) num_transactions,\n    MAX(CASE WHEN calendar.start_of_month = source.transaction_month THEN transaction_date END ) transaction_date\n  FROM\n    calendar\n    CROSS JOIN source\n  WHERE\n    1 = 1\n    AND calendar.start_of_month <= CURRENT_DATE()\n  GROUP BY\n    1,\n    2\n),\naggregated_cumulative AS (\n  SELECT\n    start_of_month,\n    customer_id,\n    MIN(transaction_date) over w3 AS first_purchase,\n    COALESCE(MAX(transaction_date) over w4, MAX(transaction_date) over w5) AS last_purchase,\n    coalesce(safe_divide(SUM(total) over w1,SUM(num_transactions) over w1),0) AS monetary,\n    COALESCE(SUM(num_transactions) over w1, 0) AS frequency,\n    date_diff(\n      COALESCE(MAX(transaction_date) over w2, case when LAST_DAY(start_of_month, MONTH) < current_date() then LAST_DAY(start_of_month, MONTH) else current_date() end  ),\n      COALESCE(MAX(transaction_date) over w4, MAX(transaction_date) over w5),\n      DAY) AS recency\n      FROM\n        aggregated_and_cross_join \n        window w1 AS (\n          PARTITION BY customer_id\n          ORDER BY\n            unix_date(LAST_DAY(start_of_month, MONTH)) asc RANGE BETWEEN 365 preceding\n            AND CURRENT ROW\n        ),\n        w2 AS (\n          PARTITION BY customer_id,\n          start_of_month\n          ORDER BY\n            unix_date(start_of_month) ASC RANGE BETWEEN unbounded preceding\n            AND 1 preceding\n        ),\n        w4 AS (\n          PARTITION BY customer_id,\n          start_of_month\n          ORDER BY\n            unix_date(start_of_month) ASC RANGE BETWEEN unbounded preceding\n            AND CURRENT ROW\n        ),\n        w5 AS (\n          PARTITION BY customer_id\n          ORDER BY\n            unix_date(start_of_month) ASC RANGE BETWEEN unbounded preceding\n            AND 1 preceding\n        ),\n        w3 AS (\n          PARTITION BY customer_id\n        )\n    ),\n    scoring AS (\n      SELECT\n        customer_id,\n        start_of_month,\n        first_purchase,\n        last_purchase,\n        recency,\n        monetary,\n        frequency,\n        NTILE(5) over (\n          PARTITION BY start_of_month\n          ORDER BY\n            recency DESC\n        ) AS recency_score,\n        CASE\n          WHEN frequency > 0 THEN NTILE(5) over (\n            PARTITION BY start_of_month\n            ,(\n              CASE\n                WHEN monetary > 0 THEN \"purchase\"\n                ELSE \"notpurchase\"\n              END\n            )\n            ORDER BY\n              frequency ASC\n          )\n          ELSE 1\n        END AS frequency_score,\n        CASE\n          WHEN monetary > 0 THEN NTILE(5) over (\n            PARTITION BY start_of_month\n            ,\n            (\n              CASE\n                WHEN monetary > 0 THEN \"purchase\"\n                ELSE \"notpurchase\"\n              END\n            )\n            ORDER BY\n              monetary ASC\n          )\n          ELSE 1\n        END AS monetary_score\n      FROM\n        aggregated_cumulative\n      WHERE\n        start_of_month >= DATE_TRUNC(\n          first_purchase,\n          MONTH\n        )\n    ),\n    last_branch AS (\n      SELECT\n        DISTINCT customer_id,\n        DATE(transaction_date) transaction_date,\n        DATE_TRUNC(DATE(transaction_date), MONTH) AS transaction_month,\n        FIRST_VALUE(branch_id) over (\n          PARTITION BY customer_id,\n          DATE_TRUNC(DATE(transaction_date), MONTH)\n          ORDER BY\n            transaction_date DESC rows BETWEEN unbounded preceding\n            AND unbounded following) AS last_purchase_branch,\n          FROM\n            `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n          WHERE\n            customer_id IS NOT NULL\n        ),\n      final as (\n        SELECT\n        DISTINCT scoring.*,\n        CONCAT(\n          recency_score,\n          frequency_score,\n          monetary_score\n        ) score_concat,\n        CASE\n        \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('555', '554', '544', '545', '454', '455', '445') then 'Champions'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('543', '444', '435', '355', '354', '345', '344', '335') then 'Loyal'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('553', '551', '552', '541', '542', '533', '532', '531', '452', '451', '442', '441', '431', '453', '433', '432', '423', '353', '352', '351', '342', '341', '333', '323') then 'Potential Loyalists'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('512', '511', '422', '421', '412', '411', '311') then 'Walk-in Customers'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('525', '524', '523', '522', '521', '515', '514', '513', '425', '424', '413', '414', '415', '315', '314', '313') then 'Promising'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('535', '534', '443', '434', '343', '334', '325', '324') then 'Need Attention'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('331', '321', '312', '221', '213', '231', '241', '251') then 'About To Sleep'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('255', '254', '245', '244', '253', '252', '243', '242', '235', '234', '225', '224', '153', '152', '145', '143', '142', '135', '134', '133', '125', '124') then 'At Risk'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('155', '154', '144', '214', '215', '115', '114', '113') then 'Cannot Lose Them'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('332', '322', '233', '232', '223', '222', '132', '123', '122', '212', '211') then 'Hibernating customers'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('111', '112', '121', '131', '141', '151') then 'Lost customers'\n          \n        END AS segment,\n        CASE\n          WHEN DATE_TRUNC(first_purchase,MONTH) = start_of_month THEN \"Kh\u00e1ch m\u1edbi\"\n          WHEN recency > 360 THEN '>1Y n\u0103m ch\u01b0a quay l\u1ea1i'\n          WHEN recency > 180 THEN '6T-1Y ch\u01b0a quay l\u1ea1i'\n          WHEN recency > 90 THEN '3-6T ch\u01b0a quay l\u1ea1i'\n          WHEN recency > 31 THEN '1-3T ch\u01b0a quay l\u1ea1i'\n          ELSE \"Kh\u00e1ch quay l\u1ea1i\"\n        END AS recency_type,\n        last_branch.last_purchase_branch,\n      FROM\n        scoring\n        LEFT JOIN last_branch\n        ON scoring.customer_id = last_branch.customer_id\n        AND last_branch.transaction_month = scoring.start_of_month\n\n\nWHERE\n  DATE(start_of_month) >= date_add(DATE(_dbt_max_partition), interval -1 month)\n\n),\nprevious as (\nselect * except(last_purchase_branch),\n\nfirst_value(last_purchase_branch ignore nulls) over (\n          partition by customer_id \n          order by start_of_month desc \n          rows between current row and unbounded following) last_purchase_branch,\ncoalesce(lag(segment) over (partition by customer_id order by start_of_month asc),'First-time Purchaser') as previous_segment\nfrom final\n)\n\nselect * from previous \n\nWHERE\n  DATE(start_of_month) >= DATE(_dbt_max_partition)\n", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.139883Z", "completed_at": "2025-01-22T04:45:24.152601Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.155236Z", "completed_at": "2025-01-22T04:45:24.155247Z"}], "thread_id": "Thread-4", "execution_time": 0.02144479751586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_fct__transactions_branch_id.eaaf3373a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect branch_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\nwhere branch_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.145899Z", "completed_at": "2025-01-22T04:45:24.153991Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.161099Z", "completed_at": "2025-01-22T04:45:24.161111Z"}], "thread_id": "Thread-3", "execution_time": 0.02591538429260254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_fct__transactions_transaction_id.fb8e6580ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.156186Z", "completed_at": "2025-01-22T04:45:24.180807Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.183003Z", "completed_at": "2025-01-22T04:45:24.183014Z"}], "thread_id": "Thread-1", "execution_time": 0.03223371505737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_fct__transactions_transaction_source_id.52bdef8734", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select transaction_source_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n  where transaction_source_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.162062Z", "completed_at": "2025-01-22T04:45:24.183906Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.209788Z", "completed_at": "2025-01-22T04:45:24.209799Z"}], "thread_id": "Thread-2", "execution_time": 0.05820155143737793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.sado_analytics_services.orders_by_product_size", "compiled": true, "compiled_code": "\n\n\n\n\nwith agg_ as (\n    select \ndate_trunc(r.transaction_date, month) as month,\nregexp_extract(transaction_code,r'([A-Z0-9]+)\\.') as original_code,\n\nifnull(sum(case when lower(it.sub_productline) in ('\u00e1o ba l\u1ed7','\u00e1o ch\u1ed1ng n\u1eafng','\u00e1o s\u00e1t n\u00e1ch','polo','s\u01a1 mi c\u1ed9c','tshirt','b\u1ed9 polo','b\u1ed9 t-shirt','qu\u1ea7n short \u00e2u','qu\u1ea7n short casual','qu\u1ea7n short gi\u00f3','qu\u1ea7n short kaki','qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac','\u00e1o gi\u1eef nhi\u1ec7t','\u00e1o polo d\u00e0i tay','\u00e1o thun d\u00e0i tay') then r.quantity end),0) as num_light_items,\n\nifnull(sum(case when lower(it.sub_productline) in ('\u00e1o blazer','\u00e1o bomber','\u00e1o phao','b\u1ed9 vest') then r.quantity end),0) as num_heavy_items,\n\nifnull(sum(case when lower(it.sub_productline) in ('\u00e1o gi\u00f3','\u00e1o kho\u00e1c','\u00e1o len','\u00e1o n\u1ec9 r\u1eddi','b\u1ed9 gi\u00f3','b\u1ed9 n\u1ec9','qu\u1ea7n d\u00e0i casual','qu\u1ea7n d\u00e0i th\u1ec3 thao','qu\u1ea7n n\u1ec9 r\u1eddi','qu\u1ea7n \u00e2u','qu\u1ea7n jean','qu\u1ea7n khaki','s\u01a1 mi d\u00e0i') then r.quantity end),0) as num_medium_items,\n\nifnull(sum(case when lower(it.sub_productline) in ('\u00e1o l\u00f3t c\u1ed9c tay','ba l\u1ed7 l\u00f3t','d\u00e2y l\u01b0ng','s\u1ecbp','t\u1ea5t','v\u00ed','ph\u1ee5 ki\u1ec7n') then r.quantity end),0) as num_accessories_items,\n\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__revenue_items` r\nleft join `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products` it on r.product_id = it.product_id\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on r.branch_id = b.branch_id\nwhere 1=1\nand r.transaction_code not like '%HDD%'\nand r.transaction_type = 'invoice'\nand r.source ='kiotviet'\nand r.transaction_date >='2023-12-01'\nand b.channel in ('Offline','Popup','\u0110i\u1ec3m x\u1ea3')\ngroup by 1,2\n)\nselect \nmonth,\ncount(distinct original_code) as num_orders,\ncount(distinct \ncase when  \nnum_light_items+num_heavy_items+num_medium_items+num_accessories_items >=1 \nthen original_code end ) as has_items,\ncount(distinct \ncase when  \nnum_accessories_items >0 and\nnum_light_items = 0 and\nnum_heavy_items = 0 and\nnum_medium_items = 0 \nthen original_code end ) as accessory_only,\ncount(distinct \ncase when  \nnum_medium_items = 1 and\nnum_heavy_items = 0 and\nnum_light_items = 0 and\nnum_accessories_items = 0 \nthen original_code end ) as single_medium,\ncount(distinct \ncase when  \nnum_light_items = 1 and\nnum_accessories_items >=0 and\nnum_heavy_items = 0 and\nnum_medium_items = 0 \nthen original_code end ) as single_light_with_accessory,\ncount(distinct \ncase when  \nnum_light_items = 2 and\nnum_accessories_items = 0 and\nnum_heavy_items = 0 and\nnum_medium_items = 0 \nthen original_code end ) as two_light_without_accessory,\ncount(distinct \ncase when  \nnum_medium_items = 1 and\nnum_accessories_items >=1 and\nnum_heavy_items = 0 and\nnum_light_items = 0 \nthen original_code end ) as single_medium_with_accessory,\ncount(distinct \ncase when  \nnum_light_items+num_medium_items >=3 and\nnum_medium_items+num_light_items < 8 and\nnum_accessories_items >0 and\nnum_heavy_items = 0 \nthen original_code end ) as light_mix_medium_with_accessory_B,\ncount(distinct \ncase when  \nnum_heavy_items = 1 and\nnum_accessories_items >=0 and\nnum_light_items = 0 and\nnum_medium_items = 0 \nthen original_code end ) as single_heavy_with_accessory,\ncount(distinct \ncase when  \nnum_light_items+num_medium_items >=8 and\nnum_medium_items+num_light_items <= 12 and\nnum_accessories_items >= 0 and\nnum_heavy_items = 0 \nthen original_code end ) as light_mix_medium_with_accessory_A,\ncount(distinct \ncase when  \nnum_heavy_items = 2 and\nnum_accessories_items >=0 and\nnum_light_items = 0 and\nnum_medium_items = 0 \nthen original_code end ) as two_heavy_with_accessory,\ncount(distinct \ncase when  \nnum_heavy_items = 1 and\nnum_accessories_items >= 0 and\nnum_light_items+num_medium_items >=1 \nthen original_code end ) as single_heavy_mix_with_accessory,\ncount(distinct \ncase when  \nnum_heavy_items = 2 and\nnum_accessories_items >= 0 and\nnum_light_items+num_medium_items >=1 \nthen original_code end ) as two_heavy_mix_with_accessory,\nfrom agg_\ngroup by 1\nhaving has_items*2 - (has_items + accessory_only + single_medium + single_light_with_accessory + two_light_without_accessory + single_medium_with_accessory + light_mix_medium_with_accessory_B + single_heavy_with_accessory + light_mix_medium_with_accessory_A + two_heavy_with_accessory + single_heavy_mix_with_accessory + two_heavy_mix_with_accessory) > 0", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.185174Z", "completed_at": "2025-01-22T04:45:24.228875Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.238612Z", "completed_at": "2025-01-22T04:45:24.238623Z"}], "thread_id": "Thread-4", "execution_time": 0.0586545467376709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.fct__daily_inventory", "compiled": true, "compiled_code": "with  __dbt__cte__int__working_days as (\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as string), '_dbt_utils_surrogate_key_null_') as string))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week,promotion),\n    case when b.channel = '\u0110i\u1ec3m x\u1ea3' then b.channel\n    when date_diff(c.date,b.opening_day,day) <= 10 then 'Khai tr\u01b0\u01a1ng' \n    else coalesce(p.promotion,c.promotion) end as promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on coalesce(b.opening_day,'2023-01-01') <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere 1=1\n\nand b.channel not in ('Kho & CH kh\u00e1c Kiotviet')\nand c.date <= current_date()\n\n\n),  __dbt__cte__int_kiotviet__inventory_change as (\n\n\nwith cal_ending_inventory as (\nSELECT\n    distinct \n    product_id,\n    branch_id,\n    DATE(_batched_at) AS inventory_date,\n    LAST_VALUE(on_hand) over w1 AS ending_inventory,\n    max(case when on_hand > 0 then DATE(_batched_at) end) over w2 as last_inventory_date\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__inventories`\n    window w1 AS (\n        PARTITION BY product_id,\n        branch_id,\n        DATE(_batched_at)\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    ),\n    w2 as (\n        PARTITION BY product_id,\n        branch_id\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    )\n),\ncal_last_inventory_date as (\nselect * except(last_inventory_date),\n    coalesce(max(case when inventory_date > last_inventory_date and ending_inventory = 0 then inventory_date end ) over (PARTITION BY product_id,branch_id),last_inventory_date) last_inventory_date ,\n    lead(inventory_date) over (PARTITION BY product_id,branch_id ORDER BY inventory_date) as next_inventory_date,\nfrom cal_ending_inventory\n)\n\nselect inv.* , w.date\nfrom cal_last_inventory_date inv\nleft join __dbt__cte__int__working_days w\non inv.branch_id = w.branch_id \nand ((inv.inventory_date <= w.date and inv.next_inventory_date > w.date) \n     or (inv.last_inventory_date <= w.date and w.date< current_date() and ending_inventory >0 and inv.next_inventory_date is null)\n     or (inv.last_inventory_date = w.date and inv.next_inventory_date is null and ending_inventory =0)\n    )\n    \nwhere inventory_date <= last_inventory_date\n), inventory as (\n    select \n        * except(last_inventory_date,next_inventory_date,inventory_date),\n        coalesce(lag(ending_inventory) over (partition by product_id,branch_id order by date),0) as beginning_inventory,\n    from __dbt__cte__int_kiotviet__inventory_change inv\n),\nquantity_sold as (\n    select \n        branch_id,\n        product_id,\n        transaction_date,\n        sum(quantity) as quantity_sold\n    from `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__revenue_items`\n    group by 1,2,3\n),\nquantity_return as (\n    select \n        branch_id,\n        product_id,\n        transaction_date,\n        sum(quantity) as quantity_return\n    from `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__return_items`\n    group by 1,2,3\n),\n\ntransfers_in as (\n    select \n        receipt_branch_id,\n        product_id,\n        date(received_date) transaction_date,\n        sum(receive_quantity) as quantity_transfer_in,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__transfers_details`\n    group by 1,2,3\n),\n\ntransfers_out as (\n    select \n        transfer_branch_id,\n        product_id,\n        date(sent_date) transaction_date,\n        sum(send_quantity) as quantity_transfer_out,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__transfers_details`\n    group by 1,2,3\n)\n\nselect \n    inv.*,\n    (inv.ending_inventory - inv.beginning_inventory) as quantity_change,\n    (inv.ending_inventory + inv.beginning_inventory)/2 as average_inventory,\n    coalesce(sold.quantity_sold,0) quantity_sold,\n    coalesce(ret.quantity_return,0) quantity_return,\n    coalesce(tin.quantity_transfer_in,0) quantity_transfer_in,\n    coalesce(tout.quantity_transfer_out,0) quantity_transfer_out,\nfrom inventory inv\nleft join quantity_sold sold on inv.branch_id = sold.branch_id and inv.product_id = sold.product_id and inv.date = sold.transaction_date\nleft join quantity_return ret on inv.branch_id = ret.branch_id and inv.product_id = ret.product_id and inv.date = ret.transaction_date\nleft join transfers_in tin on inv.branch_id = tin.receipt_branch_id and inv.product_id = tin.product_id and inv.date = tin.transaction_date\nleft join transfers_out tout on inv.branch_id = tout.transfer_branch_id and inv.product_id = tout.product_id and inv.date = tout.transaction_date", "relation_name": "`agile-scheme-394814`.`dbt_prod`.`fct__daily_inventory`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.210742Z", "completed_at": "2025-01-22T04:45:24.230368Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.240169Z", "completed_at": "2025-01-22T04:45:24.240179Z"}], "thread_id": "Thread-3", "execution_time": 0.05869770050048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.sales_dashboard", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH offline_performance AS (\n  SELECT\n    to_hex(md5(cast(coalesce(cast(r.branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date(r.transaction_date) as string), '_dbt_utils_surrogate_key_null_') as string))) AS branch_working_day_id,\n    \n      count(distinct  transaction_id) AS val_transaction_id,\n      count(distinct \n        CASE\n          WHEN transaction_type = 'invoice' THEN transaction_id\n        END ) AS num_invoice_transaction_id,\n      count(distinct \n        CASE\n          WHEN transaction_type = 'return' THEN transaction_id\n        END ) AS num_return_transaction_id,\n      \n    \n      count(distinct  customer_id) AS val_customer_id,\n      count(distinct \n        CASE\n          WHEN transaction_type = 'invoice' THEN customer_id\n        END ) AS num_invoice_customer_id,\n      count(distinct \n        CASE\n          WHEN transaction_type = 'return' THEN customer_id\n        END ) AS num_return_customer_id,\n      \n    \n      sum( total) AS val_total,\n      sum(\n        CASE\n          WHEN transaction_type = 'invoice' THEN total\n        END ) AS num_invoice_total,\n      sum(\n        CASE\n          WHEN transaction_type = 'return' THEN total\n        END ) AS num_return_total,\n      \n    \n      sum( total_payment) AS val_total_payment,\n      sum(\n        CASE\n          WHEN transaction_type = 'invoice' THEN total_payment\n        END ) AS num_invoice_total_payment,\n      sum(\n        CASE\n          WHEN transaction_type = 'return' THEN total_payment\n        END ) AS num_return_total_payment,\n      \n    \n    COUNT(DISTINCT r.branch_id) AS num_stores,\n    count(distinct case when r.transaction_type = 'invoice' and r.transaction_code not like '%HDD%' and r.total>0 then r.transaction_id end) as num_invoices,\n    sum(case when r.transaction_type = 'invoice' and r.transaction_code not like '%HDD%' then r.total end) as invoice_value,\n  FROM\n    `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` r\n  WHERE 1=1\n    \n      and r.transaction_date >= '2023-01-01'\n    \n    AND r.branch_id NOT IN (1000087891) \nGROUP BY 1\n),\n\nbudget AS (\n  SELECT\n  budget.* except(\n  daily_sales_target , \n  daily_traffic_target \n  ),\n  to_hex(md5(cast(coalesce(cast(budget.branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(budget.date as string), '_dbt_utils_surrogate_key_null_') as string))) AS branch_working_day_id,\n  coalesce(fbudget.daily_sales_target,budget.daily_sales_target) as daily_sales_target,\n  coalesce(fbudget.daily_traffic_target,budget.daily_traffic_target) as daily_traffic_target,\n  FROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct__sales_budget` budget\n    full outer join `agile-scheme-394814`.`dbt_prod_marketing`.`facebook_budget` fbudget on budget.branch_id = fbudget.branch_id and budget.date = fbudget.date\n  WHERE\n    budget.date <= CURRENT_DATE()\n  \n),\n\n_traffic AS (\n  SELECT\n    branch_name,\n    DATE,\n    SUM(traffic) AS total_traffic,\n    SUM(working_hour) AS total_working_hour,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__traffic`\n    group by 1,2\n),\n\n_offline_performance2 as (\n  select \n    to_hex(md5(cast(coalesce(cast(r.branch_id as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date(r.transaction_date) as string), '_dbt_utils_surrogate_key_null_') as string))) AS branch_working_day_id,\n    SUM(CASE WHEN (r.subtotal) <> 0  THEN (r.quantity) ELSE NULL END) as units_sold,\n    SUM(r.cogs) as total_cogs,\n    sum(r.order_discount) order_discount,\n  from `agile-scheme-394814`.`dbt_prod_sales`.`fct__revenue_items` r\n  WHERE 1=1\n    \n      and r.transaction_date >= '2023-01-01'\n    \n    AND r.branch_id NOT IN (1000087891) \n  GROUP BY 1\n)\n\nSELECT\n  b.* EXCEPT(branch_working_day_id,branch_name),\n  o.* EXCEPT(branch_working_day_id),\n  t.* except(branch_name, date),\n  o2.* except(branch_working_day_id)\nFROM budget b\nleft outer join offline_performance o on b.branch_working_day_id = o.branch_working_day_id\nleft outer join _offline_performance2 o2 on b.branch_working_day_id = o2.branch_working_day_id\nleft outer join _traffic t on b.branch_name = t.branch_name and b.date = t.date", "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`sales_dashboard`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.231051Z", "completed_at": "2025-01-22T04:45:24.247758Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.250074Z", "completed_at": "2025-01-22T04:45:24.250085Z"}], "thread_id": "Thread-1", "execution_time": 0.02410268783569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard_date__local_page_code__ad_pic.0aed4662f1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        date, local_page_code, ad_pic\n    from `agile-scheme-394814`.`dbt_prod_core`.`facebook_dashboard`\n    group by date, local_page_code, ad_pic\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.242102Z", "completed_at": "2025-01-22T04:45:24.252308Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.265029Z", "completed_at": "2025-01-22T04:45:24.265040Z"}], "thread_id": "Thread-2", "execution_time": 0.035448551177978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_fct__customers_attributes_last_purchase_branch_id.8b2ec2edef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_purchase_branch_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers_attributes`\nwhere last_purchase_branch_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.253688Z", "completed_at": "2025-01-22T04:45:24.266961Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.269133Z", "completed_at": "2025-01-22T04:45:24.269141Z"}], "thread_id": "Thread-4", "execution_time": 0.020681381225585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_fct__customers_attributes_registered_branch_id.2b83352f22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect registered_branch_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers_attributes`\nwhere registered_branch_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.258652Z", "completed_at": "2025-01-22T04:45:24.270069Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.278162Z", "completed_at": "2025-01-22T04:45:24.278173Z"}], "thread_id": "Thread-3", "execution_time": 0.028920412063598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_fct__sms_revenue_customer_id__transaction_date.74e3b79b6b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, transaction_date\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`fct__sms_revenue`\n    group by customer_id, transaction_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.271449Z", "completed_at": "2025-01-22T04:45:24.281255Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.291300Z", "completed_at": "2025-01-22T04:45:24.291311Z"}], "thread_id": "Thread-1", "execution_time": 0.025394678115844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.sado_analytics_services.sms_performance", "compiled": true, "compiled_code": "WITH rfm_ as (\n    select customer_id,start_of_month, segment,\n    coalesce(lag(segment) over (partition by customer_id order by start_of_month asc),'First-time Purchaser') prev_segment\n    from `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\n    where start_of_month >='2022-12-01'\n),\n\nsms AS (\n\n    SELECT\n        DISTINCT s.phone,\n        C.customer_id,\n        DATE(\n            s.sent_time\n        ) sent_time,\n        r.segment,\n        r.prev_segment,\n        s.sms_cost,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`\n        s\n        LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers` C\n        ON s.phone = C.contact_number\n        LEFT JOIN rfm_ r\n        ON C.customer_id = r.customer_id\n        AND DATE_TRUNC(\n            s.sent_time,\n            MONTH\n        ) = r.start_of_month\n),\nrevenue AS (\n    SELECT\n        DATE(transaction_date) transaction_date,\n        customer_id,\n        COUNT(\n            DISTINCT transaction_id\n        ) AS num_invoice,\n        SUM(\n            total\n        ) AS total_invoice_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`revenue`\n    WHERE\n        transaction_type = 'invoice'\n        and transaction_date>='2023-01-01'\n    GROUP BY\n        1,\n        2\n),\nperformance as (\n    SELECT\n        sms.*,\n        revenue.num_invoice,\n        revenue.total_invoice_value,\n        concat()\n        date_diff(\n            revenue.transaction_date,\n            sms.sent_time,\n            DAY\n        ) AS days_lag,\n    FROM\n        sms\n        LEFT JOIN revenue\n        ON sms.sent_time < revenue.transaction_date\n        AND sms.customer_id = revenue.customer_id\n        AND date_diff(\n            revenue.transaction_date,\n            sms.sent_time,\n            DAY\n        ) <= 7\n    \n)\nSELECT\n    prev_segment,\n    avg(days_lag) days_lag,\n    SUM(num_invoice) num_invoice,\n    SUM(total_invoice_value) total_invoice_value,\n    count(phone) as num_sent,\n    sum(sms_cost) sms_cost,\nFROM\n    performance\ngroup by 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.282594Z", "completed_at": "2025-01-22T04:45:24.307875Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.310725Z", "completed_at": "2025-01-22T04:45:24.310736Z"}], "thread_id": "Thread-2", "execution_time": 0.0333714485168457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.cohort_analysis", "compiled": true, "compiled_code": "\n\n\nWITH joined_tables AS (\n    SELECT\n        t.customer_id,\n        DATE_TRUNC(t.transaction_date,MONTH) transaction_month,\n        DATE_TRUNC(r.first_purchase,MONTH) first_purchase_month,\n        date_diff(t.transaction_date,r.first_purchase,MONTH) AS cohort_age,\n        r.segment,\n        r.previous_segment\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` t\n        LEFT JOIN `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement` r\n        ON t.customer_id = r.customer_id\n        AND r.start_of_month = DATE_TRUNC(CURRENT_DATE, MONTH)\n        where t.transaction_type = 'invoice'\n        and t.transaction_code not like 'HDD_%'\n        \n        AND t.transaction_date >= date_trunc(current_date,month)\n        \n)\n\n\n\n    SELECT\n    *,\n    CASE\n    \n        WHEN cohort_age BETWEEN 0 and 0 THEN '0. T0'\n    \n        WHEN cohort_age BETWEEN 1 and 3 THEN '1. 1-3m'\n    \n        WHEN cohort_age BETWEEN 4 and 6 THEN '2. 4-6m'\n    \n        WHEN cohort_age BETWEEN 7 and 9 THEN '3. 7-9m'\n    \n        WHEN cohort_age BETWEEN 10 and 12 THEN '4. 10-12m'\n    \n        WHEN cohort_age BETWEEN 13 and 18 THEN '5. 1-1.5y'\n    \n        WHEN cohort_age BETWEEN 19 and 24 THEN '6. 1.5-2y'\n    \n        WHEN cohort_age BETWEEN 25 and 36 THEN '7. 2-3y'\n    \n        ELSE '8. 3y+'\n    END AS cohort_age_group\nFROM\n    joined_tables\n    group by 1,2,3,4,5,6,7\n", "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`cohort_analysis`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.292253Z", "completed_at": "2025-01-22T04:45:24.310056Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.312436Z", "completed_at": "2025-01-22T04:45:24.312446Z"}], "thread_id": "Thread-4", "execution_time": 0.03344559669494629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.sms_dashboard", "compiled": true, "compiled_code": "\n\n\nWITH customer_data as (\n    select \n        c.contact_number, \n        c.customer_id, \n        rfm.segment, \n        rfm.previous_segment, \n        rfm.start_of_month,\n        rfm.first_purchase,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers` c\n    left join `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement` rfm \n    on c.customer_id = rfm.customer_id\n    where c.contact_number is not null\n    and rfm.start_of_month >= date_trunc(current_date, month)\n    ),\n\nsms_sent_data AS (\n\n    SELECT\n        \n        DATE(sent_time) sent_time,\n        sms.campaign,\n        sms.sms_id,\n        coalesce(c.segment,'Cold Data') segment,\n        case \n            when (c.previous_segment = 'First-time Purchaser' and date(c.first_purchase) >= DATE(sent_time)) or c.first_purchase is null then 'Cold Data' \n        else c.previous_segment end previous_segment,\n        COUNT(DISTINCT sent_id) AS sms_sent,\n        COUNT(DISTINCT case when sent_status = 'Th\u00e0nh c\u00f4ng' then phone end) AS customer_sent,\n        \n        SUM(case when sent_status = 'Th\u00e0nh c\u00f4ng' then sms_cost end) sms_cost,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data` sms\n    left join customer_data c \n    on sms.phone = c.contact_number \n    and DATE_TRUNC(DATE(sent_time), MONTH) = c.start_of_month\n    WHERE\n        sms.sent_time IS NOT NULL\n            \n        AND sent_status in ('Th\u00e0nh c\u00f4ng','Ch\u1edd g\u1eedi')\n        and (audience not in ('TUYEN DUNG','THONG BAO DON HANG') or audience is null)\n        and sms.sent_time >= date_trunc(current_date, month)\n        group by 1,2,3,4,5\n),\n\nsms_revenue as (\n    select \n        \n        date(sent_time) sent_time,\n        r.campaign,\n        r.sms_id,\n        coalesce(c.segment,'Cold Data') segment,\n        case when c.previous_segment = 'First-time Purchaser' and date(c.first_purchase) >= DATE(sent_time) then 'Cold Data' else c.previous_segment end previous_segment,\n        sum(total) total,\n        count(distinct r.customer_id) as num_customer_converted,\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`fct__sms_revenue` r \n    left join customer_data c \n    on r.customer_id = c.customer_id \n    and date_trunc(date(sent_time),month) = c.start_of_month\n    where r.sent_time >= date_trunc(current_date, month)\n    group by 1,2,3,4,5\n)\n\nselect \n    ss.*, \n    sr.total, \n    sr.num_customer_converted\nfrom sms_sent_data ss \nleft join sms_revenue sr \non ss.sent_time = sr.sent_time \nand ss.segment = sr.segment \nand ss.previous_segment = sr.previous_segment\nand ss.sms_id = sr.sms_id", "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`sms_dashboard`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.302787Z", "completed_at": "2025-01-22T04:45:24.319428Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.322683Z", "completed_at": "2025-01-22T04:45:24.322694Z"}], "thread_id": "Thread-3", "execution_time": 0.032157182693481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_rfm_movement_customer_id__start_of_month.d9b269e396", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, start_of_month\n    from `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\n    group by customer_id, start_of_month\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.314362Z", "completed_at": "2025-01-22T04:45:24.324461Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.327146Z", "completed_at": "2025-01-22T04:45:24.327157Z"}], "thread_id": "Thread-1", "execution_time": 0.017844438552856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_rfm_movement_first_purchase.597a31a8ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_purchase\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\nwhere first_purchase is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.328088Z", "completed_at": "2025-01-22T04:45:24.341162Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.351410Z", "completed_at": "2025-01-22T04:45:24.351422Z"}], "thread_id": "Thread-2", "execution_time": 0.029625654220581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_rfm_movement_last_purchase.f325cc0b69", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_purchase\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\nwhere last_purchase is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.333719Z", "completed_at": "2025-01-22T04:45:24.341890Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.352712Z", "completed_at": "2025-01-22T04:45:24.352725Z"}], "thread_id": "Thread-4", "execution_time": 0.02908182144165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_rfm_movement_segment.ef3b4c6511", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect segment\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\nwhere segment is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.342583Z", "completed_at": "2025-01-22T04:45:24.359859Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.362832Z", "completed_at": "2025-01-22T04:45:24.362840Z"}], "thread_id": "Thread-3", "execution_time": 0.029920578002929688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sado_analytics_services.sales_forecast", "compiled": true, "compiled_code": "\n\nWITH revenue_metrics AS (\n    SELECT\n        DATE,\n        SUM(num_invoice_transaction_id) AS num_invoices,\n        SUM(num_stores) AS num_stores,\n        safe_divide(SUM(num_invoice_total), SUM(num_invoice_transaction_id)) AS daily_aov,\n        safe_divide(sum(val_total_payment),sum(num_invoice_total)) as retained_pct,\n    FROM\n        `agile-scheme-394814`.`dbt_prod_core`.`sales_dashboard` s \n        left join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on s.branch_id = b.branch_id\n    WHERE\n        DATE >= '2024-01-01'\n        and date < current_date()\n        and b.asm_name is not null\n    GROUP BY\n        1\n),\nforecast AS (\n    SELECT\n        forecast_date,\n        date_in_future,\n        mean_estimated,\n        mean_upper_estimated,\n        mean_lower_estimated,\n        forecasted_value\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_forecaster__forecast`\n    WHERE\n        forecast_date >= '2024-01-01'\n),\ndaily_forecasted_values AS (\n    SELECT\n        r.date,\n        r.num_invoices,\n        r.num_stores,\n        r.daily_aov,\n        f.mean_estimated,\n        f.mean_lower_estimated,\n        f.mean_upper_estimated,\n        f.forecasted_value,\n        r.retained_pct,\n    FROM\n        revenue_metrics r\n        LEFT JOIN forecast f\n        ON r.date = f.forecast_date\n        AND r.date = f.date_in_future\n),\nfureture_values AS (\n    SELECT\n        *\n    FROM\n        daily_forecasted_values\n    UNION ALL\n    SELECT\n        date_in_future,\n        forecasted_value,\n        CAST(\n            NULL AS numeric\n        ) AS num_stores,\n        CAST(\n            NULL AS numeric\n        ) AS daily_aov,\n        mean_estimated,\n        mean_lower_estimated,\n        mean_upper_estimated,\n        forecasted_value,\n        CAST(\n            NULL AS numeric\n        ) AS retained_pct,\n    FROM\n        forecast\n    WHERE\n        date_in_future >= CURRENT_DATE()\n        AND forecast_date = CURRENT_DATE()\n)\n\nselect \n* except(num_stores,daily_aov,retained_pct),\ncoalesce(\n    num_stores,\n    first_value(num_stores ignore nulls) over(order by date desc rows between current row and 10 following)\n) num_stores,\ncoalesce(daily_aov,\navg(daily_aov) over (order by unix_date(date) desc range between current row and 7 following )\n) daily_aov,\ncoalesce(retained_pct,\navg(retained_pct) over (order by unix_date(date) desc range between current row and 7 following )\n) retained_pct,\n\nfrom fureture_values", "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`sales_forecast`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.353769Z", "completed_at": "2025-01-22T04:45:24.365299Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.368162Z", "completed_at": "2025-01-22T04:45:24.368172Z"}], "thread_id": "Thread-1", "execution_time": 0.027834415435791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sales_dashboard_branch_id__date.c916901df6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        branch_id, date\n    from `agile-scheme-394814`.`dbt_prod_core`.`sales_dashboard`\n    group by branch_id, date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.370055Z", "completed_at": "2025-01-22T04:45:24.389832Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.397998Z", "completed_at": "2025-01-22T04:45:24.398009Z"}], "thread_id": "Thread-4", "execution_time": 0.03345656394958496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sms_dashboard_sent_time__segment__previous_segment__sms_id.7801047a52", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sent_time, segment, previous_segment, sms_id\n    from `agile-scheme-394814`.`dbt_prod_core`.`sms_dashboard`\n    group by sent_time, segment, previous_segment, sms_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.380032Z", "completed_at": "2025-01-22T04:45:24.390575Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.398957Z", "completed_at": "2025-01-22T04:45:24.398968Z"}], "thread_id": "Thread-2", "execution_time": 0.03513693809509277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_cohort_analysis_customer_id__transaction_month.384c841fc7", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, transaction_month\n    from `agile-scheme-394814`.`dbt_prod_core`.`cohort_analysis`\n    group by customer_id, transaction_month\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.391923Z", "completed_at": "2025-01-22T04:45:24.405376Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.406039Z", "completed_at": "2025-01-22T04:45:24.406047Z"}], "thread_id": "Thread-3", "execution_time": 0.019150733947753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.not_null_sales_forecast_date.c667cc5e3b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `agile-scheme-394814`.`dbt_prod_core`.`sales_forecast`\nwhere date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-22T04:45:24.399888Z", "completed_at": "2025-01-22T04:45:24.407031Z"}, {"name": "execute", "started_at": "2025-01-22T04:45:24.407658Z", "completed_at": "2025-01-22T04:45:24.407665Z"}], "thread_id": "Thread-1", "execution_time": 0.019625425338745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sado_analytics_services.unique_sales_forecast_date.52db94e4c4", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select date as unique_field\n  from `agile-scheme-394814`.`dbt_prod_core`.`sales_forecast`\n  where date is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 4.656749486923218, "args": {"require_resource_names_without_spaces": false, "show_resource_report": false, "output": "text", "empty": false, "partial_parse": true, "send_anonymous_usage_stats": true, "static_parser": true, "inject_ephemeral_ctes": true, "partial_parse_file_diff": true, "source_freshness_run_project_hooks": false, "vars": {}, "log_level": "info", "enable_legacy_logger": false, "exclude": [], "defer": false, "version_check": true, "quiet": false, "log_level_file": "debug", "strict_mode": false, "log_format": "default", "select": [], "populate_cache": true, "introspect": true, "macro_debugging": false, "favor_state": false, "log_file_max_bytes": 10485760, "log_path": "/home/runner/work/sado_analytics_services/sado_analytics_services/logs", "use_colors": true, "write_json": true, "project_dir": "/home/runner/work/sado_analytics_services/sado_analytics_services", "profiles_dir": "/home/runner/work/sado_analytics_services/sado_analytics_services", "log_format_file": "debug", "print": true, "invocation_command": "dbt compile", "cache_selected_only": false, "printer_width": 80, "use_colors_file": true, "which": "compile", "require_explicit_package_overrides_for_builtin_materializations": true, "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager"}}