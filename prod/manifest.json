{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v10.json", "dbt_version": "1.6.6", "generated_at": "2023-12-27T04:52:49.623818Z", "invocation_id": "b3851a5b-f83a-4174-8a47-1b76a3d77a23", "env": {}, "project_name": "sado_analytics_services", "project_id": "148c6db774f961ddb86f6e2712b91cb0", "user_id": "290aa911-45b8-402b-a50b-dc81b86f7fe4", "send_anonymous_usage_stats": true, "adapter_type": "bigquery"}, "nodes": {"model.sado_analytics_services.int_analytics__events_format": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_analytics__events_format", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/marketing/int_analytics__events_format.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.sql", "unique_id": "model.sado_analytics_services.int_analytics__events_format", "fqn": ["sado_analytics_services", "intermediate", "marketing", "int_analytics__events_format"], "alias": "int_analytics__events_format", "checksum": {"name": "sha256", "checksum": "e921b1f512c9936d3104e4ebf5bc54a2a2dd373d3e4e7faf64972b43fa068057"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "event_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily"], "description": "In this model, each row records a specific GA4 event. Important event parameters have been pivoted into new columns, giving a flat record of the event that contains all important information for the target site.\n", "columns": {"event_id": {"name": "event_id", "description": "Unique identifier for a particular GA4 event\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "Date - the partioning key for the base table", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_timestamp": {"name": "event_timestamp", "description": "Date and time at which the event took place", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "client_id": {"name": "client_id", "description": "Cookie-based identifier for an individual", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The type of event that took place (over ten possibilities - common values: page_view, track_clicks\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "continent": {"name": "continent", "description": "Continent the visitor is based in (identified via IP address)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "Country the visitor is based in (identified via IP address)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device_type": {"name": "device_type", "description": "Type of device being used by the visitor (desktop, mobile, or tablet)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "browser": {"name": "browser", "description": "Browser the visitor was using (over 100 possible values)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "Operating system the visitor was using (over 20 possible values)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_source": {"name": "traffic_source", "description": "The acquisition channel for this sessions (thousands of possible values); the name of the network that first acquired the visitor.\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_campaign": {"name": "traffic_campaign", "description": "Name of the marketing campaign that first acquired the visitor", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_medium": {"name": "traffic_medium", "description": "Name of the medium (organic search, email, etc.) that first acquired the visitor\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_id": {"name": "session_id", "description": "Identifier for a particular analytics session associated with a particular Client ID\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_location": {"name": "page_location", "description": "The full URL associated with the event, including protocol, domain, path, query parameters and fragments\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_referrer": {"name": "traffic_referrer", "description": "Granular information (from utm_content) about the campaign that first acquired the visitor (usually a specific referral within a wider campaign)\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel_grouping": {"name": "channel_grouping", "description": "The acquisition channel associated with the session (based on our internal definition). Allowed values: direct, email, government, other-referral, search, social, and uncategorised.\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ga_session_number": {"name": "ga_session_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_type": {"name": "payment_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "location": {"name": "location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "method": {"name": "method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "filter": {"name": "filter", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_id": {"name": "transaction_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping": {"name": "shipping", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delivery_method": {"name": "delivery_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "store": {"name": "store", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value": {"name": "value", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "form_value": {"name": "form_value", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click_target": {"name": "link_click_target", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_referrer": {"name": "page_referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "click_element_url": {"name": "click_element_url", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referrer": {"name": "referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_time_msec": {"name": "engagement_time_msec", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_term": {"name": "search_term", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_address": {"name": "user_address", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_email": {"name": "user_email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_phone": {"name": "user_phone", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": "sado_analytics_services://models/intermediate/marketing/int_analytics__events_format.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "docs": {"show": false}, "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "event_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily"]}, "created_at": 1703652760.8148358, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\n      'field': 'event_date', \n      'data_type': 'date', \n      'granularity': 'day'},\n    incremental_strategy = 'insert_overwrite',\n    unique_key = 'event_id',\n    on_schema_change = 'sync_all_columns',\n    tags=['incremental', 'daily'],\n  )\n}}\n{%set event_params = ['ga_session_id',\n          'page_location',\n          'page_referrer',\n          'click_element_url',\n          'payment_type',\n          'location',\n          'method',\n          'filter',\n          'transaction_id',\n          'referrer',\n          'shipping',\n          'delivery_method',\n          'store',\n          'value',\n          'form_value',\n          'ga_session_number',\n          \"engagement_time_msec\",\n          \"search_term\"]%}\n{%set user_params = ['address','email','phone','name']%}\n\nwith base as (\n    SELECT\n        event_id,\n        event_date,\n        event_timestamp,\n        client_id,\n        event_name,\n        continent,\n        country,\n        device_type,\n        browser,\n        operating_system,\n        val_click_element_url AS link_click_target,\n        coalesce(traffic_source,\"(none)\") traffic_source,\n        coalesce(traffic_medium,\"(none)\") traffic_medium,\n        coalesce(traffic_campaign,\"(none)\") traffic_campaign,\n        channel_grouping_session as channel_grouping,\n        CONCAT(val_ga_session_id, '-', client_id) AS session_id,\n        REGEXP_EXTRACT(val_page_location, 'utm_content=([^&]+)') AS traffic_referrer,\n        {% for param in event_params if param != 'ga_session_id' %}\n        val_{{param}} AS {{param}},\n        {% endfor %}\n        user_value,user_key,\n      FROM ( \n               SELECT \n             DISTINCT \n                   * EXCEPT(param_id,items)\n                 FROM\n                   {{ ref('stg_analytics__events') }}\n{% if is_incremental() %}\n                WHERE\n                      event_date >= DATE(_dbt_max_partition)\n\n                   OR event_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}\n     )\n     PIVOT(\n\n        ANY_VALUE(param_value) AS val\n        FOR param_key IN (\n          '{{event_params | join(\"','\")}}'\n        )\n     )\n     )\n     select *\n     {# {% for param in user_params %} #}\n        {# user_{{param}}, #}\n        {# {% endfor %} #}\n     from base \n     pivot( \n      ANY_VALUE(user_value) as user \n      for user_key in ('{{user_params | join(\"','\")}}')\n      )", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.sql", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n    SELECT\n        event_id,\n        event_date,\n        event_timestamp,\n        client_id,\n        event_name,\n        continent,\n        country,\n        device_type,\n        browser,\n        operating_system,\n        val_click_element_url AS link_click_target,\n        coalesce(traffic_source,\"(none)\") traffic_source,\n        coalesce(traffic_medium,\"(none)\") traffic_medium,\n        coalesce(traffic_campaign,\"(none)\") traffic_campaign,\n        channel_grouping_session as channel_grouping,\n        CONCAT(val_ga_session_id, '-', client_id) AS session_id,\n        REGEXP_EXTRACT(val_page_location, 'utm_content=([^&]+)') AS traffic_referrer,\n        \n        val_page_location AS page_location,\n        \n        val_page_referrer AS page_referrer,\n        \n        val_click_element_url AS click_element_url,\n        \n        val_payment_type AS payment_type,\n        \n        val_location AS location,\n        \n        val_method AS method,\n        \n        val_filter AS filter,\n        \n        val_transaction_id AS transaction_id,\n        \n        val_referrer AS referrer,\n        \n        val_shipping AS shipping,\n        \n        val_delivery_method AS delivery_method,\n        \n        val_store AS store,\n        \n        val_value AS value,\n        \n        val_form_value AS form_value,\n        \n        val_ga_session_number AS ga_session_number,\n        \n        val_engagement_time_msec AS engagement_time_msec,\n        \n        val_search_term AS search_term,\n        \n        user_value,user_key,\n      FROM ( \n               SELECT \n             DISTINCT \n                   * EXCEPT(param_id,items)\n                 FROM\n                   `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\n\n                WHERE\n                      event_date >= DATE(_dbt_max_partition)\n\n                   OR event_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n\n     )\n     PIVOT(\n\n        ANY_VALUE(param_value) AS val\n        FOR param_key IN (\n          'ga_session_id','page_location','page_referrer','click_element_url','payment_type','location','method','filter','transaction_id','referrer','shipping','delivery_method','store','value','form_value','ga_session_number','engagement_time_msec','search_term'\n        )\n     )\n     )\n     select *\n     \n        \n        \n     from base \n     pivot( \n      ANY_VALUE(user_value) as user \n      for user_key in ('address','email','phone','name')\n      )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.weather": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "weather", "resource_type": "model", "package_name": "sado_analytics_services", "path": "ultilities/weather.sql", "original_file_path": "models/ultilities/weather.sql", "unique_id": "model.sado_analytics_services.weather", "fqn": ["sado_analytics_services", "ultilities", "weather"], "alias": "weather", "checksum": {"name": "sha256", "checksum": "d47d2026bdf49d34343fec65940d1ca4c7038967728e53d99477f4b81e8f1289"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "This model aggregates weather data by date, providing maximum, minimum, and mean temperatures, rain sum, and maximum wind speed for each location. It also calculates rolling averages for temperature and apparent temperature over 10, 15, and 30 days.", "columns": {"date": {"name": "date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "temperature_2m_max": {"name": "temperature_2m_max", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "temperature_2m_min": {"name": "temperature_2m_min", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "temperature_2m_mean": {"name": "temperature_2m_mean", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apparent_temperature_max": {"name": "apparent_temperature_max", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apparent_temperature_min": {"name": "apparent_temperature_min", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apparent_temperature_mean": {"name": "apparent_temperature_mean", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apparent_temperature_mean_10d": {"name": "apparent_temperature_mean_10d", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "temperature_2m_mean_10d": {"name": "temperature_2m_mean_10d", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apparent_temperature_mean_15d": {"name": "apparent_temperature_mean_15d", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "temperature_2m_mean_15d": {"name": "temperature_2m_mean_15d", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apparent_temperature_mean_30d": {"name": "apparent_temperature_mean_30d", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "temperature_2m_mean_30d": {"name": "temperature_2m_mean_30d", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rain_sum": {"name": "rain_sum", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wind_speed10m_max": {"name": "wind_speed10m_max", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lat": {"name": "lat", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "long": {"name": "long", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": "sado_analytics_services://models/ultilities/weather.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "docs": {"show": false}}, "created_at": 1703652760.89544, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`weather`", "raw_code": "WITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('misc', 'weather'), partition_by = 'lat,long,time', order_by = \"_batched_at desc\",) }}\n)\n\n{%set ranges = [10,15,30]%}\n\nSELECT\n    DATE(\n        source.time\n    ) AS date,\n    source.temperature2mMax AS temperature_2m_max,\n    source.temperature2mMin AS temperature_2m_min,\n    source.temperature2mMean AS temperature_2m_mean,\n    source.apparentTemperatureMax AS apparent_temperature_max,\n    source.apparentTemperatureMin AS apparent_temperature_min,\n    source.apparentTemperatureMean AS apparent_temperature_mean,\n    {%for range in ranges%}\n    AVG(\n        source.apparentTemperatureMean\n    ) over w{{range}}d as apparent_temperature_mean_{{range}}d,\n    AVG(\n        source.temperature2mMean\n    ) over w{{range}}d as temperature_2m_mean_{{range}}d,\n    {%endfor%}\n    \n    source.rainSum AS rain_sum,\n    source.windSpeed10mMax AS wind_speed10m_max,\n    source.lat AS lat,\n    source.long AS long,\nFROM\n    source\n    window\n    {%for range in ranges%}\n    w{{range}}d AS (\n        PARTITION BY concat(lat,long)\n        ORDER BY\n            unix_date(DATE(source.time)) ASC RANGE BETWEEN {{range}} preceding\n            AND CURRENT ROW\n    ) {{',' if not loop.last}}\n    {%endfor%}", "language": "sql", "refs": [], "sources": [["misc", "weather"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.misc.weather"]}, "compiled_path": "target/compiled/sado_analytics_services/models/ultilities/weather.sql", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Misc`.`p__weather__*` original\n        group by lat,long,time\n    )\n)\n\n\n\nSELECT\n    DATE(\n        source.time\n    ) AS date,\n    source.temperature2mMax AS temperature_2m_max,\n    source.temperature2mMin AS temperature_2m_min,\n    source.temperature2mMean AS temperature_2m_mean,\n    source.apparentTemperatureMax AS apparent_temperature_max,\n    source.apparentTemperatureMin AS apparent_temperature_min,\n    source.apparentTemperatureMean AS apparent_temperature_mean,\n    \n    AVG(\n        source.apparentTemperatureMean\n    ) over w10d as apparent_temperature_mean_10d,\n    AVG(\n        source.temperature2mMean\n    ) over w10d as temperature_2m_mean_10d,\n    \n    AVG(\n        source.apparentTemperatureMean\n    ) over w15d as apparent_temperature_mean_15d,\n    AVG(\n        source.temperature2mMean\n    ) over w15d as temperature_2m_mean_15d,\n    \n    AVG(\n        source.apparentTemperatureMean\n    ) over w30d as apparent_temperature_mean_30d,\n    AVG(\n        source.temperature2mMean\n    ) over w30d as temperature_2m_mean_30d,\n    \n    \n    source.rainSum AS rain_sum,\n    source.windSpeed10mMax AS wind_speed10m_max,\n    source.lat AS lat,\n    source.long AS long,\nFROM\n    source\n    window\n    \n    w10d AS (\n        PARTITION BY concat(lat,long)\n        ORDER BY\n            unix_date(DATE(source.time)) ASC RANGE BETWEEN 10 preceding\n            AND CURRENT ROW\n    ) ,\n    \n    w15d AS (\n        PARTITION BY concat(lat,long)\n        ORDER BY\n            unix_date(DATE(source.time)) ASC RANGE BETWEEN 15 preceding\n            AND CURRENT ROW\n    ) ,\n    \n    w30d AS (\n        PARTITION BY concat(lat,long)\n        ORDER BY\n            unix_date(DATE(source.time)) ASC RANGE BETWEEN 30 preceding\n            AND CURRENT ROW\n    ) \n    ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.calendar": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "calendar", "resource_type": "model", "package_name": "sado_analytics_services", "path": "ultilities/calendar.sql", "original_file_path": "models/ultilities/calendar.sql", "unique_id": "model.sado_analytics_services.calendar", "fqn": ["sado_analytics_services", "ultilities", "calendar"], "alias": "calendar", "checksum": {"name": "sha256", "checksum": "c6154adf7afabf7c16d896874197d4c19d20967507a485a1d69cf857a24ba0bd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"date": {"name": "date", "description": "", "meta": {"metrics": {"no_days": {"type": "count_distinct", "label": "Days in Month", "group_label": "General metrics"}}, "dimension": {"type": "date", "time_intervals": ["DAY", "WEEK", "MONTH", "YEAR", "QUARTER"]}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "day_of_month": {"name": "day_of_month", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "day_name": {"name": "day_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_of_month": {"name": "start_of_month", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_of_month": {"name": "end_of_month", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_of_week": {"name": "start_of_week", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_of_week": {"name": "end_of_week", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "month_name": {"name": "month_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "year_month": {"name": "year_month", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "year": {"name": "year", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "period": {"name": "period", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "period_code": {"name": "period_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": "sado_analytics_services://models/ultilities/calendar.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "docs": {"show": false}}, "created_at": 1703652760.9056935, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`calendar`", "raw_code": "WITH date_spine AS (\n    {{ dbt_utils.date_spine(\n        start_date = \"cast('2023-06-01' as Date)\",\n        datepart = \"day\",\n        end_date = \"date_add( current_date() , interval 6 month)\"\n    ) }}\n),\n_milestone as (\n    select \n    milestones.*\n    from {{ref(\"stg_gsheet__facebook_budget\")}}, unnest(milestones) milestones\n)\n\n\n    SELECT distinct\n        DATE(date_day) AS date,\n        extract(day from date_day) as day_of_month,\n        format_date(\n            '%A',\n            date_day\n        ) AS day_name,\n        DATE_TRUNC(DATE(date_day), MONTH) AS start_of_month,\n        LAST_DAY(\n            date_day,\n            MONTH\n        ) AS end_of_month,\n        DATE_TRUNC(DATE(date_day), isoweek) AS start_of_week,\n        LAST_DAY(DATE(date_day), isoweek) AS end_of_week,\n        format_date(\n            '%B',\n            date_day\n        ) AS month_name,\n        format_date(\n            '%Y.%m',\n            date_day\n        ) AS year_month,\n        EXTRACT(\n            YEAR\n            FROM\n                date_day\n        ) AS year,\n        b.milestone_name as period,\n        concat(format_date('%Y.%m',date_day),'T',regexp_extract(b.milestone_name,r'Tu\u1ea7n (\\d+)')) as period_code\n    FROM\n        date_spine d\n        left join _milestone b on date(d.date_day) >= b.start and date(d.date_day) <= b.end", "language": "sql", "refs": [{"name": "stg_gsheet__facebook_budget", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.date_spine"], "nodes": ["model.sado_analytics_services.stg_gsheet__facebook_budget"]}, "compiled_path": "target/compiled/sado_analytics_services/models/ultilities/calendar.sql", "compiled": true, "compiled_code": "WITH date_spine AS (\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 392\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n        datetime_add(\n            cast( cast('2023-06-01' as Date) as datetime),\n        interval row_number() over (order by 1) - 1 day\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= date_add( current_date() , interval 6 month)\n\n)\n\nselect * from filtered\n\n\n),\n_milestone as (\n    select \n    milestones.*\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__facebook_budget`, unnest(milestones) milestones\n)\n\n\n    SELECT distinct\n        DATE(date_day) AS date,\n        extract(day from date_day) as day_of_month,\n        format_date(\n            '%A',\n            date_day\n        ) AS day_name,\n        DATE_TRUNC(DATE(date_day), MONTH) AS start_of_month,\n        LAST_DAY(\n            date_day,\n            MONTH\n        ) AS end_of_month,\n        DATE_TRUNC(DATE(date_day), isoweek) AS start_of_week,\n        LAST_DAY(DATE(date_day), isoweek) AS end_of_week,\n        format_date(\n            '%B',\n            date_day\n        ) AS month_name,\n        format_date(\n            '%Y.%m',\n            date_day\n        ) AS year_month,\n        EXTRACT(\n            YEAR\n            FROM\n                date_day\n        ) AS year,\n        b.milestone_name as period,\n        concat(format_date('%Y.%m',date_day),'T',regexp_extract(b.milestone_name,r'Tu\u1ea7n (\\d+)')) as period_code\n    FROM\n        date_spine d\n        left join _milestone b on date(d.date_day) >= b.start and date(d.date_day) <= b.end", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.metricflow_time_spine": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "metricflow_time_spine", "resource_type": "model", "package_name": "sado_analytics_services", "path": "ultilities/metricflow_time_spine.sql", "original_file_path": "models/ultilities/metricflow_time_spine.sql", "unique_id": "model.sado_analytics_services.metricflow_time_spine", "fqn": ["sado_analytics_services", "ultilities", "metricflow_time_spine"], "alias": "metricflow_time_spine", "checksum": {"name": "sha256", "checksum": "ef806eb3fc733628735283db49040774a56ec48c6e6ca39c703ceb25250128b8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"date_day": {"name": "date_day", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": "sado_analytics_services://models/ultilities/metricflow_time_spine.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "docs": {"show": false}}, "created_at": 1703652760.8866558, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`metricflow_time_spine`", "raw_code": "{{config(materialized='table')}}\nwith days as (\n    {{dbt_utils.date_spine(\n        'day',\n        \"DATE(2000,01,01)\",\n        \"DATE(2030,01,01)\"\n    )\n    }}\n),\n\nfinal as (\n    select cast(date_day as date) as date_day\n    from days\n)\n\nselect *\nfrom final", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.date_spine"], "nodes": []}, "compiled_path": "target/compiled/sado_analytics_services/models/ultilities/metricflow_time_spine.sql", "compiled": true, "compiled_code": "\nwith days as (\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n     + \n    \n    p12.generated_number * power(2, 12)\n     + \n    \n    p13.generated_number * power(2, 13)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n     cross join \n    \n    p as p12\n     cross join \n    \n    p as p13\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 10958\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n        datetime_add(\n            cast( DATE(2000,01,01) as datetime),\n        interval row_number() over (order by 1) - 1 day\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= DATE(2030,01,01)\n\n)\n\nselect * from filtered\n\n\n),\n\nfinal as (\n    select cast(date_day as date) as date_day\n    from days\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_analytics__events": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_analytics__events", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAnalytics/stg_analytics__events.sql", "original_file_path": "models/staging/googleAnalytics/stg_analytics__events.sql", "unique_id": "model.sado_analytics_services.stg_analytics__events", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "stg_analytics__events"], "alias": "stg_analytics__events", "checksum": {"name": "sha256", "checksum": "33d0678a08f4dde9b819268c9262b0ea2d4b3ba2797441ed8d87f1d5e0587564"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "param_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily"], "description": "Date-partitioned table in which all GA4 analytics data is unified, reduced to essential fields, and unnested (so the grain of this table is at the event-parameter level and the param_id, not the event_id, is the unique key)\n", "columns": {"param_id": {"name": "param_id", "description": "Surrogate key generated from the event_id and param_key\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_id": {"name": "event_id", "description": "Unique identifier for a particular GA4 event\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "Date - the partioning key for the base table", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_timestamp": {"name": "event_timestamp", "description": "Date and time at which the event took place", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "client_id": {"name": "client_id", "description": "Cookie-based identifier for an individual", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The type of event that took place", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "continent": {"name": "continent", "description": "Continent the visitor is based in (identified via IP address)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "Country the visitor is based in (identified via IP address)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device_type": {"name": "device_type", "description": "Type of device being used by the visitor (desktop, mobile, or tablet)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "browser": {"name": "browser", "description": "Browser the visitor was using (over 100 possible values)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "Operating system the visitor was using (over 20 possible values)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_source": {"name": "traffic_source", "description": "The acquisition channel for this sessions (thousands of possible values); the name of the network that first acquired the visitor.\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_campaign": {"name": "traffic_campaign", "description": "Name of the marketing campaign that first acquired the visitor", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_medium": {"name": "traffic_medium", "description": "Name of the medium (organic search, email, etc.) that first acquired the visitor\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "param_key": {"name": "param_key", "description": "Lookup key for the parameter (indicates the type of parameter represented by this record)\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "param_value": {"name": "param_value", "description": "Value of the parameter denoted by param_key", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel_grouping_session": {"name": "channel_grouping_session", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "items": {"name": "items", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_key": {"name": "user_key", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_value": {"name": "user_value", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAnalytics/stg_analytics__events.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "param_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily"]}, "created_at": 1703652760.9364698, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'event_date',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  unique_key = 'param_id',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'daily']\n) }}\n  SELECT\n  {{ dbt_utils.generate_surrogate_key(['event_id', 'params.key']) }} AS param_id,\n  event_id,\n  event_date,\n  event_timestamp,\n  client_id,\n  event_name,\n  geo.continent AS continent,\n  geo.country AS country,\n  device.category AS device_type,\n  device.web_info.browser AS browser,\n  device.operating_system AS operating_system,\n  traffic_source.source AS traffic_source,\n  traffic_source.name AS traffic_campaign,\n  traffic_source.medium AS traffic_medium,\n  CASE\n    WHEN traffic_source.source = '(direct)'\n    AND (traffic_source.medium IN ('(not set)', '(none)')\n    OR traffic_source.medium IS NULL) THEN 'Direct'\n    WHEN regexp_contains(\n      traffic_source.name,\n      'cross-network'\n    ) THEN 'Cross-network'\n    WHEN (\n      regexp_contains(\n        traffic_source.source,\n        'alibaba|amazon|google shopping|shopify|etsy|ebay|stripe|walmart'\n      )\n      OR regexp_contains(\n        traffic_source.name,\n        '^(.*(([^a-df-z]|^)shop|shopping).*)$'\n      )\n    )\n    AND regexp_contains(\n      traffic_source.medium,\n      '^(.*cp.*|ppc|paid.*)$'\n    ) THEN 'Paid Shopping'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'baidu|bing|duckduckgo|ecosia|google|yahoo|yandex'\n    )\n    AND regexp_contains(\n      traffic_source.medium,\n      '^(.*cp.*|ppc|paid.*)$'\n    ) THEN 'Paid Search'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'badoo|facebook|fb|instagram|linkedin|pinterest|tiktok|twitter|whatsapp'\n    )\n    AND regexp_contains(\n      traffic_source.medium,\n      '^(.*cp.*|ppc|paid.*)$'\n    ) THEN 'Paid Social'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'dailymotion|disneyplus|netflix|youtube|vimeo|twitch|vimeo|youtube'\n    )\n    AND regexp_contains(\n      traffic_source.medium,\n      '^(.*cp.*|ppc|paid.*)$'\n    ) THEN 'Paid Video'\n    WHEN traffic_source.medium IN (\n      'display',\n      'banner',\n      'expandable',\n      'interstitial',\n      'cpm'\n    ) THEN 'Display'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'alibaba|amazon|google shopping|shopify|etsy|ebay|stripe|walmart'\n    )\n    OR regexp_contains(\n      traffic_source.name,\n      '^(.*(([^a-df-z]|^)shop|shopping).*)$'\n    ) THEN 'Organic Shopping'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'badoo|facebook|fb|instagram|linkedin|pinterest|tiktok|twitter|whatsapp|zalo'\n    )\n    OR traffic_source.medium IN (\n      'social',\n      'social-network',\n      'social-media',\n      'sm',\n      'social network',\n      'social media','zalo'\n    ) THEN 'Organic Social'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'dailymotion|disneyplus|netflix|youtube|vimeo|twitch|vimeo|youtube'\n    )\n    OR regexp_contains(\n      traffic_source.medium,\n      '^(.*video.*)$'\n    ) THEN 'Organic Video'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'baidu|bing|duckduckgo|ecosia|google|yahoo|yandex'\n    )\n    OR traffic_source.medium = 'organic' THEN 'Organic Search'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'email|e-mail|e_mail|e mail'\n    )\n    OR regexp_contains(\n      traffic_source.medium,\n      'email|e-mail|e_mail|e mail'\n    ) THEN 'Email'\n    WHEN traffic_source.medium = 'affiliate' THEN 'Affiliates'\n    WHEN traffic_source.medium = 'referral' THEN 'Referral'\n    WHEN traffic_source.medium = 'audio' THEN 'Audio'\n    WHEN traffic_source.medium = 'sms' THEN 'SMS'\n    WHEN traffic_source.medium LIKE '%push'\n    OR regexp_contains(\n      traffic_source.medium,\n      'mobile|notification'\n    ) THEN 'Mobile Push Notifications'\n    ELSE 'Unassigned'\n  END AS channel_grouping_session,\n  params.key AS param_key,\n  COALESCE(\n    params.value.string_value,\n    CAST(\n      params.value.int_value AS STRING\n    ),\n    CAST(\n      params.value.float_value AS STRING\n    ),\n    CAST(\n      params.value.double_value AS STRING\n    )\n  ) AS param_value,\n  items,\n  USER.key AS user_key,\n  COALESCE(\n    USER.value.string_value,\n    CAST(\n      USER.value.int_value AS STRING\n    ),\n    CAST(\n      USER.value.float_value AS STRING\n    ),\n    CAST(\n      USER.value.double_value AS STRING\n    )\n  ) AS user_value,\nFROM\n  (\n    SELECT\n      *\n    FROM\n      {{ ref('base_analytics__events') }}\n\n{% if is_incremental() %}\nWHERE\n  event_date >= DATE(_dbt_max_partition)\n  OR event_date >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %})\nLEFT JOIN unnest(event_params) AS params\nLEFT JOIN unnest(user_properties) USER", "language": "sql", "refs": [{"name": "base_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.base_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/stg_analytics__events.sql", "compiled": true, "compiled_code": "\n  SELECT\n  to_hex(md5(cast(coalesce(cast(event_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(params.key as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS param_id,\n  event_id,\n  event_date,\n  event_timestamp,\n  client_id,\n  event_name,\n  geo.continent AS continent,\n  geo.country AS country,\n  device.category AS device_type,\n  device.web_info.browser AS browser,\n  device.operating_system AS operating_system,\n  traffic_source.source AS traffic_source,\n  traffic_source.name AS traffic_campaign,\n  traffic_source.medium AS traffic_medium,\n  CASE\n    WHEN traffic_source.source = '(direct)'\n    AND (traffic_source.medium IN ('(not set)', '(none)')\n    OR traffic_source.medium IS NULL) THEN 'Direct'\n    WHEN regexp_contains(\n      traffic_source.name,\n      'cross-network'\n    ) THEN 'Cross-network'\n    WHEN (\n      regexp_contains(\n        traffic_source.source,\n        'alibaba|amazon|google shopping|shopify|etsy|ebay|stripe|walmart'\n      )\n      OR regexp_contains(\n        traffic_source.name,\n        '^(.*(([^a-df-z]|^)shop|shopping).*)$'\n      )\n    )\n    AND regexp_contains(\n      traffic_source.medium,\n      '^(.*cp.*|ppc|paid.*)$'\n    ) THEN 'Paid Shopping'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'baidu|bing|duckduckgo|ecosia|google|yahoo|yandex'\n    )\n    AND regexp_contains(\n      traffic_source.medium,\n      '^(.*cp.*|ppc|paid.*)$'\n    ) THEN 'Paid Search'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'badoo|facebook|fb|instagram|linkedin|pinterest|tiktok|twitter|whatsapp'\n    )\n    AND regexp_contains(\n      traffic_source.medium,\n      '^(.*cp.*|ppc|paid.*)$'\n    ) THEN 'Paid Social'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'dailymotion|disneyplus|netflix|youtube|vimeo|twitch|vimeo|youtube'\n    )\n    AND regexp_contains(\n      traffic_source.medium,\n      '^(.*cp.*|ppc|paid.*)$'\n    ) THEN 'Paid Video'\n    WHEN traffic_source.medium IN (\n      'display',\n      'banner',\n      'expandable',\n      'interstitial',\n      'cpm'\n    ) THEN 'Display'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'alibaba|amazon|google shopping|shopify|etsy|ebay|stripe|walmart'\n    )\n    OR regexp_contains(\n      traffic_source.name,\n      '^(.*(([^a-df-z]|^)shop|shopping).*)$'\n    ) THEN 'Organic Shopping'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'badoo|facebook|fb|instagram|linkedin|pinterest|tiktok|twitter|whatsapp|zalo'\n    )\n    OR traffic_source.medium IN (\n      'social',\n      'social-network',\n      'social-media',\n      'sm',\n      'social network',\n      'social media','zalo'\n    ) THEN 'Organic Social'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'dailymotion|disneyplus|netflix|youtube|vimeo|twitch|vimeo|youtube'\n    )\n    OR regexp_contains(\n      traffic_source.medium,\n      '^(.*video.*)$'\n    ) THEN 'Organic Video'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'baidu|bing|duckduckgo|ecosia|google|yahoo|yandex'\n    )\n    OR traffic_source.medium = 'organic' THEN 'Organic Search'\n    WHEN regexp_contains(\n      traffic_source.source,\n      'email|e-mail|e_mail|e mail'\n    )\n    OR regexp_contains(\n      traffic_source.medium,\n      'email|e-mail|e_mail|e mail'\n    ) THEN 'Email'\n    WHEN traffic_source.medium = 'affiliate' THEN 'Affiliates'\n    WHEN traffic_source.medium = 'referral' THEN 'Referral'\n    WHEN traffic_source.medium = 'audio' THEN 'Audio'\n    WHEN traffic_source.medium = 'sms' THEN 'SMS'\n    WHEN traffic_source.medium LIKE '%push'\n    OR regexp_contains(\n      traffic_source.medium,\n      'mobile|notification'\n    ) THEN 'Mobile Push Notifications'\n    ELSE 'Unassigned'\n  END AS channel_grouping_session,\n  params.key AS param_key,\n  COALESCE(\n    params.value.string_value,\n    CAST(\n      params.value.int_value AS STRING\n    ),\n    CAST(\n      params.value.float_value AS STRING\n    ),\n    CAST(\n      params.value.double_value AS STRING\n    )\n  ) AS param_value,\n  items,\n  USER.key AS user_key,\n  COALESCE(\n    USER.value.string_value,\n    CAST(\n      USER.value.int_value AS STRING\n    ),\n    CAST(\n      USER.value.float_value AS STRING\n    ),\n    CAST(\n      USER.value.double_value AS STRING\n    )\n  ) AS user_value,\nFROM\n  (\n    SELECT\n      *\n    FROM\n      `agile-scheme-394814`.`dbt_prod`.`base_analytics__events`\n\n\nWHERE\n  event_date >= DATE(_dbt_max_partition)\n  OR event_date >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n)\nLEFT JOIN unnest(event_params) AS params\nLEFT JOIN unnest(user_properties) USER", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_analytics__events": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_analytics__events", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAnalytics/base/base_analytics__events.sql", "original_file_path": "models/staging/googleAnalytics/base/base_analytics__events.sql", "unique_id": "model.sado_analytics_services.base_analytics__events", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "base", "base_analytics__events"], "alias": "base_analytics__events", "checksum": {"name": "sha256", "checksum": "fd41a5372ea08f1b0b546d6e4e2c09b0dc017c6ecd0a367ae401fd176e53cbfe"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "event_id", "on_schema_change": "sync_all_column", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "event_id", "on_schema_change": "sync_all_column", "tags": ["incremental", "daily"]}, "created_at": 1703652759.098736, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_analytics__events`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\n      'field': 'event_date', \n      'data_type': 'date', \n      'granularity': 'day'},\n    incremental_strategy = 'insert_overwrite',\n    unique_key='event_id',\n    on_schema_change = 'sync_all_column',\n    tags=['incremental', 'daily']\n  )\n}}\n\n    SELECT\n        {{ dbt_utils.generate_surrogate_key([\n           'event_timestamp',\n           'event_name',\n           'user_pseudo_id',\n           'ARRAY_TO_STRING(ARRAY(SELECT CONCAT(p.key, \"::\", COALESCE(p.value.string_value, CAST(p.value.int_value AS STRING), CAST(p.value.float_value AS STRING), CAST(p.value.double_value AS STRING))) FROM UNNEST(event_params) AS p), \"; \")'\n        ]) }} AS event_id,\n        PARSE_DATE('%Y%m%d', event_date) AS event_date, \n        TIMESTAMP_MICROS(event_timestamp) AS event_timestamp,\n        event_name,\n        event_params,\n        event_previous_timestamp,\n        event_value_in_usd,\n        event_bundle_sequence_id,\n        event_server_timestamp_offset,\n        user_pseudo_id AS client_id,\n        privacy_info,\n        user_properties, \n        user_first_touch_timestamp,\n        user_ltv, \n        device, \n        geo, \n        app_info,\n        traffic_source,\n        stream_id,\n        platform,\n        event_dimensions,\n        ecommerce, \n        items,\n      FROM\n        {{ source('analytics', 'events') }}\n{% if is_incremental() %}\n     WHERE\n           _table_suffix LIKE 'intraday_%'\n           \n        OR (\n           PARSE_DATE('%Y%m%d', _table_suffix) >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n           {% if target.name == 'prod' %}\n           OR \n              PARSE_DATE('%Y%m%d', _table_suffix) >= DATE(_dbt_max_partition)\n              {% endif %}\n           )\n           \n{% endif %}", "language": "sql", "refs": [], "sources": [["analytics", "events"]], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.sado_analytics_services.source", "macro.dbt.is_incremental"], "nodes": ["source.sado_analytics_services.analytics.events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/base/base_analytics__events.sql", "compiled": true, "compiled_code": "\n\n    SELECT\n        to_hex(md5(cast(coalesce(cast(event_timestamp as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(event_name as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(user_pseudo_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ARRAY_TO_STRING(ARRAY(SELECT CONCAT(p.key, \"::\", COALESCE(p.value.string_value, CAST(p.value.int_value AS STRING), CAST(p.value.float_value AS STRING), CAST(p.value.double_value AS STRING))) FROM UNNEST(event_params) AS p), \"; \") as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS event_id,\n        PARSE_DATE('%Y%m%d', event_date) AS event_date, \n        TIMESTAMP_MICROS(event_timestamp) AS event_timestamp,\n        event_name,\n        event_params,\n        event_previous_timestamp,\n        event_value_in_usd,\n        event_bundle_sequence_id,\n        event_server_timestamp_offset,\n        user_pseudo_id AS client_id,\n        privacy_info,\n        user_properties, \n        user_first_touch_timestamp,\n        user_ltv, \n        device, \n        geo, \n        app_info,\n        traffic_source,\n        stream_id,\n        platform,\n        event_dimensions,\n        ecommerce, \n        items,\n      FROM\n        `agile-scheme-394814`.`analytics_336884118`.`events_*`\n\n     WHERE\n           _table_suffix LIKE 'intraday_%'\n           \n        OR (\n           PARSE_DATE('%Y%m%d', _table_suffix) >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n           \n           OR \n              PARSE_DATE('%Y%m%d', _table_suffix) >= DATE(_dbt_max_partition)\n              \n           )\n           \n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_caresoft__contacts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__contacts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__contacts.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__contacts.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__contacts", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__contacts"], "alias": "stg_caresoft__contacts", "checksum": {"name": "sha256", "checksum": "1004f46cc1d918d4c7f733d29d4cf24bb4570867d3380638156d019eda40f4d3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "fact", "view"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_caresoft__contacts.created_at})", "fields": ["date", "month_name", "year_month", "period"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "view"], "description": "", "columns": {"created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}, "additional_dimensions": {"contact_type": {"type": "string", "sql": "case when date(${TABLE}.created_at) < date_trunc(${calendar.date},month) then 'old' else 'new' end"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_contacts": {"type": "count_distinct", "label": "No. contacts", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no": {"name": "phone_no", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_phones": {"type": "count_distinct", "label": "No. phones", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_handler_id": {"name": "campaign_handler_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city_id": {"name": "city_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_from": {"name": "created_from", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_fields": {"name": "custom_fields", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "district_id": {"name": "district_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email2": {"name": "email2", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organization": {"name": "organization", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organization_id": {"name": "organization_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no2": {"name": "phone_no2", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no3": {"name": "phone_no3", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "psid": {"name": "psid", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role_id": {"name": "role_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "take_email_at": {"name": "take_email_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "take_phone_at": {"name": "take_phone_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_caresoft__contacts.created_at})", "fields": ["date", "month_name", "year_month", "period"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__contacts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_caresoft__contacts.created_at})", "fields": ["date", "month_name", "year_month", "period"]}]}, "tags": ["caresoft", "fact", "view"]}, "created_at": 1703652761.019136, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__contacts`", "raw_code": "{{\n    config(\n        tags=['caresoft','fact','view']\n    )\n}}\n\nWITH contacts AS (\n    SELECT\n        *\n    FROM\n        {{ ref('base_caresoft__contacts') }}\n),\ncontact_details AS (\n    SELECT\n        *\n    FROM\n        {{ ref('base_caresoft__contact_details') }}\n)\nSELECT\n    C.created_at,\n    C.id AS contact_id,\n    C.phone_no,\n    C.updated_at,\n    C.username,\n    cd.account_id,\n    cd.address,\n    cd.campaign_handler_id,\n    cd.city_id,\n    cd.created_from,\n    cd.custom_fields,\n    cd.district_id,\n    cd.email,\n    cd.email2,\n    cd.gender,\n    cd.organization,\n    cd.organization_id,\n    cd.phone_no2,\n    cd.phone_no3,\n    cd.psid,\n    cd.role_id,\n    cd.take_email_at,\n    cd.take_phone_at,\nFROM\n    contacts C\n    LEFT JOIN contact_details cd\n    ON C.id = cd.id", "language": "sql", "refs": [{"name": "base_caresoft__contacts", "package": null, "version": null}, {"name": "base_caresoft__contact_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_caresoft__contacts", "model.sado_analytics_services.base_caresoft__contact_details"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__contacts.sql", "compiled": true, "compiled_code": "\n\nWITH contacts AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_caresoft__contacts`\n),\ncontact_details AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_caresoft__contact_details`\n)\nSELECT\n    C.created_at,\n    C.id AS contact_id,\n    C.phone_no,\n    C.updated_at,\n    C.username,\n    cd.account_id,\n    cd.address,\n    cd.campaign_handler_id,\n    cd.city_id,\n    cd.created_from,\n    cd.custom_fields,\n    cd.district_id,\n    cd.email,\n    cd.email2,\n    cd.gender,\n    cd.organization,\n    cd.organization_id,\n    cd.phone_no2,\n    cd.phone_no3,\n    cd.psid,\n    cd.role_id,\n    cd.take_email_at,\n    cd.take_phone_at,\nFROM\n    contacts C\n    LEFT JOIN contact_details cd\n    ON C.id = cd.id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_caresoft__tickets": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__tickets", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__tickets.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__tickets.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__tickets", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__tickets"], "alias": "stg_caresoft__tickets", "checksum": {"name": "sha256", "checksum": "d79f0c72bd193ec3ba8281a6f0416f71ef2c5cd6badba849a91d3bd1bd16b269"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "fact", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "view"], "description": "", "columns": {"assignee": {"name": "assignee", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ccs": {"name": "ccs", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_fields": {"name": "custom_fields", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "follows": {"name": "follows", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_overdue": {"name": "is_overdue", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requester": {"name": "requester", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requester_id": {"name": "requester_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tags": {"name": "tags", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_no": {"name": "ticket_no", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_priority": {"name": "ticket_priority", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source": {"name": "ticket_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source_end_status": {"name": "ticket_source_end_status", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_status": {"name": "ticket_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_subject": {"name": "ticket_subject", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_id": {"name": "assignee_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "automessage_id": {"name": "automessage_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comments": {"name": "comments", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_agent": {"name": "current_agent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duedate": {"name": "duedate", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "feedback_status": {"name": "feedback_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "incident_id": {"name": "incident_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qa_agent": {"name": "qa_agent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qa_script_id": {"name": "qa_script_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction": {"name": "satisfaction", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction_at": {"name": "satisfaction_at", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction_content": {"name": "satisfaction_content", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction_send": {"name": "satisfaction_send", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sla": {"name": "sla", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sla_id": {"name": "sla_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source_detail_id": {"name": "ticket_source_detail_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__tickets.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["caresoft", "fact", "view"]}, "created_at": 1703652761.056208, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__tickets`", "raw_code": "{{\n    config(\n        tags=['caresoft','fact','view']\n    )\n}}\n\nWITH tickets AS (\n    SELECT\n        *\n    FROM\n        {{ ref('base_caresoft__tickets') }}\n),\nticket_details AS (\n    SELECT\n        *\n    FROM\n        {{ ref('base_caresoft__ticket_details') }}\n)\nSELECT\n    t.assignee,\n    t.ccs,\n    t.created_at,\n    t.custom_fields,\n    t.follows,\n    t.is_overdue,\n    t.requester,\n    t.requester_id,\n    t.service_id,\n    t.tags,\n    t.ticket_id,\n    t.ticket_no,\n    t.ticket_priority,\n    t.ticket_source,\n    t.ticket_source_end_status,\n    t.ticket_status,\n    t.ticket_subject,\n    t.updated_at,\n    t.assignee_id,\n    td.account_id,\n    td.automessage_id,\n    td.campaign_id,\n    td.comments,\n    td.current_agent,\n    td.duedate,\n    td.feedback_status,\n    td.group_id,\n    td.incident_id,\n    td.qa_agent,\n    td.qa_script_id,\n    td.satisfaction,\n    td.satisfaction_at,\n    td.satisfaction_content,\n    td.satisfaction_send,\n    td.sla,\n    td.sla_id,\n    td.ticket_source_detail_id,\nFROM\n    tickets t\n    LEFT JOIN ticket_details td\n    ON t.ticket_id = td.ticket_id", "language": "sql", "refs": [{"name": "base_caresoft__tickets", "package": null, "version": null}, {"name": "base_caresoft__ticket_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_caresoft__tickets", "model.sado_analytics_services.base_caresoft__ticket_details"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__tickets.sql", "compiled": true, "compiled_code": "\n\nWITH tickets AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_caresoft__tickets`\n),\nticket_details AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_caresoft__ticket_details`\n)\nSELECT\n    t.assignee,\n    t.ccs,\n    t.created_at,\n    t.custom_fields,\n    t.follows,\n    t.is_overdue,\n    t.requester,\n    t.requester_id,\n    t.service_id,\n    t.tags,\n    t.ticket_id,\n    t.ticket_no,\n    t.ticket_priority,\n    t.ticket_source,\n    t.ticket_source_end_status,\n    t.ticket_status,\n    t.ticket_subject,\n    t.updated_at,\n    t.assignee_id,\n    td.account_id,\n    td.automessage_id,\n    td.campaign_id,\n    td.comments,\n    td.current_agent,\n    td.duedate,\n    td.feedback_status,\n    td.group_id,\n    td.incident_id,\n    td.qa_agent,\n    td.qa_script_id,\n    td.satisfaction,\n    td.satisfaction_at,\n    td.satisfaction_content,\n    td.satisfaction_send,\n    td.sla,\n    td.sla_id,\n    td.ticket_source_detail_id,\nFROM\n    tickets t\n    LEFT JOIN ticket_details td\n    ON t.ticket_id = td.ticket_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_caresoft__ticket_custom_fields": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__ticket_custom_fields", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__ticket_custom_fields.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__ticket_custom_fields.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__ticket_custom_fields", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__ticket_custom_fields"], "alias": "stg_caresoft__ticket_custom_fields", "checksum": {"name": "sha256", "checksum": "35bbeeaf355ddeefbd106c2ebeac43b21b1fcabe57ec7c73be05799028534173"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "dimension", "view"], "description": "caresoft ticket custom fields", "columns": {"custom_field_id": {"name": "custom_field_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_field_label": {"name": "custom_field_label", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_id": {"name": "value_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_label": {"name": "value_label", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_parent_id": {"name": "value_parent_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["caresoft", "dimension", "view"]}, "created_at": 1703652761.0805097, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__ticket_custom_fields`", "raw_code": "{{\n    config(\n        tags=['caresoft','dimension','view']\n    )\n}}\nselect\n    custom_field_id,\n    custom_field_lable custom_field_label,\n    f.type,\n    values.id as value_id,\n    values.lable as value_label,\n    case values.parent_value_id when -1 then null else values.parent_value_id end as value_parent_id\nfrom {{ref('base_caresoft__ticket_custom_fields')}} f, unnest(values)  values", "language": "sql", "refs": [{"name": "base_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_caresoft__ticket_custom_fields"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__ticket_custom_fields.sql", "compiled": true, "compiled_code": "\nselect\n    custom_field_id,\n    custom_field_lable custom_field_label,\n    f.type,\n    values.id as value_id,\n    values.lable as value_label,\n    case values.parent_value_id when -1 then null else values.parent_value_id end as value_parent_id\nfrom `agile-scheme-394814`.`dbt_prod`.`base_caresoft__ticket_custom_fields` f, unnest(values)  values", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_caresoft__calls": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__calls", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__calls.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__calls", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__calls"], "alias": "stg_caresoft__calls", "checksum": {"name": "sha256", "checksum": "b1df3d3deb3e5bb3a69b08936dfec632aa8bf8e897dd29159bfc50ac58775edb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "fact", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "view"], "description": "Danh s\u00e1ch cu\u1ed9c g\u1ecdi ch\u1ee7 \u0111\u1ed9ng & b\u1ecb \u0111\u1ed9ng qua caresoft", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_id": {"name": "call_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "caller": {"name": "caller", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "called": {"name": "called", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_id": {"name": "agent_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_type": {"name": "call_type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_time": {"name": "start_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_status": {"name": "call_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_time": {"name": "end_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wait_time": {"name": "wait_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hold_time": {"name": "hold_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "talk_time": {"name": "talk_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_status": {"name": "end_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_agent_id": {"name": "last_agent_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dtmf": {"name": "dtmf", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_user_id": {"name": "last_user_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_survey": {"name": "call_survey", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_survey_result": {"name": "call_survey_result", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "missed_reason": {"name": "missed_reason", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__calls.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["caresoft", "fact", "view"]}, "created_at": 1703652760.9941425, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__calls`", "raw_code": "{{\n    config(\n        tags=['caresoft','fact','view']\n    )\n}}\n\nSELECT\n    id,\n    customer_id,\n    call_id,\n    caller,\n    called,\n    user_id,\n    agent_id,\n    group_id,\n    call_type,\n    start_time,\n    call_status,\n    end_time,\n    wait_time,\n    hold_time,\n    talk_time,\n    end_status,\n    ticket_id,\n    last_agent_id,\n    dtmf,\n    last_user_id,\n    call_survey,\n    call_survey_result,\n    service_id,\n    missed_reason,\nFROM\n    {{ ref('base_caresoft__calls') }}", "language": "sql", "refs": [{"name": "base_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_caresoft__calls"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__calls.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    id,\n    customer_id,\n    call_id,\n    caller,\n    called,\n    user_id,\n    agent_id,\n    group_id,\n    call_type,\n    start_time,\n    call_status,\n    end_time,\n    wait_time,\n    hold_time,\n    talk_time,\n    end_status,\n    ticket_id,\n    last_agent_id,\n    dtmf,\n    last_user_id,\n    call_survey,\n    call_survey_result,\n    service_id,\n    missed_reason,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_caresoft__calls`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_caresoft__chats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__chats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__chats.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__chats.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__chats", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__chats"], "alias": "stg_caresoft__chats", "checksum": {"name": "sha256", "checksum": "fa5ce27e2d1e67c32e6247d0c1bede8a81bd61c03161feeb77e3accec09208e9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "fact", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "view"], "description": "", "columns": {"ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_no": {"name": "ticket_no", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_name": {"name": "group_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_id": {"name": "conversation_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cus_email": {"name": "cus_email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cus_name": {"name": "cus_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cus_phone": {"name": "cus_phone", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_time": {"name": "start_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_time": {"name": "end_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chat_duration": {"name": "chat_duration", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_email": {"name": "agent_email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_name": {"name": "agent_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ring_time": {"name": "ring_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meet_time": {"name": "meet_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "answer_time": {"name": "answer_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chat_status": {"name": "chat_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landing_page": {"name": "landing_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referrer": {"name": "referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_trigger": {"name": "is_trigger", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "facebook_page_id": {"name": "facebook_page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wait_time": {"name": "wait_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_type": {"name": "conversation_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__chats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["caresoft", "fact", "view"]}, "created_at": 1703652761.0712683, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__chats`", "raw_code": "{{\n    config(\n        tags=['caresoft','fact','view']\n    )\n}}\nSELECT\n    ticket_id,\n    ticket_no,\n    customer_id,\n    group_name,\n    conversation_id,\n    cus_email,\n    cus_name,\n    cus_phone,\n    start_time,\n    end_time,\n    chat_duration,\n    agent_email,\n    agent_name,\n    ring_time,\n    meet_time,\n    waitTime as wait_time,\n    answer_time,\n    chat_status,\n    landing_page,\n    referrer,\n    is_trigger,\n    facebook_page_id,\n    service_id,\n    conversation_type,\nfrom {{ref('base_caresoft__chats')}}", "language": "sql", "refs": [{"name": "base_caresoft__chats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_caresoft__chats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__chats.sql", "compiled": true, "compiled_code": "\nSELECT\n    ticket_id,\n    ticket_no,\n    customer_id,\n    group_name,\n    conversation_id,\n    cus_email,\n    cus_name,\n    cus_phone,\n    start_time,\n    end_time,\n    chat_duration,\n    agent_email,\n    agent_name,\n    ring_time,\n    meet_time,\n    waitTime as wait_time,\n    answer_time,\n    chat_status,\n    landing_page,\n    referrer,\n    is_trigger,\n    facebook_page_id,\n    service_id,\n    conversation_type,\nfrom `agile-scheme-394814`.`dbt_prod`.`base_caresoft__chats`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_caresoft__agents": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__agents", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__agents.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__agents", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__agents"], "alias": "stg_caresoft__agents", "checksum": {"name": "sha256", "checksum": "5838ecc436870aa39f6acd1c4ee316c28408bbbb01b0ffcf443898454fef134d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "dimension", "view"], "description": "Danh s\u00e1ch ng\u01b0\u1eddi d\u00f9ng caresoft", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no": {"name": "phone_no", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_id": {"name": "agent_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_name": {"name": "group_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role_id": {"name": "role_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "login_status": {"name": "login_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_status": {"name": "call_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__agents.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["caresoft", "dimension", "view"]}, "created_at": 1703652760.9721482, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__agents`", "raw_code": "{{\n    config(\n        tags=['caresoft','dimension','view']\n    )\n}}\n\nSELECT\n    id,\n    username,\n    email,\n    phone_no,\n    safe_cast(agent_id as int64) agent_id,\n    created_at,\n    updated_at,\n    group_id,\n    group_name,\n    role_id,\n    login_status,\n    call_status,\nFROM\n    {{ ref('base_caresoft__agents') }}", "language": "sql", "refs": [{"name": "base_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_caresoft__agents"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__agents.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    id,\n    username,\n    email,\n    phone_no,\n    safe_cast(agent_id as int64) agent_id,\n    created_at,\n    updated_at,\n    group_id,\n    group_name,\n    role_id,\n    login_status,\n    call_status,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_caresoft__agents`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_caresoft__chats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__chats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__chats.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__chats.sql", "unique_id": "model.sado_analytics_services.base_caresoft__chats", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__chats"], "alias": "base_caresoft__chats", "checksum": {"name": "sha256", "checksum": "4fc46b80ef302a6395ba0230739dedb98bdf9cdb73d300c262b5c19f89074ab0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.2205641, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__chats`", "raw_code": "{# SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY conversation_id\n                ORDER BY\n                    _batched_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'chats'\n            ) }}\n    )\nWHERE\n    rn_ = 1 #}\n\n\nwith union_ as (\n    {{union_relations(\n    relations=[\n        source('caresoft', 'chats_fb'),\n        source('caresoft', 'chats_live'),\n        source('caresoft', 'chats_zalo')\n        ],\n) }}\n), \n{{deduplicate_cte(\n    cte = 'union_',\n    partition_fields=['conversation_id'],\n    last_updated_fields=['_batched_at']\n    )}}", "language": "sql", "refs": [], "sources": [["caresoft", "chats_fb"], ["caresoft", "chats_live"], ["caresoft", "chats_zalo"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.sado_analytics_services.union_relations", "macro.sado_analytics_services.deduplicate_cte"], "nodes": ["source.sado_analytics_services.caresoft.chats_fb", "source.sado_analytics_services.caresoft.chats_live", "source.sado_analytics_services.caresoft.chats_zalo"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/base/base_caresoft__chats.sql", "compiled": true, "compiled_code": "\n\n\nwith union_ as (\n    \n\n        (\n            select\n                cast('`agile-scheme-394814`.`Caresoft`.`p_chats_fb__*`' as STRING) as _dbt_source_relation,\n\n                \n                    cast(`ticket_id` as NUMERIC) as `ticket_id` ,\n                    cast(`ticket_no` as NUMERIC) as `ticket_no` ,\n                    cast(`customer_id` as NUMERIC) as `customer_id` ,\n                    cast(`group_name` as STRING) as `group_name` ,\n                    cast(`conversation_id` as STRING) as `conversation_id` ,\n                    cast(`cus_email` as STRING) as `cus_email` ,\n                    cast(`cus_name` as STRING) as `cus_name` ,\n                    cast(`cus_phone` as STRING) as `cus_phone` ,\n                    cast(`start_time` as DATETIME) as `start_time` ,\n                    cast(`end_time` as DATETIME) as `end_time` ,\n                    cast(`chat_duration` as NUMERIC) as `chat_duration` ,\n                    cast(`agent_email` as STRING) as `agent_email` ,\n                    cast(`agent_name` as STRING) as `agent_name` ,\n                    cast(`ring_time` as DATETIME) as `ring_time` ,\n                    cast(`meet_time` as DATETIME) as `meet_time` ,\n                    cast(`waitTime` as STRING) as `waitTime` ,\n                    cast(`answer_time` as STRING) as `answer_time` ,\n                    cast(`chat_status` as STRING) as `chat_status` ,\n                    cast(`landing_page` as STRING) as `landing_page` ,\n                    cast(`referrer` as STRING) as `referrer` ,\n                    cast(`is_trigger` as STRING) as `is_trigger` ,\n                    cast(`facebook_page_id` as STRING) as `facebook_page_id` ,\n                    cast(`service_id` as NUMERIC) as `service_id` ,\n                    cast(`conversation_type` as STRING) as `conversation_type` ,\n                    cast(`_batched_at` as TIMESTAMP) as `_batched_at` \n\n            from `agile-scheme-394814`.`Caresoft`.`p_chats_fb__*`\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('`agile-scheme-394814`.`Caresoft`.`p_chats_live__*`' as STRING) as _dbt_source_relation,\n\n                \n                    cast(`ticket_id` as NUMERIC) as `ticket_id` ,\n                    cast(`ticket_no` as NUMERIC) as `ticket_no` ,\n                    cast(`customer_id` as NUMERIC) as `customer_id` ,\n                    cast(`group_name` as STRING) as `group_name` ,\n                    cast(`conversation_id` as STRING) as `conversation_id` ,\n                    cast(`cus_email` as STRING) as `cus_email` ,\n                    cast(`cus_name` as STRING) as `cus_name` ,\n                    cast(`cus_phone` as STRING) as `cus_phone` ,\n                    cast(`start_time` as DATETIME) as `start_time` ,\n                    cast(`end_time` as DATETIME) as `end_time` ,\n                    cast(`chat_duration` as NUMERIC) as `chat_duration` ,\n                    cast(`agent_email` as STRING) as `agent_email` ,\n                    cast(`agent_name` as STRING) as `agent_name` ,\n                    cast(`ring_time` as DATETIME) as `ring_time` ,\n                    cast(`meet_time` as DATETIME) as `meet_time` ,\n                    cast(`waitTime` as STRING) as `waitTime` ,\n                    cast(`answer_time` as STRING) as `answer_time` ,\n                    cast(`chat_status` as STRING) as `chat_status` ,\n                    cast(`landing_page` as STRING) as `landing_page` ,\n                    cast(`referrer` as STRING) as `referrer` ,\n                    cast(`is_trigger` as STRING) as `is_trigger` ,\n                    cast(`facebook_page_id` as STRING) as `facebook_page_id` ,\n                    cast(`service_id` as NUMERIC) as `service_id` ,\n                    cast(`conversation_type` as STRING) as `conversation_type` ,\n                    cast(`_batched_at` as TIMESTAMP) as `_batched_at` \n\n            from `agile-scheme-394814`.`Caresoft`.`p_chats_live__*`\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('`agile-scheme-394814`.`Caresoft`.`p_chats_zalo__*`' as STRING) as _dbt_source_relation,\n\n                \n                    cast(`ticket_id` as NUMERIC) as `ticket_id` ,\n                    cast(`ticket_no` as NUMERIC) as `ticket_no` ,\n                    cast(`customer_id` as NUMERIC) as `customer_id` ,\n                    cast(`group_name` as STRING) as `group_name` ,\n                    cast(`conversation_id` as STRING) as `conversation_id` ,\n                    cast(`cus_email` as STRING) as `cus_email` ,\n                    cast(`cus_name` as STRING) as `cus_name` ,\n                    cast(`cus_phone` as STRING) as `cus_phone` ,\n                    cast(`start_time` as DATETIME) as `start_time` ,\n                    cast(`end_time` as DATETIME) as `end_time` ,\n                    cast(`chat_duration` as NUMERIC) as `chat_duration` ,\n                    cast(`agent_email` as STRING) as `agent_email` ,\n                    cast(`agent_name` as STRING) as `agent_name` ,\n                    cast(`ring_time` as DATETIME) as `ring_time` ,\n                    cast(`meet_time` as DATETIME) as `meet_time` ,\n                    cast(`waitTime` as STRING) as `waitTime` ,\n                    cast(`answer_time` as STRING) as `answer_time` ,\n                    cast(`chat_status` as STRING) as `chat_status` ,\n                    cast(`landing_page` as STRING) as `landing_page` ,\n                    cast(`referrer` as STRING) as `referrer` ,\n                    cast(`is_trigger` as STRING) as `is_trigger` ,\n                    cast(`facebook_page_id` as STRING) as `facebook_page_id` ,\n                    cast(`service_id` as NUMERIC) as `service_id` ,\n                    cast(`conversation_type` as STRING) as `conversation_type` ,\n                    cast(`_batched_at` as TIMESTAMP) as `_batched_at` \n\n            from `agile-scheme-394814`.`Caresoft`.`p_chats_zalo__*`\n\n            \n        )\n\n        \n), \n\n    deduplicate_cte AS (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY conversation_id\n                ORDER BY\n                    _batched_at DESC\n            ) AS rn_\n        FROM\n            union_\n    )\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    deduplicate_cte\nWHERE\n    rn_ = 1\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_caresoft__groups": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__groups", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__groups.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__groups.sql", "unique_id": "model.sado_analytics_services.base_caresoft__groups", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__groups"], "alias": "base_caresoft__groups", "checksum": {"name": "sha256", "checksum": "7977ddfe8d7f0670ff4403887776b9f205bb0f88af2970229c1a0fbbfab33443"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.2647643, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__groups`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY group_id\n                ORDER BY\n                    _batched_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'groups'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "groups"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.caresoft.groups"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/base/base_caresoft__groups.sql", "compiled": true, "compiled_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY group_id\n                ORDER BY\n                    _batched_at DESC\n            ) rn_\n        FROM\n            `agile-scheme-394814`.`Caresoft`.`p_groups_*`\n    )\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_caresoft__calls": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__calls", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__calls.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__calls.sql", "unique_id": "model.sado_analytics_services.base_caresoft__calls", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__calls"], "alias": "base_caresoft__calls", "checksum": {"name": "sha256", "checksum": "04f7d15474f1aa6429d9427756742cca865b43809db1b8c9060efc2cc753e3a7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.2728841, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__calls`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY call_id\n                ORDER BY\n                    _batched_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'calls'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "calls"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.caresoft.calls"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/base/base_caresoft__calls.sql", "compiled": true, "compiled_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY call_id\n                ORDER BY\n                    _batched_at DESC\n            ) rn_\n        FROM\n            `agile-scheme-394814`.`Caresoft`.`p_calls_*`\n    )\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_caresoft__ticket_details": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__ticket_details", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__ticket_details.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__ticket_details.sql", "unique_id": "model.sado_analytics_services.base_caresoft__ticket_details", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__ticket_details"], "alias": "base_caresoft__ticket_details", "checksum": {"name": "sha256", "checksum": "7f0488129056f9fd291c6539846375bf835e212d749c867d740e061990d34161"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.2813597, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__ticket_details`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY ticket_id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'ticket_details'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "ticket_details"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.caresoft.ticket_details"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/base/base_caresoft__ticket_details.sql", "compiled": true, "compiled_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY ticket_id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            `agile-scheme-394814`.`Caresoft`.`p_ticketDetails_*`\n    )\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_caresoft__contact_details": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__contact_details", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__contact_details.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__contact_details.sql", "unique_id": "model.sado_analytics_services.base_caresoft__contact_details", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__contact_details"], "alias": "base_caresoft__contact_details", "checksum": {"name": "sha256", "checksum": "f22070fb64fcb22e67cd19b79e2bd66056aaef90b2db098a4385795a3c812287"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.2889502, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__contact_details`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'contact_details'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "contact_details"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.caresoft.contact_details"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/base/base_caresoft__contact_details.sql", "compiled": true, "compiled_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            `agile-scheme-394814`.`Caresoft`.`p_contactDetails_*`\n    )\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_caresoft__tickets": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__tickets", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__tickets.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__tickets.sql", "unique_id": "model.sado_analytics_services.base_caresoft__tickets", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__tickets"], "alias": "base_caresoft__tickets", "checksum": {"name": "sha256", "checksum": "0fd1fc8412990c985f4c4b0401349b107445adfe86a30540c56a199da688fd45"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.296536, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__tickets`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY ticket_id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'tickets'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "tickets"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.caresoft.tickets"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/base/base_caresoft__tickets.sql", "compiled": true, "compiled_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY ticket_id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            `agile-scheme-394814`.`Caresoft`.`p_tickets_*`\n    )\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_caresoft__contacts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__contacts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__contacts.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__contacts.sql", "unique_id": "model.sado_analytics_services.base_caresoft__contacts", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__contacts"], "alias": "base_caresoft__contacts", "checksum": {"name": "sha256", "checksum": "018f8791056120d5f515256182b5b82c773470c541213cd4a5d4bfdcc829549a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.3039749, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__contacts`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'contacts'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "contacts"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.caresoft.contacts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/base/base_caresoft__contacts.sql", "compiled": true, "compiled_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            `agile-scheme-394814`.`Caresoft`.`p_contacts_*`\n    )\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_caresoft__ticket_custom_fields": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__ticket_custom_fields", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__ticket_custom_fields.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__ticket_custom_fields.sql", "unique_id": "model.sado_analytics_services.base_caresoft__ticket_custom_fields", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__ticket_custom_fields"], "alias": "base_caresoft__ticket_custom_fields", "checksum": {"name": "sha256", "checksum": "ea587342e687226364565194467b9e419b60e1afe8c1039258a3abf574b23d0a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.3114789, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__ticket_custom_fields`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY custom_field_id\n                ORDER BY\n                    _batched_at DESC\n                \n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'ticket_custom_fields'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "ticket_custom_fields"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.caresoft.ticket_custom_fields"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/base/base_caresoft__ticket_custom_fields.sql", "compiled": true, "compiled_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY custom_field_id\n                ORDER BY\n                    _batched_at DESC\n                \n            ) rn_\n        FROM\n            `agile-scheme-394814`.`Caresoft`.`p_ticketCustomFields_*`\n    )\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_caresoft__agents": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__agents", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__agents.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__agents.sql", "unique_id": "model.sado_analytics_services.base_caresoft__agents", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__agents"], "alias": "base_caresoft__agents", "checksum": {"name": "sha256", "checksum": "79180b5e1e4be00fae0a1cb08c1d9fb7a079bd06c2b37b8fe21feb082e46ed8d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.3202436, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__agents`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'agents'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "agents"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.caresoft.agents"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/base/base_caresoft__agents.sql", "compiled": true, "compiled_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            `agile-scheme-394814`.`Caresoft`.`p_agents_*`\n    )\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__regioninsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__regioninsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__regioninsights.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__regioninsights.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__regioninsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__regioninsights"], "alias": "stg_facebookads__regioninsights", "checksum": {"name": "sha256", "checksum": "891db398c9b08f0eaf05beb3540c68c1bab54140b4d473d3395b7bd2c0fc027e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adset_id": {"name": "adset_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region": {"name": "region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__regioninsights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.1060457, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__regioninsights`", "raw_code": "WITH source AS (\n    SELECT\n        account_id ,\n        campaign_id,\n        adset_id ,\n        ad_id ,\n        date_start ,\n        region,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n    FROM\n        {{ ref('base_facebookAds__regionInsights') }}\n)\nSELECT\n    *\nFROM\n    source", "language": "sql", "refs": [{"name": "base_facebookAds__regionInsights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_facebookAds__regionInsights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__regioninsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        account_id ,\n        campaign_id,\n        adset_id ,\n        ad_id ,\n        date_start ,\n        region,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__regionInsights`\n)\nSELECT\n    *\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__creatives": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__creatives", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__creatives.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__creatives.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__creatives", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__creatives"], "alias": "stg_facebookads__creatives", "checksum": {"name": "sha256", "checksum": "73a2aa1c8aba205a74cce0b4d348cf42bc5dcb15f3304019b1126afec68a4808"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"name": {"name": "name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "title": {"name": "title", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "body": {"name": "body", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_to_action_type": {"name": "call_to_action_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "thumbnailurl": {"name": "thumbnailurl", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__creatives.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.0946424, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__creatives`", "raw_code": "SELECT\n    COALESCE(\n        thumbnail_url,\n        image_url\n    ) as thumbnailUrl,\n    name,\n    regexp_extract (\n        body,\n        r\"^(.*)\\n\"\n    ) title,\n    body,\n    call_to_action_type,\nFROM\n    {{ ref('base_facebookAds__creatives') }}", "language": "sql", "refs": [{"name": "base_facebookAds__creatives", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_facebookAds__creatives"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__creatives.sql", "compiled": true, "compiled_code": "SELECT\n    COALESCE(\n        thumbnail_url,\n        image_url\n    ) as thumbnailUrl,\n    name,\n    regexp_extract (\n        body,\n        r\"^(.*)\\n\"\n    ) title,\n    body,\n    call_to_action_type,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__creatives`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__accountinsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__accountinsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__accountinsights.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__accountinsights.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__accountinsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__accountinsights"], "alias": "stg_facebookads__accountinsights", "checksum": {"name": "sha256", "checksum": "a25ff946f51c4b350e2582b80bc0e8baf964853250bd2485fba542cd3548747e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__accountinsights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.1113577, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__accountinsights`", "raw_code": "WITH source AS (\n    SELECT\n        account_id ,\n        date_start,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n    FROM\n        {{ ref('base_facebookAds__accountInsights') }}\n)\nSELECT\n    *\nFROM\n    source", "language": "sql", "refs": [{"name": "base_facebookAds__accountInsights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_facebookAds__accountInsights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__accountinsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        account_id ,\n        date_start,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__accountInsights`\n)\nSELECT\n    *\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__audienceinsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__audienceinsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__audienceinsights.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__audienceinsights.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__audienceinsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__audienceinsights"], "alias": "stg_facebookads__audienceinsights", "checksum": {"name": "sha256", "checksum": "ad0c6ab0030161de14c099f93baae546b6a6b19eb54791eddce80009445fc668"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adset_id": {"name": "adset_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "age": {"name": "age", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__audienceinsights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.1032712, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__audienceinsights`", "raw_code": "WITH source AS (\n    SELECT\n        account_id ,\n        campaign_id ,\n        adset_id ,\n        ad_id ,\n        date_start ,\n        age,\n        gender,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n    FROM\n        {{ ref('base_facebookAds__audienceInsights') }}\n)\nSELECT\n    *\nFROM\n    source", "language": "sql", "refs": [{"name": "base_facebookAds__audienceInsights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_facebookAds__audienceInsights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__audienceinsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        account_id ,\n        campaign_id ,\n        adset_id ,\n        ad_id ,\n        date_start ,\n        age,\n        gender,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__audienceInsights`\n)\nSELECT\n    *\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__adsinsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__adsinsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__adsinsights.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__adsinsights.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__adsinsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__adsinsights"], "alias": "stg_facebookads__adsinsights", "checksum": {"name": "sha256", "checksum": "efb213da47ea9da45e10036fc01d4cfe0db77cc7b2fa453511ad388f48bd03cb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adset_id": {"name": "adset_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase": {"name": "meta_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase_value": {"name": "meta_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__adsinsights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.109277, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__adsinsights`", "raw_code": "WITH source AS (\n    SELECT\n        account_id ,\n        campaign_id ,\n        adset_id ,\n        ad_id ,\n        date_start ,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value\n    FROM\n        {{ ref('base_facebookAds__adsInsights') }}\n)\nSELECT\n    *\nFROM\n    source", "language": "sql", "refs": [{"name": "base_facebookAds__adsInsights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_facebookAds__adsInsights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__adsinsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        account_id ,\n        campaign_id ,\n        adset_id ,\n        ad_id ,\n        date_start ,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__adsInsights`\n)\nSELECT\n    *\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__campaigns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__campaigns.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__campaigns.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__campaigns", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__campaigns"], "alias": "stg_facebookads__campaigns", "checksum": {"name": "sha256", "checksum": "5de702751fe2fdc2bd66f1fd41708600d5c26c9033820dbccf1430654bffaf51"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["fb", "dimension", "table"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fb", "dimension", "table"], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_name": {"name": "account_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_start_date": {"name": "campaign_start_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_stop_date": {"name": "campaign_stop_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "big_campaign": {"name": "big_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_group": {"name": "content_group", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pic": {"name": "pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promoted_productline": {"name": "promoted_productline", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page": {"name": "page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "media_type": {"name": "media_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "funnel": {"name": "funnel", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_type": {"name": "ad_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__campaigns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["fb", "dimension", "table"]}, "created_at": 1703652761.1248486, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fb','dimension','table']\n) }}\n\nWITH source AS (\n\n    SELECT\n        DISTINCT account_id,\n        FIRST_VALUE (account_name) over (\n            PARTITION BY account_id\n            ORDER BY\n                _batched_at DESC\n        ) AS account_name,\n        FIRST_VALUE (campaign_name) over (\n            PARTITION BY campaign_id\n            ORDER BY\n                _batched_at DESC\n        ) AS campaign_name,\n        MIN(date_start) over (\n            PARTITION BY campaign_id\n        ) AS campaign_start_date,\n        MAX(date_start) over (\n            PARTITION BY campaign_id\n        ) AS campaign_stop_date,\n        campaign_id\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_AdsInsights__*'\n        ) }}\n)\nSELECT\n    *,\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){4}(.*?)_(?:.*?)$\"\n    ) AS big_campaign,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){4}(.*?_.*?)_(?:.*?)$\"\n    ) AS content_group,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){1}(.*?)_(?:.*?)$\"\n    ) AS pic,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){6}(.*?)_(?:.*?)$\"\n    ) AS promoted_productline,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(.*?)_\"\n    ) AS page,\n\n    regexp_extract (\n        campaign_name,\n        r\"(?:.*?_){7}(.*?)_(?:.*?)\"\n    ) AS media_type,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){2}(.*?)_(?:.*?)$\"\n    ) AS funnel,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){3}(.*?)_(?:.*?)$\"\n    ) AS ad_type,\n\nFROM\n    source", "language": "sql", "refs": [], "sources": [["facebookAds", "p_AdsInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.facebookAds.p_AdsInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__campaigns.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        DISTINCT account_id,\n        FIRST_VALUE (account_name) over (\n            PARTITION BY account_id\n            ORDER BY\n                _batched_at DESC\n        ) AS account_name,\n        FIRST_VALUE (campaign_name) over (\n            PARTITION BY campaign_id\n            ORDER BY\n                _batched_at DESC\n        ) AS campaign_name,\n        MIN(date_start) over (\n            PARTITION BY campaign_id\n        ) AS campaign_start_date,\n        MAX(date_start) over (\n            PARTITION BY campaign_id\n        ) AS campaign_stop_date,\n        campaign_id\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_AdsInsights__*`\n)\nSELECT\n    *,\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){4}(.*?)_(?:.*?)$\"\n    ) AS big_campaign,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){4}(.*?_.*?)_(?:.*?)$\"\n    ) AS content_group,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){1}(.*?)_(?:.*?)$\"\n    ) AS pic,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){6}(.*?)_(?:.*?)$\"\n    ) AS promoted_productline,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(.*?)_\"\n    ) AS page,\n\n    regexp_extract (\n        campaign_name,\n        r\"(?:.*?_){7}(.*?)_(?:.*?)\"\n    ) AS media_type,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){2}(.*?)_(?:.*?)$\"\n    ) AS funnel,\n\n    regexp_extract (\n        campaign_name,\n        r\"^(?:.*?_){3}(.*?)_(?:.*?)$\"\n    ) AS ad_type,\n\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_facebookAds__adsInsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__adsInsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__adsInsights.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__adsInsights.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__adsInsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__adsInsights"], "alias": "base_facebookAds__adsInsights", "checksum": {"name": "sha256", "checksum": "70d4ce08fdd8a00a0177c47efca2a9c9ebc1f593fb77a9fa03e6356153d59bb5"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adset_id": {"name": "adset_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actions": {"name": "actions", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "action_values": {"name": "action_values", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost_per_action_type": {"name": "cost_per_action_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost_per_unique_action_type": {"name": "cost_per_unique_action_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/base/base_facebookAds__adsInsights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.1468132, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__adsInsights`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_AdsInsights__*'\n        ) }}\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["facebookAds", "p_AdsInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.facebookAds.p_AdsInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/base/base_facebookAds__adsInsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_AdsInsights__*`\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_facebookAds__audienceInsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__audienceInsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__audienceInsights.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__audienceInsights.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__audienceInsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__audienceInsights"], "alias": "base_facebookAds__audienceInsights", "checksum": {"name": "sha256", "checksum": "83e957f2bea3aab349c1d33768f9f205a8b92a8c973617164f65a10d681d796e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.3838623, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__audienceInsights`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start,\n            age,\n            gender\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_AudienceInsights__*'\n        ) }}\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    age,\n    gender,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["facebookAds", "p_AudienceInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.facebookAds.p_AudienceInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/base/base_facebookAds__audienceInsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start,\n            age,\n            gender\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_AudienceInsights__*`\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    age,\n    gender,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_facebookAds__accountInsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__accountInsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__accountInsights.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__accountInsights.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__accountInsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__accountInsights"], "alias": "base_facebookAds__accountInsights", "checksum": {"name": "sha256", "checksum": "2fe94a82368125bddb98a3a25f56824e21161feb3ad8141d77b110a4f864ed5a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.3915386, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__accountInsights`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            date_start\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_AccountInsights__*'\n        ) }}\n)\nSELECT\n    account_id,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["facebookAds", "p_AccountInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.facebookAds.p_AccountInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/base/base_facebookAds__accountInsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            date_start\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_AccountInsights__*`\n)\nSELECT\n    account_id,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_facebookAds__creatives": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__creatives", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__creatives.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__creatives.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__creatives", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__creatives"], "alias": "base_facebookAds__creatives", "checksum": {"name": "sha256", "checksum": "8ad2d5c08b1aba5e80ab228b8fb5a222fb634251c5b2f7ae0de4cabd997d957c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.3989248, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__creatives`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            ad_id,\n            id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_CreativesInsights__*'\n        ) }}\n)\nSELECT\n    account_id,\n    ad_id,\n    body,\n    image_url,\n    thumbnail_url,\n    call_to_action_type,\n    title,\n    name,\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["facebookAds", "p_CreativesInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.facebookAds.p_CreativesInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/base/base_facebookAds__creatives.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            ad_id,\n            id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_CreativesInsights__*`\n)\nSELECT\n    account_id,\n    ad_id,\n    body,\n    image_url,\n    thumbnail_url,\n    call_to_action_type,\n    title,\n    name,\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_facebookAds__regionInsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__regionInsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__regionInsights.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__regionInsights.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__regionInsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__regionInsights"], "alias": "base_facebookAds__regionInsights", "checksum": {"name": "sha256", "checksum": "40021d8b4c1fed3286f3a86872095dc2f772d4a2eafa50321b745a2b51e4aa95"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.4064872, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__regionInsights`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start,\n            region\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_RegionInsights__*'\n        ) }}\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    region,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["facebookAds", "p_RegionInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.facebookAds.p_RegionInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/base/base_facebookAds__regionInsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start,\n            region\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_RegionInsights__*`\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    region,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__campaign_conversion_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__campaign_conversion_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__campaign_conversion_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaign_conversion_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__campaign_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__campaign_conversion_stats"], "alias": "stg_googleads__campaign_conversion_stats", "checksum": {"name": "sha256", "checksum": "5c5942fd9e18dd522fc2896525310b403cd62e0e3e6f99d13f1b1e2edf514dc1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_conversion_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_conversion_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversion_name": {"name": "conversion_name", "description": "Conversion name.\nT\u00ean s\u1ef1 ki\u1ec7n chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversion_attribution_type": {"name": "conversion_attribution_type", "description": "Conversion attribution event type.\nLo\u1ea1i s\u1ef1 ki\u1ec7n chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.\nV\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"ads_purchase": {"type": "sum", "label": "#Web Purchases", "group_label": "GG Ads metrics", "filters": [{"conversion_name": "website\\_purchase"}]}, "ads_atc": {"type": "sum", "label": "#Add to cart", "group_label": "GG Ads metrics", "filters": [{"conversion_name": "add\\_to\\_cart"}]}, "ads_contacts": {"type": "sum", "label": "#Contacts intent", "group_label": "GG Ads metrics", "sql": "IF(${conversion_name} in ('website_message','website_call'), ${conversions}, NULL)"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.\nGi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"ads_purchase_value": {"type": "sum", "label": "Web Purchases Value", "group_label": "GG Ads metrics", "filters": [{"conversion_name": "website\\_purchase"}]}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_conversion_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_conversion_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__campaign_conversion_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_conversion_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_conversion_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1703652761.285336, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_conversion_stats`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','fact','view']\n)}}\n\nSELECT\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_conversion_action_name AS conversion_name,\n    stats.segments_conversion_attribution_event_type AS conversion_attribution_type,\n    stats.segments_slot AS slot,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\nFROM\n    {{ source(\n        'googleads',\n        'campaign_conversion_stats'\n    ) }}\n    stats", "language": "sql", "refs": [], "sources": [["googleads", "campaign_conversion_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.campaign_conversion_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaign_conversion_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_conversion_action_name AS conversion_name,\n    stats.segments_conversion_attribution_event_type AS conversion_attribution_type,\n    stats.segments_slot AS slot,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_CampaignConversionStats_1322374205`\n    stats", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__ad_group_cross_device_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__ad_group_cross_device_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__ad_group_cross_device_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__ad_group_cross_device_stats"], "alias": "stg_googleads__ad_group_cross_device_stats", "checksum": {"name": "sha256", "checksum": "85853528f4f3275e79d7af152e81e9393745e64093fa0b6ae98967e34a9b4fc6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.\nM\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.\nPh\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "top_impression_percentage": {"name": "top_impression_percentage", "description": "The percent of your ad impressions that are shown anywhere above the organic search results.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_top_impression_share": {"name": "search_top_impression_share", "description": "The impressions you've received in the top location (anywhere above the organic search results) compared to the estimated number of impressions you were eligible to receive in the top location.\nT\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb t\u1ea1i khu v\u1ef1c \u0111\u1ea7u (tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm) tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec7n th\u1ecb khu v\u1ef1c \u0111\u1ea7u.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p100_rate": {"name": "video_quartile_p100_rate", "description": "Percentage of impressions where the viewer watched all of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem to\u00e0n b\u1ed9 video qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p75_rate": {"name": "video_quartile_p75_rate", "description": "Percentage of impressions where the viewer watched 75% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 75% video qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p50_rate": {"name": "video_quartile_p50_rate", "description": "Percentage of impressions where the viewer watched 50% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 50% video qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p25_rate": {"name": "video_quartile_p25_rate", "description": "Percentage of impressions where the viewer watched 25% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 25% video qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "absolute_top_impression_percentage": {"name": "absolute_top_impression_percentage", "description": "The percent of your ad impressions that are shown as the very first ad above the organic search results.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb th\u1ee9 t\u1ef1 \u0111\u1ea7u ti\u00ean trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_impression_share": {"name": "content_impression_share", "description": "The impressions you've received on the Display Network divided by the estimated number of impressions you were eligible to receive.\nT\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o qua Display Network tr\u00ean s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_rank_lost_impression_share": {"name": "content_rank_lost_impression_share", "description": "The estimated percentage of impressions on the Display Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb tr\u00ean Display Network b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cross_device_conversions": {"name": "cross_device_conversions", "description": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.\nChuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagements": {"name": "engagements", "description": "The number of engagements. An engagement occurs when a viewer expands your Lightbox ad.\nS\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. V\u1edbi qu\u1ea3ng c\u00e1o display s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng m\u1edf r\u1ed9ng qu\u1ea3ng c\u00e1o (Lightbox)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relative_ctr": {"name": "relative_ctr", "description": "Your clickthrough rate (Ctr) divided by the average clickthrough rate of all advertisers on the websites that show your ads.\nT\u1ec9 l\u1ec7 nh\u1ea5p t\u01b0\u01a1ng \u0111\u1ed1i, t\u00ednh d\u1ef1a tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p trung b\u00ecnh c\u1ee7a c\u00e1c nh\u00e0 qu\u1ea3ng c\u00e1o kh\u00e1c tr\u00ean trang m\u00e0 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_absolute_top_impression_share": {"name": "search_absolute_top_impression_share", "description": "The percentage of the customer's Shopping or Search ad impressions that are shown in the most prominent Shopping position.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o t\u00ecm ki\u1ebfm ho\u1eb7c mua s\u1eafm \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb v\u1ecb tr\u00ed t\u1ed1t nh\u1ea5t.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_budget_lost_absolute_top_impression_share": {"name": "search_budget_lost_absolute_top_impression_share", "description": "The number estimating how often your ad wasn't the very first ad above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb t\u1ea1i v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ng\u00e2n s\u00e1ch th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_budget_lost_top_impression_share": {"name": "search_budget_lost_top_impression_share", "description": "The number estimating how often your ad didn't show anywhere above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb do ng\u00e2n s\u00e1ch th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_impression_share": {"name": "search_impression_share", "description": "The impressions you've received on the Search Network divided by the estimated number of impressions you were eligible to receive.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_absolute_top_impression_share": {"name": "search_rank_lost_absolute_top_impression_share", "description": "The number estimating how often your ad wasn't the very first ad above the organic search results due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_impression_share": {"name": "search_rank_lost_impression_share", "description": "The estimated percentage of impressions on the Search Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t tr\u00ean k\u00eanh t\u00ecm ki\u1ebfm do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_top_impression_share": {"name": "search_rank_lost_top_impression_share", "description": "The number estimating how often your ad didn't show anywhere above the organic search results due to poor Ad Rank\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_views": {"name": "video_views", "description": "The number of times your video ads were viewed.\nS\u1ed1 l\u01b0\u1ee3t qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c xem.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__ad_group_cross_device_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["ggads", "fact", "view"]}, "created_at": 1703652761.307121, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_cross_device_stats`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['ggads','fact','view']\n) }}\n\nSELECT\n    stats.ad_group_id,\n    stats.segments_date AS date,\n    stats.campaign_id,\n    stats.segments_ad_network_type AS network_type,\n    stats.metrics_top_impression_percentage AS top_impression_percentage,\n    stats.metrics_search_top_impression_share AS search_top_impression_share,\n    stats.metrics_video_quartile_p100_rate AS video_quartile_p100_rate,\n    stats.metrics_video_quartile_p75_rate AS video_quartile_p75_rate,\n    stats.metrics_video_quartile_p50_rate AS video_quartile_p50_rate,\n    stats.metrics_video_quartile_p25_rate AS video_quartile_p25_rate,\n    stats.metrics_absolute_top_impression_percentage AS absolute_top_impression_percentage,\n    stats.metrics_content_impression_share AS content_impression_share,\n    stats.metrics_content_rank_lost_impression_share AS content_rank_lost_impression_share,\n    stats.metrics_cross_device_conversions AS cross_device_conversions,\n    stats.metrics_engagements AS engagements,\n    stats.metrics_relative_ctr AS relative_ctr,\n    stats.metrics_search_absolute_top_impression_share AS search_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_absolute_top_impression_share AS search_budget_lost_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_top_impression_share AS search_budget_lost_top_impression_share,\n    stats.metrics_search_impression_share AS search_impression_share,\n    stats.metrics_search_rank_lost_absolute_top_impression_share AS search_rank_lost_absolute_top_impression_share,\n    stats.metrics_search_rank_lost_impression_share AS search_rank_lost_impression_share,\n    stats.metrics_search_rank_lost_top_impression_share AS search_rank_lost_top_impression_share,\n    stats.metrics_video_views AS video_views,\nFROM\n    {{ source(\n        'googleads',\n        'ad_group_cross_device_stats'\n    ) }}\n    stats", "language": "sql", "refs": [], "sources": [["googleads", "ad_group_cross_device_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.ad_group_cross_device_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__ad_group_cross_device_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    stats.ad_group_id,\n    stats.segments_date AS date,\n    stats.campaign_id,\n    stats.segments_ad_network_type AS network_type,\n    stats.metrics_top_impression_percentage AS top_impression_percentage,\n    stats.metrics_search_top_impression_share AS search_top_impression_share,\n    stats.metrics_video_quartile_p100_rate AS video_quartile_p100_rate,\n    stats.metrics_video_quartile_p75_rate AS video_quartile_p75_rate,\n    stats.metrics_video_quartile_p50_rate AS video_quartile_p50_rate,\n    stats.metrics_video_quartile_p25_rate AS video_quartile_p25_rate,\n    stats.metrics_absolute_top_impression_percentage AS absolute_top_impression_percentage,\n    stats.metrics_content_impression_share AS content_impression_share,\n    stats.metrics_content_rank_lost_impression_share AS content_rank_lost_impression_share,\n    stats.metrics_cross_device_conversions AS cross_device_conversions,\n    stats.metrics_engagements AS engagements,\n    stats.metrics_relative_ctr AS relative_ctr,\n    stats.metrics_search_absolute_top_impression_share AS search_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_absolute_top_impression_share AS search_budget_lost_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_top_impression_share AS search_budget_lost_top_impression_share,\n    stats.metrics_search_impression_share AS search_impression_share,\n    stats.metrics_search_rank_lost_absolute_top_impression_share AS search_rank_lost_absolute_top_impression_share,\n    stats.metrics_search_rank_lost_impression_share AS search_rank_lost_impression_share,\n    stats.metrics_search_rank_lost_top_impression_share AS search_rank_lost_top_impression_share,\n    stats.metrics_video_views AS video_views,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCrossDeviceStats_1322374205`\n    stats", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__keyword_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__keyword_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__keyword_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__keyword_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__keyword_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__keyword_stats"], "alias": "stg_googleads__keyword_stats", "checksum": {"name": "sha256", "checksum": "3467175718da0ad1baa7fcc7c2187863d4ec5db6c5ab8e656ec385e6be661b9c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__keyword_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__keyword_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"date": {"name": "date", "description": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.\nM\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device": {"name": "device", "description": "Device to which metrics apply.\nThi\u1ebft b\u1ecb", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.\nV\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.\nPh\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "match_type": {"name": "match_type", "description": "The match type of the keyword.\nPh\u01b0\u01a1ng ph\u00e1p so kh\u1edbp t\u1eeb kho\u00e1", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "keyword": {"name": "keyword", "description": "T\u1eeb kho\u00e1 t\u00ecm ki\u1ebfm.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.\nS\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "GG Ads Metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions": {"type": "sum", "label": "Conversions", "group_label": "GG Ads Metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.\nGi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions_value": {"type": "sum", "label": "Conversions Value", "group_label": "GG Ads Metrics", "compact": "millions"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.\nChi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads Metrics", "compact": "millions"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.\nS\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "GG Ads Metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.\nS\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"m_interactions": {"type": "sum", "label": "Interactions", "group_label": "GG Ads Metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"metrics": {"m_view_through_conversions": {"type": "sum", "label": "View Through Conversions", "group_label": "GG Ads Metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__keyword_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__keyword_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__keyword_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__keyword_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__keyword_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1703652761.2966466, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__keyword_stats`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','fact','view']\n)}}\nSELECT\n    stats.segments_date AS date,\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_device AS device,\n    stats.segments_slot AS slot,\n    stats.segments_ad_network_type AS network_type,\n    keyword.ad_group_criterion_keyword_match_type AS match_type,\n    keyword.ad_group_criterion_keyword_text as keyword,\n    SUM(\n        stats.metrics_clicks\n    ) AS clicks,\n    SUM(\n        stats.metrics_conversions\n    ) AS conversions,\n    SUM(\n        stats.metrics_conversions_value\n    ) AS conversions_value,\n    SUM(\n        stats.metrics_cost_micros / 1e6\n    ) AS cost,\n    SUM(\n        stats.metrics_impressions\n    ) AS impressions,\n    SUM(\n        stats.metrics_interactions\n    ) AS interactions,\n    SUM(\n        stats.metrics_view_through_conversions\n    ) AS view_through_conversions,\nFROM\n    {{ source(\n        'googleads',\n        'keyword_basic_stats'\n    ) }}\n    stats\n    LEFT JOIN {{ source(\n        'googleads',\n        'keyword'\n    ) }}\n    keyword\n    ON stats.ad_group_criterion_criterion_id = keyword.ad_group_criterion_criterion_id\n    AND stats.ad_group_id = keyword.ad_group_id\nWHERE 1=1\n    and keyword._LATEST_DATE = keyword._DATA_DATE\n    {{dbt_utils.group_by(8)}}", "language": "sql", "refs": [], "sources": [["googleads", "keyword_basic_stats"], ["googleads", "keyword"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.googleads.keyword_basic_stats", "source.sado_analytics_services.googleads.keyword"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__keyword_stats.sql", "compiled": true, "compiled_code": "\nSELECT\n    stats.segments_date AS date,\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_device AS device,\n    stats.segments_slot AS slot,\n    stats.segments_ad_network_type AS network_type,\n    keyword.ad_group_criterion_keyword_match_type AS match_type,\n    keyword.ad_group_criterion_keyword_text as keyword,\n    SUM(\n        stats.metrics_clicks\n    ) AS clicks,\n    SUM(\n        stats.metrics_conversions\n    ) AS conversions,\n    SUM(\n        stats.metrics_conversions_value\n    ) AS conversions_value,\n    SUM(\n        stats.metrics_cost_micros / 1e6\n    ) AS cost,\n    SUM(\n        stats.metrics_impressions\n    ) AS impressions,\n    SUM(\n        stats.metrics_interactions\n    ) AS interactions,\n    SUM(\n        stats.metrics_view_through_conversions\n    ) AS view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_KeywordBasicStats_1322374205`\n    stats\n    LEFT JOIN `agile-scheme-394814`.`GoogleAds`.`ads_Keyword_1322374205`\n    keyword\n    ON stats.ad_group_criterion_criterion_id = keyword.ad_group_criterion_criterion_id\n    AND stats.ad_group_id = keyword.ad_group_id\nWHERE 1=1\n    and keyword._LATEST_DATE = keyword._DATA_DATE\n    group by 1,2,3,4,5,6,7,8", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__search_query_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__search_query_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__search_query_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__search_query_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__search_query_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__search_query_stats"], "alias": "stg_googleads__search_query_stats", "checksum": {"name": "sha256", "checksum": "f005536991137de50f16bafa457cb3a07ef0b52289d1cd9c806f602e45db167e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__search_query_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__search_query_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"date": {"name": "date", "description": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.\nM\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_term": {"name": "search_term", "description": "The search term.\nC\u1ee5m t\u1eeb t\u00ecm ki\u1ebfm.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.\nPh\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "match_type": {"name": "match_type", "description": "The match type of the keyword.\nPh\u01b0\u01a1ng ph\u00e1p so kh\u1edbp t\u1eeb kho\u00e1", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_status": {"name": "view_status", "description": "Indicates whether the search term is currently one of your targeted or excluded keywords.\nC\u1ee5m t\u1eeb t\u00ecm ki\u1ebfm thu\u1ed9c nh\u00f3m t\u1eeb kho\u00e1 m\u1ee5c ti\u00eau hay lo\u1ea1i t\u1eeb", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "absolute_top_impression_percentage": {"name": "absolute_top_impression_percentage", "description": "The percent of your ad impressions that are shown as the very first ad above the organic search results.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb th\u1ee9 t\u1ef1 \u0111\u1ea7u ti\u00ean trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"metrics": {"m_absolute_top_impression_percentage": {"type": "average", "label": "Absolute Top Impression Percentage", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "all_conversions": {"name": "all_conversions", "description": "The total number of conversions.\nTo\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i (bao g\u1ed3m c\u1ea3 nh\u1eefng chuy\u1ec3n \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c gom trong nh\u00f3m qu\u1ea3ng c\u00e1o)", "meta": {"metrics": {"m_all_conversions": {"type": "sum", "label": "All Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "all_conversions_from_interactions_rate": {"name": "all_conversions_from_interactions_rate", "description": "All conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.\nTo\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c.", "meta": {"metrics": {"m_all_conversions_from_interactions_rate": {"type": "sum", "label": "All Conversions From Interactions Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "all_conversions_value": {"name": "all_conversions_value", "description": "The total value of all conversions.\nT\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_all_conversions_value": {"type": "sum", "label": "All Conversions Value", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.\nS\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions": {"type": "sum", "label": "Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_from_interactions_rate": {"name": "conversions_from_interactions_rate", "description": "Conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.\nL\u01b0\u1ee3ng chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c.", "meta": {"metrics": {"m_conversions_from_interactions_rate": {"type": "sum", "label": "Conversions From Interactions Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.\nGi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions_value": {"type": "sum", "label": "Conversions Value", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.\nChi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost_per_all_conversions": {"name": "cost_per_all_conversions", "description": "The cost of ad interactions divided by all conversions.\nChi ph\u00ed qu\u1ea3ng c\u00e1o chia cho to\u00e0n b\u1ed9 s\u1ed1 chuy\u1ec3n \u0111\u1ed5i (bao g\u1ed3m c\u1ea3 chuy\u1ec3n \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c gom trong nh\u00f3m)", "meta": {"metrics": {"m_cost_per_all_conversions": {"type": "average", "label": "Cost Per All Conversions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "The cost of ad interactions divided by conversions.\nChi ph\u00ed qu\u1ea3ng c\u00e1o chia cho s\u1ed1 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cost_per_conversion": {"type": "average", "label": "Cost Per Conversion", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cross_device_conversions": {"name": "cross_device_conversions", "description": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.\nChuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cross_device_conversions": {"type": "sum", "label": "Cross Device Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagements": {"name": "engagements", "description": "The number of engagements. An engagement occurs when a viewer expands your Lightbox ad.\nS\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. V\u1edbi qu\u1ea3ng c\u00e1o display s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng m\u1edf r\u1ed9ng qu\u1ea3ng c\u00e1o (Lightbox)", "meta": {"metrics": {"m_engagements": {"type": "sum", "label": "Engagements", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.\nS\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.\nS\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"m_interactions": {"type": "sum", "label": "Interactions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "top_impression_percentage": {"name": "top_impression_percentage", "description": "The percent of your ad impressions that are shown anywhere above the organic search results.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"metrics": {"m_top_impression_percentage": {"type": "average", "label": "Top Impression Percentage", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_per_all_conversions": {"name": "value_per_all_conversions", "description": "The value of all conversions divided by the number of all conversions.\nT\u1ed5ng gi\u00e1 tr\u1ecb to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i chia cho to\u00e0n b\u1ed9 s\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_value_per_all_conversions": {"type": "average", "label": "Value Per All Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_per_conversion": {"name": "value_per_conversion", "description": "The value of conversions divided by the number of conversions.\nGi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i tr\u00ean m\u1ed7i l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_value_per_conversion": {"type": "average", "label": "Value Per Conversion", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p100_rate": {"name": "video_quartile_p100_rate", "description": "Percentage of impressions where the viewer watched all of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem to\u00e0n b\u1ed9 video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p100_rate": {"type": "average", "label": "Video Quartile P100 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p25_rate": {"name": "video_quartile_p25_rate", "description": "Percentage of impressions where the viewer watched 25% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 25% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p25_rate": {"type": "average", "label": "Video Quartile P25 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p50_rate": {"name": "video_quartile_p50_rate", "description": "Percentage of impressions where the viewer watched 50% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 50% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p50_rate": {"type": "average", "label": "Video Quartile P50 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p75_rate": {"name": "video_quartile_p75_rate", "description": "Percentage of impressions where the viewer watched 75% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 75% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p75_rate": {"type": "average", "label": "Video Quartile P75 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_views": {"name": "video_views", "description": "The number of times your video ads were viewed.\nS\u1ed1 l\u01b0\u1ee3t qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c xem.", "meta": {"metrics": {"m_video_views": {"type": "sum", "label": "Video Views", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"metrics": {"m_view_through_conversions": {"type": "sum", "label": "View Through Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__search_query_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__search_query_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__search_query_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__search_query_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__search_query_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1703652761.2764616, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__search_query_stats`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['ggads','fact','view']\n) }}\n\nSELECT\n    segments_date AS DATE,\n    ad_group_id,\n    campaign_id,\n    search_term_view_search_term AS search_term,\n    segments_ad_network_type AS network_type,\n    segments_search_term_match_type AS match_type,\n    search_term_view_status AS view_status,\n    AVG(metrics_absolute_top_impression_percentage) absolute_top_impression_percentage,\n    SUM(metrics_all_conversions) all_conversions,\n    AVG(metrics_all_conversions_from_interactions_rate) all_conversions_from_interactions_rate,\n    SUM(metrics_all_conversions_value) all_conversions_value,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_all_conversions) cost_per_all_conversions,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_engagements) engagements,\n    SUM(metrics_impressions) impressions,\n    SUM(metrics_interactions) interactions,\n    AVG(metrics_top_impression_percentage) top_impression_percentage,\n    SUM(metrics_value_per_all_conversions) value_per_all_conversions,\n    SUM(metrics_value_per_conversion) value_per_conversion,\n    AVG(metrics_video_quartile_p100_rate) video_quartile_p100_rate,\n    AVG(metrics_video_quartile_p25_rate) video_quartile_p25_rate,\n    AVG(metrics_video_quartile_p50_rate) video_quartile_p50_rate,\n    AVG(metrics_video_quartile_p75_rate) video_quartile_p75_rate,\n    SUM(metrics_video_views) video_views,\n    SUM(metrics_view_through_conversions) view_through_conversions,\nFROM\n    {{ source(\n        'googleads',\n        'search_query_stats'\n    ) }}\nWHERE\n    1 = 1 {{ dbt_utils.group_by(7) }}", "language": "sql", "refs": [], "sources": [["googleads", "search_query_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.googleads.search_query_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__search_query_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    segments_date AS DATE,\n    ad_group_id,\n    campaign_id,\n    search_term_view_search_term AS search_term,\n    segments_ad_network_type AS network_type,\n    segments_search_term_match_type AS match_type,\n    search_term_view_status AS view_status,\n    AVG(metrics_absolute_top_impression_percentage) absolute_top_impression_percentage,\n    SUM(metrics_all_conversions) all_conversions,\n    AVG(metrics_all_conversions_from_interactions_rate) all_conversions_from_interactions_rate,\n    SUM(metrics_all_conversions_value) all_conversions_value,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_all_conversions) cost_per_all_conversions,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_engagements) engagements,\n    SUM(metrics_impressions) impressions,\n    SUM(metrics_interactions) interactions,\n    AVG(metrics_top_impression_percentage) top_impression_percentage,\n    SUM(metrics_value_per_all_conversions) value_per_all_conversions,\n    SUM(metrics_value_per_conversion) value_per_conversion,\n    AVG(metrics_video_quartile_p100_rate) video_quartile_p100_rate,\n    AVG(metrics_video_quartile_p25_rate) video_quartile_p25_rate,\n    AVG(metrics_video_quartile_p50_rate) video_quartile_p50_rate,\n    AVG(metrics_video_quartile_p75_rate) video_quartile_p75_rate,\n    SUM(metrics_video_views) video_views,\n    SUM(metrics_view_through_conversions) view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_SearchQueryStats_1322374205`\nWHERE\n    1 = 1 group by 1,2,3,4,5,6,7", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__ad_group_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__ad_group_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__ad_group_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__ad_group_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__ad_group_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__ad_group_stats"], "alias": "stg_googleads__ad_group_stats", "checksum": {"name": "sha256", "checksum": "6abbf4c96c56e6f2669e2101eff2c7cd376336a95ebbab989444ad698734052f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__ad_group_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.\nM\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device": {"name": "device", "description": "Device to which metrics apply.\nThi\u1ebft b\u1ecb", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.\nPh\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.\nV\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.\nS\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.\nGi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.\nChi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.\nS\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.\nS\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__ad_group_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__ad_group_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__ad_group_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1703652761.2902765, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_stats`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','fact','view']\n)}}\n\nSELECT\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros/1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    {{ source(\n        'googleads',\n        'ad_group_basic_stats'\n    ) }}\n    stats", "language": "sql", "refs": [], "sources": [["googleads", "ad_group_basic_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.ad_group_basic_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__ad_group_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros/1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_AdGroupBasicStats_1322374205`\n    stats", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__shopping_product_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__shopping_product_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__shopping_product_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__shopping_product_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__shopping_product_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__shopping_product_stats"], "alias": "stg_googleads__shopping_product_stats", "checksum": {"name": "sha256", "checksum": "d3d02c99fde51ea57c8d98bbb0bb987e66bc7bb4f91f89449e5f1ce225c33f90"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__shopping_product_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__shopping_product_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "stg_5sfashion__products", "sql_on": "${stg_googleads__shopping_product_stats.item_id} =  ${stg_5sfashion__products.product_code}", "fields": ["product_code", "product_name", "product_type"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"date": {"name": "date", "description": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.\nM\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_id": {"name": "item_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.\nS\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions": {"type": "sum", "label": "Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_from_interactions_rate": {"name": "conversions_from_interactions_rate", "description": "Conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.\nL\u01b0\u1ee3ng chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c.", "meta": {"metrics": {"m_conversions_from_interactions_rate": {"type": "sum", "label": "Conversions From Interactions Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.\nGi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions_value": {"type": "sum", "label": "Conversions Value", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.\nChi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "The cost of ad interactions divided by conversions.\nChi ph\u00ed qu\u1ea3ng c\u00e1o chia cho s\u1ed1 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cost_per_conversion": {"type": "average", "label": "Cost Per Conversion", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cross_device_conversions": {"name": "cross_device_conversions", "description": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.\nChuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cross_device_conversions": {"type": "sum", "label": "Cross Device Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.\nS\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__shopping_product_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__shopping_product_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "stg_5sfashion__products", "sql_on": "${stg_googleads__shopping_product_stats.item_id} =  ${stg_5sfashion__products.product_code}", "fields": ["product_code", "product_name", "product_type"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__shopping_product_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__shopping_product_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__shopping_product_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "stg_5sfashion__products", "sql_on": "${stg_googleads__shopping_product_stats.item_id} =  ${stg_5sfashion__products.product_code}", "fields": ["product_code", "product_name", "product_type"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1703652761.2541955, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__shopping_product_stats`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['ggads','fact','view']\n) }}\n\nSELECT\n    segments_date AS date,\n    ad_group_id,\n    campaign_id,\n    upper(segments_product_item_id) item_id,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_impressions) impressions,\nFROM\n    {{ source('googleads','shopping_product_stats')}}\n    {{ dbt_utils.group_by(4) }}", "language": "sql", "refs": [], "sources": [["googleads", "shopping_product_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.googleads.shopping_product_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__shopping_product_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    segments_date AS date,\n    ad_group_id,\n    campaign_id,\n    upper(segments_product_item_id) item_id,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_impressions) impressions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_ShoppingProductStats_1322374205`\n    group by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__campaign_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__campaign_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__campaign_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaign_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__campaign_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__campaign_stats"], "alias": "stg_googleads__campaign_stats", "checksum": {"name": "sha256", "checksum": "641c3a557166252966da9217db8931ddfa3c62d073324985c055ba87b45caf89"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"row_id": {"name": "row_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device": {"name": "device", "description": "Device to which metrics apply.\nThi\u1ebft b\u1ecb", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.\nPh\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.\nV\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.\nS\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"ads_clicks": {"type": "sum", "label": "#Clicks", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"ads_conversions": {"type": "sum", "label": "#Conversions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.\nGi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"ads_conversions_value": {"type": "sum", "label": "#Conversions value", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.\nChi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"ads_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.\nS\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"ads_impressions": {"type": "sum", "label": "#Impressions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.\nS\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"ads_interactions": {"type": "sum", "label": "#Interactions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"metrics": {"ads_view_through_conversions": {"type": "sum", "label": "#View though conversions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__campaign_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1703652761.3152435, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['ggads','fact','view']\n) }}\n\nSELECT\n    {{ dbt_utils.generate_surrogate_key(['campaign_id','segments_date','segments_device','segments_ad_network_type','segments_slot']) }} AS row_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros / 1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    {{ source(\n        'googleads',\n        'campaign_basic_stats'\n    ) }}\n    stats", "language": "sql", "refs": [], "sources": [["googleads", "campaign_basic_stats"]], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.campaign_basic_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaign_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    to_hex(md5(cast(coalesce(cast(campaign_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_date as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_device as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_ad_network_type as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_slot as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS row_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros / 1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_CampaignBasicStats_1322374205`\n    stats", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__campaigns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__campaigns.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaigns.sql", "unique_id": "model.sado_analytics_services.stg_googleads__campaigns", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__campaigns"], "alias": "stg_googleads__campaigns", "checksum": {"name": "sha256", "checksum": "dc099dfbfc37fe284ae01ec78d8049b58ad8e648f3abb2b06b2fac3189d703c2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "dimension", "view"], "description": "", "columns": {"account_name": {"name": "account_name", "description": "The descriptive name of the account.\nT\u00ean t\u00e0i kho\u1ea3n qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency_code": {"name": "currency_code", "description": "The currency in which the account operates. A subset of the currency codes from the ISO 4217 standard is supported.\nLo\u1ea1i ti\u1ec1n t\u1ec7 \u0111\u01b0\u1ee3c t\u00ednh \u0111\u1ec3 v\u1eadn h\u00e0nh t\u00e0i kho\u1ea3n qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "The name of the ad campaign.\nT\u00ean chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "advertising_channel": {"name": "advertising_channel", "description": "The primary serving target for ads within the campaign.\nK\u00eanh qu\u1ea3ng c\u00e1o: Search, Display, Video...", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bidding_stategy": {"name": "bidding_stategy", "description": "The type of bidding strategy.\nChi\u1ebfn l\u01b0\u1ee3c th\u1ea7u.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "budget": {"name": "budget", "description": "Ng\u00e2n s\u00e1ch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "budget_period": {"name": "budget_period", "description": "Chu k\u1ef3 qu\u1ea3ng c\u00e1o (Daily...)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__campaigns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["ggads", "dimension", "view"]}, "created_at": 1703652761.2994668, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaigns`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','dimension','view']\n)}}\n\nSELECT\n    A.account_name,\n    A.currency_code,\n    C.campaign_id,\n    C.campaign_name,\n    C.advertising_channel,\n    C.bidding_stategy,\n    C.budget,\n    C.budget_period,\nFROM\n    {{ ref('base_googleAds__accounts') }} A\n    LEFT JOIN {{ ref('base_googleAds__campaigns') }} C\n    ON A.account_id = C.account_id", "language": "sql", "refs": [{"name": "base_googleAds__accounts", "package": null, "version": null}, {"name": "base_googleAds__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_googleAds__accounts", "model.sado_analytics_services.base_googleAds__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaigns.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    A.account_name,\n    A.currency_code,\n    C.campaign_id,\n    C.campaign_name,\n    C.advertising_channel,\n    C.bidding_stategy,\n    C.budget,\n    C.budget_period,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_googleAds__accounts` A\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`base_googleAds__campaigns` C\n    ON A.account_id = C.account_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__ad_groups": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__ad_groups", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__ad_groups.sql", "original_file_path": "models/staging/googleAds/stg_googleads__ad_groups.sql", "unique_id": "model.sado_analytics_services.stg_googleads__ad_groups", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__ad_groups"], "alias": "stg_googleads__ad_groups", "checksum": {"name": "sha256", "checksum": "0e8b7a7c1c9cec3336fc08cbc4fb86d9c0a6d9e7579c9ef6174111bc9c657d67"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "dimension", "view"], "description": "", "columns": {"campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.\nM\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_type": {"name": "ad_group_type", "description": "The type of the ad group \nLo\u1ea1i nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_name": {"name": "ad_group_name", "description": "The descriptive name of the ad group.\nT\u00ean nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__ad_groups.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["ggads", "dimension", "view"]}, "created_at": 1703652761.2975194, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_groups`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','dimension','view']\n)}}\n\nSELECT\n    ag.account_id,\n    ag.campaign_id,\n    ag.ad_group_id,\n    ag.ad_group_type,\n    ag.ad_group_name\nFROM\n   {{ ref('base_googleAds__adgroups') }}\n    ag", "language": "sql", "refs": [{"name": "base_googleAds__adgroups", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_googleAds__adgroups"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__ad_groups.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    ag.account_id,\n    ag.campaign_id,\n    ag.ad_group_id,\n    ag.ad_group_type,\n    ag.ad_group_name\nFROM\n   `agile-scheme-394814`.`dbt_prod`.`base_googleAds__adgroups`\n    ag", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_googleAds__campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_googleAds__campaigns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/base/base_googleAds__campaigns.sql", "original_file_path": "models/staging/googleAds/base/base_googleAds__campaigns.sql", "unique_id": "model.sado_analytics_services.base_googleAds__campaigns", "fqn": ["sado_analytics_services", "staging", "googleAds", "base", "base_googleAds__campaigns"], "alias": "base_googleAds__campaigns", "checksum": {"name": "sha256", "checksum": "0bdbd8e3409bce26d02fa3e1d2dc53d6d60e9e125a24ada3c60b97a4a0cf95e7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.4993615, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__campaigns`", "raw_code": "SELECT\n    DISTINCT campaign_id,\n    customer_id AS account_id,\n    campaign_advertising_channel_type AS advertising_channel,\n    (\n        FIRST_VALUE(campaign_bidding_strategy_type) over w1\n    ) AS bidding_stategy,\n    (\n        FIRST_VALUE(campaign_budget_period) over w1\n    ) as budget_period,\n    (\n        FIRST_VALUE(campaign_budget_amount_micros) over w1 / 1e6\n    ) AS budget,\n    FIRST_VALUE(campaign_name) over w1 AS campaign_name\nFROM\n    {{ source(\n        'googleads',\n        'campaign'\n    ) }}\n    window w1 as (\n        PARTITION BY campaign_id\n        ORDER BY\n            _LATEST_DATE DESC rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING\n    )", "language": "sql", "refs": [], "sources": [["googleads", "campaign"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.campaign"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/base/base_googleAds__campaigns.sql", "compiled": true, "compiled_code": "SELECT\n    DISTINCT campaign_id,\n    customer_id AS account_id,\n    campaign_advertising_channel_type AS advertising_channel,\n    (\n        FIRST_VALUE(campaign_bidding_strategy_type) over w1\n    ) AS bidding_stategy,\n    (\n        FIRST_VALUE(campaign_budget_period) over w1\n    ) as budget_period,\n    (\n        FIRST_VALUE(campaign_budget_amount_micros) over w1 / 1e6\n    ) AS budget,\n    FIRST_VALUE(campaign_name) over w1 AS campaign_name\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_Campaign_1322374205`\n    window w1 as (\n        PARTITION BY campaign_id\n        ORDER BY\n            _LATEST_DATE DESC rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_googleAds__accounts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_googleAds__accounts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/base/base_googleAds__accounts.sql", "original_file_path": "models/staging/googleAds/base/base_googleAds__accounts.sql", "unique_id": "model.sado_analytics_services.base_googleAds__accounts", "fqn": ["sado_analytics_services", "staging", "googleAds", "base", "base_googleAds__accounts"], "alias": "base_googleAds__accounts", "checksum": {"name": "sha256", "checksum": "61ce29cb505d37575172e292779e5739d67a7f11476d8fed2f23a3e024ad9581"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.5067449, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__accounts`", "raw_code": "SELECT\n    DISTINCT customer_id AS account_id,\n    FIRST_VALUE(customer_descriptive_name) over w1 AS account_name,\n    FIRST_VALUE(customer_currency_code) over w1 AS currency_code,\n    FIRST_VALUE(customer_manager) over w1 AS is_manager_account\nFROM\n    {{ source(\n        'googleads',\n        'customer'\n    ) }}\n    where _LATEST_DATE = _DATA_DATE\n    window w1 as ( PARTITION BY customer_id\n        ORDER BY\n            _LATEST_DATE DESC rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING)", "language": "sql", "refs": [], "sources": [["googleads", "customer"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.customer"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/base/base_googleAds__accounts.sql", "compiled": true, "compiled_code": "SELECT\n    DISTINCT customer_id AS account_id,\n    FIRST_VALUE(customer_descriptive_name) over w1 AS account_name,\n    FIRST_VALUE(customer_currency_code) over w1 AS currency_code,\n    FIRST_VALUE(customer_manager) over w1 AS is_manager_account\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_Customer_1322374205`\n    where _LATEST_DATE = _DATA_DATE\n    window w1 as ( PARTITION BY customer_id\n        ORDER BY\n            _LATEST_DATE DESC rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_googleAds__criterions": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_googleAds__criterions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/base/base_googleAds__criterions.sql", "original_file_path": "models/staging/googleAds/base/base_googleAds__criterions.sql", "unique_id": "model.sado_analytics_services.base_googleAds__criterions", "fqn": ["sado_analytics_services", "staging", "googleAds", "base", "base_googleAds__criterions"], "alias": "base_googleAds__criterions", "checksum": {"name": "sha256", "checksum": "2ea6e4b8bb81709d834516165f5eba9e5f7dccdab426c71c203246856cca565d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.5142336, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__criterions`", "raw_code": "SELECT\n    ad_group_criterion_criterion_id AS criterion_id,\n    ad_group_id,\n    ad_group_criterion_display_name AS criterion_name,\n    ad_group_criterion_negative AS is_negative,\n    ad_group_criterion_type AS criterion_type,\nFROM\n    {{ source(\n        'googleads',\n        'ad_group_criterion'\n    ) }}\nWHERE\n    _LATEST_DATE = _DATA_DATE", "language": "sql", "refs": [], "sources": [["googleads", "ad_group_criterion"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.ad_group_criterion"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/base/base_googleAds__criterions.sql", "compiled": true, "compiled_code": "SELECT\n    ad_group_criterion_criterion_id AS criterion_id,\n    ad_group_id,\n    ad_group_criterion_display_name AS criterion_name,\n    ad_group_criterion_negative AS is_negative,\n    ad_group_criterion_type AS criterion_type,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCriterion_1322374205`\nWHERE\n    _LATEST_DATE = _DATA_DATE", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_googleAds__adgroups": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_googleAds__adgroups", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/base/base_googleAds__adgroups.sql", "original_file_path": "models/staging/googleAds/base/base_googleAds__adgroups.sql", "unique_id": "model.sado_analytics_services.base_googleAds__adgroups", "fqn": ["sado_analytics_services", "staging", "googleAds", "base", "base_googleAds__adgroups"], "alias": "base_googleAds__adgroups", "checksum": {"name": "sha256", "checksum": "171edcac35f7d08c65139ad9248348643a7cecfd812bee913875647d6693670b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.5217843, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__adgroups`", "raw_code": "SELECT\n        DISTINCT ad_group_id,\n        campaign_id,\n        customer_id AS account_id,\n        ad_group_type,\n        FIRST_VALUE(ad_group_name) over(\n            PARTITION BY ad_group_id,\n            campaign_id\n            ORDER BY\n                _LATEST_DATE DESC\n        ) AS ad_group_name,\n    FROM\n        {{ source(\n            'googleads',\n            'ad_group'\n        ) }}", "language": "sql", "refs": [], "sources": [["googleads", "ad_group"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.ad_group"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/base/base_googleAds__adgroups.sql", "compiled": true, "compiled_code": "SELECT\n        DISTINCT ad_group_id,\n        campaign_id,\n        customer_id AS account_id,\n        ad_group_type,\n        FIRST_VALUE(ad_group_name) over(\n            PARTITION BY ad_group_id,\n            campaign_id\n            ORDER BY\n                _LATEST_DATE DESC\n        ) AS ad_group_name,\n    FROM\n        `agile-scheme-394814`.`GoogleAds`.`ads_AdGroup_1322374205`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__depots": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__depots", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__depots.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__depots.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__depots", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__depots"], "alias": "stg_nhanhvn__depots", "checksum": {"name": "sha256", "checksum": "bccef490eebeb0267a2cf8d4daf6615466854f7eb06eac8223897782627881e0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"depot_id": {"name": "depot_id", "description": "Id kho h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "T\u00ean kho h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city": {"name": "city", "description": "Th\u00e0nh ph\u1ed1", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "district": {"name": "district", "description": "Qu\u1eadn huy\u1ec7n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "\u0110\u1ecba ch\u1ec9 kho", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__depots.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1703652761.3554225, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__depots`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','nhanhvn']\n  )\n}}\n\nSELECT\n    safe_cast(id as int64) AS depot_id,\n    NAME AS depot_name,\n    mobile AS contact_number,\n    cityName AS city,\n    districtName AS district,\n    address\nFROM\n    {{ ref('base_nhanhvn__stores') }}", "language": "sql", "refs": [{"name": "base_nhanhvn__stores", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_nhanhvn__stores"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__depots.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    safe_cast(id as int64) AS depot_id,\n    NAME AS depot_name,\n    mobile AS contact_number,\n    cityName AS city,\n    districtName AS district,\n    address\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__stores`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__carriers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__carriers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__carriers.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__carriers.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__carriers", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__carriers"], "alias": "stg_nhanhvn__carriers", "checksum": {"name": "sha256", "checksum": "13a4bd051cdd1c2e8231149804ff1e13d4d2c89f79a375798c73a3aab52e7483"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"carrier_id": {"name": "carrier_id", "description": "Id nh\u00e0 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "Id d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_name": {"name": "service_name", "description": "T\u00ean d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__carriers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1703652761.3452742, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__carriers`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','nhanhvn']\n  )\n}}\n\nSELECT\n    safe_cast(carriers.id as int64) as carrier_id,\n    safe_cast(services.id as int64) as service_id,\n    concat(carriers.name,' - ',services.name) as service_name\nFROM\n    {{ ref('base_nhanhvn__carriers') }} carriers,\n    unnest(services) services", "language": "sql", "refs": [{"name": "base_nhanhvn__carriers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_nhanhvn__carriers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__carriers.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    safe_cast(carriers.id as int64) as carrier_id,\n    safe_cast(services.id as int64) as service_id,\n    concat(carriers.name,' - ',services.name) as service_name\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__carriers` carriers,\n    unnest(services) services", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__users": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__users.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__users.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__users", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__users"], "alias": "stg_nhanhvn__users", "checksum": {"name": "sha256", "checksum": "1269cb764c895d6ed1368fadc50f4737887c7666464f600985b81c4aee108193"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"user_id": {"name": "user_id", "description": "Id nh\u00e2n vi\u00ean", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role": {"name": "role", "description": "Nh\u00f3m quy\u1ec1n nh\u00e2n vi\u00ean", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__users.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1703652761.3789442, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__users`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','nhanhvn']\n  )\n}}\n\n\nSELECT\n    safe_cast(id as int64) AS user_id,\n    userName AS user_name,\n    email AS email,\n    mobile AS contact_number,\n    roleName AS role,\nFROM\n    {{ ref('base_nhanhvn__users') }}", "language": "sql", "refs": [{"name": "base_nhanhvn__users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_nhanhvn__users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__users.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    safe_cast(id as int64) AS user_id,\n    userName AS user_name,\n    email AS email,\n    mobile AS contact_number,\n    roleName AS role,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__users`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__bills": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__bills", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__bills.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__bills.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__bills", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__bills"], "alias": "stg_nhanhvn__bills", "checksum": {"name": "sha256", "checksum": "a0f93d525ced31a328ad25eacef3ffc6793d023316b95b565f34bb3b9dcf0e38"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"bill_id": {"name": "bill_id", "description": "M\u00e3 ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_date": {"name": "bill_date", "description": "Ng\u00e0y ho\u00e1 \u0111\u01a1n", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Th\u1eddi gian t\u1ea1o \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_type": {"name": "bill_type", "description": "Lo\u1ea1i ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho: Xu\u1ea5t kho | Nh\u1eadp kho", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_mode": {"name": "bill_mode", "description": "Ki\u1ec3u ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "related_bill_id": {"name": "related_bill_id", "description": "M\u00e3 ho\u00e1 \u0111\u01a1n li\u00ean k\u1ebft", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id": {"name": "order_id", "description": "Id \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_id": {"name": "depot_id", "description": "Id kho h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Id kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "ID ng\u01b0\u1eddi t\u1ea1o \u0111\u01a1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "ID s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "Chi\u1ebft kh\u1ea5u", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vat": {"name": "vat", "description": "Thu\u1ebf VAT", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__bills.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.3522599, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__bills`", "raw_code": "select\nbills.bill_id,\nbills.bill_date,\nbills.created_date,\nbills.bill_type,\nbills.bill_mode,\nbills.related_bill_id,\ncoalesce(bills.order_id, bills2.order_id) order_id,\nbills.depot_id,\nbills.customer_id,\ncoalesce(bills.created_by_id,bills.sale_id) created_by_id,\nproducts.product_id,\nproducts.discount,\nproducts.price,\nproducts.quantity,\nproducts.vat,\nfrom {{ref('base_nhanhvn__bills')}} bills, unnest(products) products\nleft join {{ref('base_nhanhvn__bills')}} bills2 on bills.related_bill_id = bills2.bill_id", "language": "sql", "refs": [{"name": "base_nhanhvn__bills", "package": null, "version": null}, {"name": "base_nhanhvn__bills", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_nhanhvn__bills"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__bills.sql", "compiled": true, "compiled_code": "select\nbills.bill_id,\nbills.bill_date,\nbills.created_date,\nbills.bill_type,\nbills.bill_mode,\nbills.related_bill_id,\ncoalesce(bills.order_id, bills2.order_id) order_id,\nbills.depot_id,\nbills.customer_id,\ncoalesce(bills.created_by_id,bills.sale_id) created_by_id,\nproducts.product_id,\nproducts.discount,\nproducts.price,\nproducts.quantity,\nproducts.vat,\nfrom `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__bills` bills, unnest(products) products\nleft join `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__bills` bills2 on bills.related_bill_id = bills2.bill_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__ordersdetails": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__ordersdetails", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__ordersdetails.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__ordersdetails.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__ordersdetails", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__ordersdetails"], "alias": "stg_nhanhvn__ordersdetails", "checksum": {"name": "sha256", "checksum": "58f9fbe86e6694e9a99394e8568e493f220081275f736a14a656ae66f9928dd5"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"order_id": {"name": "order_id", "description": "Id \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sale_channel": {"name": "sale_channel", "description": "K\u00eanh b\u00e1n ph\u00e1t sinh \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "T\u00ean kho h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Id kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "ID ng\u01b0\u1eddi t\u1ea1o \u0111\u01a1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sale_id": {"name": "sale_id", "description": "ID nh\u00e2n vi\u00ean b\u00e1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Th\u1eddi gian t\u1ea1o \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delivery_date": {"name": "delivery_date", "description": "Ng\u00e0y giao h\u00e0ng", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "send_carrier_date": {"name": "send_carrier_date", "description": "Ng\u00e0y giao b\u00ean v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_status": {"name": "order_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_type": {"name": "order_type", "description": "Lo\u1ea1i \u0111\u01a1n h\u00e0ng (Shipping | Shopping)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_source_name": {"name": "traffic_source_name", "description": "T\u00ean ngu\u1ed3n \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "carrier_id": {"name": "carrier_id", "description": "Id nh\u00e0 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "Id d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_discount": {"name": "order_discount", "description": "Chi\u1ebft kh\u1ea5u, tr\u00ean to\u00e0n b\u1ed9 \u0111\u01a1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_deposit": {"name": "money_deposit", "description": "Ti\u1ec1n \u0111\u1eb7t c\u1ecdc", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_transfer": {"name": "money_transfer", "description": "Ti\u1ec1n chuy\u1ec3n kho\u1ea3n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_used_points": {"name": "money_used_points", "description": "S\u1ed1 ti\u1ec1n ti\u00eau \u0111i\u1ec3m \u0111\u00e3 ti\u00eau", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_fee": {"name": "ship_fee", "description": "Ph\u00ed v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cod_fee": {"name": "cod_fee", "description": "Ph\u00ed thu ti\u1ec1n h\u1ed9", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_ship_fee": {"name": "customer_ship_fee", "description": "Ph\u00ed thu c\u1ee7a kh\u00e1ch", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_fee": {"name": "return_fee", "description": "Ph\u00ed chuy\u1ec3n ho\u00e0n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "overweight_fee": {"name": "overweight_fee", "description": "Ph\u00ed v\u01b0\u1ee3t c\u00e2n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "ghi ch\u00fa c\u1ee7a kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_address": {"name": "ship_address", "description": "\u0110\u1ecba ch\u1ec9 giao h\u00e0ng \u0111\u1ebfn c\u1ea5p ph\u01b0\u1eddng/x\u00e3", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receivables": {"name": "receivables", "description": "S\u1ed1 ti\u1ec1n ph\u1ea3i thu KH", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "coupon_code": {"name": "coupon_code", "description": "M\u00e3 coupon", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "ID s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "M\u00e3 s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 b\u00e1n l\u1ebb s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_discount": {"name": "item_discount", "description": "Chi\u1ebft kh\u1ea5u, tr\u00ean t\u1eebng items", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__ordersdetails.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.367653, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`", "raw_code": "SELECT\n    orders.order_id,\n    orders.sale_channel,\n    orders.depot_name,\n    orders.customer_id,\n    orders.created_by_id,\n    orders.sale_id,\n    orders.created_date,\n    orders.delivery_date,\n    orders.send_carrier_date,\n    orders.order_status,\n    orders.order_type,\n    orders.traffic_source_name,\n    orders.carrier_id,\n    orders.service_id,\n    orders.order_discount,\n    orders.money_deposit,\n    orders.money_transfer,\n    orders.money_used_points,\n    orders.ship_fee,\n    orders.cod_fee,\n    orders.customer_ship_fee,\n    orders.return_fee,\n    orders.overweight_fee,\n    orders.description,\n    orders.ship_address,\n    orders.receivables,\n    orders.coupon_code,\n    products.product_id,\n    products.product_code,\n    products.price,\n    products.quantity,\n    products.item_discount,\nFROM\n    {{ ref('base_nhanhvn__orders') }}\n    orders,\n    unnest(products) products", "language": "sql", "refs": [{"name": "base_nhanhvn__orders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_nhanhvn__orders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__ordersdetails.sql", "compiled": true, "compiled_code": "SELECT\n    orders.order_id,\n    orders.sale_channel,\n    orders.depot_name,\n    orders.customer_id,\n    orders.created_by_id,\n    orders.sale_id,\n    orders.created_date,\n    orders.delivery_date,\n    orders.send_carrier_date,\n    orders.order_status,\n    orders.order_type,\n    orders.traffic_source_name,\n    orders.carrier_id,\n    orders.service_id,\n    orders.order_discount,\n    orders.money_deposit,\n    orders.money_transfer,\n    orders.money_used_points,\n    orders.ship_fee,\n    orders.cod_fee,\n    orders.customer_ship_fee,\n    orders.return_fee,\n    orders.overweight_fee,\n    orders.description,\n    orders.ship_address,\n    orders.receivables,\n    orders.coupon_code,\n    products.product_id,\n    products.product_code,\n    products.price,\n    products.quantity,\n    products.item_discount,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__orders`\n    orders,\n    unnest(products) products", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__inventories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__inventories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__inventories.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__inventories.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__inventories", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__inventories"], "alias": "stg_nhanhvn__inventories", "checksum": {"name": "sha256", "checksum": "65fb1360340fa44a615100244f77f1bf768b884e7bcfaf93416053f8f70ecf3c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "available": {"name": "available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "remain": {"name": "remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping": {"name": "shipping", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "damaged": {"name": "damaged", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "holding": {"name": "holding", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty": {"name": "warranty", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty_holding": {"name": "warranty_holding", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__inventories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.377244, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__inventories`", "raw_code": "SELECT\ninv.product_id,\nd.depot_name,\ninv.updated_at,\ninv.available,\ninv.remain,\ninv.shipping,\ninv.damaged,\ninv.holding,\ninv.warranty,\ninv.warranty_holding,\nFROM\n    {{ ref('base_nhanhvn__inventories') }} inv \n    left join {{ref('stg_nhanhvn__depots')}}  d on inv.depot_id = d.depot_id", "language": "sql", "refs": [{"name": "base_nhanhvn__inventories", "package": null, "version": null}, {"name": "stg_nhanhvn__depots", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_nhanhvn__inventories", "model.sado_analytics_services.stg_nhanhvn__depots"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__inventories.sql", "compiled": true, "compiled_code": "SELECT\ninv.product_id,\nd.depot_name,\ninv.updated_at,\ninv.available,\ninv.remain,\ninv.shipping,\ninv.damaged,\ninv.holding,\ninv.warranty,\ninv.warranty_holding,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__inventories` inv \n    left join `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__depots`  d on inv.depot_id = d.depot_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__customers.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__customers.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__customers", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__customers"], "alias": "stg_nhanhvn__customers", "checksum": {"name": "sha256", "checksum": "9fffe56a16fc7f76e51f3f54bd1ab57f0e603b38ae9cbc7f66ecbbe81930768a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "Id kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_name": {"name": "customer_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "Gi\u1edbi t\u00ednh kh\u00e1ch h\u00e0ng (1 = Nam, 2 = N\u1eef, Null: Ch\u01b0a c\u00f3 th\u00f4ng tin)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "\u0110\u1ecba ch\u1ec9 kho", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "birthday": {"name": "birthday", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_money": {"name": "total_money", "description": "T\u1ed5ng s\u1ed1 ti\u1ec1n kh\u00e1ch mua h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_purchase_date": {"name": "first_purchase_date", "description": "Ng\u00e0y b\u1eaft \u0111\u1ea7u mua h\u00e0ng", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_purchase_depot_id": {"name": "first_purchase_depot_id", "description": "Kho b\u1eaft \u0111\u1ea7u mua h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "\u0110i\u1ec3m t\u00edch l\u0169y hi\u1ec7n t\u1ea1i c\u1ee7a kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_bills": {"name": "total_bills", "description": "T\u1ed5ng s\u1ed1 ti\u1ec1n kh\u00e1ch thanh to\u00e1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_bought_date": {"name": "last_bought_date", "description": "Ng\u00e0y g\u1ea7n nh\u1ea5t mua h\u00e0ng", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__customers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1703652761.3730788, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__customers`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','nhanhvn']\n  )\n}}\n\nSELECT\n    safe_cast(id as int64) AS customer_id,\n    NAME AS customer_name,\n    email AS email,\n    mobile AS contact_number,\n    case when gender = '1' then 'm' when gender  = '2' then 'f' end as gender,\n    address,\n    birthday,\n    safe_cast(totalMoney as int64) AS total_money,\n    DATE(startedDate) AS first_purchase_date,\n    safe_cast(startedDepotId as int64) AS first_purchase_depot_id,\n    safe_cast(points as int64) as points,\n    safe_cast(totalBills as int64) AS total_bills,\n    DATE(lastBoughtDate) AS last_bought_date,\nFROM\n    {{ ref('base_nhanhvn__customers') }}", "language": "sql", "refs": [{"name": "base_nhanhvn__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_nhanhvn__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__customers.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    safe_cast(id as int64) AS customer_id,\n    NAME AS customer_name,\n    email AS email,\n    mobile AS contact_number,\n    case when gender = '1' then 'm' when gender  = '2' then 'f' end as gender,\n    address,\n    birthday,\n    safe_cast(totalMoney as int64) AS total_money,\n    DATE(startedDate) AS first_purchase_date,\n    safe_cast(startedDepotId as int64) AS first_purchase_depot_id,\n    safe_cast(points as int64) as points,\n    safe_cast(totalBills as int64) AS total_bills,\n    DATE(lastBoughtDate) AS last_bought_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__customers`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__products": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__products", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__products.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__products.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__products", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__products"], "alias": "stg_nhanhvn__products", "checksum": {"name": "sha256", "checksum": "522cb71d6f63fc7637caa1a4e43912c83c4548313042d93fa17b18299f4b3e43"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "ID s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type_name": {"name": "type_name", "description": "Lo\u1ea1i s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_cost": {"name": "avg_cost", "description": "Gi\u00e1 v\u1ed1n s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "M\u00e3 s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "class_code": {"name": "class_code", "description": "G\u1ed9p m\u00e3 SP theo m\u00e0u & size", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "barcode": {"name": "barcode", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_name": {"name": "product_name", "description": "T\u00ean s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 b\u00e1n l\u1ebb s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_status": {"name": "product_status", "description": "Tr\u1ea1ng th\u00e1i s\u1ea3n ph\u1ea9m New | Active | Inactive | Out of stock", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name": {"name": "category_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__products.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1703652761.3363757, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__products`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','nhanhvn']\n  )\n}}\n\nSELECT\n    safe_cast(products.idNhanh as int64) AS product_id,\n    products.typeName AS type_name,\n    safe_cast(products.avgCost as int64) AS avg_cost,\n    products.code as product_code,\n    coalesce(regexp_extract(products.code,r'([A-Za-z0-9-]+)(?:[A-Z]{3}\\d{1,5}$)'),products.code) as class_code,\n    products.barcode,\n    products.name as product_name,\n    safe_cast(products.price as int64) price,\n    products.status as product_status,\n    categories.name as category_name\n    -- coalesce(categories.category_name_level4,categories.category_name_level3,categories.category_name_level2,categories.category_name_level1) as category_name,\n    -- coalesce(categories.category_name_level3,categories.category_name_level2,categories.category_name_level1) as product_type,\n    -- coalesce(categories.category_name_level2,categories.category_name_level1) as sub_productline,\n    -- coalesce(categories.category_name_level1) as productline,\nFROM\n    {{ ref('base_nhanhvn__products') }} products\n    left join {{ref('base_nhanhvn__categories')}} categories \n    on products.categoryId = categories.id\n    -- coalesce(categories.category_id_level4,categories.category_id_level3,categories.category_id_level2,categories.category_id_level1)\n    -- where coalesce(categories.category_name_level1) is not null", "language": "sql", "refs": [{"name": "base_nhanhvn__products", "package": null, "version": null}, {"name": "base_nhanhvn__categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_nhanhvn__products", "model.sado_analytics_services.base_nhanhvn__categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__products.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    safe_cast(products.idNhanh as int64) AS product_id,\n    products.typeName AS type_name,\n    safe_cast(products.avgCost as int64) AS avg_cost,\n    products.code as product_code,\n    coalesce(regexp_extract(products.code,r'([A-Za-z0-9-]+)(?:[A-Z]{3}\\d{1,5}$)'),products.code) as class_code,\n    products.barcode,\n    products.name as product_name,\n    safe_cast(products.price as int64) price,\n    products.status as product_status,\n    categories.name as category_name\n    -- coalesce(categories.category_name_level4,categories.category_name_level3,categories.category_name_level2,categories.category_name_level1) as category_name,\n    -- coalesce(categories.category_name_level3,categories.category_name_level2,categories.category_name_level1) as product_type,\n    -- coalesce(categories.category_name_level2,categories.category_name_level1) as sub_productline,\n    -- coalesce(categories.category_name_level1) as productline,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__products` products\n    left join `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__categories` categories \n    on products.categoryId = categories.id\n    -- coalesce(categories.category_id_level4,categories.category_id_level3,categories.category_id_level2,categories.category_id_level1)\n    -- where coalesce(categories.category_name_level1) is not null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__categories.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__categories.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__categories", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__categories"], "alias": "stg_nhanhvn__categories", "checksum": {"name": "sha256", "checksum": "b3128b24102be1ff875c30e89fd7b33456f92d07d753f8eacbc27e33613c7c75"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"category_code_level1": {"name": "category_code_level1", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id_level1": {"name": "category_id_level1", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name_level1": {"name": "category_name_level1", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_code_level2": {"name": "category_code_level2", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id_level2": {"name": "category_id_level2", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name_level2": {"name": "category_name_level2", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_code_level3": {"name": "category_code_level3", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id_level3": {"name": "category_id_level3", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name_level3": {"name": "category_name_level3", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_code_level4": {"name": "category_code_level4", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id_level4": {"name": "category_id_level4", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name_level4": {"name": "category_name_level4", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__categories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1703652761.343116, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__categories`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','nhanhvn']\n  )\n}}\nSELECT\n    c1.code AS category_code_level1,\n    c1.id AS category_id_level1,\n    c1.name AS category_name_level1,\n    c2.code AS category_code_level2,\n    c2.id AS category_id_level2,\n    c2.name AS category_name_level2,\n    c3.code AS category_code_level3,\n    c3.id AS category_id_level3,\n    c3.name AS category_name_level3,\n    c4.code AS category_code_level4,\n    c4.id AS category_id_level4,\n    c4.name AS category_name_level4,\nFROM\n    {{ ref('base_nhanhvn__categories') }}\n    c1\n    LEFT JOIN {{ ref('base_nhanhvn__categories') }}\n    c2\n    ON c1.id = c2.parentId\n    LEFT JOIN {{ ref('base_nhanhvn__categories') }}\n    c3\n    ON c2.id = c3.parentId\n    LEFT JOIN {{ ref('base_nhanhvn__categories') }}\n    c4\n    ON c3.id = c4.parentId\nWHERE\n    c1.parentId IS NULL", "language": "sql", "refs": [{"name": "base_nhanhvn__categories", "package": null, "version": null}, {"name": "base_nhanhvn__categories", "package": null, "version": null}, {"name": "base_nhanhvn__categories", "package": null, "version": null}, {"name": "base_nhanhvn__categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_nhanhvn__categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__categories.sql", "compiled": true, "compiled_code": "\nSELECT\n    c1.code AS category_code_level1,\n    c1.id AS category_id_level1,\n    c1.name AS category_name_level1,\n    c2.code AS category_code_level2,\n    c2.id AS category_id_level2,\n    c2.name AS category_name_level2,\n    c3.code AS category_code_level3,\n    c3.id AS category_id_level3,\n    c3.name AS category_name_level3,\n    c4.code AS category_code_level4,\n    c4.id AS category_id_level4,\n    c4.name AS category_name_level4,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__categories`\n    c1\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__categories`\n    c2\n    ON c1.id = c2.parentId\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__categories`\n    c3\n    ON c2.id = c3.parentId\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__categories`\n    c4\n    ON c3.id = c4.parentId\nWHERE\n    c1.parentId IS NULL", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_nhanhvn__inventories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_nhanhvn__inventories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/base/base_nhanhvn__inventories.sql", "original_file_path": "models/staging/nhanhvn/base/base_nhanhvn__inventories.sql", "unique_id": "model.sado_analytics_services.base_nhanhvn__inventories", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "base", "base_nhanhvn__inventories"], "alias": "base_nhanhvn__inventories", "checksum": {"name": "sha256", "checksum": "26794368991b7ec559f7fb06de300dedfd13306545476d323ea49b7601ae82ce"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.6029117, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__inventories`", "raw_code": "SELECT\n    safe_cast(id as int64) as product_id,\n    datetime_add(_batched_at, interval 7 hour) as updated_at,\n    safe_cast(depots.depotId as int64) as depot_id,\n    depots.available,\n    depots.remain,\n    depots.shipping,\n    depots.damaged,\n    depots.holding,\n    depots.warranty,\n    depots.warrantyHolding as warranty_holding,\nFROM\n    {{ source(\n        'nhanhvn',\n        'p_webhook_inventoryChange'\n    ) }}, unnest(depots) depots\n    where depots.remain is not null\n\nunion all\nSELECT\n    safe_cast(idNhanh as int64) as product_id,\n    timestamp(datetime_add(_batched_at, interval 7 hour)) as updated_at,\n    safe_cast(depots.depotId as int64) as depot_id,\n    depots.available,\n    depots.remain,\n    depots.shipping,\n    depots.damage,\n    depots.holding,\n    depots.warranty,\n    depots.warrantyHolding as warranty_holding,\nFROM\n    {{ source(\n        'nhanhvn',\n        'p_inventory_*'\n    ) }}, unnest(depots) depots\nwhere depots.remain <> 0", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_webhook_inventoryChange"], ["nhanhvn", "p_inventory_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange", "source.sado_analytics_services.nhanhvn.p_inventory_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/base/base_nhanhvn__inventories.sql", "compiled": true, "compiled_code": "SELECT\n    safe_cast(id as int64) as product_id,\n    datetime_add(_batched_at, interval 7 hour) as updated_at,\n    safe_cast(depots.depotId as int64) as depot_id,\n    depots.available,\n    depots.remain,\n    depots.shipping,\n    depots.damaged,\n    depots.holding,\n    depots.warranty,\n    depots.warrantyHolding as warranty_holding,\nFROM\n    `agile-scheme-394814`.`Nhanhvn`.`p_webhook_inventoryChange`, unnest(depots) depots\n    where depots.remain is not null\n\nunion all\nSELECT\n    safe_cast(idNhanh as int64) as product_id,\n    timestamp(datetime_add(_batched_at, interval 7 hour)) as updated_at,\n    safe_cast(depots.depotId as int64) as depot_id,\n    depots.available,\n    depots.remain,\n    depots.shipping,\n    depots.damage,\n    depots.holding,\n    depots.warranty,\n    depots.warrantyHolding as warranty_holding,\nFROM\n    `agile-scheme-394814`.`Nhanhvn`.`p_inventory_*`, unnest(depots) depots\nwhere depots.remain <> 0", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_nhanhvn__orders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_nhanhvn__orders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/base/base_nhanhvn__orders.sql", "original_file_path": "models/staging/nhanhvn/base/base_nhanhvn__orders.sql", "unique_id": "model.sado_analytics_services.base_nhanhvn__orders", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "base", "base_nhanhvn__orders"], "alias": "base_nhanhvn__orders", "checksum": {"name": "sha256", "checksum": "32750f1587d024c22592e0c446b88b1e24a887b0ad4a917b1d4b7913d87df6c6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.6109593, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__orders`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            'nhanhvn',\n            'p_orders_*'\n        ) }}\n),\nraw_ AS (\n    SELECT\n        *\n    EXCEPT(rn_)\n    FROM\n        source\n    WHERE\n        rn_ = 1\n)\n\nSELECT\n    safe_cast(orders.id AS int64) AS order_id,\n    orders.shopOrderId AS shop_order_id,\n    salechannels.sale_channel,\n    orders.merchantTrackingNumber AS tracking_number,\n    safe_cast(orders.depotId AS int64) AS depot_id,\n    orders.depotName AS depot_name,\n    orders.type as order_type,\n    safe_cast(orders.moneyDiscount AS int64) AS order_discount,\n    safe_cast(orders.moneyDeposit AS int64) AS money_deposit,\n    safe_cast(orders.moneyTransfer AS int64) AS money_transfer,\n    safe_cast(orders.depositAccount as int64) AS deposit_account,\n    safe_cast(orders.transferAccount as int64) AS transfer_account,\n    safe_cast(orders.usedPoints as int64) AS used_points,\n    safe_cast(orders.moneyUsedPoints as int64) AS money_used_points,\n    safe_cast(orders.carrierId AS int64) AS carrier_id,\n    safe_cast(orders.serviceId as int64) AS service_id,\n    orders.carrierCode AS carrier_code,\n    safe_cast(orders.shipFee AS int64) AS ship_fee,\n    safe_cast(orders.codFee AS int64) AS cod_fee,\n    safe_cast(orders.customerShipFee AS int64) AS customer_ship_fee,\n    safe_cast(orders.returnFee AS int64) AS return_fee,\n    safe_cast(orders.overWeightShipFee AS int64) AS overweight_fee,\n    safe_cast(orders.declaredFee AS int64) AS declared_fee,\n    orders.description,\n    safe_cast(orders.customerId AS int64) AS customer_id,\n    orders.customerMobile AS customer_contact_number,\n    ARRAY_TO_STRING(\n        [orders.customerWard, orders.customerDistrict, orders.customerCity],\n        ', '\n    ) AS ship_address,\n    safe_cast(orders.createdById AS int64) AS created_by_id,\n    safe_cast(orders.saleId AS int64) AS sale_id,\n    orders.createdDateTime AS created_date,\n    DATE(orders.deliveryDate) AS delivery_date,\n    DATE(orders.sendCarrierDate) AS send_carrier_date,\n    orders.statusName AS order_status,\n    safe_cast(orders.calcTotalMoney AS int64) AS receivables,\n    case when coalesce(orders.trafficSourceName, salechannels.sale_channel) in ('API','Admin') then 'Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n' else coalesce(orders.trafficSourceName, salechannels.sale_channel) end AS traffic_source_name,\n    orders.couponCode AS coupon_code,\narray_agg(struct(\n    safe_cast(products.productId as int64) AS product_id,\n    products.productCode AS product_code,\n    safe_cast(products.price as int64) as price,\n    safe_cast(products.quantity as int64) as quantity,\n    safe_cast(products.discount as int64) as item_discount\n    )) products\nFROM\n    raw_ orders, unnest(products) products\n    LEFT JOIN {{ ref('stg_gsheet__nhanhvnsalechannels') }} salechannels\n    ON safe_cast(orders.saleChannel AS int64) = salechannels.sale_channel_id\n    {{dbt_utils.group_by(36)}}", "language": "sql", "refs": [{"name": "stg_gsheet__nhanhvnsalechannels", "package": null, "version": null}], "sources": [["nhanhvn", "p_orders_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.nhanhvn.p_orders_*", "model.sado_analytics_services.stg_gsheet__nhanhvnsalechannels"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/base/base_nhanhvn__orders.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`Nhanhvn`.`p_orders_*`\n),\nraw_ AS (\n    SELECT\n        *\n    EXCEPT(rn_)\n    FROM\n        source\n    WHERE\n        rn_ = 1\n)\n\nSELECT\n    safe_cast(orders.id AS int64) AS order_id,\n    orders.shopOrderId AS shop_order_id,\n    salechannels.sale_channel,\n    orders.merchantTrackingNumber AS tracking_number,\n    safe_cast(orders.depotId AS int64) AS depot_id,\n    orders.depotName AS depot_name,\n    orders.type as order_type,\n    safe_cast(orders.moneyDiscount AS int64) AS order_discount,\n    safe_cast(orders.moneyDeposit AS int64) AS money_deposit,\n    safe_cast(orders.moneyTransfer AS int64) AS money_transfer,\n    safe_cast(orders.depositAccount as int64) AS deposit_account,\n    safe_cast(orders.transferAccount as int64) AS transfer_account,\n    safe_cast(orders.usedPoints as int64) AS used_points,\n    safe_cast(orders.moneyUsedPoints as int64) AS money_used_points,\n    safe_cast(orders.carrierId AS int64) AS carrier_id,\n    safe_cast(orders.serviceId as int64) AS service_id,\n    orders.carrierCode AS carrier_code,\n    safe_cast(orders.shipFee AS int64) AS ship_fee,\n    safe_cast(orders.codFee AS int64) AS cod_fee,\n    safe_cast(orders.customerShipFee AS int64) AS customer_ship_fee,\n    safe_cast(orders.returnFee AS int64) AS return_fee,\n    safe_cast(orders.overWeightShipFee AS int64) AS overweight_fee,\n    safe_cast(orders.declaredFee AS int64) AS declared_fee,\n    orders.description,\n    safe_cast(orders.customerId AS int64) AS customer_id,\n    orders.customerMobile AS customer_contact_number,\n    ARRAY_TO_STRING(\n        [orders.customerWard, orders.customerDistrict, orders.customerCity],\n        ', '\n    ) AS ship_address,\n    safe_cast(orders.createdById AS int64) AS created_by_id,\n    safe_cast(orders.saleId AS int64) AS sale_id,\n    orders.createdDateTime AS created_date,\n    DATE(orders.deliveryDate) AS delivery_date,\n    DATE(orders.sendCarrierDate) AS send_carrier_date,\n    orders.statusName AS order_status,\n    safe_cast(orders.calcTotalMoney AS int64) AS receivables,\n    case when coalesce(orders.trafficSourceName, salechannels.sale_channel) in ('API','Admin') then 'Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n' else coalesce(orders.trafficSourceName, salechannels.sale_channel) end AS traffic_source_name,\n    orders.couponCode AS coupon_code,\narray_agg(struct(\n    safe_cast(products.productId as int64) AS product_id,\n    products.productCode AS product_code,\n    safe_cast(products.price as int64) as price,\n    safe_cast(products.quantity as int64) as quantity,\n    safe_cast(products.discount as int64) as item_discount\n    )) products\nFROM\n    raw_ orders, unnest(products) products\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__nhanhvnsalechannels` salechannels\n    ON safe_cast(orders.saleChannel AS int64) = salechannels.sale_channel_id\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_nhanhvn__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_nhanhvn__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/base/base_nhanhvn__customers.sql", "original_file_path": "models/staging/nhanhvn/base/base_nhanhvn__customers.sql", "unique_id": "model.sado_analytics_services.base_nhanhvn__customers", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "base", "base_nhanhvn__customers"], "alias": "base_nhanhvn__customers", "checksum": {"name": "sha256", "checksum": "45fb9173c52e64e9a90d1c0c8b2144bf6ed8082c9f9aa0cc35012d2fb7d0a096"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.619918, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__customers`", "raw_code": "WITH source as (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        {{ source(\n            'nhanhvn',\n            'p_customers_*'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_customers_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.nhanhvn.p_customers_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/base/base_nhanhvn__customers.sql", "compiled": true, "compiled_code": "WITH source as (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        `agile-scheme-394814`.`Nhanhvn`.`p_customers_*`\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_nhanhvn__products": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_nhanhvn__products", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/base/base_nhanhvn__products.sql", "original_file_path": "models/staging/nhanhvn/base/base_nhanhvn__products.sql", "unique_id": "model.sado_analytics_services.base_nhanhvn__products", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "base", "base_nhanhvn__products"], "alias": "base_nhanhvn__products", "checksum": {"name": "sha256", "checksum": "21f2fd7e78fe6a8cb3d834fed59f1810ca2e024714d44eea16f20149a6f7a625"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.6275105, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__products`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY idNhanh\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            'nhanhvn',\n            'p_products_*'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_products_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.nhanhvn.p_products_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/base/base_nhanhvn__products.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY idNhanh\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`Nhanhvn`.`p_products_*`\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_nhanhvn__users": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_nhanhvn__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/base/base_nhanhvn__users.sql", "original_file_path": "models/staging/nhanhvn/base/base_nhanhvn__users.sql", "unique_id": "model.sado_analytics_services.base_nhanhvn__users", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "base", "base_nhanhvn__users"], "alias": "base_nhanhvn__users", "checksum": {"name": "sha256", "checksum": "78c4cf2806e9d6b271af351889e6d576483b8634c3b7c7b0c2c3dfce1df90fde"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.636486, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__users`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            'nhanhvn',\n            'p_users_*'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_users_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.nhanhvn.p_users_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/base/base_nhanhvn__users.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`Nhanhvn`.`p_users_*`\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_nhanhvn__stores": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_nhanhvn__stores", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/base/base_nhanhvn__stores.sql", "original_file_path": "models/staging/nhanhvn/base/base_nhanhvn__stores.sql", "unique_id": "model.sado_analytics_services.base_nhanhvn__stores", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "base", "base_nhanhvn__stores"], "alias": "base_nhanhvn__stores", "checksum": {"name": "sha256", "checksum": "95496f5f033225659ce42ad64bdce17a9761740c177d5e1b8be2c1b8a9192600"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.6438026, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__stores`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            'nhanhvn',\n            'p_stores_*'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_stores_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.nhanhvn.p_stores_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/base/base_nhanhvn__stores.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`Nhanhvn`.`p_stores_*`\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_nhanhvn__bills": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_nhanhvn__bills", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/base/base_nhanhvn__bills.sql", "original_file_path": "models/staging/nhanhvn/base/base_nhanhvn__bills.sql", "unique_id": "model.sado_analytics_services.base_nhanhvn__bills", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "base", "base_nhanhvn__bills"], "alias": "base_nhanhvn__bills", "checksum": {"name": "sha256", "checksum": "11e44e025f4213cb5d0fef00b119e98e7bc4e936cd427b487cdd9f5f79ccc585"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.65129, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__bills`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n    {{source(\n            'nhanhvn',\n            'p_bills_*'\n        )}}\n),\nraw_ as (SELECT\n    * except(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1\n)\n\nSELECT\nsafe_cast(b.id as int64) as bill_id,\nsafe_cast(b.relatedBillId as int64) as related_bill_id,\nsafe_cast(b.depotId as int64) as depot_id,\nsafe_cast(b.orderId as int64) as order_id,\nsafe_cast(b.requirementBillId as int64) as requirement_bill_id,\nsafe_cast(b.inventoryCheckId as int64) as inventory_check_id,\ndate(b.date) as bill_date,\nb.createdDateTime as created_date,\nsafe_cast(b.customerId as int64) as customer_id,\nsafe_cast(b.saleId as int64) as sale_id,\ncase b.type\n    when '2' then 'Xu\u1ea5t kho'\n    when '1' then 'Nh\u1eadp kho'\n    end as bill_type,\ncase b.mode\n    when '1' then 'Giao h\u00e0ng'\n    when '2' then 'B\u00e1n l\u1ebb'\n    when '3' then 'Chuy\u1ec3n kho'\n    when '4' then 'Qu\u00e0 t\u1eb7ng'\n    when '5' then 'Nh\u00e0 cung c\u1ea5p'\n    when '6' then 'B\u00e1n s\u1ec9'\n    when '8' then 'Ki\u1ec3m kho'\n    when '10' then 'Kh\u00e1c'\n    end as bill_mode,\nsafe_cast(b.createdByID as int64) as created_by_id,\nsafe_cast(b.technicalId as int64) as technical_id,\nb.discount,\nb.points,\nb.usedPoints as used_points,\nb.money,\nb.saleBonus as sale_bonus,\nb.moneyTransfer as money_transfer,\nb.cash,\nb.installmentMoney as installment_money,\nb.creditMoney as credit_money,\nb.usedPointsMoney as money_used_points,\nb.returnFee as return_fee,\nb.payment,\nb.description,\nb.supplierId as supplier_id,\nb.couponCode as coupon_code,\nsafe_cast(b.couponValue as int64) as coupon_value,\nsafe_cast(b.customerMoney as int64) as customer_money,\nb.moneyReturn as money_return,\nb.cashAccount as cash_account,\nb.transferAccount as transfer_account,\nb.creditCode as credit_code,\nb.installmentAccount as installment_account,\narray_agg(struct(\n    safe_cast(products.id as int64) as product_id,\n    products.code as product_code,\n    products.name as product_name,\n    safe_cast(products.quantity as int64) as quantity,\n    safe_cast(products.price as int64) as price,\n    safe_cast(products.discount as int64) as discount,\n    safe_cast(products.vat as int64) as vat,\n    safe_cast(products.extendedWarrantyMoney as int64) as extended_warranty_money\n)) as products\nFROM\n    raw_ b, unnest(products) products\n    {{dbt_utils.group_by(36)}}", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_bills_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.nhanhvn.p_bills_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/base/base_nhanhvn__bills.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n    `agile-scheme-394814`.`Nhanhvn`.`p_bills_*`\n),\nraw_ as (SELECT\n    * except(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1\n)\n\nSELECT\nsafe_cast(b.id as int64) as bill_id,\nsafe_cast(b.relatedBillId as int64) as related_bill_id,\nsafe_cast(b.depotId as int64) as depot_id,\nsafe_cast(b.orderId as int64) as order_id,\nsafe_cast(b.requirementBillId as int64) as requirement_bill_id,\nsafe_cast(b.inventoryCheckId as int64) as inventory_check_id,\ndate(b.date) as bill_date,\nb.createdDateTime as created_date,\nsafe_cast(b.customerId as int64) as customer_id,\nsafe_cast(b.saleId as int64) as sale_id,\ncase b.type\n    when '2' then 'Xu\u1ea5t kho'\n    when '1' then 'Nh\u1eadp kho'\n    end as bill_type,\ncase b.mode\n    when '1' then 'Giao h\u00e0ng'\n    when '2' then 'B\u00e1n l\u1ebb'\n    when '3' then 'Chuy\u1ec3n kho'\n    when '4' then 'Qu\u00e0 t\u1eb7ng'\n    when '5' then 'Nh\u00e0 cung c\u1ea5p'\n    when '6' then 'B\u00e1n s\u1ec9'\n    when '8' then 'Ki\u1ec3m kho'\n    when '10' then 'Kh\u00e1c'\n    end as bill_mode,\nsafe_cast(b.createdByID as int64) as created_by_id,\nsafe_cast(b.technicalId as int64) as technical_id,\nb.discount,\nb.points,\nb.usedPoints as used_points,\nb.money,\nb.saleBonus as sale_bonus,\nb.moneyTransfer as money_transfer,\nb.cash,\nb.installmentMoney as installment_money,\nb.creditMoney as credit_money,\nb.usedPointsMoney as money_used_points,\nb.returnFee as return_fee,\nb.payment,\nb.description,\nb.supplierId as supplier_id,\nb.couponCode as coupon_code,\nsafe_cast(b.couponValue as int64) as coupon_value,\nsafe_cast(b.customerMoney as int64) as customer_money,\nb.moneyReturn as money_return,\nb.cashAccount as cash_account,\nb.transferAccount as transfer_account,\nb.creditCode as credit_code,\nb.installmentAccount as installment_account,\narray_agg(struct(\n    safe_cast(products.id as int64) as product_id,\n    products.code as product_code,\n    products.name as product_name,\n    safe_cast(products.quantity as int64) as quantity,\n    safe_cast(products.price as int64) as price,\n    safe_cast(products.discount as int64) as discount,\n    safe_cast(products.vat as int64) as vat,\n    safe_cast(products.extendedWarrantyMoney as int64) as extended_warranty_money\n)) as products\nFROM\n    raw_ b, unnest(products) products\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_nhanhvn__carriers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_nhanhvn__carriers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/base/base_nhanhvn__carriers.sql", "original_file_path": "models/staging/nhanhvn/base/base_nhanhvn__carriers.sql", "unique_id": "model.sado_analytics_services.base_nhanhvn__carriers", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "base", "base_nhanhvn__carriers"], "alias": "base_nhanhvn__carriers", "checksum": {"name": "sha256", "checksum": "61758565a209e06568e7f51c5bd2eb37ede6e5fed432c50780d65b47bc6f3ac7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.6598258, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__carriers`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        {{ source(\n            'nhanhvn',\n            'p_carriers_*'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_carriers_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.nhanhvn.p_carriers_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/base/base_nhanhvn__carriers.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        `agile-scheme-394814`.`Nhanhvn`.`p_carriers_*`\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_nhanhvn__categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_nhanhvn__categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/base/base_nhanhvn__categories.sql", "original_file_path": "models/staging/nhanhvn/base/base_nhanhvn__categories.sql", "unique_id": "model.sado_analytics_services.base_nhanhvn__categories", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "base", "base_nhanhvn__categories"], "alias": "base_nhanhvn__categories", "checksum": {"name": "sha256", "checksum": "3f52a554a17e0d45a6e1e81d73220c071f05e42bd5c4c0c99837454321356686"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.6673324, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_nhanhvn__categories`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over(\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        {{ source(\n            'nhanhvn',\n            'p_categories_*'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_categories_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.nhanhvn.p_categories_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/base/base_nhanhvn__categories.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over(\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        `agile-scheme-394814`.`Nhanhvn`.`p_categories_*`\n)\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_esms__sent_data": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_esms__sent_data", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/esms/stg_esms__sent_data.sql", "original_file_path": "models/staging/esms/stg_esms__sent_data.sql", "unique_id": "model.sado_analytics_services.stg_esms__sent_data", "fqn": ["sado_analytics_services", "staging", "esms", "stg_esms__sent_data"], "alias": "stg_esms__sent_data", "checksum": {"name": "sha256", "checksum": "0584036694e578f2e9a6536a1b072e5502696fe9d8d1e2607ffd468219224dc2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "esms"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "esms"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "esms"]}, "created_at": 1703652759.6760123, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`", "raw_code": "{{ config(\n  tags = ['view','esms']\n) }}\n\n{%set sms_types = {\n  \"1\": \"Tin qu\u1ea3ng c\u00e1o\",\n  \"2\": \"Tin CSKH\",\n  \"8\": \"Tin C\u1ed1 \u0111\u1ecbnh gi\u00e1 r\u1ebb\",\n  \"24\": \"Zalo \u01b0u ti\u00ean\",\n  \"25\": \"Zalo b\u00ecnh th\u01b0\u1eddng\",\n}%}\n\n{%set sms_statuses = {\n  \"1\": \"Ch\u1edd duy\u1ec7t\",\n  \"2\": \"Ch\u1edd g\u1eedi\",\n  \"3\": \"\u0110ang g\u1eedi\",\n  \"4\": \"T\u1eeb ch\u1ed1i\",\n  \"5\": \"Th\u00e0nh c\u00f4ng\",\n}%}\n\nWITH source AS (\n  {{ \n    dbt_utils.deduplicate(\n      relation = source('esms', 'sms_sent_data'), \n      partition_by = 'smsid,phone,senttime',\n      order_by = \"_batched_at desc\",\n      ) \n     }}\n)\nSELECT\n  phone,\n  {{ dbt_utils.generate_surrogate_key(['phone','SmsId','senttime']) }} as sent_id,\n  ReferenceId as reference_id,\n  SellPrice as sms_cost,\n  case sendstatus \n  {%for key,status in sms_statuses.items()%}\n  when {{key}} then \"{{status}}\"\n  {%endfor%} end as sent_status,\n  SentResult as sent_result,\n  parse_datetime('%d/%m/%Y %H:%M:%S',senttime) as sent_time,\n  SmsId as sms_id,\n  case smstype \n  {%for key,type in sms_types.items()%}\n  when {{key}} then '{{type}}'\n  {%endfor%} end as sms_type,\nfrom \nsource", "language": "sql", "refs": [], "sources": [["esms", "sms_sent_data"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate", "macro.dbt_utils.generate_surrogate_key"], "nodes": ["source.sado_analytics_services.esms.sms_sent_data"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/esms/stg_esms__sent_data.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nWITH source AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Esms`.`p__sms_sent_data__*` original\n        group by smsid,phone,senttime\n    )\n)\nSELECT\n  phone,\n  to_hex(md5(cast(coalesce(cast(phone as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(SmsId as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(senttime as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as sent_id,\n  ReferenceId as reference_id,\n  SellPrice as sms_cost,\n  case sendstatus \n  \n  when 1 then \"Ch\u1edd duy\u1ec7t\"\n  \n  when 2 then \"Ch\u1edd g\u1eedi\"\n  \n  when 3 then \"\u0110ang g\u1eedi\"\n  \n  when 4 then \"T\u1eeb ch\u1ed1i\"\n  \n  when 5 then \"Th\u00e0nh c\u00f4ng\"\n   end as sent_status,\n  SentResult as sent_result,\n  parse_datetime('%d/%m/%Y %H:%M:%S',senttime) as sent_time,\n  SmsId as sms_id,\n  case smstype \n  \n  when 1 then 'Tin qu\u1ea3ng c\u00e1o'\n  \n  when 2 then 'Tin CSKH'\n  \n  when 8 then 'Tin C\u1ed1 \u0111\u1ecbnh gi\u00e1 r\u1ebb'\n  \n  when 24 then 'Zalo \u01b0u ti\u00ean'\n  \n  when 25 then 'Zalo b\u00ecnh th\u01b0\u1eddng'\n   end as sms_type,\nfrom \nsource", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__invoicepayments": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__invoicepayments", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__invoicepayments.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__invoicepayments.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__invoicepayments", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__invoicepayments"], "alias": "stg_kiotviet__invoicepayments", "checksum": {"name": "sha256", "checksum": "afd4a9930c6e0a490ede892c442157dfabd3aeb4713c223288d6fa555abc8e38"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_id": {"name": "payment_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_code": {"name": "payment_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_status": {"name": "payment_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_date": {"name": "payment_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_amount": {"name": "payment_amount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccount_id": {"name": "bankaccount_id", "description": "Id t\u00e0i kho\u1ea3n NH tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__invoicepayments.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.411235, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicepayments`", "raw_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    invoices.transaction_type,\nFROM\n    {{ ref('base_kiotViet__invoices') }}\n    invoices\n    left join unnest(payments) payments", "language": "sql", "refs": [{"name": "base_kiotViet__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__invoices"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__invoicepayments.sql", "compiled": true, "compiled_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    invoices.transaction_type,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`\n    invoices\n    left join unnest(payments) payments", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__invoicedetails": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__invoicedetails", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__invoicedetails.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__invoicedetails.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__invoicedetails", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__invoicedetails"], "alias": "stg_kiotviet__invoicedetails", "checksum": {"name": "sha256", "checksum": "efbf6333ad3f180c44c40170bf4d270a07f396a4e9e88903f4629ba37b254d18"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "gi\u00e1 tr\u1ecb gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__invoicedetails.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.402564, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`", "raw_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    invoiceDetails.productId as product_id,\n    invoiceDetails.productCode as product_code,\n    invoiceDetails.quantity,\n    invoiceDetails.price,\n    invoiceDetails.discountRatio as discount_ratio,\n    invoiceDetails.discount,\n    invoiceDetails.subTotal,\n    invoices.transaction_type\nFROM\n    {{ ref('base_kiotViet__invoices') }}\n    invoices\n    left join unnest(invoiceDetails) invoiceDetails", "language": "sql", "refs": [{"name": "base_kiotViet__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__invoices"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__invoicedetails.sql", "compiled": true, "compiled_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    invoiceDetails.productId as product_id,\n    invoiceDetails.productCode as product_code,\n    invoiceDetails.quantity,\n    invoiceDetails.price,\n    invoiceDetails.discountRatio as discount_ratio,\n    invoiceDetails.discount,\n    invoiceDetails.subTotal,\n    invoices.transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`\n    invoices\n    left join unnest(invoiceDetails) invoiceDetails", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__locations": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__locations", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__locations.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__locations.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__locations", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__locations"], "alias": "stg_kiotviet__locations", "checksum": {"name": "sha256", "checksum": "f95b6cbdcd7b853bc81db5ac1029758968ff5cb8a6f8b28ea23c33ae67ca6441"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "", "columns": {"name": {"name": "name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "normalname": {"name": "normalname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "T\u1ec9nh/Th\u00e0nh ph\u1ed1", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "district": {"name": "district", "description": "Qu\u1eadn huy\u1ec7n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__locations.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1703652761.3937745, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__locations`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\nSELECT\n    NAME,\n    normalName,\n    regexp_extract(\n        NAME,\n        r'^(.*)\\s-\\s(?:.*)'\n    ) AS province,\n    regexp_extract(\n        NAME,\n        r'^(?:.*)\\s-\\s(.*)'\n    ) AS district,\nFROM\n    {{ ref('base_kiotViet__locations') }}", "language": "sql", "refs": [{"name": "base_kiotViet__locations", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__locations"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__locations.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    NAME,\n    normalName,\n    regexp_extract(\n        NAME,\n        r'^(.*)\\s-\\s(?:.*)'\n    ) AS province,\n    regexp_extract(\n        NAME,\n        r'^(?:.*)\\s-\\s(.*)'\n    ) AS district,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__locations`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__users": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__users.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__users.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__users", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__users"], "alias": "stg_kiotviet__users", "checksum": {"name": "sha256", "checksum": "a2550dc094ed99a10d81a8aa16a72845b3f0e0093b80e172c5d3a358e5b791ff"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "", "columns": {"user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "given_name": {"name": "given_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "birth_date": {"name": "birth_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__users.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1703652761.4132829, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__users`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\nSELECT\n    id as user_id,\n    userName as user_name,\n    givenName as given_name,\n    birthDate as birth_date,\nFROM\n    {{ ref('base_kiotViet__users') }}", "language": "sql", "refs": [{"name": "base_kiotViet__users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__users.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    id as user_id,\n    userName as user_name,\n    givenName as given_name,\n    birthDate as birth_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__users`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__branches": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__branches", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__branches.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__branches.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__branches", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__branches"], "alias": "stg_kiotviet__branches", "checksum": {"name": "sha256", "checksum": "8ff9f551d1432c758ddb8b9b890894f30b1290b242078c76dea6a5c9c3d208b7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "list of branches on kiotviet", "columns": {"branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "T\u00ean c\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ward_name": {"name": "ward_name", "description": "Ph\u01b0\u1eddng/x\u00e3", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "S\u1ed1 \u0111i\u1ec7n tho\u1ea1i", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "Ng\u00e0y ch\u1ec9nh s\u1eeda", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region": {"name": "region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__branches.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1703652761.4407172, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\nSELECT\n    b.id as branch_id,\n    b.branchName as branch_name,\n    b.address,\n    b.wardName ward_name,\n    regexp_replace(b.contactNumber,r'\\.|\\,|\\s','') as contact_number,\n    b.email,\n    b.createdDate as created_Date,\n    b.modifiedDate as modified_date,\n    coalesce(r.region,\"(Ch\u01b0a ph\u00e2n lo\u1ea1i)\") region,\n    coalesce(r.province,\"(Ch\u01b0a ph\u00e2n lo\u1ea1i)\") province,\nFROM\n    {{ ref('base_kiotViet__branches') }} b\n  left join {{ref('stg_gsheet__regions')}} r on lower(b.branchName) = lower(r.branch_name)", "language": "sql", "refs": [{"name": "base_kiotViet__branches", "package": null, "version": null}, {"name": "stg_gsheet__regions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__branches", "model.sado_analytics_services.stg_gsheet__regions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__branches.sql", "compiled": true, "compiled_code": "\nSELECT\n    b.id as branch_id,\n    b.branchName as branch_name,\n    b.address,\n    b.wardName ward_name,\n    regexp_replace(b.contactNumber,r'\\.|\\,|\\s','') as contact_number,\n    b.email,\n    b.createdDate as created_Date,\n    b.modifiedDate as modified_date,\n    coalesce(r.region,\"(Ch\u01b0a ph\u00e2n lo\u1ea1i)\") region,\n    coalesce(r.province,\"(Ch\u01b0a ph\u00e2n lo\u1ea1i)\") province,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__branches` b\n  left join `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__regions` r on lower(b.branchName) = lower(r.branch_name)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__purchaseorderdetails", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__purchaseorderdetails.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__purchaseorderdetails.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__purchaseorderdetails"], "alias": "stg_kiotviet__purchaseorderdetails", "checksum": {"name": "sha256", "checksum": "00607200a83a461e90031b71ec0183cfe6c21256b17cc1952528a1d1bc1244b1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supplier_id": {"name": "supplier_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "gi\u00e1 tr\u1ecb gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__purchaseorderdetails.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.4045634, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__purchaseorderdetails`", "raw_code": "SELECT\n    purchaseOrders.id AS transaction_id,\n    purchaseOrders.code AS transaction_code,\n    purchaseOrders.purchaseDate AS transaction_date,\n    CASE\n        WHEN purchaseOrders.status = 3 THEN \"\u0110\u00e3 nh\u1eadp h\u00e0ng\"\n        WHEN purchaseOrders.status = 1 THEN \"Phi\u1ebfu t\u1ea1m\"\n        WHEN purchaseOrders.status = 4 THEN \"\u0110\u00e3 hu\u1ef7\"\n    END AS transaction_status,\n    purchaseOrders.branchId as branch_id,\n    purchaseOrders.purchaseById AS employee_id,\n    purchaseOrders.supplierId as supplier_id,\n    purchaseOrderDetails.productId as product_id,\n    purchaseOrderDetails.productCode as product_code,\n    purchaseOrderDetails.quantity,\n    purchaseOrderDetails.price,\n    purchaseOrderDetails.discountRatio as discount_ratio,\n    purchaseOrderDetails.discount,\nFROM\n    {{ ref('base_kiotViet__purchaseOrders') }} purchaseOrders\n    left join unnest(purchaseOrderDetails) purchaseOrderDetails", "language": "sql", "refs": [{"name": "base_kiotViet__purchaseOrders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__purchaseorderdetails.sql", "compiled": true, "compiled_code": "SELECT\n    purchaseOrders.id AS transaction_id,\n    purchaseOrders.code AS transaction_code,\n    purchaseOrders.purchaseDate AS transaction_date,\n    CASE\n        WHEN purchaseOrders.status = 3 THEN \"\u0110\u00e3 nh\u1eadp h\u00e0ng\"\n        WHEN purchaseOrders.status = 1 THEN \"Phi\u1ebfu t\u1ea1m\"\n        WHEN purchaseOrders.status = 4 THEN \"\u0110\u00e3 hu\u1ef7\"\n    END AS transaction_status,\n    purchaseOrders.branchId as branch_id,\n    purchaseOrders.purchaseById AS employee_id,\n    purchaseOrders.supplierId as supplier_id,\n    purchaseOrderDetails.productId as product_id,\n    purchaseOrderDetails.productCode as product_code,\n    purchaseOrderDetails.quantity,\n    purchaseOrderDetails.price,\n    purchaseOrderDetails.discountRatio as discount_ratio,\n    purchaseOrderDetails.discount,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders` purchaseOrders\n    left join unnest(purchaseOrderDetails) purchaseOrderDetails", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__categories.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__categories.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__categories", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__categories"], "alias": "stg_kiotviet__categories", "checksum": {"name": "sha256", "checksum": "58001967893d0bfc8ecfecc09fa8a474a94e1b82d28ce72f2463bb88dbbb3552"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "", "columns": {"sub_productline": {"name": "sub_productline", "description": "Nh\u00e1nh d\u00f2ng h\u00e0ng, level d\u01b0\u1edbi d\u00f2ng h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id": {"name": "category_id", "description": "M\u00e3 nh\u00f3m h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "T\u00ean m\u00e3 nh\u00f3m h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "productline": {"name": "productline", "description": "D\u00f2ng h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_product_mapping": {"name": "ads_product_mapping", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_group": {"name": "product_group", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__categories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1703652761.4003587, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__categories`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\n{% set mapping ={ \"\u00e1o n\u1ec9\" :[\"\u00e1o n\u1ec9 r\u1eddi\"],\n\"\u00e1o thun\" :[\"\u00e1o thun d\u00e0i tay\"],\n\"bomber\" :['\u00e1o bomber'],\n\"polo d\u00e0i tay\" :['\u00e1o polo d\u00e0i tay'],\n\"qu\u1ea7n gi\u00f3 \" :['qu\u1ea7n d\u00e0i th\u1ec3 thao'],\n\"qu\u1ea7n n\u1ec9\" :['qu\u1ea7n n\u1ec9 r\u1eddi'],\n\"polo\" :['b\u1ed9 polo','polo'],\n\"short gi\u00f3\" :['qu\u1ea7n short gi\u00f3'],\n\"short kk\" :['qu\u1ea7n short kaki'],\n\"short tt\" :['qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac'],\n\"smc\" :['s\u01a1 mi c\u1ed9c'],\n\"t-shirt\" :['b\u1ed9 t-shirt','tshirt'],\n\"tanktop\" :['\u00e1o s\u00e1t n\u00e1ch','\u00e1o ba l\u1ed7'],\n\"jeans\" :['qu\u1ea7n jean'],\n\"kaki d\u00e0i\" :['qu\u1ea7n khaki'],\n\"ph\u1ee5 ki\u1ec7n\" :['t\u1ea5t','ba l\u1ed7 l\u00f3t','s\u1ecbp','ph\u1ee5 ki\u1ec7n'],\n\"smd\" :['s\u01a1 mi d\u00e0i'],} %}\n\nSELECT\n    r1.categoryName category,\n    r1.categoryId as category_id,\n    r2.categoryName AS sub_productline,\n    r3.categoryName AS productLine,\n    CASE\n    {% for key,values in mapping.items() %}\n      WHEN LOWER(r2.categoryName) IN ('{{ values|join(\"','\") }}') THEN '{{key}}'\n    {% endfor %}\n    ELSE LOWER(\n      r2.categoryName\n    )\n  END AS ads_product_mapping,\n  CASE\n    WHEN regexp_contains(\n      lower(r3.categoryName),\n      r'thu \u0111\u00f4ng'\n    ) THEN 'H\u00e0ng \u0111\u00f4ng'\n    WHEN regexp_contains(\n      lower(r3.categoryName),\n      r'xu\u00e2n h\u00e8'\n    ) THEN 'H\u00e0ng h\u00e8'\n    ELSE 'Quanh n\u0103m'\n  END AS product_group,\nFROM\n    {{ ref('base_kiotViet__categories') }}\n    r1\n    INNER JOIN {{ ref('base_kiotViet__categories') }}\n    r2\n    ON r1.parentId = r2.categoryId\n    INNER JOIN {{ ref('base_kiotViet__categories') }}\n    r3\n    ON r2.parentId = r3.categoryId", "language": "sql", "refs": [{"name": "base_kiotViet__categories", "package": null, "version": null}, {"name": "base_kiotViet__categories", "package": null, "version": null}, {"name": "base_kiotViet__categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__categories.sql", "compiled": true, "compiled_code": "\n\n\n\nSELECT\n    r1.categoryName category,\n    r1.categoryId as category_id,\n    r2.categoryName AS sub_productline,\n    r3.categoryName AS productLine,\n    CASE\n    \n      WHEN LOWER(r2.categoryName) IN ('\u00e1o n\u1ec9 r\u1eddi') THEN '\u00e1o n\u1ec9'\n    \n      WHEN LOWER(r2.categoryName) IN ('\u00e1o thun d\u00e0i tay') THEN '\u00e1o thun'\n    \n      WHEN LOWER(r2.categoryName) IN ('\u00e1o bomber') THEN 'bomber'\n    \n      WHEN LOWER(r2.categoryName) IN ('\u00e1o polo d\u00e0i tay') THEN 'polo d\u00e0i tay'\n    \n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n d\u00e0i th\u1ec3 thao') THEN 'qu\u1ea7n gi\u00f3 '\n    \n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n n\u1ec9 r\u1eddi') THEN 'qu\u1ea7n n\u1ec9'\n    \n      WHEN LOWER(r2.categoryName) IN ('b\u1ed9 polo','polo') THEN 'polo'\n    \n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n short gi\u00f3') THEN 'short gi\u00f3'\n    \n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n short kaki') THEN 'short kk'\n    \n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac') THEN 'short tt'\n    \n      WHEN LOWER(r2.categoryName) IN ('s\u01a1 mi c\u1ed9c') THEN 'smc'\n    \n      WHEN LOWER(r2.categoryName) IN ('b\u1ed9 t-shirt','tshirt') THEN 't-shirt'\n    \n      WHEN LOWER(r2.categoryName) IN ('\u00e1o s\u00e1t n\u00e1ch','\u00e1o ba l\u1ed7') THEN 'tanktop'\n    \n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n jean') THEN 'jeans'\n    \n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n khaki') THEN 'kaki d\u00e0i'\n    \n      WHEN LOWER(r2.categoryName) IN ('t\u1ea5t','ba l\u1ed7 l\u00f3t','s\u1ecbp','ph\u1ee5 ki\u1ec7n') THEN 'ph\u1ee5 ki\u1ec7n'\n    \n      WHEN LOWER(r2.categoryName) IN ('s\u01a1 mi d\u00e0i') THEN 'smd'\n    \n    ELSE LOWER(\n      r2.categoryName\n    )\n  END AS ads_product_mapping,\n  CASE\n    WHEN regexp_contains(\n      lower(r3.categoryName),\n      r'thu \u0111\u00f4ng'\n    ) THEN 'H\u00e0ng \u0111\u00f4ng'\n    WHEN regexp_contains(\n      lower(r3.categoryName),\n      r'xu\u00e2n h\u00e8'\n    ) THEN 'H\u00e0ng h\u00e8'\n    ELSE 'Quanh n\u0103m'\n  END AS product_group,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__categories`\n    r1\n    INNER JOIN `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__categories`\n    r2\n    ON r1.parentId = r2.categoryId\n    INNER JOIN `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__categories`\n    r3\n    ON r2.parentId = r3.categoryId", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__invoices": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__invoices", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__invoices.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__invoices.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__invoices", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__invoices"], "alias": "stg_kiotviet__invoices", "checksum": {"name": "sha256", "checksum": "ade5ee2a442d0cfe9e1352f29ba613b5108f9bf4d340835b1d2c19120404bd14"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "T\u1ed5ng gi\u00e1 tr\u1ecb sau gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "S\u1ed1 ti\u1ec1n \u0111\u00e3 thanh to\u00e1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "Ng\u00e0y ch\u1ec9nh s\u1eeda", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "gi\u00e1 tr\u1ecb gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__invoices.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.3963513, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`", "raw_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    soldById AS employee_id,\n    customerId as customer_id,\n    orderCode AS reference_transaction_id,\n    total,\n    totalPayment as total_payment,\n    statusValue AS transaction_status,\n    createdDate as created_Date,\n    modifiedDate as modified_date,\n    discountRatio as discount_ratio,\n    discount,\n    transaction_type\nFROM\n    {{ ref('base_kiotViet__invoices') }}", "language": "sql", "refs": [{"name": "base_kiotViet__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__invoices"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__invoices.sql", "compiled": true, "compiled_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    soldById AS employee_id,\n    customerId as customer_id,\n    orderCode AS reference_transaction_id,\n    total,\n    totalPayment as total_payment,\n    statusValue AS transaction_status,\n    createdDate as created_Date,\n    modifiedDate as modified_date,\n    discountRatio as discount_ratio,\n    discount,\n    transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__returnpayments": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__returnpayments", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__returnpayments.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__returnpayments.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__returnpayments", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__returnpayments"], "alias": "stg_kiotviet__returnpayments", "checksum": {"name": "sha256", "checksum": "e5e653e0923b97d670493fc22de16badae38d5f600a5e415f3db10a1a07b7542"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_id": {"name": "payment_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_code": {"name": "payment_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_status": {"name": "payment_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_date": {"name": "payment_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_amount": {"name": "payment_amount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccount_id": {"name": "bankaccount_id", "description": "Id t\u00e0i kho\u1ea3n NH tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__returnpayments.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.4154882, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returnpayments`", "raw_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue AS transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    returns.transaction_type,\nFROM\n    {{ ref('base_kiotViet__returns') }}\n    returns\n    left join unnest(payments) payments", "language": "sql", "refs": [{"name": "base_kiotViet__returns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__returns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__returnpayments.sql", "compiled": true, "compiled_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue AS transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    returns.transaction_type,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`\n    returns\n    left join unnest(payments) payments", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__customers.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__customers.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__customers", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__customers"], "alias": "stg_kiotviet__customers", "checksum": {"name": "sha256", "checksum": "51e8959617f2c4c6ea1d0f33d0ee2c1bd9d3949fe44979ec571b78231fbba8a9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {"joins": [{"join": "stg_kiotviet__branches", "sql_on": "${stg_kiotviet__branches.branch_id} = ${stg_kiotviet__customers.branch_id}", "fields": ["branch_id", "province", "ward", "branch_name", "region"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "customers fact table", "columns": {"branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "T\u00ean c\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_no_customers": {"type": "count_distinct", "label": "Number of customers", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_name": {"name": "customer_name", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "true = Nam, false = N\u1eef, Null = Ch\u01b0a x\u00e1c \u0111\u1ecbnh", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "birth_month": {"name": "birth_month", "description": "Th\u00e1ng sinh nh\u1eadt", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "S\u1ed1 \u0111i\u1ec7n tho\u1ea1i", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_phones": {"type": "count_distinct", "label": "No. Phones", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_type": {"name": "customer_type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_groups": {"name": "customer_groups", "description": "", "meta": {"dimension": {"type": "string", "sql": "case \n  when lower(customer_groups) like '%b\u1ea1c%' then 'H\u1ea1ng B\u1ea1c'\n  when lower(customer_groups) like '%v\u00e0ng%' then 'H\u1ea1ng V\u00e0ng'\n  when lower(customer_groups) like '%kim c\u01b0\u01a1ng%' then 'H\u1ea1ng Kim C\u01b0\u01a1ng'\n  when lower(customer_groups) like '%vip%' then 'H\u1ea1ng VIP'\n  else 'H\u1ea1ng th\u01b0\u1eddng' end"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "debt": {"name": "debt", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_invoiced": {"name": "total_invoiced", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_invoiced": {"type": "average", "label": "Avg Invoiced Value", "group_label": "Customer Metrics", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_point": {"name": "total_point", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_points": {"type": "sum", "label": "Total Points", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rewardpoint": {"name": "rewardpoint", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_rewarded_points": {"type": "sum", "label": "Total Rewarded Points", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_recency_group": {"name": "customer_recency_group", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "birth_date": {"name": "birth_date", "description": "", "meta": {"dimension": {"type": "timestamp"}, "metrics": {"m_bday": {"type": "count", "label": "num_bday", "group_label": "Customer Metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_revenue": {"name": "total_revenue", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_revenue": {"type": "average", "label": "Avg Revenue", "group_label": "Customer Metrics", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_kiotviet__branches", "sql_on": "${stg_kiotviet__branches.branch_id} = ${stg_kiotviet__customers.branch_id}", "fields": ["branch_id", "province", "ward", "branch_name", "region"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__customers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_kiotviet__branches", "sql_on": "${stg_kiotviet__branches.branch_id} = ${stg_kiotviet__customers.branch_id}", "fields": ["branch_id", "province", "ward", "branch_name", "region"]}]}, "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1703652761.4625356, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers`", "raw_code": "{{ config(\n    tags = ['view', 'dimension','kiotviet']\n) }}\n\nWITH staging AS (\n\n    SELECT\n        C.id AS customer_id,\n        C.code AS customer_code,\n        C.NAME AS customer_name,\n        C.gender,\n        EXTRACT(\n            MONTH\n            FROM\n                C.birthDate\n        ) AS birth_month,\n        C.birthDate AS birth_date,\n        C.contactNumber AS contact_number,\n        C.branchId AS branch_id,\n        C.TYPE AS customer_type,\n        C.groups AS customer_groups,\n        C.debt,\n        C.totalInvoiced AS total_invoiced,\n        C.totalPoint AS total_point,\n        C.totalRevenue AS total_revenue,\n        C.rewardPoint AS rewardpoint,\n        C.createdDate AS created_date,\n        B.branchName as branch_name\n    FROM\n        {{ ref('base_kiotViet__customers') }} C\n    left join  {{ref('base_kiotViet__branches')}} B on C.branchId = B.id\n)\nSELECT\n    DISTINCT staging.customer_id,\n    staging.customer_name,\n    staging.gender,\n    staging.birth_month,\n    staging.birth_date,\n    staging.contact_number,\n    staging.branch_id,\n    staging.customer_type,\n    staging.customer_groups,\n    staging.debt,\n    staging.total_invoiced,\n    staging.total_point,\n    staging.total_revenue,\n    staging.rewardpoint,\n    staging.created_date,\n    staging.branch_name,\n    CASE\n        WHEN DATE_TRUNC(DATE(staging.created_date), MONTH) < DATE_TRUNC(CURRENT_DATE(), MONTH) THEN 'old'\n        ELSE 'new'END AS customer_recency_group,\n        FROM\n            staging", "language": "sql", "refs": [{"name": "base_kiotViet__customers", "package": null, "version": null}, {"name": "base_kiotViet__branches", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__customers", "model.sado_analytics_services.base_kiotViet__branches"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__customers.sql", "compiled": true, "compiled_code": "\n\nWITH staging AS (\n\n    SELECT\n        C.id AS customer_id,\n        C.code AS customer_code,\n        C.NAME AS customer_name,\n        C.gender,\n        EXTRACT(\n            MONTH\n            FROM\n                C.birthDate\n        ) AS birth_month,\n        C.birthDate AS birth_date,\n        C.contactNumber AS contact_number,\n        C.branchId AS branch_id,\n        C.TYPE AS customer_type,\n        C.groups AS customer_groups,\n        C.debt,\n        C.totalInvoiced AS total_invoiced,\n        C.totalPoint AS total_point,\n        C.totalRevenue AS total_revenue,\n        C.rewardPoint AS rewardpoint,\n        C.createdDate AS created_date,\n        B.branchName as branch_name\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__customers` C\n    left join  `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__branches` B on C.branchId = B.id\n)\nSELECT\n    DISTINCT staging.customer_id,\n    staging.customer_name,\n    staging.gender,\n    staging.birth_month,\n    staging.birth_date,\n    staging.contact_number,\n    staging.branch_id,\n    staging.customer_type,\n    staging.customer_groups,\n    staging.debt,\n    staging.total_invoiced,\n    staging.total_point,\n    staging.total_revenue,\n    staging.rewardpoint,\n    staging.created_date,\n    staging.branch_name,\n    CASE\n        WHEN DATE_TRUNC(DATE(staging.created_date), MONTH) < DATE_TRUNC(CURRENT_DATE(), MONTH) THEN 'old'\n        ELSE 'new'END AS customer_recency_group,\n        FROM\n            staging", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__returns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__returns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__returns.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__returns.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__returns", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__returns"], "alias": "stg_kiotviet__returns", "checksum": {"name": "sha256", "checksum": "5b25658b5dbdec98b2bb5ead377355940d38543a8e6dc9b0f6b27ef1286f869a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "T\u1ed5ng gi\u00e1 tr\u1ecb sau gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "S\u1ed1 ti\u1ec1n \u0111\u00e3 thanh to\u00e1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_fee": {"name": "return_fee", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "salechannel_id": {"name": "salechannel_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "Ng\u00e0y ch\u1ec9nh s\u1eeda", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_fee_ratio": {"name": "return_fee_ratio", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_discount": {"name": "return_discount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__returns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.4657254, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns`", "raw_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    invoiceId AS reference_transaction_id,\n    returnDate AS transaction_date,\n    branchId  as branch_id,\n    receivedById AS employee_id,\n    customerId as customer_id,\n    returnTotal AS total,\n    returnFeeRatio as return_fee_ratio,\n    returnDiscount as return_discount,\n    totalPayment as total_payment,\n    returnFee as return_fee,\n    statusValue AS transaction_status,\n    saleChannelId as salechannel_id,\n    createdDate as created_date ,\n    modifiedDate as modified_date,\n    transaction_type\nFROM\n    {{ ref('base_kiotViet__returns') }}", "language": "sql", "refs": [{"name": "base_kiotViet__returns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__returns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__returns.sql", "compiled": true, "compiled_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    invoiceId AS reference_transaction_id,\n    returnDate AS transaction_date,\n    branchId  as branch_id,\n    receivedById AS employee_id,\n    customerId as customer_id,\n    returnTotal AS total,\n    returnFeeRatio as return_fee_ratio,\n    returnDiscount as return_discount,\n    totalPayment as total_payment,\n    returnFee as return_fee,\n    statusValue AS transaction_status,\n    saleChannelId as salechannel_id,\n    createdDate as created_date ,\n    modifiedDate as modified_date,\n    transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__products": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__products", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__products.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__products.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__products", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__products"], "alias": "stg_kiotviet__products", "checksum": {"name": "sha256", "checksum": "6aad84aacb4e8c22a5646b1849cb513836c69fee12269860b7619af7a3ab8b38"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id": {"name": "category_id", "description": "M\u00e3 nh\u00f3m h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_name": {"name": "product_name", "description": "T\u00ean s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "class_name": {"name": "class_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "class_code": {"name": "class_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributes": {"name": "attributes", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_productline": {"name": "sub_productline", "description": "Nh\u00e1nh d\u00f2ng h\u00e0ng, level d\u01b0\u1edbi d\u00f2ng h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "T\u00ean m\u00e3 nh\u00f3m h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "productline": {"name": "productline", "description": "D\u00f2ng h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trademarkname": {"name": "trademarkname", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_group": {"name": "product_group", "description": "", "meta": {"dimension": {"type": "string", "label": "Product group"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_product_mapping": {"name": "ads_product_mapping", "description": "", "meta": {"dimension": {"type": "string", "label": "Ads products"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__products.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1703652761.4459538, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`", "raw_code": "{{ config(\n  tags = ['view', 'dimension','kiotviet']\n) }}\n\n{% set mapping ={ \"\u00e1o n\u1ec9\" :[\"\u00e1o n\u1ec9 r\u1eddi\"],\n\"\u00e1o thun\" :[\"\u00e1o thun d\u00e0i tay\"],\n\"bomber\" :['\u00e1o bomber'],\n\"polo d\u00e0i tay\" :['\u00e1o polo d\u00e0i tay'],\n\"qu\u1ea7n gi\u00f3 \" :['qu\u1ea7n d\u00e0i th\u1ec3 thao'],\n\"qu\u1ea7n n\u1ec9\" :['qu\u1ea7n n\u1ec9 r\u1eddi'],\n\"polo\" :['b\u1ed9 polo','polo'],\n\"short gi\u00f3\" :['qu\u1ea7n short gi\u00f3'],\n\"short kk\" :['qu\u1ea7n short kaki'],\n\"short tt\" :['qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac'],\n\"smc\" :['s\u01a1 mi c\u1ed9c'],\n\"t-shirt\" :['b\u1ed9 t-shirt','tshirt'],\n\"tanktop\" :['\u00e1o s\u00e1t n\u00e1ch','\u00e1o ba l\u1ed7'],\n\"jeans\" :['qu\u1ea7n jean'],\n\"kaki d\u00e0i\" :['qu\u1ea7n khaki'],\n\"ph\u1ee5 ki\u1ec7n\" :['t\u1ea5t','ba l\u1ed7 l\u00f3t','s\u1ecbp','ph\u1ee5 ki\u1ec7n'],\n\"smd\" :['s\u01a1 mi d\u00e0i'],} %}\n\nSELECT\n  p.id AS product_id,\n  p.categoryId AS category_id,\n  p.fullName AS product_name,\n  REGEXP_REPLACE(\n    p.fullName,\n    r'\\s\\-.*$',\n    ''\n  ) AS class_name,\n  p.code AS product_code,\n  REGEXP_REPLACE(\n    p.code,\n    r'\\d{2}$',\n    ''\n  ) AS class_code,\n  p.trademarkName AS trademarkName,\n  p.isActive AS is_active,\n  p.type,\n  p.attributes,\n  C.sub_productline,\n  C.category,\n  C.productline,\n  c.ads_product_mapping,\n  C.product_group,\nFROM\n  {{ ref('base_kiotViet__products') }}\n  p\n  INNER JOIN {{ ref('stg_kiotviet__categories') }} AS C\n  ON p.categoryId = C.category_id", "language": "sql", "refs": [{"name": "base_kiotViet__products", "package": null, "version": null}, {"name": "stg_kiotviet__categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__products", "model.sado_analytics_services.stg_kiotviet__categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__products.sql", "compiled": true, "compiled_code": "\n\n\n\nSELECT\n  p.id AS product_id,\n  p.categoryId AS category_id,\n  p.fullName AS product_name,\n  REGEXP_REPLACE(\n    p.fullName,\n    r'\\s\\-.*$',\n    ''\n  ) AS class_name,\n  p.code AS product_code,\n  REGEXP_REPLACE(\n    p.code,\n    r'\\d{2}$',\n    ''\n  ) AS class_code,\n  p.trademarkName AS trademarkName,\n  p.isActive AS is_active,\n  p.type,\n  p.attributes,\n  C.sub_productline,\n  C.category,\n  C.productline,\n  c.ads_product_mapping,\n  C.product_group,\nFROM\n  `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__products`\n  p\n  INNER JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__categories` AS C\n  ON p.categoryId = C.category_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__returndetails": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__returndetails", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__returndetails.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__returndetails.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__returndetails", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__returndetails"], "alias": "stg_kiotviet__returndetails", "checksum": {"name": "sha256", "checksum": "c6b01868eef467bdde9075271769b21083d53d811f07581d9059893efb840914"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "salechannel_id": {"name": "salechannel_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__returndetails.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.3917181, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`", "raw_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue as transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    returns.saleChannelId as salechannel_id,\n    returnDetails.productId as product_id,\n    returnDetails.productCode as product_code,\n    returnDetails.quantity,\n    returnDetails.price,\n    returnDetails.subTotal,\n    returns.transaction_type\nFROM\n    {{ ref('base_kiotViet__returns') }}\n    returns\n    left join unnest(returnDetails) returnDetails", "language": "sql", "refs": [{"name": "base_kiotViet__returns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__returns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__returndetails.sql", "compiled": true, "compiled_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue as transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    returns.saleChannelId as salechannel_id,\n    returnDetails.productId as product_id,\n    returnDetails.productCode as product_code,\n    returnDetails.quantity,\n    returnDetails.price,\n    returnDetails.subTotal,\n    returns.transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`\n    returns\n    left join unnest(returnDetails) returnDetails", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__suppliers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__suppliers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__suppliers.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__suppliers.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__suppliers", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__suppliers"], "alias": "stg_kiotviet__suppliers", "checksum": {"name": "sha256", "checksum": "1dbaef14fa7876bb9c6c1cbd17dd0e784856d283cf45ccb0a4c827785b779217"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "", "columns": {"supplier_id": {"name": "supplier_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supplier_name": {"name": "supplier_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supplier_code": {"name": "supplier_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__suppliers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1703652761.4381447, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__suppliers`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\nSELECT\n    distinct\n    supplierId as supplier_id,\n    supplierName as supplier_name,\n    supplierCode as supplier_code\nFROM\n    {{ ref('base_kiotViet__purchaseOrders') }}", "language": "sql", "refs": [{"name": "base_kiotViet__purchaseOrders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__suppliers.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    distinct\n    supplierId as supplier_id,\n    supplierName as supplier_name,\n    supplierCode as supplier_code\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__bankaccounts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__bankaccounts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__bankaccounts.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__bankaccounts.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__bankaccounts", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__bankaccounts"], "alias": "stg_kiotviet__bankaccounts", "checksum": {"name": "sha256", "checksum": "6a39796873d79c56ec032309f4d6ea885c7dc2a82bd32c9520d82636859a9193"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "list of bank accounts on kiotviet", "columns": {"bankaccount_id": {"name": "bankaccount_id", "description": "Id t\u00e0i kho\u1ea3n NH tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccount_name": {"name": "bankaccount_name", "description": "T\u00ean t\u00e0i kho\u1ea3n tr\u00ean Kiot", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotViet__bankaccounts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1703652761.406409, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__bankaccounts`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\nSELECT\n    id AS bankAccount_id,\n    bankName as bankAccount_name,\nFROM\n    {{ ref('base_kiotViet__bankAccounts') }}", "language": "sql", "refs": [{"name": "base_kiotViet__bankAccounts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__bankAccounts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__bankaccounts.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    id AS bankAccount_id,\n    bankName as bankAccount_name,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__bankAccounts`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__purchaseorders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__purchaseorders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__purchaseorders.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__purchaseorders.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__purchaseorders", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__purchaseorders"], "alias": "stg_kiotviet__purchaseorders", "checksum": {"name": "sha256", "checksum": "dd1f23185ae746e629614b7610588288225e03cef186652f23ee00d22b67eb3d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supplier_id": {"name": "supplier_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_type": {"name": "partner_type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "T\u1ed5ng gi\u00e1 tr\u1ecb sau gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "S\u1ed1 ti\u1ec1n \u0111\u00e3 thanh to\u00e1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "gi\u00e1 tr\u1ecb gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__purchaseorders.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.387393, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__purchaseorders`", "raw_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    purchaseById AS employee_id,\n    supplierId as supplier_id,\n    partnerType as partner_type,\n    total,\n    totalPayment as total_payment,\n    discount,\n    discountRatio as discount_ratio ,\n    CASE\n        WHEN status = 3 THEN \"\u0110\u00e3 nh\u1eadp h\u00e0ng\"\n        WHEN status = 1 THEN \"Phi\u1ebfu t\u1ea1m\"\n        WHEN status = 4 THEN \"\u0110\u00e3 hu\u1ef7\"\n    END AS transaction_status,\n    createdDate as created_date,\nFROM\n    {{ ref('base_kiotViet__purchaseOrders') }}", "language": "sql", "refs": [{"name": "base_kiotViet__purchaseOrders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__purchaseorders.sql", "compiled": true, "compiled_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    purchaseById AS employee_id,\n    supplierId as supplier_id,\n    partnerType as partner_type,\n    total,\n    totalPayment as total_payment,\n    discount,\n    discountRatio as discount_ratio ,\n    CASE\n        WHEN status = 3 THEN \"\u0110\u00e3 nh\u1eadp h\u00e0ng\"\n        WHEN status = 1 THEN \"Phi\u1ebfu t\u1ea1m\"\n        WHEN status = 4 THEN \"\u0110\u00e3 hu\u1ef7\"\n    END AS transaction_status,\n    createdDate as created_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__invoices": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__invoices", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__invoices.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__invoices.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__invoices", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__invoices"], "alias": "base_kiotViet__invoices", "checksum": {"name": "sha256", "checksum": "cec53791374ba3b7f0b706e06b9a42cedeac6f09e6001b0783de82a7aa9de24b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uuid": {"name": "uuid", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code": {"name": "code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "purchasedate": {"name": "purchasedate", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branchid": {"name": "branchid", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "soldbyid": {"name": "soldbyid", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customerid": {"name": "customerid", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ordercode": {"name": "ordercode", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "totalpayment": {"name": "totalpayment", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "statusvalue": {"name": "statusvalue", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modifieddate": {"name": "modifieddate", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discountratio": {"name": "discountratio", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payments": {"name": "payments", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoicedetails": {"name": "invoicedetails", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/base/base_kiotViet__invoices.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.473921, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`", "raw_code": "WITH source AS (\n    SELECT\n        * except(invoiceDelivery,invoiceDetails),\n        invoiceDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_invoices_list_*'\n        ) }} invoice1\n    union all \n    select * except(invoiceDelivery,invoice_details),\n    invoice_details as invoiceDetails\n    from {{ source(\n            'kiotViet',\n            'p_invoices_list2_*'\n        ) }} \n    UNION ALL\n    SELECT\n        * except(invoiceDelivery,invoiceDetails),\n        invoiceDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_webhook_invoice_update'\n        ) }}\n),\nraw_ AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC,\n                modifiedDate DESC\n        ) AS rn_\n    FROM\n        source\n)\nSELECT\n    id,\n    uuid,\n    code,\n    purchaseDate,\n    branchId,\n    soldById,\n    customerId,\n    orderCode,\n    total,\n    totalPayment,\n    statusValue,\n    COALESCE(first_value(createdDate ignore nulls) over (partition by id order by _batched_at asc), \n    first_value(_batched_at) over (partition by id order by _batched_at asc)\n     ) createdDate ,\n    modifiedDate,\n    discountRatio,\n    discount,\n    payments,\n    invoiceDetails,\n    \"invoice\" as transaction_type,\nFROM\n    raw_\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_invoices_list_*"], ["kiotViet", "p_invoices_list2_*"], ["kiotViet", "p_webhook_invoice_update"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_invoices_list_*", "source.sado_analytics_services.kiotViet.p_invoices_list2_*", "source.sado_analytics_services.kiotViet.p_webhook_invoice_update"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__invoices.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        * except(invoiceDelivery,invoiceDetails),\n        invoiceDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_invoices_list_*` invoice1\n    union all \n    select * except(invoiceDelivery,invoice_details),\n    invoice_details as invoiceDetails\n    from `agile-scheme-394814`.`KiotViet`.`p_invoices_list2_*` \n    UNION ALL\n    SELECT\n        * except(invoiceDelivery,invoiceDetails),\n        invoiceDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_webhook_invoice_update`\n),\nraw_ AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC,\n                modifiedDate DESC\n        ) AS rn_\n    FROM\n        source\n)\nSELECT\n    id,\n    uuid,\n    code,\n    purchaseDate,\n    branchId,\n    soldById,\n    customerId,\n    orderCode,\n    total,\n    totalPayment,\n    statusValue,\n    COALESCE(first_value(createdDate ignore nulls) over (partition by id order by _batched_at asc), \n    first_value(_batched_at) over (partition by id order by _batched_at asc)\n     ) createdDate ,\n    modifiedDate,\n    discountRatio,\n    discount,\n    payments,\n    invoiceDetails,\n    \"invoice\" as transaction_type,\nFROM\n    raw_\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__customers.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__customers.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__customers", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__customers"], "alias": "base_kiotViet__customers", "checksum": {"name": "sha256", "checksum": "f78810e74a8bb40ff3decc0294a0a31a9854df825223610a199ca9bc63251968"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.833053, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__customers`", "raw_code": "WITH source AS (\n    SELECT\n        *\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_customers_list_*'\n        ) }}\n    UNION ALL\n    SELECT\n        *\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_webhook_customer_update'\n        ) }}\n),\nraw_ AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC,\n                modifiedDate DESC\n        ) AS rn_\n    FROM\n        source\n)\nSELECT\n    id,\n    code,\n    NAME,\n    gender,\n    birthDate,\n    contactNumber,\n    branchId,\n    TYPE,\n    raw_.groups,\n    debt,\n    totalInvoiced,\n    totalPoint,\n    totalRevenue,\n    rewardPoint,\n    createdDate,\n    modifiedDate,\nFROM\n    raw_\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_customers_list_*"], ["kiotViet", "p_webhook_customer_update"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_customers_list_*", "source.sado_analytics_services.kiotViet.p_webhook_customer_update"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__customers.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_customers_list_*`\n    UNION ALL\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_webhook_customer_update`\n),\nraw_ AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC,\n                modifiedDate DESC\n        ) AS rn_\n    FROM\n        source\n)\nSELECT\n    id,\n    code,\n    NAME,\n    gender,\n    birthDate,\n    contactNumber,\n    branchId,\n    TYPE,\n    raw_.groups,\n    debt,\n    totalInvoiced,\n    totalPoint,\n    totalRevenue,\n    rewardPoint,\n    createdDate,\n    modifiedDate,\nFROM\n    raw_\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__priceBooks": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__priceBooks", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__priceBooks.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__priceBooks.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__priceBooks", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__priceBooks"], "alias": "base_kiotViet__priceBooks", "checksum": {"name": "sha256", "checksum": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.8410661, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__priceBooks`", "raw_code": "", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__locations": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__locations", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__locations.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__locations.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__locations", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__locations"], "alias": "base_kiotViet__locations", "checksum": {"name": "sha256", "checksum": "e1540d85eb38d77c50e4ef3c56b8b79ac4260ad5985674d94f4d53299b66a942"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.8472452, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__locations`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_locations_list_*'\n        ) }}\n)\nSELECT\n    id,\n    name,\n    normalName\nfrom source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_locations_list_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_locations_list_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__locations.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_locations_list_*`\n)\nSELECT\n    id,\n    name,\n    normalName\nfrom source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__branches": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__branches", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__branches.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__branches.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__branches", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__branches"], "alias": "base_kiotViet__branches", "checksum": {"name": "sha256", "checksum": "8b4ddb6bfd97a2e3b2bb194d3fff3fa3271482fd10ffd1e9c089694566ecb5ca"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branchname": {"name": "branchname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "locationname": {"name": "locationname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wardname": {"name": "wardname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contactnumber": {"name": "contactnumber", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modifieddate": {"name": "modifieddate", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/base/base_kiotViet__branches.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.4771793, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__branches`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                modifiedDate DESC,\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_branches_list_*'\n        ) }}\n)\nSELECT\n    id,\n    branchName,\n    address,\n    locationName,\n    wardName,\n    contactNumber,\n    email,\n    createdDate,\n    modifiedDate\nfrom source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_branches_list_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_branches_list_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__branches.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                modifiedDate DESC,\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_branches_list_*`\n)\nSELECT\n    id,\n    branchName,\n    address,\n    locationName,\n    wardName,\n    contactNumber,\n    email,\n    createdDate,\n    modifiedDate\nfrom source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__purchaseOrders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__purchaseOrders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__purchaseOrders.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__purchaseOrders.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__purchaseOrders", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__purchaseOrders"], "alias": "base_kiotViet__purchaseOrders", "checksum": {"name": "sha256", "checksum": "6d089aa23a19a73550ccb6f50359e665c7a6ba0f29fbb6f789841ebddea5ba18"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.8633132, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders`", "raw_code": "WITH source AS (\n    SELECT\n        *\n    EXCEPT(purchaseOrderDetails),\n        purchaseOrderDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_purchaseorders_list_*'\n        ) }}\n    UNION ALL\n    SELECT\n        *\n    EXCEPT(purchaseOrder_details),\n        purchaseOrder_details AS purchaseOrderDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_purchaseorders_list2_*'\n        ) }}\n),\nraw_ AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n        from source\n)\nSELECT\n    id,\n    code,\n    purchaseDate,\n    branchId,\n    purchaseById,\n    supplierId,\n    supplierName,\n    supplierCode,\n    partnerType,\n    total,\n    totalPayment,\n    discount,\n    discountRatio,\n    status,\n    createdDate,\n    purchaseOrderDetails,\nFROM\n    raw_\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_purchaseorders_list_*"], ["kiotViet", "p_purchaseorders_list2_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_purchaseorders_list_*", "source.sado_analytics_services.kiotViet.p_purchaseorders_list2_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__purchaseOrders.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *\n    EXCEPT(purchaseOrderDetails),\n        purchaseOrderDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list_*`\n    UNION ALL\n    SELECT\n        *\n    EXCEPT(purchaseOrder_details),\n        purchaseOrder_details AS purchaseOrderDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list2_*`\n),\nraw_ AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n        from source\n)\nSELECT\n    id,\n    code,\n    purchaseDate,\n    branchId,\n    purchaseById,\n    supplierId,\n    supplierName,\n    supplierCode,\n    partnerType,\n    total,\n    totalPayment,\n    discount,\n    discountRatio,\n    status,\n    createdDate,\n    purchaseOrderDetails,\nFROM\n    raw_\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__bankAccounts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__bankAccounts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__bankAccounts.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__bankAccounts.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__bankAccounts", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__bankAccounts"], "alias": "base_kiotViet__bankAccounts", "checksum": {"name": "sha256", "checksum": "25e287d5e58151fc76679bc192c098716ce5f5cb32183a537f7f83c0e494fe33"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.8713143, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__bankAccounts`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_bankAccounts_list_*'\n        ) }}\n)\nSELECT\n    id,\n    bankName,\n    accountNumber,\n    description,\n    createdDate,\n    modifiedDate\nfrom source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_bankAccounts_list_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_bankAccounts_list_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__bankAccounts.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_bankAccounts_list_*`\n)\nSELECT\n    id,\n    bankName,\n    accountNumber,\n    description,\n    createdDate,\n    modifiedDate\nfrom source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__products": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__products", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__products.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__products.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__products", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__products"], "alias": "base_kiotViet__products", "checksum": {"name": "sha256", "checksum": "7ee53f698fe05e89ac607ee4e2bfec58b75d8c85a22fd06cd96044f0269d83b4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.8788176, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__products`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                modifiedDate DESC,\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_products_list_*'\n        ) }}\n)\nSELECT\n    id,\n    categoryId,\n    fullName,\n    code,\n    tradeMarkName,\n    isActive,\n    type,\n    attributes\nfrom source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_products_list_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_products_list_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__products.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                modifiedDate DESC,\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_products_list_*`\n)\nSELECT\n    id,\n    categoryId,\n    fullName,\n    code,\n    tradeMarkName,\n    isActive,\n    type,\n    attributes\nfrom source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__users": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__users.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__users.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__users", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__users"], "alias": "base_kiotViet__users", "checksum": {"name": "sha256", "checksum": "f67a4ab52a2cc9fbc9123fd87b3ec4f724ff1821e869f92a804d65cb0a292678"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.8865836, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__users`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_users_list_*'\n        ) }}\n)\nSELECT\n    id,\n    userName,\n    givenName,\n    birthDate,\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_users_list_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_users_list_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__users.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_users_list_*`\n)\nSELECT\n    id,\n    userName,\n    givenName,\n    birthDate,\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__categories.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__categories.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__categories", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__categories"], "alias": "base_kiotViet__categories", "checksum": {"name": "sha256", "checksum": "35be4131ebeb064678575c2c722249c2c571d1eb744416cc832d922565450bab"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652759.8957474, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__categories`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY categoryId\n            ORDER BY\n                modifiedDate DESC,\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_categories_list_*'\n        ) }}\n)\nSELECT\n    categoryId,\n    parentId,\n    categoryName,\nfrom source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_categories_list_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_categories_list_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__categories.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY categoryId\n            ORDER BY\n                modifiedDate DESC,\n                _batched_at DESC\n        ) AS rn_\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_categories_list_*`\n)\nSELECT\n    categoryId,\n    parentId,\n    categoryName,\nfrom source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__returns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__returns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__returns.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__returns.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__returns", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__returns"], "alias": "base_kiotViet__returns", "checksum": {"name": "sha256", "checksum": "7b8b804710cb79121635bb473fbd832da3e7f345d435a2d8ba2fb0c2f0a3811d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "code": {"name": "code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "invoiceid": {"name": "invoiceid", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "returndate": {"name": "returndate", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branchid": {"name": "branchid", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receivedbyid": {"name": "receivedbyid", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customerid": {"name": "customerid", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "returntotal": {"name": "returntotal", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "returndiscount": {"name": "returndiscount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "totalpayment": {"name": "totalpayment", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "returnfee": {"name": "returnfee", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "returnfeeratio": {"name": "returnfeeratio", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "salechannelid": {"name": "salechannelid", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "statusvalue": {"name": "statusvalue", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "createddate": {"name": "createddate", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modifieddate": {"name": "modifieddate", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payments": {"name": "payments", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "returndetails": {"name": "returndetails", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/base/base_kiotViet__returns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.4834368, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`", "raw_code": "WITH source AS (\n    SELECT\n        * except(returnDetails),\n        returnDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_returns_list_*'\n        ) }}\n        union all \n        SELECT\n        * except(return_details),\n        return_details as returnDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_returns_list2_*'\n        ) }}\n\n),\nraw_ as (\n    select * ,\n    ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC,\n                modifiedDate DESC\n        ) AS rn_\n        from source\n)\nSELECT\n    id,\n    code,\n    invoiceId,\n    returnDate,\n    branchId,\n    receivedById,\n    customerId,\n    returnTotal,\n    returnDiscount,\n    totalPayment,\n    returnFee,\n    returnFeeRatio,\n    saleChannelId,\n    statusValue,\n    createdDate,\n    modifiedDate,\n    payments,\n    returnDetails,\n    \"return\" as transaction_type\nFROM\n    raw_\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["kiotViet", "p_returns_list_*"], ["kiotViet", "p_returns_list2_*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.kiotViet.p_returns_list_*", "source.sado_analytics_services.kiotViet.p_returns_list2_*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__returns.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        * except(returnDetails),\n        returnDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_returns_list_*`\n        union all \n        SELECT\n        * except(return_details),\n        return_details as returnDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_returns_list2_*`\n\n),\nraw_ as (\n    select * ,\n    ROW_NUMBER() over (\n            PARTITION BY id\n            ORDER BY\n                _batched_at DESC,\n                modifiedDate DESC\n        ) AS rn_\n        from source\n)\nSELECT\n    id,\n    code,\n    invoiceId,\n    returnDate,\n    branchId,\n    receivedById,\n    customerId,\n    returnTotal,\n    returnDiscount,\n    totalPayment,\n    returnFee,\n    returnFeeRatio,\n    saleChannelId,\n    statusValue,\n    createdDate,\n    modifiedDate,\n    payments,\n    returnDetails,\n    \"return\" as transaction_type\nFROM\n    raw_\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__tags": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__tags", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__tags.sql", "original_file_path": "models/staging/pancake/stg_pancake__tags.sql", "unique_id": "model.sado_analytics_services.stg_pancake__tags", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__tags"], "alias": "stg_pancake__tags", "checksum": {"name": "sha256", "checksum": "3c32c28732d7bf6c8161226868381845524d88f6b6df67c1dd3fda7516b37d24"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimensions", "pancake"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimensions", "pancake"], "description": "", "columns": {"tag_id": {"name": "tag_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tag_value": {"name": "tag_value", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__tags.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimensions", "pancake"]}, "created_at": 1703652761.5269928, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__tags`", "raw_code": "{{\n  config(\n    tags=['view', 'dimensions','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'tags'), partition_by = 'id', order_by = \"_batched_at desc\",) }}\n)\n\nSELECT\ndistinct\n    source.id AS tag_id,\n    source.text AS tag_value,\n    ref.category\nFROM\n    source\n    left join {{ref(\"stg_gsheet__pancake_tags\")}} ref on source.text = ref.tag_value", "language": "sql", "refs": [{"name": "stg_gsheet__pancake_tags", "package": null, "version": null}], "sources": [["pancake", "tags"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.tags", "model.sado_analytics_services.stg_gsheet__pancake_tags"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__tags.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_tags__*` original\n        group by id\n    )\n)\n\nSELECT\ndistinct\n    source.id AS tag_id,\n    source.text AS tag_value,\n    ref.category\nFROM\n    source\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__pancake_tags` ref on source.text = ref.tag_value", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__user_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__user_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__user_stats.sql", "original_file_path": "models/staging/pancake/stg_pancake__user_stats.sql", "unique_id": "model.sado_analytics_services.stg_pancake__user_stats", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__user_stats"], "alias": "stg_pancake__user_stats", "checksum": {"name": "sha256", "checksum": "96403b592ee114d070b965ba2b2abbd946e756d48d5b78624daacec35c2f8f3e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "fact", "pancake"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__user_stats.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__user_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__user_stats.user_id}", "fields": ["user_id", "user_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "fact", "pancake"], "description": "Th\u1ed1ng k\u00ea d\u1eef li\u1ec7u nh\u00e2n vi\u00ean theo page theo gi\u1edd", "columns": {"average_response_time": {"name": "average_response_time", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "additional_dimensions": {"d_average_response_time": {"type": "number", "sql": "case when ${d_hour} >= 7 and ${d_hour} <= 23 then ${TABLE}.average_response_time else 0 end", "hidden": true}}, "metrics": {"m_avg_response_time": {"type": "average", "round": 1, "label": "Avg response time (hour)", "group_label": "Pancake metrics", "sql": "${d_average_response_time}/3600"}, "m_med_response_time": {"type": "median", "round": 1, "label": "Median of response time (min)", "group_label": "Pancake metrics", "sql": "${d_average_response_time}/60"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment_count": {"name": "comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_comment": {"type": "sum", "round": 2, "label": "No. comments", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour": {"name": "hour", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_hour": {"type": "number", "sql": "extract(hour from ${TABLE}.hour)", "label": "Hour"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour_in_integer": {"name": "hour_in_integer", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbox_count": {"name": "inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_inbox": {"type": "sum", "round": 2, "label": "No. inboxes", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_count": {"name": "order_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_order": {"type": "sum", "round": 0, "label": "No. orders", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_number_count": {"name": "phone_number_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_phone": {"type": "sum", "label": "No. phones", "group_label": "Pancake metrics", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "private_reply_count": {"name": "private_reply_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_private_reply": {"type": "sum", "round": 0, "label": "No. private replies", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_comment_count": {"name": "unique_comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique_comment": {"type": "sum", "round": 0, "label": "No. unique comments", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_inbox_count": {"name": "unique_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique inbox": {"type": "sum", "round": 0, "label": "No. unique inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__user_stats.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__user_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__user_stats.user_id}", "fields": ["user_id", "user_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__user_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__user_stats.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__user_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__user_stats.user_id}", "fields": ["user_id", "user_name"]}]}, "tags": ["view", "fact", "pancake"]}, "created_at": 1703652761.568105, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__user_stats`", "raw_code": "{{\n  config(\n    tags=['view', 'fact','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'user_stats'), partition_by = 'page_id,user_id,hour', order_by = \"_batched_at desc\",) }}\n)\nSELECT\nsource.hour,\nsource.page_id,\nsource.user_id,\nsource.average_response_time,\nsource.comment_count,\nsource.hour_in_integer,\nsource.inbox_count,\nsource.order_count,\nsource.phone_number_count,\nsource.private_reply_count,\nsource.unique_comment_count,\nsource.unique_inbox_count,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "user_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.user_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__user_stats.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_user_stats__*` original\n        group by page_id,user_id,hour\n    )\n)\nSELECT\nsource.hour,\nsource.page_id,\nsource.user_id,\nsource.average_response_time,\nsource.comment_count,\nsource.hour_in_integer,\nsource.inbox_count,\nsource.order_count,\nsource.phone_number_count,\nsource.private_reply_count,\nsource.unique_comment_count,\nsource.unique_inbox_count,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__pages": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__pages", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__pages.sql", "original_file_path": "models/staging/pancake/stg_pancake__pages.sql", "unique_id": "model.sado_analytics_services.stg_pancake__pages", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__pages"], "alias": "stg_pancake__pages", "checksum": {"name": "sha256", "checksum": "577164b72efeeb19a67cf9872899fb821f4f45a2988f756892fb5e7ec2d880db"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimensions", "pancake"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimensions", "pancake"], "description": "", "columns": {"avatar_url": {"name": "avatar_url", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "business": {"name": "business", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "connected": {"name": "connected", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_global_id_crawl": {"name": "last_global_id_crawl", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_name": {"name": "page_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "need_fix_webhook": {"name": "need_fix_webhook", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_content_sync_group_id": {"name": "page_content_sync_group_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role_in_page": {"name": "role_in_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_id": {"name": "shop_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "special_feature": {"name": "special_feature", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timezone": {"name": "timezone", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__pages.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimensions", "pancake"]}, "created_at": 1703652761.5338535, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__pages`", "raw_code": "{{\n  config(\n    tags=['view', 'dimensions','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'pages'), partition_by = 'id', order_by = \"_batched_at desc\",) }}\n)\nSELECT\n    source.avatar_url,\n    source.business,\n    source.connected,\n    source.id AS page_id,\n    source.last_global_id_crawl,\n    source.name AS page_name,\n    source.need_fix_webhook,\n    source.page_content_sync_group_id,\n    source.role_in_page,\n    source.shop_id,\n    source.special_feature,\n    source.timezone,\n    source.username,\n    source.status,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "pages"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.pages"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__pages.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_pages__*` original\n        group by id\n    )\n)\nSELECT\n    source.avatar_url,\n    source.business,\n    source.connected,\n    source.id AS page_id,\n    source.last_global_id_crawl,\n    source.name AS page_name,\n    source.need_fix_webhook,\n    source.page_content_sync_group_id,\n    source.role_in_page,\n    source.shop_id,\n    source.special_feature,\n    source.timezone,\n    source.username,\n    source.status,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__users": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__users.sql", "original_file_path": "models/staging/pancake/stg_pancake__users.sql", "unique_id": "model.sado_analytics_services.stg_pancake__users", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__users"], "alias": "stg_pancake__users", "checksum": {"name": "sha256", "checksum": "29e298789e5f3f209b2c16179cdeb810906b42fa8a0f6dc39bf2293b869e864f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_email": {"name": "user_email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__users.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.5276194, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__users`", "raw_code": "with source as (\n    {{ dbt_utils.deduplicate(\n    relation=source('pancake', 'users'),\n    partition_by='id',\n    order_by=\"_batched_at desc\",\n   )\n}}\n)\nselect \nsource.id as user_id, \nsource.name as user_name,\nsource.email as user_email\nfrom source", "language": "sql", "refs": [], "sources": [["pancake", "users"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__users.sql", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_users__*` original\n        group by id\n    )\n)\nselect \nsource.id as user_id, \nsource.name as user_name,\nsource.email as user_email\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__orders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__orders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__orders.sql", "original_file_path": "models/staging/pancake/stg_pancake__orders.sql", "unique_id": "model.sado_analytics_services.stg_pancake__orders", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__orders"], "alias": "stg_pancake__orders", "checksum": {"name": "sha256", "checksum": "1b010db536e1594d5b15217d48a580c81260e862f14c790f026cd41e7b0f018e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seller_id": {"name": "seller_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "display_id": {"name": "display_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id": {"name": "order_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "full_name": {"name": "full_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_created_at": {"name": "order_created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_locked": {"name": "is_locked", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_modified_at": {"name": "order_modified_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment": {"name": "payment", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_contact_number": {"name": "customer_contact_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recipient_location": {"name": "recipient_location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__orders.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.5562775, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__orders`", "raw_code": "{% set pancake_order_statuses = {\n    \"0\":\"M\u1edbi\",\n    \"17\":\"Ch\u1edd x\u00e1c nh\u1eadn\",\n    \"11\":\"Ch\u1edd h\u00e0ng\",\n    \"12\":\"Ch\u1edd in\",\n    \"13\":\"\u0110\u00e3 in\",\n    \"20\":\"\u0110\u00e3 \u0111\u1eb7t h\u00e0ng\",\n    \"1\":\"\u0110\u00e3 x\u00e1c nh\u1eadn\",\n    \"8\":\"\u0110ang \u0111\u00f3ng h\u00e0ng\",\n    \"9\":\"Ch\u1edd chuy\u1ec3n h\u00e0ng\",\n    \"2\":\"\u0110\u00e3 g\u1eedi h\u00e0ng\",\n    \"3\":\"\u0110\u00e3 nh\u1eadn\",\n    \"16\":\"\u0110\u00e3 thu ti\u1ec1n\",\n    \"4\":\"\u0110ang tr\u1ea3 h\u00e0ng\",\n    \"15\":\"Ho\u00e0n 1 ph\u1ea7n\",\n    \"5\":\"\u0110\u00e3 ho\u00e0n\",\n    \"6\":\"\u0110\u00e3 h\u1ee7y\",\n    \"7\":\"\u0110\u00e3 x\u00f3a\",\n    \"10\":\"\u0110\u01a1n Webcake\",\n    \"21\":\"\u0110\u01a1n Storecake\",\n    }\n%}\n\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'pos_orders'), partition_by = 'id,shop_id', order_by = \"_batched_at desc\",) }}\n)\n\nselect \nsource.page_id,\nsource.id as order_id,\nsource.shop_id,\ncase source.status\n{%for key, value in pancake_order_statuses.items() %}\nwhen {{key}} then '{{value}}'\n{%endfor%}\nend as status,\nsource.shipping_address.*,\nsource.bill_phone_number as phone_number,\nsource.assigning_seller_id as seller_id,\ndatetime_add(datetime(source.inserted_at), interval 7 hour) inserted_at,\ndatetime_add(datetime(source.updated_at), interval 7 hour) updated_at,\nsource.customer.customer_id as customer_id,\nsource.conversation_id,\nsource.total_price_after_sub_discount,\nsource.total_price,\nsource.time_assign_seller as seller_assigned_at,\nsource.p_utm_campaign,\nsource.p_utm_medium,\nsource.p_utm_source,\nsource.p_utm_term,\nsource.p_utm_content,\nfrom source", "language": "sql", "refs": [], "sources": [["pancake", "pos_orders"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.pos_orders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__orders.sql", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_pos_orders__*` original\n        group by id,shop_id\n    )\n)\n\nselect \nsource.page_id,\nsource.id as order_id,\nsource.shop_id,\ncase source.status\n\nwhen 0 then 'M\u1edbi'\n\nwhen 17 then 'Ch\u1edd x\u00e1c nh\u1eadn'\n\nwhen 11 then 'Ch\u1edd h\u00e0ng'\n\nwhen 12 then 'Ch\u1edd in'\n\nwhen 13 then '\u0110\u00e3 in'\n\nwhen 20 then '\u0110\u00e3 \u0111\u1eb7t h\u00e0ng'\n\nwhen 1 then '\u0110\u00e3 x\u00e1c nh\u1eadn'\n\nwhen 8 then '\u0110ang \u0111\u00f3ng h\u00e0ng'\n\nwhen 9 then 'Ch\u1edd chuy\u1ec3n h\u00e0ng'\n\nwhen 2 then '\u0110\u00e3 g\u1eedi h\u00e0ng'\n\nwhen 3 then '\u0110\u00e3 nh\u1eadn'\n\nwhen 16 then '\u0110\u00e3 thu ti\u1ec1n'\n\nwhen 4 then '\u0110ang tr\u1ea3 h\u00e0ng'\n\nwhen 15 then 'Ho\u00e0n 1 ph\u1ea7n'\n\nwhen 5 then '\u0110\u00e3 ho\u00e0n'\n\nwhen 6 then '\u0110\u00e3 h\u1ee7y'\n\nwhen 7 then '\u0110\u00e3 x\u00f3a'\n\nwhen 10 then '\u0110\u01a1n Webcake'\n\nwhen 21 then '\u0110\u01a1n Storecake'\n\nend as status,\nsource.shipping_address.*,\nsource.bill_phone_number as phone_number,\nsource.assigning_seller_id as seller_id,\ndatetime_add(datetime(source.inserted_at), interval 7 hour) inserted_at,\ndatetime_add(datetime(source.updated_at), interval 7 hour) updated_at,\nsource.customer.customer_id as customer_id,\nsource.conversation_id,\nsource.total_price_after_sub_discount,\nsource.total_price,\nsource.time_assign_seller as seller_assigned_at,\nsource.p_utm_campaign,\nsource.p_utm_medium,\nsource.p_utm_source,\nsource.p_utm_term,\nsource.p_utm_content,\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__posts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__posts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__posts.sql", "original_file_path": "models/staging/pancake/stg_pancake__posts.sql", "unique_id": "model.sado_analytics_services.stg_pancake__posts", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__posts"], "alias": "stg_pancake__posts", "checksum": {"name": "sha256", "checksum": "ec33728ca02c810d95232de9f805fdb7c0e7d1b10f3574814b4a429b9f32fdf1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"post_title": {"name": "post_title", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inserted_at": {"name": "inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "like_count": {"name": "like_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reaction_count": {"name": "reaction_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment_count": {"name": "comment_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_number_count": {"name": "phone_number_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__posts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.5254617, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__posts`", "raw_code": "SELECT\n    regexp_extract(message,r'^(.*\\n.*)') post_title,\n    admin_creator.id AS user_id,\n    admin_creator.name AS user_name,\n    updated_at,\n    inserted_at,\n    page_id,\n    post_id,\n    like_count,\n    reaction_count,\n    comment_count,\n    phone_number_count,\nFROM\n    {{ ref(\"base_pancake__posts\") }}", "language": "sql", "refs": [{"name": "base_pancake__posts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_pancake__posts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__posts.sql", "compiled": true, "compiled_code": "SELECT\n    regexp_extract(message,r'^(.*\\n.*)') post_title,\n    admin_creator.id AS user_id,\n    admin_creator.name AS user_name,\n    updated_at,\n    inserted_at,\n    page_id,\n    post_id,\n    like_count,\n    reaction_count,\n    comment_count,\n    phone_number_count,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_pancake__posts`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__conversations": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__conversations", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__conversations.sql", "original_file_path": "models/staging/pancake/stg_pancake__conversations.sql", "unique_id": "model.sado_analytics_services.stg_pancake__conversations", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__conversations"], "alias": "stg_pancake__conversations", "checksum": {"name": "sha256", "checksum": "f28c29975b6d03c8f4a6105496c435febd5e5c595e3f93e2d0249bca8459c8ce"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${stg_pancake__conversations.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__customers.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${stg_pancake__customers.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__customers.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calenar.date} = date(${stg_pancake__customers.inserted_at})", "fields": ["date", "period", "period_code"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"inserted_at": {"name": "inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_conversation_type": {"type": "string", "sql": "case when ${stg_pancake__customers.inserted_at} < ${TABLE}.inserted_at then 'Kh\u00e1ch m\u1edbi' else 'Kh\u00e1ch c\u0169' end", "label": "Conversation type"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_id": {"name": "conversation_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_conversations": {"type": "count_distinct", "label": "No. Conversations", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_customer_engaged": {"type": "count_distinct", "label": "No. Engaged Customers", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tag_id": {"name": "tag_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "message_count": {"name": "message_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_messages": {"type": "sum", "label": "No. Messages", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "snippet": {"name": "snippet", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${stg_pancake__conversations.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__customers.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${stg_pancake__customers.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__customers.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calenar.date} = date(${stg_pancake__customers.inserted_at})", "fields": ["date", "period", "period_code"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__conversations.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${stg_pancake__conversations.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__customers.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${stg_pancake__customers.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__customers.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calenar.date} = date(${stg_pancake__customers.inserted_at})", "fields": ["date", "period", "period_code"]}]}}, "created_at": 1703652761.5123124, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__conversations`", "raw_code": "SELECT\n    conversations.inserted_at,\n    {{dbt_utils.generate_surrogate_key(['conversation_id','customer_id'])}} as conversation_id,\n    conversations.conversation_id as chat_id,\n    conversations.customer_id,\n    conversations.user_id,\n    conversations.page_id,\n    conversations.post_id,\n    conversations.tag_id,\n    conversations.message_count,\n    conversations.snippet,\n    conversations.type,\n    conversations.updated_at,\n    conversations.ad_id,\n    conversations.tag_histories\nFROM\n    {{ ref(\"base_pancake__conversations\") }}\n    conversations", "language": "sql", "refs": [{"name": "base_pancake__conversations", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.sado_analytics_services.base_pancake__conversations"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__conversations.sql", "compiled": true, "compiled_code": "SELECT\n    conversations.inserted_at,\n    to_hex(md5(cast(coalesce(cast(conversation_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as conversation_id,\n    conversations.conversation_id as chat_id,\n    conversations.customer_id,\n    conversations.user_id,\n    conversations.page_id,\n    conversations.post_id,\n    conversations.tag_id,\n    conversations.message_count,\n    conversations.snippet,\n    conversations.type,\n    conversations.updated_at,\n    conversations.ad_id,\n    conversations.tag_histories\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_pancake__conversations`\n    conversations", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__customer_engagements": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__customer_engagements", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__customer_engagements.sql", "original_file_path": "models/staging/pancake/stg_pancake__customer_engagements.sql", "unique_id": "model.sado_analytics_services.stg_pancake__customer_engagements", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__customer_engagements"], "alias": "stg_pancake__customer_engagements", "checksum": {"name": "sha256", "checksum": "2e66d6e68f0a52107d83c4466573107bc7fffd97c95cc16339f140cc47756cff"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "fact", "pancake"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__customer_engagements.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__customer_engagements.page_id}", "fields": ["page_id", "page_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "fact", "pancake"], "description": "Th\u1ed1ng k\u00ea t\u01b0\u01a1ng t\u00e1c v\u1edbi kh\u00e1ch h\u00e0ng theo page theo gi\u1edd", "columns": {"comment": {"name": "comment", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_comments": {"type": "sum", "label": "No. comments", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour": {"name": "hour", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_hour": {"type": "number", "sql": "extract(hour from ${TABLE}.hour)", "label": "Hour"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbox": {"name": "inbox", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_inbox": {"type": "sum", "label": "No. inbox", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_customer": {"name": "new_customer", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_new_customer": {"type": "sum", "label": "No. new customer", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_customer_from_inbox": {"name": "new_customer_from_inbox", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_new_customer_from_inbox": {"type": "sum", "label": "No. new customer from inbox", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "old_order_count": {"name": "old_order_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_old_order_count": {"type": "sum", "label": "No. old order", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_count": {"name": "order_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_order_count": {"type": "sum", "label": "No. orders", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_engagements": {"type": "sum", "label": "No. engagements", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__customer_engagements.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__customer_engagements.page_id}", "fields": ["page_id", "page_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__customer_engagements.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__customer_engagements.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__customer_engagements.page_id}", "fields": ["page_id", "page_name"]}]}, "tags": ["view", "fact", "pancake"]}, "created_at": 1703652761.522595, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__customer_engagements`", "raw_code": "{{\n  config(\n    tags=['view', 'fact','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'pancake',\n            'customer_engagements'\n        ),\n        partition_by = 'hour,page_id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\nSELECT\n    source.comment,\n    source.hour,\n    source.inbox,\n    source.new_customer,\n    source.new_customer_from_inbox,\n    source.old_order_count,\n    source.order_count,\n    source.total,\n    source.page_id,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "customer_engagements"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.customer_engagements"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__customer_engagements.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_customer_engagements__*` original\n        group by hour,page_id\n    )\n)\nSELECT\n    source.comment,\n    source.hour,\n    source.inbox,\n    source.new_customer,\n    source.new_customer_from_inbox,\n    source.old_order_count,\n    source.order_count,\n    source.total,\n    source.page_id,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__customers.sql", "original_file_path": "models/staging/pancake/stg_pancake__customers.sql", "unique_id": "model.sado_analytics_services.stg_pancake__customers", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__customers"], "alias": "stg_pancake__customers", "checksum": {"name": "sha256", "checksum": "e9a1eabe5fc1dc8d4e7c929dc458f9f408e6129bf2020f7b265e158a318092f4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_name": {"name": "customer_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inserted_at": {"name": "inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_numbers": {"name": "phone_numbers", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city": {"name": "city", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_facebook_id": {"name": "customer_facebook_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__customers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.5357027, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__customers`", "raw_code": "SELECT\n    customer_id,\n    customer_name,\n    gender,\n    inserted_at,\n    phone_numbers,\n    city,\n    customer_facebook_id,\nFROM\n    {{ ref(\"base_pancake__customers\") }}", "language": "sql", "refs": [{"name": "base_pancake__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_pancake__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__customers.sql", "compiled": true, "compiled_code": "SELECT\n    customer_id,\n    customer_name,\n    gender,\n    inserted_at,\n    phone_numbers,\n    city,\n    customer_facebook_id,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_pancake__customers`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__page_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__page_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__page_stats.sql", "original_file_path": "models/staging/pancake/stg_pancake__page_stats.sql", "unique_id": "model.sado_analytics_services.stg_pancake__page_stats", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__page_stats"], "alias": "stg_pancake__page_stats", "checksum": {"name": "sha256", "checksum": "88eef72814b8cbd6845077e5bd65fe32992125c18bc631f16ef93c6c24104010"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "fact", "pancake"], "meta": {"joins": [{"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__page_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__page_stats.hour})", "fields": ["date", "period", "period_code"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "fact", "pancake"], "description": "Th\u1ed1ng k\u00ea d\u1eef li\u1ec7u theo page theo gi\u1edd", "columns": {"customer_comment_count": {"name": "customer_comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_customer_comment": {"type": "sum", "label": "No. customer comments", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_inbox_count": {"name": "customer_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_customer_inbox": {"type": "sum", "label": "No. inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour": {"name": "hour", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_hour": {"type": "number", "sql": "extract(hour from ${TABLE}.hour)", "label": "Hour"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbox_interactive_count": {"name": "inbox_interactive_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_inbox_interactive": {"type": "sum", "label": "No. interactive inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_customer_count": {"name": "new_customer_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_new_customer": {"type": "sum", "label": "No. new customers", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_inbox_count": {"name": "new_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_new_inbox": {"type": "sum", "label": "No. new inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_comment_count": {"name": "page_comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_page_comment": {"type": "sum", "label": "No. page comments", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_inbox_count": {"name": "page_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_page_inbox": {"type": "sum", "label": "No. page inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_number_count": {"name": "phone_number_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_phone": {"type": "sum", "label": "No. phones", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "today_uniq_website_referral": {"name": "today_uniq_website_referral", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique_website_ref": {"type": "sum", "label": "No. unique website referrals", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "today_website_guest_referral": {"name": "today_website_guest_referral", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_website_ref": {"type": "sum", "label": "No. website referrals", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uniq_phone_number_count": {"name": "uniq_phone_number_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique_phone": {"type": "sum", "label": "No. unique phones", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__page_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__page_stats.hour})", "fields": ["date", "period", "period_code"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__page_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__page_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__page_stats.hour})", "fields": ["date", "period", "period_code"]}]}, "tags": ["view", "fact", "pancake"]}, "created_at": 1703652761.500218, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__page_stats`", "raw_code": "{{\n  config(\n    tags=['view', 'fact','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'page_stats'), partition_by = 'hour,page_id', order_by = \"_batched_at desc\",) }}\n)\nSELECT\n    source.customer_comment_count,\n    source.customer_inbox_count,\n    source.hour,\n    source.inbox_interactive_count,\n    source.new_customer_count,\n    source.new_inbox_count,\n    source.page_comment_count,\n    source.page_inbox_count,\n    source.phone_number_count,\n    source.today_uniq_website_referral,\n    source.today_website_guest_referral,\n    source.uniq_phone_number_count,\n    source.page_id,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "page_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.page_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__page_stats.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_page_stats__*` original\n        group by hour,page_id\n    )\n)\nSELECT\n    source.customer_comment_count,\n    source.customer_inbox_count,\n    source.hour,\n    source.inbox_interactive_count,\n    source.new_customer_count,\n    source.new_inbox_count,\n    source.page_comment_count,\n    source.page_inbox_count,\n    source.phone_number_count,\n    source.today_uniq_website_referral,\n    source.today_website_guest_referral,\n    source.uniq_phone_number_count,\n    source.page_id,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_pancake__conversations": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_pancake__conversations", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/base/base_pancake__conversations.sql", "original_file_path": "models/staging/pancake/base/base_pancake__conversations.sql", "unique_id": "model.sado_analytics_services.base_pancake__conversations", "fqn": ["sado_analytics_services", "staging", "pancake", "base", "base_pancake__conversations"], "alias": "base_pancake__conversations", "checksum": {"name": "sha256", "checksum": "a71aaa85994e454cb4387ab4b3b7d5bb14fc0d0e152bd8ba1c3bf67b252ab506"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.001699, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_pancake__conversations`", "raw_code": "WITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'conversations'), partition_by = 'id', order_by = \"_batched_at desc\",) }}\n)\nSELECT\n    source.id AS conversation_id,\n    date_add(datetime(\n        source.inserted_at\n    ), interval 7 hour) AS inserted_at,\n    source.type,\n    customers.fb_id AS customer_fb_id,\n    customers.id AS customer_id,\n    source.last_sent_by.admin_id AS user_id,\n    source.last_sent_by.admin_name AS user_name,\n    source.last_sent_by.name AS page_name,\n    source.message_count,\n    source.post_id,\n    source.page_id,\n    date_add(source.updated_at, interval 7 hour) as updated_at,\n    tags.id AS tag_id,\n    tags.text AS tag_value,\n    source.snippet,\n    ads.ad_id, \n    source.tag_histories\nFROM\n    source\n    left join unnest(tags) tags\n    left join unnest(customers) customers\n    left join unnest(ads) ads", "language": "sql", "refs": [], "sources": [["pancake", "conversations"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.conversations"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/base/base_pancake__conversations.sql", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_conversations__*` original\n        group by id\n    )\n)\nSELECT\n    source.id AS conversation_id,\n    date_add(datetime(\n        source.inserted_at\n    ), interval 7 hour) AS inserted_at,\n    source.type,\n    customers.fb_id AS customer_fb_id,\n    customers.id AS customer_id,\n    source.last_sent_by.admin_id AS user_id,\n    source.last_sent_by.admin_name AS user_name,\n    source.last_sent_by.name AS page_name,\n    source.message_count,\n    source.post_id,\n    source.page_id,\n    date_add(source.updated_at, interval 7 hour) as updated_at,\n    tags.id AS tag_id,\n    tags.text AS tag_value,\n    source.snippet,\n    ads.ad_id, \n    source.tag_histories\nFROM\n    source\n    left join unnest(tags) tags\n    left join unnest(customers) customers\n    left join unnest(ads) ads", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_pancake__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_pancake__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/base/base_pancake__customers.sql", "original_file_path": "models/staging/pancake/base/base_pancake__customers.sql", "unique_id": "model.sado_analytics_services.base_pancake__customers", "fqn": ["sado_analytics_services", "staging", "pancake", "base", "base_pancake__customers"], "alias": "base_pancake__customers", "checksum": {"name": "sha256", "checksum": "86ac7ab6c1721fb4f698d30a8b4dcca7a3d77e9071188251a8f6cece03e6e2d8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.0114584, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_pancake__customers`", "raw_code": "WITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'customers'), partition_by = 'id, psid', order_by = \"_batched_at desc\",) }}\n)\nSELECT\nsource.id as customer_id,\nsource.name as customer_name,\nsource.gender,\ndate_add(source.inserted_at, interval 7 hour) inserted_at,\nsource.phone_numbers,\nsource.lives_in as city,\nsource.psid as customer_facebook_id,\nsource.recent_orders,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "customers"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/base/base_pancake__customers.sql", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_customers__*` original\n        group by id, psid\n    )\n)\nSELECT\nsource.id as customer_id,\nsource.name as customer_name,\nsource.gender,\ndate_add(source.inserted_at, interval 7 hour) inserted_at,\nsource.phone_numbers,\nsource.lives_in as city,\nsource.psid as customer_facebook_id,\nsource.recent_orders,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_pancake__posts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_pancake__posts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/base/base_pancake__posts.sql", "original_file_path": "models/staging/pancake/base/base_pancake__posts.sql", "unique_id": "model.sado_analytics_services.base_pancake__posts", "fqn": ["sado_analytics_services", "staging", "pancake", "base", "base_pancake__posts"], "alias": "base_pancake__posts", "checksum": {"name": "sha256", "checksum": "ddfc5e8687205663b418a85721d5696d35f25cdd86f08c9a2465f5434afed2dd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.0197604, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_pancake__posts`", "raw_code": "WITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'posts'), partition_by = 'id,page_id', order_by = \"_batched_at desc\",) }}\n)\nSELECT\nsource.is_dynamic_linked,\nsource.reactions,\nsource.like_count,\nsource.message,\nsource.delete_comment,\nsource.privacy,\nsource.rating_point,\nsource.type,\nsource.is_removed,\nsource.story_tags,\nsource.comment_count,\nsource.live_video_ended_time,\nsource.id as post_id,\nsource.admin_creator,\nsource.link,\ndate_add(source.inserted_at, interval 7 hour) inserted_at,\nsource.has_running_rules,\nsource.page_id,\nsource.recommendation_type,\nsource.sub_type,\ndate_add(source.updated_at, interval 7 hour) updated_at,\nsource.edit_history,\nsource.dynamic_post_id,\nsource.from,\nsource.is_mention,\nsource.reaction_count,\nsource.live_video_status,\nsource.story,\nsource.share_last_cursor,\nsource.phone_number_count,\nsource.status_type,\nsource.product_id,\nsource.is_visitor_post,\nsource.comments_mirroring_domain,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "posts"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.posts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/base/base_pancake__posts.sql", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_posts__*` original\n        group by id,page_id\n    )\n)\nSELECT\nsource.is_dynamic_linked,\nsource.reactions,\nsource.like_count,\nsource.message,\nsource.delete_comment,\nsource.privacy,\nsource.rating_point,\nsource.type,\nsource.is_removed,\nsource.story_tags,\nsource.comment_count,\nsource.live_video_ended_time,\nsource.id as post_id,\nsource.admin_creator,\nsource.link,\ndate_add(source.inserted_at, interval 7 hour) inserted_at,\nsource.has_running_rules,\nsource.page_id,\nsource.recommendation_type,\nsource.sub_type,\ndate_add(source.updated_at, interval 7 hour) updated_at,\nsource.edit_history,\nsource.dynamic_post_id,\nsource.from,\nsource.is_mention,\nsource.reaction_count,\nsource.live_video_status,\nsource.story,\nsource.share_last_cursor,\nsource.phone_number_count,\nsource.status_type,\nsource.product_id,\nsource.is_visitor_post,\nsource.comments_mirroring_domain,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_5sfashion__products": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_5sfashion__products", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/stg_5sfashion__products.sql", "original_file_path": "models/staging/5sfashion/stg_5sfashion__products.sql", "unique_id": "model.sado_analytics_services.stg_5sfashion__products", "fqn": ["sado_analytics_services", "staging", "5sfashion", "stg_5sfashion__products"], "alias": "stg_5sfashion__products", "checksum": {"name": "sha256", "checksum": "32616b45a92daaaf287e15990cd177fc049d9e6d80b7334fef6b3068c0cd3c16"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["website", "dimensions", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["website", "dimensions", "view"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_type": {"name": "product_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_name": {"name": "product_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_keyword": {"name": "product_keyword", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "categories": {"name": "categories", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "published_at": {"name": "published_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/5sfashion/stg_5sfashion__products.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["website", "dimensions", "view"]}, "created_at": 1703652761.5705838, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__products`", "raw_code": "{{\n    config(\n        tags=['website','dimensions','view']\n    )\n}}\n\nSELECT\n_id as product_id,\nname as product_name,\ncase product_type_id\nwhen \"63e5ee4fa056b1c6920ed269\" then '\u00c1o'\nwhen \"63e5ee4fa056b1c6920ed269\" then \"Qu\u1ea7n\"\nwhen \"63e5ee4fa056b1c6920ed26b\" then \"Kh\u00e1c\"\nelse \"Ch\u01b0a ph\u00e2n lo\u1ea1i\" end as product_type,\nkeyword as product_keyword,\ncategories,\nupdated_at,\ncreated_at,\npublished_at,\ncode as product_code,\n\nFROM\n    {{ ref('base_5sfashion__products') }}", "language": "sql", "refs": [{"name": "base_5sfashion__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_5sfashion__products"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/stg_5sfashion__products.sql", "compiled": true, "compiled_code": "\n\nSELECT\n_id as product_id,\nname as product_name,\ncase product_type_id\nwhen \"63e5ee4fa056b1c6920ed269\" then '\u00c1o'\nwhen \"63e5ee4fa056b1c6920ed269\" then \"Qu\u1ea7n\"\nwhen \"63e5ee4fa056b1c6920ed26b\" then \"Kh\u00e1c\"\nelse \"Ch\u01b0a ph\u00e2n lo\u1ea1i\" end as product_type,\nkeyword as product_keyword,\ncategories,\nupdated_at,\ncreated_at,\npublished_at,\ncode as product_code,\n\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_5sfashion__products`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_5sfashion__categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_5sfashion__categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/stg_5sfashion__categories.sql", "original_file_path": "models/staging/5sfashion/stg_5sfashion__categories.sql", "unique_id": "model.sado_analytics_services.stg_5sfashion__categories", "fqn": ["sado_analytics_services", "staging", "5sfashion", "stg_5sfashion__categories"], "alias": "stg_5sfashion__categories", "checksum": {"name": "sha256", "checksum": "5de50fcb31aabb840ce12ab237b5ddd91c6fe6cfc07724812d492cd05db2ebbb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["website", "dimensions", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["website", "dimensions", "view"], "description": "", "columns": {"category_id": {"name": "category_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name": {"name": "category_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_order_type": {"name": "product_order_type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "homepage_position": {"name": "homepage_position", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_show_on_homepage": {"name": "is_show_on_homepage", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_show_on_website": {"name": "is_show_on_website", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/5sfashion/stg_5sfashion__categories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["website", "dimensions", "view"]}, "created_at": 1703652761.573859, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__categories`", "raw_code": "{{\n    config(\n        tags=['website','dimensions','view']\n    )\n}}\n\nSELECT\n  _id AS category_id,\n  name AS category_name,\n  product_order_type,\n  position as homepage_position,\n  is_featured as is_show_on_homepage,\n  is_show_on_website,\nFROM\n    {{ ref('base_5sfashion__categories') }}", "language": "sql", "refs": [{"name": "base_5sfashion__categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_5sfashion__categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/stg_5sfashion__categories.sql", "compiled": true, "compiled_code": "\n\nSELECT\n  _id AS category_id,\n  name AS category_name,\n  product_order_type,\n  position as homepage_position,\n  is_featured as is_show_on_homepage,\n  is_show_on_website,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_5sfashion__categories`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_5sfashion__product_ratings": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_5sfashion__product_ratings", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/base/base_5sfashion__product_ratings.sql", "original_file_path": "models/staging/5sfashion/base/base_5sfashion__product_ratings.sql", "unique_id": "model.sado_analytics_services.base_5sfashion__product_ratings", "fqn": ["sado_analytics_services", "staging", "5sfashion", "base", "base_5sfashion__product_ratings"], "alias": "base_5sfashion__product_ratings", "checksum": {"name": "sha256", "checksum": "652de041911191df6986d15f5e84d2eeb655ed31a890cf653587457efc5afb7f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.0444565, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_5sfashion__product_ratings`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            '5sfashion',\n            'product_ratings'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["5sfashion", "product_ratings"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.5sfashion.product_ratings"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/base/base_5sfashion__product_ratings.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`WebsiteDB`.`p_product_ratings_*`\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_5sfashion__provinces": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_5sfashion__provinces", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/base/base_5sfashion__provinces.sql", "original_file_path": "models/staging/5sfashion/base/base_5sfashion__provinces.sql", "unique_id": "model.sado_analytics_services.base_5sfashion__provinces", "fqn": ["sado_analytics_services", "staging", "5sfashion", "base", "base_5sfashion__provinces"], "alias": "base_5sfashion__provinces", "checksum": {"name": "sha256", "checksum": "227c1f63f9828c727598bf7d83a6770c54fd27573b2a5f2d2bb15cba874dc6c3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.0519307, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_5sfashion__provinces`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            '5sfashion',\n            'provinces'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["5sfashion", "provinces"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.5sfashion.provinces"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/base/base_5sfashion__provinces.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`WebsiteDB`.`p_provinces_*`\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_5sfashion__product_variants": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_5sfashion__product_variants", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/base/base_5sfashion__product_variants.sql", "original_file_path": "models/staging/5sfashion/base/base_5sfashion__product_variants.sql", "unique_id": "model.sado_analytics_services.base_5sfashion__product_variants", "fqn": ["sado_analytics_services", "staging", "5sfashion", "base", "base_5sfashion__product_variants"], "alias": "base_5sfashion__product_variants", "checksum": {"name": "sha256", "checksum": "25dc6e6be063bb22c4607e028e69a7e4de5a9470847799525930db5872fefa34"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.059435, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_5sfashion__product_variants`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            '5sfashion',\n            'product_variants'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["5sfashion", "product_variants"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.5sfashion.product_variants"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/base/base_5sfashion__product_variants.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`WebsiteDB`.`p_product_variants_*`\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_5sfashion__districts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_5sfashion__districts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/base/base_5sfashion__districts.sql", "original_file_path": "models/staging/5sfashion/base/base_5sfashion__districts.sql", "unique_id": "model.sado_analytics_services.base_5sfashion__districts", "fqn": ["sado_analytics_services", "staging", "5sfashion", "base", "base_5sfashion__districts"], "alias": "base_5sfashion__districts", "checksum": {"name": "sha256", "checksum": "cc206c1b8435b70208c71c4ebbaf341b24d9590050bb353744f1b0e4ddade856"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.0669334, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_5sfashion__districts`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            '5sfashion',\n            'districts'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["5sfashion", "districts"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.5sfashion.districts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/base/base_5sfashion__districts.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`WebsiteDB`.`p_districts_*`\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_5sfashion__wards": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_5sfashion__wards", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/base/base_5sfashion__wards.sql", "original_file_path": "models/staging/5sfashion/base/base_5sfashion__wards.sql", "unique_id": "model.sado_analytics_services.base_5sfashion__wards", "fqn": ["sado_analytics_services", "staging", "5sfashion", "base", "base_5sfashion__wards"], "alias": "base_5sfashion__wards", "checksum": {"name": "sha256", "checksum": "3acf1c3426ee5d879227c1600081139a8a09514680a0c2a5218358204a2dea53"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.0754144, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_5sfashion__wards`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            '5sfashion',\n            'wards'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["5sfashion", "wards"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.5sfashion.wards"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/base/base_5sfashion__wards.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`WebsiteDB`.`p_wards_*`\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_5sfashion__order_items": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_5sfashion__order_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/base/base_5sfashion__order_items.sql", "original_file_path": "models/staging/5sfashion/base/base_5sfashion__order_items.sql", "unique_id": "model.sado_analytics_services.base_5sfashion__order_items", "fqn": ["sado_analytics_services", "staging", "5sfashion", "base", "base_5sfashion__order_items"], "alias": "base_5sfashion__order_items", "checksum": {"name": "sha256", "checksum": "0cb309cd8c5783571c763d9f5de8f30f51b1177a09f36da247db1778de7e1914"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.14857, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_5sfashion__order_items`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            '5sfashion',\n            'order_items'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["5sfashion", "order_items"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.5sfashion.order_items"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/base/base_5sfashion__order_items.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`WebsiteDB`.`p_order_items_*`\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_5sfashion__categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_5sfashion__categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/base/base_5sfashion__categories.sql", "original_file_path": "models/staging/5sfashion/base/base_5sfashion__categories.sql", "unique_id": "model.sado_analytics_services.base_5sfashion__categories", "fqn": ["sado_analytics_services", "staging", "5sfashion", "base", "base_5sfashion__categories"], "alias": "base_5sfashion__categories", "checksum": {"name": "sha256", "checksum": "7545706438835624c72e2e1d7287c2434e39b1826dccc11b583d3b1a1aee7b73"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.15623, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_5sfashion__categories`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            '5sfashion',\n            'categories'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["5sfashion", "categories"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.5sfashion.categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/base/base_5sfashion__categories.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`WebsiteDB`.`p_categories_*`\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_5sfashion__products": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_5sfashion__products", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/base/base_5sfashion__products.sql", "original_file_path": "models/staging/5sfashion/base/base_5sfashion__products.sql", "unique_id": "model.sado_analytics_services.base_5sfashion__products", "fqn": ["sado_analytics_services", "staging", "5sfashion", "base", "base_5sfashion__products"], "alias": "base_5sfashion__products", "checksum": {"name": "sha256", "checksum": "bad1571458119864bc1d2f8dfe19b946bdf5ac716d9a30d2ff34294a9fcea153"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.1637783, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_5sfashion__products`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            '5sfashion',\n            'products'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["5sfashion", "products"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.5sfashion.products"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/base/base_5sfashion__products.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`WebsiteDB`.`p_products_*`\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_5sfashion__orders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_5sfashion__orders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/base/base_5sfashion__orders.sql", "original_file_path": "models/staging/5sfashion/base/base_5sfashion__orders.sql", "unique_id": "model.sado_analytics_services.base_5sfashion__orders", "fqn": ["sado_analytics_services", "staging", "5sfashion", "base", "base_5sfashion__orders"], "alias": "base_5sfashion__orders", "checksum": {"name": "sha256", "checksum": "51be80040b9bdaf649cef0b2f2069731776ec760eecd77a4ed2987cb1ec01e5f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652760.1713505, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_5sfashion__orders`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            '5sfashion',\n            'orders'\n        ) }}\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["5sfashion", "orders"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.5sfashion.orders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/base/base_5sfashion__orders.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY _id\n            ORDER BY\n                _batched_at DESC,\n                updated_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`WebsiteDB`.`p_orders_*`\n)\nSELECT\n    *\nEXCEPT(rn_, _batched_at)\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__pancake_tags": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__pancake_tags", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__pancake_tags.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__pancake_tags.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__pancake_tags", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__pancake_tags"], "alias": "stg_gsheet__pancake_tags", "checksum": {"name": "sha256", "checksum": "10949e5d145989a1695087123e391d534dbe51e07bada147dfc0beac28d78cd6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["gsheet", "dimension", "table", "pancake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["gsheet", "dimension", "table", "pancake"], "description": "", "columns": {"tag_value": {"name": "tag_value", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["gsheet", "dimension", "table", "pancake"]}, "created_at": 1703652761.5919888, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__pancake_tags`", "raw_code": "{{ config(\n    materialized = 'table',\n    tags = ['gsheet','dimension','table', 'pancake']\n) }}\n\nSELECT\n    tag_value, category\nFROM\n    {{ source(\n        'gSheet',\n        \"_ext_pancake_tags\"\n    ) }}", "language": "sql", "refs": [], "sources": [["gSheet", "_ext_pancake_tags"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.gSheet._ext_pancake_tags"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__pancake_tags.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    tag_value, category\nFROM\n    `agile-scheme-394814`.`GSheet`.`_ext_pancake_tags`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__facebook_budget": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__facebook_budget", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__facebook_budget.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__facebook_budget.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__facebook_budget", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__facebook_budget"], "alias": "stg_gsheet__facebook_budget", "checksum": {"name": "sha256", "checksum": "3695f39a556369d4ec6763d94381f8ac2a0b8563c14cb7a68b1d84049f7fa64d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["dimension", "table", "ignore"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["dimension", "table", "ignore"], "description": "", "columns": {"branch": {"name": "branch", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "budget_month": {"name": "budget_month", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page": {"name": "page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "milestones": {"name": "milestones", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["dimension", "table", "ignore"]}, "created_at": 1703652761.5911195, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__facebook_budget`", "raw_code": "{{ config(\n    materialized = 'table',\n    tags = ['dimension','table', 'ignore']\n) }}\n\n{%- set relation = source(\n    'gSheet',\n    'facebook_budget'\n) -%}\n{% set all_columns = adapter.get_columns_in_relation(relation) %}\n{% set targets ={ \"budget\" :\"ng\u00e2n s\u00e1ch\",\n\"sales_target\" :\"doanh s\u1ed1\",\n\"traffic_target\" :\"l\u01b0\u1ee3t kh\u00e1ch\",\n\"aov\" :'gttb/kh' } %}\nWITH source AS (\n\n    SELECT\n        * except(`ASM - Showroom`),\n        ROW_NUMBER() over (\n            PARTITION BY showroom,\n            MONTH\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        {{ source(\n            'gSheet',\n            'facebook_budget'\n        ) }}\n    WHERE\n        MONTH >= '2023-11-01'\n),\nformated AS (\n    SELECT\n        CASE\n            WHEN source.showroom = '5S H\u1ea3i D\u01b0\u01a1ng' THEN '5S H\u1ea3i D\u01b0\u01a1ng 1'\n            WHEN source.showroom = '5S Th\u00e1i Nguy\u00ean 1' THEN '5S Th\u00e1i Nguy\u00ean'\n            WHEN source.showroom = '5S GO' THEN '5S Go Th\u00e1i B\u00ecnh'\n            WHEN source.showroom = '5S H\u00e0 T\u0129nh 1' THEN '5S H\u00e0 T\u0129nh'\n            ELSE source.showroom\n        END AS branch,\n        source.month AS budget_month,\n        {# source.target, #}\n        ARRAY_AGG(\n            STRUCT(\n                milestones.start,\n                milestones.\n            END,\n            milestones.value,\n            regexp_extract(\n                milestones.key,\n                r'^(.*) -'\n            ) AS milestone_name,\n            CASE\n                LOWER(regexp_extract(milestones.key, r'- ([^()]+)$')) \n                {% for key,value in targets.items() %}\n                    WHEN '{{ value }}' THEN '{{ key }}'\n                {% endfor %}\n            END AS budget_type\n        )\n) AS milestones\nFROM\n    source,\n    unnest(milestones) milestones\nWHERE\n    rn_ = 1 {{ dbt_utils.group_by(2) }}\n)\nSELECT\n    formated.*,\n    branch.branch_id,\n    asm.page,\n    asm.pic,\nFROM\n    formated\n    LEFT JOIN {{ ref('stg_kiotviet__branches') }}\n    branch\n    ON formated.branch = branch.branch_name\n    LEFT JOIN {{ ref('stg_gsheet__asms') }}\n    asm\n    ON branch.branch_id = asm.branch_id", "language": "sql", "refs": [{"name": "stg_kiotviet__branches", "package": null, "version": null}, {"name": "stg_gsheet__asms", "package": null, "version": null}], "sources": [["gSheet", "facebook_budget"], ["gSheet", "facebook_budget"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.gSheet.facebook_budget", "model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_gsheet__asms"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__facebook_budget.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        * except(`ASM - Showroom`),\n        ROW_NUMBER() over (\n            PARTITION BY showroom,\n            MONTH\n            ORDER BY\n                _batched_at DESC\n        ) rn_\n    FROM\n        `agile-scheme-394814`.`GSheet`.`_ext_facebook_budget__*`\n    WHERE\n        MONTH >= '2023-11-01'\n),\nformated AS (\n    SELECT\n        CASE\n            WHEN source.showroom = '5S H\u1ea3i D\u01b0\u01a1ng' THEN '5S H\u1ea3i D\u01b0\u01a1ng 1'\n            WHEN source.showroom = '5S Th\u00e1i Nguy\u00ean 1' THEN '5S Th\u00e1i Nguy\u00ean'\n            WHEN source.showroom = '5S GO' THEN '5S Go Th\u00e1i B\u00ecnh'\n            WHEN source.showroom = '5S H\u00e0 T\u0129nh 1' THEN '5S H\u00e0 T\u0129nh'\n            ELSE source.showroom\n        END AS branch,\n        source.month AS budget_month,\n        \n        ARRAY_AGG(\n            STRUCT(\n                milestones.start,\n                milestones.\n            END,\n            milestones.value,\n            regexp_extract(\n                milestones.key,\n                r'^(.*) -'\n            ) AS milestone_name,\n            CASE\n                LOWER(regexp_extract(milestones.key, r'- ([^()]+)$')) \n                \n                    WHEN 'ng\u00e2n s\u00e1ch' THEN 'budget'\n                \n                    WHEN 'doanh s\u1ed1' THEN 'sales_target'\n                \n                    WHEN 'l\u01b0\u1ee3t kh\u00e1ch' THEN 'traffic_target'\n                \n                    WHEN 'gttb/kh' THEN 'aov'\n                \n            END AS budget_type\n        )\n) AS milestones\nFROM\n    source,\n    unnest(milestones) milestones\nWHERE\n    rn_ = 1 group by 1,2\n)\nSELECT\n    formated.*,\n    branch.branch_id,\n    asm.page,\n    asm.pic,\nFROM\n    formated\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`\n    branch\n    ON formated.branch = branch.branch_name\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__asms`\n    asm\n    ON branch.branch_id = asm.branch_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__asms": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__asms", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__asms.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__asms.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__asms", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__asms"], "alias": "stg_gsheet__asms", "checksum": {"name": "sha256", "checksum": "2b0890456603012b06d9f5e635e752c71f598368b8e542d6be375b1553646bfe"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["gsheet", "dimension", "table"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["gsheet", "dimension", "table"], "description": "", "columns": {"asm_name": {"name": "asm_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page": {"name": "page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pic": {"name": "pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["gsheet", "dimension", "table"]}, "created_at": 1703652761.5886664, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__asms`", "raw_code": "{{ config(\n    materialized = 'table',\n    tags = ['gsheet','dimension','table']\n) }}\n\nWITH asm_list AS (\n\n    SELECT\n        asm AS asm_name,\n        CASE\n            WHEN store_name = '5S Th\u00e1i B\u00ecnh 1' THEN '5S Th\u00e1i b\u00ecnh 1'\n            WHEN store_name LIKE '5S Thanh Ho\u00e1%' THEN REGEXP_REPLACE(\n                store_name,\n                'Thanh Ho\u00e1',\n                'Thanh H\u00f3a'\n            )\n            ELSE store_name\n        END AS store_name,\n        phone,\n        email,\n        page,\n        pic,\n    FROM\n        {{ ref('base_gSheet__asms') }}\n)\nSELECT\n    asm_list.asm_name,\n    branches.branch_id,\n    asm_list.phone,\n    asm_list.email,\n    asm_list.page,\n    asm_list.pic,\nFROM\n    asm_list\n    LEFT JOIN {{ ref('stg_kiotviet__branches') }}\n    branches\n    ON asm_list.store_name = branches.branch_name", "language": "sql", "refs": [{"name": "base_gSheet__asms", "package": null, "version": null}, {"name": "stg_kiotviet__branches", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_gSheet__asms", "model.sado_analytics_services.stg_kiotviet__branches"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__asms.sql", "compiled": true, "compiled_code": "\n\nWITH asm_list AS (\n\n    SELECT\n        asm AS asm_name,\n        CASE\n            WHEN store_name = '5S Th\u00e1i B\u00ecnh 1' THEN '5S Th\u00e1i b\u00ecnh 1'\n            WHEN store_name LIKE '5S Thanh Ho\u00e1%' THEN REGEXP_REPLACE(\n                store_name,\n                'Thanh Ho\u00e1',\n                'Thanh H\u00f3a'\n            )\n            ELSE store_name\n        END AS store_name,\n        phone,\n        email,\n        page,\n        pic,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_gSheet__asms`\n)\nSELECT\n    asm_list.asm_name,\n    branches.branch_id,\n    asm_list.phone,\n    asm_list.email,\n    asm_list.page,\n    asm_list.pic,\nFROM\n    asm_list\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`\n    branches\n    ON asm_list.store_name = branches.branch_name", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__nhanhvnsalechannels": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__nhanhvnsalechannels", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__nhanhvnsalechannels.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__nhanhvnsalechannels.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__nhanhvnsalechannels", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__nhanhvnsalechannels"], "alias": "stg_gsheet__nhanhvnsalechannels", "checksum": {"name": "sha256", "checksum": "c4d30ea8db16a3a9e3f2f91d4a5a6a1d6cac40e00abb9a2bbe82f8aac1de8cad"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["nhanhvn", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["nhanhvn", "dimension", "view"], "description": "Ph\u00e2n lo\u1ea1i k\u00eanh b\u00e1n h\u00e0ng l\u1ea5y theo Nhanhvn", "columns": {"sale_channel_id": {"name": "sale_channel_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sale_channel": {"name": "sale_channel", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["nhanhvn", "dimension", "view"]}, "created_at": 1703652761.585629, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__nhanhvnsalechannels`", "raw_code": "{{ config(\n    tags = ['nhanhvn','dimension','view']\n) }}\n\nWITH source AS (\n\n    SELECT\n        *,\n    FROM\n        {{ source(\n            'gSheet',\n            '_ext_nhanhvn_salechannel'\n        ) }}\n)\nSELECT\n    safe_cast(\n        sale_channel_id AS int64\n    ) sale_channel_id,\n    sale_channel,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["gSheet", "_ext_nhanhvn_salechannel"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.gSheet._ext_nhanhvn_salechannel"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__nhanhvnsalechannels.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        *,\n    FROM\n        `agile-scheme-394814`.`GSheet`.`_ext_nhanhvn_salechannel`\n)\nSELECT\n    safe_cast(\n        sale_channel_id AS int64\n    ) sale_channel_id,\n    sale_channel,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__regions": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__regions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__regions.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__regions.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__regions", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__regions"], "alias": "stg_gsheet__regions", "checksum": {"name": "sha256", "checksum": "c974819db9aa2508165b5ab221886f58862bc188d159d94c43217e7d752cbca8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["dimension", "table"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["dimension", "table"], "description": "Ph\u00e2n lo\u1ea1i khu v\u1ef1c v\u00e0 nh\u00f3m CH", "columns": {"region": {"name": "region", "description": "Nh\u00f3m", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "T\u00ean chi nh\u00e1nh tr\u00ean Nhanhvn", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["dimension", "table"]}, "created_at": 1703652761.5866585, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__regions`", "raw_code": "{{ config(\n    materialized = 'table',\n    tags = ['dimension','table']\n) }}\n\nWITH source AS (\n\n    SELECT\n        *,\n    FROM\n        {{ source(\n            'gSheet',\n            '_ext_region'\n        ) }}\n        where branch_name is not null\n)\nSELECT\n    *\nFROM\n    source", "language": "sql", "refs": [], "sources": [["gSheet", "_ext_region"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.gSheet._ext_region"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__regions.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        *,\n    FROM\n        `agile-scheme-394814`.`GSheet`.`_ext_region`\n        where branch_name is not null\n)\nSELECT\n    *\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_gSheet__asms": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_gSheet__asms", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/base/base_gSheet__asms.sql", "original_file_path": "models/staging/gSheet/base/base_gSheet__asms.sql", "unique_id": "model.sado_analytics_services.base_gSheet__asms", "fqn": ["sado_analytics_services", "staging", "gSheet", "base", "base_gSheet__asms"], "alias": "base_gSheet__asms", "checksum": {"name": "sha256", "checksum": "ee8a67f5548c27b6176d159007db5a11670b593e5c7703418e17afe59d6f67ff"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"asm": {"name": "asm", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "store_name": {"name": "store_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page": {"name": "page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pic": {"name": "pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/base/base_gSheet__asms.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1703652761.5981703, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_gSheet__asms`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n    FROM\n        {{ source(\n            'gSheet',\n            '_ext_asm_list'\n        ) }}\n)\nSELECT\n    asm,\n    store_name,\n    phone,\n    email,\n    source.page,\n    source.pic,\nFROM\n    source\nWHERE\n    asm <> 'ASM'", "language": "sql", "refs": [], "sources": [["gSheet", "_ext_asm_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.gSheet._ext_asm_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/base/base_gSheet__asms.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n    FROM\n        `agile-scheme-394814`.`GSheet`.`_ext_asm_list`\n)\nSELECT\n    asm,\n    store_name,\n    phone,\n    email,\n    source.page,\n    source.pic,\nFROM\n    source\nWHERE\n    asm <> 'ASM'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.facebook_dashboard": {"database": "agile-scheme-394814", "schema": "dbt_prod_core", "name": "facebook_dashboard", "resource_type": "model", "package_name": "sado_analytics_services", "path": "core/report/facebook/facebook_dashboard.sql", "original_file_path": "models/core/report/facebook/facebook_dashboard.sql", "unique_id": "model.sado_analytics_services.facebook_dashboard", "fqn": ["sado_analytics_services", "core", "report", "facebook", "facebook_dashboard"], "alias": "facebook_dashboard", "checksum": {"name": "sha256", "checksum": "b7b66387882e06f896dc7428812b336884e2d0a68cd1a63d851b47e99bfb5a33"}, "config": {"enabled": true, "alias": null, "schema": "core", "database": null, "tags": ["incremental", "fact", "dashboard"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${facebook_dashboard.date}", "fields": ["date", "period", "year_month", "month_name", "period_code", "no_days"]}, {"join": "stg_gsheet__asms", "sql_on": "${stg_gsheet__asms.page} = ${facebook_dashboard.page}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["date", "page"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "dashboard"], "description": "", "columns": {"asm_name": {"name": "asm_name", "description": "T\u00ean ASM qu\u1ea3n l\u00fd CH", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page": {"name": "page", "description": "T\u00ean page \u0111\u1ec3 ch\u1ea1y", "meta": {"dimension": {"type": "string"}, "metrics": {"m_num_pages": {"type": "count_distinct", "label": "No. Pages", "group_label": "Misc"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "date", "hidden": true}, "metrics": {"m_num_pages_days": {"type": "count_distinct", "sql": "concat(${TABLE}.date,page)", "label": "No. Pages Days", "group_label": "Misc", "filters": [{"spend": ">0"}]}, "m_num_days": {"type": "count_distinct", "label": "No. Days", "group_label": "Misc"}}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "val_transaction_id": {"name": "val_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng giao d\u1ecbch", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_transactions": {"type": "sum", "label": "No. Transactions", "group_label": "Sales metrics", "compact": "thousands", "round": 1}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "num_invoice_transaction_id": {"name": "num_invoice_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng invoice", "meta": {"dimension": {"type": "number"}, "metrics": {"m_num_invoices": {"type": "sum", "label": "No. Invoices", "group_label": "Sales metrics", "compact": "thousands", "round": 1}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "num_return_transaction_id": {"name": "num_return_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng tr\u1ea3", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_returns": {"type": "sum", "label": "No. Returns", "group_label": "Sales metrics", "compact": "thousands", "round": 1}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "val_total": {"name": "val_total", "description": "gi\u00e1 tr\u1ecb giao d\u1ecbch", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_transaction_val": {"type": "sum", "label": "Transaction Value", "group_label": "Sales metrics", "compact": "billions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_invoice_total": {"name": "num_invoice_total", "description": "gi\u00e1 tr\u1ecb b\u00e1n", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_invoice_val": {"type": "sum", "label": "Invoice Value", "group_label": "Sales metrics", "compact": "billions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_return_total": {"name": "num_return_total", "description": "gi\u00e1 tr\u1ecb tr\u1ea3", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_return_val": {"type": "sum", "label": "Return Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "val_total_payment": {"name": "val_total_payment", "description": "doanh thu thu\u1ea7n", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_payment_val": {"type": "sum", "label": "Payment", "group_label": "Sales metrics", "compact": "billions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_invoice_total_payment": {"name": "num_invoice_total_payment", "description": "doanh thu thu\u1ea7n b\u00e1n h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_return_total_payment": {"name": "num_return_total_payment", "description": "doanh thu thu\u1ea7n tr\u1ea3 h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "daily_budget": {"name": "daily_budget", "description": "ng\u00e2n sach/ng\u00e0y", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_ads_budget": {"type": "sum", "label": "Budget", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "daily_sales_target": {"name": "daily_sales_target", "description": "target sales/ng\u00e0y", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_sales_target": {"type": "sum", "label": "Sales target", "group_label": "Budget", "compact": "billions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "daily_traffic_target": {"name": "daily_traffic_target", "description": "target traffic/ng\u00e0y", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_traffic_target": {"type": "sum", "label": "Traffic target", "group_label": "Budget", "compact": "thousands", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "hi\u1ec3n th\u1ecb", "meta": {"dimension": {"type": "number"}, "metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "Ads metrics", "compact": "millions", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "chi ti\u00eau FB", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_spend": {"type": "sum", "label": "Ads Spend", "group_label": "Ads metrics", "compact": "millions", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "l\u01b0\u1ee3ng clicks", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "l\u01b0\u1ee3ng ti\u1ebfp c\u1eadn", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_link_click": {"type": "sum", "label": "Link click", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_post_engagement": {"type": "sum", "label": "Post engagement", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_offline_cv": {"type": "sum", "label": "Offline CV", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_offline_cv_value": {"type": "sum", "label": "Offline CV Value", "group_label": "Ads metrics", "compact": "millions", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_online_cv": {"type": "sum", "label": "Online CV", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_online_cv_value": {"type": "sum", "label": "Online CV Value", "group_label": "Ads metrics", "compact": "millions", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "meta_purchase": {"name": "meta_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_mess_cv": {"type": "sum", "label": "Mess CV", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "meta_purchase_value": {"name": "meta_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_mess_cv_value": {"type": "sum", "label": "Mess CV Value", "group_label": "Ads metrics", "compact": "millions", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "_results_message": {"name": "_results_message", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_messages": {"type": "sum", "label": "Messages", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "pic": {"name": "pic", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_pic": {"type": "string", "sql": "case ${TABLE}.page \nwhen '5SFTHA' then 'Th\u1eafng'\nwhen '5SFTIE' then 'Ti\u1ebfn'\nwhen '5SFTUN' then 'T\u00f9ng'\nwhen '5SFTRA' then 'Trang'\nelse ${TABLE}.pic end", "label": "PIC"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${facebook_dashboard.date}", "fields": ["date", "period", "year_month", "month_name", "period_code", "no_days"]}, {"join": "stg_gsheet__asms", "sql_on": "${stg_gsheet__asms.page} = ${facebook_dashboard.page}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/core/report/facebook/facebook_dashboard.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "core", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${facebook_dashboard.date}", "fields": ["date", "period", "year_month", "month_name", "period_code", "no_days"]}, {"join": "stg_gsheet__asms", "sql_on": "${stg_gsheet__asms.page} = ${facebook_dashboard.page}"}]}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["date", "page"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "fact", "dashboard"]}, "created_at": 1703652761.6262648, "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`facebook_dashboard`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  unique_key = ['date','page'],\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'fact','dashboard']\n) }}\n\n{% set metrics = [\"impressions\",\"spend\",\"clicks\",\"reach\",\"link_click\",\"post_engagement\",\"offline_conversion_purchase\",\"offline_conversion_purchase_value\",\"pixel_purchase\",\"pixel_purchase_value\",\"meta_purchase\",\"meta_purchase_value\",\"_results_message\"] %}\n{% set targets = [\"budget\", \"sales_target\", \"traffic_target\"] %}\n{% set rev_calcols = {\"transaction_id\":\"count(distinct\", \"total\":\"sum(\", \"total_payment\":\"sum(\"} %}\n{% set rev_types = [\"invoice\", \"return\"] %}\n\n\n\nwith facebook_performance as (\n    select \n      fb.page, date_start, \n      {# fb.pic, #}\n    {% for metric in metrics %}\n    sum(fb.{{metric}}) as {{metric}},\n    {% endfor %}\n    from {{ref(\"facebook_performance\")}} fb\n    where date_start >= '2023-11-01'\n    and (\n      fb.page in (select distinct a.page from {{ref(\"stg_gsheet__asms\")}} a)\n      or \n      fb.page in (\"5SFTHA\",\"5SFTIE\",\"5SFTUN\",\"5SFTRA\",\"5SFT\",\"5SFG\",\"5SF\")\n      )\n    group by 1,2\n),\nfacebook_budget as (\n  select \n  budget.page,\n  budget.date,\n  budget.milestone_name,\n  {# budget.pic, #}\n  {% for target in targets %}\n    sum(daily_{{target}}) as daily_{{target}},\n    {% endfor %}\n    from {{ref(\"facebook_budget\")}} budget\n    where budget.date <=current_date()\n    group by 1,2,3\n),\noffline_performance as (\n  select \n  a.page,\n  a.pic,\n  date(r.transaction_date) transaction_date,\n  {% for col, cal in rev_calcols.items() %}\n    {{cal}} {{col}}{{\")\"}} as val_{{col}},\n    {% for type in rev_types%}\n      {{cal}} case when transaction_type = '{{type}}' then {{col}} end{{\")\"}} as num_{{type}}_{{col}}, \n    {% endfor %}\n  {% endfor %}\n  from {{ref(\"revenue\")}} r\n  inner join {{ref(\"stg_gsheet__asms\")}} a on r.branch_id = a.branch_id\n  where r.transaction_date >='2023-11-01'\n  group by 1,2,3\n),\n\nasms as (\n  select distinct a.asm_name, a.page, a.pic\n  from {{ref(\"stg_gsheet__asms\")}} a\n)\n\nSELECT\np.* except(page,date_start),\no.* except(page,transaction_date,pic),\nb.* EXCEPT(date, page, milestone_name),\ncoalesce(p.date_start,o.transaction_date,b.date) as date,\ncoalesce(p.page,o.page,b.page) as page,\nasms.asm_name,\ncoalesce(asms.pic,o.pic) as pic,\nfrom facebook_performance p\nfull join facebook_budget b on p.date_start = b.date and (p.page = b.page)\nfull join offline_performance o on  o.transaction_date = p.date_start and (o.page = p.page)\nleft join asms on coalesce(p.page,o.page,b.page) = asms.page", "language": "sql", "refs": [{"name": "facebook_performance", "package": null, "version": null}, {"name": "stg_gsheet__asms", "package": null, "version": null}, {"name": "facebook_budget", "package": null, "version": null}, {"name": "revenue", "package": null, "version": null}, {"name": "stg_gsheet__asms", "package": null, "version": null}, {"name": "stg_gsheet__asms", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.facebook_performance", "model.sado_analytics_services.stg_gsheet__asms", "model.sado_analytics_services.facebook_budget", "model.sado_analytics_services.revenue"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/report/facebook/facebook_dashboard.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\n\nwith facebook_performance as (\n    select \n      fb.page, date_start, \n      \n    \n    sum(fb.impressions) as impressions,\n    \n    sum(fb.spend) as spend,\n    \n    sum(fb.clicks) as clicks,\n    \n    sum(fb.reach) as reach,\n    \n    sum(fb.link_click) as link_click,\n    \n    sum(fb.post_engagement) as post_engagement,\n    \n    sum(fb.offline_conversion_purchase) as offline_conversion_purchase,\n    \n    sum(fb.offline_conversion_purchase_value) as offline_conversion_purchase_value,\n    \n    sum(fb.pixel_purchase) as pixel_purchase,\n    \n    sum(fb.pixel_purchase_value) as pixel_purchase_value,\n    \n    sum(fb.meta_purchase) as meta_purchase,\n    \n    sum(fb.meta_purchase_value) as meta_purchase_value,\n    \n    sum(fb._results_message) as _results_message,\n    \n    from `agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance` fb\n    where date_start >= '2023-11-01'\n    and (\n      fb.page in (select distinct a.page from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__asms` a)\n      or \n      fb.page in (\"5SFTHA\",\"5SFTIE\",\"5SFTUN\",\"5SFTRA\",\"5SFT\",\"5SFG\",\"5SF\")\n      )\n    group by 1,2\n),\nfacebook_budget as (\n  select \n  budget.page,\n  budget.date,\n  budget.milestone_name,\n  \n  \n    sum(daily_budget) as daily_budget,\n    \n    sum(daily_sales_target) as daily_sales_target,\n    \n    sum(daily_traffic_target) as daily_traffic_target,\n    \n    from `agile-scheme-394814`.`dbt_prod_marketing`.`facebook_budget` budget\n    where budget.date <=current_date()\n    group by 1,2,3\n),\noffline_performance as (\n  select \n  a.page,\n  a.pic,\n  date(r.transaction_date) transaction_date,\n  \n    count(distinct transaction_id) as val_transaction_id,\n    \n      count(distinct case when transaction_type = 'invoice' then transaction_id end) as num_invoice_transaction_id, \n    \n      count(distinct case when transaction_type = 'return' then transaction_id end) as num_return_transaction_id, \n    \n  \n    sum( total) as val_total,\n    \n      sum( case when transaction_type = 'invoice' then total end) as num_invoice_total, \n    \n      sum( case when transaction_type = 'return' then total end) as num_return_total, \n    \n  \n    sum( total_payment) as val_total_payment,\n    \n      sum( case when transaction_type = 'invoice' then total_payment end) as num_invoice_total_payment, \n    \n      sum( case when transaction_type = 'return' then total_payment end) as num_return_total_payment, \n    \n  \n  from `agile-scheme-394814`.`dbt_prod_sales`.`revenue` r\n  inner join `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__asms` a on r.branch_id = a.branch_id\n  where r.transaction_date >='2023-11-01'\n  group by 1,2,3\n),\n\nasms as (\n  select distinct a.asm_name, a.page, a.pic\n  from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__asms` a\n)\n\nSELECT\np.* except(page,date_start),\no.* except(page,transaction_date,pic),\nb.* EXCEPT(date, page, milestone_name),\ncoalesce(p.date_start,o.transaction_date,b.date) as date,\ncoalesce(p.page,o.page,b.page) as page,\nasms.asm_name,\ncoalesce(asms.pic,o.pic) as pic,\nfrom facebook_performance p\nfull join facebook_budget b on p.date_start = b.date and (p.page = b.page)\nfull join offline_performance o on  o.transaction_date = p.date_start and (o.page = p.page)\nleft join asms on coalesce(p.page,o.page,b.page) = asms.page", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.rfm_movement": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "rfm_movement", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/rfm_movement.sql", "original_file_path": "models/marts/sales/rfm_movement.sql", "unique_id": "model.sado_analytics_services.rfm_movement", "fqn": ["sado_analytics_services", "marts", "sales", "rfm_movement"], "alias": "rfm_movement", "checksum": {"name": "sha256", "checksum": "7bd1e171b47a6a4b4b3dfd2375626efd8931a5b8bc2b5f9fbf90773592a2777b"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["incremental", "table", "fact", "kiotviet"], "meta": {"joins": [{"join": "stg_kiotviet__customers", "alias": "customers", "sql_on": "${rfm_movement.customer_id} = ${customers.customer_id} and ${rfm_movement.start_of_month} = date_trunc(current_date(),month)"}, {"join": "stg_kiotviet__branches", "alias": "last_branch", "sql_on": "${rfm_movement.last_purchase_branch} = ${last_branch.branch_id}", "fields": ["branch_id", "branch_name", "province", "region"]}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["customer_id", "start_of_month"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "start_of_month", "data_type": "date", "granularity": "month"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "table", "fact", "kiotviet"], "description": "rfm segmentation result", "columns": {"customer_id": {"name": "customer_id", "description": "", "meta": {"metrics": {"m_num_customers": {"type": "count_distinct", "label": "Total customers", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_purchase_branch": {"name": "last_purchase_branch", "description": "lastest store customer made purchase", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_of_month": {"name": "start_of_month", "description": "month of rfm calculation", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_purchase": {"name": "first_purchase", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_purchase": {"name": "last_purchase", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recency": {"name": "recency", "description": "no. days since last purchase", "meta": {"metrics": {"m_med_recency": {"type": "median", "label": "Med of Recency", "group_label": "Customer Metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monetary": {"name": "monetary", "description": "total monetary value since created", "meta": {"metrics": {"m_monetary": {"type": "average", "label": "AVG of Monetary", "group_label": "Customer Metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "frequency": {"name": "frequency", "description": "times of purchasing", "meta": {"metrics": {"m_freq": {"type": "average", "label": "AVG of Freq", "group_label": "Customer Metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recency_score": {"name": "recency_score", "description": "calculate by dividing customer base into 5 groups by quantile range of recency", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "frequency_score": {"name": "frequency_score", "description": "calculate by dividing customer base into 5 groups by quantile range of frequency", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monetary_score": {"name": "monetary_score", "description": "calculate by dividing customer base into 5 groups by quantile range of monetary value", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "score_concat": {"name": "score_concat", "description": "rfm concatenated score", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "segment": {"name": "segment", "description": "group segmentation base on rfm score", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recency_type": {"name": "recency_type", "description": "classified new and returning customers", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_kiotviet__customers", "alias": "customers", "sql_on": "${rfm_movement.customer_id} = ${customers.customer_id} and ${rfm_movement.start_of_month} = date_trunc(current_date(),month)"}, {"join": "stg_kiotviet__branches", "alias": "last_branch", "sql_on": "${rfm_movement.last_purchase_branch} = ${last_branch.branch_id}", "fields": ["branch_id", "branch_name", "province", "region"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/rfm_movement.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "sales", "meta": {"joins": [{"join": "stg_kiotviet__customers", "alias": "customers", "sql_on": "${rfm_movement.customer_id} = ${customers.customer_id} and ${rfm_movement.start_of_month} = date_trunc(current_date(),month)"}, {"join": "stg_kiotviet__branches", "alias": "last_branch", "sql_on": "${rfm_movement.last_purchase_branch} = ${last_branch.branch_id}", "fields": ["branch_id", "branch_name", "province", "region"]}]}, "partition_by": {"field": "start_of_month", "data_type": "date", "granularity": "month"}, "incremental_strategy": "insert_overwrite", "unique_key": ["customer_id", "start_of_month"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "table", "fact", "kiotviet"]}, "created_at": 1703652761.7168586, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'start_of_month',\n    'data_type': 'date',\n    'granularity': 'month' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['customer_id', 'start_of_month'],\n    on_schema_change = 'sync_all_columns',\n    tags=['incremental','table', 'fact', 'kiotviet']\n  )\n}}\n\nWITH calendar as (\n  select distinct start_of_month, \n  from {{ref('calendar')}} \n),\nsource AS (\n  SELECT\n    customer_id,\n    DATE(transaction_date) transaction_date,\n    DATE_TRUNC(\n      DATE(transaction_date),\n      MONTH\n    ) transaction_month,\n    SUM(total) total,\n    COUNT(\n      DISTINCT CASE\n        WHEN transaction_type = 'invoice' THEN DATE_TRUNC(\n          transaction_date,\n          DAY\n        )\n      END\n    ) num_transactions,\n  FROM\n    {{ ref('revenue') }}\n    where customer_id is not null\n    group by 1,2,3\n),\naggregated_and_cross_join as (\nselect \n  calendar.start_of_month,\n  source.customer_id,\n  sum(case when calendar.start_of_month= source.transaction_month then total end) total,\n  sum(case when calendar.start_of_month= source.transaction_month then num_transactions end) num_transactions,\n  max(case when calendar.start_of_month= source.transaction_month then transaction_date end) transaction_date\nfrom calendar\ncross join source\nwhere 1=1\n  and calendar.start_of_month <= current_date()\n  \n    group by 1,2\n),\n\naggregated_cumulative as (\n  select \n    start_of_month,\n    customer_id,\n    min(transaction_date) over w3 as first_purchase,\n    coalesce(max(transaction_date) over w4, max(transaction_date) over w5) as last_purchase,\n    coalesce(sum(total) over w1,0) as monetary,\n    coalesce(sum(num_transactions) over w1,0) as frequency,\n    date_diff(coalesce(max(transaction_date) over w2,last_day(start_of_month,month)), coalesce(max(transaction_date) over w4, max(transaction_date) over w5),day) as recency\n  from aggregated_and_cross_join\n  window w1 as (\n    PARTITION by customer_id order by unix_date(start_of_month) desc\n    range between 93 preceding and current row\n  ),\n  w2 as (\n    PARTITION by customer_id, start_of_month order by unix_date(start_of_month) asc range between unbounded preceding and 1 preceding\n  ),\n  w4 as (\n    PARTITION by customer_id,start_of_month order by unix_date(start_of_month) asc range between unbounded preceding and current row\n  ),\n  w5 as (\n    PARTITION by customer_id order by unix_date(start_of_month) asc range between unbounded preceding and 1 preceding\n  ),\n  w3 as (\n    PARTITION by customer_id\n  )\n),\n\nscoring as (\n  SELECT\n  customer_id,\n  start_of_month,\n  first_purchase,\n  last_purchase,\n  recency,\n  monetary,\n  frequency,\n  NTILE(5) OVER (PARTITION by start_of_month ORDER BY recency desc ) AS recency_score,\n  case when frequency >0 then  NTILE(5) OVER (PARTITION by start_of_month,(case when monetary>0 then \"purchase\" else \"notpurchase\" end) ORDER BY frequency asc ) else 1 end AS frequency_score,\n  case when monetary > 0 then NTILE(5) OVER (PARTITION by start_of_month, (case when monetary>0 then \"purchase\" else \"notpurchase\" end) ORDER BY monetary asc ) else 1 end AS monetary_score\nFROM\n  aggregated_cumulative\n  where\n  start_of_month >= date_trunc(first_purchase,month)\n  ),\n\n  last_branch as (\n    select distinct customer_id,\n    date(transaction_date) transaction_date,\n    date_trunc( date(transaction_date), month) as transaction_month,\n    first_value(branch_id) over (partition by customer_id, date_trunc( date(transaction_date), month) order by transaction_date desc rows between unbounded preceding and unbounded following) as last_purchase_branch,\n    from {{ ref('revenue') }}\n    where customer_id is not null\n  )\n\n\n  select scoring.*,\n  concat(recency_score,frequency_score,monetary_score) score_concat,\n  case when concat(recency_score,frequency_score,monetary_score) in ('555', '554', '544', '545', '454', '455', '445') then 'Champions'\n  when concat(recency_score,frequency_score,monetary_score) in ('543','444','435','355','354','345','344','335') then 'Loyal'\n  when concat(recency_score,frequency_score,monetary_score) in ('553','551','552','541','542','533','532','531','452','451','442','441','431','453','433','432','423','353','352','351','342','341','333','323') then 'Potential Loyalists'\n  when concat(recency_score,frequency_score,monetary_score) in ('512','511','422',' 421 412','411','311') then 'New Customers'\n  when concat(recency_score,frequency_score,monetary_score) in ('525','524','523','522','521','515','514','513','425','424','413','414','415','315','314','313') then 'Promising'\n  when concat(recency_score,frequency_score,monetary_score) in ('535','534','443','434','343','334','325','324') then 'Need Attention'\n  when concat(recency_score,frequency_score,monetary_score) in ('331','321','312','221','213','231','241','251') then 'About To Sleep'\n  when concat(recency_score,frequency_score,monetary_score) in ('255','254','245','244','253','252','243','242','235','234','225','224','153','152','145','143','142','135','134','133','125','124') then 'At Risk'\n  when concat(recency_score,frequency_score,monetary_score) in ('155','154','144','214','215','115','114','113') then 'Cannot Lose Them'\n  when concat(recency_score,frequency_score,monetary_score) in ('332','322','233','232','223','222','132','123','122','212','211') then 'Hibernating customers'\n  when concat(recency_score,frequency_score,monetary_score) in ('111','112','121','131','141','151') then 'Lost customers'\n  end as segment,\n  case when date_trunc(first_purchase,month) = start_of_month then \"Kh\u00e1ch m\u1edbi\"\n  when recency > 360 then '1 n\u0103m ch\u01b0a quay l\u1ea1i'\n              when recency > 180 then '6 th\u00e1ng ch\u01b0a quay l\u1ea1i'\n              when recency > 90 then '3 th\u00e1ng ch\u01b0a quay l\u1ea1i'\n              when recency > 30 then '1 th\u00e1ng ch\u01b0a quay l\u1ea1i'\n              else \"Kh\u00e1ch quay l\u1ea1i\" end as recency_type,\n  last_branch.last_purchase_branch,\n  from scoring\n  left join last_branch on scoring.customer_id = last_branch.customer_id and last_branch.transaction_month = scoring.start_of_month\n    {% if is_incremental() %}\n  where\n   date(start_of_month) >= DATE(_dbt_max_partition)\n    {% endif %}", "language": "sql", "refs": [{"name": "calendar", "package": null, "version": null}, {"name": "revenue", "package": null, "version": null}, {"name": "revenue", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.revenue"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/rfm_movement.sql", "compiled": true, "compiled_code": "\n\nWITH calendar as (\n  select distinct start_of_month, \n  from `agile-scheme-394814`.`dbt_prod`.`calendar` \n),\nsource AS (\n  SELECT\n    customer_id,\n    DATE(transaction_date) transaction_date,\n    DATE_TRUNC(\n      DATE(transaction_date),\n      MONTH\n    ) transaction_month,\n    SUM(total) total,\n    COUNT(\n      DISTINCT CASE\n        WHEN transaction_type = 'invoice' THEN DATE_TRUNC(\n          transaction_date,\n          DAY\n        )\n      END\n    ) num_transactions,\n  FROM\n    `agile-scheme-394814`.`dbt_prod_sales`.`revenue`\n    where customer_id is not null\n    group by 1,2,3\n),\naggregated_and_cross_join as (\nselect \n  calendar.start_of_month,\n  source.customer_id,\n  sum(case when calendar.start_of_month= source.transaction_month then total end) total,\n  sum(case when calendar.start_of_month= source.transaction_month then num_transactions end) num_transactions,\n  max(case when calendar.start_of_month= source.transaction_month then transaction_date end) transaction_date\nfrom calendar\ncross join source\nwhere 1=1\n  and calendar.start_of_month <= current_date()\n  \n    group by 1,2\n),\n\naggregated_cumulative as (\n  select \n    start_of_month,\n    customer_id,\n    min(transaction_date) over w3 as first_purchase,\n    coalesce(max(transaction_date) over w4, max(transaction_date) over w5) as last_purchase,\n    coalesce(sum(total) over w1,0) as monetary,\n    coalesce(sum(num_transactions) over w1,0) as frequency,\n    date_diff(coalesce(max(transaction_date) over w2,last_day(start_of_month,month)), coalesce(max(transaction_date) over w4, max(transaction_date) over w5),day) as recency\n  from aggregated_and_cross_join\n  window w1 as (\n    PARTITION by customer_id order by unix_date(start_of_month) desc\n    range between 93 preceding and current row\n  ),\n  w2 as (\n    PARTITION by customer_id, start_of_month order by unix_date(start_of_month) asc range between unbounded preceding and 1 preceding\n  ),\n  w4 as (\n    PARTITION by customer_id,start_of_month order by unix_date(start_of_month) asc range between unbounded preceding and current row\n  ),\n  w5 as (\n    PARTITION by customer_id order by unix_date(start_of_month) asc range between unbounded preceding and 1 preceding\n  ),\n  w3 as (\n    PARTITION by customer_id\n  )\n),\n\nscoring as (\n  SELECT\n  customer_id,\n  start_of_month,\n  first_purchase,\n  last_purchase,\n  recency,\n  monetary,\n  frequency,\n  NTILE(5) OVER (PARTITION by start_of_month ORDER BY recency desc ) AS recency_score,\n  case when frequency >0 then  NTILE(5) OVER (PARTITION by start_of_month,(case when monetary>0 then \"purchase\" else \"notpurchase\" end) ORDER BY frequency asc ) else 1 end AS frequency_score,\n  case when monetary > 0 then NTILE(5) OVER (PARTITION by start_of_month, (case when monetary>0 then \"purchase\" else \"notpurchase\" end) ORDER BY monetary asc ) else 1 end AS monetary_score\nFROM\n  aggregated_cumulative\n  where\n  start_of_month >= date_trunc(first_purchase,month)\n  ),\n\n  last_branch as (\n    select distinct customer_id,\n    date(transaction_date) transaction_date,\n    date_trunc( date(transaction_date), month) as transaction_month,\n    first_value(branch_id) over (partition by customer_id, date_trunc( date(transaction_date), month) order by transaction_date desc rows between unbounded preceding and unbounded following) as last_purchase_branch,\n    from `agile-scheme-394814`.`dbt_prod_sales`.`revenue`\n    where customer_id is not null\n  )\n\n\n  select scoring.*,\n  concat(recency_score,frequency_score,monetary_score) score_concat,\n  case when concat(recency_score,frequency_score,monetary_score) in ('555', '554', '544', '545', '454', '455', '445') then 'Champions'\n  when concat(recency_score,frequency_score,monetary_score) in ('543','444','435','355','354','345','344','335') then 'Loyal'\n  when concat(recency_score,frequency_score,monetary_score) in ('553','551','552','541','542','533','532','531','452','451','442','441','431','453','433','432','423','353','352','351','342','341','333','323') then 'Potential Loyalists'\n  when concat(recency_score,frequency_score,monetary_score) in ('512','511','422',' 421 412','411','311') then 'New Customers'\n  when concat(recency_score,frequency_score,monetary_score) in ('525','524','523','522','521','515','514','513','425','424','413','414','415','315','314','313') then 'Promising'\n  when concat(recency_score,frequency_score,monetary_score) in ('535','534','443','434','343','334','325','324') then 'Need Attention'\n  when concat(recency_score,frequency_score,monetary_score) in ('331','321','312','221','213','231','241','251') then 'About To Sleep'\n  when concat(recency_score,frequency_score,monetary_score) in ('255','254','245','244','253','252','243','242','235','234','225','224','153','152','145','143','142','135','134','133','125','124') then 'At Risk'\n  when concat(recency_score,frequency_score,monetary_score) in ('155','154','144','214','215','115','114','113') then 'Cannot Lose Them'\n  when concat(recency_score,frequency_score,monetary_score) in ('332','322','233','232','223','222','132','123','122','212','211') then 'Hibernating customers'\n  when concat(recency_score,frequency_score,monetary_score) in ('111','112','121','131','141','151') then 'Lost customers'\n  end as segment,\n  case when date_trunc(first_purchase,month) = start_of_month then \"Kh\u00e1ch m\u1edbi\"\n  when recency > 360 then '1 n\u0103m ch\u01b0a quay l\u1ea1i'\n              when recency > 180 then '6 th\u00e1ng ch\u01b0a quay l\u1ea1i'\n              when recency > 90 then '3 th\u00e1ng ch\u01b0a quay l\u1ea1i'\n              when recency > 30 then '1 th\u00e1ng ch\u01b0a quay l\u1ea1i'\n              else \"Kh\u00e1ch quay l\u1ea1i\" end as recency_type,\n  last_branch.last_purchase_branch,\n  from scoring\n  left join last_branch on scoring.customer_id = last_branch.customer_id and last_branch.transaction_month = scoring.start_of_month\n    \n  where\n   date(start_of_month) >= DATE(_dbt_max_partition)\n    ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.revenue_items": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "revenue_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/revenue_items.sql", "original_file_path": "models/marts/sales/revenue_items.sql", "unique_id": "model.sado_analytics_services.revenue_items", "fqn": ["sado_analytics_services", "marts", "sales", "revenue_items"], "alias": "revenue_items", "checksum": {"name": "sha256", "checksum": "9d7b2e138e40eabbc5f3c46581123cf261e3328b1ffda0a5f2800f892dfa1109"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["incremental", "fact", "kiotviet"], "meta": {"joins": [{"join": "stg_kiotviet__branches", "sql_on": "${stg_kiotviet__branches.branch_id} = ${revenue_items.branch_id}"}, {"join": "stg_kiotviet__customers", "sql_on": "${stg_kiotviet__customers.customer_id} = ${revenue_items.customer_id}"}, {"join": "stg_kiotviet__products", "sql_on": "${stg_kiotviet__products.product_id} = ${revenue_items.product_id}"}, {"join": "stg_kiotviet__users", "sql_on": "${stg_kiotviet__users.user_id} =${revenue_items.employee_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue_items.transaction_date)"}, {"join": "revenue", "sql_on": "${revenue_items.transaction_id} = ${revenue.transaction_id}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["transaction_id", "product_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "kiotviet"], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "", "meta": {"metrics": {"m_item_sold": {"type": "sum", "label": "Num Items Sold", "group_label": "Sales Metrics", "compact": "thousands", "round": 1, "filters": [{"transaction_type": "invoice"}, {"subtotal": "> 0"}]}, "m_item_return": {"type": "sum", "label": "Num Items Return", "group_label": "Sales Metrics", "compact": "thousands", "round": 1, "filters": [{"transaction_type": "return"}]}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {"metrics": {"m_item_discount_value": {"type": "sum", "label": "Value discount on Items", "group_label": "Sales Metrics", "filters": [{"transaction_type": "invoice"}], "compact": "millions", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "", "meta": {"metrics": {"m_item_value": {"type": "sum", "label": "Item Value", "group_label": "Sales Metrics", "compact": "billions", "round": 1, "filters": [{"transaction_type": "invoice"}]}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_kiotviet__branches", "sql_on": "${stg_kiotviet__branches.branch_id} = ${revenue_items.branch_id}"}, {"join": "stg_kiotviet__customers", "sql_on": "${stg_kiotviet__customers.customer_id} = ${revenue_items.customer_id}"}, {"join": "stg_kiotviet__products", "sql_on": "${stg_kiotviet__products.product_id} = ${revenue_items.product_id}"}, {"join": "stg_kiotviet__users", "sql_on": "${stg_kiotviet__users.user_id} =${revenue_items.employee_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue_items.transaction_date)"}, {"join": "revenue", "sql_on": "${revenue_items.transaction_id} = ${revenue.transaction_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/revenue_items.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "sales", "meta": {"joins": [{"join": "stg_kiotviet__branches", "sql_on": "${stg_kiotviet__branches.branch_id} = ${revenue_items.branch_id}"}, {"join": "stg_kiotviet__customers", "sql_on": "${stg_kiotviet__customers.customer_id} = ${revenue_items.customer_id}"}, {"join": "stg_kiotviet__products", "sql_on": "${stg_kiotviet__products.product_id} = ${revenue_items.product_id}"}, {"join": "stg_kiotviet__users", "sql_on": "${stg_kiotviet__users.user_id} =${revenue_items.employee_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue_items.transaction_date)"}, {"join": "revenue", "sql_on": "${revenue_items.transaction_id} = ${revenue.transaction_id}"}]}, "tags": ["incremental", "fact", "kiotviet"], "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["transaction_id", "product_id"], "on_schema_change": "sync_all_columns"}, "created_at": 1703652761.7543507, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue_items`", "raw_code": "{{\n  config(\n    tags=['incremental', 'fact','kiotviet'],\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n                    'data_type': 'timestamp',\n                    'granularity': 'day' \n                    },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['transaction_id','product_id'],\n    on_schema_change = 'sync_all_columns'\n  )\n}}\n\n\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    CAST(\n        NULL AS int64\n    ) AS reference_transaction_id,\n    invoices.transaction_date,\n    invoices.transaction_status,\n    invoices.branch_id,\n    invoices.employee_id,\n    invoices.customer_id,\n    invoices.product_id,\n    invoices.product_code,\n    invoices.quantity,\n    invoices.price,\n    coalesce(invoices.discount_ratio, safe_divide(invoices.discount*100,invoices.price),0) discount_ratio,\n    invoices.discount,\n    invoices.subTotal,\n    invoices.transaction_type,\nFROM\n    {{ ref('stg_kiotviet__invoicedetails') }}\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    and invoices.quantity <>0 \n    {% if is_incremental() %}\n    and (\n    date(transaction_date)  >= DATE(_dbt_max_partition)\n    OR date(transaction_date) >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n    )\n    {% endif %}\nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.reference_transaction_id,\n    returns.transaction_date,\n    returns.transaction_status,\n    returns.branch_id,\n    returns.employee_id,\n    returns.customer_id,\n    returns.product_id,\n    returns.product_code,\n    returns.quantity,\n    returns.price,\n    cast(null as float64) as discount_ratio,\n    cast(null as float64) as discount,\n    returns.subTotal,\n    returns.transaction_type\nFROM\n    {{ ref('stg_kiotviet__returndetails') }}\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n    {% if is_incremental() %}\n    and (\n    date(transaction_date)  >= DATE(_dbt_max_partition)\n    OR date(transaction_date) >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n    )\n    {% endif %}", "language": "sql", "refs": [{"name": "stg_kiotviet__invoicedetails", "package": null, "version": null}, {"name": "stg_kiotviet__returndetails", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoicedetails", "model.sado_analytics_services.stg_kiotviet__returndetails"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/revenue_items.sql", "compiled": true, "compiled_code": "\n\n\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    CAST(\n        NULL AS int64\n    ) AS reference_transaction_id,\n    invoices.transaction_date,\n    invoices.transaction_status,\n    invoices.branch_id,\n    invoices.employee_id,\n    invoices.customer_id,\n    invoices.product_id,\n    invoices.product_code,\n    invoices.quantity,\n    invoices.price,\n    coalesce(invoices.discount_ratio, safe_divide(invoices.discount*100,invoices.price),0) discount_ratio,\n    invoices.discount,\n    invoices.subTotal,\n    invoices.transaction_type,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    and invoices.quantity <>0 \n    \n    and (\n    date(transaction_date)  >= DATE(_dbt_max_partition)\n    OR date(transaction_date) >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n    )\n    \nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.reference_transaction_id,\n    returns.transaction_date,\n    returns.transaction_status,\n    returns.branch_id,\n    returns.employee_id,\n    returns.customer_id,\n    returns.product_id,\n    returns.product_code,\n    returns.quantity,\n    returns.price,\n    cast(null as float64) as discount_ratio,\n    cast(null as float64) as discount,\n    returns.subTotal,\n    returns.transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n    \n    and (\n    date(transaction_date)  >= DATE(_dbt_max_partition)\n    OR date(transaction_date) >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n    )\n    ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.revenue": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "revenue", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/revenue.sql", "original_file_path": "models/marts/sales/revenue.sql", "unique_id": "model.sado_analytics_services.revenue", "fqn": ["sado_analytics_services", "marts", "sales", "revenue"], "alias": "revenue", "checksum": {"name": "sha256", "checksum": "0271d86ab3521a0ca8fa495acb5230e745ac73eceb615da174c0dda1e6af4e89"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["incremental", "daily", "fact", "kiotviet"], "meta": {"joins": [{"join": "stg_kiotviet__branches", "sql_on": "${stg_kiotviet__branches.branch_id} = ${revenue.branch_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${revenue.customer_id} and ${rfm_movement.start_of_month} = date_trunc(date(revenue.transaction_date),month)"}, {"join": "stg_kiotviet__customers", "sql_on": "${stg_kiotviet__customers.customer_id} = ${revenue.customer_id}"}, {"join": "stg_kiotviet__users", "sql_on": "${stg_kiotviet__users.user_id} =${revenue.employee_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue.transaction_date)"}, {"join": "stg_gsheet__asms", "sql_on": "${stg_gsheet__asms.branch_id} = ${revenue.branch_id}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["transaction_date", "transaction_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "fact", "kiotviet"], "description": "revenue fact table with single revenue stream per row, excluding terminated transaction", "columns": {"transaction_id": {"name": "transaction_id", "description": "", "meta": {"metrics": {"m_num_transactions": {"type": "count_distinct", "label": "Number of transactions", "group_label": "Sales Metrics", "compact": "thousands", "round": 1}, "m_num_invoices": {"type": "count_distinct", "label": "Number of invoices", "group_label": "Sales Metrics", "filters": [{"transaction_type": "invoice"}], "compact": "thousands", "round": 1}, "m_num_returns": {"type": "count_distinct", "label": "Number of returns", "group_label": "Sales Metrics", "filters": [{"transaction_type": "return"}], "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "", "meta": {"metrics": {"m_num_stores": {"type": "count_distinct", "label": "Number of stores", "group_label": "Sales Metrics"}, "m_no_working_days": {"type": "count_distinct", "label": "Working days", "group_label": "Sales Metrics", "sql": "concat(date(${transaction_date}), ${branch_id})"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"metrics": {"m_num_customers": {"type": "count_distinct", "label": "Number of customers", "group_label": "Sales Metrics", "compact": "thousands", "round": 1, "filters": [{"transaction_type": "invoice"}]}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {"metrics": {"m_total_transaction_value": {"type": "sum", "label": "Total Transaction Value", "group_label": "Sales Metrics", "compact": "billions", "round": 1}, "m_total_invoice_value": {"type": "sum", "label": "Total Invoice Value", "group_label": "Sales Metrics", "filters": [{"transaction_type": "invoice"}], "compact": "billions", "round": 1}, "m_total_return_value": {"type": "sum", "label": "Total Return Value", "group_label": "Sales Metrics", "filters": [{"transaction_type": "return"}], "compact": "billions", "round": 1}, "m_aov": {"type": "average", "label": "AOV", "group_label": "Sales Metrics", "compact": "thousands", "round": 0, "filters": [{"transaction_type": "invoice"}]}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "", "meta": {"metrics": {"total_transaction_payment": {"type": "sum", "label": "Total Transaction Payment", "group_label": "Sales Metrics", "compact": "billions", "round": 1}, "avg_order_value": {"type": "average", "label": "Average Transaction Value", "group_label": "Sales Metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {"metrics": {"discount_value": {"type": "sum", "label": "Value discount on order", "group_label": "Sales Metrics", "compact": "millions", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_fee": {"name": "return_fee", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_kiotviet__branches", "sql_on": "${stg_kiotviet__branches.branch_id} = ${revenue.branch_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${revenue.customer_id} and ${rfm_movement.start_of_month} = date_trunc(date(revenue.transaction_date),month)"}, {"join": "stg_kiotviet__customers", "sql_on": "${stg_kiotviet__customers.customer_id} = ${revenue.customer_id}"}, {"join": "stg_kiotviet__users", "sql_on": "${stg_kiotviet__users.user_id} =${revenue.employee_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue.transaction_date)"}, {"join": "stg_gsheet__asms", "sql_on": "${stg_gsheet__asms.branch_id} = ${revenue.branch_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/revenue.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "sales", "meta": {"joins": [{"join": "stg_kiotviet__branches", "sql_on": "${stg_kiotviet__branches.branch_id} = ${revenue.branch_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${revenue.customer_id} and ${rfm_movement.start_of_month} = date_trunc(date(revenue.transaction_date),month)"}, {"join": "stg_kiotviet__customers", "sql_on": "${stg_kiotviet__customers.customer_id} = ${revenue.customer_id}"}, {"join": "stg_kiotviet__users", "sql_on": "${stg_kiotviet__users.user_id} =${revenue.employee_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue.transaction_date)"}, {"join": "stg_gsheet__asms", "sql_on": "${stg_gsheet__asms.branch_id} = ${revenue.branch_id}"}]}, "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["transaction_date", "transaction_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "fact", "kiotviet"]}, "created_at": 1703652761.745271, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\n      'field': 'transaction_date',\n      'data_type': 'timestamp',\n      'granularity': 'day'},\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['transaction_date','transaction_id'],\n    on_schema_change = 'sync_all_columns',\n    tags=['incremental', 'daily','fact','kiotviet']\n  )\n}}\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    invoices.transaction_date,\n    CAST(\n        NULL AS int64\n    ) AS reference_transaction_id,\n    invoices.branch_id,\n    invoices.customer_id,\n    invoices.employee_id,\n    invoices.total,\n    invoices.total_payment,\n    invoices.discount,\n    invoices.discount_ratio,\n    CAST(\n        NULL AS int64\n    ) AS return_fee,\n    invoices.transaction_type,\nFROM\n    {{ ref('stg_kiotviet__invoices') }}\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.transaction_date,\n    returns.reference_transaction_id,\n    returns.branch_id,\n    returns.customer_id,\n    returns.employee_id,\n    - returns.total as total,\n    returns.total_payment,\n    returns.return_discount,\n    CAST(\n        NULL AS float64\n    ) discount_ratio,\n    returns.return_fee,\n    returns.transaction_type\nFROM\n    {{ ref('stg_kiotviet__returns') }}\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'", "language": "sql", "refs": [{"name": "stg_kiotviet__invoices", "package": null, "version": null}, {"name": "stg_kiotviet__returns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoices", "model.sado_analytics_services.stg_kiotviet__returns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/revenue.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    invoices.transaction_date,\n    CAST(\n        NULL AS int64\n    ) AS reference_transaction_id,\n    invoices.branch_id,\n    invoices.customer_id,\n    invoices.employee_id,\n    invoices.total,\n    invoices.total_payment,\n    invoices.discount,\n    invoices.discount_ratio,\n    CAST(\n        NULL AS int64\n    ) AS return_fee,\n    invoices.transaction_type,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.transaction_date,\n    returns.reference_transaction_id,\n    returns.branch_id,\n    returns.customer_id,\n    returns.employee_id,\n    - returns.total as total,\n    returns.total_payment,\n    returns.return_discount,\n    CAST(\n        NULL AS float64\n    ) discount_ratio,\n    returns.return_fee,\n    returns.transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.revenue_payments": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "revenue_payments", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/revenue_payments.sql", "original_file_path": "models/marts/sales/revenue_payments.sql", "unique_id": "model.sado_analytics_services.revenue_payments", "fqn": ["sado_analytics_services", "marts", "sales", "revenue_payments"], "alias": "revenue_payments", "checksum": {"name": "sha256", "checksum": "a7a7e81051d803841f87399ba5201bbb6b26fec5849f39a62298116014ca93a7"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["table", "fact", "kiotviet"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(revenue_payments.transaction_date)"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "kiotviet"], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_id": {"name": "payment_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_code": {"name": "payment_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_status": {"name": "payment_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_date": {"name": "payment_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_amount": {"name": "payment_amount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccount_id": {"name": "bankaccount_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(revenue_payments.transaction_date)"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/revenue_payments.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "sales", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(revenue_payments.transaction_date)"}]}, "tags": ["table", "fact", "kiotviet"]}, "created_at": 1703652761.6310976, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue_payments`", "raw_code": "{{\n  config(\n    tags=['table', 'fact','kiotviet']\n  )\n}}\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    CAST(\n        NULL AS int64\n    ) AS reference_transaction_id,\n    invoices.transaction_date,\n    invoices.transaction_status,\n    invoices.branch_id,\n    invoices.employee_id,\n    invoices.customer_id,\n    invoices.payment_id,\n    invoices.payment_code,\n    invoices.payment_status,\n    invoices.payment_date,\n    invoices.payment_amount,\n    invoices.payment_method,\n    invoices.bankaccount_id,\n    invoices.transaction_type,\nFROM\n    {{ ref('stg_kiotviet__invoicepayments') }}\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.reference_transaction_id,\n    returns.transaction_date,\n    returns.transaction_status,\n    returns.branch_id,\n    returns.employee_id,\n    returns.customer_id,\n    returns.payment_id,\n    returns.payment_code,\n    returns.payment_status,\n    returns.payment_date,\n    returns.payment_amount,\n    returns.payment_method,\n    returns.bankaccount_id,\n    returns.transaction_type\nFROM\n    {{ ref('stg_kiotviet__returnpayments') }}\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'", "language": "sql", "refs": [{"name": "stg_kiotviet__invoicepayments", "package": null, "version": null}, {"name": "stg_kiotviet__returnpayments", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoicepayments", "model.sado_analytics_services.stg_kiotviet__returnpayments"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/revenue_payments.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    CAST(\n        NULL AS int64\n    ) AS reference_transaction_id,\n    invoices.transaction_date,\n    invoices.transaction_status,\n    invoices.branch_id,\n    invoices.employee_id,\n    invoices.customer_id,\n    invoices.payment_id,\n    invoices.payment_code,\n    invoices.payment_status,\n    invoices.payment_date,\n    invoices.payment_amount,\n    invoices.payment_method,\n    invoices.bankaccount_id,\n    invoices.transaction_type,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicepayments`\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.reference_transaction_id,\n    returns.transaction_date,\n    returns.transaction_status,\n    returns.branch_id,\n    returns.employee_id,\n    returns.customer_id,\n    returns.payment_id,\n    returns.payment_code,\n    returns.payment_status,\n    returns.payment_date,\n    returns.payment_amount,\n    returns.payment_method,\n    returns.bankaccount_id,\n    returns.transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returnpayments`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.sms__by__day": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "sms__by__day", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/sms__by__day.sql", "original_file_path": "models/marts/marketing/sms__by__day.sql", "unique_id": "model.sado_analytics_services.sms__by__day", "fqn": ["sado_analytics_services", "marts", "marketing", "sms__by__day"], "alias": "sms__by__day", "checksum": {"name": "sha256", "checksum": "4e4ed9523e1716f16ac927b5c77726f60260a618725eadd92fc02c814413ea7b"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["table", "fact"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "tags": ["table", "fact"]}, "created_at": 1703652760.2890663, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`sms__by__day`", "raw_code": "{{config(\n    tags=['table','fact'],\n)}}\n\nselect\n    date(sent_time) sent_date,\n    count(distinct sent_id) as sms_sent,\n    count(distinct phone) as customer_sent,\n    sum(sms_cost) sms_cost,\nfrom {{ref(\"stg_esms__sent_data\")}}\nwhere sent_status = 'Th\u00e0nh c\u00f4ng'\ngroup by 1", "language": "sql", "refs": [{"name": "stg_esms__sent_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_esms__sent_data"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/sms__by__day.sql", "compiled": true, "compiled_code": "\n\nselect\n    date(sent_time) sent_date,\n    count(distinct sent_id) as sms_sent,\n    count(distinct phone) as customer_sent,\n    sum(sms_cost) sms_cost,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`\nwhere sent_status = 'Th\u00e0nh c\u00f4ng'\ngroup by 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.tickets": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "tickets", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/contact_center/tickets.sql", "original_file_path": "models/marts/marketing/contact_center/tickets.sql", "unique_id": "model.sado_analytics_services.tickets", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "tickets"], "alias": "tickets", "checksum": {"name": "sha256", "checksum": "38dd68c0de9f2962dac1fc6c287370a396a445eba57ff1e9c38259a79ea85b2a"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["caresoft", "fact", "incremental"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${tickets.created_at})", "fields": ["date", "month_name", "year_month", "period", "no_days", "period_code"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.id} = ${tickets.assignee_id}", "fields": ["id", "group_name", "username"]}, {"join": "stg_caresoft__contacts", "sql_on": "${stg_caresoft__contacts.contact_id} = ${tickets.contact_id}", "fields": ["contact_id", "created_at", "contact_type"]}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "ticket_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "created_at", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "incremental"], "description": "", "columns": {"ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_tickets": {"type": "count_distinct", "label": "No. Tickets", "group_label": "Contact Center Metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_id": {"name": "assignee_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_agents": {"type": "count_distinct", "label": "No. Agents", "group_label": "Contact Center Metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_contacts_engaged": {"type": "count_distinct", "label": "No. Contacts", "group_label": "Contact Center Metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_subject": {"name": "ticket_subject", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_status": {"name": "ticket_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source": {"name": "ticket_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_freq": {"name": "engagement_freq", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_details": {"name": "service_details", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "procedure": {"name": "procedure", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_details": {"name": "sales_details", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee": {"name": "employee", "description": "", "meta": {"dimension": {"type": "string", "sql": "coalesce(${TABLE}.employee, ${stg_caresoft__agents.username})"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_category": {"name": "engagement_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_name": {"name": "ad_name", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "utm_campaign": {"name": "utm_campaign", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "utm_source": {"name": "utm_source", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "utm_medium": {"name": "utm_medium", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${tickets.created_at})", "fields": ["date", "month_name", "year_month", "period", "no_days", "period_code"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.id} = ${tickets.assignee_id}", "fields": ["id", "group_name", "username"]}, {"join": "stg_caresoft__contacts", "sql_on": "${stg_caresoft__contacts.contact_id} = ${tickets.contact_id}", "fields": ["contact_id", "created_at", "contact_type"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/contact_center/tickets.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${tickets.created_at})", "fields": ["date", "month_name", "year_month", "period", "no_days", "period_code"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.id} = ${tickets.assignee_id}", "fields": ["id", "group_name", "username"]}, {"join": "stg_caresoft__contacts", "sql_on": "${stg_caresoft__contacts.contact_id} = ${tickets.contact_id}", "fields": ["contact_id", "created_at", "contact_type"]}]}, "unique_key": "ticket_id", "partition_by": {"field": "created_at", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["caresoft", "fact", "incremental"]}, "created_at": 1703652761.7811706, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`tickets`", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key='ticket_id',\n        partition_by ={ 'field': 'created_at',\n        'data_type': 'timestamp',\n        'granularity': 'day' },\n        incremental_strategy = 'insert_overwrite',\n        on_schema_change = 'sync_all_columns',\n        tags=['caresoft','fact','incremental']\n    )\n}}\n\n{% set label_mapping = {\n\"T\u1ea7n su\u1ea5t t\u01b0\u01a1ng t\u00e1c\":\"engagement_freq\",\n\"Chi ti\u1ebft c\u00f4ng vi\u1ec7c\":\"service_details\",\n\"Ti\u1ebfn tr\u00ecnh t\u01b0 v\u1ea5n\":\"procedure\",\n\"Chi ti\u1ebft b\u00e1n h\u00e0ng\":\"sales_details\",\n\"Nh\u00e2n vi\u00ean x\u1eed l\u00fd\":\"employee\",\n\"Ph\u00e2n lo\u1ea1i t\u01b0\u01a1ng t\u00e1c\":\"engagement_category\",\n}%}\n{% set tags = ['ad_id','ad_name','utm_campaign','utm_source','utm_medium']%}\n\nwith unnested as (\n select\nticket_id,\nassignee_id,\nrequester_id as contact_id,\ncampaign_id,\nticket_subject,\nticket_status,\ncreated_at,\nupdated_at,\nticket_source,\ncf.custom_field_label as custom_field_label,\ncf.value_label as custom_field_value,\nregexp_extract(tags.name,r'^([a-z\\-_]+)[\\:\\-\\.]\\s?.*$') as tag_key,\nregexp_extract(tags.name,r'^[a-z\\-_]+[\\:\\-\\.]\\s?(.*)$') as tag_value,\nfrom {{ref('stg_caresoft__tickets')}}\nleft join unnest(custom_fields) custom_fields\nleft join unnest(tags) tags\nleft join {{ref(\"stg_caresoft__ticket_custom_fields\")}} cf on safe_cast(custom_fields.id as int64) = cf.custom_field_id and safe_cast(custom_fields.value as int64) = cf.value_id\n\n{% if is_incremental() %}\n                WHERE\n                      date(created_at) >= date(_dbt_max_partition)\n\n                   OR date(created_at) >= date_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}\n\n),\npivot_custom_fields as (\n    select * \n    from unnested\n    pivot (\n    any_value(custom_field_value) for custom_field_label in (\n        {%for key, value in label_mapping.items()%}\n            '{{key}}' as {{value}} {{ ',' if not loop.last}}\n        {%endfor%}\n    )\n)\n),\n\npivot_tags as (\n    select * \n    from pivot_custom_fields\n     pivot (\n    any_value(tag_value) for tag_key in (\n        {%for value in tags%}\n            '{{value}}' {{ ',' if not loop.last}}\n        {%endfor%}\n    )\n)\n)\n\nselect * from pivot_tags", "language": "sql", "refs": [{"name": "stg_caresoft__tickets", "package": null, "version": null}, {"name": "stg_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_caresoft__tickets", "model.sado_analytics_services.stg_caresoft__ticket_custom_fields"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/tickets.sql", "compiled": true, "compiled_code": "\n\n\n\n\nwith unnested as (\n select\nticket_id,\nassignee_id,\nrequester_id as contact_id,\ncampaign_id,\nticket_subject,\nticket_status,\ncreated_at,\nupdated_at,\nticket_source,\ncf.custom_field_label as custom_field_label,\ncf.value_label as custom_field_value,\nregexp_extract(tags.name,r'^([a-z\\-_]+)[\\:\\-\\.]\\s?.*$') as tag_key,\nregexp_extract(tags.name,r'^[a-z\\-_]+[\\:\\-\\.]\\s?(.*)$') as tag_value,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__tickets`\nleft join unnest(custom_fields) custom_fields\nleft join unnest(tags) tags\nleft join `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__ticket_custom_fields` cf on safe_cast(custom_fields.id as int64) = cf.custom_field_id and safe_cast(custom_fields.value as int64) = cf.value_id\n\n\n                WHERE\n                      date(created_at) >= date(_dbt_max_partition)\n\n                   OR date(created_at) >= date_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n\n\n),\npivot_custom_fields as (\n    select * \n    from unnested\n    pivot (\n    any_value(custom_field_value) for custom_field_label in (\n        \n            'T\u1ea7n su\u1ea5t t\u01b0\u01a1ng t\u00e1c' as engagement_freq ,\n        \n            'Chi ti\u1ebft c\u00f4ng vi\u1ec7c' as service_details ,\n        \n            'Ti\u1ebfn tr\u00ecnh t\u01b0 v\u1ea5n' as procedure ,\n        \n            'Chi ti\u1ebft b\u00e1n h\u00e0ng' as sales_details ,\n        \n            'Nh\u00e2n vi\u00ean x\u1eed l\u00fd' as employee ,\n        \n            'Ph\u00e2n lo\u1ea1i t\u01b0\u01a1ng t\u00e1c' as engagement_category \n        \n    )\n)\n),\n\npivot_tags as (\n    select * \n    from pivot_custom_fields\n     pivot (\n    any_value(tag_value) for tag_key in (\n        \n            'ad_id' ,\n        \n            'ad_name' ,\n        \n            'utm_campaign' ,\n        \n            'utm_source' ,\n        \n            'utm_medium' \n        \n    )\n)\n)\n\nselect * from pivot_tags", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.conversations_engaged": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "conversations_engaged", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/contact_center/conversations_engaged.sql", "original_file_path": "models/marts/marketing/contact_center/conversations_engaged.sql", "unique_id": "model.sado_analytics_services.conversations_engaged", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "conversations_engaged"], "alias": "conversations_engaged", "checksum": {"name": "sha256", "checksum": "aa7a2190ec46b8f42234cb42f72ccb1c1522eb887d1c37c74d315f51e6954059"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["pancake", "fact", "incremental"], "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${conversations_engaged.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${conversations_engaged.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${conversations_engaged.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${conversations_engaged.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${conversations_engaged.inserted_at})", "fields": ["date", "period", "period_code"]}]}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["conversation_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "inserted_at", "data_type": "datetime", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["pancake", "fact", "incremental"], "description": "", "columns": {"inserted_at": {"name": "inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_customer_class": {"type": "string", "sql": "case when ${stg_pancake__customers.inserted_at} < ${TABLE}.inserted_at then 'Kh\u00e1ch m\u1edbi' else 'Kh\u00e1ch c\u0169' end", "label": "Customer group"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_id": {"name": "conversation_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_conversations": {"type": "count_distinct", "label": "No. conversations", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_customer_engaged": {"type": "count_distinct", "label": "No. Engaged Customers", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "message_count": {"name": "message_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_messages": {"type": "sum", "label": "No. Messages", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "snippet": {"name": "snippet", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_assisted": {"name": "ads_assisted", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "deal_detail": {"name": "deal_detail", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "refuse_reason": {"name": "refuse_reason", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent": {"name": "agent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_type": {"name": "conversation_type", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_conversation_type": {"type": "string", "label": "Conversation type", "sql": "coalesce(${TABLE}.conversation_type,\"Mua h\u00e0ng\")"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion_type": {"name": "promotion_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_type": {"name": "customer_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stage": {"name": "stage", "description": "", "meta": {"dimension": {"type": "string", "label": "Tag value"}, "additional_dimensions": {"d_stage": {"type": "string", "sql": "case when ${TABLE}.stage like '%Ch\u01b0a ph\u1ea3n h\u1ed3i%' then '[2] Ch\u01b0a ph\u1ea3n h\u1ed3i'\nwhen ${TABLE}.stage like '%Tham kh\u1ea3o%' then '[3] Tham kh\u1ea3o'\nwhen ${TABLE}.stage like '%\u0110ang ch\u1ed5t%' then '[4] \u0110ang ch\u1ed1t'\nwhen ${TABLE}.stage like '%chuy\u1ec3n CH%' then '[5] Ch\u1ed1t \u0111\u01a1n'\nwhen ${TABLE}.stage like '%Kh\u00e1ch ra SR%' then '[5] Ch\u1ed1t \u0111\u01a1n'\nwhen ${TABLE}.stage like '%\u0110\u00e3 mua h\u00e0ng%' then '[5] Ch\u1ed1t \u0111\u01a1n'\nwhen ${TABLE}.stage like '%Gi\u00e1 Cao%' then 'Hu\u1ef7'\nwhen ${TABLE}.stage like '%H\u1ebft h\u00e0ng%' then 'Hu\u1ef7'\nelse '[1] H\u1ed9i tho\u1ea1i m\u1edbi' end", "label": "Stage"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "claim_status": {"name": "claim_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${conversations_engaged.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${conversations_engaged.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${conversations_engaged.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${conversations_engaged.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${conversations_engaged.inserted_at})", "fields": ["date", "period", "period_code"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/contact_center/conversations_engaged.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${conversations_engaged.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${conversations_engaged.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${conversations_engaged.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${conversations_engaged.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${conversations_engaged.inserted_at})", "fields": ["date", "period", "period_code"]}]}, "partition_by": {"field": "inserted_at", "data_type": "datetime", "granularity": "day"}, "unique_key": ["conversation_id"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "tags": ["pancake", "fact", "incremental"]}, "created_at": 1703652761.820417, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`conversations_engaged`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ \n        'field': 'inserted_at',\n        'data_type': 'datetime',\n        'granularity': 'day',\n        },\n    unique_key = ['conversation_id'],\n    incremental_strategy = 'merge',\n    on_schema_change = 'sync_all_columns',\n    tags = ['pancake','fact','incremental']\n) }}\n\n{% set tag_fields ={ \n    \"agent\" :\"Nh\u00e2n s\u1ef1\",\n    \"conversation_type\" :\"Ph\u00e2n lo\u1ea1i\",\n    \"promotion_type\" :\"Ph\u00e2n lo\u1ea1i ch\u01b0\u01a1ng tr\u00ecnh\",\n    \"customer_type\" :\"Ph\u00e2n lo\u1ea1i KH\",\n    \"stage\" :\"Ti\u1ebfn tr\u00ecnh ch\u0103m s\u00f3c\",\n    \"claim_status\" :\"Tr\u1ea1ng th\u00e1i x\u1eed l\u00fd\" \n} %}\nWITH tags AS (\n\n    SELECT\n        DISTINCT *\n    FROM\n        {{ ref(\"stg_pancake__tags\") }}\n),\nraw_ AS (\n    SELECT\n        conversations.inserted_at,\n        conversations.conversation_id,\n        conversations.customer_id,\n        conversations.user_id,\n        conversations.page_id,\n        conversations.post_id,\n        conversations.message_count,\n        conversations.snippet,\n        conversations.type,\n        CASE\n            WHEN COUNT(ad_id) over(\n                PARTITION BY conversations.ad_id\n            ) > 0 THEN 'Ads'\n            ELSE 'Non-Ads'\n        END AS ads_assisted,\n        tags.tag_value,\n        tags.category,\n    FROM\n        {{ ref(\"stg_pancake__conversations\") }}\n        conversations\n        LEFT JOIN tags\n        ON conversations.tag_id = tags.tag_id\n    \n{% if is_incremental() %}\nWHERE (\n    DATE(conversations.updated_at) > date_sub(DATE(_dbt_max_partition), interval 3 day) \n)\n{% endif %}\n)\nSELECT\n    DISTINCT *\nFROM\n    raw_ \n    pivot (string_agg(distinct tag_value,',') for category IN ({% for key, value in tag_fields.items() %}\n        \"{{value}}\" AS {{ key }}\n        {{ \",\" if not loop.last }}\n    {% endfor %}))", "language": "sql", "refs": [{"name": "stg_pancake__tags", "package": null, "version": null}, {"name": "stg_pancake__conversations", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_pancake__tags", "model.sado_analytics_services.stg_pancake__conversations"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/conversations_engaged.sql", "compiled": true, "compiled_code": "\n\n\nWITH tags AS (\n\n    SELECT\n        DISTINCT *\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_pancake__tags`\n),\nraw_ AS (\n    SELECT\n        conversations.inserted_at,\n        conversations.conversation_id,\n        conversations.customer_id,\n        conversations.user_id,\n        conversations.page_id,\n        conversations.post_id,\n        conversations.message_count,\n        conversations.snippet,\n        conversations.type,\n        CASE\n            WHEN COUNT(ad_id) over(\n                PARTITION BY conversations.ad_id\n            ) > 0 THEN 'Ads'\n            ELSE 'Non-Ads'\n        END AS ads_assisted,\n        tags.tag_value,\n        tags.category,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_pancake__conversations`\n        conversations\n        LEFT JOIN tags\n        ON conversations.tag_id = tags.tag_id\n    \n\nWHERE (\n    DATE(conversations.updated_at) > date_sub(DATE(_dbt_max_partition), interval 3 day) \n)\n\n)\nSELECT\n    DISTINCT *\nFROM\n    raw_ \n    pivot (string_agg(distinct tag_value,',') for category IN (\n        \"Nh\u00e2n s\u1ef1\" AS agent\n        ,\n    \n        \"Ph\u00e2n lo\u1ea1i\" AS conversation_type\n        ,\n    \n        \"Ph\u00e2n lo\u1ea1i ch\u01b0\u01a1ng tr\u00ecnh\" AS promotion_type\n        ,\n    \n        \"Ph\u00e2n lo\u1ea1i KH\" AS customer_type\n        ,\n    \n        \"Ti\u1ebfn tr\u00ecnh ch\u0103m s\u00f3c\" AS stage\n        ,\n    \n        \"Tr\u1ea1ng th\u00e1i x\u1eed l\u00fd\" AS claim_status\n        \n    ))", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.pancake_performance__by__users": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "pancake_performance__by__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/contact_center/pancake_performance__by__users.sql", "original_file_path": "models/marts/marketing/contact_center/pancake_performance__by__users.sql", "unique_id": "model.sado_analytics_services.pancake_performance__by__users", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "pancake_performance__by__users"], "alias": "pancake_performance__by__users", "checksum": {"name": "sha256", "checksum": "312976c9fcbdd16f301d2380ac27cbca8a88b7ca83c43f7f3ccc420002b44717"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["pancake", "fact", "incremental"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${pancake_performance__by__users.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${pancake_performance__by__users.user_id}", "fields": ["user_id", "user_name"]}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["user_id", "hour"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "hour", "data_type": "datetime", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["pancake", "fact", "incremental"], "description": "T\u1ed5ng h\u1ee3p d\u1eef li\u1ec7u th\u1ed1ng k\u00ea theo nh\u00e2n s\u1ef1", "columns": {"user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "average_response_time": {"name": "average_response_time", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "additional_dimensions": {"d_average_response_time": {"type": "number", "sql": "case when ${d_hour} >= 7 and ${d_hour} <= 23 then ${TABLE}.average_response_time else 0 end", "hidden": true}}, "metrics": {"m_avg_response_time": {"type": "average", "round": 1, "label": "Avg response time (hour)", "group_label": "Pancake metrics", "sql": "${d_average_response_time}/3600"}, "m_med_response_time": {"type": "median", "round": 1, "label": "Median of response time (min)", "group_label": "Pancake metrics", "sql": "${d_average_response_time}/60"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment_count": {"name": "comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_comment": {"type": "sum", "round": 2, "label": "No. comments", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour": {"name": "hour", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_hour": {"type": "number", "sql": "extract(hour from ${TABLE}.hour)", "label": "Hour"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbox_count": {"name": "inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_inbox": {"type": "sum", "round": 2, "label": "No. inboxes", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_number_count": {"name": "phone_number_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_phone": {"type": "sum", "label": "No. phones", "group_label": "Pancake metrics", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "private_reply_count": {"name": "private_reply_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_private_reply": {"type": "sum", "round": 0, "label": "No. private replies", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_comment_count": {"name": "unique_comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique_comment": {"type": "sum", "round": 0, "label": "No. unique comments", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_inbox_count": {"name": "unique_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique inbox": {"type": "sum", "round": 0, "label": "No. unique inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_order": {"name": "num_order", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_orders": {"type": "sum", "label": "No. orders", "group_label": "Pancake metrics", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_payment": {"type": "sum", "label": "Payment value", "group_label": "Pancake metrics", "compact": "millions", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${pancake_performance__by__users.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${pancake_performance__by__users.user_id}", "fields": ["user_id", "user_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/contact_center/pancake_performance__by__users.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${pancake_performance__by__users.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${pancake_performance__by__users.user_id}", "fields": ["user_id", "user_name"]}]}, "unique_key": ["user_id", "hour"], "partition_by": {"field": "hour", "data_type": "datetime", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["pancake", "fact", "incremental"]}, "created_at": 1703652761.792811, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`pancake_performance__by__users`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    unique_key = ['user_id','hour'],\n    partition_by ={ \n        'field': 'hour',\n        'data_type': 'datetime',\n        'granularity': 'day',\n        },\n    incremental_strategy = 'insert_overwrite',\n    on_schema_change = 'sync_all_columns',\n    tags = ['pancake','fact','incremental']\n) }}\n\nwith user_stats as (\n    select \n    user_id,\n    hour,\n    avg(average_response_time) average_response_time,\n    sum(comment_count) comment_count,\n    sum(inbox_count) inbox_count,\n    sum(phone_number_count) phone_number_count,\n    sum(private_reply_count) private_reply_count,\n    sum(unique_comment_count) unique_comment_count,\n    sum(unique_inbox_count) unique_inbox_count,\n    from {{ref(\"stg_pancake__user_stats\")}}\n    {% if is_incremental() %}\n    where\n         date(hour) >= date_add(date(_dbt_max_partition), interval -3 day)\n        {% endif %}\n        group by 1,2\n),\norders as (\n    select \n    seller_id,\n    date_trunc(inserted_at, hour) as hour,\n    count(distinct order_id) num_order,\n    sum(total_price) as total_payment,\n    from {{ref(\"stg_pancake__orders\")}}\n    where\n    seller_id is not null\n    and status = '\u0110\u00e3 x\u00e1c nh\u1eadn'\n    {% if is_incremental() %}\n    \n         and date(updated_at) >= date_add(date(_dbt_max_partition), interval -3 day)\n        {% endif %}\n    group by 1,2\n)\n\nselect \nus.* except(hour, user_id),\ncoalesce(us.user_id, o.seller_id) as user_id,\ncoalesce(us.hour, o.hour) as hour,\no.num_order,\no.total_payment\nfrom user_stats us\nfull join orders o on us.user_id = o.seller_id and us.hour = o.hour", "language": "sql", "refs": [{"name": "stg_pancake__user_stats", "package": null, "version": null}, {"name": "stg_pancake__orders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_pancake__user_stats", "model.sado_analytics_services.stg_pancake__orders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/pancake_performance__by__users.sql", "compiled": true, "compiled_code": "\n\nwith user_stats as (\n    select \n    user_id,\n    hour,\n    avg(average_response_time) average_response_time,\n    sum(comment_count) comment_count,\n    sum(inbox_count) inbox_count,\n    sum(phone_number_count) phone_number_count,\n    sum(private_reply_count) private_reply_count,\n    sum(unique_comment_count) unique_comment_count,\n    sum(unique_inbox_count) unique_inbox_count,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_pancake__user_stats`\n    \n    where\n         date(hour) >= date_add(date(_dbt_max_partition), interval -3 day)\n        \n        group by 1,2\n),\norders as (\n    select \n    seller_id,\n    date_trunc(inserted_at, hour) as hour,\n    count(distinct order_id) num_order,\n    sum(total_price) as total_payment,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_pancake__orders`\n    where\n    seller_id is not null\n    and status = '\u0110\u00e3 x\u00e1c nh\u1eadn'\n    \n    \n         and date(updated_at) >= date_add(date(_dbt_max_partition), interval -3 day)\n        \n    group by 1,2\n)\n\nselect \nus.* except(hour, user_id),\ncoalesce(us.user_id, o.seller_id) as user_id,\ncoalesce(us.hour, o.hour) as hour,\no.num_order,\no.total_payment\nfrom user_stats us\nfull join orders o on us.user_id = o.seller_id and us.hour = o.hour", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.engagements_details": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "engagements_details", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/contact_center/engagements_details.sql", "original_file_path": "models/marts/marketing/contact_center/engagements_details.sql", "unique_id": "model.sado_analytics_services.engagements_details", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "engagements_details"], "alias": "engagements_details", "checksum": {"name": "sha256", "checksum": "31ec36ceb800df253a7944d5faee04b50ac1900a2837bcb328d92fbd49d0cc8a"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["caresoft", "fact", "incremental"], "meta": {"joins": [{"join": "tickets", "sql_on": "${engagements_details.ticket_id} = ${tickets.ticket_id}"}, {"join": "stg_caresoft__contacts", "sql_on": "${engagements_details.customer_id} = ${stg_caresoft__contacts.contact_id}"}, {"join": "calendar", "sql_on": "date(${engagements_details.start_time}) = ${calendar.date}", "fields": ["date", "month_name", "year_month", "period", "period_code", "no_days"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.agent_id} = ${engagements_details.agent_id}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "engagement_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "start_time", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "incremental"], "description": "T\u1ed5ng h\u1ee3p t\u01b0\u01a1ng t\u00e1c (g\u1ecdi & chat) th\u00f4ng qua caresoft", "columns": {"ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_time": {"name": "start_time", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_time": {"name": "end_time", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_id": {"name": "agent_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_status": {"name": "engagement_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_type": {"name": "engagement_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_duration": {"name": "engagement_duration", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_duration": {"type": "average", "label": "Avg Engaged Duration", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wait_duration": {"name": "wait_duration", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_duration": {"type": "average", "label": "Avg Engaged Duration", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "missed_reason": {"name": "missed_reason", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_channel": {"name": "engagement_channel", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "tickets", "sql_on": "${engagements_details.ticket_id} = ${tickets.ticket_id}"}, {"join": "stg_caresoft__contacts", "sql_on": "${engagements_details.customer_id} = ${stg_caresoft__contacts.contact_id}"}, {"join": "calendar", "sql_on": "date(${engagements_details.start_time}) = ${calendar.date}", "fields": ["date", "month_name", "year_month", "period", "period_code", "no_days"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.agent_id} = ${engagements_details.agent_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/contact_center/engagements_details.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "tickets", "sql_on": "${engagements_details.ticket_id} = ${tickets.ticket_id}"}, {"join": "stg_caresoft__contacts", "sql_on": "${engagements_details.customer_id} = ${stg_caresoft__contacts.contact_id}"}, {"join": "calendar", "sql_on": "date(${engagements_details.start_time}) = ${calendar.date}", "fields": ["date", "month_name", "year_month", "period", "period_code", "no_days"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.agent_id} = ${engagements_details.agent_id}"}]}, "unique_key": "engagement_id", "partition_by": {"field": "start_time", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["caresoft", "fact", "incremental"]}, "created_at": 1703652761.7634344, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`engagements_details`", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key='engagement_id',\n        partition_by ={ 'field': 'start_time',\n        'data_type': 'timestamp',\n        'granularity': 'day' },\n        incremental_strategy = 'insert_overwrite',\n        on_schema_change = 'sync_all_columns',\n        tags=['caresoft','fact','incremental']\n    )\n}}\n\nselect\nticket_id,\ncustomer_id,\nsafe_cast(service_id as int64) service_id,\nstart_time,\nend_time,\nsafe_cast(agent_id as int64) agent_id,\ncall_id as engagement_id,\ncall_status as engagement_status,\ncase call_type \n    when 0 then 'call in'\n    when 1 then 'call out'\n    when 3 then 'IVR call' \nend as engagement_type,\nunix_seconds(parse_timestamp('%H:%M:%S',talk_time)) as engagement_duration,\nunix_seconds(parse_timestamp('%H:%M:%S',wait_time)) as wait_duration,\nmissed_reason,\n'hotline' as engagement_channel,\nfrom \n{{ref(\"stg_caresoft__calls\")}} calls\n{% if is_incremental() %}\n                WHERE\n                      date(start_time) >= date(_dbt_max_partition)\n\n                   OR date(start_time) >= date_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}\n\nunion all\n\nselect\nticket_id,\ncustomer_id,\nservice_id,\ntimestamp(start_time) start_time,\ntimestamp(end_time) end_time,\nsafe_cast(agents.id as int64) agent_id,\nconversation_id as engagement_id,\ncase chat_status \n    when 'LBL_CHAT_STATUS_MISS' then 'miss'\n    when 'LBL_CHAT_STATUS_MEET' then 'metAgent'\n end as engagement_status,\nconversation_type as engagement_type,\nchat_duration as engagement_duration,\n3600 * cast(regexp_extract(wait_time, r'^\\d*') as int64) + unix_seconds(parse_timestamp('%H:%M:%S',regexp_replace('44:01:35', r'^\\d*', '00'))) as wait_duration,\ncast(null as string) missed_reason,\nconversation_type as engagement_channel,\n\nfrom \n{{ref(\"stg_caresoft__chats\")}} chats\nleft join {{ref(\"stg_caresoft__agents\")}} agents on agents.email = chats.agent_email\n\n{% if is_incremental() %}\n                WHERE\n                      date(start_time) >= date(_dbt_max_partition)\n\n                   OR date(start_time) >= date_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}, {"name": "stg_caresoft__chats", "package": null, "version": null}, {"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_caresoft__calls", "model.sado_analytics_services.stg_caresoft__chats", "model.sado_analytics_services.stg_caresoft__agents"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/engagements_details.sql", "compiled": true, "compiled_code": "\n\nselect\nticket_id,\ncustomer_id,\nsafe_cast(service_id as int64) service_id,\nstart_time,\nend_time,\nsafe_cast(agent_id as int64) agent_id,\ncall_id as engagement_id,\ncall_status as engagement_status,\ncase call_type \n    when 0 then 'call in'\n    when 1 then 'call out'\n    when 3 then 'IVR call' \nend as engagement_type,\nunix_seconds(parse_timestamp('%H:%M:%S',talk_time)) as engagement_duration,\nunix_seconds(parse_timestamp('%H:%M:%S',wait_time)) as wait_duration,\nmissed_reason,\n'hotline' as engagement_channel,\nfrom \n`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__calls` calls\n\n                WHERE\n                      date(start_time) >= date(_dbt_max_partition)\n\n                   OR date(start_time) >= date_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n\n\nunion all\n\nselect\nticket_id,\ncustomer_id,\nservice_id,\ntimestamp(start_time) start_time,\ntimestamp(end_time) end_time,\nsafe_cast(agents.id as int64) agent_id,\nconversation_id as engagement_id,\ncase chat_status \n    when 'LBL_CHAT_STATUS_MISS' then 'miss'\n    when 'LBL_CHAT_STATUS_MEET' then 'metAgent'\n end as engagement_status,\nconversation_type as engagement_type,\nchat_duration as engagement_duration,\n3600 * cast(regexp_extract(wait_time, r'^\\d*') as int64) + unix_seconds(parse_timestamp('%H:%M:%S',regexp_replace('44:01:35', r'^\\d*', '00'))) as wait_duration,\ncast(null as string) missed_reason,\nconversation_type as engagement_channel,\n\nfrom \n`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__chats` chats\nleft join `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__agents` agents on agents.email = chats.agent_email\n\n\n                WHERE\n                      date(start_time) >= date(_dbt_max_partition)\n\n                   OR date(start_time) >= date_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.analytics_sessions": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "analytics_sessions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/analytics/analytics_sessions.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.sql", "unique_id": "model.sado_analytics_services.analytics_sessions", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "analytics_sessions"], "alias": "analytics_sessions", "checksum": {"name": "sha256", "checksum": "c3a12c4513808210140b295cd824a3e474407954d67eb4e272d48d81b62be830"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "daily", "GA4"], "meta": {"joins": [{"join": "analytics_users", "sql_on": "${analytics_users.client_id} = ${analytics_sessions.client_id}"}, {"join": "calendar", "sql_on": "${analytics_sessions.session_date} = ${calendar.date}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "session_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "GA4"], "description": "Incrementally materialised table containing records of Google Analytics sessions\n", "columns": {"session_id": {"name": "session_id", "description": "Identifier for a particular analytics session associated with a particular Client ID\n", "meta": {"metrics": {"num_sessions": {"type": "count_distinct", "label": "#Sessions", "label_group": "Website metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "client_id": {"name": "client_id", "description": "Cookie-based identifier for an individual", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "continent": {"name": "continent", "description": "Continent the visitor is based in (identified via IP address; always NULL in archival data)\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "Country the visitor is based in (identified via IP address)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device_type": {"name": "device_type", "description": "Type of device being used by the visitor (desktop, mobile, or tablet)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "browser": {"name": "browser", "description": "Browser the visitor was using (over 100 possible values)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "Operating system the visitor was using (over 20 possible values)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_date": {"name": "session_date", "description": "Date on which the session commenced", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_initiated": {"name": "session_initiated", "description": "Date and time at which the session commenced", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landing_page": {"name": "landing_page", "description": "First page associated with the session (URL without site domain)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "exit_page": {"name": "exit_page", "description": "Final page associated with the session (URL without site domain)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_source": {"name": "traffic_source", "description": "The acquisition channel for this sessions (thousands of possible values); the name of the network that first acquired the visitor.\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_campaign": {"name": "traffic_campaign", "description": "Name of the marketing campaign that first acquired the visitor", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_medium": {"name": "traffic_medium", "description": "Name of the medium (organic search, email, etc.) that first acquired the visitor\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_referrer": {"name": "traffic_referrer", "description": "Granular information (from utm_content) about the campaign that first acquired the visitor (usually a specific referral within a wider campaign)\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel_grouping": {"name": "channel_grouping", "description": "The acquisition channel associated with the session (based on our internal definition). Allowed values: direct, email, government, other-referral, search, social, and uncategorised.\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_time": {"name": "engagement_time", "description": "miliseconds of engagement", "meta": {"dimension": {"label": "is Engaged", "sql": "IF(${TABLE}.engagement_time >= 10, 'engaged', 'not engaged')", "type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ga_session_number": {"name": "ga_session_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "analytics_users", "sql_on": "${analytics_users.client_id} = ${analytics_sessions.client_id}"}, {"join": "calendar", "sql_on": "${analytics_sessions.session_date} = ${calendar.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/analytics/analytics_sessions.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "analytics_users", "sql_on": "${analytics_users.client_id} = ${analytics_sessions.client_id}"}, {"join": "calendar", "sql_on": "${analytics_sessions.session_date} = ${calendar.date}"}]}, "partition_by": {"field": "session_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "session_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "GA4"]}, "created_at": 1703652761.8931952, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\n      'field': 'session_date',\n      'data_type': 'date',\n      'granularity': 'day'},\n    incremental_strategy = 'insert_overwrite',\n    unique_key = 'session_id',\n    on_schema_change = 'sync_all_columns',\n    tags=['incremental', 'daily','GA4']\n  )\n}}\n\n    SELECT \n  DISTINCT \n        session_id,\n        client_id,\n        FIRST_VALUE(channel_grouping ignore nulls) over (session_window) as channel_grouping,\n        FIRST_VALUE(ga_session_number ignore nulls) over (session_window) as ga_session_number,\n        LAST_VALUE(continent) OVER(session_window) AS continent,\n        LAST_VALUE(country) OVER(session_window) AS country,\n        LAST_VALUE(device_type) OVER(session_window) AS device_type,\n        LAST_VALUE(browser) OVER(session_window) AS browser,\n        LAST_VALUE(operating_system) OVER(session_window) AS operating_system,\n        FIRST_VALUE(event_date) OVER(session_window) AS session_date,\n        FIRST_VALUE(event_timestamp) OVER(session_window) AS session_initiated,\n        FIRST_VALUE(page_location) OVER(session_window) AS landing_page, \n        LAST_VALUE(page_location) OVER(session_window) AS exit_page,\n        FIRST_VALUE(traffic_source) OVER(session_window) AS traffic_source,\n        FIRST_VALUE(traffic_campaign) OVER(session_window) AS traffic_campaign,\n        FIRST_VALUE(traffic_medium) OVER(session_window) AS traffic_medium,\n        FIRST_VALUE(traffic_referrer) OVER(session_window) AS traffic_referrer,\n        sum(cast(engagement_time_msec as int64) /1000) OVER(session_window) AS engagement_time, \n      FROM\n        {{ ref('int_analytics__events_format') }}\n{% if is_incremental() %}\n   QUALIFY\n           FIRST_VALUE(event_date) OVER(session_window) >= DATE(_dbt_max_partition)\n        OR FIRST_VALUE(event_date) OVER(session_window) >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}\n    WINDOW \n        session_window AS (\n            PARTITION BY session_id\n                ORDER BY event_timestamp\n            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\n        )", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.sql", "compiled": true, "compiled_code": "\n\n    SELECT \n  DISTINCT \n        session_id,\n        client_id,\n        FIRST_VALUE(channel_grouping ignore nulls) over (session_window) as channel_grouping,\n        FIRST_VALUE(ga_session_number ignore nulls) over (session_window) as ga_session_number,\n        LAST_VALUE(continent) OVER(session_window) AS continent,\n        LAST_VALUE(country) OVER(session_window) AS country,\n        LAST_VALUE(device_type) OVER(session_window) AS device_type,\n        LAST_VALUE(browser) OVER(session_window) AS browser,\n        LAST_VALUE(operating_system) OVER(session_window) AS operating_system,\n        FIRST_VALUE(event_date) OVER(session_window) AS session_date,\n        FIRST_VALUE(event_timestamp) OVER(session_window) AS session_initiated,\n        FIRST_VALUE(page_location) OVER(session_window) AS landing_page, \n        LAST_VALUE(page_location) OVER(session_window) AS exit_page,\n        FIRST_VALUE(traffic_source) OVER(session_window) AS traffic_source,\n        FIRST_VALUE(traffic_campaign) OVER(session_window) AS traffic_campaign,\n        FIRST_VALUE(traffic_medium) OVER(session_window) AS traffic_medium,\n        FIRST_VALUE(traffic_referrer) OVER(session_window) AS traffic_referrer,\n        sum(cast(engagement_time_msec as int64) /1000) OVER(session_window) AS engagement_time, \n      FROM\n        `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\n\n   QUALIFY\n           FIRST_VALUE(event_date) OVER(session_window) >= DATE(_dbt_max_partition)\n        OR FIRST_VALUE(event_date) OVER(session_window) >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n\n    WINDOW \n        session_window AS (\n            PARTITION BY session_id\n                ORDER BY event_timestamp\n            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\n        )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.analytics_users": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "analytics_users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/analytics/analytics_users.sql", "original_file_path": "models/marts/marketing/analytics/analytics_users.sql", "unique_id": "model.sado_analytics_services.analytics_users", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "analytics_users"], "alias": "analytics_users", "checksum": {"name": "sha256", "checksum": "e07d0b5e1a5685eb9f7c2b7ca88c5d96fb65d58bcdf4bda0dece8d5df7f77947"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "daily", "GA4", "users", "fact"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "client_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "first_visit_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "GA4", "users", "fact"], "description": "", "columns": {"client_id": {"name": "client_id", "description": "", "meta": {"metrics": {"num_users": {"type": "count_distinct", "label": "#Users", "lable_group": "Website metrics"}}, "dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_phone": {"name": "user_phone", "description": "", "meta": {"metrics": {"num_phones_collected": {"type": "count_distinct", "label": "# Phones collected", "label_group": "Website metrics"}}, "dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_email": {"name": "user_email", "description": "", "meta": {"metrics": {"num_emails_collected": {"type": "count_distinct", "label": "#Emails collected", "label_group": "Website metrics"}}, "dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_address": {"name": "user_address", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_session_id": {"name": "first_session_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_channel_grouping": {"name": "first_channel_grouping", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_session_id": {"name": "last_session_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device_type": {"name": "device_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "browser": {"name": "browser", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "operating_system": {"name": "operating_system", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_visit_date": {"name": "first_visit_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_visit_initiated": {"name": "first_visit_initiated", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_traffic_source": {"name": "first_traffic_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_traffic_campaign": {"name": "first_traffic_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_traffic_medium": {"name": "first_traffic_medium", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/analytics/analytics_users.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "partition_by": {"field": "first_visit_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "client_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "GA4", "users", "fact"]}, "created_at": 1703652761.9301562, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`analytics_users`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'first_visit_date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = 'client_id',\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'daily','GA4','users','fact']\n) }}\n\nWITH raw_ AS (\n    SELECT\n        DISTINCT client_id,\n        FIRST_VALUE(\n            user_phone ignore nulls\n        ) over(client_window) AS user_phone,\n        FIRST_VALUE(\n            user_email ignore nulls\n        ) over(client_window) AS user_email,\n        FIRST_VALUE(\n            user_name ignore nulls\n        ) over(client_window) AS user_name,\n        FIRST_VALUE(\n            user_address ignore nulls\n        ) over(client_window) AS user_address,\n        channel_grouping,\n        session_id,\n        country,\n        device_type,\n        browser,\n        operating_system,\n        event_date,\n        event_timestamp,\n        traffic_source,\n        traffic_campaign,\n        traffic_medium,\n    FROM\n        {{ ref('int_analytics__events_format') }}\n\n{% if is_incremental() %}\nWHERE\n    event_date >= DATE(_dbt_max_partition)\n    OR event_date >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}\n\n{% if is_incremental() %}\nqualify FIRST_VALUE(event_date) over(client_window) >= DATE(_dbt_max_partition)\nOR FIRST_VALUE(event_date) over(client_window) >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}\n\nwindow client_window AS (\n    PARTITION BY client_id\n    ORDER BY\n        event_timestamp rows BETWEEN unbounded preceding\n        AND unbounded following\n)\n)\nSELECT distinct\n    client_id,\n    user_phone,\n    user_email,\n    user_name,\n    user_address,\n    FIRST_VALUE(channel_grouping) over(user_window) AS first_channel_grouping,\n    FIRST_VALUE(session_id) over(user_window) AS first_session_id,\n    LAST_VALUE(session_id) over(user_window) AS last_session_id,\n    LAST_VALUE(country) over(user_window) AS country,\n    LAST_VALUE(device_type) over(user_window) AS device_type,\n    LAST_VALUE(browser) over(user_window) AS browser,\n    LAST_VALUE(operating_system) over(user_window) AS operating_system,\n    FIRST_VALUE(event_date) over(user_window) AS first_visit_date,\n    FIRST_VALUE(event_timestamp) over(user_window) AS first_visit_initiated,\n    FIRST_VALUE(traffic_source) over(user_window) AS first_traffic_source,\n    FIRST_VALUE(traffic_campaign) over(user_window) AS first_traffic_campaign,\n    FIRST_VALUE(traffic_medium) over(user_window) AS first_traffic_medium,\nFROM\n    raw_\n\n{% if is_incremental() %}\nqualify FIRST_VALUE(event_date) over(user_window) >= DATE(_dbt_max_partition)\nOR FIRST_VALUE(event_date) over(user_window) >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}\n\nwindow user_window AS (PARTITION BY COALESCE(user_phone, client_id)\nORDER BY\n    event_timestamp rows BETWEEN unbounded preceding\n    AND unbounded following)", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_users.sql", "compiled": true, "compiled_code": "\n\nWITH raw_ AS (\n    SELECT\n        DISTINCT client_id,\n        FIRST_VALUE(\n            user_phone ignore nulls\n        ) over(client_window) AS user_phone,\n        FIRST_VALUE(\n            user_email ignore nulls\n        ) over(client_window) AS user_email,\n        FIRST_VALUE(\n            user_name ignore nulls\n        ) over(client_window) AS user_name,\n        FIRST_VALUE(\n            user_address ignore nulls\n        ) over(client_window) AS user_address,\n        channel_grouping,\n        session_id,\n        country,\n        device_type,\n        browser,\n        operating_system,\n        event_date,\n        event_timestamp,\n        traffic_source,\n        traffic_campaign,\n        traffic_medium,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\n\n\nWHERE\n    event_date >= DATE(_dbt_max_partition)\n    OR event_date >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n\n\n\nqualify FIRST_VALUE(event_date) over(client_window) >= DATE(_dbt_max_partition)\nOR FIRST_VALUE(event_date) over(client_window) >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n\n\nwindow client_window AS (\n    PARTITION BY client_id\n    ORDER BY\n        event_timestamp rows BETWEEN unbounded preceding\n        AND unbounded following\n)\n)\nSELECT distinct\n    client_id,\n    user_phone,\n    user_email,\n    user_name,\n    user_address,\n    FIRST_VALUE(channel_grouping) over(user_window) AS first_channel_grouping,\n    FIRST_VALUE(session_id) over(user_window) AS first_session_id,\n    LAST_VALUE(session_id) over(user_window) AS last_session_id,\n    LAST_VALUE(country) over(user_window) AS country,\n    LAST_VALUE(device_type) over(user_window) AS device_type,\n    LAST_VALUE(browser) over(user_window) AS browser,\n    LAST_VALUE(operating_system) over(user_window) AS operating_system,\n    FIRST_VALUE(event_date) over(user_window) AS first_visit_date,\n    FIRST_VALUE(event_timestamp) over(user_window) AS first_visit_initiated,\n    FIRST_VALUE(traffic_source) over(user_window) AS first_traffic_source,\n    FIRST_VALUE(traffic_campaign) over(user_window) AS first_traffic_campaign,\n    FIRST_VALUE(traffic_medium) over(user_window) AS first_traffic_medium,\nFROM\n    raw_\n\n\nqualify FIRST_VALUE(event_date) over(user_window) >= DATE(_dbt_max_partition)\nOR FIRST_VALUE(event_date) over(user_window) >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY)\n\n\nwindow user_window AS (PARTITION BY COALESCE(user_phone, client_id)\nORDER BY\n    event_timestamp rows BETWEEN unbounded preceding\n    AND unbounded following)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.analytics_events": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "analytics_events", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/analytics/analytics_events.sql", "original_file_path": "models/marts/marketing/analytics/analytics_events.sql", "unique_id": "model.sado_analytics_services.analytics_events", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "analytics_events"], "alias": "analytics_events", "checksum": {"name": "sha256", "checksum": "42fe6b8eae4b4a80a71e3ac68595b1b1de311a892e8fee83d7f9ef30e5a583e4"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "daily", "GA4"], "meta": {"joins": [{"join": "analytics_sessions", "sql_on": "${analytics_sessions.session_id} = ${analytics_events.session_id}"}, {"join": "analytics_users", "sql_on": "${analytics_users.client_id} = ${analytics_events.client_id}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "event_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "GA4"], "description": "Incrementally materialised table containing records of Google Analytics events\n", "columns": {"event_id": {"name": "event_id", "description": "Unique identifier for a particular Google Analytics event", "meta": {"metrics": {"num_events": {"type": "count_distinct", "label": "#Events", "label_group": "Website metrics"}}, "dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "Date on which the event took place", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_timestamp": {"name": "event_timestamp", "description": "Date and time at which the event took place", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "client_id": {"name": "client_id", "description": "Cookie-based identifier for an individual", "meta": {"metrics": {"num_users": {"type": "count_distinct", "label": "Number of users", "group_label": "Website metrics"}}, "dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_id": {"name": "session_id", "description": "Identifier for a particular analytics session associated with a particular Client ID\n", "meta": {"metrics": {"num_sessions": {"type": "count_distinct", "label": "Number of sessions", "group_label": "Website metrics"}}, "dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The type of event that took place (over ten possibilities - common values: page_view, track_clicks\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_path": {"name": "page_path", "description": "The URL of the target page with domain stripped, no parameters, fragments etc.)\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "query_params": {"name": "query_params", "description": "Extracted query parameter string from unprocessed URL (e.g. ...?ref=x&course=y -> ref=x&course=y)\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fragment": {"name": "fragment", "description": "Extracted fragment from unprocessed URL (e.g. ...#subheading -> subheading)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click_target": {"name": "link_click_target", "description": "The URL the click event was targetting (e.g. when a hyperlink has been clicked)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_location": {"name": "page_location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_referrer": {"name": "page_referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_type": {"name": "payment_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "location": {"name": "location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "method": {"name": "method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "filter": {"name": "filter", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_id": {"name": "transaction_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping": {"name": "shipping", "description": "", "meta": {"metrics": {"shipping_value": {"type": "sum", "label": "Shipping value", "label_group": "Website metrics"}}, "dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delivery_method": {"name": "delivery_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "store": {"name": "store", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value": {"name": "value", "description": "", "meta": {"metrics": {"event_value": {"type": "sum", "label": "Event value", "label_group": "Website metrics", "compact": "millions", "round": 1}, "purchase_value": {"type": "sum", "label": "Purchase value", "label_group": "Website metrics", "compact": "millions", "round": 1, "filters": [{"event_name": "purchase"}]}, "atc_value": {"type": "sum", "label": "Add to cart value", "label_group": "Website metrics", "compact": "millions", "round": 1, "filters": [{"event_name": "add\u00a0to\u00a0cart"}]}}, "dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "form_value": {"name": "form_value", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "analytics_sessions", "sql_on": "${analytics_sessions.session_id} = ${analytics_events.session_id}"}, {"join": "analytics_users", "sql_on": "${analytics_users.client_id} = ${analytics_events.client_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/analytics/analytics_events.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "analytics_sessions", "sql_on": "${analytics_sessions.session_id} = ${analytics_events.session_id}"}, {"join": "analytics_users", "sql_on": "${analytics_users.client_id} = ${analytics_events.client_id}"}]}, "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "event_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "GA4"]}, "created_at": 1703652761.8634865, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`analytics_events`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'event_date',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  unique_key = 'event_id',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'daily','GA4']\n) }}\n\nSELECT\n  DISTINCT event_id,\n  event_date,\n  event_timestamp,\n  client_id,\n  session_id,\n  event_name,\n  COALESCE(\n    regexp_extract(\n      page_location,\n      r'(?:[a-zA-Z]+://)?(?:[a-zA-Z0-9-.]+){1}(/[^\\?#;&]+)'\n    ),\n    '/'\n  ) AS page_path,\n  regexp_extract(\n    page_location,\n    r'\\?([^#]*)'\n  ) AS query_params,\n  regexp_extract(\n    page_location,\n    r'#(.*)'\n  ) AS fragment,\n  link_click_target,\n  page_location,\n  page_referrer,\n  payment_type,\n  location,\n  method,\n  filter,\n  transaction_id,\n  shipping,\n  delivery_method,\n  store,\n  value,\n  form_value\nFROM\n  {{ ref('int_analytics__events_format') }}\nWHERE\n  1 = 1\n\n{% if is_incremental() %}\nAND (\n  event_date >= DATE(_dbt_max_partition)\n  OR event_date >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY))\n  {% endif %}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_events.sql", "compiled": true, "compiled_code": "\n\nSELECT\n  DISTINCT event_id,\n  event_date,\n  event_timestamp,\n  client_id,\n  session_id,\n  event_name,\n  COALESCE(\n    regexp_extract(\n      page_location,\n      r'(?:[a-zA-Z]+://)?(?:[a-zA-Z0-9-.]+){1}(/[^\\?#;&]+)'\n    ),\n    '/'\n  ) AS page_path,\n  regexp_extract(\n    page_location,\n    r'\\?([^#]*)'\n  ) AS query_params,\n  regexp_extract(\n    page_location,\n    r'#(.*)'\n  ) AS fragment,\n  link_click_target,\n  page_location,\n  page_referrer,\n  payment_type,\n  location,\n  method,\n  filter,\n  transaction_id,\n  shipping,\n  delivery_method,\n  store,\n  value,\n  form_value\nFROM\n  `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\nWHERE\n  1 = 1\n\n\nAND (\n  event_date >= DATE(_dbt_max_partition)\n  OR event_date >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY))\n  ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.analytics_ecommerce": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "analytics_ecommerce", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/analytics/analytics_ecommerce.sql", "original_file_path": "models/marts/marketing/analytics/analytics_ecommerce.sql", "unique_id": "model.sado_analytics_services.analytics_ecommerce", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "analytics_ecommerce"], "alias": "analytics_ecommerce", "checksum": {"name": "sha256", "checksum": "8ca5d9c6e27820b8e9ad81f714aa217a7aa9ea2560c274601e3f62aa57e6bddf"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "daily", "GA4"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "concat(event_id,item_id)", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "GA4"], "description": "Incrementally materialised table containing records of Google Analytics ecommerce events\n", "columns": {"event_id": {"name": "event_id", "description": "Unique identifier for a particular Google Analytics event", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_date": {"name": "event_date", "description": "Date on which the event took place", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_timestamp": {"name": "event_timestamp", "description": "Date and time at which the event took place", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "client_id": {"name": "client_id", "description": "Cookie-based identifier for an individual", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_id": {"name": "session_id", "description": "Identifier for a particular analytics session associated with a particular Client ID\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "The type of event that took place (over ten possibilities - common values: page_view, track_clicks\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_path": {"name": "page_path", "description": "The URL of the target page with domain stripped, no parameters, fragments etc.)\n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_id": {"name": "item_id", "description": "Item id on website", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "number of items in cart or purchase", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "The unit price of the item", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_variant": {"name": "item_variant", "description": "The selected variants (color and size)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_name": {"name": "item_name", "description": "Display name of the item", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_type": {"name": "payment_type", "description": "Method of payment selected", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_id": {"name": "transaction_id", "description": "Website transaction id", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping": {"name": "shipping", "description": "Shipping fee", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delivery_method": {"name": "delivery_method", "description": "Method of delivery", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value": {"name": "value", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/analytics/analytics_ecommerce.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "partition_by": {"field": "event_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "concat(event_id,item_id)", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "GA4"]}, "created_at": 1703652761.8297625, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`analytics_ecommerce`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'event_date',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  unique_key = 'concat(event_id,item_id)',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'daily','GA4']\n) }}\n\nWITH raw_ AS (\n\n  SELECT\n    event_id,\n    event_date,\n    event_timestamp,\n    client_id,\n    event_name,\n    param_value,\n    param_key,\n    items.item_id,\n    items.quantity,\n    items.price,\n    items.item_variant,\n    items.item_name,\n  FROM\n    {{ ref('stg_analytics__events') }}\n    LEFT JOIN unnest(items) items\n  WHERE\n    1 = 1\n    AND event_name IN (\n      'purchase',\n      'add_to_cart',\n      'add_shipping_info',\n      'remove_from_cart',\n      'begin_checkout',\n      'view_cart',\n      'select_item',\n      'view_item'\n    )\n    {% if is_incremental() %}\nAND (event_date >= DATE(_dbt_max_partition)\nOR event_date >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY))\n{% endif %}\n),\ndata_ AS (\n  SELECT\n    event_id,\n    event_date,\n    event_timestamp,\n    client_id,\n    event_name,\n    item_id,\n    quantity,\n    price,\n    item_variant,\n    item_name,\n    val_payment_type AS payment_type,\n    val_transaction_id AS transaction_id,\n    val_shipping AS shipping,\n    val_delivery_method AS delivery_method,\n    val_value AS value,\n    COALESCE(\n      regexp_extract(\n        val_page_location,\n        r'(?:[a-zA-Z]+://)?(?:[a-zA-Z0-9-.]+){1}(/[^\\?#;&]+)'\n      ),\n      '/'\n    ) AS page_path,\n    CONCAT(\n      val_ga_session_id,\n      '-',\n      client_id\n    ) AS session_id,\n    ROW_NUMBER() over (\n      PARTITION BY (\n        CASE\n          WHEN event_name = 'purchase' THEN val_transaction_id\n          ELSE event_id\n        END\n      )\n      ORDER BY\n        event_timestamp ASC\n    ) AS rn_\n  FROM\n    raw_ AS r pivot (ANY_VALUE(param_value) AS val FOR param_key IN ('ga_session_id', 'page_location', 'payment_type', 'transaction_id', 'shipping', 'delivery_method', 'value'))\n)\nSELECT\n  *\nEXCEPT(rn_)\nFROM\n  data_\nWHERE\n  1 = 1 -- and  rn_ = 1", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_ecommerce.sql", "compiled": true, "compiled_code": "\n\nWITH raw_ AS (\n\n  SELECT\n    event_id,\n    event_date,\n    event_timestamp,\n    client_id,\n    event_name,\n    param_value,\n    param_key,\n    items.item_id,\n    items.quantity,\n    items.price,\n    items.item_variant,\n    items.item_name,\n  FROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\n    LEFT JOIN unnest(items) items\n  WHERE\n    1 = 1\n    AND event_name IN (\n      'purchase',\n      'add_to_cart',\n      'add_shipping_info',\n      'remove_from_cart',\n      'begin_checkout',\n      'view_cart',\n      'select_item',\n      'view_item'\n    )\n    \nAND (event_date >= DATE(_dbt_max_partition)\nOR event_date >= date_sub(CURRENT_DATE(), INTERVAL 2 DAY))\n\n),\ndata_ AS (\n  SELECT\n    event_id,\n    event_date,\n    event_timestamp,\n    client_id,\n    event_name,\n    item_id,\n    quantity,\n    price,\n    item_variant,\n    item_name,\n    val_payment_type AS payment_type,\n    val_transaction_id AS transaction_id,\n    val_shipping AS shipping,\n    val_delivery_method AS delivery_method,\n    val_value AS value,\n    COALESCE(\n      regexp_extract(\n        val_page_location,\n        r'(?:[a-zA-Z]+://)?(?:[a-zA-Z0-9-.]+){1}(/[^\\?#;&]+)'\n      ),\n      '/'\n    ) AS page_path,\n    CONCAT(\n      val_ga_session_id,\n      '-',\n      client_id\n    ) AS session_id,\n    ROW_NUMBER() over (\n      PARTITION BY (\n        CASE\n          WHEN event_name = 'purchase' THEN val_transaction_id\n          ELSE event_id\n        END\n      )\n      ORDER BY\n        event_timestamp ASC\n    ) AS rn_\n  FROM\n    raw_ AS r pivot (ANY_VALUE(param_value) AS val FOR param_key IN ('ga_session_id', 'page_location', 'payment_type', 'transaction_id', 'shipping', 'delivery_method', 'value'))\n)\nSELECT\n  *\nEXCEPT(rn_)\nFROM\n  data_\nWHERE\n  1 = 1 -- and  rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.facebook_performance__by_regions": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "facebook_performance__by_regions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/facebook_performance__by_regions.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance__by_regions.sql", "unique_id": "model.sado_analytics_services.facebook_performance__by_regions", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_performance__by_regions"], "alias": "facebook_performance__by_regions", "checksum": {"name": "sha256", "checksum": "95f1244ac9da31b6b0406d5febcd758201e89e7f793ffe358817ec09530a513f"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily"], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id": {"name": "row_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region": {"name": "region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/facebook_performance__by_regions.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "row_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily"]}, "created_at": 1703652761.9930682, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance__by_regions`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\n      'field': 'date_start',\n      'data_type': 'date',\n      'granularity': 'day'},\n    incremental_strategy = 'insert_overwrite',\n    unique_key = 'row_id',\n    on_schema_change = 'sync_all_columns',\n    tags=['incremental', 'daily']\n  )\n}}\n\n\nSELECT\n{{ dbt_utils.generate_surrogate_key(['account_id','date_start','region']) }} as row_id,\n    account_id,\n    date_start,\n    region,\n    sum(impressions) impressions,\n    sum(spend) spend,\n    sum(clicks) clicks,\n    sum(reach) reach,\n    sum(link_click) link_click,\n    sum(post_engagement) post_engagement,\n    sum(offline_conversion_purchase) offline_conversion_purchase,\n    sum(offline_conversion_purchase_value) offline_conversion_purchase_value,\n    sum(pixel_purchase) pixel_purchase,\n    sum(pixel_purchase_value) pixel_purchase_value,\n    sum(messaging_conversation_started_7d) messaging_conversation_started_7d\nFROM\n    {{ ref('stg_facebookads__regioninsights') }}\n    {{dbt_utils.group_by(4)}}", "language": "sql", "refs": [{"name": "stg_facebookads__regioninsights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_facebookads__regioninsights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/facebook_performance__by_regions.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\nto_hex(md5(cast(coalesce(cast(account_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date_start as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(region as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as row_id,\n    account_id,\n    date_start,\n    region,\n    sum(impressions) impressions,\n    sum(spend) spend,\n    sum(clicks) clicks,\n    sum(reach) reach,\n    sum(link_click) link_click,\n    sum(post_engagement) post_engagement,\n    sum(offline_conversion_purchase) offline_conversion_purchase,\n    sum(offline_conversion_purchase_value) offline_conversion_purchase_value,\n    sum(pixel_purchase) pixel_purchase,\n    sum(pixel_purchase_value) pixel_purchase_value,\n    sum(messaging_conversation_started_7d) messaging_conversation_started_7d\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__regioninsights`\n    group by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.facebook_budget": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "facebook_budget", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/facebook_budget.sql", "original_file_path": "models/marts/marketing/facebook/facebook_budget.sql", "unique_id": "model.sado_analytics_services.facebook_budget", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_budget"], "alias": "facebook_budget", "checksum": {"name": "sha256", "checksum": "b19a8231d4bcc51f9247df7f8f698b41051c393f9f64eff502ff30780e6d787e"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["table", "fact", "budget", "ignore"], "meta": {"joins": [{"join": "stg_gsheet__asms", "sql_on": "${stg_gsheet__asms.branch_id} = ${facebook_budget.branch_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${facebook_budget.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "budget", "ignore"], "description": "", "columns": {"branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number"}, "metrics": {"m_num_stores": {"type": "count_distinct", "label": "No. Stores", "group_label": "Misc"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page": {"name": "page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch": {"name": "branch", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start": {"name": "start", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "milestone_name": {"name": "milestone_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end": {"name": "end", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_budget": {"name": "daily_budget", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_budget": {"type": "sum", "label": "Budget", "group_label": "Budget", "compact": "millions", "round": 1}, "m_avg_budget": {"type": "average", "label": "_Budget", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_sales_target": {"name": "daily_sales_target", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_sales_target": {"type": "sum", "label": "Sales Target", "group_label": "Budget", "compact": "millions", "round": 1}, "m_avg_sales_target": {"type": "average", "label": "_Sales Target", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_traffic_target": {"name": "daily_traffic_target", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_traffic_target": {"type": "sum", "label": "Traffic Target", "group_label": "Budget", "compact": "thousands", "round": 1}, "m_avg_traffic_target": {"type": "average", "label": "_Traffic Target", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_aov": {"name": "daily_aov", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_gsheet__asms", "sql_on": "${stg_gsheet__asms.branch_id} = ${facebook_budget.branch_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${facebook_budget.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/facebook_budget.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "stg_gsheet__asms", "sql_on": "${stg_gsheet__asms.branch_id} = ${facebook_budget.branch_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${facebook_budget.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}]}, "tags": ["table", "fact", "budget", "ignore"]}, "created_at": 1703652762.004235, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_budget`", "raw_code": "{{\n  config(\n    tags=['table', 'fact','budget','ignore']\n  )\n}}\n\n{% set targets = [\"budget\", \"sales_target\", \"traffic_target\",'aov'] %}\n\nwith processed as (\n\nSELECT\n    * \nEXCEPT\n    ({% for item in targets %}\n        val_{{ item }}\n        {{ \", \" if not loop.last else \"\" }}\n    {% endfor %}),\n\n    {% for item in targets %}\n        safe_divide(val_{{ item }}, date_diff(tb.end,tb.start, day)+1) AS daily_{{ item }},\n    {% endfor %}\nFROM\n    (\n        SELECT\n            branch_id,\n            branch,\n            {# budget_month, #}\n            b.page,\n            milestones.*,\n            b.pic,\n            {# {% for item in targets %}\n                {{ item }} as total_{{ item }},\n            {% endfor %} #}\n        FROM\n            {{ ref('stg_gsheet__facebook_budget') }} b,\n            unnest(milestones) milestones\n    )\n    pivot (\n        SUM(value) AS val \n        for budget_type IN (\n            {% for item in targets %}\n        '{{item}}' {{ \", \" if not loop.last else \"\" }}\n            {% endfor %})\n            ) as tb\n)\n\nselect \n    processed.*,\n    c.date,\n    {# {% for metric in metrics %%}\n    sum(fb.{{metric}}) {{metric}},\n    {% endfor %%} #}\nfrom processed\ncross join {{ref(\"calendar\")}} c\n{# left join {{ref(\"facebook_performance\")}} fp on processed.page = fp.page and c.date = fp.date_start #}\nwhere c.date >= processed.start and c.date <= processed.end\n{# {{dbt_utils.group_by(14)}} #}", "language": "sql", "refs": [{"name": "stg_gsheet__facebook_budget", "package": null, "version": null}, {"name": "calendar", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_gsheet__facebook_budget", "model.sado_analytics_services.calendar"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/facebook_budget.sql", "compiled": true, "compiled_code": "\n\n\n\nwith processed as (\n\nSELECT\n    * \nEXCEPT\n    (\n        val_budget\n        , \n    \n        val_sales_target\n        , \n    \n        val_traffic_target\n        , \n    \n        val_aov\n        \n    ),\n\n    \n        safe_divide(val_budget, date_diff(tb.end,tb.start, day)+1) AS daily_budget,\n    \n        safe_divide(val_sales_target, date_diff(tb.end,tb.start, day)+1) AS daily_sales_target,\n    \n        safe_divide(val_traffic_target, date_diff(tb.end,tb.start, day)+1) AS daily_traffic_target,\n    \n        safe_divide(val_aov, date_diff(tb.end,tb.start, day)+1) AS daily_aov,\n    \nFROM\n    (\n        SELECT\n            branch_id,\n            branch,\n            \n            b.page,\n            milestones.*,\n            b.pic,\n            \n        FROM\n            `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__facebook_budget` b,\n            unnest(milestones) milestones\n    )\n    pivot (\n        SUM(value) AS val \n        for budget_type IN (\n            \n        'budget' , \n            \n        'sales_target' , \n            \n        'traffic_target' , \n            \n        'aov' \n            )\n            ) as tb\n)\n\nselect \n    processed.*,\n    c.date,\n    \nfrom processed\ncross join `agile-scheme-394814`.`dbt_prod`.`calendar` c\n\nwhere c.date >= processed.start and c.date <= processed.end\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.facebook_performance__by_audience": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "facebook_performance__by_audience", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/facebook_performance__by_audience.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance__by_audience.sql", "unique_id": "model.sado_analytics_services.facebook_performance__by_audience", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_performance__by_audience"], "alias": "facebook_performance__by_audience", "checksum": {"name": "sha256", "checksum": "158bce763dee1015563d9b7988d874078c3c9b6dc573dbc6a5e30f4a37882010"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily"], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id": {"name": "row_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "age": {"name": "age", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/facebook_performance__by_audience.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "row_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily"]}, "created_at": 1703652761.995296, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance__by_audience`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\n      'field': 'date_start',\n      'data_type': 'date',\n      'granularity': 'day'},\n    incremental_strategy = 'insert_overwrite',\n    unique_key = 'row_id',\n    on_schema_change = 'sync_all_columns',\n    tags=['incremental', 'daily']\n  )\n}}\n\nSELECT\n{{ dbt_utils.generate_surrogate_key(['account_id','date_start','age','gender']) }} as row_id,\n    account_id,\n    date_start,\n    age,\n    gender,\n    sum(impressions) impressions,\n    sum(spend) spend,\n    sum(clicks) clicks,\n    sum(reach) reach,\n    sum(link_click) link_click,\n    sum(post_engagement) post_engagement,\n    sum(offline_conversion_purchase) offline_conversion_purchase,\n    sum(offline_conversion_purchase_value) offline_conversion_purchase_value,\n    sum(pixel_purchase) pixel_purchase,\n    sum(pixel_purchase_value) pixel_purchase_value,\n    sum(messaging_conversation_started_7d) messaging_conversation_started_7d\nFROM\n    {{ ref('stg_facebookads__audienceinsights') }}\n    {{dbt_utils.group_by(5)}}", "language": "sql", "refs": [{"name": "stg_facebookads__audienceinsights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_facebookads__audienceinsights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/facebook_performance__by_audience.sql", "compiled": true, "compiled_code": "\n\nSELECT\nto_hex(md5(cast(coalesce(cast(account_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date_start as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(age as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(gender as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as row_id,\n    account_id,\n    date_start,\n    age,\n    gender,\n    sum(impressions) impressions,\n    sum(spend) spend,\n    sum(clicks) clicks,\n    sum(reach) reach,\n    sum(link_click) link_click,\n    sum(post_engagement) post_engagement,\n    sum(offline_conversion_purchase) offline_conversion_purchase,\n    sum(offline_conversion_purchase_value) offline_conversion_purchase_value,\n    sum(pixel_purchase) pixel_purchase,\n    sum(pixel_purchase_value) pixel_purchase_value,\n    sum(messaging_conversation_started_7d) messaging_conversation_started_7d\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__audienceinsights`\n    group by 1,2,3,4,5", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.offline_conversion": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "offline_conversion", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/offline_conversion.sql", "original_file_path": "models/marts/marketing/facebook/offline_conversion.sql", "unique_id": "model.sado_analytics_services.offline_conversion", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "offline_conversion"], "alias": "offline_conversion", "checksum": {"name": "sha256", "checksum": "b459dba2c25fce987275fe1776693f57221d87d70b3062866e4bd806dc4d66e7"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fb", "integration", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fb", "integration", "view"], "description": "table to upload offline conversion to facebook", "columns": {"transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/offline_conversion.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "tags": ["fb", "integration", "view"]}, "created_at": 1703652761.9776468, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`offline_conversion`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['fb','integration','view']\n)}}\n\nSELECT\n    invoices.transaction_code,\n    invoices.created_date,\n    unix_seconds(timestamp_add(invoices.transaction_date, interval -7 hour)) transaction_date,\n    invoices.total,\n    to_hex(sha256(regexp_replace(customers.contact_number,\"^0\",\"84\"))) as contact_number,\n    to_hex(sha256(case when customers.gender then 'm' else 'f' end)) as gender,\n    branches.branch_name,\nFROM\n    {{ ref('stg_kiotviet__invoices') }}\n    invoices\n    LEFT JOIN {{ ref('stg_kiotviet__branches') }}\n    branches\n    ON invoices.branch_id = branches.branch_id\n    LEFT JOIN {{ ref('stg_kiotviet__customers') }}\n    customers\n     ON invoices.customer_id = customers.customer_id\nWHERE 1=1\n    and invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.total > 0\n    AND customers.contact_number <> ''\n    AND customers.contact_number IS NOT NULL\n    and transaction_code not like 'HDD_%'", "language": "sql", "refs": [{"name": "stg_kiotviet__invoices", "package": null, "version": null}, {"name": "stg_kiotviet__branches", "package": null, "version": null}, {"name": "stg_kiotviet__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoices", "model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_kiotviet__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/offline_conversion.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.transaction_code,\n    invoices.created_date,\n    unix_seconds(timestamp_add(invoices.transaction_date, interval -7 hour)) transaction_date,\n    invoices.total,\n    to_hex(sha256(regexp_replace(customers.contact_number,\"^0\",\"84\"))) as contact_number,\n    to_hex(sha256(case when customers.gender then 'm' else 'f' end)) as gender,\n    branches.branch_name,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n    invoices\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`\n    branches\n    ON invoices.branch_id = branches.branch_id\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers`\n    customers\n     ON invoices.customer_id = customers.customer_id\nWHERE 1=1\n    and invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.total > 0\n    AND customers.contact_number <> ''\n    AND customers.contact_number IS NOT NULL\n    and transaction_code not like 'HDD_%'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.facebook_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "facebook_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/facebook_performance.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance.sql", "unique_id": "model.sado_analytics_services.facebook_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_performance"], "alias": "facebook_performance", "checksum": {"name": "sha256", "checksum": "506740ae22ce88f65abb039b40fec6b4dee53d1ecebdcc03e56ccffd30fe7b58"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "daily", "fact"], "meta": {"joins": [{"join": "calendar", "sql_on": "${facebook_performance.date_start} = ${calendar.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}, {"join": "stg_gsheet__asms", "sql_on": "${facebook_performance.page} = ${stg_gsheet__asms.page}"}, {"join": "stg_kiotviet__categories", "sql_on": "${stg_kiotviet__categories.ads_product_mapping} = ${facebook_performance.promoted_productline}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["date_start", "campaign_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "fact"], "description": "", "columns": {"account_name": {"name": "account_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "campaign name based on convention", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "big_campaign": {"name": "big_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pic": {"name": "pic", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_pic": {"type": "string", "sql": "coalesce(${TABLE}.pic,${stg_gsheet__asms.pic})", "label": "PIC"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_group": {"name": "content_group", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page": {"name": "page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promoted_productline": {"name": "promoted_productline", "description": "", "meta": {"dimension": {"type": "string", "sql": "lower(promoted_productline)"}, "additional_dimensions": {"productline": {"type": "string", "sql": "case when regexp_contains(lower(${TABLE}.promoted_productline),r'th h\u00e0ng \u0111\u00f4ng|\u00e1o gi\u00f3|bomber|\u00e1o phao|\u00e1o thun|\u00e1o n\u1ec9|\u00e1o len|polo d\u00e0i tay|b\u1ed9 n\u1ec9|qu\u1ea7n n\u1ec9|qu\u1ea7n gi\u00f3') then 'H\u00e0ng \u0111\u00f4ng'\n    when regexp_contains(lower(${TABLE}.promoted_productline),r'th h\u00e0ng h\u00e8|polo|t-shirt|short tt|short kk|short gi\u00f3|smc|\u00e1o ch\u1ed1ng n\u1eafng') then 'H\u00e0ng h\u00e8'\n    when regexp_contains(lower(${TABLE}.promoted_productline),r'th quanh n\u0103m|smd|jeans|qu\u1ea7n \u00e2u|kaki d\u00e0i|ph\u1ee5 ki\u1ec7n|tanktop|qu\u1ea7n d\u00e0i') then 'Quanh n\u0103m'\n    else 'Kh\u00e1c' end"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "media_type": {"name": "media_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"metrics": {"m_num_camps": {"type": "count_distinct", "label": "No. Campaigns", "group_label": "FB Ads", "filters": [{"impressions": ">=0"}]}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "FB Ads", "compact": "millions", "round": 1}, "m_avg_impressions": {"type": "average", "label": "AVG Impressions", "group_label": "FB Ads", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_spend": {"type": "sum", "label": "Spend", "group_label": "FB Ads", "compact": "millions", "round": 1}, "m_avg_spend": {"type": "average", "label": "Avg Spend", "group_label": "FB Ads", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_reach": {"type": "average", "label": "Reach", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "number of clicks to any urls in ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_link_click": {"type": "sum", "label": "Link Clicks", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "number of engagement with ad post", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_post_engagement": {"type": "sum", "label": "Post engagement", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "number of offline purchases attributed to ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_ocv": {"type": "sum", "label": "Offine CV Purchase", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "offline purchase value attributed to ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_ocv_value": {"type": "sum", "label": "Offline CV Value", "group_label": "FB Ads", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "website purchase attributed to ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_pcv": {"type": "sum", "label": "Online CV", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "website purchase value attributed to ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_pcv_value": {"type": "sum", "label": "Online CV Value", "group_label": "FB Ads", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase": {"name": "meta_purchase", "description": "number of purchase generated directly on facebook", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_meta_purchase": {"type": "sum", "label": "Message CV", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase_value": {"name": "meta_purchase_value", "description": "purchase value generated directly on facebook", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_meta_purchase_value": {"type": "sum", "label": "Message CV Value", "group_label": "FB Ads", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_results_message": {"name": "_results_message", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_messages": {"type": "sum", "label": "Messages", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_type": {"name": "ad_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "funnel": {"name": "funnel", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${facebook_performance.date_start} = ${calendar.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}, {"join": "stg_gsheet__asms", "sql_on": "${facebook_performance.page} = ${stg_gsheet__asms.page}"}, {"join": "stg_kiotviet__categories", "sql_on": "${stg_kiotviet__categories.ads_product_mapping} = ${facebook_performance.promoted_productline}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/facebook_performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${facebook_performance.date_start} = ${calendar.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}, {"join": "stg_gsheet__asms", "sql_on": "${facebook_performance.page} = ${stg_gsheet__asms.page}"}, {"join": "stg_kiotviet__categories", "sql_on": "${stg_kiotviet__categories.ads_product_mapping} = ${facebook_performance.promoted_productline}"}]}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["date_start", "campaign_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "fact"]}, "created_at": 1703652761.9908698, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\n      'field': 'date_start',\n      'data_type': 'date',\n      'granularity': 'day'},\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['date_start','campaign_id'],\n    on_schema_change = 'sync_all_columns',\n    tags=['incremental', 'daily','fact']\n  )\n}}\n\n\nSELECT\n    campaigns.account_name,\n    adsinsights.date_start,\n    campaigns.campaign_name,\n    campaigns.big_campaign,\n    campaigns.pic,\n    campaigns.content_group,\n    campaigns.page,\n    campaigns.promoted_productline,\n    campaigns.media_type,\n    campaigns.ad_type, \n    campaigns.funnel,\n    adsinsights.campaign_id,\n    sum(adsinsights.impressions) impressions,\n    sum(adsinsights.spend) spend,\n    sum(adsinsights.clicks) clicks,\n    sum(adsinsights.reach) reach,\n    sum(adsinsights.link_click) link_click,\n    sum(adsinsights.post_engagement) post_engagement,\n    sum(adsinsights.offline_conversion_purchase) offline_conversion_purchase,\n    sum(adsinsights.offline_conversion_purchase_value) offline_conversion_purchase_value,\n    sum(adsinsights.pixel_purchase) pixel_purchase,\n    sum(adsinsights.pixel_purchase_value) pixel_purchase_value,\n    sum(adsinsights.meta_purchase) meta_purchase,\n    sum(adsinsights.meta_purchase_value) meta_purchase_value,\n    sum(adsinsights.messaging_conversation_started_7d) _results_message\nFROM\n    {{ ref('stg_facebookads__adsinsights') }} adsinsights\n    left join {{ref('stg_facebookads__campaigns')}} campaigns on adsinsights.campaign_id = campaigns.campaign_id\n    {{dbt_utils.group_by(12)}}", "language": "sql", "refs": [{"name": "stg_facebookads__adsinsights", "package": null, "version": null}, {"name": "stg_facebookads__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_facebookads__adsinsights", "model.sado_analytics_services.stg_facebookads__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/facebook_performance.sql", "compiled": true, "compiled_code": "\n\n\nSELECT\n    campaigns.account_name,\n    adsinsights.date_start,\n    campaigns.campaign_name,\n    campaigns.big_campaign,\n    campaigns.pic,\n    campaigns.content_group,\n    campaigns.page,\n    campaigns.promoted_productline,\n    campaigns.media_type,\n    campaigns.ad_type, \n    campaigns.funnel,\n    adsinsights.campaign_id,\n    sum(adsinsights.impressions) impressions,\n    sum(adsinsights.spend) spend,\n    sum(adsinsights.clicks) clicks,\n    sum(adsinsights.reach) reach,\n    sum(adsinsights.link_click) link_click,\n    sum(adsinsights.post_engagement) post_engagement,\n    sum(adsinsights.offline_conversion_purchase) offline_conversion_purchase,\n    sum(adsinsights.offline_conversion_purchase_value) offline_conversion_purchase_value,\n    sum(adsinsights.pixel_purchase) pixel_purchase,\n    sum(adsinsights.pixel_purchase_value) pixel_purchase_value,\n    sum(adsinsights.meta_purchase) meta_purchase,\n    sum(adsinsights.meta_purchase_value) meta_purchase_value,\n    sum(adsinsights.messaging_conversation_started_7d) _results_message\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__adsinsights` adsinsights\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns` campaigns on adsinsights.campaign_id = campaigns.campaign_id\n    group by 1,2,3,4,5,6,7,8,9,10,11,12", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.google_campaign_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "google_campaign_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/google/google_campaign_performance.sql", "original_file_path": "models/marts/marketing/google/google_campaign_performance.sql", "unique_id": "model.sado_analytics_services.google_campaign_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "google", "google_campaign_performance"], "alias": "google_campaign_performance", "checksum": {"name": "sha256", "checksum": "9b774f7a3b2a0265c1cec08500762d05e439e5bd32f572de776b577be5d8f7ba"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaigns.campaign_id} = ${google_campaign_performance.campaign_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${google_campaign_performance.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.\nV\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_cost": {"name": "ads_cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.\nChi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_ads_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_impressions": {"name": "ads_impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.\nS\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_ads_impressions": {"type": "sum", "label": "#Impressions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_clicks": {"name": "ads_clicks", "description": "The number of clicks.\nS\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_ads_clicks": {"type": "sum", "label": "#Clicks", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_conversions": {"name": "ads_conversions", "description": "The number of conversions.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_ads_conversions": {"type": "sum", "label": "#Conversions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_interactions": {"name": "ads_interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.\nS\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"m_ads_interactions": {"type": "sum", "label": "#Interactions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_purchase": {"name": "ads_purchase", "description": "", "meta": {"metrics": {"m_ads_purchase": {"type": "sum", "label": "#Web Purchases", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_purchase_value": {"name": "ads_purchase_value", "description": "", "meta": {"metrics": {"m_ads_purchase_value": {"type": "sum", "label": "Web Purchases Value", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_contacts": {"name": "ads_contacts", "description": "", "meta": {"metrics": {"m_ads_contacts": {"type": "sum", "label": "#Contacts intent", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_atc": {"name": "ads_atc", "description": "", "meta": {"metrics": {"m_ads_atc": {"type": "sum", "label": "#Add to cart", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaigns.campaign_id} = ${google_campaign_performance.campaign_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${google_campaign_performance.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/google/google_campaign_performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaigns.campaign_id} = ${google_campaign_performance.campaign_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${google_campaign_performance.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1703652762.0132227, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`google_campaign_performance`", "raw_code": "{{ config(\n    tags = ['ggads','fact','view']\n) }}\n\nWITH \ncampaign_stats AS (\n    SELECT\n        campaign_id,\n        date,\n        slot,\n        SUM(cost) AS ads_cost,\n        SUM(impressions) AS ads_impressions,\n        SUM(clicks) AS ads_clicks,\n        SUM(conversions) AS ads_conversions,\n        SUM(interactions) AS ads_interactions,\n    FROM\n        {{ ref('stg_googleads__campaign_stats') }}\n    GROUP BY\n        1,\n        2,\n        3\n),\ncampaign_conversion_stats AS (\n    SELECT\n        campaign_id,\n        date,\n        slot,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase')) THEN (conversions)\n                ELSE NULL\n            END\n        ) AS ads_purchase,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_purchase_value,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('add_to_cart')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_atc,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_call', 'website_message')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_contacts,\n    FROM\n        {{ ref('stg_googleads__campaign_conversion_stats') }}\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    cs.*,\n    ccs.ads_purchase,\n    ccs.ads_purchase_value,\n    ccs.ads_contacts,\n    ccs.ads_atc,\nFROM\n    campaign_stats cs\n    LEFT JOIN campaign_conversion_stats ccs\n    ON cs.campaign_id = ccs.campaign_id\n    AND cs.date = ccs.date\n    AND cs.slot = ccs.slot", "language": "sql", "refs": [{"name": "stg_googleads__campaign_stats", "package": null, "version": null}, {"name": "stg_googleads__campaign_conversion_stats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_googleads__campaign_stats", "model.sado_analytics_services.stg_googleads__campaign_conversion_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/google/google_campaign_performance.sql", "compiled": true, "compiled_code": "\n\nWITH \ncampaign_stats AS (\n    SELECT\n        campaign_id,\n        date,\n        slot,\n        SUM(cost) AS ads_cost,\n        SUM(impressions) AS ads_impressions,\n        SUM(clicks) AS ads_clicks,\n        SUM(conversions) AS ads_conversions,\n        SUM(interactions) AS ads_interactions,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`\n    GROUP BY\n        1,\n        2,\n        3\n),\ncampaign_conversion_stats AS (\n    SELECT\n        campaign_id,\n        date,\n        slot,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase')) THEN (conversions)\n                ELSE NULL\n            END\n        ) AS ads_purchase,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_purchase_value,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('add_to_cart')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_atc,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_call', 'website_message')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_contacts,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_conversion_stats`\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    cs.*,\n    ccs.ads_purchase,\n    ccs.ads_purchase_value,\n    ccs.ads_contacts,\n    ccs.ads_atc,\nFROM\n    campaign_stats cs\n    LEFT JOIN campaign_conversion_stats ccs\n    ON cs.campaign_id = ccs.campaign_id\n    AND cs.date = ccs.date\n    AND cs.slot = ccs.slot", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.google_ad_group_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "google_ad_group_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/google/google_ad_group_performance.sql", "original_file_path": "models/marts/marketing/google/google_ad_group_performance.sql", "unique_id": "model.sado_analytics_services.google_ad_group_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "google", "google_ad_group_performance"], "alias": "google_ad_group_performance", "checksum": {"name": "sha256", "checksum": "773ba464d00590edceaaf93f7fede9c64f03ddb56a7f0134b70a69fca4212448"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${google_ad_group_performance.ad_group_id}=${stg_googleads__ad_groups.ad_group_id}"}, {"join": "stg_googleads__campaigns", "sql_on": "${google_ad_group_performance.campaign_id}=${stg_googleads__campaigns.campaign_id}"}, {"join": "calendar", "sql_on": "${google_ad_group_performance.date}=${calendar.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.\nM\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.\nPh\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "top_impression_percentage": {"name": "top_impression_percentage", "description": "The percent of your ad impressions that are shown anywhere above the organic search results.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"metrics": {"m_top_impression_percentage": {"type": "average", "label": "Top Impression Percentage", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_top_impression_share": {"name": "search_top_impression_share", "description": "The impressions you've received in the top location (anywhere above the organic search results) compared to the estimated number of impressions you were eligible to receive in the top location.\nT\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb t\u1ea1i khu v\u1ef1c \u0111\u1ea7u (tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm) tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec7n th\u1ecb khu v\u1ef1c \u0111\u1ea7u.", "meta": {"metrics": {"m_search_top_impression_share": {"type": "average", "label": "Search Top Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p100_rate": {"name": "video_quartile_p100_rate", "description": "Percentage of impressions where the viewer watched all of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem to\u00e0n b\u1ed9 video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p100_rate": {"type": "average", "label": "Video Quartile P100 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p75_rate": {"name": "video_quartile_p75_rate", "description": "Percentage of impressions where the viewer watched 75% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 75% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p75_rate": {"type": "average", "label": "Video Quartile P75 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p50_rate": {"name": "video_quartile_p50_rate", "description": "Percentage of impressions where the viewer watched 50% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 50% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p50_rate": {"type": "average", "label": "Video Quartile P50 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p25_rate": {"name": "video_quartile_p25_rate", "description": "Percentage of impressions where the viewer watched 25% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 25% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p25_rate": {"type": "average", "label": "Video Quartile P25 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "absolute_top_impression_percentage": {"name": "absolute_top_impression_percentage", "description": "The percent of your ad impressions that are shown as the very first ad above the organic search results.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb th\u1ee9 t\u1ef1 \u0111\u1ea7u ti\u00ean trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"metrics": {"m_absolute_top_impression_percentage": {"type": "average", "label": "Absolute Top Impression Percentage", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_impression_share": {"name": "content_impression_share", "description": "The impressions you've received on the Display Network divided by the estimated number of impressions you were eligible to receive.\nT\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o qua Display Network tr\u00ean s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb.", "meta": {"metrics": {"m_content_impression_share": {"type": "average", "label": "Content Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_rank_lost_impression_share": {"name": "content_rank_lost_impression_share", "description": "The estimated percentage of impressions on the Display Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb tr\u00ean Display Network b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"metrics": {"m_content_rank_lost_impression_share": {"type": "average", "label": "Content Rank Lost Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cross_device_conversions": {"name": "cross_device_conversions", "description": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.\nChuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cross_device_conversions": {"type": "sum", "label": "Cross Device Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagements": {"name": "engagements", "description": "The number of engagements. An engagement occurs when a viewer expands your Lightbox ad.\nS\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. V\u1edbi qu\u1ea3ng c\u00e1o display s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng m\u1edf r\u1ed9ng qu\u1ea3ng c\u00e1o (Lightbox)", "meta": {"metrics": {"m_engagements": {"type": "sum", "label": "Engagements", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relative_ctr": {"name": "relative_ctr", "description": "Your clickthrough rate (Ctr) divided by the average clickthrough rate of all advertisers on the websites that show your ads.\nT\u1ec9 l\u1ec7 nh\u1ea5p t\u01b0\u01a1ng \u0111\u1ed1i, t\u00ednh d\u1ef1a tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p trung b\u00ecnh c\u1ee7a c\u00e1c nh\u00e0 qu\u1ea3ng c\u00e1o kh\u00e1c tr\u00ean trang m\u00e0 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb.", "meta": {"metrics": {"m_relative_ctr": {"type": "average", "label": "Relative Ctr", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_absolute_top_impression_share": {"name": "search_absolute_top_impression_share", "description": "The percentage of the customer's Shopping or Search ad impressions that are shown in the most prominent Shopping position.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o t\u00ecm ki\u1ebfm ho\u1eb7c mua s\u1eafm \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb v\u1ecb tr\u00ed t\u1ed1t nh\u1ea5t.", "meta": {"metrics": {"m_search_absolute_top_impression_share": {"type": "average", "label": "Search Absolute Top Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_budget_lost_absolute_top_impression_share": {"name": "search_budget_lost_absolute_top_impression_share", "description": "The number estimating how often your ad wasn't the very first ad above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb t\u1ea1i v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ng\u00e2n s\u00e1ch th\u1ea5p.", "meta": {"metrics": {"m_search_budget_lost_absolute_top_impression_share": {"type": "average", "label": "Search Budget Lost Absolute Top Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_budget_lost_top_impression_share": {"name": "search_budget_lost_top_impression_share", "description": "The number estimating how often your ad didn't show anywhere above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb do ng\u00e2n s\u00e1ch th\u1ea5p.", "meta": {"metrics": {"m_search_budget_lost_top_impression_share": {"type": "average", "label": "Search Budget Lost Top Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_impression_share": {"name": "search_impression_share", "description": "The impressions you've received on the Search Network divided by the estimated number of impressions you were eligible to receive.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb.", "meta": {"metrics": {"m_search_impression_share": {"type": "average", "label": "Search Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_absolute_top_impression_share": {"name": "search_rank_lost_absolute_top_impression_share", "description": "The number estimating how often your ad wasn't the very first ad above the organic search results due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"metrics": {"m_search_rank_lost_absolute_top_impression_share": {"type": "average", "label": "Search Rank Lost Absolute Top Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_impression_share": {"name": "search_rank_lost_impression_share", "description": "The estimated percentage of impressions on the Search Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t tr\u00ean k\u00eanh t\u00ecm ki\u1ebfm do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"metrics": {"m_search_rank_lost_impression_share": {"type": "average", "label": "Search Rank Lost Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_top_impression_share": {"name": "search_rank_lost_top_impression_share", "description": "The number estimating how often your ad didn't show anywhere above the organic search results due to poor Ad Rank\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"metrics": {"m_search_rank_lost_top_impression_share": {"type": "average", "label": "Search Rank Lost Top Impression Share", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_views": {"name": "video_views", "description": "The number of times your video ads were viewed.\nS\u1ed1 l\u01b0\u1ee3t qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c xem.", "meta": {"metrics": {"m_video_views": {"type": "sum", "label": "Video Views", "group_label": "GG Ads metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.\nS\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "GG Ads metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions": {"type": "sum", "label": "Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.\nChi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics", "compact": "millions", "round": 2}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.\nS\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.\nS\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"m_interactions": {"type": "sum", "label": "Interactions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"metrics": {"m_view_through_conversions": {"type": "sum", "label": "View Through Conversions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${google_ad_group_performance.ad_group_id}=${stg_googleads__ad_groups.ad_group_id}"}, {"join": "stg_googleads__campaigns", "sql_on": "${google_ad_group_performance.campaign_id}=${stg_googleads__campaigns.campaign_id}"}, {"join": "calendar", "sql_on": "${google_ad_group_performance.date}=${calendar.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/google/google_ad_group_performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${google_ad_group_performance.ad_group_id}=${stg_googleads__ad_groups.ad_group_id}"}, {"join": "stg_googleads__campaigns", "sql_on": "${google_ad_group_performance.campaign_id}=${stg_googleads__campaigns.campaign_id}"}, {"join": "calendar", "sql_on": "${google_ad_group_performance.date}=${calendar.date}", "fields": ["date", "period", "year_month", "month_name", "no_days", "period_code"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1703652762.0256665, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`google_ad_group_performance`", "raw_code": "{{ config(\n    tags = ['ggads','fact','view']\n) }}\nWITH ad_group_stats AS (\n    SELECT\n        ad_group_id,\n        campaign_id,\n        DATE,\n        SUM(clicks) clicks,\n        SUM(conversions) conversions,\n        SUM(conversions_value) conversions_value,\n        SUM(cost) cost,\n        SUM(impressions) impressions,\n        SUM(interactions) interactions,\n        SUM(view_through_conversions) view_through_conversions,\n    FROM\n        {{ ref('stg_googleads__ad_group_stats') }}\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    ags.campaign_id,\n    ags.ad_group_id,\n    ags.date,\n    ags.network_type,\n    ags.top_impression_percentage,\n    ags.search_top_impression_share,\n    ags.video_quartile_p100_rate,\n    ags.video_quartile_p75_rate,\n    ags.video_quartile_p50_rate,\n    ags.video_quartile_p25_rate,\n    ags.absolute_top_impression_percentage,\n    ags.content_impression_share,\n    ags.content_rank_lost_impression_share,\n    ags.cross_device_conversions,\n    ags.engagements,\n    ags.relative_ctr,\n    ags.search_absolute_top_impression_share,\n    ags.search_budget_lost_absolute_top_impression_share,\n    ags.search_budget_lost_top_impression_share,\n    ags.search_impression_share,\n    ags.search_rank_lost_absolute_top_impression_share,\n    ags.search_rank_lost_impression_share,\n    ags.search_rank_lost_top_impression_share,\n    ags.video_views,\n    s.clicks,\n    s.conversions,\n    s.cost,\n    s.impressions,\n    s.interactions,\n    s.view_through_conversions,\nFROM\n    {{ ref('stg_googleads__ad_group_cross_device_stats') }}\n    ags\n    LEFT JOIN ad_group_stats s\n    ON ags.campaign_id = s.campaign_id\n    AND ags.ad_group_id = s.ad_group_id\n    AND ags.date = s.date", "language": "sql", "refs": [{"name": "stg_googleads__ad_group_stats", "package": null, "version": null}, {"name": "stg_googleads__ad_group_cross_device_stats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_googleads__ad_group_stats", "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/google/google_ad_group_performance.sql", "compiled": true, "compiled_code": "\nWITH ad_group_stats AS (\n    SELECT\n        ad_group_id,\n        campaign_id,\n        DATE,\n        SUM(clicks) clicks,\n        SUM(conversions) conversions,\n        SUM(conversions_value) conversions_value,\n        SUM(cost) cost,\n        SUM(impressions) impressions,\n        SUM(interactions) interactions,\n        SUM(view_through_conversions) view_through_conversions,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_stats`\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    ags.campaign_id,\n    ags.ad_group_id,\n    ags.date,\n    ags.network_type,\n    ags.top_impression_percentage,\n    ags.search_top_impression_share,\n    ags.video_quartile_p100_rate,\n    ags.video_quartile_p75_rate,\n    ags.video_quartile_p50_rate,\n    ags.video_quartile_p25_rate,\n    ags.absolute_top_impression_percentage,\n    ags.content_impression_share,\n    ags.content_rank_lost_impression_share,\n    ags.cross_device_conversions,\n    ags.engagements,\n    ags.relative_ctr,\n    ags.search_absolute_top_impression_share,\n    ags.search_budget_lost_absolute_top_impression_share,\n    ags.search_budget_lost_top_impression_share,\n    ags.search_impression_share,\n    ags.search_rank_lost_absolute_top_impression_share,\n    ags.search_rank_lost_impression_share,\n    ags.search_rank_lost_top_impression_share,\n    ags.video_views,\n    s.clicks,\n    s.conversions,\n    s.cost,\n    s.impressions,\n    s.interactions,\n    s.view_through_conversions,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_cross_device_stats`\n    ags\n    LEFT JOIN ad_group_stats s\n    ON ags.campaign_id = s.campaign_id\n    AND ags.ad_group_id = s.ad_group_id\n    AND ags.date = s.date", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.current_inventory": {"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "current_inventory", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/current_inventory.sql", "original_file_path": "models/marts/online_sales/current_inventory.sql", "unique_id": "model.sado_analytics_services.current_inventory", "fqn": ["sado_analytics_services", "marts", "online_sales", "current_inventory"], "alias": "current_inventory", "checksum": {"name": "sha256", "checksum": "f3e9f4bf68ae3b21b61e8582dff203154bf4f5d44f9a9de6947bfd7037ec023a"}, "config": {"enabled": true, "alias": null, "schema": "online_sales", "database": null, "tags": ["table", "fact", "nhanhvn"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "nhanhvn"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "available": {"name": "available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "remain": {"name": "remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping": {"name": "shipping", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "damaged": {"name": "damaged", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "holding": {"name": "holding", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty": {"name": "warranty", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty_holding": {"name": "warranty_holding", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/current_inventory.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "online_sales", "tags": ["table", "fact", "nhanhvn"]}, "created_at": 1703652762.0803483, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`current_inventory`", "raw_code": "{{\n  config(\n    tags=['table', 'fact','nhanhvn']\n  )\n}}\n\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY product_id,\n                depot_name\n                ORDER BY\n                    updated_at DESC\n            ) AS rn_\n        FROM\n            {{ ref('stg_nhanhvn__inventories') }}\n           where 1=1  and depot_name = 'KHO ONLINE H\u00c0 N\u1ed8I'\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [{"name": "stg_nhanhvn__inventories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_nhanhvn__inventories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/online_sales/current_inventory.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY product_id,\n                depot_name\n                ORDER BY\n                    updated_at DESC\n            ) AS rn_\n        FROM\n            `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__inventories`\n           where 1=1  and depot_name = 'KHO ONLINE H\u00c0 N\u1ed8I'\n    )\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.orders_items": {"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "orders_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/orders_items.sql", "original_file_path": "models/marts/online_sales/orders_items.sql", "unique_id": "model.sado_analytics_services.orders_items", "fqn": ["sado_analytics_services", "marts", "online_sales", "orders_items"], "alias": "orders_items", "checksum": {"name": "sha256", "checksum": "6264fd1ea098c9ee915a6ba44978ac5ca190625fb14efcf7b512d941398dd976"}, "config": {"enabled": true, "alias": null, "schema": "online_sales", "database": null, "tags": ["table", "fact", "nhanhvn"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "nhanhvn"], "description": "", "columns": {"order_id": {"name": "order_id", "description": "Id \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sale_channel": {"name": "sale_channel", "description": "K\u00eanh b\u00e1n ph\u00e1t sinh \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "T\u00ean kho h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Id kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "ID ng\u01b0\u1eddi t\u1ea1o \u0111\u01a1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_source_name": {"name": "traffic_source_name", "description": "T\u00ean ngu\u1ed3n \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_type": {"name": "order_type", "description": "Lo\u1ea1i \u0111\u01a1n h\u00e0ng (Shipping | Shopping)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_status": {"name": "order_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Th\u1eddi gian t\u1ea1o \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "ID s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_name": {"name": "service_name", "description": "T\u00ean d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 b\u00e1n l\u1ebb s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_address": {"name": "ship_address", "description": "\u0110\u1ecba ch\u1ec9 giao h\u00e0ng \u0111\u1ebfn c\u1ea5p ph\u01b0\u1eddng/x\u00e3", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_discount": {"name": "item_discount", "description": "Chi\u1ebft kh\u1ea5u, theo s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_discount": {"name": "order_discount", "description": "Chi\u1ebft kh\u1ea5u, theo \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_used_points": {"name": "money_used_points", "description": "S\u1ed1 ti\u1ec1n ti\u00eau \u0111i\u1ec3m \u0111\u00e3 ti\u00eau", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_gross_amount": {"name": "item_gross_amount", "description": "Gi\u00e1 tr\u1ecb s\u1ea3n ph\u1ea9m sau chi\u1ebft kh\u1ea5u", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delivery_fee": {"name": "delivery_fee", "description": "Chi ph\u00ed cho h\u00e3ng v\u1eadn chuy\u1ec3n, bao g\u1ed3m ph\u00ed giao h\u00e0ng & ph\u00ed thu h\u1ed9", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_total": {"name": "sub_total", "description": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng sau chi\u1ebft kh\u1ea5u", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_total_lines": {"name": "order_total_lines", "description": "S\u1ed1 l\u01b0\u1ee3ng line trong \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fulfillment_time": {"name": "fulfillment_time", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/orders_items.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "online_sales", "tags": ["table", "fact", "nhanhvn"]}, "created_at": 1703652762.0785868, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`orders_items`", "raw_code": "{{\n  config(\n    tags=['table', 'fact','nhanhvn']\n  )\n}}\n\nSELECT\n    orders.order_id,\n    orders.sale_channel,\n    orders.depot_name,\n    orders.customer_id,\n    COALESCE(\n        orders.created_by_id,\n        orders.sale_id\n    ) AS created_by_id,\n    orders.traffic_source_name,\n    orders.order_type,\n    orders.order_status,\n    orders.created_date,\n    orders.product_id,\n    carriers.service_name,\n    orders.price,\n    orders.quantity,\n    orders.ship_address,\n    orders.item_discount,\n    orders.order_discount/(count(product_id) over w1) order_discount,\n    orders.money_used_points/(count(product_id) over w1) as money_used_points,\n    date_diff(orders.delivery_date, DATE(orders.created_date), DAY)/(count(product_id) over w1) AS fulfillment_time,\n    ((orders.price - orders.item_discount) * orders.quantity) AS item_gross_amount,\n    (\n        orders.ship_fee + orders.cod_fee\n    )/(count(product_id) over w1) AS delivery_fee,\n    (\n        orders.receivables + orders.money_transfer + orders.money_deposit + orders.customer_ship_fee\n    )/(count(product_id) over w1) AS sub_total,\n    (count(product_id) over w1) as order_total_lines,\nFROM\n    {{ ref('stg_nhanhvn__ordersdetails') }}\n    orders\n    LEFT JOIN {{ref('stg_nhanhvn__carriers')}} carriers\n    ON orders.carrier_id = carriers.carrier_id\n    AND orders.service_id = carriers.service_id\nWHERE\n    orders.order_status IN (\n        'M\u1edbi',\n        'Ch\u1edd x\u00e1c nh\u1eadn',\n        '\u0110ang x\u00e1c nh\u1eadn',\n        '\u0110\u00e3 x\u00e1c nh\u1eadn',\n        '\u0110\u1ed5i kho h\u00e0ng',\n        '\u0110ang \u0111\u00f3ng g\u00f3i',\n        '\u0110\u00e3 \u0111\u00f3ng g\u00f3i',\n        'Ch\u1edd thu gom',\n        '\u0110ang chuy\u1ec3n',\n        'Th\u00e0nh c\u00f4ng'\n    )\nwindow w1 as (\n    PARTITION BY orders.order_id\n)", "language": "sql", "refs": [{"name": "stg_nhanhvn__ordersdetails", "package": null, "version": null}, {"name": "stg_nhanhvn__carriers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_nhanhvn__ordersdetails", "model.sado_analytics_services.stg_nhanhvn__carriers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/online_sales/orders_items.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    orders.order_id,\n    orders.sale_channel,\n    orders.depot_name,\n    orders.customer_id,\n    COALESCE(\n        orders.created_by_id,\n        orders.sale_id\n    ) AS created_by_id,\n    orders.traffic_source_name,\n    orders.order_type,\n    orders.order_status,\n    orders.created_date,\n    orders.product_id,\n    carriers.service_name,\n    orders.price,\n    orders.quantity,\n    orders.ship_address,\n    orders.item_discount,\n    orders.order_discount/(count(product_id) over w1) order_discount,\n    orders.money_used_points/(count(product_id) over w1) as money_used_points,\n    date_diff(orders.delivery_date, DATE(orders.created_date), DAY)/(count(product_id) over w1) AS fulfillment_time,\n    ((orders.price - orders.item_discount) * orders.quantity) AS item_gross_amount,\n    (\n        orders.ship_fee + orders.cod_fee\n    )/(count(product_id) over w1) AS delivery_fee,\n    (\n        orders.receivables + orders.money_transfer + orders.money_deposit + orders.customer_ship_fee\n    )/(count(product_id) over w1) AS sub_total,\n    (count(product_id) over w1) as order_total_lines,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`\n    orders\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__carriers` carriers\n    ON orders.carrier_id = carriers.carrier_id\n    AND orders.service_id = carriers.service_id\nWHERE\n    orders.order_status IN (\n        'M\u1edbi',\n        'Ch\u1edd x\u00e1c nh\u1eadn',\n        '\u0110ang x\u00e1c nh\u1eadn',\n        '\u0110\u00e3 x\u00e1c nh\u1eadn',\n        '\u0110\u1ed5i kho h\u00e0ng',\n        '\u0110ang \u0111\u00f3ng g\u00f3i',\n        '\u0110\u00e3 \u0111\u00f3ng g\u00f3i',\n        'Ch\u1edd thu gom',\n        '\u0110ang chuy\u1ec3n',\n        'Th\u00e0nh c\u00f4ng'\n    )\nwindow w1 as (\n    PARTITION BY orders.order_id\n)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.online_inventory_balance": {"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "online_inventory_balance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/online_inventory_balance.sql", "original_file_path": "models/marts/online_sales/online_inventory_balance.sql", "unique_id": "model.sado_analytics_services.online_inventory_balance", "fqn": ["sado_analytics_services", "marts", "online_sales", "online_inventory_balance"], "alias": "online_inventory_balance", "checksum": {"name": "sha256", "checksum": "bf26ace357f5ad097927b2630ec92f106f8def2efab248e649b23b2a12efb5c6"}, "config": {"enabled": true, "alias": null, "schema": "online_sales", "database": null, "tags": ["incremental", "daily", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "concat(product_id,date)", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "nhanhvn"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_ending_remain": {"name": "daily_ending_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_beginning_remain": {"name": "daily_beginning_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_ending_available": {"name": "daily_ending_available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_beginning_available": {"name": "daily_beginning_available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_qty_sold": {"name": "daily_qty_sold", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_average_remain": {"name": "daily_average_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_average_available": {"name": "daily_average_available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_in": {"name": "quantity_in", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_out": {"name": "quantity_out", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_out_issue": {"name": "quantity_out_issue", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_out_adjust": {"name": "quantity_out_adjust", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/online_inventory_balance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "online_sales", "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "concat(product_id,date)", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "nhanhvn"]}, "created_at": 1703652762.0883167, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`online_inventory_balance`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\n      'field': 'date', \n      'data_type': 'date', \n      'granularity': 'day'},\n    incremental_strategy = 'insert_overwrite',\n    unique_key = 'concat(product_id,date)',\n    on_schema_change = 'sync_all_columns',\n    tags=['incremental', 'daily','nhanhvn'],\n  )\n}}\n\nWITH inventory AS (\n  SELECT\n    *\n  EXCEPT(\n      daily_beginning_remain,\n      daily_beginning_available\n    ),\n    COALESCE(LAG(daily_ending_remain) over (PARTITION BY product_id\n  ORDER BY\n    DATE ASC), daily_beginning_remain) daily_beginning_remain,\n    COALESCE(LAG(daily_ending_available) over (PARTITION BY product_id\n  ORDER BY\n    DATE ASC), daily_beginning_available) daily_beginning_available,\n  FROM\n    (\n      SELECT\n        DISTINCT product_id,\n        DATE(updated_at) AS DATE,\n        FIRST_VALUE(DATE(updated_at) ignore nulls) over w2 AS first_inventory_date,\n        FIRST_VALUE(remain ignore nulls) over w1 AS daily_ending_remain,\n        FIRST_VALUE(remain ignore nulls) over w2 AS daily_beginning_remain,\n        FIRST_VALUE(available ignore nulls) over w1 AS daily_ending_available,\n        FIRST_VALUE(available ignore nulls) over w2 AS daily_beginning_available,\n      FROM\n        {{ ref('stg_nhanhvn__inventories') }}\n      WHERE\n        updated_at >= '2023-09-20'\n        AND depot_name = 'KHO ONLINE H\u00c0 N\u1ed8I' window w1 AS (\n          PARTITION BY product_id,\n          DATE(updated_at)\n          ORDER BY\n            updated_at DESC\n        ),\n        w2 AS (\n          PARTITION BY product_id,\n          DATE(updated_at)\n          ORDER BY\n            updated_at ASC\n        )\n    )\n    where daily_ending_remain is not null\n),\ncalendar AS (\n  SELECT\n    p.product_id,\n    C.date,\n  FROM\n    {{ ref('calendar') }} C\n    CROSS JOIN {{ ref('stg_nhanhvn__products') }}\n    p\n    CROSS JOIN {{ ref('stg_nhanhvn__depots') }}\n    d\n  WHERE\n    C.date <= CURRENT_DATE()\n    AND C.date >= '2023-09-20'\n),\ntransform AS (\n  SELECT\n    COALESCE(\n      inv.product_id,\n      C.product_id\n    ) AS product_id,\n    inv.date AS inv_date,\n    C.date AS c_date,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_ending_remain\n    END AS daily_ending_remain,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_beginning_remain\n    END AS daily_beginning_remain,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_ending_available\n    END AS daily_ending_available,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_beginning_available\n    END AS daily_beginning_available,\n  FROM\n    calendar C\n    LEFT JOIN inventory inv\n    ON C.product_id = inv.product_id\n    AND C.date = inv.date\n    and c.date >= inv.first_inventory_date\n),\ndaily_inventory AS (\n  SELECT\n    DISTINCT product_id,\n    c_date AS DATE,\n    COALESCE(\n      daily_ending_remain,\n      FIRST_VALUE(\n        daily_ending_remain ignore nulls\n      ) over w1\n    ) AS daily_ending_remain,\n    COALESCE(\n      daily_beginning_remain,\n      FIRST_VALUE(\n        daily_ending_remain ignore nulls\n      ) over w1\n    ) AS daily_beginning_remain,\n    COALESCE(\n      daily_ending_available,\n      FIRST_VALUE(\n        daily_ending_available ignore nulls\n      ) over w1\n    ) AS daily_ending_available,\n    COALESCE(\n      daily_beginning_available,\n      FIRST_VALUE(\n        daily_ending_available ignore nulls\n      ) over w1\n    ) AS daily_beginning_available,\n  FROM\n    transform\n  WHERE\n    1 = 1 \n    window w1 AS (\n      PARTITION BY product_id\n      ORDER BY c_date DESC rows BETWEEN CURRENT ROW\n        AND unbounded following\n    )\n),\ndaily_sales AS (\n  SELECT\n    product_id,\n    DATE(created_date) AS DATE,\n    SUM(quantity) AS daily_qty_sold\n  FROM\n    {{ ref('orders_items') }}\n    group by 1,2\n),\ndaily_bills as (\n  select \n  product_id,\n  date(bill_date) bill_date,\n  sum(case when bill_type = 'Nh\u1eadp kho' then quantity end) quantity_in,\n  sum(case when bill_type = 'Xu\u1ea5t kho' then quantity end) quantity_out,\n  sum(case when bill_type = 'Xu\u1ea5t kho' and bill_mode = 'Giao h\u00e0ng' then quantity end) quantity_out_issue,\n  sum(case when bill_type = 'Xu\u1ea5t kho' and bill_mode <> 'Giao h\u00e0ng' then quantity end) quantity_out_adjust,\n  from {{ref('stg_nhanhvn__bills')}}\n  where bill_date >='2023-09-20'\n      group by 1,2\n)\nSELECT\n  inv.*,\n  COALESCE(\n    s.daily_qty_sold,\n    0\n  ) daily_qty_sold,\n  (\n    inv.daily_ending_remain + inv.daily_beginning_remain\n  ) / 2 AS daily_average_remain,\n  (\n    inv.daily_ending_available + inv.daily_beginning_available\n  ) / 2 AS daily_average_available,\n  COALESCE(b.quantity_in,0) quantity_in,\n  COALESCE(b.quantity_out,0) quantity_out,\n  COALESCE(b.quantity_out_issue,0) quantity_out_issue,\n  COALESCE(b.quantity_out_adjust,0) quantity_out_adjust,\nFROM\n  daily_inventory inv\n  LEFT JOIN daily_sales s\n  ON inv.product_id = s.product_id\n  AND inv.date = s.date\n  left join daily_bills b on inv.product_id = b.product_id and inv.date = b.bill_date", "language": "sql", "refs": [{"name": "stg_nhanhvn__inventories", "package": null, "version": null}, {"name": "calendar", "package": null, "version": null}, {"name": "stg_nhanhvn__products", "package": null, "version": null}, {"name": "stg_nhanhvn__depots", "package": null, "version": null}, {"name": "orders_items", "package": null, "version": null}, {"name": "stg_nhanhvn__bills", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_nhanhvn__inventories", "model.sado_analytics_services.calendar", "model.sado_analytics_services.stg_nhanhvn__products", "model.sado_analytics_services.stg_nhanhvn__depots", "model.sado_analytics_services.orders_items", "model.sado_analytics_services.stg_nhanhvn__bills"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/online_sales/online_inventory_balance.sql", "compiled": true, "compiled_code": "\n\nWITH inventory AS (\n  SELECT\n    *\n  EXCEPT(\n      daily_beginning_remain,\n      daily_beginning_available\n    ),\n    COALESCE(LAG(daily_ending_remain) over (PARTITION BY product_id\n  ORDER BY\n    DATE ASC), daily_beginning_remain) daily_beginning_remain,\n    COALESCE(LAG(daily_ending_available) over (PARTITION BY product_id\n  ORDER BY\n    DATE ASC), daily_beginning_available) daily_beginning_available,\n  FROM\n    (\n      SELECT\n        DISTINCT product_id,\n        DATE(updated_at) AS DATE,\n        FIRST_VALUE(DATE(updated_at) ignore nulls) over w2 AS first_inventory_date,\n        FIRST_VALUE(remain ignore nulls) over w1 AS daily_ending_remain,\n        FIRST_VALUE(remain ignore nulls) over w2 AS daily_beginning_remain,\n        FIRST_VALUE(available ignore nulls) over w1 AS daily_ending_available,\n        FIRST_VALUE(available ignore nulls) over w2 AS daily_beginning_available,\n      FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__inventories`\n      WHERE\n        updated_at >= '2023-09-20'\n        AND depot_name = 'KHO ONLINE H\u00c0 N\u1ed8I' window w1 AS (\n          PARTITION BY product_id,\n          DATE(updated_at)\n          ORDER BY\n            updated_at DESC\n        ),\n        w2 AS (\n          PARTITION BY product_id,\n          DATE(updated_at)\n          ORDER BY\n            updated_at ASC\n        )\n    )\n    where daily_ending_remain is not null\n),\ncalendar AS (\n  SELECT\n    p.product_id,\n    C.date,\n  FROM\n    `agile-scheme-394814`.`dbt_prod`.`calendar` C\n    CROSS JOIN `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__products`\n    p\n    CROSS JOIN `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__depots`\n    d\n  WHERE\n    C.date <= CURRENT_DATE()\n    AND C.date >= '2023-09-20'\n),\ntransform AS (\n  SELECT\n    COALESCE(\n      inv.product_id,\n      C.product_id\n    ) AS product_id,\n    inv.date AS inv_date,\n    C.date AS c_date,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_ending_remain\n    END AS daily_ending_remain,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_beginning_remain\n    END AS daily_beginning_remain,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_ending_available\n    END AS daily_ending_available,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_beginning_available\n    END AS daily_beginning_available,\n  FROM\n    calendar C\n    LEFT JOIN inventory inv\n    ON C.product_id = inv.product_id\n    AND C.date = inv.date\n    and c.date >= inv.first_inventory_date\n),\ndaily_inventory AS (\n  SELECT\n    DISTINCT product_id,\n    c_date AS DATE,\n    COALESCE(\n      daily_ending_remain,\n      FIRST_VALUE(\n        daily_ending_remain ignore nulls\n      ) over w1\n    ) AS daily_ending_remain,\n    COALESCE(\n      daily_beginning_remain,\n      FIRST_VALUE(\n        daily_ending_remain ignore nulls\n      ) over w1\n    ) AS daily_beginning_remain,\n    COALESCE(\n      daily_ending_available,\n      FIRST_VALUE(\n        daily_ending_available ignore nulls\n      ) over w1\n    ) AS daily_ending_available,\n    COALESCE(\n      daily_beginning_available,\n      FIRST_VALUE(\n        daily_ending_available ignore nulls\n      ) over w1\n    ) AS daily_beginning_available,\n  FROM\n    transform\n  WHERE\n    1 = 1 \n    window w1 AS (\n      PARTITION BY product_id\n      ORDER BY c_date DESC rows BETWEEN CURRENT ROW\n        AND unbounded following\n    )\n),\ndaily_sales AS (\n  SELECT\n    product_id,\n    DATE(created_date) AS DATE,\n    SUM(quantity) AS daily_qty_sold\n  FROM\n    `agile-scheme-394814`.`dbt_prod_online_sales`.`orders_items`\n    group by 1,2\n),\ndaily_bills as (\n  select \n  product_id,\n  date(bill_date) bill_date,\n  sum(case when bill_type = 'Nh\u1eadp kho' then quantity end) quantity_in,\n  sum(case when bill_type = 'Xu\u1ea5t kho' then quantity end) quantity_out,\n  sum(case when bill_type = 'Xu\u1ea5t kho' and bill_mode = 'Giao h\u00e0ng' then quantity end) quantity_out_issue,\n  sum(case when bill_type = 'Xu\u1ea5t kho' and bill_mode <> 'Giao h\u00e0ng' then quantity end) quantity_out_adjust,\n  from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__bills`\n  where bill_date >='2023-09-20'\n      group by 1,2\n)\nSELECT\n  inv.*,\n  COALESCE(\n    s.daily_qty_sold,\n    0\n  ) daily_qty_sold,\n  (\n    inv.daily_ending_remain + inv.daily_beginning_remain\n  ) / 2 AS daily_average_remain,\n  (\n    inv.daily_ending_available + inv.daily_beginning_available\n  ) / 2 AS daily_average_available,\n  COALESCE(b.quantity_in,0) quantity_in,\n  COALESCE(b.quantity_out,0) quantity_out,\n  COALESCE(b.quantity_out_issue,0) quantity_out_issue,\n  COALESCE(b.quantity_out_adjust,0) quantity_out_adjust,\nFROM\n  daily_inventory inv\n  LEFT JOIN daily_sales s\n  ON inv.product_id = s.product_id\n  AND inv.date = s.date\n  left join daily_bills b on inv.product_id = b.product_id and inv.date = b.bill_date", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.online_balance": {"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "online_balance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/online_balance.sql", "original_file_path": "models/marts/online_sales/online_balance.sql", "unique_id": "model.sado_analytics_services.online_balance", "fqn": ["sado_analytics_services", "marts", "online_sales", "online_balance"], "alias": "online_balance", "checksum": {"name": "sha256", "checksum": "3a9523580f6789d34a6b69c6521a76c59bde1894a6be3e00c1cd3654e7046622"}, "config": {"enabled": true, "alias": null, "schema": "online_sales", "database": null, "tags": ["table", "fact", "nhanhvn"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "nhanhvn"], "description": "", "columns": {"bill_id": {"name": "bill_id", "description": "M\u00e3 ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_date": {"name": "bill_date", "description": "Ng\u00e0y ho\u00e1 \u0111\u01a1n", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Th\u1eddi gian t\u1ea1o \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_type": {"name": "bill_type", "description": "Lo\u1ea1i ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho: Xu\u1ea5t kho | Nh\u1eadp kho", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_mode": {"name": "bill_mode", "description": "Ki\u1ec3u ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id": {"name": "order_id", "description": "Id \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "T\u00ean kho h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Id kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "ID ng\u01b0\u1eddi t\u1ea1o \u0111\u01a1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "ID s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "Chi\u1ebft kh\u1ea5u", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 b\u00e1n l\u1ebb s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vat": {"name": "vat", "description": "Thu\u1ebf VAT", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_net_amount": {"name": "item_net_amount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/online_balance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "online_sales", "tags": ["table", "fact", "nhanhvn"]}, "created_at": 1703652762.0829003, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`online_balance`", "raw_code": "{{\n  config(\n    tags=['table', 'fact','nhanhvn']\n  )\n}}\nSELECT\n    bills.bill_id,\n    bills.bill_date,\n    bills.created_date,\n    bills.bill_type,\n    bills.bill_mode,\n    bills.order_id,\n    depots.depot_name,\n    bills.customer_id,\n    bills.created_by_id,\n    bills.product_id,\n    bills.discount,\n    bills.quantity,\n    bills.price,\n    bills.vat,\n    ((bills.price - bills.discount) * bills.quantity - coalesce(bills.vat,0)) AS item_net_amount,\nFROM\n    {{ ref('stg_nhanhvn__bills') }} bills\n    left join {{ref('stg_nhanhvn__depots')}} depots on bills.depot_id = depots.depot_id", "language": "sql", "refs": [{"name": "stg_nhanhvn__bills", "package": null, "version": null}, {"name": "stg_nhanhvn__depots", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_nhanhvn__bills", "model.sado_analytics_services.stg_nhanhvn__depots"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/online_sales/online_balance.sql", "compiled": true, "compiled_code": "\nSELECT\n    bills.bill_id,\n    bills.bill_date,\n    bills.created_date,\n    bills.bill_type,\n    bills.bill_mode,\n    bills.order_id,\n    depots.depot_name,\n    bills.customer_id,\n    bills.created_by_id,\n    bills.product_id,\n    bills.discount,\n    bills.quantity,\n    bills.price,\n    bills.vat,\n    ((bills.price - bills.discount) * bills.quantity - coalesce(bills.vat,0)) AS item_net_amount,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__bills` bills\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__depots` depots on bills.depot_id = depots.depot_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fsn_analysis": {"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "fsn_analysis", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/fsn_analysis.sql", "original_file_path": "models/marts/online_sales/fsn_analysis.sql", "unique_id": "model.sado_analytics_services.fsn_analysis", "fqn": ["sado_analytics_services", "marts", "online_sales", "fsn_analysis"], "alias": "fsn_analysis", "checksum": {"name": "sha256", "checksum": "8a4cc193903ad09537068d95d9dea072fdc7981a4f66b2b7e6bdefdb43b87755"}, "config": {"enabled": true, "alias": null, "schema": "online_sales", "database": null, "tags": ["incremental", "daily", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "concat(class_code,date)", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "nhanhvn"], "description": "", "columns": {"class_code": {"name": "class_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_beginning_remain": {"name": "daily_beginning_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_ending_remain": {"name": "daily_ending_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_in": {"name": "quantity_in", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_out": {"name": "quantity_out", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment": {"name": "adjustment", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "openning_balance": {"name": "openning_balance", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inventory_holding_days": {"name": "inventory_holding_days", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receive_qty": {"name": "receive_qty", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issue_qty": {"name": "issue_qty", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_stay": {"name": "avg_stay", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consumption_rate": {"name": "consumption_rate", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inventory_stay_classification": {"name": "inventory_stay_classification", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consumption_classification": {"name": "consumption_classification", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fsn_classification": {"name": "fsn_classification", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/fsn_analysis.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "online_sales", "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "concat(class_code,date)", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "nhanhvn"]}, "created_at": 1703652762.0945559, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`fsn_analysis`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = 'concat(class_code,date)',\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'daily', 'nhanhvn'],\n) }}\n\nWITH inventory AS (\n\n    SELECT\n        products.class_code,\n        balance.date,\n        SUM(\n            balance.daily_beginning_remain\n        ) daily_beginning_remain,\n        SUM(\n            balance.daily_ending_remain\n        ) daily_ending_remain,\n        SUM(\n            balance.quantity_in\n        ) quantity_in,\n        SUM(\n            balance.quantity_out_issue\n        ) quantity_out,\n        SUM(\n            balance.quantity_out_adjust\n        ) adjustment,\n    FROM\n        {{ ref('online_inventory_balance') }}\n        balance\n        LEFT JOIN dbt_dev.stg_nhanhvn__products products\n        ON balance.product_id = products.product_id\n    WHERE\n        products.class_code IS NOT NULL\n        AND balance.daily_ending_remain IS NOT NULL\n    group by 1,2\n),\naggregated_data AS (\n    SELECT\n        *,\n        FIRST_VALUE(daily_beginning_remain) over w1 AS openning_balance,\n        SUM(daily_ending_remain) over w1 AS inventory_holding_days,\n        SUM(quantity_in) over w1 AS receive_qty,\n        SUM(quantity_out) over w1 AS issue_qty,\n        ROUND(\n            safe_divide(SUM(daily_ending_remain) over w1,(SUM(quantity_in) over w1 + COALESCE(FIRST_VALUE(daily_beginning_remain) over w1, 0))),\n            2) AS avg_stay,\n            ROUND(safe_divide(SUM(quantity_out) over w1, 7), 2) AS consumption_rate\n            FROM\n                inventory window w1 AS (\n                    PARTITION BY class_code\n                    ORDER BY\n                        unix_date(DATE) RANGE BETWEEN 7 preceding\n                        AND CURRENT ROW\n                )\n        ),\n        classification_data AS (\n            SELECT\n                *,\n                SUM(avg_stay) over w1 AS cummulative_avg_stay,\n                SUM(consumption_rate) over w3 AS cummulative_consumption_rate,\n            FROM\n                aggregated_data d\n            WHERE\n                DATE >= '2023-09-25' window w1 AS (\n                    PARTITION BY DATE\n                    ORDER BY\n                        avg_stay desc RANGE BETWEEN unbounded preceding\n                        AND CURRENT ROW\n                ),\n                w2 AS (\n                    PARTITION BY DATE\n                ),\n                w3 AS (\n                    PARTITION BY DATE\n                    ORDER BY\n                        consumption_rate DESC RANGE BETWEEN unbounded preceding\n                        AND CURRENT ROW\n                )\n            ORDER BY\n                DATE,\n                consumption_rate DESC\n        ),\n        RESULT AS (\n            SELECT\n                *\n            EXCEPT(\n                    cummulative_avg_stay,\n                    cummulative_consumption_rate\n                ),\n                CASE\n                    WHEN avg_stay IS NOT NULL THEN NTILE(10) over (\n                        PARTITION BY DATE\n                        ORDER BY\n                            cummulative_avg_stay desc\n                    )\n                    ELSE 10\n                END AS avg_stay_score,\n                CASE\n                    WHEN consumption_rate IS NOT NULL THEN NTILE(10) over (\n                        PARTITION BY DATE\n                        ORDER BY\n                            cummulative_consumption_rate\n                    )\n                    ELSE 10\n                END AS consumption_rate_score,\n            FROM\n                classification_data\n                where (avg_stay is not null or consumption_rate <> 0)\n        )\n    SELECT\n        *\n    EXCEPT\n        (\n            avg_stay_score,\n            consumption_rate_score\n        ),\n        CASE\n            WHEN avg_stay_score IN (1) THEN 'F'\n            WHEN avg_stay_score IN (\n                2,\n                3\n            ) THEN 'S'\n            ELSE 'N'\n        END AS inventory_stay_classification,\n        CASE\n            WHEN consumption_rate_score IN (1) THEN 'F'\n            WHEN consumption_rate_score IN (\n                2,\n                3\n            ) THEN 'S'\n            ELSE 'N'\n        END AS consumption_classification,\n        CASE NTILE(3) over (PARTITION BY DATE\n    ORDER BY\n        (avg_stay_score + consumption_rate_score) DESC)\n        WHEN 3 THEN 'F'\n        WHEN 2 THEN 'S'\n        ELSE 'N'END AS fsn_classification\n    FROM\n        RESULT", "language": "sql", "refs": [{"name": "online_inventory_balance", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.online_inventory_balance"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/online_sales/fsn_analysis.sql", "compiled": true, "compiled_code": "\n\nWITH inventory AS (\n\n    SELECT\n        products.class_code,\n        balance.date,\n        SUM(\n            balance.daily_beginning_remain\n        ) daily_beginning_remain,\n        SUM(\n            balance.daily_ending_remain\n        ) daily_ending_remain,\n        SUM(\n            balance.quantity_in\n        ) quantity_in,\n        SUM(\n            balance.quantity_out_issue\n        ) quantity_out,\n        SUM(\n            balance.quantity_out_adjust\n        ) adjustment,\n    FROM\n        `agile-scheme-394814`.`dbt_prod_online_sales`.`online_inventory_balance`\n        balance\n        LEFT JOIN dbt_dev.stg_nhanhvn__products products\n        ON balance.product_id = products.product_id\n    WHERE\n        products.class_code IS NOT NULL\n        AND balance.daily_ending_remain IS NOT NULL\n    group by 1,2\n),\naggregated_data AS (\n    SELECT\n        *,\n        FIRST_VALUE(daily_beginning_remain) over w1 AS openning_balance,\n        SUM(daily_ending_remain) over w1 AS inventory_holding_days,\n        SUM(quantity_in) over w1 AS receive_qty,\n        SUM(quantity_out) over w1 AS issue_qty,\n        ROUND(\n            safe_divide(SUM(daily_ending_remain) over w1,(SUM(quantity_in) over w1 + COALESCE(FIRST_VALUE(daily_beginning_remain) over w1, 0))),\n            2) AS avg_stay,\n            ROUND(safe_divide(SUM(quantity_out) over w1, 7), 2) AS consumption_rate\n            FROM\n                inventory window w1 AS (\n                    PARTITION BY class_code\n                    ORDER BY\n                        unix_date(DATE) RANGE BETWEEN 7 preceding\n                        AND CURRENT ROW\n                )\n        ),\n        classification_data AS (\n            SELECT\n                *,\n                SUM(avg_stay) over w1 AS cummulative_avg_stay,\n                SUM(consumption_rate) over w3 AS cummulative_consumption_rate,\n            FROM\n                aggregated_data d\n            WHERE\n                DATE >= '2023-09-25' window w1 AS (\n                    PARTITION BY DATE\n                    ORDER BY\n                        avg_stay desc RANGE BETWEEN unbounded preceding\n                        AND CURRENT ROW\n                ),\n                w2 AS (\n                    PARTITION BY DATE\n                ),\n                w3 AS (\n                    PARTITION BY DATE\n                    ORDER BY\n                        consumption_rate DESC RANGE BETWEEN unbounded preceding\n                        AND CURRENT ROW\n                )\n            ORDER BY\n                DATE,\n                consumption_rate DESC\n        ),\n        RESULT AS (\n            SELECT\n                *\n            EXCEPT(\n                    cummulative_avg_stay,\n                    cummulative_consumption_rate\n                ),\n                CASE\n                    WHEN avg_stay IS NOT NULL THEN NTILE(10) over (\n                        PARTITION BY DATE\n                        ORDER BY\n                            cummulative_avg_stay desc\n                    )\n                    ELSE 10\n                END AS avg_stay_score,\n                CASE\n                    WHEN consumption_rate IS NOT NULL THEN NTILE(10) over (\n                        PARTITION BY DATE\n                        ORDER BY\n                            cummulative_consumption_rate\n                    )\n                    ELSE 10\n                END AS consumption_rate_score,\n            FROM\n                classification_data\n                where (avg_stay is not null or consumption_rate <> 0)\n        )\n    SELECT\n        *\n    EXCEPT\n        (\n            avg_stay_score,\n            consumption_rate_score\n        ),\n        CASE\n            WHEN avg_stay_score IN (1) THEN 'F'\n            WHEN avg_stay_score IN (\n                2,\n                3\n            ) THEN 'S'\n            ELSE 'N'\n        END AS inventory_stay_classification,\n        CASE\n            WHEN consumption_rate_score IN (1) THEN 'F'\n            WHEN consumption_rate_score IN (\n                2,\n                3\n            ) THEN 'S'\n            ELSE 'N'\n        END AS consumption_classification,\n        CASE NTILE(3) over (PARTITION BY DATE\n    ORDER BY\n        (avg_stay_score + consumption_rate_score) DESC)\n        WHEN 3 THEN 'F'\n        WHEN 2 THEN 'S'\n        ELSE 'N'END AS fsn_classification\n    FROM\n        RESULT", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "analysis.sado_analytics_services.marketing_efforts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "marketing_efforts", "resource_type": "analysis", "package_name": "sado_analytics_services", "path": "analysis/marketing_efforts.sql", "original_file_path": "analyses/marketing_efforts.sql", "unique_id": "analysis.sado_analytics_services.marketing_efforts", "fqn": ["sado_analytics_services", "analysis", "marketing_efforts"], "alias": "marketing_efforts", "checksum": {"name": "sha256", "checksum": "5d061da3dbaac78ed4e1519913b13655591547afbfe187a1929a05eac6b571d1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.532468, "relation_name": null, "raw_code": "{%set product_groups = {'winter':'H\u00e0ng \u0111\u00f4ng','summer':'H\u00e0ng h\u00e8','casual':'Quanh n\u0103m'} %}\n\nWITH revenue AS (\n    SELECT\n        DATE(transaction_date) t_date,\n        COUNT(\n            DISTINCT transaction_id\n        ) AS num_invoice,\n        SUM(subTotal) AS items_value,\n        SUM(quantity) AS items_qty,\n        AVG(price) AS avg_price,\n        AVG(discount_ratio) AS avg_discount_ratio,\n    {%for name,group in product_groups.items() %}\n        COUNT(\n            DISTINCT case when p.product_group='{{group}}' then transaction_id end\n        ) AS {{name}}_num_invoice,\n        SUM( case when p.product_group='{{group}}' then subTotal end) AS {{name}}_items_value,\n        SUM( case when p.product_group='{{group}}' then quantity end) AS {{name}}_items_qty,\n        AVG(case when p.product_group='{{group}}' then price end) AS {{name}}_avg_price,\n        AVG(case when p.product_group='{{group}}' then discount_ratio end) AS {{name}}_avg_discount_ratio,\n    {%endfor%}\n    FROM\n        {{ ref(\"revenue_items\") }}\n        r\n        LEFT JOIN {{ ref(\"stg_kiotviet__branches\") }}\n        b\n        ON r.branch_id = b.branch_id\n        left join {{ref(\"stg_kiotviet__products\")}} p on r.product_id = p.product_id\n    WHERE\n        transaction_date >= '2023-06-01'\n        AND b.branch_name LIKE '5S%'\n        AND r.transaction_type = 'invoice'\n        and r.price >0\n        and p.productline <>'NGUY\u00caN PH\u1ee4 LI\u1ec6U'\n    GROUP BY\n        1\n),\nads_spend AS (\n    SELECT\n        date_start,\n        SUM(spend) spend,\n        SUM(impressions) impressions\n    FROM\n        {{ ref(\"facebook_performance\") }}\n    WHERE\n        date_start >= '2023-06-01'\n    GROUP BY\n        1\n),\nweb_metrics AS (\n    SELECT\n        session_date,\n        direct,\n        organic_search,\n    FROM\n        (\n            SELECT\n                session_date,\n                channel_grouping,\n                COUNT(\n                    DISTINCT session_id\n                ) num_sessions,\n                from {{ ref(\"analytics_sessions\") }}\n            GROUP BY\n                1,\n                2\n        ) \n        pivot(\n            sum(num_sessions) for channel_grouping IN (\n                \"Direct\" AS direct, \n                \"Organic Search\" AS organic_search\n        )\n)\n),\nsms as (\n    select \n        * \n    from {{ref(\"sms__by__day\")}}\n)\n\n\n\nSELECT\n    r.*,\n    ads.* EXCEPT(date_start),\n    web.* EXCEPT(session_date),\n    sms.* except(sent_date),\nFROM\n    revenue r\n    LEFT JOIN ads_spend ads\n    ON r.t_date = ads.date_start\n    LEFT JOIN web_metrics web\n    ON r.t_date = web.session_date\n    left join sms\n    on r.t_date = sms.sent_date", "language": "sql", "refs": [{"name": "revenue_items", "package": null, "version": null}, {"name": "stg_kiotviet__branches", "package": null, "version": null}, {"name": "stg_kiotviet__products", "package": null, "version": null}, {"name": "facebook_performance", "package": null, "version": null}, {"name": "analytics_sessions", "package": null, "version": null}, {"name": "sms__by__day", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.revenue_items", "model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_kiotviet__products", "model.sado_analytics_services.facebook_performance", "model.sado_analytics_services.analytics_sessions", "model.sado_analytics_services.sms__by__day"]}, "compiled_path": "target/compiled/sado_analytics_services/analyses/marketing_efforts.sql", "compiled": true, "compiled_code": "\n\nWITH revenue AS (\n    SELECT\n        DATE(transaction_date) t_date,\n        COUNT(\n            DISTINCT transaction_id\n        ) AS num_invoice,\n        SUM(subTotal) AS items_value,\n        SUM(quantity) AS items_qty,\n        AVG(price) AS avg_price,\n        AVG(discount_ratio) AS avg_discount_ratio,\n    \n        COUNT(\n            DISTINCT case when p.product_group='H\u00e0ng \u0111\u00f4ng' then transaction_id end\n        ) AS winter_num_invoice,\n        SUM( case when p.product_group='H\u00e0ng \u0111\u00f4ng' then subTotal end) AS winter_items_value,\n        SUM( case when p.product_group='H\u00e0ng \u0111\u00f4ng' then quantity end) AS winter_items_qty,\n        AVG(case when p.product_group='H\u00e0ng \u0111\u00f4ng' then price end) AS winter_avg_price,\n        AVG(case when p.product_group='H\u00e0ng \u0111\u00f4ng' then discount_ratio end) AS winter_avg_discount_ratio,\n    \n        COUNT(\n            DISTINCT case when p.product_group='H\u00e0ng h\u00e8' then transaction_id end\n        ) AS summer_num_invoice,\n        SUM( case when p.product_group='H\u00e0ng h\u00e8' then subTotal end) AS summer_items_value,\n        SUM( case when p.product_group='H\u00e0ng h\u00e8' then quantity end) AS summer_items_qty,\n        AVG(case when p.product_group='H\u00e0ng h\u00e8' then price end) AS summer_avg_price,\n        AVG(case when p.product_group='H\u00e0ng h\u00e8' then discount_ratio end) AS summer_avg_discount_ratio,\n    \n        COUNT(\n            DISTINCT case when p.product_group='Quanh n\u0103m' then transaction_id end\n        ) AS casual_num_invoice,\n        SUM( case when p.product_group='Quanh n\u0103m' then subTotal end) AS casual_items_value,\n        SUM( case when p.product_group='Quanh n\u0103m' then quantity end) AS casual_items_qty,\n        AVG(case when p.product_group='Quanh n\u0103m' then price end) AS casual_avg_price,\n        AVG(case when p.product_group='Quanh n\u0103m' then discount_ratio end) AS casual_avg_discount_ratio,\n    \n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`revenue_items`\n        r\n        LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`\n        b\n        ON r.branch_id = b.branch_id\n        left join `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products` p on r.product_id = p.product_id\n    WHERE\n        transaction_date >= '2023-06-01'\n        AND b.branch_name LIKE '5S%'\n        AND r.transaction_type = 'invoice'\n        and r.price >0\n        and p.productline <>'NGUY\u00caN PH\u1ee4 LI\u1ec6U'\n    GROUP BY\n        1\n),\nads_spend AS (\n    SELECT\n        date_start,\n        SUM(spend) spend,\n        SUM(impressions) impressions\n    FROM\n        `agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance`\n    WHERE\n        date_start >= '2023-06-01'\n    GROUP BY\n        1\n),\nweb_metrics AS (\n    SELECT\n        session_date,\n        direct,\n        organic_search,\n    FROM\n        (\n            SELECT\n                session_date,\n                channel_grouping,\n                COUNT(\n                    DISTINCT session_id\n                ) num_sessions,\n                from `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\n            GROUP BY\n                1,\n                2\n        ) \n        pivot(\n            sum(num_sessions) for channel_grouping IN (\n                \"Direct\" AS direct, \n                \"Organic Search\" AS organic_search\n        )\n)\n),\nsms as (\n    select \n        * \n    from `agile-scheme-394814`.`dbt_prod_marketing`.`sms__by__day`\n)\n\n\n\nSELECT\n    r.*,\n    ads.* EXCEPT(date_start),\n    web.* EXCEPT(session_date),\n    sms.* except(sent_date),\nFROM\n    revenue r\n    LEFT JOIN ads_spend ads\n    ON r.t_date = ads.date_start\n    LEFT JOIN web_metrics web\n    ON r.t_date = web.session_date\n    left join sms\n    on r.t_date = sms.sent_date", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}}, "test.sado_analytics_services.not_null_int_analytics__events_format_event_id.64f62bf66d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_analytics__events_format')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_int_analytics__events_format_event_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_int_analytics__events_format_event_id.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.yml", "unique_id": "test.sado_analytics_services.not_null_int_analytics__events_format_event_id.64f62bf66d", "fqn": ["sado_analytics_services", "intermediate", "marketing", "not_null_int_analytics__events_format_event_id"], "alias": "not_null_int_analytics__events_format_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.8411484, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.yml/not_null_int_analytics__events_format_event_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_analytics__events_format", "attached_node": "model.sado_analytics_services.int_analytics__events_format"}, "test.sado_analytics_services.unique_int_analytics__events_format_event_id.62a57791c8": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('int_analytics__events_format')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_int_analytics__events_format_event_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_int_analytics__events_format_event_id.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.yml", "unique_id": "test.sado_analytics_services.unique_int_analytics__events_format_event_id.62a57791c8", "fqn": ["sado_analytics_services", "intermediate", "marketing", "unique_int_analytics__events_format_event_id"], "alias": "unique_int_analytics__events_format_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.844028, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.yml/unique_int_analytics__events_format_event_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select event_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\n  where event_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_id", "file_key_name": "models.int_analytics__events_format", "attached_node": "model.sado_analytics_services.int_analytics__events_format"}, "test.sado_analytics_services.not_null_int_analytics__events_format_event_date.3e5c24fe51": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_date", "model": "{{ get_where_subquery(ref('int_analytics__events_format')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_int_analytics__events_format_event_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_int_analytics__events_format_event_date.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.yml", "unique_id": "test.sado_analytics_services.not_null_int_analytics__events_format_event_date.3e5c24fe51", "fqn": ["sado_analytics_services", "intermediate", "marketing", "not_null_int_analytics__events_format_event_date"], "alias": "not_null_int_analytics__events_format_event_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.8466492, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.yml/not_null_int_analytics__events_format_event_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_date\nfrom `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\nwhere event_date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_date", "file_key_name": "models.int_analytics__events_format", "attached_node": "model.sado_analytics_services.int_analytics__events_format"}, "test.sado_analytics_services.not_null_int_analytics__events_format_event_timestamp.6fa25d84a3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_timestamp", "model": "{{ get_where_subquery(ref('int_analytics__events_format')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_int_analytics__events_format_event_timestamp", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_int_analytics__events_format_event_timestamp.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.yml", "unique_id": "test.sado_analytics_services.not_null_int_analytics__events_format_event_timestamp.6fa25d84a3", "fqn": ["sado_analytics_services", "intermediate", "marketing", "not_null_int_analytics__events_format_event_timestamp"], "alias": "not_null_int_analytics__events_format_event_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.8492153, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.yml/not_null_int_analytics__events_format_event_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_timestamp\nfrom `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\nwhere event_timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_timestamp", "file_key_name": "models.int_analytics__events_format", "attached_node": "model.sado_analytics_services.int_analytics__events_format"}, "test.sado_analytics_services.not_null_int_analytics__events_format_client_id.b145f5263a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "client_id", "model": "{{ get_where_subquery(ref('int_analytics__events_format')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_int_analytics__events_format_client_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_int_analytics__events_format_client_id.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.yml", "unique_id": "test.sado_analytics_services.not_null_int_analytics__events_format_client_id.b145f5263a", "fqn": ["sado_analytics_services", "intermediate", "marketing", "not_null_int_analytics__events_format_client_id"], "alias": "not_null_int_analytics__events_format_client_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.8520217, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.yml/not_null_int_analytics__events_format_client_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect client_id\nfrom `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\nwhere client_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_id", "file_key_name": "models.int_analytics__events_format", "attached_node": "model.sado_analytics_services.int_analytics__events_format"}, "test.sado_analytics_services.not_null_int_analytics__events_format_event_name.10ddcf6861": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_name", "model": "{{ get_where_subquery(ref('int_analytics__events_format')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_int_analytics__events_format_event_name", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_int_analytics__events_format_event_name.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.yml", "unique_id": "test.sado_analytics_services.not_null_int_analytics__events_format_event_name.10ddcf6861", "fqn": ["sado_analytics_services", "intermediate", "marketing", "not_null_int_analytics__events_format_event_name"], "alias": "not_null_int_analytics__events_format_event_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.8545341, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.yml/not_null_int_analytics__events_format_event_name.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\nwhere event_name is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_name", "file_key_name": "models.int_analytics__events_format", "attached_node": "model.sado_analytics_services.int_analytics__events_format"}, "test.sado_analytics_services.accepted_values_int_analytics__events_format_device_type__desktop__mobile__tablet__smart_tv.131daf94cb": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["desktop", "mobile", "tablet", "smart tv"], "column_name": "device_type", "model": "{{ get_where_subquery(ref('int_analytics__events_format')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "accepted_values_int_analytics__events_format_device_type__desktop__mobile__tablet__smart_tv", "resource_type": "test", "package_name": "sado_analytics_services", "path": "accepted_values_int_analytics__4c65438b82d7820749db8713642281d5.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.yml", "unique_id": "test.sado_analytics_services.accepted_values_int_analytics__events_format_device_type__desktop__mobile__tablet__smart_tv.131daf94cb", "fqn": ["sado_analytics_services", "intermediate", "marketing", "accepted_values_int_analytics__events_format_device_type__desktop__mobile__tablet__smart_tv"], "alias": "accepted_values_int_analytics__4c65438b82d7820749db8713642281d5", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_int_analytics__4c65438b82d7820749db8713642281d5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_int_analytics__4c65438b82d7820749db8713642281d5"}, "created_at": 1703652760.8570936, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_int_analytics__4c65438b82d7820749db8713642281d5\") }}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.yml/accepted_values_int_analytics__4c65438b82d7820749db8713642281d5.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        device_type as value_field,\n        count(*) as n_records\n\n    from `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\n    group by device_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'desktop','mobile','tablet','smart tv'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "device_type", "file_key_name": "models.int_analytics__events_format", "attached_node": "model.sado_analytics_services.int_analytics__events_format"}, "test.sado_analytics_services.not_null_int_analytics__events_format_session_id.3834dbf6d6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "session_id", "model": "{{ get_where_subquery(ref('int_analytics__events_format')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_int_analytics__events_format_session_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_int_analytics__events_format_session_id.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.yml", "unique_id": "test.sado_analytics_services.not_null_int_analytics__events_format_session_id.3834dbf6d6", "fqn": ["sado_analytics_services", "intermediate", "marketing", "not_null_int_analytics__events_format_session_id"], "alias": "not_null_int_analytics__events_format_session_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.8741753, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.yml/not_null_int_analytics__events_format_session_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_id\nfrom `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\nwhere session_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_id", "file_key_name": "models.int_analytics__events_format", "attached_node": "model.sado_analytics_services.int_analytics__events_format"}, "test.sado_analytics_services.accepted_values_int_analytics__events_format_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.f65db99fd2": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["Paid Social", "Organic Social", "Direct", "Organic Search", "Referral", "Paid Search", "Display", "Unassigned"], "column_name": "channel_grouping", "model": "{{ get_where_subquery(ref('int_analytics__events_format')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "accepted_values_int_analytics__events_format_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned", "resource_type": "test", "package_name": "sado_analytics_services", "path": "accepted_values_int_analytics__d9d8f3f778396d6194a068d476510730.sql", "original_file_path": "models/intermediate/marketing/int_analytics__events_format.yml", "unique_id": "test.sado_analytics_services.accepted_values_int_analytics__events_format_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.f65db99fd2", "fqn": ["sado_analytics_services", "intermediate", "marketing", "accepted_values_int_analytics__events_format_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned"], "alias": "accepted_values_int_analytics__d9d8f3f778396d6194a068d476510730", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_int_analytics__d9d8f3f778396d6194a068d476510730", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_int_analytics__d9d8f3f778396d6194a068d476510730"}, "created_at": 1703652760.8770506, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_int_analytics__d9d8f3f778396d6194a068d476510730\") }}", "language": "sql", "refs": [{"name": "int_analytics__events_format", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.int_analytics__events_format"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_analytics__events_format.yml/accepted_values_int_analytics__d9d8f3f778396d6194a068d476510730.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        channel_grouping as value_field,\n        count(*) as n_records\n\n    from `agile-scheme-394814`.`dbt_prod`.`int_analytics__events_format`\n    group by channel_grouping\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Paid Social','Organic Social','Direct','Organic Search','Referral','Paid Search','Display','Unassigned'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "channel_grouping", "file_key_name": "models.int_analytics__events_format", "attached_node": "model.sado_analytics_services.int_analytics__events_format"}, "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('calendar')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_calendar_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_calendar_date.sql", "original_file_path": "models/ultilities/calendar.yml", "unique_id": "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d", "fqn": ["sado_analytics_services", "ultilities", "not_null_calendar_date"], "alias": "not_null_calendar_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.906993, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "calendar", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.calendar"]}, "compiled_path": "target/compiled/sado_analytics_services/models/ultilities/calendar.yml/not_null_calendar_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `agile-scheme-394814`.`dbt_prod`.`calendar`\nwhere date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.calendar", "attached_node": "model.sado_analytics_services.calendar"}, "test.sado_analytics_services.unique_calendar_date.b4cbc0583a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('calendar')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_calendar_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_calendar_date.sql", "original_file_path": "models/ultilities/calendar.yml", "unique_id": "test.sado_analytics_services.unique_calendar_date.b4cbc0583a", "fqn": ["sado_analytics_services", "ultilities", "unique_calendar_date"], "alias": "unique_calendar_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9095454, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "calendar", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.calendar"]}, "compiled_path": "target/compiled/sado_analytics_services/models/ultilities/calendar.yml/unique_calendar_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select date as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`calendar`\n  where date is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.calendar", "attached_node": "model.sado_analytics_services.calendar"}, "test.sado_analytics_services.not_null_stg_analytics__events_param_id.eba77a9c62": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "param_id", "model": "{{ get_where_subquery(ref('stg_analytics__events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_analytics__events_param_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_analytics__events_param_id.sql", "original_file_path": "models/staging/googleAnalytics/stg_analytics__events.yml", "unique_id": "test.sado_analytics_services.not_null_stg_analytics__events_param_id.eba77a9c62", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "not_null_stg_analytics__events_param_id"], "alias": "not_null_stg_analytics__events_param_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9377716, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/stg_analytics__events.yml/not_null_stg_analytics__events_param_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect param_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\nwhere param_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "param_id", "file_key_name": "models.stg_analytics__events", "attached_node": "model.sado_analytics_services.stg_analytics__events"}, "test.sado_analytics_services.not_null_stg_analytics__events_event_id.bf1e285477": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_analytics__events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_analytics__events_event_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_analytics__events_event_id.sql", "original_file_path": "models/staging/googleAnalytics/stg_analytics__events.yml", "unique_id": "test.sado_analytics_services.not_null_stg_analytics__events_event_id.bf1e285477", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "not_null_stg_analytics__events_event_id"], "alias": "not_null_stg_analytics__events_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9403346, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/stg_analytics__events.yml/not_null_stg_analytics__events_event_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_id", "file_key_name": "models.stg_analytics__events", "attached_node": "model.sado_analytics_services.stg_analytics__events"}, "test.sado_analytics_services.not_null_stg_analytics__events_event_date.f0817ea4e8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_date", "model": "{{ get_where_subquery(ref('stg_analytics__events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_analytics__events_event_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_analytics__events_event_date.sql", "original_file_path": "models/staging/googleAnalytics/stg_analytics__events.yml", "unique_id": "test.sado_analytics_services.not_null_stg_analytics__events_event_date.f0817ea4e8", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "not_null_stg_analytics__events_event_date"], "alias": "not_null_stg_analytics__events_event_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.942853, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/stg_analytics__events.yml/not_null_stg_analytics__events_event_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_date\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\nwhere event_date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_date", "file_key_name": "models.stg_analytics__events", "attached_node": "model.sado_analytics_services.stg_analytics__events"}, "test.sado_analytics_services.not_null_stg_analytics__events_event_timestamp.4538d83700": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_timestamp", "model": "{{ get_where_subquery(ref('stg_analytics__events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_analytics__events_event_timestamp", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_analytics__events_event_timestamp.sql", "original_file_path": "models/staging/googleAnalytics/stg_analytics__events.yml", "unique_id": "test.sado_analytics_services.not_null_stg_analytics__events_event_timestamp.4538d83700", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "not_null_stg_analytics__events_event_timestamp"], "alias": "not_null_stg_analytics__events_event_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9456272, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/stg_analytics__events.yml/not_null_stg_analytics__events_event_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_timestamp\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\nwhere event_timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_timestamp", "file_key_name": "models.stg_analytics__events", "attached_node": "model.sado_analytics_services.stg_analytics__events"}, "test.sado_analytics_services.not_null_stg_analytics__events_client_id.4697100241": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "client_id", "model": "{{ get_where_subquery(ref('stg_analytics__events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_analytics__events_client_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_analytics__events_client_id.sql", "original_file_path": "models/staging/googleAnalytics/stg_analytics__events.yml", "unique_id": "test.sado_analytics_services.not_null_stg_analytics__events_client_id.4697100241", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "not_null_stg_analytics__events_client_id"], "alias": "not_null_stg_analytics__events_client_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9481733, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/stg_analytics__events.yml/not_null_stg_analytics__events_client_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect client_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\nwhere client_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_id", "file_key_name": "models.stg_analytics__events", "attached_node": "model.sado_analytics_services.stg_analytics__events"}, "test.sado_analytics_services.not_null_stg_analytics__events_event_name.12850a9ab6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_name", "model": "{{ get_where_subquery(ref('stg_analytics__events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_analytics__events_event_name", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_analytics__events_event_name.sql", "original_file_path": "models/staging/googleAnalytics/stg_analytics__events.yml", "unique_id": "test.sado_analytics_services.not_null_stg_analytics__events_event_name.12850a9ab6", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "not_null_stg_analytics__events_event_name"], "alias": "not_null_stg_analytics__events_event_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.950682, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/stg_analytics__events.yml/not_null_stg_analytics__events_event_name.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\nwhere event_name is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_name", "file_key_name": "models.stg_analytics__events", "attached_node": "model.sado_analytics_services.stg_analytics__events"}, "test.sado_analytics_services.accepted_values_stg_analytics__events_device_type__desktop__mobile__tablet.6d57b40868": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["desktop", "mobile", "tablet"], "column_name": "device_type", "model": "{{ get_where_subquery(ref('stg_analytics__events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "accepted_values_stg_analytics__events_device_type__desktop__mobile__tablet", "resource_type": "test", "package_name": "sado_analytics_services", "path": "accepted_values_stg_analytics__8f23087c8b24ea9be177b0f206e39d0a.sql", "original_file_path": "models/staging/googleAnalytics/stg_analytics__events.yml", "unique_id": "test.sado_analytics_services.accepted_values_stg_analytics__events_device_type__desktop__mobile__tablet.6d57b40868", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "accepted_values_stg_analytics__events_device_type__desktop__mobile__tablet"], "alias": "accepted_values_stg_analytics__8f23087c8b24ea9be177b0f206e39d0a", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_analytics__8f23087c8b24ea9be177b0f206e39d0a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_stg_analytics__8f23087c8b24ea9be177b0f206e39d0a"}, "created_at": 1703652760.953254, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_analytics__8f23087c8b24ea9be177b0f206e39d0a\") }}", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/stg_analytics__events.yml/accepted_values_stg_analytics__8f23087c8b24ea9be177b0f206e39d0a.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        device_type as value_field,\n        count(*) as n_records\n\n    from `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\n    group by device_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'desktop','mobile','tablet'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "device_type", "file_key_name": "models.stg_analytics__events", "attached_node": "model.sado_analytics_services.stg_analytics__events"}, "test.sado_analytics_services.not_null_stg_analytics__events_param_key.c5450db076": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "param_key", "model": "{{ get_where_subquery(ref('stg_analytics__events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_analytics__events_param_key", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_analytics__events_param_key.sql", "original_file_path": "models/staging/googleAnalytics/stg_analytics__events.yml", "unique_id": "test.sado_analytics_services.not_null_stg_analytics__events_param_key.c5450db076", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "not_null_stg_analytics__events_param_key"], "alias": "not_null_stg_analytics__events_param_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.959973, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_analytics__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_analytics__events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAnalytics/stg_analytics__events.yml/not_null_stg_analytics__events_param_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect param_key\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_analytics__events`\nwhere param_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "param_key", "file_key_name": "models.stg_analytics__events", "attached_node": "model.sado_analytics_services.stg_analytics__events"}, "test.sado_analytics_services.not_null_stg_caresoft__agents_id.718cd3c440": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_caresoft__agents')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__agents_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__agents_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__agents_id.718cd3c440", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__agents_id"], "alias": "not_null_stg_caresoft__agents_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.973423, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__agents"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__agents.yml/not_null_stg_caresoft__agents_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__agents`\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.stg_caresoft__agents", "attached_node": "model.sado_analytics_services.stg_caresoft__agents"}, "test.sado_analytics_services.unique_stg_caresoft__agents_id.1dc507e0f7": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_caresoft__agents')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__agents_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__agents_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__agents_id.1dc507e0f7", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__agents_id"], "alias": "unique_stg_caresoft__agents_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9761813, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__agents"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__agents.yml/unique_stg_caresoft__agents_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__agents`\n  where id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.stg_caresoft__agents", "attached_node": "model.sado_analytics_services.stg_caresoft__agents"}, "test.sado_analytics_services.unique_stg_caresoft__agents_email.90f55cfcb1": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('stg_caresoft__agents')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__agents_email", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__agents_email.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__agents_email.90f55cfcb1", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__agents_email"], "alias": "unique_stg_caresoft__agents_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9787042, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__agents"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__agents.yml/unique_stg_caresoft__agents_email.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select email as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__agents`\n  where email is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "email", "file_key_name": "models.stg_caresoft__agents", "attached_node": "model.sado_analytics_services.stg_caresoft__agents"}, "test.sado_analytics_services.not_null_stg_caresoft__agents_email.360e1d9d56": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('stg_caresoft__agents')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__agents_email", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__agents_email.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__agents_email.360e1d9d56", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__agents_email"], "alias": "not_null_stg_caresoft__agents_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9812365, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__agents"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__agents.yml/not_null_stg_caresoft__agents_email.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect email\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__agents`\nwhere email is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "email", "file_key_name": "models.stg_caresoft__agents", "attached_node": "model.sado_analytics_services.stg_caresoft__agents"}, "test.sado_analytics_services.not_null_stg_caresoft__calls_id.2fb2499c5a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_caresoft__calls')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__calls_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__calls_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__calls_id.2fb2499c5a", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__calls_id"], "alias": "not_null_stg_caresoft__calls_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9956, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__calls"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__calls.yml/not_null_stg_caresoft__calls_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__calls`\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.stg_caresoft__calls", "attached_node": "model.sado_analytics_services.stg_caresoft__calls"}, "test.sado_analytics_services.unique_stg_caresoft__calls_id.aede802cc2": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_caresoft__calls')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__calls_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__calls_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__calls_id.aede802cc2", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__calls_id"], "alias": "unique_stg_caresoft__calls_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652760.9981914, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__calls"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__calls.yml/unique_stg_caresoft__calls_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__calls`\n  where id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.stg_caresoft__calls", "attached_node": "model.sado_analytics_services.stg_caresoft__calls"}, "test.sado_analytics_services.not_null_stg_caresoft__calls_call_id.8d621fb840": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "call_id", "model": "{{ get_where_subquery(ref('stg_caresoft__calls')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__calls_call_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__calls_call_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__calls_call_id.8d621fb840", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__calls_call_id"], "alias": "not_null_stg_caresoft__calls_call_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0007384, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__calls"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__calls.yml/not_null_stg_caresoft__calls_call_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect call_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__calls`\nwhere call_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "call_id", "file_key_name": "models.stg_caresoft__calls", "attached_node": "model.sado_analytics_services.stg_caresoft__calls"}, "test.sado_analytics_services.unique_stg_caresoft__calls_call_id.62c4fd8e66": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "call_id", "model": "{{ get_where_subquery(ref('stg_caresoft__calls')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__calls_call_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__calls_call_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__calls_call_id.62c4fd8e66", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__calls_call_id"], "alias": "unique_stg_caresoft__calls_call_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0032403, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__calls"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__calls.yml/unique_stg_caresoft__calls_call_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select call_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__calls`\n  where call_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "call_id", "file_key_name": "models.stg_caresoft__calls", "attached_node": "model.sado_analytics_services.stg_caresoft__calls"}, "test.sado_analytics_services.not_null_stg_caresoft__contacts_contact_id.eb790c43e2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('stg_caresoft__contacts')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__contacts_contact_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__contacts_contact_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__contacts.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__contacts_contact_id.eb790c43e2", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__contacts_contact_id"], "alias": "not_null_stg_caresoft__contacts_contact_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0204551, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__contacts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__contacts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__contacts.yml/not_null_stg_caresoft__contacts_contact_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__contacts`\nwhere contact_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "contact_id", "file_key_name": "models.stg_caresoft__contacts", "attached_node": "model.sado_analytics_services.stg_caresoft__contacts"}, "test.sado_analytics_services.unique_stg_caresoft__contacts_contact_id.9463562ba4": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('stg_caresoft__contacts')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__contacts_contact_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__contacts_contact_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__contacts.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__contacts_contact_id.9463562ba4", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__contacts_contact_id"], "alias": "unique_stg_caresoft__contacts_contact_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0229867, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__contacts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__contacts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__contacts.yml/unique_stg_caresoft__contacts_contact_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select contact_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__contacts`\n  where contact_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "contact_id", "file_key_name": "models.stg_caresoft__contacts", "attached_node": "model.sado_analytics_services.stg_caresoft__contacts"}, "test.sado_analytics_services.not_null_stg_caresoft__tickets_ticket_id.44b9236f2a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('stg_caresoft__tickets')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__tickets_ticket_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__tickets_ticket_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__tickets.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__tickets_ticket_id.44b9236f2a", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__tickets_ticket_id"], "alias": "not_null_stg_caresoft__tickets_ticket_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0575476, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__tickets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__tickets"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__tickets.yml/not_null_stg_caresoft__tickets_ticket_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__tickets`\nwhere ticket_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "ticket_id", "file_key_name": "models.stg_caresoft__tickets", "attached_node": "model.sado_analytics_services.stg_caresoft__tickets"}, "test.sado_analytics_services.unique_stg_caresoft__tickets_ticket_id.d6716e1775": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('stg_caresoft__tickets')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__tickets_ticket_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__tickets_ticket_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__tickets.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__tickets_ticket_id.d6716e1775", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__tickets_ticket_id"], "alias": "unique_stg_caresoft__tickets_ticket_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0601642, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__tickets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__tickets"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__tickets.yml/unique_stg_caresoft__tickets_ticket_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ticket_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__tickets`\n  where ticket_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "ticket_id", "file_key_name": "models.stg_caresoft__tickets", "attached_node": "model.sado_analytics_services.stg_caresoft__tickets"}, "test.sado_analytics_services.not_null_stg_caresoft__chats_conversation_id.f2a0e81461": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "conversation_id", "model": "{{ get_where_subquery(ref('stg_caresoft__chats')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__chats_conversation_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__chats_conversation_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__chats.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__chats_conversation_id.f2a0e81461", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__chats_conversation_id"], "alias": "not_null_stg_caresoft__chats_conversation_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0726204, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__chats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__chats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__chats.yml/not_null_stg_caresoft__chats_conversation_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect conversation_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__chats`\nwhere conversation_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "conversation_id", "file_key_name": "models.stg_caresoft__chats", "attached_node": "model.sado_analytics_services.stg_caresoft__chats"}, "test.sado_analytics_services.unique_stg_caresoft__chats_conversation_id.0f9e5f32bb": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "conversation_id", "model": "{{ get_where_subquery(ref('stg_caresoft__chats')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__chats_conversation_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__chats_conversation_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__chats.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__chats_conversation_id.0f9e5f32bb", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__chats_conversation_id"], "alias": "unique_stg_caresoft__chats_conversation_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0751865, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__chats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__chats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__chats.yml/unique_stg_caresoft__chats_conversation_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select conversation_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__chats`\n  where conversation_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "conversation_id", "file_key_name": "models.stg_caresoft__chats", "attached_node": "model.sado_analytics_services.stg_caresoft__chats"}, "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_custom_field_id.7857424e18": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "custom_field_id", "model": "{{ get_where_subquery(ref('stg_caresoft__ticket_custom_fields')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__ticket_custom_fields_custom_field_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__ticket_custom_fields_custom_field_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_custom_field_id.7857424e18", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__ticket_custom_fields_custom_field_id"], "alias": "unique_stg_caresoft__ticket_custom_fields_custom_field_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0817907, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml/unique_stg_caresoft__ticket_custom_fields_custom_field_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select custom_field_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__ticket_custom_fields`\n  where custom_field_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "custom_field_id", "file_key_name": "models.stg_caresoft__ticket_custom_fields", "attached_node": "model.sado_analytics_services.stg_caresoft__ticket_custom_fields"}, "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_custom_field_id.4c14dc82f5": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "custom_field_id", "model": "{{ get_where_subquery(ref('stg_caresoft__ticket_custom_fields')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__ticket_custom_fields_custom_field_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__ticket_custom_fields_custom_field_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_custom_field_id.4c14dc82f5", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__ticket_custom_fields_custom_field_id"], "alias": "not_null_stg_caresoft__ticket_custom_fields_custom_field_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.084619, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml/not_null_stg_caresoft__ticket_custom_fields_custom_field_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect custom_field_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__ticket_custom_fields`\nwhere custom_field_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "custom_field_id", "file_key_name": "models.stg_caresoft__ticket_custom_fields", "attached_node": "model.sado_analytics_services.stg_caresoft__ticket_custom_fields"}, "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_value_id.ff7804063b": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "value_id", "model": "{{ get_where_subquery(ref('stg_caresoft__ticket_custom_fields')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__ticket_custom_fields_value_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__ticket_custom_fields_value_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_value_id.ff7804063b", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__ticket_custom_fields_value_id"], "alias": "unique_stg_caresoft__ticket_custom_fields_value_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0871303, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml/unique_stg_caresoft__ticket_custom_fields_value_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select value_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__ticket_custom_fields`\n  where value_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "value_id", "file_key_name": "models.stg_caresoft__ticket_custom_fields", "attached_node": "model.sado_analytics_services.stg_caresoft__ticket_custom_fields"}, "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_value_id.a076bcc09a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "value_id", "model": "{{ get_where_subquery(ref('stg_caresoft__ticket_custom_fields')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__ticket_custom_fields_value_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__ticket_custom_fields_value_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_value_id.a076bcc09a", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__ticket_custom_fields_value_id"], "alias": "not_null_stg_caresoft__ticket_custom_fields_value_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.0896776, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml/not_null_stg_caresoft__ticket_custom_fields_value_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect value_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_caresoft__ticket_custom_fields`\nwhere value_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "value_id", "file_key_name": "models.stg_caresoft__ticket_custom_fields", "attached_node": "model.sado_analytics_services.stg_caresoft__ticket_custom_fields"}, "test.sado_analytics_services.not_null_stg_facebookads__campaigns_big_campaign.2d48ae112a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "big_campaign", "model": "{{ get_where_subquery(ref('stg_facebookads__campaigns')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_facebookads__campaigns_big_campaign", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_facebookads__campaigns_big_campaign.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__campaigns.yml", "unique_id": "test.sado_analytics_services.not_null_stg_facebookads__campaigns_big_campaign.2d48ae112a", "fqn": ["sado_analytics_services", "staging", "facebookAds", "not_null_stg_facebookads__campaigns_big_campaign"], "alias": "not_null_stg_facebookads__campaigns_big_campaign", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.1261528, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_facebookads__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_facebookads__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__campaigns.yml/not_null_stg_facebookads__campaigns_big_campaign.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect big_campaign\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`\nwhere big_campaign is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "big_campaign", "file_key_name": "models.stg_facebookads__campaigns", "attached_node": "model.sado_analytics_services.stg_facebookads__campaigns"}, "test.sado_analytics_services.not_null_stg_facebookads__campaigns_content_group.3b8f97e6ef": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "content_group", "model": "{{ get_where_subquery(ref('stg_facebookads__campaigns')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_facebookads__campaigns_content_group", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_facebookads__campaigns_content_group.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__campaigns.yml", "unique_id": "test.sado_analytics_services.not_null_stg_facebookads__campaigns_content_group.3b8f97e6ef", "fqn": ["sado_analytics_services", "staging", "facebookAds", "not_null_stg_facebookads__campaigns_content_group"], "alias": "not_null_stg_facebookads__campaigns_content_group", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.1287363, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_facebookads__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_facebookads__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__campaigns.yml/not_null_stg_facebookads__campaigns_content_group.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect content_group\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`\nwhere content_group is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "content_group", "file_key_name": "models.stg_facebookads__campaigns", "attached_node": "model.sado_analytics_services.stg_facebookads__campaigns"}, "test.sado_analytics_services.not_null_stg_facebookads__campaigns_pic.048f4069b2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "pic", "model": "{{ get_where_subquery(ref('stg_facebookads__campaigns')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_facebookads__campaigns_pic", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_facebookads__campaigns_pic.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__campaigns.yml", "unique_id": "test.sado_analytics_services.not_null_stg_facebookads__campaigns_pic.048f4069b2", "fqn": ["sado_analytics_services", "staging", "facebookAds", "not_null_stg_facebookads__campaigns_pic"], "alias": "not_null_stg_facebookads__campaigns_pic", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.1314878, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_facebookads__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_facebookads__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__campaigns.yml/not_null_stg_facebookads__campaigns_pic.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pic\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`\nwhere pic is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "pic", "file_key_name": "models.stg_facebookads__campaigns", "attached_node": "model.sado_analytics_services.stg_facebookads__campaigns"}, "test.sado_analytics_services.not_null_stg_facebookads__campaigns_page.ce0463af60": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "page", "model": "{{ get_where_subquery(ref('stg_facebookads__campaigns')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_facebookads__campaigns_page", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_facebookads__campaigns_page.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__campaigns.yml", "unique_id": "test.sado_analytics_services.not_null_stg_facebookads__campaigns_page.ce0463af60", "fqn": ["sado_analytics_services", "staging", "facebookAds", "not_null_stg_facebookads__campaigns_page"], "alias": "not_null_stg_facebookads__campaigns_page", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.1340232, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_facebookads__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_facebookads__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__campaigns.yml/not_null_stg_facebookads__campaigns_page.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect page\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`\nwhere page is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "page", "file_key_name": "models.stg_facebookads__campaigns", "attached_node": "model.sado_analytics_services.stg_facebookads__campaigns"}, "test.sado_analytics_services.not_null_stg_facebookads__campaigns_media_type.93f27013f7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "media_type", "model": "{{ get_where_subquery(ref('stg_facebookads__campaigns')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_facebookads__campaigns_media_type", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_facebookads__campaigns_media_type.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__campaigns.yml", "unique_id": "test.sado_analytics_services.not_null_stg_facebookads__campaigns_media_type.93f27013f7", "fqn": ["sado_analytics_services", "staging", "facebookAds", "not_null_stg_facebookads__campaigns_media_type"], "alias": "not_null_stg_facebookads__campaigns_media_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.136564, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_facebookads__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_facebookads__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__campaigns.yml/not_null_stg_facebookads__campaigns_media_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect media_type\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`\nwhere media_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "media_type", "file_key_name": "models.stg_facebookads__campaigns", "attached_node": "model.sado_analytics_services.stg_facebookads__campaigns"}, "test.sado_analytics_services.not_null_stg_facebookads__campaigns_funnel.92b8a27b8c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "funnel", "model": "{{ get_where_subquery(ref('stg_facebookads__campaigns')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_facebookads__campaigns_funnel", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_facebookads__campaigns_funnel.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__campaigns.yml", "unique_id": "test.sado_analytics_services.not_null_stg_facebookads__campaigns_funnel.92b8a27b8c", "fqn": ["sado_analytics_services", "staging", "facebookAds", "not_null_stg_facebookads__campaigns_funnel"], "alias": "not_null_stg_facebookads__campaigns_funnel", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.1390626, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_facebookads__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_facebookads__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__campaigns.yml/not_null_stg_facebookads__campaigns_funnel.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funnel\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`\nwhere funnel is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "funnel", "file_key_name": "models.stg_facebookads__campaigns", "attached_node": "model.sado_analytics_services.stg_facebookads__campaigns"}, "test.sado_analytics_services.not_null_stg_facebookads__campaigns_ad_type.8abacfa863": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "ad_type", "model": "{{ get_where_subquery(ref('stg_facebookads__campaigns')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_facebookads__campaigns_ad_type", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_facebookads__campaigns_ad_type.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__campaigns.yml", "unique_id": "test.sado_analytics_services.not_null_stg_facebookads__campaigns_ad_type.8abacfa863", "fqn": ["sado_analytics_services", "staging", "facebookAds", "not_null_stg_facebookads__campaigns_ad_type"], "alias": "not_null_stg_facebookads__campaigns_ad_type", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.1415985, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_facebookads__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_facebookads__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__campaigns.yml/not_null_stg_facebookads__campaigns_ad_type.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_type\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`\nwhere ad_type is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "ad_type", "file_key_name": "models.stg_facebookads__campaigns", "attached_node": "model.sado_analytics_services.stg_facebookads__campaigns"}, "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "row_id", "model": "{{ get_where_subquery(ref('stg_googleads__campaign_stats')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_googleads__campaign_stats_row_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_googleads__campaign_stats_row_id.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaign_stats.yml", "unique_id": "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d", "fqn": ["sado_analytics_services", "staging", "googleAds", "unique_stg_googleads__campaign_stats_row_id"], "alias": "unique_stg_googleads__campaign_stats_row_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.316658, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_googleads__campaign_stats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_googleads__campaign_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaign_stats.yml/unique_stg_googleads__campaign_stats_row_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select row_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`\n  where row_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "row_id", "file_key_name": "models.stg_googleads__campaign_stats", "attached_node": "model.sado_analytics_services.stg_googleads__campaign_stats"}, "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('stg_googleads__campaign_stats')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_googleads__campaign_stats_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_googleads__campaign_stats_date.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaign_stats.yml", "unique_id": "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226", "fqn": ["sado_analytics_services", "staging", "googleAds", "not_null_stg_googleads__campaign_stats_date"], "alias": "not_null_stg_googleads__campaign_stats_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.3192928, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_googleads__campaign_stats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_googleads__campaign_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaign_stats.yml/not_null_stg_googleads__campaign_stats_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`\nwhere date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.stg_googleads__campaign_stats", "attached_node": "model.sado_analytics_services.stg_googleads__campaign_stats"}, "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "product_group", "model": "{{ get_where_subquery(ref('stg_kiotviet__products')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_kiotviet__products_product_group", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_kiotviet__products_product_group.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__products.yml", "unique_id": "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c", "fqn": ["sado_analytics_services", "staging", "kiotViet", "not_null_stg_kiotviet__products_product_group"], "alias": "not_null_stg_kiotviet__products_product_group", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.4473617, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_kiotviet__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_kiotviet__products"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__products.yml/not_null_stg_kiotviet__products_product_group.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_group\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`\nwhere product_group is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "product_group", "file_key_name": "models.stg_kiotviet__products", "attached_node": "model.sado_analytics_services.stg_kiotviet__products"}, "test.sado_analytics_services.not_null_engagements_details_engagement_id.ba4b05a1b3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('engagements_details')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_engagements_details_engagement_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_engagements_details_engagement_id.sql", "original_file_path": "models/marts/marketing/contact_center/engagements_details.yml", "unique_id": "test.sado_analytics_services.not_null_engagements_details_engagement_id.ba4b05a1b3", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "not_null_engagements_details_engagement_id"], "alias": "not_null_engagements_details_engagement_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.7648807, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "engagements_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.engagements_details"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/engagements_details.yml/not_null_engagements_details_engagement_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect engagement_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`engagements_details`\nwhere engagement_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "engagement_id", "file_key_name": "models.engagements_details", "attached_node": "model.sado_analytics_services.engagements_details"}, "test.sado_analytics_services.unique_engagements_details_engagement_id.fa02ef7234": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('engagements_details')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_engagements_details_engagement_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_engagements_details_engagement_id.sql", "original_file_path": "models/marts/marketing/contact_center/engagements_details.yml", "unique_id": "test.sado_analytics_services.unique_engagements_details_engagement_id.fa02ef7234", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "unique_engagements_details_engagement_id"], "alias": "unique_engagements_details_engagement_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.767532, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "engagements_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.engagements_details"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/engagements_details.yml/unique_engagements_details_engagement_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select engagement_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`engagements_details`\n  where engagement_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "engagement_id", "file_key_name": "models.engagements_details", "attached_node": "model.sado_analytics_services.engagements_details"}, "test.sado_analytics_services.not_null_tickets_ticket_id.6d0b33ca1c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('tickets')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_tickets_ticket_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_tickets_ticket_id.sql", "original_file_path": "models/marts/marketing/contact_center/tickets.yml", "unique_id": "test.sado_analytics_services.not_null_tickets_ticket_id.6d0b33ca1c", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "not_null_tickets_ticket_id"], "alias": "not_null_tickets_ticket_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.7824988, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "tickets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.tickets"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/tickets.yml/not_null_tickets_ticket_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`tickets`\nwhere ticket_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "ticket_id", "file_key_name": "models.tickets", "attached_node": "model.sado_analytics_services.tickets"}, "test.sado_analytics_services.unique_tickets_ticket_id.7bb6098968": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('tickets')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_tickets_ticket_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_tickets_ticket_id.sql", "original_file_path": "models/marts/marketing/contact_center/tickets.yml", "unique_id": "test.sado_analytics_services.unique_tickets_ticket_id.7bb6098968", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "unique_tickets_ticket_id"], "alias": "unique_tickets_ticket_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.7850711, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "tickets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.tickets"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/tickets.yml/unique_tickets_ticket_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ticket_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`tickets`\n  where ticket_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "ticket_id", "file_key_name": "models.tickets", "attached_node": "model.sado_analytics_services.tickets"}, "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('pancake_performance__by__users')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_pancake_performance__by__users_user_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_pancake_performance__by__users_user_id.sql", "original_file_path": "models/marts/marketing/contact_center/pancake_performance__by__users.yml", "unique_id": "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "not_null_pancake_performance__by__users_user_id"], "alias": "not_null_pancake_performance__by__users_user_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.7941244, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "pancake_performance__by__users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.pancake_performance__by__users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/pancake_performance__by__users.yml/not_null_pancake_performance__by__users_user_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`pancake_performance__by__users`\nwhere user_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "user_id", "file_key_name": "models.pancake_performance__by__users", "attached_node": "model.sado_analytics_services.pancake_performance__by__users"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["user_id", "hour"], "model": "{{ get_where_subquery(ref('pancake_performance__by__users')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31.sql", "original_file_path": "models/marts/marketing/contact_center/pancake_performance__by__users.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour"], "alias": "dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31"}, "created_at": 1703652761.7967176, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31\") }}", "language": "sql", "refs": [{"name": "pancake_performance__by__users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.pancake_performance__by__users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/pancake_performance__by__users.yml/dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        user_id, hour\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`pancake_performance__by__users`\n    group by user_id, hour\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.pancake_performance__by__users", "attached_node": "model.sado_analytics_services.pancake_performance__by__users"}, "test.sado_analytics_services.not_null_conversations_engaged_conversation_id.bcf98fdb1c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "conversation_id", "model": "{{ get_where_subquery(ref('conversations_engaged')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_conversations_engaged_conversation_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_conversations_engaged_conversation_id.sql", "original_file_path": "models/marts/marketing/contact_center/conversations_engaged.yml", "unique_id": "test.sado_analytics_services.not_null_conversations_engaged_conversation_id.bcf98fdb1c", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "not_null_conversations_engaged_conversation_id"], "alias": "not_null_conversations_engaged_conversation_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.821742, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "conversations_engaged", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.conversations_engaged"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/conversations_engaged.yml/not_null_conversations_engaged_conversation_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect conversation_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`conversations_engaged`\nwhere conversation_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "conversation_id", "file_key_name": "models.conversations_engaged", "attached_node": "model.sado_analytics_services.conversations_engaged"}, "test.sado_analytics_services.unique_conversations_engaged_conversation_id.babc4a007d": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "conversation_id", "model": "{{ get_where_subquery(ref('conversations_engaged')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_conversations_engaged_conversation_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_conversations_engaged_conversation_id.sql", "original_file_path": "models/marts/marketing/contact_center/conversations_engaged.yml", "unique_id": "test.sado_analytics_services.unique_conversations_engaged_conversation_id.babc4a007d", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "unique_conversations_engaged_conversation_id"], "alias": "unique_conversations_engaged_conversation_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8242857, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "conversations_engaged", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.conversations_engaged"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/conversations_engaged.yml/unique_conversations_engaged_conversation_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select conversation_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`conversations_engaged`\n  where conversation_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "conversation_id", "file_key_name": "models.conversations_engaged", "attached_node": "model.sado_analytics_services.conversations_engaged"}, "test.sado_analytics_services.not_null_analytics_ecommerce_event_id.6f1ed0d8fb": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('analytics_ecommerce')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_ecommerce_event_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_ecommerce_event_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_ecommerce.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_ecommerce_event_id.6f1ed0d8fb", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_ecommerce_event_id"], "alias": "not_null_analytics_ecommerce_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8310387, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_ecommerce", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_ecommerce"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_ecommerce.yml/not_null_analytics_ecommerce_event_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_ecommerce`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_id", "file_key_name": "models.analytics_ecommerce", "attached_node": "model.sado_analytics_services.analytics_ecommerce"}, "test.sado_analytics_services.unique_analytics_ecommerce_event_id.02ed4c83a9": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('analytics_ecommerce')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_analytics_ecommerce_event_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_analytics_ecommerce_event_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_ecommerce.yml", "unique_id": "test.sado_analytics_services.unique_analytics_ecommerce_event_id.02ed4c83a9", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "unique_analytics_ecommerce_event_id"], "alias": "unique_analytics_ecommerce_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.833576, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_ecommerce", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_ecommerce"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_ecommerce.yml/unique_analytics_ecommerce_event_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select event_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_ecommerce`\n  where event_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_id", "file_key_name": "models.analytics_ecommerce", "attached_node": "model.sado_analytics_services.analytics_ecommerce"}, "test.sado_analytics_services.not_null_analytics_ecommerce_event_date.906416261f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_date", "model": "{{ get_where_subquery(ref('analytics_ecommerce')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_ecommerce_event_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_ecommerce_event_date.sql", "original_file_path": "models/marts/marketing/analytics/analytics_ecommerce.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_ecommerce_event_date.906416261f", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_ecommerce_event_date"], "alias": "not_null_analytics_ecommerce_event_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.836426, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_ecommerce", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_ecommerce"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_ecommerce.yml/not_null_analytics_ecommerce_event_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_date\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_ecommerce`\nwhere event_date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_date", "file_key_name": "models.analytics_ecommerce", "attached_node": "model.sado_analytics_services.analytics_ecommerce"}, "test.sado_analytics_services.not_null_analytics_ecommerce_event_timestamp.ecb4f8891a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_timestamp", "model": "{{ get_where_subquery(ref('analytics_ecommerce')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_ecommerce_event_timestamp", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_ecommerce_event_timestamp.sql", "original_file_path": "models/marts/marketing/analytics/analytics_ecommerce.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_ecommerce_event_timestamp.ecb4f8891a", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_ecommerce_event_timestamp"], "alias": "not_null_analytics_ecommerce_event_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8389397, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_ecommerce", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_ecommerce"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_ecommerce.yml/not_null_analytics_ecommerce_event_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_timestamp\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_ecommerce`\nwhere event_timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_timestamp", "file_key_name": "models.analytics_ecommerce", "attached_node": "model.sado_analytics_services.analytics_ecommerce"}, "test.sado_analytics_services.not_null_analytics_ecommerce_client_id.a95291fa85": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "client_id", "model": "{{ get_where_subquery(ref('analytics_ecommerce')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_ecommerce_client_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_ecommerce_client_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_ecommerce.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_ecommerce_client_id.a95291fa85", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_ecommerce_client_id"], "alias": "not_null_analytics_ecommerce_client_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8414788, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_ecommerce", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_ecommerce"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_ecommerce.yml/not_null_analytics_ecommerce_client_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect client_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_ecommerce`\nwhere client_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_id", "file_key_name": "models.analytics_ecommerce", "attached_node": "model.sado_analytics_services.analytics_ecommerce"}, "test.sado_analytics_services.not_null_analytics_ecommerce_session_id.bd07b9226e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "session_id", "model": "{{ get_where_subquery(ref('analytics_ecommerce')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_ecommerce_session_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_ecommerce_session_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_ecommerce.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_ecommerce_session_id.bd07b9226e", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_ecommerce_session_id"], "alias": "not_null_analytics_ecommerce_session_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.844026, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_ecommerce", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_ecommerce"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_ecommerce.yml/not_null_analytics_ecommerce_session_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_ecommerce`\nwhere session_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_id", "file_key_name": "models.analytics_ecommerce", "attached_node": "model.sado_analytics_services.analytics_ecommerce"}, "test.sado_analytics_services.not_null_analytics_ecommerce_event_name.74e33efa5c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_name", "model": "{{ get_where_subquery(ref('analytics_ecommerce')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_ecommerce_event_name", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_ecommerce_event_name.sql", "original_file_path": "models/marts/marketing/analytics/analytics_ecommerce.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_ecommerce_event_name.74e33efa5c", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_ecommerce_event_name"], "alias": "not_null_analytics_ecommerce_event_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.846575, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_ecommerce", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_ecommerce"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_ecommerce.yml/not_null_analytics_ecommerce_event_name.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_ecommerce`\nwhere event_name is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_name", "file_key_name": "models.analytics_ecommerce", "attached_node": "model.sado_analytics_services.analytics_ecommerce"}, "test.sado_analytics_services.not_null_analytics_ecommerce_page_path.cf54588159": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "page_path", "model": "{{ get_where_subquery(ref('analytics_ecommerce')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_ecommerce_page_path", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_ecommerce_page_path.sql", "original_file_path": "models/marts/marketing/analytics/analytics_ecommerce.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_ecommerce_page_path.cf54588159", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_ecommerce_page_path"], "alias": "not_null_analytics_ecommerce_page_path", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8494346, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_ecommerce", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_ecommerce"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_ecommerce.yml/not_null_analytics_ecommerce_page_path.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect page_path\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_ecommerce`\nwhere page_path is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "page_path", "file_key_name": "models.analytics_ecommerce", "attached_node": "model.sado_analytics_services.analytics_ecommerce"}, "test.sado_analytics_services.not_null_analytics_events_event_id.e85055ae44": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('analytics_events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_events_event_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_events_event_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_events.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_events_event_id.e85055ae44", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_events_event_id"], "alias": "not_null_analytics_events_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.864802, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_events.yml/not_null_analytics_events_event_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_events`\nwhere event_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_id", "file_key_name": "models.analytics_events", "attached_node": "model.sado_analytics_services.analytics_events"}, "test.sado_analytics_services.unique_analytics_events_event_id.4247da5290": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('analytics_events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_analytics_events_event_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_analytics_events_event_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_events.yml", "unique_id": "test.sado_analytics_services.unique_analytics_events_event_id.4247da5290", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "unique_analytics_events_event_id"], "alias": "unique_analytics_events_event_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8673377, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_events.yml/unique_analytics_events_event_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select event_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_events`\n  where event_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_id", "file_key_name": "models.analytics_events", "attached_node": "model.sado_analytics_services.analytics_events"}, "test.sado_analytics_services.not_null_analytics_events_event_date.d3a5365c60": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_date", "model": "{{ get_where_subquery(ref('analytics_events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_events_event_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_events_event_date.sql", "original_file_path": "models/marts/marketing/analytics/analytics_events.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_events_event_date.d3a5365c60", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_events_event_date"], "alias": "not_null_analytics_events_event_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8701522, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_events.yml/not_null_analytics_events_event_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_date\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_events`\nwhere event_date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_date", "file_key_name": "models.analytics_events", "attached_node": "model.sado_analytics_services.analytics_events"}, "test.sado_analytics_services.not_null_analytics_events_event_timestamp.af5e5bebbe": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_timestamp", "model": "{{ get_where_subquery(ref('analytics_events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_events_event_timestamp", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_events_event_timestamp.sql", "original_file_path": "models/marts/marketing/analytics/analytics_events.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_events_event_timestamp.af5e5bebbe", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_events_event_timestamp"], "alias": "not_null_analytics_events_event_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8727229, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_events.yml/not_null_analytics_events_event_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_timestamp\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_events`\nwhere event_timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_timestamp", "file_key_name": "models.analytics_events", "attached_node": "model.sado_analytics_services.analytics_events"}, "test.sado_analytics_services.not_null_analytics_events_client_id.50d8c993ab": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "client_id", "model": "{{ get_where_subquery(ref('analytics_events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_events_client_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_events_client_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_events.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_events_client_id.50d8c993ab", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_events_client_id"], "alias": "not_null_analytics_events_client_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8752568, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_events.yml/not_null_analytics_events_client_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect client_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_events`\nwhere client_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_id", "file_key_name": "models.analytics_events", "attached_node": "model.sado_analytics_services.analytics_events"}, "test.sado_analytics_services.not_null_analytics_events_session_id.0d1ee943e2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "session_id", "model": "{{ get_where_subquery(ref('analytics_events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_events_session_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_events_session_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_events.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_events_session_id.0d1ee943e2", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_events_session_id"], "alias": "not_null_analytics_events_session_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8777988, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_events.yml/not_null_analytics_events_session_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_events`\nwhere session_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_id", "file_key_name": "models.analytics_events", "attached_node": "model.sado_analytics_services.analytics_events"}, "test.sado_analytics_services.not_null_analytics_events_event_name.3910fe2c81": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "event_name", "model": "{{ get_where_subquery(ref('analytics_events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_events_event_name", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_events_event_name.sql", "original_file_path": "models/marts/marketing/analytics/analytics_events.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_events_event_name.3910fe2c81", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_events_event_name"], "alias": "not_null_analytics_events_event_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8803484, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_events.yml/not_null_analytics_events_event_name.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_events`\nwhere event_name is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_name", "file_key_name": "models.analytics_events", "attached_node": "model.sado_analytics_services.analytics_events"}, "test.sado_analytics_services.not_null_analytics_events_page_path.195d70d009": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "page_path", "model": "{{ get_where_subquery(ref('analytics_events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_events_page_path", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_events_page_path.sql", "original_file_path": "models/marts/marketing/analytics/analytics_events.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_events_page_path.195d70d009", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_events_page_path"], "alias": "not_null_analytics_events_page_path", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8832266, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_events"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_events.yml/not_null_analytics_events_page_path.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect page_path\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_events`\nwhere page_path is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "page_path", "file_key_name": "models.analytics_events", "attached_node": "model.sado_analytics_services.analytics_events"}, "test.sado_analytics_services.not_null_analytics_sessions_session_id.d2b8fbe930": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "session_id", "model": "{{ get_where_subquery(ref('analytics_sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_sessions_session_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_sessions_session_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_sessions_session_id.d2b8fbe930", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_sessions_session_id"], "alias": "not_null_analytics_sessions_session_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8944983, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.yml/not_null_analytics_sessions_session_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\nwhere session_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_id", "file_key_name": "models.analytics_sessions", "attached_node": "model.sado_analytics_services.analytics_sessions"}, "test.sado_analytics_services.unique_analytics_sessions_session_id.5ad6d0e7b9": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_id", "model": "{{ get_where_subquery(ref('analytics_sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_analytics_sessions_session_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_analytics_sessions_session_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.yml", "unique_id": "test.sado_analytics_services.unique_analytics_sessions_session_id.5ad6d0e7b9", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "unique_analytics_sessions_session_id"], "alias": "unique_analytics_sessions_session_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8970575, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.yml/unique_analytics_sessions_session_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\n  where session_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_id", "file_key_name": "models.analytics_sessions", "attached_node": "model.sado_analytics_services.analytics_sessions"}, "test.sado_analytics_services.not_null_analytics_sessions_client_id.2b9337fcf7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "client_id", "model": "{{ get_where_subquery(ref('analytics_sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_sessions_client_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_sessions_client_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_sessions_client_id.2b9337fcf7", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_sessions_client_id"], "alias": "not_null_analytics_sessions_client_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.8995805, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.yml/not_null_analytics_sessions_client_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect client_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\nwhere client_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_id", "file_key_name": "models.analytics_sessions", "attached_node": "model.sado_analytics_services.analytics_sessions"}, "test.sado_analytics_services.accepted_values_analytics_sessions_device_type__desktop__mobile__tablet.37e37cbf74": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["desktop", "mobile", "tablet"], "column_name": "device_type", "model": "{{ get_where_subquery(ref('analytics_sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "accepted_values_analytics_sessions_device_type__desktop__mobile__tablet", "resource_type": "test", "package_name": "sado_analytics_services", "path": "accepted_values_analytics_sess_26d729ec3de200fe30303420b008ae13.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.yml", "unique_id": "test.sado_analytics_services.accepted_values_analytics_sessions_device_type__desktop__mobile__tablet.37e37cbf74", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "accepted_values_analytics_sessions_device_type__desktop__mobile__tablet"], "alias": "accepted_values_analytics_sess_26d729ec3de200fe30303420b008ae13", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_analytics_sess_26d729ec3de200fe30303420b008ae13", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_analytics_sess_26d729ec3de200fe30303420b008ae13"}, "created_at": 1703652761.902144, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_analytics_sess_26d729ec3de200fe30303420b008ae13\") }}", "language": "sql", "refs": [{"name": "analytics_sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.yml/accepted_values_analytics_sess_26d729ec3de200fe30303420b008ae13.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        device_type as value_field,\n        count(*) as n_records\n\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\n    group by device_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'desktop','mobile','tablet'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "device_type", "file_key_name": "models.analytics_sessions", "attached_node": "model.sado_analytics_services.analytics_sessions"}, "test.sado_analytics_services.not_null_analytics_sessions_session_date.9f12016762": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "session_date", "model": "{{ get_where_subquery(ref('analytics_sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_sessions_session_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_sessions_session_date.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_sessions_session_date.9f12016762", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_sessions_session_date"], "alias": "not_null_analytics_sessions_session_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.908281, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.yml/not_null_analytics_sessions_session_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_date\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\nwhere session_date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_date", "file_key_name": "models.analytics_sessions", "attached_node": "model.sado_analytics_services.analytics_sessions"}, "test.sado_analytics_services.not_null_analytics_sessions_session_initiated.c29ed80f45": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "session_initiated", "model": "{{ get_where_subquery(ref('analytics_sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_sessions_session_initiated", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_sessions_session_initiated.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_sessions_session_initiated.c29ed80f45", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_sessions_session_initiated"], "alias": "not_null_analytics_sessions_session_initiated", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.9108071, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.yml/not_null_analytics_sessions_session_initiated.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_initiated\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\nwhere session_initiated is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_initiated", "file_key_name": "models.analytics_sessions", "attached_node": "model.sado_analytics_services.analytics_sessions"}, "test.sado_analytics_services.not_null_analytics_sessions_landing_page.d65707214a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "landing_page", "model": "{{ get_where_subquery(ref('analytics_sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_sessions_landing_page", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_sessions_landing_page.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_sessions_landing_page.d65707214a", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_sessions_landing_page"], "alias": "not_null_analytics_sessions_landing_page", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.9133542, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.yml/not_null_analytics_sessions_landing_page.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect landing_page\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\nwhere landing_page is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "landing_page", "file_key_name": "models.analytics_sessions", "attached_node": "model.sado_analytics_services.analytics_sessions"}, "test.sado_analytics_services.not_null_analytics_sessions_exit_page.63a484d937": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "exit_page", "model": "{{ get_where_subquery(ref('analytics_sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_analytics_sessions_exit_page", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_analytics_sessions_exit_page.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.yml", "unique_id": "test.sado_analytics_services.not_null_analytics_sessions_exit_page.63a484d937", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "not_null_analytics_sessions_exit_page"], "alias": "not_null_analytics_sessions_exit_page", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.9162128, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.yml/not_null_analytics_sessions_exit_page.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exit_page\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\nwhere exit_page is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "exit_page", "file_key_name": "models.analytics_sessions", "attached_node": "model.sado_analytics_services.analytics_sessions"}, "test.sado_analytics_services.accepted_values_analytics_sessions_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.06fa2c3426": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["Paid Social", "Organic Social", "Direct", "Organic Search", "Referral", "Paid Search", "Display", "Unassigned"], "column_name": "channel_grouping", "model": "{{ get_where_subquery(ref('analytics_sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "accepted_values_analytics_sessions_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned", "resource_type": "test", "package_name": "sado_analytics_services", "path": "accepted_values_analytics_sess_34e47940609e247893e712d1eb7bf312.sql", "original_file_path": "models/marts/marketing/analytics/analytics_sessions.yml", "unique_id": "test.sado_analytics_services.accepted_values_analytics_sessions_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.06fa2c3426", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "accepted_values_analytics_sessions_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned"], "alias": "accepted_values_analytics_sess_34e47940609e247893e712d1eb7bf312", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_analytics_sess_34e47940609e247893e712d1eb7bf312", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_analytics_sess_34e47940609e247893e712d1eb7bf312"}, "created_at": 1703652761.9187746, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_analytics_sess_34e47940609e247893e712d1eb7bf312\") }}", "language": "sql", "refs": [{"name": "analytics_sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_sessions.yml/accepted_values_analytics_sess_34e47940609e247893e712d1eb7bf312.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        channel_grouping as value_field,\n        count(*) as n_records\n\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_sessions`\n    group by channel_grouping\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Paid Social','Organic Social','Direct','Organic Search','Referral','Paid Search','Display','Unassigned'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "channel_grouping", "file_key_name": "models.analytics_sessions", "attached_node": "model.sado_analytics_services.analytics_sessions"}, "test.sado_analytics_services.unique_analytics_users_client_id.5be88f272b": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "client_id", "model": "{{ get_where_subquery(ref('analytics_users')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_analytics_users_client_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_analytics_users_client_id.sql", "original_file_path": "models/marts/marketing/analytics/analytics_users.yml", "unique_id": "test.sado_analytics_services.unique_analytics_users_client_id.5be88f272b", "fqn": ["sado_analytics_services", "marts", "marketing", "analytics", "unique_analytics_users_client_id"], "alias": "unique_analytics_users_client_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1703652761.931447, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "analytics_users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.analytics_users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/analytics/analytics_users.yml/unique_analytics_users_client_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`analytics_users`\n  where client_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_id", "file_key_name": "models.analytics_users", "attached_node": "model.sado_analytics_services.analytics_users"}}, "sources": {"source.sado_analytics_services.misc.weather": {"database": "agile-scheme-394814", "schema": "Misc", "name": "weather", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/ultilities/_misc__sources.yml", "original_file_path": "models/ultilities/_misc__sources.yml", "unique_id": "source.sado_analytics_services.misc.weather", "fqn": ["sado_analytics_services", "ultilities", "misc", "weather"], "source_name": "misc", "source_description": "misc data pulled from various sources for various purposes", "loader": "", "identifier": "p__weather__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Misc`.`p__weather__*`", "created_at": 1703652762.1106544}, "source.sado_analytics_services.analytics.events": {"database": "agile-scheme-394814", "schema": "analytics_336884118", "name": "events", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAnalytics/_googleAnalytics__sources.yml", "original_file_path": "models/staging/googleAnalytics/_googleAnalytics__sources.yml", "unique_id": "source.sado_analytics_services.analytics.events", "fqn": ["sado_analytics_services", "staging", "googleAnalytics", "analytics", "events"], "source_name": "analytics", "source_description": "Google Analytics 4 export", "loader": "", "identifier": "events_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "case when _table_suffix like '%intraday%' then parse_timestamp('%Y%m%d',regexp_replace(_table_suffix,r'^intraday_','')) else parse_timestamp('%Y%m%d',_table_suffix) end", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`analytics_336884118`.`events_*`", "created_at": 1703652762.1109354}, "source.sado_analytics_services.caresoft.tickets": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "tickets", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.tickets", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "tickets"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_tickets_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_tickets_*`", "created_at": 1703652762.1111436}, "source.sado_analytics_services.caresoft.ticket_details": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "ticket_details", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.ticket_details", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "ticket_details"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_ticketDetails_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_ticketDetails_*`", "created_at": 1703652762.1113396}, "source.sado_analytics_services.caresoft.contacts": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "contacts", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.contacts", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "contacts"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_contacts_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_contacts_*`", "created_at": 1703652762.1115322}, "source.sado_analytics_services.caresoft.contact_details": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "contact_details", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.contact_details", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "contact_details"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_contactDetails_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_contactDetails_*`", "created_at": 1703652762.1117234}, "source.sado_analytics_services.caresoft.calls": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "calls", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.calls", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "calls"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_calls_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_calls_*`", "created_at": 1703652762.1119406}, "source.sado_analytics_services.caresoft.chats": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "chats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.chats", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "chats"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_chats__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_chats__*`", "created_at": 1703652762.1121297}, "source.sado_analytics_services.caresoft.chats_live": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "chats_live", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.chats_live", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "chats_live"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_chats_live__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_chats_live__*`", "created_at": 1703652762.1123168}, "source.sado_analytics_services.caresoft.chats_fb": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "chats_fb", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.chats_fb", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "chats_fb"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_chats_fb__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_chats_fb__*`", "created_at": 1703652762.1125028}, "source.sado_analytics_services.caresoft.chats_zalo": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "chats_zalo", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.chats_zalo", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "chats_zalo"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_chats_zalo__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_chats_zalo__*`", "created_at": 1703652762.1126912}, "source.sado_analytics_services.caresoft.agents": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "agents", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.agents", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "agents"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_agents_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_agents_*`", "created_at": 1703652762.1128778}, "source.sado_analytics_services.caresoft.groups": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "groups", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.groups", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "groups"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_groups_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_groups_*`", "created_at": 1703652762.1130648}, "source.sado_analytics_services.caresoft.ticket_custom_fields": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "ticket_custom_fields", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.ticket_custom_fields", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "ticket_custom_fields"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_ticketCustomFields_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_ticketCustomFields_*`", "created_at": 1703652762.113249}, "source.sado_analytics_services.facebookAds.p_AdsInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_AdsInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_AdsInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_AdsInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_AdsInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_AdsInsights__*`", "created_at": 1703652762.1134374}, "source.sado_analytics_services.facebookAds.p_AccountInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_AccountInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_AccountInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_AccountInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_AccountInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_AccountInsights__*`", "created_at": 1703652762.113624}, "source.sado_analytics_services.facebookAds.p_AudienceInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_AudienceInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_AudienceInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_AudienceInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_AudienceInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_AudienceInsights__*`", "created_at": 1703652762.1138072}, "source.sado_analytics_services.facebookAds.p_RegionInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_RegionInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_RegionInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_RegionInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_RegionInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_RegionInsights__*`", "created_at": 1703652762.1140125}, "source.sado_analytics_services.facebookAds.p_CreativesInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_CreativesInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_CreativesInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_CreativesInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_CreativesInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_CreativesInsights__*`", "created_at": 1703652762.1142058}, "source.sado_analytics_services.googleads.account_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "account_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.account_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "account_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AccountConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AccountConversionStats_1322374205`", "created_at": 1703652762.114394}, "source.sado_analytics_services.googleads.keyword_cross_device_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_cross_device_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_cross_device_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordCrossDeviceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordCrossDeviceStats_1322374205`", "created_at": 1703652762.1145797}, "source.sado_analytics_services.googleads.hourly_account_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_account_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_account_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_account_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyAccountStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyAccountStats_1322374205`", "created_at": 1703652762.1147642}, "source.sado_analytics_services.googleads.gender": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Gender_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Gender_1322374205`", "created_at": 1703652762.1149518}, "source.sado_analytics_services.googleads.ad_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdConversionStats_1322374205`", "created_at": 1703652762.1151366}, "source.sado_analytics_services.googleads.search_query_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "search_query_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.search_query_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "search_query_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_SearchQueryConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_SearchQueryConversionStats_1322374205`", "created_at": 1703652762.11533}, "source.sado_analytics_services.googleads.video_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_VideoNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_VideoNonClickStats_1322374205`", "created_at": 1703652762.1155155}, "source.sado_analytics_services.googleads.ad_group_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupConversionStats_1322374205`", "created_at": 1703652762.1156974}, "source.sado_analytics_services.googleads.hourly_campaign_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_campaign_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_campaign_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_campaign_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyCampaignStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyCampaignStats_1322374205`", "created_at": 1703652762.1158996}, "source.sado_analytics_services.googleads.campaign_cross_device_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_cross_device_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_cross_device_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignCrossDeviceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignCrossDeviceStats_1322374205`", "created_at": 1703652762.1160886}, "source.sado_analytics_services.googleads.gender_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GenderNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GenderNonClickStats_1322374205`", "created_at": 1703652762.1162794}, "source.sado_analytics_services.googleads.video": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Video_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Video_1322374205`", "created_at": 1703652762.1164649}, "source.sado_analytics_services.googleads.video_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_VideoBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_VideoBasicStats_1322374205`", "created_at": 1703652762.1166525}, "source.sado_analytics_services.googleads.campaign_audience_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudienceNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudienceNonClickStats_1322374205`", "created_at": 1703652762.116839}, "source.sado_analytics_services.googleads.hourly_account_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_account_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_account_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_account_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyAccountConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyAccountConversionStats_1322374205`", "created_at": 1703652762.1170254}, "source.sado_analytics_services.googleads.video_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_VideoConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_VideoConversionStats_1322374205`", "created_at": 1703652762.1172094}, "source.sado_analytics_services.googleads.ad_group_audience": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudience_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudience_1322374205`", "created_at": 1703652762.1174958}, "source.sado_analytics_services.googleads.age_range_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRangeNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRangeNonClickStats_1322374205`", "created_at": 1703652762.1177068}, "source.sado_analytics_services.googleads.account_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "account_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.account_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "account_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AccountNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AccountNonClickStats_1322374205`", "created_at": 1703652762.1179044}, "source.sado_analytics_services.googleads.parental_status_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatusBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatusBasicStats_1322374205`", "created_at": 1703652762.1180978}, "source.sado_analytics_services.googleads.ad_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdStats_1322374205`", "created_at": 1703652762.118286}, "source.sado_analytics_services.googleads.hourly_ad_group_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_ad_group_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_ad_group_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_ad_group_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyAdGroupConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyAdGroupConversionStats_1322374205`", "created_at": 1703652762.1184723}, "source.sado_analytics_services.googleads.parental_status_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatusStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatusStats_1322374205`", "created_at": 1703652762.1186562}, "source.sado_analytics_services.googleads.bid_goal": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "bid_goal", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.bid_goal", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "bid_goal"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_BidGoal_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_BidGoal_1322374205`", "created_at": 1703652762.1188395}, "source.sado_analytics_services.googleads.ad_cross_device_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_cross_device_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_cross_device_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdCrossDeviceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdCrossDeviceStats_1322374205`", "created_at": 1703652762.1190338}, "source.sado_analytics_services.googleads.ad_group_ad_label": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_ad_label", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_ad_label", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_ad_label"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAdLabel_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAdLabel_1322374205`", "created_at": 1703652762.1192274}, "source.sado_analytics_services.googleads.ad_group_audience_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudienceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudienceConversionStats_1322374205`", "created_at": 1703652762.119414}, "source.sado_analytics_services.googleads.search_query_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "search_query_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.search_query_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "search_query_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_SearchQueryStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_SearchQueryStats_1322374205`", "created_at": 1703652762.1195984}, "source.sado_analytics_services.googleads.ad_group_cross_device_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_cross_device_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_cross_device_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_cross_device_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupCrossDeviceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCrossDeviceConversionStats_1322374205`", "created_at": 1703652762.1198003}, "source.sado_analytics_services.googleads.budget": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "budget", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.budget", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "budget"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Budget_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Budget_1322374205`", "created_at": 1703652762.1199903}, "source.sado_analytics_services.googleads.bid_goal_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "bid_goal_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.bid_goal_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "bid_goal_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_BidGoalConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_BidGoalConversionStats_1322374205`", "created_at": 1703652762.1201751}, "source.sado_analytics_services.googleads.ad_group_cross_device_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_cross_device_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_cross_device_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupCrossDeviceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCrossDeviceStats_1322374205`", "created_at": 1703652762.1203573}, "source.sado_analytics_services.googleads.age_range_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRangeStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRangeStats_1322374205`", "created_at": 1703652762.1205478}, "source.sado_analytics_services.googleads.campaign_audience": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudience_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudience_1322374205`", "created_at": 1703652762.120732}, "source.sado_analytics_services.googleads.keyword_cross_device_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_cross_device_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_cross_device_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_cross_device_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordCrossDeviceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordCrossDeviceConversionStats_1322374205`", "created_at": 1703652762.1209145}, "source.sado_analytics_services.googleads.campaign": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Campaign_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Campaign_1322374205`", "created_at": 1703652762.1210992}, "source.sado_analytics_services.googleads.ad_cross_device_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_cross_device_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_cross_device_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_cross_device_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdCrossDeviceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdCrossDeviceConversionStats_1322374205`", "created_at": 1703652762.121287}, "source.sado_analytics_services.googleads.placement_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PlacementBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PlacementBasicStats_1322374205`", "created_at": 1703652762.1214838}, "source.sado_analytics_services.googleads.age_range_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRangeBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRangeBasicStats_1322374205`", "created_at": 1703652762.1216679}, "source.sado_analytics_services.googleads.keyword_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordBasicStats_1322374205`", "created_at": 1703652762.1218522}, "source.sado_analytics_services.googleads.parental_status_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatusNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatusNonClickStats_1322374205`", "created_at": 1703652762.1220348}, "source.sado_analytics_services.googleads.gender_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GenderConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GenderConversionStats_1322374205`", "created_at": 1703652762.1222186}, "source.sado_analytics_services.googleads.placement_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PlacementStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PlacementStats_1322374205`", "created_at": 1703652762.1224072}, "source.sado_analytics_services.googleads.ad_group": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroup_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroup_1322374205`", "created_at": 1703652762.1225932}, "source.sado_analytics_services.googleads.ad_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdBasicStats_1322374205`", "created_at": 1703652762.1227794}, "source.sado_analytics_services.googleads.ad_group_audience_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudienceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudienceStats_1322374205`", "created_at": 1703652762.122963}, "source.sado_analytics_services.googleads.placement_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PlacementConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PlacementConversionStats_1322374205`", "created_at": 1703652762.123157}, "source.sado_analytics_services.googleads.ad_group_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupStats_1322374205`", "created_at": 1703652762.1233401}, "source.sado_analytics_services.googleads.campaign_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignConversionStats_1322374205`", "created_at": 1703652762.123534}, "source.sado_analytics_services.googleads.budget_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "budget_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.budget_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "budget_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_BudgetStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_BudgetStats_1322374205`", "created_at": 1703652762.1237226}, "source.sado_analytics_services.googleads.account_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "account_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.account_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "account_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AccountBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AccountBasicStats_1322374205`", "created_at": 1703652762.123939}, "source.sado_analytics_services.googleads.customer": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "customer", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.customer", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "customer"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Customer_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Customer_1322374205`", "created_at": 1703652762.1241236}, "source.sado_analytics_services.googleads.campaign_label": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_label", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_label", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_label"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignLabel_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignLabel_1322374205`", "created_at": 1703652762.124307}, "source.sado_analytics_services.googleads.age_range_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRangeConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRangeConversionStats_1322374205`", "created_at": 1703652762.124498}, "source.sado_analytics_services.googleads.campaign_audience_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudienceBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudienceBasicStats_1322374205`", "created_at": 1703652762.1246822}, "source.sado_analytics_services.googleads.keyword_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordStats_1322374205`", "created_at": 1703652762.1248665}, "source.sado_analytics_services.googleads.hourly_ad_group_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_ad_group_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_ad_group_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_ad_group_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyAdGroupStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyAdGroupStats_1322374205`", "created_at": 1703652762.1250505}, "source.sado_analytics_services.googleads.placement": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Placement_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Placement_1322374205`", "created_at": 1703652762.125234}, "source.sado_analytics_services.googleads.video_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_VideoStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_VideoStats_1322374205`", "created_at": 1703652762.1254241}, "source.sado_analytics_services.googleads.campaign_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignBasicStats_1322374205`", "created_at": 1703652762.1256473}, "source.sado_analytics_services.googleads.ad_group_label": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_label", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_label", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_label"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupLabel_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupLabel_1322374205`", "created_at": 1703652762.125845}, "source.sado_analytics_services.googleads.parental_status_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatusConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatusConversionStats_1322374205`", "created_at": 1703652762.1260324}, "source.sado_analytics_services.googleads.campaign_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignStats_1322374205`", "created_at": 1703652762.126221}, "source.sado_analytics_services.googleads.campaign_audience_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudienceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudienceConversionStats_1322374205`", "created_at": 1703652762.1264126}, "source.sado_analytics_services.googleads.campaign_criterion": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_criterion", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_criterion", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_criterion"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignCriterion_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignCriterion_1322374205`", "created_at": 1703652762.1265965}, "source.sado_analytics_services.googleads.hourly_bid_goal_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_bid_goal_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_bid_goal_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_bid_goal_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyBidGoalStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyBidGoalStats_1322374205`", "created_at": 1703652762.1267788}, "source.sado_analytics_services.googleads.click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ClickStats_1322374205`", "created_at": 1703652762.1269624}, "source.sado_analytics_services.googleads.campaign_audience_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudienceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudienceStats_1322374205`", "created_at": 1703652762.1271496}, "source.sado_analytics_services.googleads.parental_status": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatus_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatus_1322374205`", "created_at": 1703652762.127334}, "source.sado_analytics_services.googleads.geo_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "geo_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.geo_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "geo_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GeoStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GeoStats_1322374205`", "created_at": 1703652762.1275241}, "source.sado_analytics_services.googleads.ad_group_criterion_label": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_criterion_label", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_criterion_label", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_criterion_label"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupCriterionLabel_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCriterionLabel_1322374205`", "created_at": 1703652762.1277084}, "source.sado_analytics_services.googleads.age_range": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRange_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRange_1322374205`", "created_at": 1703652762.1279135}, "source.sado_analytics_services.googleads.geo_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "geo_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.geo_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "geo_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GeoConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GeoConversionStats_1322374205`", "created_at": 1703652762.1281087}, "source.sado_analytics_services.googleads.hourly_campaign_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_campaign_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_campaign_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_campaign_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyCampaignConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyCampaignConversionStats_1322374205`", "created_at": 1703652762.1282942}, "source.sado_analytics_services.googleads.keyword": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Keyword_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Keyword_1322374205`", "created_at": 1703652762.1284866}, "source.sado_analytics_services.googleads.campaign_cookie_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_cookie_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_cookie_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_cookie_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignCookieStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignCookieStats_1322374205`", "created_at": 1703652762.1286738}, "source.sado_analytics_services.googleads.ad_group_audience_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudienceBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudienceBasicStats_1322374205`", "created_at": 1703652762.1288588}, "source.sado_analytics_services.googleads.ad_group_criterion": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_criterion", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_criterion", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_criterion"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupCriterion_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCriterion_1322374205`", "created_at": 1703652762.129043}, "source.sado_analytics_services.googleads.paid_organic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "paid_organic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.paid_organic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "paid_organic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PaidOrganicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PaidOrganicStats_1322374205`", "created_at": 1703652762.1292276}, "source.sado_analytics_services.googleads.location_based_campaign_criterion": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "location_based_campaign_criterion", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.location_based_campaign_criterion", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "location_based_campaign_criterion"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_LocationBasedCampaignCriterion_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_LocationBasedCampaignCriterion_1322374205`", "created_at": 1703652762.1294153}, "source.sado_analytics_services.googleads.gender_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GenderStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GenderStats_1322374205`", "created_at": 1703652762.1295996}, "source.sado_analytics_services.googleads.account_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "account_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.account_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "account_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AccountStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AccountStats_1322374205`", "created_at": 1703652762.1297822}, "source.sado_analytics_services.googleads.shopping_product_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "shopping_product_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.shopping_product_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "shopping_product_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ShoppingProductConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ShoppingProductConversionStats_1322374205`", "created_at": 1703652762.129965}, "source.sado_analytics_services.googleads.campaign_cross_device_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_cross_device_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_cross_device_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_cross_device_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignCrossDeviceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignCrossDeviceConversionStats_1322374205`", "created_at": 1703652762.1301522}, "source.sado_analytics_services.googleads.product_group_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "product_group_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.product_group_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "product_group_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ProductGroupStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ProductGroupStats_1322374205`", "created_at": 1703652762.1303394}, "source.sado_analytics_services.googleads.gender_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GenderBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GenderBasicStats_1322374205`", "created_at": 1703652762.130528}, "source.sado_analytics_services.googleads.ad_group_bid_modifier": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_bid_modifier", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_bid_modifier", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_bid_modifier"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupBidModifier_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupBidModifier_1322374205`", "created_at": 1703652762.130713}, "source.sado_analytics_services.googleads.campaign_location_target_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_location_target_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_location_target_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_location_target_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignLocationTargetStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignLocationTargetStats_1322374205`", "created_at": 1703652762.130898}, "source.sado_analytics_services.googleads.ad_group_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupBasicStats_1322374205`", "created_at": 1703652762.1310797}, "source.sado_analytics_services.googleads.keyword_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordConversionStats_1322374205`", "created_at": 1703652762.1312609}, "source.sado_analytics_services.googleads.shopping_product_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "shopping_product_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.shopping_product_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "shopping_product_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ShoppingProductStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ShoppingProductStats_1322374205`", "created_at": 1703652762.131451}, "source.sado_analytics_services.googleads.placement_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PlacementNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PlacementNonClickStats_1322374205`", "created_at": 1703652762.1316352}, "source.sado_analytics_services.googleads.bid_goal_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "bid_goal_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.bid_goal_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "bid_goal_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_BidGoalStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_BidGoalStats_1322374205`", "created_at": 1703652762.1318352}, "source.sado_analytics_services.googleads.ad_group_audience_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudienceNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudienceNonClickStats_1322374205`", "created_at": 1703652762.1320267}, "source.sado_analytics_services.googleads.ad": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Ad_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Ad_1322374205`", "created_at": 1703652762.1322112}, "source.sado_analytics_services.nhanhvn.p_bills_*": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_bills_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_bills_*", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_bills_*"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_bills_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_bills_*`", "created_at": 1703652762.1324098}, "source.sado_analytics_services.nhanhvn.p_carriers_*": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_carriers_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_carriers_*", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_carriers_*"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_carriers_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_carriers_*`", "created_at": 1703652762.1325994}, "source.sado_analytics_services.nhanhvn.p_categories_*": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_categories_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_categories_*", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_categories_*"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_categories_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_categories_*`", "created_at": 1703652762.132793}, "source.sado_analytics_services.nhanhvn.p_customers_*": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_customers_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_customers_*", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_customers_*"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_customers_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_customers_*`", "created_at": 1703652762.13298}, "source.sado_analytics_services.nhanhvn.p_orders_*": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_orders_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_orders_*", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_orders_*"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_orders_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_orders_*`", "created_at": 1703652762.1331673}, "source.sado_analytics_services.nhanhvn.p_products_*": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_products_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_products_*", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_products_*"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_products_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_products_*`", "created_at": 1703652762.1334}, "source.sado_analytics_services.nhanhvn.p_stores_*": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_stores_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_stores_*", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_stores_*"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_stores_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_stores_*`", "created_at": 1703652762.1335943}, "source.sado_analytics_services.nhanhvn.p_users_*": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_users_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_users_*", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_users_*"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_users_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_users_*`", "created_at": 1703652762.133783}, "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_webhook_inventoryChange", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_webhook_inventoryChange"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_webhook_inventoryChange", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_webhook_inventoryChange`", "created_at": 1703652762.1339695}, "source.sado_analytics_services.nhanhvn.p_webhook_orderAdd": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_webhook_orderAdd", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_webhook_orderAdd", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_webhook_orderAdd"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_webhook_orderAdd", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_webhook_orderAdd`", "created_at": 1703652762.1341553}, "source.sado_analytics_services.nhanhvn.p_webhook_orderUpdate": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_webhook_orderUpdate", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_webhook_orderUpdate", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_webhook_orderUpdate"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_webhook_orderUpdate", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_webhook_orderUpdate`", "created_at": 1703652762.1343462}, "source.sado_analytics_services.nhanhvn.p_inventory_*": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_inventory_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_inventory_*", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_inventory_*"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_inventory_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_inventory_*`", "created_at": 1703652762.1345365}, "source.sado_analytics_services.esms.sms_sent_data": {"database": "agile-scheme-394814", "schema": "Esms", "name": "sms_sent_data", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/esms/_esms__sources.yml", "original_file_path": "models/staging/esms/_esms__sources.yml", "unique_id": "source.sado_analytics_services.esms.sms_sent_data", "fqn": ["sado_analytics_services", "staging", "esms", "esms", "sms_sent_data"], "source_name": "esms", "source_description": "data pulled from esms via API", "loader": "", "identifier": "p__sms_sent_data__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Esms`.`p__sms_sent_data__*`", "created_at": 1703652762.1347237}, "source.sado_analytics_services.kiotViet.p_products_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_products_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_products_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_products_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_products_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_products_list_*`", "created_at": 1703652762.1349163}, "source.sado_analytics_services.kiotViet.p_branches_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_branches_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_branches_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_branches_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_branches_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_branches_list_*`", "created_at": 1703652762.1351068}, "source.sado_analytics_services.kiotViet.p_orders_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_orders_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_orders_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_orders_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_orders_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_orders_list_*`", "created_at": 1703652762.135291}, "source.sado_analytics_services.kiotViet.p_pricebooks_branches_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_pricebooks_branches_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_pricebooks_branches_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_pricebooks_branches_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_pricebooks_branches_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_pricebooks_branches_*`", "created_at": 1703652762.135508}, "source.sado_analytics_services.kiotViet.p_surcharges_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_surcharges_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_surcharges_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_surcharges_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_surcharges_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_surcharges_list_*`", "created_at": 1703652762.1356962}, "source.sado_analytics_services.kiotViet.p_pricebooks_users_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_pricebooks_users_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_pricebooks_users_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_pricebooks_users_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_pricebooks_users_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_pricebooks_users_*`", "created_at": 1703652762.1359017}, "source.sado_analytics_services.kiotViet.p_users_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_users_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_users_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_users_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_users_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_users_list_*`", "created_at": 1703652762.1360884}, "source.sado_analytics_services.kiotViet.p_categories_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_categories_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_categories_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_categories_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_categories_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_categories_list_*`", "created_at": 1703652762.1362772}, "source.sado_analytics_services.kiotViet.p_purchaseorders_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_purchaseorders_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_purchaseorders_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_purchaseorders_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_purchaseorders_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list_*`", "created_at": 1703652762.1364698}, "source.sado_analytics_services.kiotViet.p_purchaseorders_list2_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_purchaseorders_list2_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_purchaseorders_list2_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_purchaseorders_list2_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_purchaseorders_list2_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list2_*`", "created_at": 1703652762.1366563}, "source.sado_analytics_services.kiotViet.p_customersGroups_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_customersGroups_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_customersGroups_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_customersGroups_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_customersGroups_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_customersGroups_list_*`", "created_at": 1703652762.1368463}, "source.sado_analytics_services.kiotViet.p_pricebooks_customer_groups_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_pricebooks_customer_groups_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_pricebooks_customer_groups_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_pricebooks_customer_groups_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_pricebooks_customer_groups_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_pricebooks_customer_groups_*`", "created_at": 1703652762.1370306}, "source.sado_analytics_services.kiotViet.p_invoices_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_invoices_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_invoices_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_invoices_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_invoices_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_invoices_list_*`", "created_at": 1703652762.1372201}, "source.sado_analytics_services.kiotViet.p_invoices_list2_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_invoices_list2_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_invoices_list2_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_invoices_list2_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_invoices_list2_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_invoices_list2_*`", "created_at": 1703652762.1374104}, "source.sado_analytics_services.kiotViet.p_returns_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_returns_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_returns_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_returns_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_returns_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_returns_list_*`", "created_at": 1703652762.1375952}, "source.sado_analytics_services.kiotViet.p_returns_list2_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_returns_list2_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_returns_list2_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_returns_list2_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_returns_list2_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_returns_list2_*`", "created_at": 1703652762.1377773}, "source.sado_analytics_services.kiotViet.p_bankAccounts_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_bankAccounts_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_bankAccounts_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_bankAccounts_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_bankAccounts_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_bankAccounts_list_*`", "created_at": 1703652762.1379592}, "source.sado_analytics_services.kiotViet.p_saleschannels_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_saleschannels_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_saleschannels_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_saleschannels_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_saleschannels_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_saleschannels_list_*`", "created_at": 1703652762.138141}, "source.sado_analytics_services.kiotViet.p_customers_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_customers_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_customers_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_customers_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_customers_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_customers_list_*`", "created_at": 1703652762.1383295}, "source.sado_analytics_services.kiotViet.p_locations_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_locations_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_locations_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_locations_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_locations_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_locations_list_*`", "created_at": 1703652762.138513}, "source.sado_analytics_services.kiotViet.p_products_inventory_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_products_inventory_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_products_inventory_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_products_inventory_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_products_inventory_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_products_inventory_*`", "created_at": 1703652762.138696}, "source.sado_analytics_services.kiotViet.p_pricebooks_list_*": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_pricebooks_list_*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_pricebooks_list_*", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_pricebooks_list_*"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_pricebooks_list_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_pricebooks_list_*`", "created_at": 1703652762.1388814}, "source.sado_analytics_services.kiotViet.p_webhook_invoice_update": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_webhook_invoice_update", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_webhook_invoice_update", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_webhook_invoice_update"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_webhook_invoice_update", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_webhook_invoice_update`", "created_at": 1703652762.1390653}, "source.sado_analytics_services.kiotViet.p_webhook_inventory_update": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_webhook_inventory_update", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_webhook_inventory_update", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_webhook_inventory_update"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_webhook_inventory_update", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_webhook_inventory_update`", "created_at": 1703652762.1392515}, "source.sado_analytics_services.kiotViet.p_webhook_customer_update": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_webhook_customer_update", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_webhook_customer_update", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_webhook_customer_update"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_webhook_customer_update", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_webhook_customer_update`", "created_at": 1703652762.1394448}, "source.sado_analytics_services.pancake.users": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "users", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.users", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "users"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_users__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_users__*`", "created_at": 1703652762.1396327}, "source.sado_analytics_services.pancake.conversations": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "conversations", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.conversations", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "conversations"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_conversations__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_conversations__*`", "created_at": 1703652762.1398346}, "source.sado_analytics_services.pancake.customer_engagements": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "customer_engagements", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.customer_engagements", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "customer_engagements"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_customer_engagements__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_customer_engagements__*`", "created_at": 1703652762.1400216}, "source.sado_analytics_services.pancake.pages": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "pages", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.pages", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "pages"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_pages__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_pages__*`", "created_at": 1703652762.1402059}, "source.sado_analytics_services.pancake.user_stats": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "user_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.user_stats", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "user_stats"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_user_stats__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_user_stats__*`", "created_at": 1703652762.1403959}, "source.sado_analytics_services.pancake.posts": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "posts", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.posts", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "posts"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_posts__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_posts__*`", "created_at": 1703652762.1405811}, "source.sado_analytics_services.pancake.tags": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "tags", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.tags", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "tags"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_tags__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_tags__*`", "created_at": 1703652762.1407645}, "source.sado_analytics_services.pancake.page": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "page", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.page", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "page"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_page__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_page__*`", "created_at": 1703652762.1409473}, "source.sado_analytics_services.pancake.customers": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "customers", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.customers", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "customers"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_customers__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_customers__*`", "created_at": 1703652762.1411686}, "source.sado_analytics_services.pancake.page_stats": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "page_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.page_stats", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "page_stats"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_page_stats__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_page_stats__*`", "created_at": 1703652762.14136}, "source.sado_analytics_services.pancake.pos_orders": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "pos_orders", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.pos_orders", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "pos_orders"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_pos_orders__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_pos_orders__*`", "created_at": 1703652762.1415443}, "source.sado_analytics_services.5sfashion.products": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "products", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.5sfashion.products", "fqn": ["sado_analytics_services", "staging", "5sfashion", "5sfashion", "products"], "source_name": "5sfashion", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_products_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 1, "period": "day"}, "error_after": {"count": 0, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_products_*`", "created_at": 1703652762.1417344}, "source.sado_analytics_services.5sfashion.product_variants": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "product_variants", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.5sfashion.product_variants", "fqn": ["sado_analytics_services", "staging", "5sfashion", "5sfashion", "product_variants"], "source_name": "5sfashion", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_product_variants_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 1, "period": "day"}, "error_after": {"count": 0, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_product_variants_*`", "created_at": 1703652762.1419227}, "source.sado_analytics_services.5sfashion.product_ratings": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "product_ratings", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.5sfashion.product_ratings", "fqn": ["sado_analytics_services", "staging", "5sfashion", "5sfashion", "product_ratings"], "source_name": "5sfashion", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_product_ratings_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 1, "period": "day"}, "error_after": {"count": 0, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_product_ratings_*`", "created_at": 1703652762.1421094}, "source.sado_analytics_services.5sfashion.order_items": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "order_items", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.5sfashion.order_items", "fqn": ["sado_analytics_services", "staging", "5sfashion", "5sfashion", "order_items"], "source_name": "5sfashion", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_order_items_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 6, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_order_items_*`", "created_at": 1703652762.1423001}, "source.sado_analytics_services.5sfashion.orders": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "orders", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.5sfashion.orders", "fqn": ["sado_analytics_services", "staging", "5sfashion", "5sfashion", "orders"], "source_name": "5sfashion", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_orders_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 6, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_orders_*`", "created_at": 1703652762.1424863}, "source.sado_analytics_services.5sfashion.categories": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "categories", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.5sfashion.categories", "fqn": ["sado_analytics_services", "staging", "5sfashion", "5sfashion", "categories"], "source_name": "5sfashion", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_categories_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 1, "period": "day"}, "error_after": {"count": 0, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_categories_*`", "created_at": 1703652762.14267}, "source.sado_analytics_services.5sfashion.districts": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "districts", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.5sfashion.districts", "fqn": ["sado_analytics_services", "staging", "5sfashion", "5sfashion", "districts"], "source_name": "5sfashion", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_districts_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_districts_*`", "created_at": 1703652762.1428523}, "source.sado_analytics_services.5sfashion.wards": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "wards", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.5sfashion.wards", "fqn": ["sado_analytics_services", "staging", "5sfashion", "5sfashion", "wards"], "source_name": "5sfashion", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_wards_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_wards_*`", "created_at": 1703652762.1430347}, "source.sado_analytics_services.5sfashion.provinces": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "provinces", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.5sfashion.provinces", "fqn": ["sado_analytics_services", "staging", "5sfashion", "5sfashion", "provinces"], "source_name": "5sfashion", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_provinces_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_provinces_*`", "created_at": 1703652762.1432323}, "source.sado_analytics_services.gSheet._ext_asm_list": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "_ext_asm_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet._ext_asm_list", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "_ext_asm_list"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_asm_list", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_asm_list`", "created_at": 1703652762.1434267}, "source.sado_analytics_services.gSheet._ext_nhanhvn_salechannel": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "_ext_nhanhvn_salechannel", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet._ext_nhanhvn_salechannel", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "_ext_nhanhvn_salechannel"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_nhanhvn_salechannel", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_nhanhvn_salechannel`", "created_at": 1703652762.1436121}, "source.sado_analytics_services.gSheet._ext_region": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "_ext_region", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet._ext_region", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "_ext_region"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_region", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_region`", "created_at": 1703652762.1438138}, "source.sado_analytics_services.gSheet.facebook_budget": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "facebook_budget", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.facebook_budget", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "facebook_budget"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_facebook_budget__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_facebook_budget__*`", "created_at": 1703652762.1440022}, "source.sado_analytics_services.gSheet._ext_pancake_tags": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "_ext_pancake_tags", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet._ext_pancake_tags", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "_ext_pancake_tags"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_pancake_tags", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_pancake_tags`", "created_at": 1703652762.1441932}}, "macros": {"macro.sado_analytics_services.source": {"name": "source", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/source_overide.sql", "original_file_path": "macros/source_overide.sql", "unique_id": "macro.sado_analytics_services.source", "macro_sql": "{% macro source(\n        source_name,\n        table_name\n    ) %}\n    {% set original_source = builtins.source(\n        source_name,\n        table_name\n    ) %}\n    {% if (not 'ignore' in config.get('tags') and config.get('materialized') in ['table','view']) and target.name != 'prod'%}\n        {% set limit_result %}\n                (\n                    SELECT\n                        *\n                    FROM\n                        {{ original_source }}\n                    LIMIT\n                        1000\n                )\n        {% endset %}\n        {% do return(limit_result) %}\n    {% else %}\n        {% do return(original_source) %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.sado_analytics_services.source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.030263, "supported_languages": null}, "macro.sado_analytics_services.deduplicate_cte": {"name": "deduplicate_cte", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/deduplicate_cte.sql", "original_file_path": "macros/deduplicate_cte.sql", "unique_id": "macro.sado_analytics_services.deduplicate_cte", "macro_sql": "{% macro deduplicate_cte(\n        cte,\n        partition_fields,\n        last_updated_fields\n    ) %}\n    deduplicate_cte AS (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY {{ partition_fields | join(',') }}\n                ORDER BY\n                    {{ last_updated_fields | join(' desc,') }} DESC\n            ) AS rn_\n        FROM\n            {{ cte | string() }}\n    )\nSELECT\n    *\nEXCEPT(rn_)\nFROM\n    deduplicate_cte\nWHERE\n    rn_ = 1\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.031233, "supported_languages": null}, "macro.sado_analytics_services.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/union_relations_overide.sql", "original_file_path": "macros/union_relations_overide.sql", "unique_id": "macro.sado_analytics_services.union_relations", "macro_sql": "{% macro union_relations(\n        relations,\n        exclude,\n        include\n    ) %}\n    {% if target.name != 'prod' %}\n        {% set overide_union %}\n        {% for relation in relations %}\n        SELECT\n            {% if include is defined %}\n                {{ include | join(',') }}\n            {% else %}\n                * {% if exclude is defined %}\n                EXCEPT\n                    (\n                        {{ exclude | join(',') }}\n                    )\n                {% endif %}\n            {% endif %}\n        FROM\n            {{ relation }}\n            {{ 'union all' if not loop.last }}\n        {% endfor %}\n\n        {% endset %}\n        {% do return(overide_union) %}\n    {% else %}\n        {% set dbt_utils_unions = dbt_utils.union_relations(\n            relations = relations,\n            exclude = exclude,\n            include = include\n        ) %}\n        {% do return(dbt_utils_unions) %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.034368, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_catalog": {"name": "bigquery__get_catalog", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_catalog", "macro_sql": "{% macro bigquery__get_catalog(information_schema, schemas) -%}\n\n  {%- if (schemas | length) == 0 -%}\n    {# Hopefully nothing cares about the columns we return when there are no rows #}\n    {%- set query  = \"select 1 as id limit 0\" -%}\n  {%- else -%}\n\n  {%- set query -%}\n    with tables as (\n        select\n            project_id as table_database,\n            dataset_id as table_schema,\n            table_id as original_table_name,\n\n            concat(project_id, '.', dataset_id, '.', table_id) as relation_id,\n\n            row_count,\n            size_bytes as size_bytes,\n            case\n                when type = 1 then 'table'\n                when type = 2 then 'view'\n                else 'external'\n            end as table_type,\n\n            REGEXP_CONTAINS(table_id, '^.+[0-9]{8}$') and coalesce(type, 0) = 1 as is_date_shard,\n            REGEXP_EXTRACT(table_id, '^(.+)[0-9]{8}$') as shard_base_name,\n            REGEXP_EXTRACT(table_id, '^.+([0-9]{8})$') as shard_name\n\n        from {{ information_schema.replace(information_schema_view='__TABLES__') }}\n        where (\n          {%- for schema in schemas -%}\n            upper(dataset_id) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n          {%- endfor -%}\n        )\n    ),\n\n    table_options as (\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            JSON_VALUE(option_value) as table_comment\n\n        from {{ information_schema.replace(information_schema_view='TABLE_OPTIONS') }}\n        where option_name = 'description'\n    ),\n    extracted as (\n\n        select *,\n            case\n                when is_date_shard then shard_base_name\n                else original_table_name\n            end as table_name\n\n        from tables\n\n    ),\n\n    unsharded_tables as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            coalesce(table_type, 'external') as table_type,\n            is_date_shard,\n\n            struct(\n                min(shard_name) as shard_min,\n                max(shard_name) as shard_max,\n                count(*) as shard_count\n            ) as table_shards,\n\n            sum(size_bytes) as size_bytes,\n            sum(row_count) as row_count,\n\n            max(relation_id) as relation_id\n\n        from extracted\n        group by 1,2,3,4,5\n\n    ),\n\n    info_schema_columns as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            table_catalog as table_database,\n            table_schema,\n            table_name,\n\n            -- use the \"real\" column name from the paths query below\n            column_name as base_column_name,\n            ordinal_position as column_index,\n\n            is_partitioning_column,\n            clustering_ordinal_position\n\n        from {{ information_schema.replace(information_schema_view='COLUMNS') }}\n        where ordinal_position is not null\n\n    ),\n\n    info_schema_column_paths as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            field_path as column_name,\n            data_type as column_type,\n            column_name as base_column_name,\n            description as column_comment\n\n        from {{ information_schema.replace(information_schema_view='COLUMN_FIELD_PATHS') }}\n\n    ),\n\n    columns as (\n\n        select * except (base_column_name)\n        from info_schema_columns\n        join info_schema_column_paths using (relation_id, base_column_name)\n\n    ),\n\n    column_stats as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            max(relation_id) as relation_id,\n            max(case when is_partitioning_column = 'YES' then 1 else 0 end) = 1 as is_partitioned,\n            max(case when is_partitioning_column = 'YES' then column_name else null end) as partition_column,\n            max(case when clustering_ordinal_position is not null then 1 else 0 end) = 1 as is_clustered,\n            array_to_string(\n                array_agg(\n                    case\n                        when clustering_ordinal_position is not null then column_name\n                        else null\n                    end ignore nulls\n                    order by clustering_ordinal_position\n                ), ', '\n            ) as clustering_columns\n\n        from columns\n        group by 1,2,3\n\n    )\n\n    select\n        unsharded_tables.table_database,\n        unsharded_tables.table_schema,\n        case\n            when is_date_shard then concat(unsharded_tables.table_name, '*')\n            else unsharded_tables.table_name\n        end as table_name,\n        unsharded_tables.table_type,\n        table_options.table_comment,\n\n        -- coalesce name and type for External tables - these columns are not\n        -- present in the COLUMN_FIELD_PATHS resultset\n        coalesce(columns.column_name, '<unknown>') as column_name,\n        -- invent a row number to account for nested fields -- BQ does\n        -- not treat these nested properties as independent fields\n        row_number() over (\n            partition by relation_id\n            order by columns.column_index, columns.column_name\n        ) as column_index,\n        coalesce(columns.column_type, '<unknown>') as column_type,\n        columns.column_comment,\n\n        'Shard count' as `stats__date_shards__label`,\n        table_shards.shard_count as `stats__date_shards__value`,\n        'The number of date shards in this table' as `stats__date_shards__description`,\n        is_date_shard as `stats__date_shards__include`,\n\n        'Shard (min)' as `stats__date_shard_min__label`,\n        table_shards.shard_min as `stats__date_shard_min__value`,\n        'The first date shard in this table' as `stats__date_shard_min__description`,\n        is_date_shard as `stats__date_shard_min__include`,\n\n        'Shard (max)' as `stats__date_shard_max__label`,\n        table_shards.shard_max as `stats__date_shard_max__value`,\n        'The last date shard in this table' as `stats__date_shard_max__description`,\n        is_date_shard as `stats__date_shard_max__include`,\n\n        '# Rows' as `stats__num_rows__label`,\n        row_count as `stats__num_rows__value`,\n        'Approximate count of rows in this table' as `stats__num_rows__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_rows__include`,\n\n        'Approximate Size' as `stats__num_bytes__label`,\n        size_bytes as `stats__num_bytes__value`,\n        'Approximate size of table as reported by BigQuery' as `stats__num_bytes__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_bytes__include`,\n\n        'Partitioned By' as `stats__partitioning_type__label`,\n        partition_column as `stats__partitioning_type__value`,\n        'The partitioning column for this table' as `stats__partitioning_type__description`,\n        is_partitioned as `stats__partitioning_type__include`,\n\n        'Clustered By' as `stats__clustering_fields__label`,\n        clustering_columns as `stats__clustering_fields__value`,\n        'The clustering columns for this table' as `stats__clustering_fields__description`,\n        is_clustered as `stats__clustering_fields__include`\n\n    -- join using relation_id (an actual relation, not a shard prefix) to make\n    -- sure that column metadata is picked up through the join. This will only\n    -- return the column information for the \"max\" table in a date-sharded table set\n    from unsharded_tables\n    left join table_options using (relation_id)\n    left join columns using (relation_id)\n    left join column_stats using (relation_id)\n  {%- endset -%}\n\n  {%- endif -%}\n\n  {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0417285, "supported_languages": null}, "macro.dbt_bigquery.date_sharded_table": {"name": "date_sharded_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.date_sharded_table", "macro_sql": "{% macro date_sharded_table(base_name) %}\n    {{ return(base_name ~ \"[DBT__PARTITION_DATE]\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0424635, "supported_languages": null}, "macro.dbt_bigquery.grant_access_to": {"name": "grant_access_to", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.grant_access_to", "macro_sql": "{% macro grant_access_to(entity, entity_type, role, grant_target_dict) -%}\n  {% do adapter.grant_access_to(entity, entity_type, role, grant_target_dict) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0430088, "supported_languages": null}, "macro.dbt_bigquery.get_partitions_metadata": {"name": "get_partitions_metadata", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.get_partitions_metadata", "macro_sql": "\n\n{%- macro get_partitions_metadata(table) -%}\n  {%- if execute -%}\n    {%- set res = adapter.get_partitions_metadata(table) -%}\n    {{- return(res) -}}\n  {%- endif -%}\n  {{- return(None) -}}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0436964, "supported_languages": null}, "macro.dbt_bigquery.partition_by": {"name": "partition_by", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.partition_by", "macro_sql": "{% macro partition_by(partition_config) -%}\n    {%- if partition_config is none -%}\n      {% do return('') %}\n    {%- elif partition_config.time_ingestion_partitioning -%}\n        partition by {{ partition_config.render_wrapped() }}\n    {%- elif partition_config.data_type | lower in ('date','timestamp','datetime') -%}\n        partition by {{ partition_config.render() }}\n    {%- elif partition_config.data_type | lower in ('int64') -%}\n        {%- set range = partition_config.range -%}\n        partition by range_bucket(\n            {{ partition_config.field }},\n            generate_array({{ range.start}}, {{ range.end }}, {{ range.interval }})\n        )\n    {%- endif -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0539749, "supported_languages": null}, "macro.dbt_bigquery.cluster_by": {"name": "cluster_by", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.cluster_by", "macro_sql": "{% macro cluster_by(raw_cluster_by) %}\n  {%- if raw_cluster_by is not none -%}\n  cluster by {% if raw_cluster_by is string -%}\n    {% set raw_cluster_by = [raw_cluster_by] %}\n  {%- endif -%}\n  {%- for cluster in raw_cluster_by -%}\n    {{ cluster }}\n    {%- if not loop.last -%}, {% endif -%}\n  {%- endfor -%}\n\n  {% endif %}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0553336, "supported_languages": null}, "macro.dbt_bigquery.bigquery_options": {"name": "bigquery_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery_options", "macro_sql": "{% macro bigquery_options(opts) %}\n  {% set options -%}\n    OPTIONS({% for opt_key, opt_val in opts.items() %}\n      {{ opt_key }}={{ opt_val }}{{ \",\" if not loop.last }}\n    {% endfor %})\n  {%- endset %}\n  {%- do return(options) -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0563052, "supported_languages": null}, "macro.dbt_bigquery.bigquery_table_options": {"name": "bigquery_table_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery_table_options", "macro_sql": "{% macro bigquery_table_options(config, node, temporary) %}\n  {% set opts = adapter.get_table_options(config, node, temporary) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0569894, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_table_as": {"name": "bigquery__create_table_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_table_as", "macro_sql": "{% macro bigquery__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {%- if language == 'sql' -%}\n    {%- set raw_partition_by = config.get('partition_by', none) -%}\n    {%- set raw_cluster_by = config.get('cluster_by', none) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- set partition_config = adapter.parse_partition_by(raw_partition_by) -%}\n    {%- if partition_config.time_ingestion_partitioning -%}\n    {%- set columns = get_columns_with_types_in_query_sql(sql) -%}\n    {%- set table_dest_columns_csv = columns_without_partition_fields_csv(partition_config, columns) -%}\n    {%- set columns = '(' ~ table_dest_columns_csv ~ ')' -%}\n    {%- endif -%}\n\n    {{ sql_header if sql_header is not none }}\n\n    create or replace table {{ relation }}\n      {%- set contract_config = config.get('contract') -%}\n      {%- if contract_config.enforced -%}\n        {{ get_assert_columns_equivalent(compiled_code) }}\n        {{ get_table_columns_and_constraints() }}\n        {%- set compiled_code = get_select_subquery(compiled_code) %}\n      {% else %}\n        {#-- cannot do contracts at the same time as time ingestion partitioning -#}\n        {{ columns }}\n      {% endif %}\n    {{ partition_by(partition_config) }}\n    {{ cluster_by(raw_cluster_by) }}\n\n    {{ bigquery_table_options(config, model, temporary) }}\n\n    {#-- PARTITION BY cannot be used with the AS query_statement clause.\n         https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language#partition_expression\n    -#}\n    {%- if not partition_config.time_ingestion_partitioning %}\n    as (\n      {{ compiled_code }}\n    );\n    {%- endif %}\n  {%- elif language == 'python' -%}\n    {#--\n    N.B. Python models _can_ write to temp views HOWEVER they use a different session\n    and have already expired by the time they need to be used (I.E. in merges for incremental models)\n\n    TODO: Deep dive into spark sessions to see if we can reuse a single session for an entire\n    dbt invocation.\n     --#}\n\n    {#-- when a user wants to change the schema of an existing relation, they must intentionally drop the table in the dataset --#}\n    {%- set old_relation = adapter.get_relation(database=relation.database, schema=relation.schema, identifier=relation.identifier) -%}\n    {%- if (old_relation.is_table and (should_full_refresh())) -%}\n      {% do adapter.drop_relation(relation) %}\n    {%- endif -%}\n    {{ py_write_table(compiled_code=compiled_code, target_relation=relation.quote(database=False, schema=False, identifier=False)) }}\n  {%- else -%}\n    {% do exceptions.raise_compiler_error(\"bigquery__create_table_as macro didn't get supported language, it got %s\" % language) %}\n  {%- endif -%}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.get_columns_with_types_in_query_sql", "macro.dbt_bigquery.columns_without_partition_fields_csv", "macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery", "macro.dbt_bigquery.partition_by", "macro.dbt_bigquery.cluster_by", "macro.dbt_bigquery.bigquery_table_options", "macro.dbt.should_full_refresh", "macro.dbt_bigquery.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0616472, "supported_languages": null}, "macro.dbt_bigquery.bigquery_view_options": {"name": "bigquery_view_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery_view_options", "macro_sql": "{% macro bigquery_view_options(config, node) %}\n  {% set opts = adapter.get_view_options(config, node) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0622966, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_view_as": {"name": "bigquery__create_view_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_view_as", "macro_sql": "{% macro bigquery__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace view {{ relation }}\n  {{ bigquery_view_options(config, model) }}\n  {%- set contract_config = config.get('contract') -%}\n  {%- if contract_config.enforced -%}\n    {{ get_assert_columns_equivalent(sql) }}\n  {%- endif %}\n  as {{ sql }};\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_view_options", "macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0634842, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_schema": {"name": "bigquery__drop_schema", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_schema", "macro_sql": "{% macro bigquery__drop_schema(relation) -%}\n  {{ adapter.drop_schema(relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0638483, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_relation": {"name": "bigquery__drop_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_relation", "macro_sql": "{% macro bigquery__drop_relation(relation) -%}\n  {% call statement('drop_relation') -%}\n    drop {{ relation.type }} if exists {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0643492, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_columns_in_relation": {"name": "bigquery__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_columns_in_relation", "macro_sql": "{% macro bigquery__get_columns_in_relation(relation) -%}\n  {{ return(adapter.get_columns_in_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0647352, "supported_languages": null}, "macro.dbt_bigquery.bigquery__list_relations_without_caching": {"name": "bigquery__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__list_relations_without_caching", "macro_sql": "{% macro bigquery__list_relations_without_caching(schema_relation) -%}\n  {{ return(adapter.list_relations_without_caching(schema_relation)) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.06511, "supported_languages": null}, "macro.dbt_bigquery.bigquery__list_schemas": {"name": "bigquery__list_schemas", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__list_schemas", "macro_sql": "{% macro bigquery__list_schemas(database) -%}\n  {{ return(adapter.list_schemas(database)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0654874, "supported_languages": null}, "macro.dbt_bigquery.bigquery__check_schema_exists": {"name": "bigquery__check_schema_exists", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__check_schema_exists", "macro_sql": "{% macro bigquery__check_schema_exists(information_schema, schema) %}\n  {{ return(adapter.check_schema_exists(information_schema.database, schema)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0659614, "supported_languages": null}, "macro.dbt_bigquery.bigquery__persist_docs": {"name": "bigquery__persist_docs", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__persist_docs", "macro_sql": "{% macro bigquery__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do alter_column_comment(relation, model.columns) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0666804, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_column_comment": {"name": "bigquery__alter_column_comment", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_column_comment", "macro_sql": "{% macro bigquery__alter_column_comment(relation, column_dict) -%}\n  {% do adapter.update_columns(relation, column_dict) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0670938, "supported_languages": null}, "macro.dbt_bigquery.bigquery__rename_relation": {"name": "bigquery__rename_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__rename_relation", "macro_sql": "{% macro bigquery__rename_relation(from_relation, to_relation) -%}\n  {% do adapter.rename_relation(from_relation, to_relation) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.067513, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_relation_add_columns": {"name": "bigquery__alter_relation_add_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_relation_add_columns", "macro_sql": "{% macro bigquery__alter_relation_add_columns(relation, add_columns) %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n        {% for column in add_columns %}\n          add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n        {% endfor %}\n\n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0685933, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_relation_drop_columns": {"name": "bigquery__alter_relation_drop_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_relation_drop_columns", "macro_sql": "{% macro bigquery__alter_relation_drop_columns(relation, drop_columns) %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n        {% for column in drop_columns %}\n          drop column {{ column.name }}{{ ',' if not loop.last }}\n        {% endfor %}\n\n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0695744, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_column_type": {"name": "bigquery__alter_column_type", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_column_type", "macro_sql": "{% macro bigquery__alter_column_type(relation, column_name, new_column_type) -%}\n  {#-- Changing a column's data type using a query requires you to scan the entire table.\n    The query charges can be significant if the table is very large.\n\n    https://cloud.google.com/bigquery/docs/manually-changing-schemas#changing_a_columns_data_type\n  #}\n  {% set relation_columns = get_columns_in_relation(relation) %}\n\n  {% set sql %}\n    select\n      {%- for col in relation_columns -%}\n        {% if col.column == column_name %}\n          CAST({{ col.quoted }} AS {{ new_column_type }}) AS {{ col.quoted }}\n        {%- else %}\n          {{ col.quoted }}\n        {%- endif %}\n        {%- if not loop.last %},{% endif -%}\n      {%- endfor %}\n    from {{ relation }}\n  {% endset %}\n\n  {% call statement('alter_column_type') %}\n    {{ create_table_as(False, relation, sql)}}\n  {%- endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_relation", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0714142, "supported_languages": null}, "macro.dbt_bigquery.bigquery__test_unique": {"name": "bigquery__test_unique", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__test_unique", "macro_sql": "{% macro bigquery__test_unique(model, column_name) %}\n\nwith dbt_test__target as (\n\n  select {{ column_name }} as unique_field\n  from {{ model }}\n  where {{ column_name }} is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0718846, "supported_languages": null}, "macro.dbt_bigquery.bigquery__upload_file": {"name": "bigquery__upload_file", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__upload_file", "macro_sql": "{% macro bigquery__upload_file(local_file_path, database, table_schema, table_name) %}\n\n  {{ log(\"kwargs: \" ~ kwargs) }}\n\n  {% do adapter.upload_file(local_file_path, database, table_schema, table_name, kwargs=kwargs) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.072612, "supported_languages": null}, "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy": {"name": "dbt_bigquery_validate_get_incremental_strategy", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_bigquery_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\") or 'merge' -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'insert_overwrite'\n  {%- endset %}\n  {% if strategy not in ['merge', 'insert_overwrite'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0770862, "supported_languages": null}, "macro.dbt_bigquery.source_sql_with_partition": {"name": "source_sql_with_partition", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.source_sql_with_partition", "macro_sql": "{% macro source_sql_with_partition(partition_by, source_sql) %}\n\n  {%- if partition_by.time_ingestion_partitioning %}\n    {{ return(wrap_with_time_ingestion_partitioning_sql(partition_by, source_sql, False))  }}\n  {% else %}\n    {{ return(source_sql)  }}\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0778234, "supported_languages": null}, "macro.dbt_bigquery.bq_create_table_as": {"name": "bq_create_table_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.bq_create_table_as", "macro_sql": "{% macro bq_create_table_as(partition_by, temporary, relation, compiled_code, language='sql') %}\n  {%- set _dbt_max_partition = declare_dbt_max_partition(this, partition_by, compiled_code, language) -%}\n  {% if partition_by.time_ingestion_partitioning and language == 'python' %}\n    {% do exceptions.raise_compiler_error(\n      \"Python models do not support ingestion time partitioning\"\n    ) %}\n  {% elif partition_by.time_ingestion_partitioning and language == 'sql' %}\n    {#-- Create the table before inserting data as ingestion time partitioned tables can't be created with the transformed data --#}\n    {% do run_query(create_table_as(temporary, relation, compiled_code)) %}\n    {{ return(_dbt_max_partition + bq_insert_into_ingestion_time_partitioned_table_sql(relation, compiled_code)) }}\n  {% else %}\n    {{ return(_dbt_max_partition + create_table_as(temporary, relation, compiled_code, language)) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.declare_dbt_max_partition", "macro.dbt.run_query", "macro.dbt.create_table_as", "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.079721, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_build_sql": {"name": "bq_generate_incremental_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro_sql": "{% macro bq_generate_incremental_build_sql(\n    strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions, incremental_predicates\n) %}\n  {#-- if partitioned, use BQ scripting to get the range of partition values to be updated --#}\n  {% if strategy == 'insert_overwrite' %}\n\n    {% set build_sql = bq_generate_incremental_insert_overwrite_build_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n    ) %}\n\n  {% else %} {# strategy == 'merge' #}\n\n    {% set build_sql = bq_generate_incremental_merge_build_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, incremental_predicates\n    ) %}\n\n  {% endif %}\n\n  {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql", "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0813792, "supported_languages": null}, "macro.dbt_bigquery.materialization_incremental_bigquery": {"name": "materialization_incremental_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.materialization_incremental_bigquery", "macro_sql": "{% materialization incremental, adapter='bigquery', supported_languages=['sql', 'python'] -%}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n  {%- set language = model['language'] %}\n\n  {%- set target_relation = this %}\n  {%- set existing_relation = load_relation(this) %}\n  {%- set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_bigquery_validate_get_incremental_strategy(config) -%}\n\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set partitions = config.get('partitions', none) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n  {% set incremental_predicates = config.get('predicates', default=none) or config.get('incremental_predicates', default=none) %}\n\n   -- grab current tables grants config for comparison later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if partition_by.copy_partitions is true and strategy != 'insert_overwrite' %} {#-- We can't copy partitions with merge strategy --#}\n        {% set wrong_strategy_msg -%}\n        The 'copy_partitions' option requires the 'incremental_strategy' option to be set to 'insert_overwrite'.\n        {%- endset %}\n        {% do exceptions.raise_compiler_error(wrong_strategy_msg) %}\n\n  {% elif existing_relation is none %}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% elif existing_relation.is_view %}\n      {#-- There's no way to atomically replace a view with a table on BQ --#}\n      {{ adapter.drop_relation(existing_relation) }}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% elif full_refresh_mode %}\n      {#-- If the partition/cluster config has changed, then we must drop and recreate --#}\n      {% if not adapter.is_replaceable(existing_relation, partition_by, cluster_by) %}\n          {% do log(\"Hard refreshing \" ~ existing_relation ~ \" because it is not replaceable\") %}\n          {{ adapter.drop_relation(existing_relation) }}\n      {% endif %}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% else %}\n    {%- if language == 'python' and strategy == 'insert_overwrite' -%}\n      {#-- This lets us move forward assuming no python will be directly templated into a query --#}\n      {%- set python_unsupported_msg -%}\n        The 'insert_overwrite' strategy is not yet supported for python models.\n      {%- endset %}\n      {% do exceptions.raise_compiler_error(python_unsupported_msg) %}\n    {%- endif -%}\n\n    {% set tmp_relation_exists = false %}\n    {% if on_schema_change != 'ignore' or language == 'python' %}\n      {#-- Check first, since otherwise we may not build a temp table --#}\n      {#-- Python always needs to create a temp table --#}\n      {%- call statement('create_tmp_relation', language=language) -%}\n        {{ bq_create_table_as(partition_by, True, tmp_relation, compiled_code, language) }}\n      {%- endcall -%}\n      {% set tmp_relation_exists = true %}\n      {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n      {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% endif %}\n\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {#--  Add time ingestion pseudo column to destination column as not part of the 'schema' but still need it for actual data insertion --#}\n    {% if partition_by.time_ingestion_partitioning %}\n      {% set dest_columns = adapter.add_time_ingestion_partition_column(partition_by, dest_columns) %}\n    {% endif %}\n\n    {% set build_sql = bq_generate_incremental_build_sql(\n        strategy, tmp_relation, target_relation, compiled_code, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, partition_by.copy_partitions, incremental_predicates\n    ) %}\n\n    {%- call statement('main') -%}\n      {{ build_sql }}\n    {% endcall %}\n\n    {%- if language == 'python' and tmp_relation -%}\n      {{ adapter.drop_relation(tmp_relation) }}\n    {%- endif -%}\n\n  {% endif %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.process_schema_changes", "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0915356, "supported_languages": ["sql", "python"]}, "macro.dbt_bigquery.bigquery__create_csv_table": {"name": "bigquery__create_csv_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_csv_table", "macro_sql": "{% macro bigquery__create_csv_table(model, agate_table) %}\n    -- no-op\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.09247, "supported_languages": null}, "macro.dbt_bigquery.bigquery__reset_csv_table": {"name": "bigquery__reset_csv_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__reset_csv_table", "macro_sql": "{% macro bigquery__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0928953, "supported_languages": null}, "macro.dbt_bigquery.bigquery__load_csv_rows": {"name": "bigquery__load_csv_rows", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__load_csv_rows", "macro_sql": "{% macro bigquery__load_csv_rows(model, agate_table) %}\n\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {{ adapter.load_dataframe(model['database'], model['schema'], model['alias'],\n  \t\t\t\t\t\t\tagate_table, column_override) }}\n\n  {% call statement() %}\n    alter table {{ this.render() }} set {{ bigquery_table_options(config, model) }}\n  {% endcall %}\n\n  {% if config.persist_relation_docs() and 'description' in model %}\n\n  \t{{ adapter.update_table_description(model['database'], model['schema'], model['alias'], model['description']) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_bigquery.bigquery_table_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0947795, "supported_languages": null}, "macro.dbt_bigquery.materialization_copy_bigquery": {"name": "materialization_copy_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/copy.sql", "original_file_path": "macros/materializations/copy.sql", "unique_id": "macro.dbt_bigquery.materialization_copy_bigquery", "macro_sql": "{% materialization copy, adapter='bigquery' -%}\n\n  {# Setup #}\n  {{ run_hooks(pre_hooks) }}\n\n  {% set destination = this.incorporate(type='table') %}\n\n  {# there can be several ref() or source() according to BQ copy API docs #}\n  {# cycle over ref() and source() to create source tables array #}\n  {% set source_array = [] %}\n  {% for ref_table in model.refs %}\n    {{ source_array.append(ref(*ref_table)) }}\n  {% endfor %}\n\n  {% for src_table in model.sources %}\n    {{ source_array.append(source(*src_table)) }}\n  {% endfor %}\n\n  {# Call adapter copy_table function #}\n  {%- set result_str = adapter.copy_table(\n      source_array,\n      destination,\n      config.get('copy_materialization', default = 'table')) -%}\n\n  {{ store_result('main', response=result_str) }}\n\n  {# Clean up #}\n  {{ run_hooks(post_hooks) }}\n  {%- do apply_grants(target_relation, grant_config) -%}\n  {{ adapter.commit() }}\n\n  {{ return({'relations': [destination]}) }}\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0977497, "supported_languages": ["sql"]}, "macro.dbt_bigquery.bigquery__handle_existing_table": {"name": "bigquery__handle_existing_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_bigquery.bigquery__handle_existing_table", "macro_sql": "{% macro bigquery__handle_existing_table(full_refresh, old_relation) %}\n    {%- if full_refresh -%}\n      {{ adapter.drop_relation(old_relation) }}\n    {%- else -%}\n      {{ exceptions.relation_wrong_type(old_relation, 'view') }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.0990443, "supported_languages": null}, "macro.dbt_bigquery.materialization_view_bigquery": {"name": "materialization_view_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_bigquery.materialization_view_bigquery", "macro_sql": "{% materialization view, adapter='bigquery' -%}\n    -- grab current tables grants config for comparision later on\n    {% set grant_config = config.get('grants') %}\n\n    {% set to_return = create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {% if config.get('grant_access_to') %}\n      {% for grant_target_dict in config.get('grant_access_to') %}\n        {% do adapter.grant_access_to(this, 'view', None, grant_target_dict) %}\n      {% endfor %}\n    {% endif %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1007717, "supported_languages": ["sql"]}, "macro.dbt_bigquery.materialization_table_bigquery": {"name": "materialization_table_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_bigquery.materialization_table_bigquery", "macro_sql": "{% materialization table, adapter='bigquery', supported_languages=['sql', 'python']-%}\n\n  {%- set language = model['language'] -%}\n  {%- set identifier = model['alias'] -%}\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n  {%- set target_relation = api.Relation.create(database=database, schema=schema, identifier=identifier, type='table') -%}\n\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {#\n      We only need to drop this thing if it is not a table.\n      If it _is_ already a table, then we can overwrite it without downtime\n      Unlike table -> view, no need for `--full-refresh`: dropping a view is no big deal\n  #}\n  {%- if exists_not_as_table -%}\n      {{ adapter.drop_relation(old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n  {% if not adapter.is_replaceable(old_relation, partition_by, cluster_by) %}\n    {% do log(\"Hard refreshing \" ~ old_relation ~ \" because it is not replaceable\") %}\n    {% do adapter.drop_relation(old_relation) %}\n  {% endif %}\n\n  -- build model\n  {%- call statement('main', language=language) -%}\n    {{ create_table_as(False, target_relation, compiled_code, language) }}\n  {%- endcall -%}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.108043, "supported_languages": ["sql", "python"]}, "macro.dbt_bigquery.py_write_table": {"name": "py_write_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_bigquery.py_write_table", "macro_sql": "{% macro py_write_table(compiled_code, target_relation) %}\nfrom pyspark.sql import SparkSession\n\nspark = SparkSession.builder.appName('smallTest').getOrCreate()\n\nspark.conf.set(\"viewsEnabled\",\"true\")\nspark.conf.set(\"temporaryGcsBucket\",\"{{target.gcs_bucket}}\")\n\n{{ compiled_code }}\ndbt = dbtObj(spark.read.format(\"bigquery\").load)\ndf = model(dbt, spark)\n\n# COMMAND ----------\n# this is materialization code dbt generated, please do not modify\n\nimport pyspark\n# make sure pandas exists before using it\ntry:\n  import pandas\n  pandas_available = True\nexcept ImportError:\n  pandas_available = False\n\n# make sure pyspark.pandas exists before using it\ntry:\n  import pyspark.pandas\n  pyspark_pandas_api_available = True\nexcept ImportError:\n  pyspark_pandas_api_available = False\n\n# make sure databricks.koalas exists before using it\ntry:\n  import databricks.koalas\n  koalas_available = True\nexcept ImportError:\n  koalas_available = False\n\n# preferentially convert pandas DataFrames to pandas-on-Spark or Koalas DataFrames first\n# since they know how to convert pandas DataFrames better than `spark.createDataFrame(df)`\n# and converting from pandas-on-Spark to Spark DataFrame has no overhead\nif pyspark_pandas_api_available and pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = pyspark.pandas.frame.DataFrame(df)\nelif koalas_available and pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = databricks.koalas.frame.DataFrame(df)\n\n# convert to pyspark.sql.dataframe.DataFrame\nif isinstance(df, pyspark.sql.dataframe.DataFrame):\n  pass  # since it is already a Spark DataFrame\nelif pyspark_pandas_api_available and isinstance(df, pyspark.pandas.frame.DataFrame):\n  df = df.to_spark()\nelif koalas_available and isinstance(df, databricks.koalas.frame.DataFrame):\n  df = df.to_spark()\nelif pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = spark.createDataFrame(df)\nelse:\n  msg = f\"{type(df)} is not a supported type for dbt Python materialization\"\n  raise Exception(msg)\n\ndf.write \\\n  .mode(\"overwrite\") \\\n  .format(\"bigquery\") \\\n  .option(\"writeMethod\", \"direct\").option(\"writeDisposition\", 'WRITE_TRUNCATE') \\\n  .save(\"{{target_relation}}\")\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1087787, "supported_languages": null}, "macro.dbt_bigquery.bigquery__snapshot_hash_arguments": {"name": "bigquery__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__snapshot_hash_arguments", "macro_sql": "{% macro bigquery__snapshot_hash_arguments(args) -%}\n  to_hex(md5(concat({%- for arg in args -%}\n    coalesce(cast({{ arg }} as string), ''){% if not loop.last %}, '|',{% endif -%}\n  {%- endfor -%}\n  )))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.109709, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_columns": {"name": "bigquery__create_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_columns", "macro_sql": "{% macro bigquery__create_columns(relation, columns) %}\n  {{ adapter.alter_table_add_columns(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1101186, "supported_languages": null}, "macro.dbt_bigquery.bigquery__post_snapshot": {"name": "bigquery__post_snapshot", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__post_snapshot", "macro_sql": "{% macro bigquery__post_snapshot(staging_relation) %}\n  -- Clean up the snapshot temp table\n  {% do drop_relation(staging_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1104841, "supported_languages": null}, "macro.dbt_bigquery.bigquery__can_clone_table": {"name": "bigquery__can_clone_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_bigquery.bigquery__can_clone_table", "macro_sql": "{% macro bigquery__can_clone_table() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1109643, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_or_replace_clone": {"name": "bigquery__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_or_replace_clone", "macro_sql": "{% macro bigquery__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace\n      table {{ this_relation }}\n      clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1113164, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql": {"name": "bq_generate_incremental_merge_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/merge.sql", "original_file_path": "macros/materializations/incremental_strategy/merge.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql", "macro_sql": "{% macro bq_generate_incremental_merge_build_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, incremental_predicates\n) %}\n    {%- set source_sql -%}\n        {%- if tmp_relation_exists -%}\n        (\n        select\n        {% if partition_by.time_ingestion_partitioning -%}\n        {{ partition_by.insertable_time_partitioning_field() }},\n        {%- endif -%}\n        * from {{ tmp_relation }}\n        )\n        {%- else -%} {#-- wrap sql in parens to make it a subquery --#}\n        (\n            {%- if partition_by.time_ingestion_partitioning -%}\n            {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, True) }}\n            {%- else -%}\n            {{sql}}\n            {%- endif %}\n        )\n        {%- endif -%}\n    {%- endset -%}\n\n    {% set build_sql = get_merge_sql(target_relation, source_sql, unique_key, dest_columns, incremental_predicates) %}\n\n    {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1134918, "supported_languages": null}, "macro.dbt_bigquery.declare_dbt_max_partition": {"name": "declare_dbt_max_partition", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/common.sql", "original_file_path": "macros/materializations/incremental_strategy/common.sql", "unique_id": "macro.dbt_bigquery.declare_dbt_max_partition", "macro_sql": "{% macro declare_dbt_max_partition(relation, partition_by, compiled_code, language='sql') %}\n\n  {#-- TODO: revisit partitioning with python models --#}\n  {%- if '_dbt_max_partition' in compiled_code and language == 'sql' -%}\n\n    declare _dbt_max_partition {{ partition_by.data_type_for_partition() }} default (\n      select max({{ partition_by.field }}) from {{ this }}\n      where {{ partition_by.field }} is not null\n    );\n\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.114581, "supported_languages": null}, "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql": {"name": "wrap_with_time_ingestion_partitioning_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro_sql": "{% macro wrap_with_time_ingestion_partitioning_sql(partition_by, sql, is_nested) %}\n\n  select TIMESTAMP({{ partition_by.field }}) as {{ partition_by.insertable_time_partitioning_field() }}, * EXCEPT({{ partition_by.field }}) from (\n    {{ sql }}\n  ){%- if not is_nested -%};{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.117341, "supported_languages": null}, "macro.dbt_bigquery.get_quoted_with_types_csv": {"name": "get_quoted_with_types_csv", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.get_quoted_with_types_csv", "macro_sql": "{% macro get_quoted_with_types_csv(columns) %}\n    {% set quoted = [] %}\n    {% for col in columns -%}\n        {%- do quoted.append(adapter.quote(col.name) ~ \" \" ~ col.data_type) -%}\n    {%- endfor %}\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.118517, "supported_languages": null}, "macro.dbt_bigquery.columns_without_partition_fields_csv": {"name": "columns_without_partition_fields_csv", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.columns_without_partition_fields_csv", "macro_sql": "{% macro columns_without_partition_fields_csv(partition_config, columns) -%}\n  {%- set columns_no_partition = partition_config.reject_partition_field_column(columns) -%}\n  {% set columns_names = get_quoted_with_types_csv(columns_no_partition) %}\n  {{ return(columns_names) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.get_quoted_with_types_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1191938, "supported_languages": null}, "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql": {"name": "bq_insert_into_ingestion_time_partitioned_table_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql", "macro_sql": "{% macro bq_insert_into_ingestion_time_partitioned_table_sql(target_relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  {{ sql_header if sql_header is not none }}\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {% set dest_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set dest_columns_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n  insert into {{ target_relation }} ({{ partition_by.insertable_time_partitioning_field() }}, {{ dest_columns_csv }})\n    {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, False) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1208894, "supported_languages": null}, "macro.dbt_bigquery.get_columns_with_types_in_query_sql": {"name": "get_columns_with_types_in_query_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.get_columns_with_types_in_query_sql", "macro_sql": "{% macro get_columns_with_types_in_query_sql(select_sql) %}\n  {% set sql %}\n    {%- set sql_header = config.get('sql_header', none) -%}\n    {{ sql_header if sql_header is not none }}\n    select * from (\n      {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n  {% endset %}\n  {{ return(adapter.get_columns_in_select_sql(sql)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1218, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql": {"name": "bq_generate_incremental_insert_overwrite_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql", "macro_sql": "{% macro bq_generate_incremental_insert_overwrite_build_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n    {% if partition_by is none %}\n      {% set missing_partition_msg -%}\n      The 'insert_overwrite' strategy requires the `partition_by` config.\n      {%- endset %}\n      {% do exceptions.raise_compiler_error(missing_partition_msg) %}\n    {% endif %}\n\n    {% set build_sql = bq_insert_overwrite_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n    ) %}\n\n    {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1272018, "supported_languages": null}, "macro.dbt_bigquery.bq_copy_partitions": {"name": "bq_copy_partitions", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_copy_partitions", "macro_sql": "{% macro bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) %}\n\n  {% for partition in partitions %}\n    {% if partition_by.granularity == 'hour' %}\n      {% set partition = partition.strftime(\"%Y%m%d%H\") %}\n    {% elif partition_by.granularity == 'day' %}\n      {% set partition = partition.strftime(\"%Y%m%d\") %}\n    {% elif partition_by.granularity == 'month' %}\n      {% set partition = partition.strftime(\"%Y%m\") %}\n    {% elif partition_by.granularity == 'year' %}\n      {% set partition = partition.strftime(\"%Y\") %}\n    {% endif %}\n    {% set tmp_relation_partitioned = api.Relation.create(database=tmp_relation.database, schema=tmp_relation.schema, identifier=tmp_relation.table ~ '$' ~ partition, type=tmp_relation.type) %}\n    {% set target_relation_partitioned = api.Relation.create(database=target_relation.database, schema=target_relation.schema, identifier=target_relation.table ~ '$' ~ partition, type=target_relation.type) %}\n    {% do adapter.copy_table(tmp_relation_partitioned, target_relation_partitioned, \"table\") %}\n  {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.130161, "supported_languages": null}, "macro.dbt_bigquery.bq_insert_overwrite_sql": {"name": "bq_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_insert_overwrite_sql", "macro_sql": "{% macro bq_insert_overwrite_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n  {% if partitions is not none and partitions != [] %} {# static #}\n      {{ bq_static_insert_overwrite_sql(tmp_relation, target_relation, sql, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% else %} {# dynamic #}\n      {{ bq_dynamic_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_static_insert_overwrite_sql", "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1315873, "supported_languages": null}, "macro.dbt_bigquery.bq_static_insert_overwrite_sql": {"name": "bq_static_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_static_insert_overwrite_sql", "macro_sql": "{% macro bq_static_insert_overwrite_sql(\n    tmp_relation, target_relation, sql, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n\n      {% set predicate -%}\n          {{ partition_by.render_wrapped(alias='DBT_INTERNAL_DEST') }} in (\n              {{ partitions | join (', ') }}\n          )\n      {%- endset %}\n\n      {%- set source_sql -%}\n        (\n          {% if partition_by.time_ingestion_partitioning and tmp_relation_exists -%}\n          select\n            {{ partition_by.insertable_time_partitioning_field() }},\n            * from {{ tmp_relation }}\n          {% elif tmp_relation_exists -%}\n            select\n            * from {{ tmp_relation }}\n          {%- elif partition_by.time_ingestion_partitioning -%}\n            {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, True) }}\n          {%- else -%}\n            {{sql}}\n          {%- endif -%}\n\n        )\n      {%- endset -%}\n\n      {% if copy_partitions %}\n          {% do bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) %}\n      {% else %}\n\n      {#-- In case we're putting the model SQL _directly_ into the MERGE statement,\n         we need to prepend the MERGE statement with the user-configured sql_header,\n         which may be needed to resolve that model SQL (e.g. referencing a variable or UDF in the header)\n         in the \"temporary table exists\" case, we save the model SQL result as a temp table first, wherein the\n         sql_header is included by the create_table_as macro.\n      #}\n      -- 1. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header = not tmp_relation_exists) }};\n\n      {%- if tmp_relation_exists -%}\n      -- 2. clean up the temp table\n      drop table if exists {{ tmp_relation }};\n      {%- endif -%}\n\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro.dbt_bigquery.bq_copy_partitions", "macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1341505, "supported_languages": null}, "macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql": {"name": "bq_dynamic_copy_partitions_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql", "macro_sql": "{% macro bq_dynamic_copy_partitions_insert_overwrite_sql(\n  tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions\n  ) %}\n  {# We run temp table creation in a separated script to move to partitions copy #}\n  {%- call statement('create_tmp_relation_for_copy', language='sql') -%}\n    {{ bq_create_table_as(partition_by, True, tmp_relation, sql, 'sql')\n  }}\n  {%- endcall %}\n  {%- set partitions_sql -%}\n    select distinct {{ partition_by.render_wrapped() }}\n    from {{ tmp_relation }}\n  {%- endset -%}\n  {%- set partitions = run_query(partitions_sql).columns[0].values() -%}\n  {# We copy the partitions #}\n  {%- do bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) -%}\n  -- Clean up the temp table\n  drop table if exists {{ tmp_relation }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.run_query", "macro.dbt_bigquery.bq_copy_partitions"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.135824, "supported_languages": null}, "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql": {"name": "bq_dynamic_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql", "macro_sql": "{% macro bq_dynamic_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) %}\n  {%- if copy_partitions is true %}\n     {{ bq_dynamic_copy_partitions_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% else -%}\n      {% set predicate -%}\n          {{ partition_by.render_wrapped(alias='DBT_INTERNAL_DEST') }} in unnest(dbt_partitions_for_replacement)\n      {%- endset %}\n\n      {%- set source_sql -%}\n      (\n        select\n        {% if partition_by.time_ingestion_partitioning -%}\n        {{ partition_by.insertable_time_partitioning_field() }},\n        {%- endif -%}\n        * from {{ tmp_relation }}\n      )\n      {%- endset -%}\n\n      -- generated script to merge partitions into {{ target_relation }}\n      declare dbt_partitions_for_replacement array<{{ partition_by.data_type_for_partition() }}>;\n\n      {# have we already created the temp table to check for schema changes? #}\n      {% if not tmp_relation_exists %}\n       -- 1. create a temp table with model data\n        {{ bq_create_table_as(partition_by, True, tmp_relation, sql, 'sql') }}\n      {% else %}\n        -- 1. temp table already exists, we used it to check for schema changes\n      {% endif %}\n      {%- set partition_field = partition_by.time_partitioning_field() if partition_by.time_ingestion_partitioning else partition_by.render_wrapped() -%}\n\n      -- 2. define partitions to update\n      set (dbt_partitions_for_replacement) = (\n          select as struct\n              -- IGNORE NULLS: this needs to be aligned to _dbt_max_partition, which ignores null\n              array_agg(distinct {{ partition_field }} IGNORE NULLS)\n          from {{ tmp_relation }}\n      );\n\n      -- 3. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate]) }};\n\n      -- 4. clean up the temp table\n      drop table if exists {{ tmp_relation }}\n\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1386724, "supported_languages": null}, "macro.dbt_bigquery.bigquery__datediff": {"name": "bigquery__datediff", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt_bigquery.bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) -%}\n\n  {% if dbt_version[0] == 1 and dbt_version[2] >= 2 %}\n    {{ return(dbt.datediff(first_date, second_date, datepart)) }}\n  {% else %}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1399376, "supported_languages": null}, "macro.dbt_bigquery.bigquery__date_trunc": {"name": "bigquery__date_trunc", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt_bigquery.bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) -%}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.14041, "supported_languages": null}, "macro.dbt_bigquery.bigquery__listagg": {"name": "bigquery__listagg", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt_bigquery.bigquery__listagg", "macro_sql": "{% macro bigquery__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        {% if limit_num -%}\n        limit {{ limit_num }}\n        {%- endif %}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.141391, "supported_languages": null}, "macro.dbt_bigquery.bigquery__position": {"name": "bigquery__position", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt_bigquery.bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.141863, "supported_languages": null}, "macro.dbt_bigquery.bigquery__bool_or": {"name": "bigquery__bool_or", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt_bigquery.bigquery__bool_or", "macro_sql": "{% macro bigquery__bool_or(expression) -%}\n\n    logical_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.142212, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_concat": {"name": "bigquery__array_concat", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_concat", "macro_sql": "{% macro bigquery__array_concat(array_1, array_2) -%}\n    array_concat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1426477, "supported_languages": null}, "macro.dbt_bigquery.bigquery__intersect": {"name": "bigquery__intersect", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt_bigquery.bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1429183, "supported_languages": null}, "macro.dbt_bigquery.bigquery__split_part": {"name": "bigquery__split_part", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt_bigquery.bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n  {% else %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset(\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 1 + {{ part_number }}\n        )]\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.144326, "supported_languages": null}, "macro.dbt_bigquery.bigquery__right": {"name": "bigquery__right", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt_bigquery.bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0\n        then ''\n    else\n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.144932, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_construct": {"name": "bigquery__array_construct", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_construct", "macro_sql": "{% macro bigquery__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    [ {{ inputs|join(' , ') }} ]\n    {% else %}\n    ARRAY<{{data_type}}>[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1457107, "supported_languages": null}, "macro.dbt_bigquery.bigquery__escape_single_quotes": {"name": "bigquery__escape_single_quotes", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt_bigquery.bigquery__escape_single_quotes", "macro_sql": "{% macro bigquery__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.146195, "supported_languages": null}, "macro.dbt_bigquery.bigquery__dateadd": {"name": "bigquery__dateadd", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt_bigquery.bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1467648, "supported_languages": null}, "macro.dbt_bigquery.bigquery__current_timestamp": {"name": "bigquery__current_timestamp", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() -%}\n  current_timestamp()\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1471713, "supported_languages": null}, "macro.dbt_bigquery.bigquery__snapshot_string_as_time": {"name": "bigquery__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__snapshot_string_as_time", "macro_sql": "{% macro bigquery__snapshot_string_as_time(timestamp) -%}\n    {%- set result = 'TIMESTAMP(\"' ~ timestamp ~ '\")' -%}\n    {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1478002, "supported_languages": null}, "macro.dbt_bigquery.bigquery__current_timestamp_backcompat": {"name": "bigquery__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__current_timestamp_backcompat", "macro_sql": "{% macro bigquery__current_timestamp_backcompat() -%}\n  current_timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1480224, "supported_languages": null}, "macro.dbt_bigquery.bigquery__format_column": {"name": "bigquery__format_column", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__format_column", "macro_sql": "{% macro bigquery__format_column(column) -%}\n  {% set data_type = column.data_type %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1498804, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_empty_schema_sql": {"name": "bigquery__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_empty_schema_sql", "macro_sql": "{% macro bigquery__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {% for col in columns.values() %}\n      {%- if col['data_type'] is not defined -%}\n        {{ col_err.append(col['name']) }}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- endif -%}\n\n    {%- set columns = adapter.nest_column_data_types(columns) -%}\n    {{ return(dbt.default__get_empty_schema_sql(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1514049, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_select_subquery": {"name": "bigquery__get_select_subquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_select_subquery", "macro_sql": "{% macro bigquery__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1518807, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_column_names": {"name": "bigquery__get_column_names", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_column_names", "macro_sql": "{% macro bigquery__get_column_names() %}\n  {#- loop through nested user_provided_columns to get column names -#}\n    {%- set user_provided_columns = adapter.nest_column_data_types(model['columns']) -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1531284, "supported_languages": null}, "macro.dbt_bigquery.bigquery__safe_cast": {"name": "bigquery__safe_cast", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt_bigquery.bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1535845, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_append": {"name": "bigquery__array_append", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_append", "macro_sql": "{% macro bigquery__array_append(array, new_element) -%}\n    {{ array_concat(array, array_construct([new_element])) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.array_concat", "macro.dbt.array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1541157, "supported_languages": null}, "macro.dbt_bigquery.bigquery__except": {"name": "bigquery__except", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt_bigquery.bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1543856, "supported_languages": null}, "macro.dbt_bigquery.bigquery__hash": {"name": "bigquery__hash", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt_bigquery.bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt.default__hash(field)}})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1548111, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_show_grant_sql": {"name": "bigquery__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_show_grant_sql", "macro_sql": "{% macro bigquery__get_show_grant_sql(relation) %}\n    {% set location = adapter.get_dataset_location(relation) %}\n    {% set relation = relation.incorporate(location=location) %}\n\n    select privilege_type, grantee\n    from {{ relation.information_schema(\"OBJECT_PRIVILEGES\") }}\n    where object_schema = \"{{ relation.dataset }}\"\n      and object_name = \"{{ relation.identifier }}\"\n      -- filter out current user\n      and split(grantee, ':')[offset(1)] != session_user()\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.156331, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_grant_sql": {"name": "bigquery__get_grant_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_grant_sql", "macro_sql": "\n\n\n{%- macro bigquery__get_grant_sql(relation, privilege, grantee) -%}\n    grant `{{ privilege }}` on {{ relation.type }} {{ relation }} to {{ '\\\"' + grantee|join('\\\", \\\"') + '\\\"' }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.156991, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_revoke_sql": {"name": "bigquery__get_revoke_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_revoke_sql", "macro_sql": "{%- macro bigquery__get_revoke_sql(relation, privilege, grantee) -%}\n    revoke `{{ privilege }}` on {{ relation.type }} {{ relation }} from {{ '\\\"' + grantee|join('\\\", \\\"') + '\\\"' }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1576219, "supported_languages": null}, "macro.dbt_bigquery.bigquery__resolve_model_name": {"name": "bigquery__resolve_model_name", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt_bigquery.bigquery__resolve_model_name", "macro_sql": "{% macro bigquery__resolve_model_name(input_model_name) -%}\n    {{ input_model_name | string | replace('`', '') | replace('\"', '\\\"') }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1582305, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.159624, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.160409, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1610293, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1618383, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1626828, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1636086, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1644392, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1669676, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1674936, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1679015, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1682858, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1686647, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1761863, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.184819, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1871219, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1877494, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1890085, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.189513, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.189868, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1902366, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1905468, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1909637, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1912806, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1926327, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1931405, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1963139, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_as_sql": {"name": "get_replace_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "unique_id": "macro.dbt.get_replace_materialized_view_as_sql", "macro_sql": "{% macro get_replace_materialized_view_as_sql(relation, sql, existing_relation, backup_relation, intermediate_relation) %}\n    {{- log('Applying REPLACE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_replace_materialized_view_as_sql', 'dbt')(relation, sql, existing_relation, backup_relation, intermediate_relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1973872, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_as_sql": {"name": "default__get_replace_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_as_sql", "macro_sql": "{% macro default__get_replace_materialized_view_as_sql(relation, sql, existing_relation, backup_relation, intermediate_relation) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1978526, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1986194, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1989799, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.1998258, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2002113, "supported_languages": null}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2095015, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2105167, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.21117, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_materialized_view_as_sql(target_relation, sql, existing_relation, backup_relation, intermediate_relation) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_materialized_view_as_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2145705, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2153094, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2170296, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "original_file_path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.21806, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "original_file_path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2184496, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2195904, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2201009, "supported_languages": null}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.220695, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2210073, "supported_languages": null}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/clone.sql", "original_file_path": "macros/materializations/models/clone/clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% call statement('main') %}\n          {{ create_or_replace_clone(target_relation, defer_relation) }}\n      {% endcall %}\n\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2280304, "supported_languages": ["sql"]}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.228824, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation }} clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2291825, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2407537, "supported_languages": ["sql"]}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2512121, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2552643, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2559583, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2585382, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2592278, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2608953, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2641401, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2655473, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2672303, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2678695, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2696934, "supported_languages": null}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2712119, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2731037, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.273718, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.274222, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2749844, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2754734, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2763772, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2768726, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2775476, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2780318, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2784266, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2791421, "supported_languages": null}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2888825, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2919788, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2952166, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.2974498, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.30107, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3075738, "supported_languages": ["sql"]}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3083591, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3089395, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3099003, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3103292, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3108013, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3119042, "supported_languages": null}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.318551, "supported_languages": ["sql"]}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.32043, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3209305, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.322028, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3237963, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3249972, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3254926, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3259635, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3280892, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3284135, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.329904, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3303442, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.330713, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3339899, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.format_column", "macro.dbt_bigquery.bigquery__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.335011, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3359234, "supported_languages": null}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.342833, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3435829, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.34404, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3442907, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.344681, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3449988, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3455322, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3477948, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3483014, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3489518, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3500538, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3631268, "supported_languages": ["sql"]}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3641648, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3648634, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.372007, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3724604, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3730419, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.374843, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3752759, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3757257, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3792498, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3827262, "supported_languages": null}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3838062, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3846188, "supported_languages": null}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3854976, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3864734, "supported_languages": null}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3912916, "supported_languages": ["sql"]}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.392163, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.392599, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3932898, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3936372, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3942528, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3946784, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3960695, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.397129, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.3977752, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.398061, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4001412, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4005504, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4009738, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.401509, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.401936, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.402335, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4027557, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4032197, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4036443, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.404063, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4044905, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4048862, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4053178, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4057064, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4063404, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4066732, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4073935, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4077718, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4084065, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4086888, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4093757, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.409736, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4103599, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4106424, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4112146, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4115667, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.412727, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4131644, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.413752, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.414498, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4148738, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4158142, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4164517, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.417123, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4174936, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.418317, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4187598, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4193902, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4196742, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4205446, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.421246, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4216354, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.422358, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4227324, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4234385, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4239554, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4245372, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4247534, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4255507, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4259946, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4266522, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4270818, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4285524, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4290051, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4295394, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4299846, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4306762, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4319396, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.433708, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4340723, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4344947, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4355478, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4360664, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4364333, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4369874, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4373314, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4415426, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4419672, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4427783, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4433534, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4439154, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4443967, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {{ col_err.append(col['name']) }}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      cast(null as {{ col['data_type'] }}) as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4463623, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.447276, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.447786, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.448699, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4492962, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4508452, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4515128, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4536865, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4544137, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.455011, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4584112, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4587266, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4591713, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4594698, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.460385, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.460881, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4611604, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4617517, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.462246, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4628358, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4633417, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4639611, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4656973, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4663305, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4669876, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4675894, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4705372, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4715533, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4726448, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.477778, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.47822, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4787874, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4795406, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4801984, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.481032, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4815109, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4819415, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4824712, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4832075, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4838898, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4853182, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4860573, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4864414, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4869497, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4880593, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4884577, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4888334, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4891176, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4895713, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4897785, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.49021, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_bigquery.bigquery__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4906502, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4915304, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4920437, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4924762, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4929736, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.49483, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {%- if relation.is_table -%}\n            {{- drop_table(relation) -}}\n        {%- elif relation.is_view -%}\n            {{- drop_view(relation) -}}\n        {%- elif relation.is_materialized_view -%}\n            {{- drop_materialized_view(relation) -}}\n        {%- else -%}\n            drop {{ relation.type }} if exists {{ relation }} cascade\n        {%- endif -%}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.drop_table", "macro.dbt.drop_view", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4960256, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n  {{ return(adapter.dispatch('drop_table', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4965098, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.49679, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n  {{ return(adapter.dispatch('drop_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4972548, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4975452, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n  {{ return(adapter.dispatch('drop_materialized_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4981458, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.4984348, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5013614, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5020452, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5025337, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5029483, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5034199, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5040817, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5046175, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5054085, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.505894, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.506322, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header -%}\n  {{ sql_header }}\n  {%- endif -%}\n  {%- if limit is not none -%}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n  {%- else -%}\n  {{ compiled_code }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5075433, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "{% macro get_limit_subquery_sql(sql, limit) %}\n  {{ adapter.dispatch('get_limit_subquery_sql', 'dbt')(sql, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5080929, "supported_languages": null}, "macro.dbt.default__get_limit_subquery_sql": {"name": "default__get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.default__get_limit_subquery_sql", "macro_sql": "{% macro default__get_limit_subquery_sql(sql, limit) %}\n    select *\n    from (\n        {{ sql }}\n    ) as model_limit_subq\n    limit {{ limit }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5084639, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5115845, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5120053, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5142176, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5153008, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.516828, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.518044, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.518251, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5218284, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5248833, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5268216, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5274427, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5309331, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.53242, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5331843, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5341117, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.534776, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.535974, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5366585, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.537406, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.538385, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5393622, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5405576, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5411665, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5418947, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5427613, "supported_languages": null}, "macro.codegen.generate_base_model": {"name": "generate_base_model", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_base_model.sql", "original_file_path": "macros/generate_base_model.sql", "unique_id": "macro.codegen.generate_base_model", "macro_sql": "{% macro generate_base_model(source_name, table_name, leading_commas=False, case_sensitive_cols=False, materialized=None) %}\n\n{%- set source_relation = source(source_name, table_name) -%}\n\n{%- set columns = adapter.get_columns_in_relation(source_relation) -%}\n{% set column_names=columns | map(attribute='name') %}\n{% set base_model_sql %}\n\n{%- if materialized is not none -%}\n    {{ \"{{ config(materialized='\" ~ materialized ~ \"') }}\" }}\n{%- endif %}\n\nwith source as (\n\n    select * from {% raw %}{{ source({% endraw %}'{{ source_name }}', '{{ table_name }}'{% raw %}) }}{% endraw %}\n\n),\n\nrenamed as (\n\n    select\n        {%- if leading_commas -%}\n        {%- for column in column_names %}\n        {{\", \" if not loop.first}}{% if not case_sensitive_cols %}{{ column | lower }}{% elif target.type == \"bigquery\" %}{{ column }}{% else %}{{ \"\\\"\" ~ column ~ \"\\\"\" }}{% endif %}\n        {%- endfor %}\n        {%- else -%}\n        {%- for column in column_names %}\n        {% if not case_sensitive_cols %}{{ column | lower }}{% elif target.type == \"bigquery\" %}{{ column }}{% else %}{{ \"\\\"\" ~ column ~ \"\\\"\" }}{% endif %}{{\",\" if not loop.last}}\n        {%- endfor -%}\n        {%- endif %}\n\n    from source\n\n)\n\nselect * from renamed\n{% endset %}\n\n{% if execute %}\n\n{{ log(base_model_sql, info=True) }}\n{% do return(base_model_sql) %}\n\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5476806, "supported_languages": null}, "macro.codegen.create_base_models": {"name": "create_base_models", "resource_type": "macro", "package_name": "codegen", "path": "macros/create_base_models.sql", "original_file_path": "macros/create_base_models.sql", "unique_id": "macro.codegen.create_base_models", "macro_sql": "{% macro create_base_models(source_name, tables) %}\n\n{% set source_name = \"\"~ source_name ~\"\" %}\n\n{% set zsh_command_models = \"source dbt_packages/codegen/bash_scripts/base_model_creation.sh \"\"\"~ source_name ~\"\"\" \" %}\n\n{%- set models_array = [] -%}\n\n{% for t in tables %}\n    {% set help_command = zsh_command_models + t %}\n    {{ models_array.append(help_command) }}\n{% endfor %}\n\n{{ log(\"Run these commands in your shell to generate the models:\\n\" ~ models_array|join(' && \\n'), info=True) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.549386, "supported_languages": null}, "macro.codegen.generate_model_import_ctes": {"name": "generate_model_import_ctes", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_model_import_ctes.sql", "original_file_path": "macros/generate_model_import_ctes.sql", "unique_id": "macro.codegen.generate_model_import_ctes", "macro_sql": "{% macro generate_model_import_ctes(model_name, leading_commas = false) %}\n\n    {%- if execute -%}\n    {%- set nodes = graph.nodes.values() -%}\n\n    {%- set model = (nodes\n        | selectattr('name', 'equalto', model_name) \n        | selectattr('resource_type', 'equalto', 'model')\n        | list).pop() -%}\n\n    {%- set model_raw_sql = model.raw_sql or model.raw_code -%}\n    {%- else -%}\n    {%- set model_raw_sql = '' -%}\n    {%- endif -%}\n\n    {#-\n\n        REGEX Explanations\n\n        # with_regex\n        - matches (start of file followed by anything then whitespace\n        or whitespace\n        or a comma) followed by the word with then a space   \n\n        # from_ref \n        - matches (from or join) followed by some spaces and then {{ref(<something>)}}\n\n        # from_source \n        - matches (from or join) followed by some spaces and then {{source(<something>,<something_else>)}}\n\n        # from_var_1\n        - matches (from or join) followed by some spaces and then {{var(<something>)}}\n\n        # from_var_2\n        - matches (from or join) followed by some spaces and then {{var(<something>,<something_else>)}}\n\n        # from_table_1\n        - matches (from or join) followed by some spaces and then <something>.<something_else>\n          where each <something> is enclosed by (` or [ or \" or ' or nothing)\n\n        # from_table_2\n        - matches (from or join) followed by some spaces and then <something>.<something_else>.<something_different>\n          where each <something> is enclosed by (` or [ or \" or ' or nothing)\n\n        # from_table_3\n        - matches (from or join) followed by some spaces and then <something>\n          where <something> is enclosed by (` or [ or \" or ')\n\n        # config block\n        - matches the start of the file followed by anything and then {{config(<something>)}}\n\n    -#}\n\n    {%- set re = modules.re -%}\n\n    {%- set with_regex = '(?i)(?s)(^.*\\s*|\\s+|,)with\\s' -%}\n    {%- set does_raw_sql_contain_cte = re.search(with_regex, model_raw_sql) -%}\n\n    {%- set from_regexes = {\n        'from_ref':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), ref, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*ref\\s*\\(\\s*[\\'\\\"]?)\n            \n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n            \n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n        \n            ',\n        'from_source':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), source, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*source\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a comma\n            (,)\n\n            # sixth matching group\n            # 0 or more whitespace character(s), 1 or 0 quotation mark\n            (\\s*[\\'\\\"]?)\n\n            # seventh matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # eighth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # ninth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n\n            ',\n        'from_var_1':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n            \n            ',\n        'from_var_2':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n            \n            # second matching group\n            # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark            \n            ([^)\\'\\\"]+)\n            \n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a comma\n            (,)\n\n            # sixth matching group\n            # 0 or more whitespace character(s), 1 or 0 quotation mark            \n            (\\s*[\\'\\\"]?)\n\n            # seventh matching group\n            # at least 1 of anything except a parenthesis or quotation mark            \n            ([^)\\'\\\"]+)\n\n            # eighth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)            \n            ([\\'\\\"]?\\s*)\n\n            # ninth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}            \n            (\\)\\s*}})\n            \n            ',\n        'from_table_1':\n            '(?ix)\n            \n            # first matching group\n            # from or join followed by at least 1 whitespace character            \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n            \n            # third matching group\n            # at least 1 word character\n            (\\w+)\n            \n            # fouth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)\n            ([\\]`\\\"\\']?)\n            \n            # fifth matching group\n            # a period\n            (\\.)\n            \n            # sixth matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n            \n            # seventh matching group\n            # at least 1 word character\n            (\\w+)\n            \n            # eighth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\']?)(?=\\s|$)\n            \n            ',\n        'from_table_2':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)            \n            ([\\[`\\\"\\']?)\n            \n            # third matching group\n            # at least 1 word character\n            (\\w+)\n\n            # fouth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)            \n            ([\\]`\\\"\\']?)\n            \n            # fifth matching group\n            # a period            \n            (\\.)\n            \n            # sixth matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n\n            # seventh matching group\n            # at least 1 word character            \n            (\\w+)\n            \n            # eighth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) \n            ([\\]`\\\"\\']?)\n            \n            # ninth matching group\n            # a period             \n            (\\.)\n            \n            # tenth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)             \n            ([\\[`\\\"\\']?)\n            \n            # eleventh matching group\n            # at least 1 word character   \n            (\\w+)\n\n            # twelfth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\']?)(?=\\s|$)\n            \n            ',\n        'from_table_3':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character             \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)            \n            ([\\[`\\\"\\'])\n            \n            # third matching group\n            # at least 1 word character or space \n            ([\\w ]+)\n\n            # fourth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\'])(?=\\s|$)\n            \n            ',\n        'config_block':'(?i)(?s)^.*{{\\s*config\\s*\\([^)]+\\)\\s*}}'\n    } -%}\n\n    {%- set from_list = [] -%}\n    {%- set config_list = [] -%}\n    {%- set ns = namespace(model_sql = model_raw_sql) -%}\n\n    {%- for regex_name, regex_pattern in from_regexes.items() -%}\n\n        {%- set all_regex_matches = re.findall(regex_pattern, model_raw_sql) -%}\n\n        {%- for match in all_regex_matches -%}\n\n            {%- if regex_name == 'config_block' -%}\n                {%- set match_tuple = (match|trim, regex_name) -%}\n                {%- do config_list.append(match_tuple) -%}\n            {%- elif regex_name == 'from_source' -%}    \n                {%- set full_from_clause = match[1:]|join|trim -%}\n                {%- set cte_name = 'source_' + match[6]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%} \n            {%- elif regex_name == 'from_table_1' -%}\n                {%- set full_from_clause = match[1:]|join()|trim -%}\n                {%- set cte_name = match[2]|lower + '_' + match[6]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}   \n            {%- elif regex_name == 'from_table_2' -%}\n                {%- set full_from_clause = match[1:]|join()|trim -%}\n                {%- set cte_name = match[2]|lower + '_' + match[6]|lower + '_' + match[10]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}                     \n            {%- else -%}\n                {%- set full_from_clause = match[1:]|join|trim -%}\n                {%- set cte_name = match[2]|trim|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}\n            {%- endif -%}\n\n        {%- endfor -%}\n\n        {%- if regex_name == 'config_block' -%}\n        {%- elif regex_name == 'from_source' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> source_\\g<7>', ns.model_sql) -%}            \n        {%- elif regex_name == 'from_table_1' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>_\\g<7>', ns.model_sql) -%}     \n        {%- elif regex_name == 'from_table_2' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>_\\g<7>_\\g<11>', ns.model_sql) -%} \n        {%- else -%}   \n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>', ns.model_sql) -%}         \n        {% endif %}\n\n    {%- endfor -%}\n\n{%- if from_list|length > 0 -%}\n\n{%- set model_import_ctes -%}\n\n    {%- for config_obj in config_list -%}\n\n    {%- set ns.model_sql = ns.model_sql|replace(config_obj[0], '') -%}\n\n{{ config_obj[0] }}\n\n{% endfor -%}\n\n    {%- for from_obj in from_list|unique|sort -%}\n\n{%- if loop.first -%}with {% else -%}{%- if leading_commas -%},{%- endif -%}{%- endif -%}{{ from_obj[0] }} as (\n\n    select * from {{ from_obj[1] }}\n    {%- if from_obj[2] == 'from_source' and from_list|length > 1 %} \n    -- CAUTION: It's best practice to create staging layer for raw sources\n    {%- elif from_obj[2] == 'from_table_1' or from_obj[2] == 'from_table_2' or from_obj[2] == 'from_table_3' %}\n    -- CAUTION: It's best practice to use the ref or source function instead of a direct reference\n    {%- elif from_obj[2] == 'from_var_1' or from_obj[2] == 'from_var_2' %}\n    -- CAUTION: It's best practice to use the ref or source function instead of a var\n    {%- endif %}\n  \n){%- if ((loop.last and does_raw_sql_contain_cte) or (not loop.last)) and not leading_commas -%},{%- endif %}\n\n{% endfor -%}\n\n{%- if does_raw_sql_contain_cte -%}\n    {%- if leading_commas -%}\n        {%- set replace_with = '\\g<1>,' -%}\n    {%- else -%}\n        {%- set replace_with = '\\g<1>' -%}\n    {%- endif -%}\n{{ re.sub(with_regex, replace_with, ns.model_sql, 1)|trim }}\n{%- else -%}\n{{ ns.model_sql|trim }}\n{%- endif -%}\n\n{%- endset -%}\n\n{%- else -%}\n\n{% set model_import_ctes = model_raw_sql %}\n\n{%- endif -%}\n\n{%- if execute -%}\n\n{{ log(model_import_ctes, info=True) }}\n{% do return(model_import_ctes) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5736244, "supported_languages": null}, "macro.codegen.generate_column_yaml": {"name": "generate_column_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_model_yaml.sql", "original_file_path": "macros/generate_model_yaml.sql", "unique_id": "macro.codegen.generate_column_yaml", "macro_sql": "{% macro generate_column_yaml(column, model_yaml, column_desc_dict, include_data_types, parent_column_name=\"\") %}\n    {% if parent_column_name %}\n        {% set column_name = parent_column_name ~ \".\" ~ column.name %}\n    {% else %}\n        {% set column_name = column.name %}\n    {% endif %}\n\n    {% do model_yaml.append('      - name: ' ~ column_name  | lower ) %}\n    {% if include_data_types %}\n        {% do model_yaml.append('        data_type: ' ~ codegen.data_type_format_model(column)) %}\n    {% endif %}\n    {% do model_yaml.append('        description: \"' ~ column_desc_dict.get(column.name | lower,'') ~ '\"') %}\n    {% do model_yaml.append('') %}\n\n    {% if column.fields|length > 0 %}\n        {% for child_column in column.fields %}\n            {% set model_yaml = codegen.generate_column_yaml(child_column, model_yaml, column_desc_dict, include_data_types, parent_column_name=column_name) %}\n        {% endfor %}\n    {% endif %}\n    {% do return(model_yaml) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.data_type_format_model", "macro.codegen.generate_column_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5789955, "supported_languages": null}, "macro.codegen.generate_model_yaml": {"name": "generate_model_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_model_yaml.sql", "original_file_path": "macros/generate_model_yaml.sql", "unique_id": "macro.codegen.generate_model_yaml", "macro_sql": "{% macro generate_model_yaml(model_names=[], upstream_descriptions=False, include_data_types=True) %}\n\n    {% set model_yaml=[] %}\n\n    {% do model_yaml.append('version: 2') %}\n    {% do model_yaml.append('') %}\n    {% do model_yaml.append('models:') %}\n\n    {% if model_names is string %}\n        {{ exceptions.raise_compiler_error(\"The `model_names` argument must always be a list, even if there is only one model.\") }}\n    {% else %}\n        {% for model in model_names %}\n            {% do model_yaml.append('  - name: ' ~ model | lower) %}\n            {% do model_yaml.append('    description: \"\"') %}\n            {% do model_yaml.append('    columns:') %}\n\n            {% set relation=ref(model) %}\n            {%- set columns = adapter.get_columns_in_relation(relation) -%}\n            {% set column_desc_dict =  codegen.build_dict_column_descriptions(model) if upstream_descriptions else {} %}\n\n            {% for column in columns %}\n                {% set model_yaml = codegen.generate_column_yaml(column, model_yaml, column_desc_dict, include_data_types) %}\n            {% endfor %}\n        {% endfor %}\n    {% endif %}\n\n{% if execute %}\n\n    {% set joined = model_yaml | join ('\\n') %}\n    {{ log(joined, info=True) }}\n    {% do return(joined) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.build_dict_column_descriptions", "macro.codegen.generate_column_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5824108, "supported_languages": null}, "macro.codegen.get_tables_in_schema": {"name": "get_tables_in_schema", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_source.sql", "original_file_path": "macros/generate_source.sql", "unique_id": "macro.codegen.get_tables_in_schema", "macro_sql": "{% macro get_tables_in_schema(schema_name, database_name=target.database, table_pattern='%', exclude='') %}\n    \n    {% set tables=dbt_utils.get_relations_by_pattern(\n        schema_pattern=schema_name,\n        database=database_name,\n        table_pattern=table_pattern,\n        exclude=exclude\n    ) %}\n\n    {% set table_list= tables | map(attribute='identifier') %}\n\n    {{ return(table_list | sort) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5868092, "supported_languages": null}, "macro.codegen.generate_source": {"name": "generate_source", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_source.sql", "original_file_path": "macros/generate_source.sql", "unique_id": "macro.codegen.generate_source", "macro_sql": "{% macro generate_source(schema_name, database_name=target.database, generate_columns=False, include_descriptions=False, include_data_types=True, table_pattern='%', exclude='', name=schema_name, table_names=None, include_database=False, include_schema=False) %}\n\n{% set sources_yaml=[] %}\n{% do sources_yaml.append('version: 2') %}\n{% do sources_yaml.append('') %}\n{% do sources_yaml.append('sources:') %}\n{% do sources_yaml.append('  - name: ' ~ name | lower) %}\n\n{% if include_descriptions %}\n    {% do sources_yaml.append('    description: \"\"' ) %}\n{% endif %}\n\n{% if database_name != target.database or include_database %}\n{% do sources_yaml.append('    database: ' ~ database_name | lower) %}\n{% endif %}\n\n{% if schema_name != name or include_schema %}\n{% do sources_yaml.append('    schema: ' ~ schema_name | lower) %}\n{% endif %}\n\n{% do sources_yaml.append('    tables:') %}\n\n{% if table_names is none %}\n{% set tables=codegen.get_tables_in_schema(schema_name, database_name, table_pattern, exclude) %}\n{% else %}\n{% set tables = table_names %}\n{% endif %}\n\n{% for table in tables %}\n    {% do sources_yaml.append('      - name: ' ~ table | lower ) %}\n    {% if include_descriptions %}\n        {% do sources_yaml.append('        description: \"\"' ) %}\n    {% endif %}\n    {% if generate_columns %}\n    {% do sources_yaml.append('        columns:') %}\n\n        {% set table_relation=api.Relation.create(\n            database=database_name,\n            schema=schema_name,\n            identifier=table\n        ) %}\n\n        {% set columns=adapter.get_columns_in_relation(table_relation) %}\n\n        {% for column in columns %}\n            {% do sources_yaml.append('          - name: ' ~ column.name | lower ) %}\n            {% if include_data_types %}\n                {% do sources_yaml.append('            data_type: ' ~ codegen.data_type_format_source(column)) %}\n            {% endif %}\n            {% if include_descriptions %}\n                {% do sources_yaml.append('            description: \"\"' ) %}\n            {% endif %}\n        {% endfor %}\n            {% do sources_yaml.append('') %}\n\n    {% endif %}\n\n{% endfor %}\n\n{% if execute %}\n\n    {% set joined = sources_yaml | join ('\\n') %}\n    {{ log(joined, info=True) }}\n    {% do return(joined) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.get_tables_in_schema", "macro.codegen.data_type_format_source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5932014, "supported_languages": null}, "macro.codegen.format_column": {"name": "format_column", "resource_type": "macro", "package_name": "codegen", "path": "macros/vendored/dbt_core/format_column.sql", "original_file_path": "macros/vendored/dbt_core/format_column.sql", "unique_id": "macro.codegen.format_column", "macro_sql": "{% macro format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5942786, "supported_languages": null}, "macro.codegen.get_model_dependencies": {"name": "get_model_dependencies", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.get_model_dependencies", "macro_sql": "{% macro get_model_dependencies(model_name) %}\n    {% for node in graph.nodes.values() | selectattr('name', \"equalto\", model_name) %}\n        {{ return(node.depends_on.nodes) }}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.597099, "supported_languages": null}, "macro.codegen.add_model_column_descriptions_to_dict": {"name": "add_model_column_descriptions_to_dict", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.add_model_column_descriptions_to_dict", "macro_sql": "{% macro add_model_column_descriptions_to_dict(model_name,dict_with_descriptions={}) %}\n    {% for node in graph.nodes.values() | selectattr('name', \"equalto\", model_name) %}\n        {% for col_name, col_values in node.columns.items() %}\n            {% do dict_with_descriptions.update( {col_name: col_values.description} ) %}\n        {% endfor %}\n    {% endfor %}\n    {{ return(dict_with_descriptions) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5983381, "supported_languages": null}, "macro.codegen.build_dict_column_descriptions": {"name": "build_dict_column_descriptions", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.build_dict_column_descriptions", "macro_sql": "{% macro build_dict_column_descriptions(model_name) %}\n    {% if execute %}\n        {% set glob_dict = {} %}\n        {% for full_model in codegen.get_model_dependencies(model_name) %}\n            {% do codegen.add_model_column_descriptions_to_dict(full_model.split('.')[-1],glob_dict) %}\n        {% endfor %}\n        {{ return(glob_dict) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.get_model_dependencies", "macro.codegen.add_model_column_descriptions_to_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.5994627, "supported_languages": null}, "macro.codegen.get_models": {"name": "get_models", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.get_models", "macro_sql": "{% macro get_models(directory=None, prefix=None) %}\n    {% set model_names=[] %}\n    {% set models = graph.nodes.values() | selectattr('resource_type', \"equalto\", 'model') %}\n    {% if directory and prefix %}\n        {% for model in models %}\n            {% set model_path = \"/\".join(model.path.split(\"/\")[:-1]) %}\n            {% if model_path == directory and model.name.startswith(prefix) %}\n                {% do model_names.append(model.name) %}\n            {% endif %} \n        {% endfor %}\n    {% elif directory %}\n        {% for model in models %}\n            {% set model_path = \"/\".join(model.path.split(\"/\")[:-1]) %}\n            {% if model_path == directory %}\n                {% do model_names.append(model.name) %}\n            {% endif %}\n        {% endfor %}\n    {% elif prefix %}\n        {% for model in models if model.name.startswith(prefix) %}\n            {% do model_names.append(model.name) %}\n        {% endfor %}\n    {% else %}\n        {% for model in models %}\n            {% do model_names.append(model.name) %}\n        {% endfor %}\n    {% endif %}\n    {{ return(model_names) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.603168, "supported_languages": null}, "macro.codegen.data_type_format_source": {"name": "data_type_format_source", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.data_type_format_source", "macro_sql": "{% macro data_type_format_source(column) -%}\n  {{ return(adapter.dispatch('data_type_format_source', 'codegen')(column)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.codegen.default__data_type_format_source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6036727, "supported_languages": null}, "macro.codegen.default__data_type_format_source": {"name": "default__data_type_format_source", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.default__data_type_format_source", "macro_sql": "{% macro default__data_type_format_source(column) %}\n    {% set formatted = codegen.format_column(column) %}\n    {{ return(formatted['data_type'] | lower) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6042767, "supported_languages": null}, "macro.codegen.data_type_format_model": {"name": "data_type_format_model", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.data_type_format_model", "macro_sql": "{% macro data_type_format_model(column) -%}\n  {{ return(adapter.dispatch('data_type_format_model', 'codegen')(column)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.codegen.default__data_type_format_model"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.604744, "supported_languages": null}, "macro.codegen.default__data_type_format_model": {"name": "default__data_type_format_model", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.default__data_type_format_model", "macro_sql": "{% macro default__data_type_format_model(column) %}\n    {% set formatted = codegen.format_column(column) %}\n    {{ return(formatted['data_type'] | lower) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6053264, "supported_languages": null}, "macro.audit_helper.compare_relations": {"name": "compare_relations", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relations.sql", "original_file_path": "macros/compare_relations.sql", "unique_id": "macro.audit_helper.compare_relations", "macro_sql": "{% macro compare_relations(a_relation, b_relation, exclude_columns=[], primary_key=None, summarize=true) %}\n\n{% set column_names = dbt_utils.get_filtered_columns_in_relation(from=a_relation, except=exclude_columns) %}\n\n{% set column_selection %}\n\n  {% for column_name in column_names %} \n    {{ adapter.quote(column_name) }} \n    {% if not loop.last %}\n      , \n    {% endif %} \n  {% endfor %}\n\n{% endset %}\n\n{% set a_query %}\nselect\n\n  {{ column_selection }}\n\nfrom {{ a_relation }}\n{% endset %}\n\n{% set b_query %}\nselect\n\n  {{ column_selection }}\n\nfrom {{ b_relation }}\n{% endset %}\n\n{{ audit_helper.compare_queries(a_query, b_query, primary_key, summarize) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_filtered_columns_in_relation", "macro.audit_helper.compare_queries"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6076887, "supported_languages": null}, "macro.audit_helper.compare_queries": {"name": "compare_queries", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_queries.sql", "original_file_path": "macros/compare_queries.sql", "unique_id": "macro.audit_helper.compare_queries", "macro_sql": "{% macro compare_queries(a_query, b_query, primary_key=None, summarize=true) -%}\n  {{ return(adapter.dispatch('compare_queries', 'audit_helper')(a_query, b_query, primary_key, summarize)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_queries"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6094017, "supported_languages": null}, "macro.audit_helper.default__compare_queries": {"name": "default__compare_queries", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_queries.sql", "original_file_path": "macros/compare_queries.sql", "unique_id": "macro.audit_helper.default__compare_queries", "macro_sql": "{% macro default__compare_queries(a_query, b_query, primary_key=None, summarize=true) %}\n\nwith a as (\n\n    {{ a_query }}\n\n),\n\nb as (\n\n    {{ b_query }}\n\n),\n\na_intersect_b as (\n\n    select * from a\n    {{ dbt.intersect() }}\n    select * from b\n\n),\n\na_except_b as (\n\n    select * from a\n    {{ dbt.except() }}\n    select * from b\n\n),\n\nb_except_a as (\n\n    select * from b\n    {{ dbt.except() }}\n    select * from a\n\n),\n\nall_records as (\n\n    select\n        *,\n        true as in_a,\n        true as in_b\n    from a_intersect_b\n\n    union all\n\n    select\n        *,\n        true as in_a,\n        false as in_b\n    from a_except_b\n\n    union all\n\n    select\n        *,\n        false as in_a,\n        true as in_b\n    from b_except_a\n\n),\n\n{%- if summarize %}\n\nsummary_stats as (\n\n    select\n\n        in_a,\n        in_b,\n        count(*) as count\n\n    from all_records\n    group by 1, 2\n\n),\n\nfinal as (\n\n    select\n\n        *,\n        round(100.0 * count / sum(count) over (), 2) as percent_of_total\n\n    from summary_stats\n    order by in_a desc, in_b desc\n\n)\n\n{%- else %}\n\nfinal as (\n    \n    select * from all_records\n    where not (in_a and in_b)\n    order by {{ primary_key ~ \", \" if primary_key is not none }} in_a desc, in_b desc\n\n)\n\n{%- endif %}\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.intersect", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6106367, "supported_languages": null}, "macro.audit_helper.compare_column_values": {"name": "compare_column_values", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_column_values.sql", "original_file_path": "macros/compare_column_values.sql", "unique_id": "macro.audit_helper.compare_column_values", "macro_sql": "{% macro compare_column_values(a_query, b_query, primary_key, column_to_compare) -%}\n  {{ return(adapter.dispatch('compare_column_values', 'audit_helper')(a_query, b_query, primary_key, column_to_compare)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6160908, "supported_languages": null}, "macro.audit_helper.default__compare_column_values": {"name": "default__compare_column_values", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_column_values.sql", "original_file_path": "macros/compare_column_values.sql", "unique_id": "macro.audit_helper.default__compare_column_values", "macro_sql": "{% macro default__compare_column_values(a_query, b_query, primary_key, column_to_compare) -%}\nwith a_query as (\n    {{ a_query }}\n),\n\nb_query as (\n    {{ b_query }}\n),\n\njoined as (\n    select\n        coalesce(a_query.{{ primary_key }}, b_query.{{ primary_key }}) as {{ primary_key }},\n        a_query.{{ column_to_compare }} as a_query_value,\n        b_query.{{ column_to_compare }} as b_query_value,\n        case\n            when a_query.{{ column_to_compare }} = b_query.{{ column_to_compare }} then '\u2705: perfect match'\n            when a_query.{{ column_to_compare }} is null and b_query.{{ column_to_compare }} is null then '\u2705: both are null'\n            when a_query.{{ primary_key }} is null then '\ud83e\udd37: \u200dmissing from a'\n            when b_query.{{ primary_key }} is null then '\ud83e\udd37: missing from b'\n            when a_query.{{ column_to_compare }} is null then '\ud83e\udd37: value is null in a only'\n            when b_query.{{ column_to_compare }} is null then '\ud83e\udd37: value is null in b only'\n            when a_query.{{ column_to_compare }} != b_query.{{ column_to_compare }} then '\ud83d\ude45: \u200dvalues do not match'\n            else 'unknown' -- this should never happen\n        end as match_status,\n        case\n            when a_query.{{ column_to_compare }} = b_query.{{ column_to_compare }} then 0\n            when a_query.{{ column_to_compare }} is null and b_query.{{ column_to_compare }} is null then 1\n            when a_query.{{ primary_key }} is null then 2\n            when b_query.{{ primary_key }} is null then 3\n            when a_query.{{ column_to_compare }} is null then 4\n            when b_query.{{ column_to_compare }} is null then 5\n            when a_query.{{ column_to_compare }} != b_query.{{ column_to_compare }} then 6\n            else 7 -- this should never happen\n        end as match_order\n\n    from a_query\n\n    full outer join b_query on a_query.{{ primary_key }} = b_query.{{ primary_key }}\n),\n\naggregated as (\n    select\n        '{{ column_to_compare }}' as column_name,\n        match_status,\n        match_order,\n        count(*) as count_records\n    from joined\n\n    group by column_name, match_status, match_order\n)\n\nselect\n    column_name,\n    match_status,\n    count_records,\n    round(100.0 * count_records / sum(count_records) over (), 2) as percent_of_total\n\nfrom aggregated\n\norder by match_order\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6180947, "supported_languages": null}, "macro.audit_helper.compare_column_values_verbose": {"name": "compare_column_values_verbose", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_column_values_verbose.sql", "original_file_path": "macros/compare_column_values_verbose.sql", "unique_id": "macro.audit_helper.compare_column_values_verbose", "macro_sql": "{% macro compare_column_values_verbose(a_query, b_query, primary_key, column_to_compare) -%}\n  {{ return(adapter.dispatch('compare_column_values_verbose', 'audit_helper')(a_query, b_query, primary_key, column_to_compare)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_column_values_verbose"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6220062, "supported_languages": null}, "macro.audit_helper.default__compare_column_values_verbose": {"name": "default__compare_column_values_verbose", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_column_values_verbose.sql", "original_file_path": "macros/compare_column_values_verbose.sql", "unique_id": "macro.audit_helper.default__compare_column_values_verbose", "macro_sql": "{% macro default__compare_column_values_verbose(a_query, b_query, primary_key, column_to_compare) -%}\nwith a_query as (\n    {{ a_query }}\n),\n\nb_query as (\n    {{ b_query }}\n)\n    select\n        coalesce(a_query.{{ primary_key }}, b_query.{{ primary_key }}) as primary_key,\n\n        {% if target.name == 'postgres' or target.name == 'redshift' %}\n            '{{ column_to_compare }}'::text as column_name,\n        {% else %}\n            '{{ column_to_compare }}' as column_name,\n        {% endif %}\n\n        coalesce(\n            a_query.{{ column_to_compare }} = b_query.{{ column_to_compare }} and \n                a_query.{{ primary_key }} is not null and b_query.{{ primary_key }} is not null,\n            (a_query.{{ column_to_compare }} is null and b_query.{{ column_to_compare }} is null),\n            false\n        ) as perfect_match,\n        a_query.{{ column_to_compare }} is null and a_query.{{ primary_key }} is not null as null_in_a,\n        b_query.{{ column_to_compare }} is null and b_query.{{ primary_key }} is not null as null_in_b,\n        a_query.{{ primary_key }} is null as missing_from_a,\n        b_query.{{ primary_key }} is null as missing_from_b,\n        coalesce(\n            a_query.{{ primary_key }} is not null and b_query.{{ primary_key }} is not null and \n            -- ensure that neither value is missing before considering it a conflict\n            (\n                a_query.{{ column_to_compare }} != b_query.{{ column_to_compare }} or -- two not-null values that do not match\n                (a_query.{{ column_to_compare }} is not null and b_query.{{ column_to_compare }} is null) or -- null in b and not null in a\n                (a_query.{{ column_to_compare }} is null and b_query.{{ column_to_compare }} is not null) -- null in a and not null in b\n            ), \n            false\n        ) as conflicting_values\n        -- considered a conflict if the values do not match AND at least one of the values is not null.\n\n    from a_query\n\n    full outer join b_query on (a_query.{{ primary_key }} = b_query.{{ primary_key }})\n\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6242876, "supported_languages": null}, "macro.audit_helper.compare_relation_columns": {"name": "compare_relation_columns", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.compare_relation_columns", "macro_sql": "{% macro compare_relation_columns(a_relation, b_relation) %}\n  {{ return(adapter.dispatch('compare_relation_columns', 'audit_helper')(a_relation, b_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_relation_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.626414, "supported_languages": null}, "macro.audit_helper.default__compare_relation_columns": {"name": "default__compare_relation_columns", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.default__compare_relation_columns", "macro_sql": "{% macro default__compare_relation_columns(a_relation, b_relation) %}\n\nwith a_cols as (\n    {{ audit_helper.get_columns_in_relation_sql(a_relation) }}\n),\n\nb_cols as (\n    {{ audit_helper.get_columns_in_relation_sql(b_relation) }}\n)\n\nselect\n    column_name,\n    a_cols.ordinal_position as a_ordinal_position,\n    b_cols.ordinal_position as b_ordinal_position,\n    a_cols.data_type as a_data_type,\n    b_cols.data_type as b_data_type,\n    coalesce(a_cols.ordinal_position = b_cols.ordinal_position, false) as has_ordinal_position_match,\n    coalesce(a_cols.data_type = b_cols.data_type, false) as has_data_type_match\nfrom a_cols\nfull outer join b_cols using (column_name)\norder by coalesce(a_cols.ordinal_position, b_cols.ordinal_position)\n\n{% endmacro %}", "depends_on": {"macros": ["macro.audit_helper.get_columns_in_relation_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6269772, "supported_languages": null}, "macro.audit_helper.get_columns_in_relation_sql": {"name": "get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.get_columns_in_relation_sql", "macro_sql": "{% macro get_columns_in_relation_sql(relation) %}\n\n{{ adapter.dispatch('get_columns_in_relation_sql', 'audit_helper')(relation) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.audit_helper.bigquery__get_columns_in_relation_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6274166, "supported_languages": null}, "macro.audit_helper.default__get_columns_in_relation_sql": {"name": "default__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.default__get_columns_in_relation_sql", "macro_sql": "{% macro default__get_columns_in_relation_sql(relation) %}\n    \n  {% set columns = adapter.get_columns_in_relation(relation) %}\n  {% for column in columns %}\n    select \n      {{ dbt.string_literal(column.name) }} as column_name, \n      {{ loop.index }} as ordinal_position,\n      {{ dbt.string_literal(column.data_type) }} as data_type\n\n  {% if not loop.last -%}\n    union all \n  {%- endif %}\n  {% endfor %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6285083, "supported_languages": null}, "macro.audit_helper.redshift__get_columns_in_relation_sql": {"name": "redshift__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.redshift__get_columns_in_relation_sql", "macro_sql": "{% macro redshift__get_columns_in_relation_sql(relation) %}\n  {# You can't store the results of an info schema query to a table/view in Redshift, because the data only lives on the leader node #}\n  {{ return (audit_helper.default__get_columns_in_relation_sql(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__get_columns_in_relation_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6289504, "supported_languages": null}, "macro.audit_helper.snowflake__get_columns_in_relation_sql": {"name": "snowflake__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.snowflake__get_columns_in_relation_sql", "macro_sql": "{% macro snowflake__get_columns_in_relation_sql(relation) %}\n{#-\nFrom: https://github.com/dbt-labs/dbt/blob/dev/louisa-may-alcott/plugins/snowflake/dbt/include/snowflake/macros/adapters.sql#L48\nEdited to include ordinal_position\n-#}\n  select\n      ordinal_position,\n      column_name,\n      data_type,\n      character_maximum_length,\n      numeric_precision,\n      numeric_scale\n\n  from\n  {{ relation.information_schema('columns') }}\n\n  where table_name ilike '{{ relation.identifier }}'\n    {% if relation.schema %}\n    and table_schema ilike '{{ relation.schema }}'\n    {% endif %}\n    {% if relation.database %}\n    and table_catalog ilike '{{ relation.database }}'\n    {% endif %}\n  order by ordinal_position\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.629856, "supported_languages": null}, "macro.audit_helper.postgres__get_columns_in_relation_sql": {"name": "postgres__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.postgres__get_columns_in_relation_sql", "macro_sql": "{% macro postgres__get_columns_in_relation_sql(relation) %}\n{#-\nFrom: https://github.com/dbt-labs/dbt/blob/23484b18b71010f701b5312f920f04529ceaa6b2/plugins/postgres/dbt/include/postgres/macros/adapters.sql#L32\nEdited to include ordinal_position\n-#}\n  select\n      ordinal_position,\n      column_name,\n      data_type,\n      character_maximum_length,\n      numeric_precision,\n      numeric_scale\n\n  from {{ relation.information_schema('columns') }}\n  where table_name = '{{ relation.identifier }}'\n    {% if relation.schema %}\n    and table_schema = '{{ relation.schema }}'\n    {% endif %}\n  order by ordinal_position\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6305504, "supported_languages": null}, "macro.audit_helper.bigquery__get_columns_in_relation_sql": {"name": "bigquery__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.bigquery__get_columns_in_relation_sql", "macro_sql": "{% macro bigquery__get_columns_in_relation_sql(relation) %}\n\n  select\n      ordinal_position,\n      column_name,\n      data_type\n\n  from `{{ relation.database }}`.`{{ relation.schema }}`.INFORMATION_SCHEMA.COLUMNS\n  where table_name = '{{ relation.identifier }}'\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6310086, "supported_languages": null}, "macro.audit_helper.compare_all_columns": {"name": "compare_all_columns", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_all_columns.sql", "original_file_path": "macros/compare_all_columns.sql", "unique_id": "macro.audit_helper.compare_all_columns", "macro_sql": "{% macro compare_all_columns( a_relation, b_relation, primary_key,  exclude_columns=[],summarize=true ) -%}\n  {{ return(adapter.dispatch('compare_all_columns', 'audit_helper')( a_relation, b_relation, primary_key, exclude_columns, summarize )) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_all_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.63368, "supported_languages": null}, "macro.audit_helper.default__compare_all_columns": {"name": "default__compare_all_columns", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_all_columns.sql", "original_file_path": "macros/compare_all_columns.sql", "unique_id": "macro.audit_helper.default__compare_all_columns", "macro_sql": "{% macro default__compare_all_columns( a_relation, b_relation, primary_key, exclude_columns=[], summarize=true ) -%}\n\n  {% set column_names = dbt_utils.get_filtered_columns_in_relation(from=a_relation, except=exclude_columns) %}\n\n  {# We explictly select the primary_key and rename to support any sql as the primary_key -\n  a column or concatenated columns. this assumes that a_relation and b_relation do not already \n  have a field named dbt_audit_helper_pk #}\n\n  {% set a_query %}      \n    select\n      *,\n      {{ primary_key }} as dbt_audit_helper_pk\n    from {{ a_relation }}\n  {% endset %}\n\n  {% set b_query %}\n    select\n      *,\n      {{ primary_key }} as dbt_audit_helper_pk\n    from {{ b_relation }}\n  {% endset %}\n\n  {% for column_name in column_names %}\n\n    {% set audit_query = audit_helper.compare_column_values_verbose(\n      a_query=a_query,\n      b_query=b_query,\n      primary_key=\"dbt_audit_helper_pk\",\n      column_to_compare=column_name\n    ) %}\n\n    /*  Create a query combining results from all columns so that the user, or the \n    test suite, can examine all at once.\n    */\n    \n    {% if loop.first %}\n\n    /*  Create a CTE that wraps all the unioned subqueries that are created\n        in this for loop\n    */\n      with main as ( \n\n    {% endif %}\n\n    /*  There will be one audit_query subquery for each column\n    */\n    ( {{ audit_query }} )\n\n    {% if not loop.last %}\n\n      union all\n\n    {% else %}\n\n    ), \n    \n      {%- if summarize %}\n\n        final as (\n          select\n            upper(column_name) as column_name,\n            sum(case when perfect_match then 1 else 0 end) as perfect_match,\n            sum(case when null_in_a then 1 else 0 end) as null_in_a,\n            sum(case when null_in_b then 1 else 0 end) as null_in_b,\n            sum(case when missing_from_a then 1 else 0 end) as missing_from_a,\n            sum(case when missing_from_b then 1 else 0 end) as missing_from_b,\n            sum(case when conflicting_values then 1 else 0 end) as conflicting_values\n          from main\n          group by 1\n          order by column_name\n        )\n\n      {%- else %}\n\n        final as (\n          select\n            primary_key,           \n            upper(column_name) as column_name,\n            perfect_match,\n            null_in_a,\n            null_in_b,\n            missing_from_a,\n            missing_from_b,\n            conflicting_values\n          from main    \n          order by primary_key\n        )\n\n      {%- endif %}\n\n      select * from final\n    \n    {% endif %}\n\n  {% endfor %}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_filtered_columns_in_relation", "macro.audit_helper.compare_column_values_verbose"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.636068, "supported_languages": null}, "macro.dbt_utils.pretty_log_format": {"name": "pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6367629, "supported_languages": null}, "macro.dbt_utils.default__pretty_log_format": {"name": "default__pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.637205, "supported_languages": null}, "macro.dbt_utils.log_info": {"name": "log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.637856, "supported_languages": null}, "macro.dbt_utils.default__log_info": {"name": "default__log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6383147, "supported_languages": null}, "macro.dbt_utils.slugify": {"name": "slugify", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "unique_id": "macro.dbt_utils.slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n{#- Prepends \"_\" if string begins with a number -#}\n{% set string = modules.re.sub('^[0-9]', '_' + string[0], string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6398938, "supported_languages": null}, "macro.dbt_utils.pretty_time": {"name": "pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6406126, "supported_languages": null}, "macro.dbt_utils.default__pretty_time": {"name": "default__pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6411247, "supported_languages": null}, "macro.dbt_utils._is_ephemeral": {"name": "_is_ephemeral", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_ephemeral.sql", "original_file_path": "macros/jinja_helpers/_is_ephemeral.sql", "unique_id": "macro.dbt_utils._is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6432402, "supported_languages": null}, "macro.dbt_utils._is_relation": {"name": "_is_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_relation.sql", "original_file_path": "macros/jinja_helpers/_is_relation.sql", "unique_id": "macro.dbt_utils._is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.644375, "supported_languages": null}, "macro.dbt_utils.get_url_path": {"name": "get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.645409, "supported_languages": null}, "macro.dbt_utils.default__get_url_path": {"name": "default__get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url =\n        dbt.replace(\n            dbt.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{ dbt.position(\"'/'\", stripped_url) }}, 0),\n            {{ dbt.position(\"'?'\", stripped_url) }} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt.split_part(\n            dbt.right(\n                stripped_url,\n                dbt.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ),\n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt.safe_cast(\n        parsed_path,\n        dbt.type_string()\n    )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.position", "macro.dbt.split_part", "macro.dbt.right", "macro.dbt.length", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6470592, "supported_languages": null}, "macro.dbt_utils.get_url_host": {"name": "get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.647907, "supported_languages": null}, "macro.dbt_utils.default__get_url_host": {"name": "default__get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt.split_part(\n        dbt.split_part(\n            dbt.replace(\n                dbt.replace(\n                    dbt.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt.safe_cast(\n        parsed,\n        dbt.type_string()\n        )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part", "macro.dbt.replace", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6490998, "supported_languages": null}, "macro.dbt_utils.get_url_parameter": {"name": "get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6498792, "supported_languages": null}, "macro.dbt_utils.default__get_url_parameter": {"name": "default__get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt.split_part(dbt.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.65071, "supported_languages": null}, "macro.dbt_utils.get_single_value": {"name": "get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.get_single_value", "macro_sql": "{% macro get_single_value(query, default=none) %}\n    {{ return(adapter.dispatch('get_single_value', 'dbt_utils')(query, default)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_single_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6518822, "supported_languages": null}, "macro.dbt_utils.default__get_single_value": {"name": "default__get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.default__get_single_value", "macro_sql": "{% macro default__get_single_value(query, default) %}\n\n{# This macro returns the (0, 0) record in a query, i.e. the first row of the first column #}\n\n    {%- call statement('get_query_result', fetch_result=True, auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {%- if execute -%}\n\n        {% set r = load_result('get_query_result').table.columns[0].values() %}\n        {% if r | length == 0 %}\n            {% do print('Query `' ~ query ~ '` returned no rows. Using the default value: ' ~ default) %}\n            {% set sql_result = default %}\n        {% else %}\n            {% set sql_result = r[0] %}\n        {% endif %}\n        \n    {%- else -%}\n    \n        {% set sql_result = default %}\n    \n    {%- endif -%}\n\n    {% do return(sql_result) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6537766, "supported_languages": null}, "macro.dbt_utils.safe_subtract": {"name": "safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.safe_subtract", "macro_sql": "{%- macro safe_subtract(field_list) -%}\n    {{ return(adapter.dispatch('safe_subtract', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_subtract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.654684, "supported_languages": null}, "macro.dbt_utils.default__safe_subtract": {"name": "default__safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.default__safe_subtract", "macro_sql": "\n\n{%- macro default__safe_subtract(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_subtract` macro takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' -\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6560955, "supported_languages": null}, "macro.dbt_utils.deduplicate": {"name": "deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by) -%}\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.bigquery__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.657658, "supported_languages": null}, "macro.dbt_utils.default__deduplicate": {"name": "default__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.658219, "supported_languages": null}, "macro.dbt_utils.redshift__deduplicate": {"name": "redshift__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    {{ return(dbt_utils.default__deduplicate(relation, partition_by, order_by=order_by)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6587405, "supported_languages": null}, "macro.dbt_utils.postgres__deduplicate": {"name": "postgres__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.659248, "supported_languages": null}, "macro.dbt_utils.snowflake__deduplicate": {"name": "snowflake__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.65969, "supported_languages": null}, "macro.dbt_utils.bigquery__deduplicate": {"name": "bigquery__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6601698, "supported_languages": null}, "macro.dbt_utils.width_bucket": {"name": "width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6617327, "supported_languages": null}, "macro.dbt_utils.default__width_bucket": {"name": "default__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt.safe_cast(expr, dbt.type_numeric() ) }},\n                    {{ dbt.safe_cast(bin_size, dbt.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.safe_cast", "macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6630452, "supported_languages": null}, "macro.dbt_utils.snowflake__width_bucket": {"name": "snowflake__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6635523, "supported_languages": null}, "macro.dbt_utils.safe_divide": {"name": "safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.safe_divide", "macro_sql": "{% macro safe_divide(numerator, denominator) -%}\n  {{ return(adapter.dispatch('safe_divide', 'dbt_utils')(numerator, denominator)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_divide"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6642714, "supported_languages": null}, "macro.dbt_utils.default__safe_divide": {"name": "default__safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.default__safe_divide", "macro_sql": "{% macro default__safe_divide(numerator, denominator) %}\n    ( {{ numerator }} ) / nullif( ( {{ denominator }} ), 0)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6646276, "supported_languages": null}, "macro.dbt_utils.nullcheck_table": {"name": "nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6653798, "supported_languages": null}, "macro.dbt_utils.default__nullcheck_table": {"name": "default__nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6662676, "supported_languages": null}, "macro.dbt_utils.pivot": {"name": "pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.668564, "supported_languages": null}, "macro.dbt_utils.default__pivot": {"name": "default__pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6707542, "supported_languages": null}, "macro.dbt_utils.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6764133, "supported_languages": null}, "macro.dbt_utils.default__union_relations": {"name": "default__union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n    {%- set all_excludes = [] -%}\n    {%- set all_includes = [] -%}\n\n    {%- if exclude -%}\n        {%- for exc in exclude -%}\n            {%- do all_excludes.append(exc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- if include -%}\n        {%- for inc in include -%}\n            {%- do all_includes.append(inc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column | lower in all_excludes -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column | lower not in all_includes -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n    {%- set dbt_command = flags.WHICH -%}\n\n\n    {% if dbt_command in ['run', 'build'] %}\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                {%- if source_column_name is not none %}\n                cast({{ dbt.string_literal(relation) }} as {{ dbt.type_string() }}) as {{ source_column_name }},\n                {%- endif %}\n\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.string_literal", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6851728, "supported_languages": null}, "macro.dbt_utils.get_tables_by_prefix_sql": {"name": "get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6862051, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"name": "default__get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.686927, "supported_languages": null}, "macro.dbt_utils.get_table_types_sql": {"name": "get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_utils.default__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6880062, "supported_languages": null}, "macro.dbt_utils.default__get_table_types_sql": {"name": "default__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.688377, "supported_languages": null}, "macro.dbt_utils.postgres__get_table_types_sql": {"name": "postgres__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6887405, "supported_languages": null}, "macro.dbt_utils.databricks__get_table_types_sql": {"name": "databricks__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.databricks__get_table_types_sql", "macro_sql": "{% macro databricks__get_table_types_sql() %}\n            case table_type\n                when 'MANAGED' then 'table'\n                when 'BASE TABLE' then 'table'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6891015, "supported_languages": null}, "macro.dbt_utils.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6908035, "supported_languages": null}, "macro.dbt_utils.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6919024, "supported_languages": null}, "macro.dbt_utils.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6924071, "supported_languages": null}, "macro.dbt_utils.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6937544, "supported_languages": null}, "macro.dbt_utils.get_tables_by_pattern_sql": {"name": "get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.bigquery__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6969295, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"name": "default__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.697884, "supported_languages": null}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"name": "bigquery__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.6997511, "supported_languages": null}, "macro.dbt_utils._bigquery__get_matching_schemata": {"name": "_bigquery__get_matching_schemata", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7012002, "supported_languages": null}, "macro.dbt_utils.get_column_values": {"name": "get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7034647, "supported_languages": null}, "macro.dbt_utils.default__get_column_values": {"name": "default__get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7072918, "supported_languages": null}, "macro.dbt_utils.degrees_to_radians": {"name": "degrees_to_radians", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7094223, "supported_languages": null}, "macro.dbt_utils.haversine_distance": {"name": "haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.bigquery__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.710132, "supported_languages": null}, "macro.dbt_utils.default__haversine_distance": {"name": "default__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7115464, "supported_languages": null}, "macro.dbt_utils.bigquery__haversine_distance": {"name": "bigquery__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7136533, "supported_languages": null}, "macro.dbt_utils.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.715153, "supported_languages": null}, "macro.dbt_utils.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7166986, "supported_languages": null}, "macro.dbt_utils.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7173026, "supported_languages": null}, "macro.dbt_utils.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7182343, "supported_languages": null}, "macro.dbt_utils.get_query_results_as_dict": {"name": "get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7191496, "supported_languages": null}, "macro.dbt_utils.default__get_query_results_as_dict": {"name": "default__get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7207043, "supported_languages": null}, "macro.dbt_utils.star": {"name": "star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix, quote_identifiers)) }}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7231956, "supported_languages": null}, "macro.dbt_utils.default__star": {"name": "default__star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {%- do dbt_utils._is_relation(from, 'star') -%}\r\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\r\n\r\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\r\n    {%- if not execute -%}\r\n        {% do return('*') %}\r\n    {%- endif -%}\r\n\r\n    {% set cols = dbt_utils.get_filtered_columns_in_relation(from, except) %}\r\n\r\n    {%- if cols|length <= 0 -%}\r\n        {% if flags.WHICH == 'compile' %}\r\n            {% set response %}\r\n*\r\n/* No columns were returned. Maybe the relation doesn't exist yet \r\nor all columns were excluded. This star is only output during  \r\ndbt compile, and exists to keep SQLFluff happy. */\r\n            {% endset %}\r\n            {% do return(response) %}\r\n        {% else %}\r\n            {% do return(\"/* no columns returned from star() macro */\") %}\r\n        {% endif %}\r\n    {%- else -%}\r\n        {%- for col in cols %}\r\n            {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}\r\n                {%- if quote_identifiers -%}\r\n                    {{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {%- else -%}\r\n                    {{ col|trim }} {%- if prefix!='' or suffix!='' %} as {{ (prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {% endif %}\r\n            {%- if not loop.last %},{{ '\\n  ' }}{%- endif -%}\r\n        {%- endfor -%}\r\n    {% endif %}\r\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7269812, "supported_languages": null}, "macro.dbt_utils.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.727706, "supported_languages": null}, "macro.dbt_utils.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7283704, "supported_languages": null}, "macro.dbt_utils.get_relations_by_prefix": {"name": "get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7298102, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_prefix": {"name": "default__get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7319915, "supported_languages": null}, "macro.dbt_utils.nullcheck": {"name": "nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7328255, "supported_languages": null}, "macro.dbt_utils.default__nullcheck": {"name": "default__nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7337072, "supported_languages": null}, "macro.dbt_utils.surrogate_key": {"name": "surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.734643, "supported_languages": null}, "macro.dbt_utils.default__surrogate_key": {"name": "default__surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- set error_message = '\nWarning: `dbt_utils.surrogate_key` has been replaced by \\\n`dbt_utils.generate_surrogate_key`. The new macro treats null values \\\ndifferently to empty strings. To restore the behaviour of the original \\\nmacro, add a global variable in dbt_project.yml called \\\n`surrogate_key_treat_nulls_as_empty_strings` to your \\\ndbt_project.yml file with a value of True. \\\nThe {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7352612, "supported_languages": null}, "macro.dbt_utils.get_filtered_columns_in_relation": {"name": "get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7363482, "supported_languages": null}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"name": "default__get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7382042, "supported_languages": null}, "macro.dbt_utils.generate_surrogate_key": {"name": "generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.generate_surrogate_key", "macro_sql": "{%- macro generate_surrogate_key(field_list) -%}\n    {{ return(adapter.dispatch('generate_surrogate_key', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7392595, "supported_languages": null}, "macro.dbt_utils.default__generate_surrogate_key": {"name": "default__generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.default__generate_surrogate_key", "macro_sql": "\n\n{%- macro default__generate_surrogate_key(field_list) -%}\n\n{%- if var('surrogate_key_treat_nulls_as_empty_strings', False) -%}\n    {%- set default_null_value = \"\" -%}\n{%- else -%}\n    {%- set default_null_value = '_dbt_utils_surrogate_key_null_' -%}\n{%- endif -%}\n\n{%- set fields = [] -%}\n\n{%- for field in field_list -%}\n\n    {%- do fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt.type_string() ~ \"), '\" ~ default_null_value  ~\"')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- do fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{ dbt.hash(dbt.concat(fields)) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.hash", "macro.dbt.concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7409227, "supported_languages": null}, "macro.dbt_utils.get_relations_by_pattern": {"name": "get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7424333, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_pattern": {"name": "default__get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7446015, "supported_languages": null}, "macro.dbt_utils.unpivot": {"name": "unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7472482, "supported_languages": null}, "macro.dbt_utils.default__unpivot": {"name": "default__unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n\n    {% if not relation %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_string", "macro.dbt.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7514484, "supported_languages": null}, "macro.dbt_utils.safe_add": {"name": "safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.safe_add", "macro_sql": "{%- macro safe_add(field_list) -%}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7523966, "supported_languages": null}, "macro.dbt_utils.default__safe_add": {"name": "default__safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_add` macro now takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7537825, "supported_languages": null}, "macro.dbt_utils.test_not_null_proportion": {"name": "test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, group_by_columns, **kwargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.755191, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_proportion": {"name": "default__test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model, group_by_columns) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith validation as (\n  select\n    {{select_gb_cols}}\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n  {{groupby_gb_cols}}\n),\nvalidation_errors as (\n  select\n    {{select_gb_cols}}\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7572956, "supported_languages": null}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"name": "test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7634094, "supported_languages": null}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"name": "default__test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}, {{ upper_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc, {{ upper_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions more cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7673628, "supported_languages": null}, "macro.dbt_utils.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None) %}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7683983, "supported_languages": null}, "macro.dbt_utils.default__test_expression_is_true": {"name": "default__test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else \"1\" %}\n\nselect\n    {{ column_list }}\nfrom {{ model }}\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7693453, "supported_languages": null}, "macro.dbt_utils.test_recency": {"name": "test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.test_recency", "macro_sql": "{% test recency(model, field, datepart, interval, ignore_time_component=False, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval, ignore_time_component, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7709434, "supported_languages": null}, "macro.dbt_utils.default__test_recency": {"name": "default__test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval, ignore_time_component, group_by_columns) %}\n\n{% set threshold = 'cast(' ~ dbt.dateadd(datepart, interval * -1, dbt.current_timestamp()) ~ ' as ' ~ ('date' if ignore_time_component else dbt.type_timestamp()) ~ ')'  %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nwith recency as (\n\n    select \n\n      {{ select_gb_cols }}\n      {% if ignore_time_component %}\n        cast(max({{ field }}) as date) as most_recent\n      {%- else %}\n        max({{ field }}) as most_recent\n      {%- endif %}\n\n    from {{ model }}\n\n    {{ groupby_gb_cols }}\n\n)\n\nselect\n\n    {{ select_gb_cols }}\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.current_timestamp", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7730997, "supported_languages": null}, "macro.dbt_utils.test_not_accepted_values": {"name": "test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7743263, "supported_languages": null}, "macro.dbt_utils.default__test_not_accepted_values": {"name": "default__test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7753322, "supported_languages": null}, "macro.dbt_utils.test_cardinality_equality": {"name": "test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7765274, "supported_languages": null}, "macro.dbt_utils.default__test_cardinality_equality": {"name": "default__test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.777406, "supported_languages": null}, "macro.dbt_utils.test_at_least_one": {"name": "test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7788188, "supported_languages": null}, "macro.dbt_utils.default__test_at_least_one": {"name": "default__test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name, group_by_columns) %}\n\n{% set pruned_cols = [column_name] %}\n\n{% if group_by_columns|length() > 0 %}\n\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n  {% set pruned_cols = group_by_columns %}\n\n  {% if column_name not in pruned_cols %}\n    {% do pruned_cols.append(column_name) %}\n  {% endif %}\n\n{% endif %}\n\n{% set select_pruned_cols = pruned_cols|join(' ,') %}\n\nselect *\nfrom (\n    with pruned_rows as (\n      select\n        {{ select_pruned_cols }}\n      from {{ model }}\n      where {{ column_name }} is not null\n      limit 1\n    )\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      {{select_gb_cols}}\n      count({{ column_name }}) as filler_column\n\n    from pruned_rows\n\n    {{groupby_gb_cols}}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7809923, "supported_languages": null}, "macro.dbt_utils.test_unique_combination_of_columns": {"name": "test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7823553, "supported_languages": null}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"name": "default__test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.784006, "supported_languages": null}, "macro.dbt_utils.test_accepted_range": {"name": "test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.785383, "supported_languages": null}, "macro.dbt_utils.default__test_accepted_range": {"name": "default__test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.786584, "supported_languages": null}, "macro.dbt_utils.test_equality": {"name": "test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7882128, "supported_languages": null}, "macro.dbt_utils.default__test_equality": {"name": "default__test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.790483, "supported_languages": null}, "macro.dbt_utils.test_not_empty_string": {"name": "test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.test_not_empty_string", "macro_sql": "{% test not_empty_string(model, column_name, trim_whitespace=true) %}\n\n  {{ return(adapter.dispatch('test_not_empty_string', 'dbt_utils')(model, column_name, trim_whitespace)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.791611, "supported_languages": null}, "macro.dbt_utils.default__test_not_empty_string": {"name": "default__test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.default__test_not_empty_string", "macro_sql": "{% macro default__test_not_empty_string(model, column_name, trim_whitespace=true) %}\n\n    with\n    \n    all_values as (\n\n        select \n\n\n            {% if trim_whitespace == true -%}\n\n                trim({{ column_name }}) as {{ column_name }}\n\n            {%- else -%}\n\n                {{ column_name }}\n\n            {%- endif %}\n            \n        from {{ model }}\n\n    ),\n\n    errors as (\n\n        select * from all_values\n        where {{ column_name }} = ''\n\n    )\n\n    select * from errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7924066, "supported_languages": null}, "macro.dbt_utils.test_relationships_where": {"name": "test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7938352, "supported_languages": null}, "macro.dbt_utils.default__test_relationships_where": {"name": "default__test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.794718, "supported_languages": null}, "macro.dbt_utils.test_sequential_values": {"name": "test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart, group_by_columns)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7966225, "supported_languages": null}, "macro.dbt_utils.default__test_sequential_values": {"name": "default__test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(',') + ', ' %}\n  {% set partition_gb_cols = 'partition by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith windowed as (\n\n    select\n        {{ select_gb_cols }}\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            {{partition_gb_cols}}\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt.type_timestamp() }})= cast({{ dbt.dateadd(datepart, interval, previous_column_name) }} as {{ dbt.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt.type_timestamp", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.7989502, "supported_languages": null}, "macro.dbt_utils.test_not_constant": {"name": "test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.test_not_constant", "macro_sql": "{% test not_constant(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.800021, "supported_languages": null}, "macro.dbt_utils.default__test_not_constant": {"name": "default__test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name, group_by_columns) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    {{select_gb_cols}}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\n  {{groupby_gb_cols}}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8011985, "supported_languages": null}, "macro.dbt_utils.test_equal_rowcount": {"name": "test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8029835, "supported_languages": null}, "macro.dbt_utils.default__test_equal_rowcount": {"name": "default__test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model, group_by_columns) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'sum(coalesce(diff_count, 0))') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(', ') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in fewer_rows_than. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_equal_rowcount'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from {{ model }}\n    {{groupby_gb_cols}}\n\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from {{ compare_model }}\n    {{groupby_gb_cols}}\n\n),\nfinal as (\n\n    select\n    \n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    {{join_gb_cols}}\n\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8058913, "supported_languages": null}, "macro.dbt_utils.test_fewer_rows_than": {"name": "test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8080707, "supported_languages": null}, "macro.dbt_utils.default__test_fewer_rows_than": {"name": "default__test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model, group_by_columns) %}\n\n{{ config(fail_calc = 'sum(coalesce(row_count_delta, 0))') }}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in equal_rowcount. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_fewer_rows_than'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_our_model \n    from {{ model }}\n    {{ groupby_gb_cols }}\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_comparison_model \n    from {{ compare_model }}\n    {{ groupby_gb_cols }}\n\n),\ncounts as (\n\n    select\n\n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_our_model,\n        count_comparison_model\n    from a\n    full join b on \n    a.id_dbtutils_test_fewer_rows_than = b.id_dbtutils_test_fewer_rows_than\n    {{ join_gb_cols }}\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.810667, "supported_languages": null}, "macro.dbt_date.get_date_dimension": {"name": "get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.get_date_dimension", "macro_sql": "{% macro get_date_dimension(start_date, end_date) %}\n    {{ adapter.dispatch('get_date_dimension', 'dbt_date') (start_date, end_date) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_date_dimension"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.825079, "supported_languages": null}, "macro.dbt_date.default__get_date_dimension": {"name": "default__get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.default__get_date_dimension", "macro_sql": "{% macro default__get_date_dimension(start_date, end_date) %}\nwith base_dates as (\n    {{ dbt_date.get_base_dates(start_date, end_date) }}\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast({{ dbt.dateadd('year', -1 , 'd.date_day') }} as date) as prior_year_date_day,\n        cast({{ dbt.dateadd('day', -364 , 'd.date_day') }} as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    {{ dbt_date.yesterday('d.date_day') }} as prior_date_day,\n    {{ dbt_date.tomorrow('d.date_day') }} as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=false) }} as day_of_week,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=true) }} as day_of_week_iso,\n    {{ dbt_date.day_name('d.date_day', short=false) }} as day_of_week_name,\n    {{ dbt_date.day_name('d.date_day', short=true) }} as day_of_week_name_short,\n    {{ dbt_date.day_of_month('d.date_day') }} as day_of_month,\n    {{ dbt_date.day_of_year('d.date_day') }} as day_of_year,\n\n    {{ dbt_date.week_start('d.date_day') }} as week_start_date,\n    {{ dbt_date.week_end('d.date_day') }} as week_end_date,\n    {{ dbt_date.week_start('d.prior_year_over_year_date_day') }} as prior_year_week_start_date,\n    {{ dbt_date.week_end('d.prior_year_over_year_date_day') }} as prior_year_week_end_date,\n    {{ dbt_date.week_of_year('d.date_day') }} as week_of_year,\n\n    {{ dbt_date.iso_week_start('d.date_day') }} as iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.date_day') }} as iso_week_end_date,\n    {{ dbt_date.iso_week_start('d.prior_year_over_year_date_day') }} as prior_year_iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.prior_year_over_year_date_day') }} as prior_year_iso_week_end_date,\n    {{ dbt_date.iso_week_of_year('d.date_day') }} as iso_week_of_year,\n\n    {{ dbt_date.week_of_year('d.prior_year_over_year_date_day') }} as prior_year_week_of_year,\n    {{ dbt_date.iso_week_of_year('d.prior_year_over_year_date_day') }} as prior_year_iso_week_of_year,\n\n    cast({{ dbt_date.date_part('month', 'd.date_day') }} as {{ dbt.type_int() }}) as month_of_year,\n    {{ dbt_date.month_name('d.date_day', short=false) }}  as month_name,\n    {{ dbt_date.month_name('d.date_day', short=true) }}  as month_name_short,\n\n    cast({{ dbt.date_trunc('month', 'd.date_day') }} as date) as month_start_date,\n    cast({{ last_day('d.date_day', 'month') }} as date) as month_end_date,\n\n    cast({{ dbt.date_trunc('month', 'd.prior_year_date_day') }} as date) as prior_year_month_start_date,\n    cast({{ last_day('d.prior_year_date_day', 'month') }} as date) as prior_year_month_end_date,\n\n    cast({{ dbt_date.date_part('quarter', 'd.date_day') }} as {{ dbt.type_int() }}) as quarter_of_year,\n    cast({{ dbt.date_trunc('quarter', 'd.date_day') }} as date) as quarter_start_date,\n    cast({{ last_day('d.date_day', 'quarter') }} as date) as quarter_end_date,\n\n    cast({{ dbt_date.date_part('year', 'd.date_day') }} as {{ dbt.type_int() }}) as year_number,\n    cast({{ dbt.date_trunc('year', 'd.date_day') }} as date) as year_start_date,\n    cast({{ last_day('d.date_day', 'year') }} as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt.type_int", "macro.dbt_date.month_name", "macro.dbt.date_trunc", "macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8308332, "supported_languages": null}, "macro.dbt_date.postgres__get_date_dimension": {"name": "postgres__get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.postgres__get_date_dimension", "macro_sql": "{% macro postgres__get_date_dimension(start_date, end_date) %}\nwith base_dates as (\n    {{ dbt_date.get_base_dates(start_date, end_date) }}\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast({{ dbt.dateadd('year', -1 , 'd.date_day') }} as date) as prior_year_date_day,\n        cast({{ dbt.dateadd('day', -364 , 'd.date_day') }} as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    {{ dbt_date.yesterday('d.date_day') }} as prior_date_day,\n    {{ dbt_date.tomorrow('d.date_day') }} as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=true) }} as day_of_week,\n\n    {{ dbt_date.day_name('d.date_day', short=false) }} as day_of_week_name,\n    {{ dbt_date.day_name('d.date_day', short=true) }} as day_of_week_name_short,\n    {{ dbt_date.day_of_month('d.date_day') }} as day_of_month,\n    {{ dbt_date.day_of_year('d.date_day') }} as day_of_year,\n\n    {{ dbt_date.week_start('d.date_day') }} as week_start_date,\n    {{ dbt_date.week_end('d.date_day') }} as week_end_date,\n    {{ dbt_date.week_start('d.prior_year_over_year_date_day') }} as prior_year_week_start_date,\n    {{ dbt_date.week_end('d.prior_year_over_year_date_day') }} as prior_year_week_end_date,\n    {{ dbt_date.week_of_year('d.date_day') }} as week_of_year,\n\n    {{ dbt_date.iso_week_start('d.date_day') }} as iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.date_day') }} as iso_week_end_date,\n    {{ dbt_date.iso_week_start('d.prior_year_over_year_date_day') }} as prior_year_iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.prior_year_over_year_date_day') }} as prior_year_iso_week_end_date,\n    {{ dbt_date.iso_week_of_year('d.date_day') }} as iso_week_of_year,\n\n    {{ dbt_date.week_of_year('d.prior_year_over_year_date_day') }} as prior_year_week_of_year,\n    {{ dbt_date.iso_week_of_year('d.prior_year_over_year_date_day') }} as prior_year_iso_week_of_year,\n\n    cast({{ dbt_date.date_part('month', 'd.date_day') }} as {{ dbt.type_int() }}) as month_of_year,\n    {{ dbt_date.month_name('d.date_day', short=false) }}  as month_name,\n    {{ dbt_date.month_name('d.date_day', short=true) }}  as month_name_short,\n\n    cast({{ dbt.date_trunc('month', 'd.date_day') }} as date) as month_start_date,\n    cast({{ last_day('d.date_day', 'month') }} as date) as month_end_date,\n\n    cast({{ dbt.date_trunc('month', 'd.prior_year_date_day') }} as date) as prior_year_month_start_date,\n    cast({{ last_day('d.prior_year_date_day', 'month') }} as date) as prior_year_month_end_date,\n\n    cast({{ dbt_date.date_part('quarter', 'd.date_day') }} as {{ dbt.type_int() }}) as quarter_of_year,\n    cast({{ dbt.date_trunc('quarter', 'd.date_day') }} as date) as quarter_start_date,\n    {# last_day does not support quarter because postgresql does not support quarter interval. #}\n    cast({{dbt.dateadd('day', '-1', dbt.dateadd('month', '3', dbt.date_trunc('quarter', 'd.date_day')))}} as date) as quarter_end_date,\n\n    cast({{ dbt_date.date_part('year', 'd.date_day') }} as {{ dbt.type_int() }}) as year_number,\n    cast({{ dbt.date_trunc('year', 'd.date_day') }} as date) as year_start_date,\n    cast({{ last_day('d.date_day', 'year') }} as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt.type_int", "macro.dbt_date.month_name", "macro.dbt.date_trunc", "macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8368812, "supported_languages": null}, "macro.dbt_date.get_base_dates": {"name": "get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.get_base_dates", "macro_sql": "{% macro get_base_dates(start_date=None, end_date=None, n_dateparts=None, datepart=\"day\") %}\n    {{ adapter.dispatch('get_base_dates', 'dbt_date') (start_date, end_date, n_dateparts, datepart) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__get_base_dates"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8389933, "supported_languages": null}, "macro.dbt_date.default__get_base_dates": {"name": "default__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.default__get_base_dates", "macro_sql": "{% macro default__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n{%- if start_date and end_date -%}\n{%- set start_date=\"cast('\" ~ start_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\" -%}\n{%- set end_date=\"cast('\" ~ end_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\"  -%}\n\n{%- elif n_dateparts and datepart -%}\n\n{%- set start_date = dbt.dateadd(datepart, -1 * n_dateparts, dbt_date.today()) -%}\n{%- set end_date = dbt_date.tomorrow() -%}\n{%- endif -%}\n\nwith date_spine as\n(\n\n    {{ dbt_date.date_spine(\n        datepart=datepart,\n        start_date=start_date,\n        end_date=end_date,\n       )\n    }}\n\n)\nselect\n    cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\nfrom\n    date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp", "macro.dbt.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8409383, "supported_languages": null}, "macro.dbt_date.bigquery__get_base_dates": {"name": "bigquery__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.bigquery__get_base_dates", "macro_sql": "{% macro bigquery__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n{%- if start_date and end_date -%}\n{%- set start_date=\"cast('\" ~ start_date ~ \"' as datetime )\" -%}\n{%- set end_date=\"cast('\" ~ end_date ~ \"' as datetime )\" -%}\n\n{%- elif n_dateparts and datepart -%}\n\n{%- set start_date = dbt.dateadd(datepart, -1 * n_dateparts, dbt_date.today()) -%}\n{%- set end_date = dbt_date.tomorrow() -%}\n{%- endif -%}\n\nwith date_spine as\n(\n\n    {{ dbt_date.date_spine(\n        datepart=datepart,\n        start_date=start_date,\n        end_date=end_date,\n       )\n    }}\n\n)\nselect\n    cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\nfrom\n    date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8426797, "supported_languages": null}, "macro.dbt_date.next_week": {"name": "next_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_week.sql", "original_file_path": "macros/calendar_date/next_week.sql", "unique_id": "macro.dbt_date.next_week", "macro_sql": "{%- macro next_week(tz=None) -%}\n{{ dbt_date.n_weeks_away(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_weeks_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8431756, "supported_languages": null}, "macro.dbt_date.yesterday": {"name": "yesterday", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/yesterday.sql", "original_file_path": "macros/calendar_date/yesterday.sql", "unique_id": "macro.dbt_date.yesterday", "macro_sql": "{%- macro yesterday(date=None, tz=None) -%}\n{{ dbt_date.n_days_ago(1, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8437488, "supported_languages": null}, "macro.dbt_date.n_weeks_ago": {"name": "n_weeks_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_weeks_ago.sql", "original_file_path": "macros/calendar_date/n_weeks_ago.sql", "unique_id": "macro.dbt_date.n_weeks_ago", "macro_sql": "{%- macro n_weeks_ago(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('week',\n    dbt.dateadd('week', -1 * n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8446796, "supported_languages": null}, "macro.dbt_date.next_month": {"name": "next_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month.sql", "original_file_path": "macros/calendar_date/next_month.sql", "unique_id": "macro.dbt_date.next_month", "macro_sql": "{%- macro next_month(tz=None) -%}\n{{ dbt_date.n_months_away(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_months_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.845167, "supported_languages": null}, "macro.dbt_date.week_end": {"name": "week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.week_end", "macro_sql": "{%- macro week_end(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_end', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8463798, "supported_languages": null}, "macro.dbt_date.default__week_end": {"name": "default__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.default__week_end", "macro_sql": "{%- macro default__week_end(date) -%}\n{{ last_day(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.846734, "supported_languages": null}, "macro.dbt_date.snowflake__week_end": {"name": "snowflake__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.snowflake__week_end", "macro_sql": "\n\n{%- macro snowflake__week_end(date) -%}\n{%- set dt = dbt_date.week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8472497, "supported_languages": null}, "macro.dbt_date.postgres__week_end": {"name": "postgres__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.postgres__week_end", "macro_sql": "\n\n{%- macro postgres__week_end(date) -%}\n{%- set dt = dbt_date.week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8477902, "supported_languages": null}, "macro.dbt_date.duckdb__week_end": {"name": "duckdb__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.duckdb__week_end", "macro_sql": "\n\n{%- macro duckdb__week_end(date) -%}\n{{ return(dbt_date.postgres__week_end(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8481808, "supported_languages": null}, "macro.dbt_date.last_week": {"name": "last_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_week.sql", "original_file_path": "macros/calendar_date/last_week.sql", "unique_id": "macro.dbt_date.last_week", "macro_sql": "{%- macro last_week(tz=None) -%}\n{{ dbt_date.n_weeks_ago(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_weeks_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8486588, "supported_languages": null}, "macro.dbt_date.n_months_ago": {"name": "n_months_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_months_ago.sql", "original_file_path": "macros/calendar_date/n_months_ago.sql", "unique_id": "macro.dbt_date.n_months_ago", "macro_sql": "{%- macro n_months_ago(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('month',\n    dbt.dateadd('month', -1 * n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8495607, "supported_languages": null}, "macro.dbt_date.convert_timezone": {"name": "convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.convert_timezone", "macro_sql": "{%- macro convert_timezone(column, target_tz=None, source_tz=None) -%}\n{%- set source_tz = \"UTC\" if not source_tz else source_tz -%}\n{%- set target_tz = var(\"dbt_date:time_zone\") if not target_tz else target_tz -%}\n{{ adapter.dispatch('convert_timezone', 'dbt_date') (column, target_tz, source_tz) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.bigquery__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.851814, "supported_languages": null}, "macro.dbt_date.default__convert_timezone": {"name": "default__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.default__convert_timezone", "macro_sql": "{% macro default__convert_timezone(column, target_tz, source_tz) -%}\nconvert_timezone('{{ source_tz }}', '{{ target_tz }}',\n    cast({{ column }} as {{ dbt.type_timestamp() }})\n)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8523545, "supported_languages": null}, "macro.dbt_date.bigquery__convert_timezone": {"name": "bigquery__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.bigquery__convert_timezone", "macro_sql": "{%- macro bigquery__convert_timezone(column, target_tz, source_tz=None) -%}\ntimestamp(datetime({{ column }}, '{{ target_tz}}'))\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8527765, "supported_languages": null}, "macro.dbt_date.postgres__convert_timezone": {"name": "postgres__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.postgres__convert_timezone", "macro_sql": "{% macro postgres__convert_timezone(column, target_tz, source_tz) -%}\ncast(\n    cast({{ column }} as {{ dbt.type_timestamp() }})\n        at time zone '{{ source_tz }}' at time zone '{{ target_tz }}' as {{ dbt.type_timestamp() }}\n)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8533864, "supported_languages": null}, "macro.dbt_date.redshift__convert_timezone": {"name": "redshift__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.redshift__convert_timezone", "macro_sql": "{%- macro redshift__convert_timezone(column, target_tz, source_tz) -%}\n{{ return(dbt_date.default__convert_timezone(column, target_tz, source_tz)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.default__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8542848, "supported_languages": null}, "macro.dbt_date.duckdb__convert_timezone": {"name": "duckdb__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.duckdb__convert_timezone", "macro_sql": "{% macro duckdb__convert_timezone(column, target_tz, source_tz) -%}\n{{ return(dbt_date.postgres__convert_timezone(column, target_tz, source_tz)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.postgres__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.854792, "supported_languages": null}, "macro.dbt_date.spark__convert_timezone": {"name": "spark__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.spark__convert_timezone", "macro_sql": "{%- macro spark__convert_timezone(column, target_tz, source_tz) -%}\nfrom_utc_timestamp(\n        to_utc_timestamp({{ column }}, '{{ source_tz }}'),\n        '{{ target_tz }}'\n        )\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8552299, "supported_languages": null}, "macro.dbt_date.next_month_number": {"name": "next_month_number", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month_number.sql", "original_file_path": "macros/calendar_date/next_month_number.sql", "unique_id": "macro.dbt_date.next_month_number", "macro_sql": "{%- macro next_month_number(tz=None) -%}\n{{ dbt_date.date_part('month', dbt_date.next_month(tz)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8558042, "supported_languages": null}, "macro.dbt_date.month_name": {"name": "month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.month_name", "macro_sql": "{%- macro month_name(date, short=True) -%}\n    {{ adapter.dispatch('month_name', 'dbt_date') (date, short) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__month_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8571513, "supported_languages": null}, "macro.dbt_date.default__month_name": {"name": "default__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.default__month_name", "macro_sql": "\n\n{%- macro default__month_name(date, short) -%}\n{%- set f = 'MON' if short else 'MONTH' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8576698, "supported_languages": null}, "macro.dbt_date.bigquery__month_name": {"name": "bigquery__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.bigquery__month_name", "macro_sql": "\n\n{%- macro bigquery__month_name(date, short) -%}\n{%- set f = '%b' if short else '%B' -%}\n    format_date('{{ f }}', cast({{ date }} as date))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8581874, "supported_languages": null}, "macro.dbt_date.snowflake__month_name": {"name": "snowflake__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.snowflake__month_name", "macro_sql": "\n\n{%- macro snowflake__month_name(date, short) -%}\n{%- set f = 'MON' if short else 'MMMM' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8587015, "supported_languages": null}, "macro.dbt_date.postgres__month_name": {"name": "postgres__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.postgres__month_name", "macro_sql": "\n\n{%- macro postgres__month_name(date, short) -%}\n{# FM = Fill mode, which suppresses padding blanks #}\n{%- set f = 'FMMon' if short else 'FMMonth' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8592288, "supported_languages": null}, "macro.dbt_date.duckdb__month_name": {"name": "duckdb__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.duckdb__month_name", "macro_sql": "\n\n\n{%- macro duckdb__month_name(date, short) -%}\n    {%- if short -%}\n    substr(monthname({{ date }}), 1, 3)\n    {%- else -%}\n    monthname({{ date }})\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8597233, "supported_languages": null}, "macro.dbt_date.spark__month_name": {"name": "spark__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.spark__month_name", "macro_sql": "\n\n{%- macro spark__month_name(date, short) -%}\n{%- set f = 'LLL' if short else 'LLLL' -%}\n    date_format({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.860258, "supported_languages": null}, "macro.dbt_date.round_timestamp": {"name": "round_timestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/round_timestamp.sql", "original_file_path": "macros/calendar_date/round_timestamp.sql", "unique_id": "macro.dbt_date.round_timestamp", "macro_sql": "{% macro round_timestamp(timestamp) %}\n    {{ dbt.date_trunc(\"day\", dbt.dateadd(\"hour\", 12, timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8608813, "supported_languages": null}, "macro.dbt_date.tomorrow": {"name": "tomorrow", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/tomorrow.sql", "original_file_path": "macros/calendar_date/tomorrow.sql", "unique_id": "macro.dbt_date.tomorrow", "macro_sql": "{%- macro tomorrow(date=None, tz=None) -%}\n{{ dbt_date.n_days_away(1, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8614433, "supported_languages": null}, "macro.dbt_date.day_of_year": {"name": "day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.day_of_year", "macro_sql": "{%- macro day_of_year(date) -%}\n{{ adapter.dispatch('day_of_year', 'dbt_date') (date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__day_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8622591, "supported_languages": null}, "macro.dbt_date.default__day_of_year": {"name": "default__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.default__day_of_year", "macro_sql": "\n\n{%- macro default__day_of_year(date) -%}\n    {{ dbt_date.date_part('dayofyear', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8626292, "supported_languages": null}, "macro.dbt_date.postgres__day_of_year": {"name": "postgres__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.postgres__day_of_year", "macro_sql": "\n\n{%- macro postgres__day_of_year(date) -%}\n    {{ dbt_date.date_part('doy', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8629956, "supported_languages": null}, "macro.dbt_date.redshift__day_of_year": {"name": "redshift__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.redshift__day_of_year", "macro_sql": "\n\n{%- macro redshift__day_of_year(date) -%}\n    cast({{ dbt_date.date_part('dayofyear', date) }} as {{ dbt.type_bigint() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.863472, "supported_languages": null}, "macro.dbt_date.spark__day_of_year": {"name": "spark__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.spark__day_of_year", "macro_sql": "\n\n{%- macro spark__day_of_year(date) -%}\n    dayofyear({{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8637686, "supported_languages": null}, "macro.dbt_date.day_of_month": {"name": "day_of_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_month.sql", "original_file_path": "macros/calendar_date/day_of_month.sql", "unique_id": "macro.dbt_date.day_of_month", "macro_sql": "{%- macro day_of_month(date) -%}\n{{ dbt_date.date_part('day', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8643105, "supported_languages": null}, "macro.dbt_date.redshift__day_of_month": {"name": "redshift__day_of_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_month.sql", "original_file_path": "macros/calendar_date/day_of_month.sql", "unique_id": "macro.dbt_date.redshift__day_of_month", "macro_sql": "\n\n{%- macro redshift__day_of_month(date) -%}\ncast({{ dbt_date.date_part('day', date) }} as {{ dbt.type_bigint() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8647923, "supported_languages": null}, "macro.dbt_date.last_month_number": {"name": "last_month_number", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month_number.sql", "original_file_path": "macros/calendar_date/last_month_number.sql", "unique_id": "macro.dbt_date.last_month_number", "macro_sql": "{%- macro last_month_number(tz=None) -%}\n{{ dbt_date.date_part('month', dbt_date.last_month(tz)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8653536, "supported_languages": null}, "macro.dbt_date.date_part": {"name": "date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.date_part", "macro_sql": "{% macro date_part(datepart, date) -%}\n    {{ adapter.dispatch('date_part', 'dbt_date') (datepart, date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8662076, "supported_languages": null}, "macro.dbt_date.default__date_part": {"name": "default__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.default__date_part", "macro_sql": "{% macro default__date_part(datepart, date) -%}\n    date_part('{{ datepart }}', {{  date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8665695, "supported_languages": null}, "macro.dbt_date.bigquery__date_part": {"name": "bigquery__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.bigquery__date_part", "macro_sql": "{% macro bigquery__date_part(datepart, date) -%}\n    extract({{ datepart }} from {{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8669143, "supported_languages": null}, "macro.dbt_date.last_month_name": {"name": "last_month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month_name.sql", "original_file_path": "macros/calendar_date/last_month_name.sql", "unique_id": "macro.dbt_date.last_month_name", "macro_sql": "{%- macro last_month_name(short=True, tz=None) -%}\n{{ dbt_date.month_name(dbt_date.last_month(tz), short=short) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.month_name", "macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8675277, "supported_languages": null}, "macro.dbt_date.last_month": {"name": "last_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month.sql", "original_file_path": "macros/calendar_date/last_month.sql", "unique_id": "macro.dbt_date.last_month", "macro_sql": "{%- macro last_month(tz=None) -%}\n{{ dbt_date.n_months_ago(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_months_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8680234, "supported_languages": null}, "macro.dbt_date.n_days_away": {"name": "n_days_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_days_away.sql", "original_file_path": "macros/calendar_date/n_days_away.sql", "unique_id": "macro.dbt_date.n_days_away", "macro_sql": "{%- macro n_days_away(n, date=None, tz=None) -%}\n{{ dbt_date.n_days_ago(-1 * n, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.868652, "supported_languages": null}, "macro.dbt_date.iso_week_start": {"name": "iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.iso_week_start", "macro_sql": "{%- macro iso_week_start(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_start', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8700125, "supported_languages": null}, "macro.dbt_date._iso_week_start": {"name": "_iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date._iso_week_start", "macro_sql": "{%- macro _iso_week_start(date, week_type) -%}\ncast({{ dbt.date_trunc(week_type, date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8704276, "supported_languages": null}, "macro.dbt_date.default__iso_week_start": {"name": "default__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.default__iso_week_start", "macro_sql": "\n\n{%- macro default__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'isoweek') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8707962, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_start": {"name": "snowflake__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_start", "macro_sql": "\n\n{%- macro snowflake__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8711607, "supported_languages": null}, "macro.dbt_date.postgres__iso_week_start": {"name": "postgres__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.postgres__iso_week_start", "macro_sql": "\n\n{%- macro postgres__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8715281, "supported_languages": null}, "macro.dbt_date.duckdb__iso_week_start": {"name": "duckdb__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.duckdb__iso_week_start", "macro_sql": "\n\n{%- macro duckdb__iso_week_start(date) -%}\n{{ return(dbt_date.postgres__iso_week_start(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8719242, "supported_languages": null}, "macro.dbt_date.spark__iso_week_start": {"name": "spark__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.spark__iso_week_start", "macro_sql": "\n\n{%- macro spark__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8722923, "supported_languages": null}, "macro.dbt_date.today": {"name": "today", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/today.sql", "original_file_path": "macros/calendar_date/today.sql", "unique_id": "macro.dbt_date.today", "macro_sql": "{%- macro today(tz=None) -%}\ncast({{ dbt_date.now(tz) }} as date)\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.872751, "supported_languages": null}, "macro.dbt_date.periods_since": {"name": "periods_since", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/periods_since.sql", "original_file_path": "macros/calendar_date/periods_since.sql", "unique_id": "macro.dbt_date.periods_since", "macro_sql": "{%- macro periods_since(date_col, period_name='day', tz=None) -%}\n{{ dbt.datediff(date_col, dbt_date.now(tz), period_name) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.datediff", "macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.873415, "supported_languages": null}, "macro.dbt_date.week_start": {"name": "week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.week_start", "macro_sql": "{%- macro week_start(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_start', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8745942, "supported_languages": null}, "macro.dbt_date.default__week_start": {"name": "default__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.default__week_start", "macro_sql": "{%- macro default__week_start(date) -%}\ncast({{ dbt.date_trunc('week', date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8750005, "supported_languages": null}, "macro.dbt_date.snowflake__week_start": {"name": "snowflake__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.snowflake__week_start", "macro_sql": "\n\n{%- macro snowflake__week_start(date) -%}\n    {#\n        Get the day of week offset: e.g. if the date is a Sunday,\n        dbt_date.day_of_week returns 1, so we subtract 1 to get a 0 offset\n    #}\n    {% set off_set = dbt_date.day_of_week(date, isoweek=False) ~ \" - 1\" %}\n    cast({{ dbt.dateadd(\"day\", \"-1 * (\" ~ off_set ~ \")\", date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.day_of_week", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8757765, "supported_languages": null}, "macro.dbt_date.postgres__week_start": {"name": "postgres__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.postgres__week_start", "macro_sql": "\n\n{%- macro postgres__week_start(date) -%}\n-- Sunday as week start date\ncast({{ dbt.dateadd('day', -1, dbt.date_trunc('week', dbt.dateadd('day', 1, date))) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8764558, "supported_languages": null}, "macro.dbt_date.duckdb__week_start": {"name": "duckdb__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.duckdb__week_start", "macro_sql": "\n\n{%- macro duckdb__week_start(date) -%}\n{{ return(dbt_date.postgres__week_start(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.876843, "supported_languages": null}, "macro.dbt_date.week_of_year": {"name": "week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.week_of_year", "macro_sql": "{%- macro week_of_year(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_of_year', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8780665, "supported_languages": null}, "macro.dbt_date.default__week_of_year": {"name": "default__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.default__week_of_year", "macro_sql": "{%- macro default__week_of_year(date) -%}\ncast({{ dbt_date.date_part('week', date) }} as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.878566, "supported_languages": null}, "macro.dbt_date.postgres__week_of_year": {"name": "postgres__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.postgres__week_of_year", "macro_sql": "\n\n{%- macro postgres__week_of_year(date) -%}\n{# postgresql 'week' returns isoweek. Use to_char instead.\n   WW = the first week starts on the first day of the year #}\ncast(to_char({{ date }}, 'WW') as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8789613, "supported_languages": null}, "macro.dbt_date.duckdb__week_of_year": {"name": "duckdb__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.duckdb__week_of_year", "macro_sql": "\n\n{%- macro duckdb__week_of_year(date) -%}\ncast(ceil(dayofyear({{ date }}) / 7) as int)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8792424, "supported_languages": null}, "macro.dbt_date.n_months_away": {"name": "n_months_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_months_away.sql", "original_file_path": "macros/calendar_date/n_months_away.sql", "unique_id": "macro.dbt_date.n_months_away", "macro_sql": "{%- macro n_months_away(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('month',\n    dbt.dateadd('month', n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8801322, "supported_languages": null}, "macro.dbt_date.from_unixtimestamp": {"name": "from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.from_unixtimestamp", "macro_sql": "{%- macro from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {{ adapter.dispatch('from_unixtimestamp', 'dbt_date') (epochs, format) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__from_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8825192, "supported_languages": null}, "macro.dbt_date.default__from_unixtimestamp": {"name": "default__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.default__from_unixtimestamp", "macro_sql": "\n\n{%- macro default__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    to_timestamp({{ epochs }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8831985, "supported_languages": null}, "macro.dbt_date.postgres__from_unixtimestamp": {"name": "postgres__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.postgres__from_unixtimestamp", "macro_sql": "\n\n{%- macro postgres__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    cast(to_timestamp({{ epochs }}) at time zone 'UTC' as timestamp)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.883894, "supported_languages": null}, "macro.dbt_date.snowflake__from_unixtimestamp": {"name": "snowflake__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.snowflake__from_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n    {%- set scale = 0 -%}\n    {%- elif format == \"milliseconds\" -%}\n    {%- set scale = 3 -%}\n    {%- elif format == \"microseconds\" -%}\n    {%- set scale = 6 -%}\n    {%- else -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    to_timestamp_ntz({{ epochs }}, {{ scale }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.885105, "supported_languages": null}, "macro.dbt_date.bigquery__from_unixtimestamp": {"name": "bigquery__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.bigquery__from_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n        timestamp_seconds({{ epochs }})\n    {%- elif format == \"milliseconds\" -%}\n        timestamp_millis({{ epochs }})\n    {%- elif format == \"microseconds\" -%}\n        timestamp_micros({{ epochs }})\n    {%- else -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8861299, "supported_languages": null}, "macro.dbt_date.iso_week_end": {"name": "iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.iso_week_end", "macro_sql": "{%- macro iso_week_end(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_end', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8872342, "supported_languages": null}, "macro.dbt_date._iso_week_end": {"name": "_iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date._iso_week_end", "macro_sql": "{%- macro _iso_week_end(date, week_type) -%}\n{%- set dt = dbt_date.iso_week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.iso_week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8878067, "supported_languages": null}, "macro.dbt_date.default__iso_week_end": {"name": "default__iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.default__iso_week_end", "macro_sql": "\n\n{%- macro default__iso_week_end(date) -%}\n{{ dbt_date._iso_week_end(date, 'isoweek') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.888182, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_end": {"name": "snowflake__iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_end", "macro_sql": "\n\n{%- macro snowflake__iso_week_end(date) -%}\n{{ dbt_date._iso_week_end(date, 'weekiso') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8885481, "supported_languages": null}, "macro.dbt_date.now": {"name": "now", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/now.sql", "original_file_path": "macros/calendar_date/now.sql", "unique_id": "macro.dbt_date.now", "macro_sql": "{%- macro now(tz=None) -%}\n{{ dbt_date.convert_timezone(dbt.current_timestamp(), tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.convert_timezone", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.889068, "supported_languages": null}, "macro.dbt_date.day_name": {"name": "day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.day_name", "macro_sql": "{%- macro day_name(date, short=True) -%}\n    {{ adapter.dispatch('day_name', 'dbt_date') (date, short) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__day_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8906605, "supported_languages": null}, "macro.dbt_date.default__day_name": {"name": "default__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.default__day_name", "macro_sql": "\n\n{%- macro default__day_name(date, short) -%}\n{%- set f = 'Dy' if short else 'Day' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8911815, "supported_languages": null}, "macro.dbt_date.snowflake__day_name": {"name": "snowflake__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.snowflake__day_name", "macro_sql": "\n\n{%- macro snowflake__day_name(date, short) -%}\n    {%- if short -%}\n    dayname({{ date }})\n    {%- else -%}\n    -- long version not implemented on Snowflake so we're doing it manually :/\n    case dayname({{ date }})\n        when 'Mon' then 'Monday'\n        when 'Tue' then 'Tuesday'\n        when 'Wed' then 'Wednesday'\n        when 'Thu' then 'Thursday'\n        when 'Fri' then 'Friday'\n        when 'Sat' then 'Saturday'\n        when 'Sun' then 'Sunday'\n    end\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8917253, "supported_languages": null}, "macro.dbt_date.bigquery__day_name": {"name": "bigquery__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.bigquery__day_name", "macro_sql": "\n\n{%- macro bigquery__day_name(date, short) -%}\n{%- set f = '%a' if short else '%A' -%}\n    format_date('{{ f }}', cast({{ date }} as date))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8922594, "supported_languages": null}, "macro.dbt_date.postgres__day_name": {"name": "postgres__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.postgres__day_name", "macro_sql": "\n\n{%- macro postgres__day_name(date, short) -%}\n{# FM = Fill mode, which suppresses padding blanks #}\n{%- set f = 'FMDy' if short else 'FMDay' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8927956, "supported_languages": null}, "macro.dbt_date.duckdb__day_name": {"name": "duckdb__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.duckdb__day_name", "macro_sql": "\n\n{%- macro duckdb__day_name(date, short) -%}\n    {%- if short -%}\n    substr(dayname({{ date }}), 1, 3)\n    {%- else -%}\n    dayname({{ date }})\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8934417, "supported_languages": null}, "macro.dbt_date.spark__day_name": {"name": "spark__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.spark__day_name", "macro_sql": "\n\n{%- macro spark__day_name(date, short) -%}\n{%- set f = 'E' if short else 'EEEE' -%}\n    date_format({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8939705, "supported_languages": null}, "macro.dbt_date.iso_week_of_year": {"name": "iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.iso_week_of_year", "macro_sql": "{%- macro iso_week_of_year(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_of_year', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8954399, "supported_languages": null}, "macro.dbt_date._iso_week_of_year": {"name": "_iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date._iso_week_of_year", "macro_sql": "{%- macro _iso_week_of_year(date, week_type) -%}\ncast({{ dbt_date.date_part(week_type, date) }} as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8959637, "supported_languages": null}, "macro.dbt_date.default__iso_week_of_year": {"name": "default__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.default__iso_week_of_year", "macro_sql": "\n\n{%- macro default__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'isoweek') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8963363, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_of_year": {"name": "snowflake__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_of_year", "macro_sql": "\n\n{%- macro snowflake__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'weekiso') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8967044, "supported_languages": null}, "macro.dbt_date.postgres__iso_week_of_year": {"name": "postgres__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.postgres__iso_week_of_year", "macro_sql": "\n\n{%- macro postgres__iso_week_of_year(date) -%}\n-- postgresql week is isoweek, the first week of a year containing January 4 of that year.\n{{ dbt_date._iso_week_of_year(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8970897, "supported_languages": null}, "macro.dbt_date.duckdb__iso_week_of_year": {"name": "duckdb__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.duckdb__iso_week_of_year", "macro_sql": "\n\n{%- macro duckdb__iso_week_of_year(date) -%}\n{{ return(dbt_date.postgres__iso_week_of_year(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.897468, "supported_languages": null}, "macro.dbt_date.spark__iso_week_of_year": {"name": "spark__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.spark__iso_week_of_year", "macro_sql": "\n\n{%- macro spark__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8978336, "supported_languages": null}, "macro.dbt_date.n_weeks_away": {"name": "n_weeks_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_weeks_away.sql", "original_file_path": "macros/calendar_date/n_weeks_away.sql", "unique_id": "macro.dbt_date.n_weeks_away", "macro_sql": "{%- macro n_weeks_away(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('week',\n    dbt.dateadd('week', n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8987124, "supported_languages": null}, "macro.dbt_date.n_days_ago": {"name": "n_days_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_days_ago.sql", "original_file_path": "macros/calendar_date/n_days_ago.sql", "unique_id": "macro.dbt_date.n_days_ago", "macro_sql": "{%- macro n_days_ago(n, date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{%- set n = n|int -%}\ncast({{ dbt.dateadd('day', -1 * n, dt) }} as date)\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.8997693, "supported_languages": null}, "macro.dbt_date.to_unixtimestamp": {"name": "to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.to_unixtimestamp", "macro_sql": "{%- macro to_unixtimestamp(timestamp) -%}\n    {{ adapter.dispatch('to_unixtimestamp', 'dbt_date') (timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__to_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9005983, "supported_languages": null}, "macro.dbt_date.default__to_unixtimestamp": {"name": "default__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.default__to_unixtimestamp", "macro_sql": "\n\n{%- macro default__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part('epoch', timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9009738, "supported_languages": null}, "macro.dbt_date.snowflake__to_unixtimestamp": {"name": "snowflake__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.snowflake__to_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part('epoch_seconds', timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9013515, "supported_languages": null}, "macro.dbt_date.bigquery__to_unixtimestamp": {"name": "bigquery__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.bigquery__to_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__to_unixtimestamp(timestamp) -%}\n    unix_seconds({{ timestamp }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.90163, "supported_languages": null}, "macro.dbt_date.spark__to_unixtimestamp": {"name": "spark__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.spark__to_unixtimestamp", "macro_sql": "\n\n{%- macro spark__to_unixtimestamp(timestamp) -%}\n    unix_timestamp({{ timestamp }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9019024, "supported_languages": null}, "macro.dbt_date.day_of_week": {"name": "day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.day_of_week", "macro_sql": "{%- macro day_of_week(date, isoweek=true) -%}\n{{ adapter.dispatch('day_of_week', 'dbt_date') (date, isoweek) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__day_of_week"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9059088, "supported_languages": null}, "macro.dbt_date.default__day_of_week": {"name": "default__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.default__day_of_week", "macro_sql": "\n\n{%- macro default__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (0) to Monday (1)\n        when {{ dow }} = 0 then 7\n        else {{ dow }}\n    end\n    {%- else -%}\n    {{ dow }} + 1\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.906677, "supported_languages": null}, "macro.dbt_date.snowflake__day_of_week": {"name": "snowflake__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.snowflake__day_of_week", "macro_sql": "\n\n{%- macro snowflake__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = 'dayofweekiso' -%}\n        {{ dbt_date.date_part(dow_part, date) }}\n    {%- else -%}\n        {%- set dow_part = 'dayofweek' -%}\n        case\n            when {{ dbt_date.date_part(dow_part, date) }} = 7 then 1\n            else {{ dbt_date.date_part(dow_part, date) }} + 1\n        end\n    {%- endif -%}\n\n\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9078798, "supported_languages": null}, "macro.dbt_date.bigquery__day_of_week": {"name": "bigquery__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.bigquery__day_of_week", "macro_sql": "\n\n{%- macro bigquery__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (1) to Monday (2)\n        when {{ dow }} = 1 then 7\n        else {{ dow }} - 1\n    end\n    {%- else -%}\n    {{ dow }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9086475, "supported_languages": null}, "macro.dbt_date.postgres__day_of_week": {"name": "postgres__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.postgres__day_of_week", "macro_sql": "\n\n\n{%- macro postgres__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = 'isodow' -%}\n        -- Monday(1) to Sunday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} as {{ dbt.type_int() }})\n    {%- else -%}\n        {%- set dow_part = 'dow' -%}\n        -- Sunday(1) to Saturday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} + 1 as {{ dbt.type_int() }})\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9097366, "supported_languages": null}, "macro.dbt_date.redshift__day_of_week": {"name": "redshift__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.redshift__day_of_week", "macro_sql": "\n\n\n{%- macro redshift__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (0) to Monday (1)\n        when {{ dow }} = 0 then 7\n        else cast({{ dow }} as {{ dbt.type_bigint() }})\n    end\n    {%- else -%}\n    cast({{ dow }} + 1 as {{ dbt.type_bigint() }})\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9106872, "supported_languages": null}, "macro.dbt_date.duckdb__day_of_week": {"name": "duckdb__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.duckdb__day_of_week", "macro_sql": "\n\n{%- macro duckdb__day_of_week(date, isoweek) -%}\n{{ return(dbt_date.postgres__day_of_week(date, isoweek)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__day_of_week"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9111307, "supported_languages": null}, "macro.dbt_date.spark__day_of_week": {"name": "spark__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.spark__day_of_week", "macro_sql": "\n\n\n{%- macro spark__day_of_week(date, isoweek) -%}\n\n    {%- set dow = \"dayofweek_iso\" if isoweek else \"dayofweek\" -%}\n\n    {{ dbt_date.date_part(dow, date) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9116871, "supported_languages": null}, "macro.dbt_date.next_month_name": {"name": "next_month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month_name.sql", "original_file_path": "macros/calendar_date/next_month_name.sql", "unique_id": "macro.dbt_date.next_month_name", "macro_sql": "{%- macro next_month_name(short=True, tz=None) -%}\n{{ dbt_date.month_name(dbt_date.next_month(tz), short=short) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.month_name", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.91233, "supported_languages": null}, "macro.dbt_date.get_fiscal_year_dates": {"name": "get_fiscal_year_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_year_dates.sql", "original_file_path": "macros/fiscal_date/get_fiscal_year_dates.sql", "unique_id": "macro.dbt_date.get_fiscal_year_dates", "macro_sql": "{% macro get_fiscal_year_dates(dates, year_end_month=12, week_start_day=1, shift_year=1) %}\n{{ adapter.dispatch('get_fiscal_year_dates', 'dbt_date') (dates, year_end_month, week_start_day, shift_year) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_fiscal_year_dates"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9153073, "supported_languages": null}, "macro.dbt_date.default__get_fiscal_year_dates": {"name": "default__get_fiscal_year_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_year_dates.sql", "original_file_path": "macros/fiscal_date/get_fiscal_year_dates.sql", "unique_id": "macro.dbt_date.default__get_fiscal_year_dates", "macro_sql": "{% macro default__get_fiscal_year_dates(dates, year_end_month, week_start_day, shift_year) %}\n-- this gets all the dates within a fiscal year\n-- determined by the given year-end-month\n-- ending on the saturday closest to that month's end date\nwith fsc_date_dimension as (\n    select * from {{ dates }}\n),\nyear_month_end as (\n\n    select\n       d.year_number - {{ shift_year }} as fiscal_year_number,\n       d.month_end_date\n    from\n        fsc_date_dimension d\n    where\n        d.month_of_year = {{ year_end_month }}\n    group by 1,2\n\n),\nweeks as (\n\n    select\n        d.year_number,\n        d.month_of_year,\n        d.date_day as week_start_date,\n        cast({{ dbt.dateadd('day', 6, 'd.date_day') }} as date) as week_end_date\n    from\n        fsc_date_dimension d\n    where\n        d.day_of_week = {{ week_start_day }}\n\n),\n-- get all the weeks that start in the month the year ends\nyear_week_ends as (\n\n    select\n        d.year_number - {{ shift_year }} as fiscal_year_number,\n        d.week_end_date\n    from\n        weeks d\n    where\n        d.month_of_year = {{ year_end_month }}\n    group by\n        1,2\n\n),\n-- then calculate which Saturday is closest to month end\nweeks_at_month_end as (\n\n    select\n        d.fiscal_year_number,\n        d.week_end_date,\n        m.month_end_date,\n        rank() over\n            (partition by d.fiscal_year_number\n                order by\n                abs({{ dbt.datediff('d.week_end_date', 'm.month_end_date', 'day') }})\n\n            ) as closest_to_month_end\n    from\n        year_week_ends d\n        join\n        year_month_end m on d.fiscal_year_number = m.fiscal_year_number\n),\nfiscal_year_range as (\n\n    select\n        w.fiscal_year_number,\n        cast(\n            {{ dbt.dateadd('day', 1,\n            'lag(w.week_end_date) over(order by w.week_end_date)') }}\n            as date) as fiscal_year_start_date,\n        w.week_end_date as fiscal_year_end_date\n    from\n        weeks_at_month_end w\n    where\n        w.closest_to_month_end = 1\n\n),\nfiscal_year_dates as (\n\n    select\n        d.date_day,\n        m.fiscal_year_number,\n        m.fiscal_year_start_date,\n        m.fiscal_year_end_date,\n        w.week_start_date,\n        w.week_end_date,\n        -- we reset the weeks of the year starting with the merch year start date\n        dense_rank()\n            over(\n                partition by m.fiscal_year_number\n                order by w.week_start_date\n                ) as fiscal_week_of_year\n    from\n        fsc_date_dimension d\n        join\n        fiscal_year_range m on d.date_day between m.fiscal_year_start_date and m.fiscal_year_end_date\n        join\n        weeks w on d.date_day between w.week_start_date and w.week_end_date\n\n)\nselect * from fiscal_year_dates order by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9168062, "supported_languages": null}, "macro.dbt_date.get_fiscal_periods": {"name": "get_fiscal_periods", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_periods.sql", "original_file_path": "macros/fiscal_date/get_fiscal_periods.sql", "unique_id": "macro.dbt_date.get_fiscal_periods", "macro_sql": "{% macro get_fiscal_periods(dates, year_end_month, week_start_day, shift_year=1) %}\n{#\nThis macro requires you to pass in a ref to a date dimension, created via\ndbt_date.get_date_dimension()s\n#}\nwith fscl_year_dates_for_periods as (\n    {{ dbt_date.get_fiscal_year_dates(dates, year_end_month, week_start_day, shift_year) }}\n),\nfscl_year_w13 as (\n\n    select\n        f.*,\n        -- We count the weeks in a 13 week period\n        -- and separate the 4-5-4 week sequences\n        mod(cast(\n            (f.fiscal_week_of_year-1) as {{ dbt.type_int() }}\n            ), 13) as w13_number,\n        -- Chop weeks into 13 week merch quarters\n        cast(\n            least(\n                floor((f.fiscal_week_of_year-1)/13.0)\n                , 3)\n            as {{ dbt.type_int() }}) as quarter_number\n    from\n        fscl_year_dates_for_periods f\n\n),\nfscl_periods as (\n\n    select\n        f.date_day,\n        f.fiscal_year_number,\n        f.week_start_date,\n        f.week_end_date,\n        f.fiscal_week_of_year,\n        case\n            -- we move week 53 into the 3rd period of the quarter\n            when f.fiscal_week_of_year = 53 then 3\n            when f.w13_number between 0 and 3 then 1\n            when f.w13_number between 4 and 8 then 2\n            when f.w13_number between 9 and 12 then 3\n        end as period_of_quarter,\n        f.quarter_number\n    from\n        fscl_year_w13 f\n\n),\nfscl_periods_quarters as (\n\n    select\n        f.*,\n        cast((\n            (f.quarter_number * 3) + f.period_of_quarter\n         ) as {{ dbt.type_int() }}) as fiscal_period_number\n    from\n        fscl_periods f\n\n)\nselect\n    date_day,\n    fiscal_year_number,\n    week_start_date,\n    week_end_date,\n    fiscal_week_of_year,\n    dense_rank() over(partition by fiscal_period_number order by fiscal_week_of_year) as fiscal_week_of_period,\n    fiscal_period_number,\n    quarter_number+1 as fiscal_quarter_number,\n    period_of_quarter as fiscal_period_of_quarter\nfrom\n    fscl_periods_quarters\norder by 1,2\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_fiscal_year_dates", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9186745, "supported_languages": null}, "macro.dbt_date.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_date')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.920406, "supported_languages": null}, "macro.dbt_date.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.921488, "supported_languages": null}, "macro.dbt_date.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_date')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9219944, "supported_languages": null}, "macro.dbt_date.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_date.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.923348, "supported_languages": null}, "macro.dbt_date.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_date')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9248521, "supported_languages": null}, "macro.dbt_date.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9263842, "supported_languages": null}, "macro.dbt_date.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_date')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9269927, "supported_languages": null}, "macro.dbt_date.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{\n        dbt_date.generate_series(\n            dbt_date.get_intervals_between(start_date, end_date, datepart)\n        )\n    }}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"(row_number() over (order by 1) - 1)\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.generate_series", "macro.dbt_date.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9279544, "supported_languages": null}, "macro.dbt_date.date": {"name": "date", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/modules_datetime.sql", "original_file_path": "macros/_utils/modules_datetime.sql", "unique_id": "macro.dbt_date.date", "macro_sql": "{% macro date(year, month, day) %}\n    {{ return(modules.datetime.date(year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.928753, "supported_languages": null}, "macro.dbt_date.datetime": {"name": "datetime", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/modules_datetime.sql", "original_file_path": "macros/_utils/modules_datetime.sql", "unique_id": "macro.dbt_date.datetime", "macro_sql": "{% macro datetime(year, month, day, hour=0, minute=0, second=0, microsecond=0, tz=None) %}\n    {% set tz = tz if tz else var(\"dbt_date:time_zone\") %}\n    {{ return(\n        modules.datetime.datetime(\n            year=year, month=month, day=day, hour=hour,\n            minute=minute, second=second, microsecond=microsecond,\n            tzinfo=modules.pytz.timezone(tz)\n        )\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.930294, "supported_languages": null}, "macro.dbt_expectations.median": {"name": "median", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/median.sql", "original_file_path": "macros/math/median.sql", "unique_id": "macro.dbt_expectations.median", "macro_sql": "{% macro median(field) %}\n{{ dbt_expectations.percentile_cont(field, 0.5) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.percentile_cont"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9308112, "supported_languages": null}, "macro.dbt_expectations.rand": {"name": "rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.rand", "macro_sql": "{% macro rand() -%}\n    {{ adapter.dispatch('rand', 'dbt_expectations') () }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.bigquery__rand"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9315813, "supported_languages": null}, "macro.dbt_expectations.default__rand": {"name": "default__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.default__rand", "macro_sql": "{% macro default__rand() -%}\n\n    rand()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9318104, "supported_languages": null}, "macro.dbt_expectations.bigquery__rand": {"name": "bigquery__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.bigquery__rand", "macro_sql": "{% macro bigquery__rand() -%}\n\n    rand()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.932014, "supported_languages": null}, "macro.dbt_expectations.snowflake__rand": {"name": "snowflake__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.snowflake__rand", "macro_sql": "{% macro snowflake__rand(seed) -%}\n\n    uniform(0::float, 1::float, random())\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.932235, "supported_languages": null}, "macro.dbt_expectations.postgres__rand": {"name": "postgres__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.postgres__rand", "macro_sql": "{% macro postgres__rand() -%}\n\n    random()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9324358, "supported_languages": null}, "macro.dbt_expectations.redshift__rand": {"name": "redshift__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.redshift__rand", "macro_sql": "{% macro redshift__rand() -%}\n\n    random()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9326332, "supported_languages": null}, "macro.dbt_expectations.duckdb__rand": {"name": "duckdb__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.duckdb__rand", "macro_sql": "{% macro duckdb__rand() -%}\n\n    random()\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9328287, "supported_languages": null}, "macro.dbt_expectations.percentile_cont": {"name": "percentile_cont", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.percentile_cont", "macro_sql": "{% macro percentile_cont(field, quantile, partition=None) %}\n  {{ adapter.dispatch('quantile', 'dbt_expectations') (field, quantile, partition) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.bigquery__quantile"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9340634, "supported_languages": null}, "macro.dbt_expectations.default__quantile": {"name": "default__quantile", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.default__quantile", "macro_sql": "{% macro default__quantile(field, quantile, partition)  -%}\n    percentile_cont({{ quantile }}) within group (order by {{ field }})\n    {%- if partition %}over(partition by {{ partition }}){% endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9346073, "supported_languages": null}, "macro.dbt_expectations.bigquery__quantile": {"name": "bigquery__quantile", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.bigquery__quantile", "macro_sql": "{% macro bigquery__quantile(field, quantile, partition) -%}\n    percentile_cont({{ field }}, {{ quantile }})\n    over({%- if partition %}partition by {{ partition }}{% endif -%})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9351566, "supported_languages": null}, "macro.dbt_expectations.spark__quantile": {"name": "spark__quantile", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.spark__quantile", "macro_sql": "{% macro spark__quantile(field, quantile, partition) -%}\n    percentile({{ field }}, {{ quantile }})\n    over({%- if partition %}partition by {{ partition }}{% endif -%})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9357066, "supported_languages": null}, "macro.dbt_expectations.log_natural": {"name": "log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.log_natural", "macro_sql": "{% macro log_natural(x) -%}\n    {{ adapter.dispatch('log_natural', 'dbt_expectations') (x) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.bigquery__log_natural"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9364967, "supported_languages": null}, "macro.dbt_expectations.default__log_natural": {"name": "default__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.default__log_natural", "macro_sql": "{% macro default__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.936779, "supported_languages": null}, "macro.dbt_expectations.bigquery__log_natural": {"name": "bigquery__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.bigquery__log_natural", "macro_sql": "{% macro bigquery__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9370506, "supported_languages": null}, "macro.dbt_expectations.snowflake__log_natural": {"name": "snowflake__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.snowflake__log_natural", "macro_sql": "{% macro snowflake__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.937328, "supported_languages": null}, "macro.dbt_expectations.spark__log_natural": {"name": "spark__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.spark__log_natural", "macro_sql": "{% macro spark__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9376016, "supported_languages": null}, "macro.dbt_expectations.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.type_timestamp", "macro_sql": "\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt_expectations')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_expectations.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9385705, "supported_languages": null}, "macro.dbt_expectations.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() -%}\n    timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9389155, "supported_languages": null}, "macro.dbt_expectations.snowflake__type_timestamp": {"name": "snowflake__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.snowflake__type_timestamp", "macro_sql": "{% macro snowflake__type_timestamp() -%}\n    timestamp_ntz\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9391232, "supported_languages": null}, "macro.dbt_expectations.postgres__type_timestamp": {"name": "postgres__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.postgres__type_timestamp", "macro_sql": "{% macro postgres__type_timestamp() -%}\n    timestamp without time zone\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9393516, "supported_languages": null}, "macro.dbt_expectations.type_datetime": {"name": "type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.type_datetime", "macro_sql": "{% macro type_datetime() -%}\n  {{ return(adapter.dispatch('type_datetime', 'dbt_expectations')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__type_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9397926, "supported_languages": null}, "macro.dbt_expectations.default__type_datetime": {"name": "default__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.default__type_datetime", "macro_sql": "{% macro default__type_datetime() -%}\n    datetime\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9400039, "supported_languages": null}, "macro.dbt_expectations.snowflake__type_datetime": {"name": "snowflake__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.snowflake__type_datetime", "macro_sql": "{% macro snowflake__type_datetime() -%}\n    timestamp_ntz\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.940203, "supported_languages": null}, "macro.dbt_expectations.postgres__type_datetime": {"name": "postgres__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.postgres__type_datetime", "macro_sql": "{% macro postgres__type_datetime() -%}\n    timestamp without time zone\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9404006, "supported_languages": null}, "macro.dbt_expectations.duckdb__type_datetime": {"name": "duckdb__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.duckdb__type_datetime", "macro_sql": "{% macro duckdb__type_datetime() -%}\n    timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9405944, "supported_languages": null}, "macro.dbt_expectations.spark__type_datetime": {"name": "spark__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.spark__type_datetime", "macro_sql": "{% macro spark__type_datetime() -%}\n    timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9407895, "supported_languages": null}, "macro.dbt_expectations.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/groupby.sql", "original_file_path": "macros/utils/groupby.sql", "unique_id": "macro.dbt_expectations.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_expectations')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9414942, "supported_languages": null}, "macro.dbt_expectations.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/groupby.sql", "original_file_path": "macros/utils/groupby.sql", "unique_id": "macro.dbt_expectations.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}\n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9421632, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_unique": {"name": "test_expect_column_values_to_be_unique", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_unique.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_unique.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro_sql": "{% test expect_column_values_to_be_unique(model, column_name, row_condition=None) %}\n{{ dbt_expectations.test_expect_compound_columns_to_be_unique(model, [column_name], row_condition=row_condition) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_compound_columns_to_be_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9428155, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_be_null": {"name": "test_expect_column_values_to_not_be_null", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_null.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_null.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro_sql": "{% test expect_column_values_to_not_be_null(model, column_name, row_condition=None) %}\n\n{% set expression = column_name ~ \" is not null\" %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9438512, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_increasing": {"name": "test_expect_column_values_to_be_increasing", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_increasing.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_increasing.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_increasing", "macro_sql": "{% test expect_column_values_to_be_increasing(model, column_name,\n                                                   sort_column=None,\n                                                   strictly=True,\n                                                   row_condition=None,\n                                                   group_by=None) %}\n\n{%- set sort_column = column_name if not sort_column else sort_column -%}\n{%- set operator = \">\" if strictly else \">=\" -%}\nwith all_values as (\n\n    select\n        {{ sort_column }} as sort_column,\n        {%- if group_by -%}\n        {{ group_by | join(\", \") }},\n        {%- endif %}\n        {{ column_name }} as value_field\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        {%- if group_by -%}\n        {{ group_by | join(\", \") }},\n        {%- endif %}\n        value_field,\n        lag(value_field) over\n            {%- if not group_by -%}\n                (order by sort_column)\n            {%- else -%}\n                (partition by {{ group_by | join(\", \") }} order by sort_column)\n            {%- endif  %} as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (value_field {{ operator }} value_field_lag)\n\n)\nselect *\nfrom validation_errors\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9469216, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_decreasing": {"name": "test_expect_column_values_to_be_decreasing", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_decreasing.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_decreasing.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_decreasing", "macro_sql": "{% test expect_column_values_to_be_decreasing(model, column_name,\n                                                   sort_column=None,\n                                                   strictly=True,\n                                                   row_condition=None,\n                                                   group_by=None) %}\n\n{%- set sort_column = column_name if not sort_column else sort_column -%}\n{%- set operator = \"<\" if strictly else \"<=\" %}\nwith all_values as (\n\n    select\n        {{ sort_column }} as sort_column,\n        {%- if group_by -%}\n        {{ group_by | join(\", \") }},\n        {%- endif %}\n        {{ column_name }} as value_field\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        value_field,\n        lag(value_field) over\n            {%- if not group_by -%}\n                (order by sort_column)\n            {%- else -%}\n                (partition by {{ group_by | join(\", \") }} order by sort_column)\n            {%- endif  %} as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (value_field {{ operator }} value_field_lag)\n\n)\nselect *\nfrom validation_errors\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9496086, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_be_in_set": {"name": "test_expect_column_values_to_not_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_in_set.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_be_in_set", "macro_sql": "{% test expect_column_values_to_not_be_in_set(model, column_name,\n                                                   value_set,\n                                                   quote_values=True,\n                                                   row_condition=None\n                                                   ) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        cast('{{ value }}' as {{ dbt.type_string() }})\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n    -- values from the model that match the set\n    select\n        v.value_field\n    from\n        all_values v\n        join\n        set_values s on v.value_field = s.value_field\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.951639, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_in_set": {"name": "test_expect_column_values_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_set.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_in_set", "macro_sql": "{% test expect_column_values_to_be_in_set(model, column_name,\n                                                   value_set,\n                                                   quote_values=True,\n                                                   row_condition=None\n                                                   ) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        cast('{{ value }}' as {{ dbt.type_string() }})\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        v.value_field\n    from\n        all_values v\n        left join\n        set_values s on v.value_field = s.value_field\n    where\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9537303, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_have_consistent_casing": {"name": "test_expect_column_values_to_have_consistent_casing", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_have_consistent_casing.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_have_consistent_casing.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_have_consistent_casing", "macro_sql": "{% test expect_column_values_to_have_consistent_casing(model, column_name, display_inconsistent_columns=False) %}\n\nwith test_data as (\n\n    select\n        distinct {{ column_name }} as distinct_values\n    from\n        {{ model }}\n\n ),\n {% if display_inconsistent_columns %}\n validation_errors as (\n\n    select\n        lower(distinct_values) as inconsistent_columns,\n        count(distinct_values) as set_count_case_insensitive\n    from\n        test_data\n    group by 1\n    having\n        count(distinct_values) > 1\n\n )\n select * from validation_errors\n {% else %}\n validation_errors as (\n\n    select\n        count(1) as set_count,\n        count(distinct lower(distinct_values)) as set_count_case_insensitive\n    from\n        test_data\n\n )\n select *\n from\n    validation_errors\n where\n    set_count != set_count_case_insensitive\n {% endif %}\n {%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.954712, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_null": {"name": "test_expect_column_values_to_be_null", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_null.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_null.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_null", "macro_sql": "{% test expect_column_values_to_be_null(model, column_name, row_condition=None) %}\n\n{% set expression = column_name ~ \" is null\" %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9557447, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_in_type_list": {"name": "test_expect_column_values_to_be_in_type_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_type_list.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_type_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_in_type_list", "macro_sql": "{%- test expect_column_values_to_be_in_type_list(model, column_name, column_type_list) -%}\n{%- if execute -%}\n\n    {%- set column_name = column_name | upper -%}\n    {%- set columns_in_relation = adapter.get_columns_in_relation(model) -%}\n    {%- set column_type_list = column_type_list| map(\"upper\") | list -%}\n    with relation_columns as (\n\n        {% for column in columns_in_relation %}\n        select\n            cast('{{ escape_single_quotes(column.name | upper) }}' as {{ dbt.type_string() }}) as relation_column,\n            cast('{{ column.dtype | upper }}' as {{ dbt.type_string() }}) as relation_column_type\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = '{{ column_name }}'\n            and\n            relation_column_type not in ('{{ column_type_list | join(\"', '\") }}')\n\n    )\n    select *\n    from test_data\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9583972, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_between": {"name": "test_expect_column_values_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_between.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_between", "macro_sql": "{% test expect_column_values_to_be_between(model, column_name,\n                                                   min_value=None,\n                                                   max_value=None,\n                                                   row_condition=None,\n                                                   strictly=False\n                                                   ) %}\n\n{% set expression %}\n{{ column_name }}\n{% endset %}\n\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=None,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9600418, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_of_type": {"name": "test_expect_column_values_to_be_of_type", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_of_type.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_of_type.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro_sql": "{%- test expect_column_values_to_be_of_type(model, column_name, column_type) -%}\n{{ dbt_expectations.test_expect_column_values_to_be_in_type_list(model, column_name, [column_type]) }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_in_type_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9606235, "supported_languages": null}, "macro.dbt_expectations.test_expect_multicolumn_sum_to_equal": {"name": "test_expect_multicolumn_sum_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_multicolumn_sum_to_equal.sql", "original_file_path": "macros/schema_tests/multi-column/expect_multicolumn_sum_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_multicolumn_sum_to_equal", "macro_sql": "{% test expect_multicolumn_sum_to_equal(model,\n                                                column_list,\n                                                sum_total,\n                                                group_by=None,\n                                                row_condition=None\n                                                ) %}\n\n{% set expression %}\n{% for column in column_list %}\nsum({{ column }}){% if not loop.last %} + {% endif %}\n{# the if just allows for column names or literal numbers #}\n{% endfor %} = {% if sum_total is number %}{{sum_total}}{% else %}sum({{ sum_total }}){% endif %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9627533, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_pair_values_to_be_equal": {"name": "test_expect_column_pair_values_to_be_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_equal.sql", "original_file_path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_column_pair_values_to_be_equal", "macro_sql": "{% test expect_column_pair_values_to_be_equal(model,\n                                                        column_A,\n                                                        column_B,\n                                                        row_condition=None\n                                                        ) %}\n\n{% set operator = \"=\" %}\n{% set expression = column_A ~ \" \" ~ operator ~ \" \" ~ column_B %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9641097, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_pair_values_to_be_in_set": {"name": "test_expect_column_pair_values_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_in_set.sql", "original_file_path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_pair_values_to_be_in_set", "macro_sql": "{% test expect_column_pair_values_to_be_in_set(model,\n                                                        column_A,\n                                                        column_B,\n                                                        value_pairs_set,\n                                                        row_condition=None\n                                                        ) %}\n\n{% set expression %}\n{% for pair in value_pairs_set %}\n{%- if (pair | length) == 2 %}\n({{ column_A }} = {{ pair[0] }} and {{ column_B }} = {{ pair[1] }}){% if not loop.last %} or {% endif %}\n{% else %}\n{{ exceptions.raise_compiler_error(\n        \"`value_pairs_set` argument for expect_column_pair_values_to_be_in_set test cannot have more than 2 item per element.\n        Got: '\" ~ pair ~ \"'.'\"\n    ) }}\n{% endif %}\n{% endfor %}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.967026, "supported_languages": null}, "macro.dbt_expectations.test_expect_select_column_values_to_be_unique_within_record": {"name": "test_expect_select_column_values_to_be_unique_within_record", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "original_file_path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "unique_id": "macro.dbt_expectations.test_expect_select_column_values_to_be_unique_within_record", "macro_sql": "{% test expect_select_column_values_to_be_unique_within_record(model,\n                                                    column_list,\n                                                    quote_columns=False,\n                                                    ignore_row_if=\"all_values_are_missing\",\n                                                    row_condition=None\n                                                    )  -%}\n    {{ adapter.dispatch('test_expect_select_column_values_to_be_unique_within_record', 'dbt_expectations') (model, column_list, quote_columns, ignore_row_if, row_condition) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.969935, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record": {"name": "default__test_expect_select_column_values_to_be_unique_within_record", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "original_file_path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "unique_id": "macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record", "macro_sql": "{% macro default__test_expect_select_column_values_to_be_unique_within_record(model,\n                                                    column_list,\n                                                    quote_columns,\n                                                    ignore_row_if,\n                                                    row_condition\n                                                    ) %}\n\n{% if not quote_columns %}\n    {%- set columns=column_list %}\n{% elif quote_columns %}\n    {%- set columns=[] %}\n        {% for column in column_list -%}\n            {% set columns = columns.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote_columns ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set row_condition_ext -%}\n\n    {%- if row_condition  %}\n    {{ row_condition }} and\n    {% endif -%}\n\n    {{ dbt_expectations.ignore_row_if_expression(ignore_row_if, columns) }}\n\n{%- endset -%}\n\nwith column_values as (\n\n    select\n        row_number() over(order by 1) as row_index,\n        {% for column in columns -%}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {%- endfor %}\n    from {{ model }}\n    where\n        1=1\n    {%- if row_condition_ext %}\n        and {{ row_condition_ext }}\n    {% endif %}\n\n),\nunpivot_columns as (\n\n    {% for column in columns %}\n    select row_index, '{{ column }}' as column_name, {{ column }} as column_value from column_values\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n\n    select\n        row_index,\n        count(distinct column_value) as column_values\n    from unpivot_columns\n    group by 1\n    having count(distinct column_value) < {{ columns | length }}\n\n)\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.ignore_row_if_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9728236, "supported_languages": null}, "macro.dbt_expectations.test_expect_compound_columns_to_be_unique": {"name": "test_expect_compound_columns_to_be_unique", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_compound_columns_to_be_unique.sql", "original_file_path": "macros/schema_tests/multi-column/expect_compound_columns_to_be_unique.sql", "unique_id": "macro.dbt_expectations.test_expect_compound_columns_to_be_unique", "macro_sql": "{% test expect_compound_columns_to_be_unique(model,\n                                                column_list,\n                                                quote_columns=False,\n                                                ignore_row_if=\"all_values_are_missing\",\n                                                row_condition=None\n                                                ) %}\n{% if not column_list %}\n    {{ exceptions.raise_compiler_error(\n        \"`column_list` must be specified as a list of columns. Got: '\" ~ column_list ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% if not quote_columns %}\n    {%- set columns=column_list %}\n{% elif quote_columns %}\n    {%- set columns=[] %}\n        {% for column in column_list -%}\n            {% set columns = columns.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for expect_compound_columns_to_be_unique test must be one of [True, False] Got: '\" ~ quote_columns ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set row_condition_ext -%}\n\n    {%- if row_condition  %}\n    {{ row_condition }} and\n    {% endif -%}\n\n    {{ dbt_expectations.ignore_row_if_expression(ignore_row_if, columns) }}\n\n{%- endset -%}\n\nwith validation_errors as (\n\n    select\n        {% for column in columns -%}\n        {{ column }},\n        {%- endfor %}\n        count(*) as {{adapter.quote(\"n_records\")}}\n    from {{ model }}\n    where\n        1=1\n    {%- if row_condition_ext %}\n        and {{ row_condition_ext }}\n    {% endif %}\n    group by\n        {% for column in columns -%}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {%- endfor %}\n    having count(*) > 1\n\n)\nselect * from validation_errors\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.ignore_row_if_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9773617, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_pair_values_A_to_be_greater_than_B": {"name": "test_expect_column_pair_values_A_to_be_greater_than_B", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_column_pair_values_A_to_be_greater_than_B.sql", "original_file_path": "macros/schema_tests/multi-column/expect_column_pair_values_A_to_be_greater_than_B.sql", "unique_id": "macro.dbt_expectations.test_expect_column_pair_values_A_to_be_greater_than_B", "macro_sql": "{% test expect_column_pair_values_A_to_be_greater_than_B(model,\n                                                                column_A,\n                                                                column_B,\n                                                                or_equal=False,\n                                                                row_condition=None\n                                                                ) %}\n\n{% set operator = \">=\" if or_equal else \">\" %}\n{% set expression = column_A ~ \" \" ~ operator ~ \" \" ~ column_B %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.978876, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_aggregation_to_equal_other_table": {"name": "test_expect_table_aggregation_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_aggregation_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_aggregation_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_table_aggregation_to_equal_other_table", "macro_sql": "{%- test expect_table_aggregation_to_equal_other_table(model,\n                                                expression,\n                                                compare_model,\n                                                compare_expression=None,\n                                                group_by=None,\n                                                compare_group_by=None,\n                                                row_condition=None,\n                                                compare_row_condition=None,\n                                                tolerance=0.0,\n                                                tolerance_percent=None\n                                                ) -%}\n\n\n{{ dbt_expectations.test_equal_expression(\n    model,\n    expression=expression,\n    compare_model=compare_model,\n    compare_expression=compare_expression,\n    group_by=group_by,\n    compare_group_by=compare_group_by,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition,\n    tolerance=tolerance,\n    tolerance_percent=tolerance_percent\n) }}\n\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.980374, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list": {"name": "test_expect_table_columns_to_match_ordered_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_match_ordered_list.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_match_ordered_list.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list", "macro_sql": "{%- test expect_table_columns_to_match_ordered_list(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select\n            {{ loop.index }} as relation_column_idx,\n            cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select\n            {{ loop.index }} as input_column_idx,\n            cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column and r.relation_column_idx = i.input_column_idx\n    where\n        -- catch any column in input list that is not in the sequence of table columns\n        -- or any table column that is not in the input sequence\n        r.relation_column is null or\n        i.input_column is null\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9835193, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_equal": {"name": "test_expect_table_row_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal", "macro_sql": "{%- test expect_table_row_count_to_equal(model,\n                                            value,\n                                            group_by=None,\n                                            row_condition=None\n                                            ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal',\n                        'dbt_expectations') (model,\n                                                value,\n                                                group_by,\n                                                row_condition\n                                                ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9848835, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal": {"name": "default__test_expect_table_row_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal", "macro_sql": "\n\n\n\n{%- macro default__test_expect_table_row_count_to_equal(model,\n                                                value,\n                                                group_by,\n                                                row_condition\n                                                ) -%}\n{% set expression %}\ncount(*) = {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n    expression=expression,\n    group_by_columns=group_by,\n    row_condition=row_condition)\n    }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9856362, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_to_exist": {"name": "test_expect_column_to_exist", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_column_to_exist.sql", "original_file_path": "macros/schema_tests/table_shape/expect_column_to_exist.sql", "unique_id": "macro.dbt_expectations.test_expect_column_to_exist", "macro_sql": "{%- test expect_column_to_exist(model, column_name, column_index=None, transform=\"upper\") -%}\n{%- if execute -%}\n\n    {%- set column_name = column_name | map(transform) | join -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n\n    {%- set matching_column_index = relation_column_names.index(column_name) if column_name in relation_column_names else -1 %}\n\n    {%- if column_index -%}\n\n        {%- set column_index_0 = column_index - 1 if column_index > 0 else 0 -%}\n\n        {%- set column_index_matches = true if matching_column_index == column_index_0 else false %}\n\n    {%- else -%}\n\n        {%- set column_index_matches = true -%}\n\n    {%- endif %}\n\n    with test_data as (\n\n        select\n            cast('{{ column_name }}' as {{ dbt.type_string() }}) as column_name,\n            {{ matching_column_index }} as matching_column_index,\n            {{ column_index_matches }} as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.988381, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_match_set": {"name": "test_expect_table_columns_to_match_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_match_set.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_match_set.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_match_set", "macro_sql": "{%- test expect_table_columns_to_match_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        -- or any table column that is not in the input list\n        r.relation_column is null or\n        i.input_column is null\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9912026, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table_times_factor": {"name": "test_expect_table_row_count_to_equal_other_table_times_factor", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table_times_factor", "macro_sql": "{%- test expect_table_row_count_to_equal_other_table_times_factor(model,\n                                                                    compare_model,\n                                                                    factor,\n                                                                    group_by=None,\n                                                                    compare_group_by=None,\n                                                                    row_condition=None,\n                                                                    compare_row_condition=None\n                                            ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal_other_table_times_factor',\n                        'dbt_expectations') (model,\n                                                compare_model,\n                                                factor,\n                                                group_by,\n                                                compare_group_by,\n                                                row_condition,\n                                                compare_row_condition\n                                            ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table_times_factor"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9932938, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table_times_factor": {"name": "default__test_expect_table_row_count_to_equal_other_table_times_factor", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table_times_factor", "macro_sql": "\n\n{%- macro default__test_expect_table_row_count_to_equal_other_table_times_factor(model,\n                                                                    compare_model,\n                                                                    factor,\n                                                                    group_by,\n                                                                    compare_group_by,\n                                                                    row_condition,\n                                                                    compare_row_condition\n                                                                    ) -%}\n\n{{ dbt_expectations.test_expect_table_row_count_to_equal_other_table(model,\n    compare_model,\n    group_by=group_by,\n    compare_group_by=compare_group_by,\n    factor=factor,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9940796, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_column_count_to_be_between": {"name": "test_expect_table_column_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_column_count_to_be_between.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_column_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_be_between", "macro_sql": "{%- test expect_table_column_count_to_be_between(model,\n                                                    min_value=None,\n                                                    max_value=None\n                                                    ) -%}\n{%- if min_value is none and max_value is none -%}\n{{ exceptions.raise_compiler_error(\n    \"You have to provide either a min_value, max_value or both.\"\n) }}\n{%- endif -%}\n{%- if execute -%}\n{%- set number_actual_columns = (adapter.get_columns_in_relation(model) | length) -%}\n\n{%- set expression %}\n( 1=1\n{%- if min_value %} and number_actual_columns >= min_value{% endif %}\n{%- if max_value %} and number_actual_columns <= max_value{% endif %}\n)\n{% endset -%}\n\nwith test_data as (\n\n    select\n        {{ number_actual_columns }} as number_actual_columns,\n        {{ min_value if min_value else 0 }} as min_value,\n        {{ max_value if max_value else 0 }} as max_value\n\n)\nselect *\nfrom test_data\nwhere\n    not {{ expression }}\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.996515, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table": {"name": "test_expect_table_row_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table", "macro_sql": "{%- test expect_table_row_count_to_equal_other_table(model,\n                                            compare_model,\n                                            group_by=None,\n                                            compare_group_by=None,\n                                            factor=1,\n                                            row_condition=None,\n                                            compare_row_condition=None\n                                        ) -%}\n\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal_other_table',\n                        'dbt_expectations') (model,\n                                                compare_model,\n                                                group_by,\n                                                compare_group_by,\n                                                factor,\n                                                row_condition,\n                                                compare_row_condition\n                                            ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9984272, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table": {"name": "default__test_expect_table_row_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table", "macro_sql": "\n\n{%- macro default__test_expect_table_row_count_to_equal_other_table(model,\n                                                    compare_model,\n                                                    group_by,\n                                                    compare_group_by,\n                                                    factor,\n                                                    row_condition,\n                                                    compare_row_condition\n                                                    ) -%}\n{{ dbt_expectations.test_equal_expression(model, \"count(*)\",\n    compare_model=compare_model,\n    compare_expression=\"count(*) * \" + factor|string,\n    group_by=group_by,\n    compare_group_by=compare_group_by,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652757.9993277, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_column_count_to_equal_other_table": {"name": "test_expect_table_column_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_equal_other_table", "macro_sql": "{%- test expect_table_column_count_to_equal_other_table(model, compare_model) -%}\n{%- if execute -%}\n{%- set number_columns = (adapter.get_columns_in_relation(model) | length) -%}\n{%- set compare_number_columns = (adapter.get_columns_in_relation(compare_model) | length) -%}\nwith test_data as (\n\n    select\n        {{ number_columns }} as number_columns,\n        {{ compare_number_columns }} as compare_number_columns\n\n)\nselect *\nfrom test_data\nwhere\n    number_columns != compare_number_columns\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0005062, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_not_contain_set": {"name": "test_expect_table_columns_to_not_contain_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_not_contain_set.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_not_contain_set.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_not_contain_set", "macro_sql": "{%- test expect_table_columns_to_not_contain_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    -- catch any column in input list that is in the list of table columns\n    select *\n    from\n        input_columns i\n        inner join\n        relation_columns r on r.relation_column = i.input_column\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0031548, "supported_languages": null}, "macro.dbt_expectations._list_intersect": {"name": "_list_intersect", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/_list_intersect.sql", "original_file_path": "macros/schema_tests/table_shape/_list_intersect.sql", "unique_id": "macro.dbt_expectations._list_intersect", "macro_sql": "{%- macro _list_intersect(list1, list2) -%}\n{%- set matching_items = [] -%}\n{%- for itm in list1 -%}\n    {%- if itm in list2 -%}\n        {%- do matching_items.append(itm) -%}\n    {%- endif -%}\n{%- endfor -%}\n{%- do return(matching_items) -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.004219, "supported_languages": null}, "macro.dbt_expectations.test_expect_grouped_row_values_to_have_recent_data": {"name": "test_expect_grouped_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.test_expect_grouped_row_values_to_have_recent_data", "macro_sql": "{% test expect_grouped_row_values_to_have_recent_data(model,\n                                                        group_by,\n                                                        timestamp_column,\n                                                        datepart,\n                                                        interval,\n                                                        row_condition=None) %}\n\n {{ adapter.dispatch('test_expect_grouped_row_values_to_have_recent_data', 'dbt_expectations') (model,\n                                                                                                group_by,\n                                                                                                timestamp_column,\n                                                                                                datepart,\n                                                                                                interval,\n                                                                                                row_condition) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.008308, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data": {"name": "default__test_expect_grouped_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data", "macro_sql": "{% macro default__test_expect_grouped_row_values_to_have_recent_data(model,\n                                                                        group_by,\n                                                                        timestamp_column,\n                                                                        datepart,\n                                                                        interval,\n                                                                        row_condition) %}\nwith latest_grouped_timestamps as (\n\n    select\n        {{ group_by | join(\",\") ~ \",\" if group_by }}\n        max(1) as join_key,\n        max(cast({{ timestamp_column }} as {{ dbt_expectations.type_timestamp() }})) as latest_timestamp_column\n    from\n        {{ model }}\n    where\n        -- to exclude erroneous future dates\n        cast({{ timestamp_column }} as {{ dbt_expectations.type_timestamp() }}) <= {{ dbt_date.now() }}\n        {% if row_condition %}\n        and {{ row_condition }}\n        {% endif %}\n\n    {% if group_by -%}\n    {{  dbt_expectations.group_by(group_by | length) }}\n    {%- endif %}\n),\ntotal_row_counts as (\n\n    select\n        {{ group_by | join(\",\") ~ \",\" if group_by }}\n        max(1) as join_key,\n        count(*) as row_count\n    from\n        latest_grouped_timestamps\n    {% if group_by -%}\n    {{  dbt_expectations.group_by(group_by | length) }}\n    {%- endif %}\n\n\n),\noutdated_grouped_timestamps as (\n\n    select *\n    from\n        latest_grouped_timestamps\n    where\n        -- are the max timestamps per group older than the specified cutoff?\n        latest_timestamp_column <\n            cast(\n                {{ dbt.dateadd(datepart, interval * -1, dbt_date.now()) }}\n                as {{ dbt_expectations.type_timestamp() }}\n            )\n\n),\nvalidation_errors as (\n\n    select\n        r.row_count,\n        t.*\n    from\n        total_row_counts r\n        left join\n        outdated_grouped_timestamps t\n        on\n            {% for g in group_by %}\n            r.{{ g }} = t.{{ g }} and\n            {% endfor %}\n            r.join_key = t.join_key\n    where\n        -- fail if either no rows were returned due to row_condition,\n        -- or the recency test returned failed rows\n        r.row_count = 0\n        or\n        t.join_key is not null\n\n)\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.type_timestamp", "macro.dbt_date.now", "macro.dbt_expectations.group_by", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.010941, "supported_languages": null}, "macro.dbt_expectations.test_expect_row_values_to_have_recent_data": {"name": "test_expect_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.test_expect_row_values_to_have_recent_data", "macro_sql": "{% test expect_row_values_to_have_recent_data(model,\n                                                column_name,\n                                                datepart,\n                                                interval,\n                                                row_condition=None) %}\n\n {{ adapter.dispatch('test_expect_row_values_to_have_recent_data', 'dbt_expectations') (model,\n                                                                                        column_name,\n                                                                                        datepart,\n                                                                                        interval,\n                                                                                        row_condition) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0130992, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data": {"name": "default__test_expect_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data", "macro_sql": "{% macro default__test_expect_row_values_to_have_recent_data(model, column_name, datepart, interval, row_condition) %}\n{%- set default_start_date = '1970-01-01' -%}\nwith max_recency as (\n\n    select max(cast({{ column_name }} as {{ dbt_expectations.type_timestamp() }})) as max_timestamp\n    from\n        {{ model }}\n    where\n        -- to exclude erroneous future dates\n        cast({{ column_name }} as {{ dbt_expectations.type_timestamp() }}) <= {{ dbt_date.now() }}\n        {% if row_condition %}\n        and {{ row_condition }}\n        {% endif %}\n)\nselect\n    *\nfrom\n    max_recency\nwhere\n    -- if the row_condition excludes all rows, we need to compare against a default date\n    -- to avoid false negatives\n    coalesce(max_timestamp, cast('{{ default_start_date }}' as {{ dbt_expectations.type_timestamp() }}))\n        <\n        cast({{ dbt.dateadd(datepart, interval * -1, dbt_date.now()) }} as {{ dbt_expectations.type_timestamp() }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.type_timestamp", "macro.dbt_date.now", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0146914, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_contain_set": {"name": "test_expect_table_columns_to_contain_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_contain_set.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_contain_set.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_contain_set", "macro_sql": "{%- test expect_table_columns_to_contain_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        input_columns i\n        left join\n        relation_columns r on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        r.relation_column is null\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0174391, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_be_between": {"name": "test_expect_table_row_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_be_between", "macro_sql": "{%- test expect_table_row_count_to_be_between(model,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                            ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_be_between',\n                        'dbt_expectations') (model,\n                                                min_value,\n                                                max_value,\n                                                group_by,\n                                                row_condition,\n                                                strictly\n                                                ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_be_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0191867, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_be_between": {"name": "default__test_expect_table_row_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_be_between", "macro_sql": "\n\n{%- macro default__test_expect_table_row_count_to_be_between(model,\n                                                min_value,\n                                                max_value,\n                                                group_by,\n                                                row_condition,\n                                                strictly\n                                                ) -%}\n{% set expression %}\ncount(*)\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n    expression=expression,\n    min_value=min_value,\n    max_value=max_value,\n    group_by_columns=group_by,\n    row_condition=row_condition,\n    strictly=strictly\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0200956, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_column_count_to_equal": {"name": "test_expect_table_column_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_equal", "macro_sql": "{%- test expect_table_column_count_to_equal(model, value) -%}\n{%- if execute -%}\n{%- set number_actual_columns = (adapter.get_columns_in_relation(model) | length) -%}\nwith test_data as (\n\n    select\n        {{ number_actual_columns }} as number_actual_columns,\n        {{ value }} as value\n\n)\nselect *\nfrom test_data\nwhere\n    number_actual_columns != value\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.021002, "supported_languages": null}, "macro.dbt_expectations._get_column_list": {"name": "_get_column_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/_get_column_list.sql", "original_file_path": "macros/schema_tests/table_shape/_get_column_list.sql", "unique_id": "macro.dbt_expectations._get_column_list", "macro_sql": "{%- macro _get_column_list(model, transform=\"upper\") -%}\n{%- set relation_columns = adapter.get_columns_in_relation(model) -%}\n{%- set relation_column_names = relation_columns | map(attribute=\"name\") | map(transform) | list -%}\n{%- do return(relation_column_names) -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0219598, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_min_to_be_between": {"name": "test_expect_column_min_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_min_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_min_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_min_to_be_between", "macro_sql": "{% test expect_column_min_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n{% set expression %}\nmin({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.023621, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_median_to_be_between": {"name": "test_expect_column_median_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_median_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_median_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_median_to_be_between", "macro_sql": "{% test expect_column_median_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.median(column_name) }}\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.median", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0254188, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set": {"name": "test_expect_column_distinct_values_to_contain_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_contain_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_contain_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro_sql": "{% test expect_column_distinct_values_to_contain_set(model, column_name,\n                                                            value_set,\n                                                            quote_values=True,\n                                                            row_condition=None\n                                                            ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.02746, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_mean_to_be_between": {"name": "test_expect_column_mean_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_mean_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_mean_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_mean_to_be_between", "macro_sql": "{% test expect_column_mean_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n{% set expression %}\navg({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0291517, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_most_common_value_to_be_in_set": {"name": "test_expect_column_most_common_value_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_most_common_value_to_be_in_set", "macro_sql": "{% test expect_column_most_common_value_to_be_in_set(model,\n                                                       column_name,\n                                                       value_set,\n                                                       top_n,\n                                                       quote_values=True,\n                                                       data_type=\"decimal\",\n                                                       row_condition=None\n                                                       ) -%}\n\n    {{ adapter.dispatch('test_expect_column_most_common_value_to_be_in_set', 'dbt_expectations') (\n            model, column_name, value_set, top_n, quote_values, data_type, row_condition\n        ) }}\n\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.032477, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set": {"name": "default__test_expect_column_most_common_value_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set", "macro_sql": "{% macro default__test_expect_column_most_common_value_to_be_in_set(model,\n                                                                      column_name,\n                                                                      value_set,\n                                                                      top_n,\n                                                                      quote_values,\n                                                                      data_type,\n                                                                      row_condition\n                                                                      ) %}\n\nwith value_counts as (\n\n    select\n        {% if quote_values -%}\n        {{ column_name }}\n        {%- else -%}\n        cast({{ column_name }} as {{ data_type }})\n        {%- endif %} as value_field,\n        count(*) as value_count\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n    group by {% if quote_values -%}\n                {{ column_name }}\n            {%- else -%}\n                cast({{ column_name }} as {{ data_type }})\n            {%- endif %}\n\n),\nvalue_counts_ranked as (\n\n    select\n        *,\n        row_number() over(order by value_count desc) as value_count_rank\n    from\n        value_counts\n\n),\nvalue_count_top_n as (\n\n    select\n        value_field\n    from\n        value_counts_ranked\n    where\n        value_count_rank = {{ top_n }}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        cast({{ value }} as {{ data_type }})\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        value_field\n    from\n        value_count_top_n\n    where\n        value_field not in (select value_field from unique_set_values)\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0346086, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_stdev_to_be_between": {"name": "test_expect_column_stdev_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_stdev_to_be_between", "macro_sql": "{% test expect_column_stdev_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) -%}\n    {{ adapter.dispatch('test_expect_column_stdev_to_be_between', 'dbt_expectations') (\n                                                    model, column_name,\n                                                    min_value,\n                                                    max_value,\n                                                    group_by,\n                                                    row_condition,\n                                                    strictly\n                                                    ) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_stdev_to_be_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0370345, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_stdev_to_be_between": {"name": "default__test_expect_column_stdev_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_stdev_to_be_between", "macro_sql": "{% macro default__test_expect_column_stdev_to_be_between(\n                                                    model, column_name,\n                                                    min_value,\n                                                    max_value,\n                                                    group_by,\n                                                    row_condition,\n                                                    strictly\n                                                    ) %}\n\n{% set expression %}\nstddev({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0380254, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_values_to_be_in_set": {"name": "test_expect_column_distinct_values_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_be_in_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_be_in_set", "macro_sql": "{% test expect_column_distinct_values_to_be_in_set(model,\n                                                     column_name,\n                                                     value_set,\n                                                     quote_values=True,\n                                                     row_condition=None\n                                                     ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        v.value_field\n    from\n        all_values v\n        left join\n        unique_set_values s on v.value_field = s.value_field\n    where\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.040062, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_sum_to_be_between": {"name": "test_expect_column_sum_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_sum_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_sum_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_sum_to_be_between", "macro_sql": "{% test expect_column_sum_to_be_between(model, column_name,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                                ) %}\n{% set expression %}\nsum({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0417264, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table": {"name": "test_expect_column_distinct_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table", "macro_sql": "{% test expect_column_distinct_count_to_equal_other_table(model,\n                                                                compare_model,\n                                                                column_name,\n                                                                compare_column_name,\n                                                                row_condition=None,\n                                                                compare_row_condition=None\n                                                                ) %}\n{%- set expression -%}\ncount(distinct {{ column_name }})\n{%- endset -%}\n{%- set compare_expression -%}\n{%- if compare_column_name -%}\ncount(distinct {{ compare_column_name }})\n{%- else -%}\n{{ expression }}\n{%- endif -%}\n{%- endset -%}\n{{ dbt_expectations.test_equal_expression(\n    model,\n    expression=expression,\n    compare_model=compare_model,\n    compare_expression=compare_expression,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0434735, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_be_less_than": {"name": "test_expect_column_distinct_count_to_be_less_than", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_less_than.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_less_than.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_be_less_than", "macro_sql": "{% test expect_column_distinct_count_to_be_less_than(model,\n                                                       column_name,\n                                                       value,\n                                                       group_by=None,\n                                                       row_condition=None\n                                                       ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) < {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0448136, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_be_greater_than": {"name": "test_expect_column_distinct_count_to_be_greater_than", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_greater_than.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_greater_than.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_be_greater_than", "macro_sql": "{% test expect_column_distinct_count_to_be_greater_than(model,\n                                                          column_name,\n                                                          value,\n                                                          group_by=None,\n                                                          row_condition=None\n                                                          ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) > {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.04614, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_unique_value_count_to_be_between": {"name": "test_expect_column_unique_value_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_unique_value_count_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_unique_value_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_unique_value_count_to_be_between", "macro_sql": "{% test expect_column_unique_value_count_to_be_between(model, column_name,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n{% set expression %}\ncount(distinct {{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.04785, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_max_to_be_between": {"name": "test_expect_column_max_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_max_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_max_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_max_to_be_between", "macro_sql": "{% test expect_column_max_to_be_between(model, column_name,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                                ) %}\n{% set expression %}\nmax({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.049515, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_values_to_equal_set": {"name": "test_expect_column_distinct_values_to_equal_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_equal_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_equal_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_equal_set", "macro_sql": "{% test expect_column_distinct_values_to_equal_set(model, column_name,\n                                                            value_set,\n                                                            quote_values=True,\n                                                            row_condition=None\n                                                            ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as column_value\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        all_values v\n        full outer join\n        unique_set_values s on v.column_value = s.value_field\n    where\n        v.column_value is null or\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0515122, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_proportion_of_unique_values_to_be_between": {"name": "test_expect_column_proportion_of_unique_values_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_proportion_of_unique_values_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_proportion_of_unique_values_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_proportion_of_unique_values_to_be_between", "macro_sql": "{% test expect_column_proportion_of_unique_values_to_be_between(model, column_name,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n{% set expression %}\ncount(distinct {{ column_name }})*1.0/count({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.053344, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_quantile_values_to_be_between": {"name": "test_expect_column_quantile_values_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_quantile_values_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_quantile_values_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_quantile_values_to_be_between", "macro_sql": "{% test expect_column_quantile_values_to_be_between(model, column_name,\n                                                            quantile,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n\n{% set expression %}\n{{ dbt_expectations.percentile_cont(column_name, quantile) }}\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.percentile_cont", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0551744, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_equal": {"name": "test_expect_column_distinct_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_equal", "macro_sql": "{% test expect_column_distinct_count_to_equal(model,\n                                                column_name,\n                                                value,\n                                                group_by=None,\n                                                row_condition=None\n                                                ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) = {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.056494, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_value_lengths_to_be_between": {"name": "test_expect_column_value_lengths_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_be_between.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro_sql": "{% test expect_column_value_lengths_to_be_between(model, column_name,\n                                                         min_value=None,\n                                                         max_value=None,\n                                                         row_condition=None,\n                                                         strictly=False\n                                                      ) %}\n{% set expression %}\n{{ dbt.length(column_name) }}\n{% endset %}\n\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=None,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.length", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0581958, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern": {"name": "test_expect_column_values_to_match_like_pattern", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern", "macro_sql": "{% test expect_column_values_to_match_like_pattern(model, column_name,\n                                                    like_pattern,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=True) %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0593839, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_value_lengths_to_equal": {"name": "test_expect_column_value_lengths_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_equal.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_column_value_lengths_to_equal", "macro_sql": "{% test expect_column_value_lengths_to_equal(model, column_name,\n                                                    value,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt.length(column_name) ~ \" = \" ~ value %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.length", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0605767, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_regex": {"name": "test_expect_column_values_to_match_regex", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_regex", "macro_sql": "{% test expect_column_values_to_match_regex(model, column_name,\n                                                    regex,\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} > 0\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0621345, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list": {"name": "test_expect_column_values_to_not_match_like_pattern_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list", "macro_sql": "{% test expect_column_values_to_not_match_like_pattern_list(model, column_name,\n                                                    like_pattern_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n    {% for like_pattern in like_pattern_list %}\n    {{ dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=False) }}\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0645056, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern_list": {"name": "test_expect_column_values_to_match_like_pattern_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern_list", "macro_sql": "{% test expect_column_values_to_match_like_pattern_list(model, column_name,\n                                                    like_pattern_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n    {% for like_pattern in like_pattern_list %}\n    {{ dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=True) }}\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0667326, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_regex": {"name": "test_expect_column_values_to_not_match_regex", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_regex", "macro_sql": "{% test expect_column_values_to_not_match_regex(model, column_name,\n                                                    regex,\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} = 0\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.068307, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern": {"name": "test_expect_column_values_to_not_match_like_pattern", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern", "macro_sql": "{% test expect_column_values_to_not_match_like_pattern(model, column_name,\n                                                    like_pattern,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=False) %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.069506, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_regex_list": {"name": "test_expect_column_values_to_match_regex_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_regex_list", "macro_sql": "{% test expect_column_values_to_match_regex_list(model, column_name,\n                                                    regex_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n    {% for regex in regex_list %}\n    {{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} > 0\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0719092, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list": {"name": "test_expect_column_values_to_not_match_regex_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list", "macro_sql": "{% test expect_column_values_to_not_match_regex_list(model, column_name,\n                                                    regex_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n{% for regex in regex_list %}\n{{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} = 0\n{%- if not loop.last %}\n{{ \" and \" if match_on == \"all\" else \" or \"}}\n{% endif -%}\n{% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0742912, "supported_languages": null}, "macro.dbt_expectations._get_like_pattern_expression": {"name": "_get_like_pattern_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/_get_like_pattern_expression.sql", "original_file_path": "macros/schema_tests/string_matching/_get_like_pattern_expression.sql", "unique_id": "macro.dbt_expectations._get_like_pattern_expression", "macro_sql": "{% macro _get_like_pattern_expression(column_name, like_pattern, positive) %}\n{{ column_name }} {{ \"not\" if not positive else \"\" }} like '{{ like_pattern }}'\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0749567, "supported_languages": null}, "macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart": {"name": "test_expect_row_values_to_have_data_for_every_n_datepart", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_row_values_to_have_data_for_every_n_datepart.sql", "original_file_path": "macros/schema_tests/distributional/expect_row_values_to_have_data_for_every_n_datepart.sql", "unique_id": "macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "macro_sql": "{%- test expect_row_values_to_have_data_for_every_n_datepart(model,\n                                                            date_col,\n                                                            date_part=\"day\",\n                                                            interval=None,\n                                                            row_condition=None,\n                                                            exclusion_condition=None,\n                                                            test_start_date=None,\n                                                            test_end_date=None) -%}\n{% if not execute %}\n    {{ return('') }}\n{% endif %}\n\n{% if not test_start_date or not test_end_date %}\n    {% set sql %}\n\n        select\n            min(cast({{ date_col }} as date)) as start_{{ date_part }},\n            max(cast({{ date_col }} as date)) as end_{{ date_part }}\n        from {{ model }}\n        {% if row_condition %}\n        where {{ row_condition }}\n        {% endif %}\n\n    {% endset %}\n\n    {%- set dr = run_query(sql) -%}\n\n    {%- set db_start_date = dr.columns[0].values()[0] -%}\n    {%- set db_end_date = dr.columns[1].values()[0] -%}\n\n    {% if db_start_date is not string %}\n        {%- set db_start_date = db_start_date.strftime('%Y-%m-%d') -%}\n        {%- set db_end_date = db_end_date.strftime('%Y-%m-%d') -%}\n    {% endif %}\n\n{% endif %}\n\n{% if not test_start_date %}\n{% set start_date = db_start_date %}\n{% else %}\n{% set start_date = test_start_date %}\n{% endif %}\n\n\n{% if not test_end_date %}\n{% set end_date = db_end_date %}\n{% else %}\n{% set end_date = test_end_date %}\n{% endif %}\n\nwith base_dates as (\n\n    {{ dbt_date.get_base_dates(start_date=start_date, end_date=end_date, datepart=date_part) }}\n    {% if interval %}\n    {#\n        Filter the date spine created above down to the interval granularity using a modulo operation.\n        The number of date_parts after the start_date divided by the integer interval will produce no remainder for the desired intervals,\n        e.g. for 2-day interval from a starting Jan 1, 2020:\n            params: start_date = '2020-01-01', date_part = 'day', interval = 2\n            date spine created above: [2020-01-01, 2020-01-02, 2020-01-03, 2020-01-04, 2020-01-05, ...]\n            The first parameter to the `mod` function would be the number of days between the start_date and the spine date, i.e. [0, 1, 2, 3, 4 ...]\n            The second parameter to the `mod` function would be the integer interval, i.e. 2\n            This modulo operation produces the following remainders: [0, 1, 0, 1, 0, ...]\n            Filtering the spine only where this remainder == 0 will return a spine with every other day as desired, i.e. [2020-01-01, 2020-01-03, 2020-01-05, ...]\n    #}\n    where mod(\n            cast({{ dbt.datediff(\"'\" ~ start_date ~ \"'\", 'date_' ~ date_part, date_part) }} as {{ dbt.type_int() }}),\n            cast({{interval}} as {{ dbt.type_int() }})\n        ) = 0\n    {% endif %}\n\n),\nmodel_data as (\n\n    select\n    {% if not interval %}\n\n        cast({{ dbt.date_trunc(date_part, date_col) }} as {{ dbt_expectations.type_datetime() }}) as date_{{ date_part }},\n\n    {% else %}\n        {#\n            Use a modulo operator to determine the number of intervals that a date_col is away from the interval-date spine\n            and subtracts that amount to effectively slice each date_col record into its corresponding spine bucket,\n            e.g. given a date_col of with records [2020-01-01, 2020-01-02, 2020-01-03, 2020-01-11, 2020-01-12]\n                if we want to slice these dates into their 2-day buckets starting Jan 1, 2020 (start_date = '2020-01-01', date_part='day', interval=2),\n                the modulo operation described above will produce these remainders: [0, 1, 0, 0, 1]\n                subtracting that number of days from the observations will produce records [2020-01-01, 2020-01-01, 2020-01-03, 2020-01-11, 2020-01-11],\n                all of which align with records from the interval-date spine\n        #}\n        {{ dbt.dateadd(\n            date_part,\n            \"mod(\n                cast(\" ~ dbt.datediff(\"'\" ~ start_date ~ \"'\", date_col, date_part) ~ \" as \" ~ dbt.type_int() ~ \" ),\n                cast(\" ~ interval ~ \" as  \" ~ dbt.type_int() ~ \" )\n            ) * (-1)\",\n            \"cast( \" ~ dbt.date_trunc(date_part, date_col) ~ \" as  \" ~ dbt_expectations.type_datetime() ~ \")\"\n        )}} as date_{{ date_part }},\n\n    {% endif %}\n\n        count(*) as row_cnt\n    from\n        {{ model }} f\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n    group by\n        date_{{date_part}}\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_{{ date_part }} as {{ dbt_expectations.type_datetime() }}) as date_{{ date_part }},\n        case when f.date_{{ date_part }} is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_{{ date_part }} as {{ dbt_expectations.type_datetime() }}) = f.date_{{ date_part }}\n)\nselect\n    *\nfrom final\nwhere row_cnt = 0\n{% if exclusion_condition %}\n  and {{ exclusion_condition }}\n{% endif %}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt_date.get_base_dates", "macro.dbt.datediff", "macro.dbt.type_int", "macro.dbt.date_trunc", "macro.dbt_expectations.type_datetime", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.084654, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs": {"name": "test_expect_column_values_to_be_within_n_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs", "macro_sql": "{% test expect_column_values_to_be_within_n_stdevs(model,\n                                  column_name,\n                                  group_by=None,\n                                  sigma_threshold=3\n                                ) -%}\n    {{\n        adapter.dispatch('test_expect_column_values_to_be_within_n_stdevs', 'dbt_expectations') (\n            model, column_name, group_by, sigma_threshold\n        )\n    }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0864563, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs": {"name": "default__test_expect_column_values_to_be_within_n_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs", "macro_sql": "{% macro default__test_expect_column_values_to_be_within_n_stdevs(model,\n                                  column_name,\n                                  group_by,\n                                  sigma_threshold\n                                ) %}\n\nwith metric_values as (\n\n    select\n        {{ group_by | join(\",\") ~ \",\" if group_by }}\n        sum({{ column_name }}) as {{ column_name }}\n    from\n        {{ model }}\n    {% if group_by -%}\n    {{  dbt_expectations.group_by(group_by | length) }}\n    {%- endif %}\n\n),\nmetric_values_with_statistics as (\n\n    select\n        *,\n        avg({{ column_name }}) over() as {{ column_name }}_average,\n        stddev({{ column_name }}) over() as {{ column_name }}_stddev\n    from\n        metric_values\n\n),\nmetric_values_z_scores as (\n\n    select\n        *,\n        ({{ column_name }} - {{ column_name }}_average)/\n            nullif({{ column_name }}_stddev, 0) as {{ column_name }}_sigma\n    from\n        metric_values_with_statistics\n\n)\nselect\n    *\nfrom\n    metric_values_z_scores\nwhere\n    abs({{ column_name }}_sigma) > {{ sigma_threshold }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0879095, "supported_languages": null}, "macro.dbt_expectations._get_metric_expression": {"name": "_get_metric_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "unique_id": "macro.dbt_expectations._get_metric_expression", "macro_sql": "{%- macro _get_metric_expression(metric_column, take_logs) -%}\n\n{%- if take_logs %}\n{%- set expr = \"nullif(\" ~ metric_column ~ \", 0)\" -%}\ncoalesce({{ dbt_expectations.log_natural(expr) }}, 0)\n{%- else -%}\ncoalesce({{ metric_column }}, 0)\n{%- endif %}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_expectations.log_natural"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0950913, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs": {"name": "test_expect_column_values_to_be_within_n_moving_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs", "macro_sql": "{% test expect_column_values_to_be_within_n_moving_stdevs(model,\n                                  column_name,\n                                  date_column_name,\n                                  group_by=None,\n                                  period='day',\n                                  lookback_periods=1,\n                                  trend_periods=7,\n                                  test_periods=14,\n                                  sigma_threshold=3,\n                                  sigma_threshold_upper=None,\n                                  sigma_threshold_lower=None,\n                                  take_diffs=true,\n                                  take_logs=true\n                                ) -%}\n    {{ adapter.dispatch('test_expect_column_values_to_be_within_n_moving_stdevs', 'dbt_expectations') (model,\n                                  column_name,\n                                  date_column_name,\n                                  group_by,\n                                  period,\n                                  lookback_periods,\n                                  trend_periods,\n                                  test_periods,\n                                  sigma_threshold,\n                                  sigma_threshold_upper,\n                                  sigma_threshold_lower,\n                                  take_diffs,\n                                  take_logs\n                                ) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.0964856, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs": {"name": "default__test_expect_column_values_to_be_within_n_moving_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs", "macro_sql": "{% macro default__test_expect_column_values_to_be_within_n_moving_stdevs(model,\n                                  column_name,\n                                  date_column_name,\n                                  group_by,\n                                  period,\n                                  lookback_periods,\n                                  trend_periods,\n                                  test_periods,\n                                  sigma_threshold,\n                                  sigma_threshold_upper,\n                                  sigma_threshold_lower,\n                                  take_diffs,\n                                  take_logs\n                                ) %}\n\n{%- set sigma_threshold_upper = sigma_threshold_upper if sigma_threshold_upper else sigma_threshold -%}\n{%- set sigma_threshold_lower = sigma_threshold_lower if sigma_threshold_lower else -1 * sigma_threshold -%}\n{%- set partition_by = \"partition by \" ~ (group_by | join(\",\")) if group_by -%}\n{%- set group_by_length = (group_by | length ) if group_by else 0 -%}\n\nwith metric_values as (\n\n    with grouped_metric_values as (\n\n        select\n            {{ dbt.date_trunc(period, date_column_name) }} as metric_period,\n            {{ group_by | join(\",\") ~ \",\" if group_by }}\n            sum({{ column_name }}) as agg_metric_value\n        from\n            {{ model }}\n        {{  dbt_expectations.group_by(1 + group_by_length) }}\n\n    )\n    {%- if take_diffs %}\n    , grouped_metric_values_with_priors as (\n\n        select\n            *,\n            lag(agg_metric_value, {{ lookback_periods }}) over(\n                {{ partition_by }}\n                order by metric_period) as prior_agg_metric_value\n    from\n        grouped_metric_values d\n\n    )\n    select\n        *,\n        {{ dbt_expectations._get_metric_expression(\"agg_metric_value\", take_logs) }}\n        -\n        {{ dbt_expectations._get_metric_expression(\"prior_agg_metric_value\", take_logs) }}\n        as metric_test_value\n    from\n        grouped_metric_values_with_priors d\n\n    {%- else %}\n\n    select\n        *,\n        {{ dbt_expectations._get_metric_expression(\"agg_metric_value\", take_logs) }}\n        as metric_test_value\n    from\n        grouped_metric_values\n\n    {%- endif %}\n\n),\nmetric_moving_calcs as (\n\n    select\n        *,\n        avg(metric_test_value)\n            over({{ partition_by }}\n                    order by metric_period rows\n                    between {{ trend_periods }} preceding and 1 preceding) as metric_test_rolling_average,\n        stddev(metric_test_value)\n            over({{ partition_by }}\n                    order by metric_period rows\n                    between {{ trend_periods }} preceding and 1 preceding) as metric_test_rolling_stddev\n    from\n        metric_values\n\n),\nmetric_sigma as (\n\n    select\n        *,\n        (metric_test_value - metric_test_rolling_average) as metric_test_delta,\n        (metric_test_value - metric_test_rolling_average)/\n            nullif(metric_test_rolling_stddev, 0) as metric_test_sigma\n    from\n        metric_moving_calcs\n\n)\nselect\n    *\nfrom\n    metric_sigma\nwhere\n\n    metric_period >= cast(\n            {{ dbt.dateadd(period, -test_periods, dbt.date_trunc(period, dbt_date.now())) }}\n            as {{ dbt_expectations.type_timestamp() }})\n    and\n    metric_period < {{ dbt.date_trunc(period, dbt_date.now()) }}\n    and\n\n    not (\n        metric_test_sigma >= {{ sigma_threshold_lower }} and\n        metric_test_sigma <= {{ sigma_threshold_upper }}\n    )\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt_expectations.group_by", "macro.dbt_expectations._get_metric_expression", "macro.dbt.dateadd", "macro.dbt_date.now", "macro.dbt_expectations.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.100261, "supported_languages": null}, "macro.dbt_expectations.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_is_true.sql", "original_file_path": "macros/schema_tests/_generalized/expression_is_true.sql", "unique_id": "macro.dbt_expectations.test_expression_is_true", "macro_sql": "{% test expression_is_true(model,\n                                 expression,\n                                 test_condition=\"= true\",\n                                 group_by_columns=None,\n                                 row_condition=None\n                                 ) %}\n\n    {{ dbt_expectations.expression_is_true(model, expression, test_condition, group_by_columns, row_condition) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1021888, "supported_languages": null}, "macro.dbt_expectations.expression_is_true": {"name": "expression_is_true", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_is_true.sql", "original_file_path": "macros/schema_tests/_generalized/expression_is_true.sql", "unique_id": "macro.dbt_expectations.expression_is_true", "macro_sql": "{% macro expression_is_true(model,\n                                 expression,\n                                 test_condition=\"= true\",\n                                 group_by_columns=None,\n                                 row_condition=None\n                                 ) %}\n    {{ adapter.dispatch('expression_is_true', 'dbt_expectations') (model, expression, test_condition, group_by_columns, row_condition) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1029294, "supported_languages": null}, "macro.dbt_expectations.default__expression_is_true": {"name": "default__expression_is_true", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_is_true.sql", "original_file_path": "macros/schema_tests/_generalized/expression_is_true.sql", "unique_id": "macro.dbt_expectations.default__expression_is_true", "macro_sql": "{% macro default__expression_is_true(model, expression, test_condition, group_by_columns, row_condition) -%}\nwith grouped_expression as (\n    select\n        {% if group_by_columns %}\n        {% for group_by_column in group_by_columns -%}\n        {{ group_by_column }} as col_{{ loop.index }},\n        {% endfor -%}\n        {% endif %}\n        {{ dbt_expectations.truth_expression(expression) }}\n    from {{ model }}\n     {%- if row_condition %}\n    where\n        {{ row_condition }}\n    {% endif %}\n    {% if group_by_columns %}\n    group by\n    {% for group_by_column in group_by_columns -%}\n        {{ group_by_column }}{% if not loop.last %},{% endif %}\n    {% endfor %}\n    {% endif %}\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression {{ test_condition }})\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.truth_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1045222, "supported_languages": null}, "macro.dbt_expectations.get_select": {"name": "get_select", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.get_select", "macro_sql": "{% macro get_select(model, expression, row_condition, group_by) -%}\n    {{ adapter.dispatch('get_select', 'dbt_expectations') (model, expression, row_condition, group_by) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__get_select"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1130571, "supported_languages": null}, "macro.dbt_expectations.default__get_select": {"name": "default__get_select", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.default__get_select", "macro_sql": "\n\n{%- macro default__get_select(model, expression, row_condition, group_by) %}\n    select\n        {% if group_by %}\n        {% for g in group_by -%}\n            {{ g }} as col_{{ loop.index }},\n        {% endfor -%}\n        {% endif %}\n        {{ expression }} as expression\n    from\n        {{ model }}\n    {%- if row_condition %}\n    where\n        {{ row_condition }}\n    {% endif %}\n    {% if group_by %}\n    group by\n        {% for g in group_by -%}\n            {{ loop.index }}{% if not loop.last %},{% endif %}\n        {% endfor %}\n    {% endif %}\n{% endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.114483, "supported_languages": null}, "macro.dbt_expectations.test_equal_expression": {"name": "test_equal_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.test_equal_expression", "macro_sql": "{% test equal_expression(model, expression,\n                                compare_model=None,\n                                compare_expression=None,\n                                group_by=None,\n                                compare_group_by=None,\n                                row_condition=None,\n                                compare_row_condition=None,\n                                tolerance=0.0,\n                                tolerance_percent=None\n                                ) -%}\n\n    {{ adapter.dispatch('test_equal_expression', 'dbt_expectations') (\n                                model,\n                                expression,\n                                compare_model,\n                                compare_expression,\n                                group_by,\n                                compare_group_by,\n                                row_condition,\n                                compare_row_condition,\n                                tolerance,\n                                tolerance_percent) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1157026, "supported_languages": null}, "macro.dbt_expectations.default__test_equal_expression": {"name": "default__test_equal_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.default__test_equal_expression", "macro_sql": "\n\n{%- macro default__test_equal_expression(\n                                model,\n                                expression,\n                                compare_model,\n                                compare_expression,\n                                group_by,\n                                compare_group_by,\n                                row_condition,\n                                compare_row_condition,\n                                tolerance,\n                                tolerance_percent) -%}\n\n    {%- set compare_model = model if not compare_model else compare_model -%}\n    {%- set compare_expression = expression if not compare_expression else compare_expression -%}\n    {%- set compare_row_condition = row_condition if not compare_row_condition else compare_row_condition -%}\n    {%- set compare_group_by = group_by if not compare_group_by else compare_group_by -%}\n\n    {%- set n_cols = (group_by|length) if group_by else 0 %}\n    with a as (\n        {{ dbt_expectations.get_select(model, expression, row_condition, group_by) }}\n    ),\n    b as (\n        {{ dbt_expectations.get_select(compare_model, compare_expression, compare_row_condition, compare_group_by) }}\n    ),\n    final as (\n\n        select\n            {% for i in range(1, n_cols + 1) -%}\n            coalesce(a.col_{{ i }}, b.col_{{ i }}) as col_{{ i }},\n            {% endfor %}\n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        {% if n_cols > 0 %}\n            a\n            full outer join\n            b on\n            {% for i in range(1, n_cols + 1) -%}\n                a.col_{{ i }} = b.col_{{ i }} {% if not loop.last %}and{% endif %}\n            {% endfor -%}\n        {% else %}\n            a cross join b\n        {% endif %}\n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        {% if tolerance_percent %}\n        expression_difference_percent > {{ tolerance_percent }}\n        {% else %}\n        expression_difference > {{ tolerance }}\n        {% endif %}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.get_select"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1193535, "supported_languages": null}, "macro.dbt_expectations.ignore_row_if_expression": {"name": "ignore_row_if_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "unique_id": "macro.dbt_expectations.ignore_row_if_expression", "macro_sql": "{% macro ignore_row_if_expression(ignore_row_if, columns) %}\n    {{ adapter.dispatch('ignore_row_if_expression', 'dbt_expectations') (ignore_row_if, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__ignore_row_if_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1204736, "supported_languages": null}, "macro.dbt_expectations.default__ignore_row_if_expression": {"name": "default__ignore_row_if_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "unique_id": "macro.dbt_expectations.default__ignore_row_if_expression", "macro_sql": "{% macro default__ignore_row_if_expression(ignore_row_if, columns) %}\n  {%- set ignore_row_if_values = [\"all_values_are_missing\", \"any_value_is_missing\"] -%}\n    {% if ignore_row_if not in ignore_row_if_values %}\n        {{ exceptions.raise_compiler_error(\n            \"`ignore_row_if` must be one of \" ~ (ignore_row_if_values | join(\", \")) ~ \". Got: '\" ~ ignore_row_if ~\"'.'\"\n        ) }}\n    {% endif %}\n\n    {%- set op = \"and\" if ignore_row_if == \"all_values_are_missing\" else \"or\" -%}\n    not (\n        {% for column in columns -%}\n        {{ column }} is null{% if not loop.last %} {{ op }} {% endif %}\n        {% endfor %}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1219919, "supported_languages": null}, "macro.dbt_expectations.truth_expression": {"name": "truth_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_truth_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_truth_expression.sql", "unique_id": "macro.dbt_expectations.truth_expression", "macro_sql": "{% macro truth_expression(expression) %}\n    {{ adapter.dispatch('truth_expression', 'dbt_expectations') (expression) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__truth_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1226056, "supported_languages": null}, "macro.dbt_expectations.default__truth_expression": {"name": "default__truth_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_truth_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_truth_expression.sql", "unique_id": "macro.dbt_expectations.default__truth_expression", "macro_sql": "{% macro default__truth_expression(expression) %}\n  {{ expression }} as expression\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.122882, "supported_languages": null}, "macro.dbt_expectations.test_expression_between": {"name": "test_expression_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_between.sql", "original_file_path": "macros/schema_tests/_generalized/expression_between.sql", "unique_id": "macro.dbt_expectations.test_expression_between", "macro_sql": "{% test expression_between(model,\n                                 expression,\n                                 min_value=None,\n                                 max_value=None,\n                                 group_by_columns=None,\n                                 row_condition=None,\n                                 strictly=False\n                                 ) %}\n\n    {{ dbt_expectations.expression_between(model, expression, min_value, max_value, group_by_columns, row_condition, strictly) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1251159, "supported_languages": null}, "macro.dbt_expectations.expression_between": {"name": "expression_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_between.sql", "original_file_path": "macros/schema_tests/_generalized/expression_between.sql", "unique_id": "macro.dbt_expectations.expression_between", "macro_sql": "{% macro expression_between(model,\n                            expression,\n                            min_value,\n                            max_value,\n                            group_by_columns,\n                            row_condition,\n                            strictly\n                            ) %}\n\n{%- if min_value is none and max_value is none -%}\n{{ exceptions.raise_compiler_error(\n    \"You have to provide either a min_value, max_value or both.\"\n) }}\n{%- endif -%}\n\n{%- set strict_operator = \"\" if strictly else \"=\" -%}\n\n{% set expression_min_max %}\n( 1=1\n{%- if min_value is not none %} and {{ expression | trim }} >{{ strict_operator }} {{ min_value }}{% endif %}\n{%- if max_value is not none %} and {{ expression | trim }} <{{ strict_operator }} {{ max_value }}{% endif %}\n)\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression_min_max,\n                                        group_by_columns=group_by_columns,\n                                        row_condition=row_condition)\n                                        }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1270032, "supported_languages": null}, "macro.dbt_expectations.regexp_instr": {"name": "regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.regexp_instr", "macro_sql": "{% macro regexp_instr(source_value, regexp, position=1, occurrence=1, is_raw=False, flags=\"\") %}\n\n    {{ adapter.dispatch('regexp_instr', 'dbt_expectations')(\n        source_value, regexp, position, occurrence, is_raw, flags\n    ) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.bigquery__regexp_instr"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1301675, "supported_languages": null}, "macro.dbt_expectations.default__regexp_instr": {"name": "default__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.default__regexp_instr", "macro_sql": "{% macro default__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{# unclear if other databases support raw strings or flags #}\n{% if is_raw or flags %}\n    {{ exceptions.warn(\n            \"is_raw and flags options are not supported for this adapter \"\n            ~ \"and are being ignored.\"\n    ) }}\n{% endif %}\nregexp_instr({{ source_value }}, '{{ regexp }}', {{ position }}, {{ occurrence }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1310697, "supported_languages": null}, "macro.dbt_expectations.snowflake__regexp_instr": {"name": "snowflake__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.snowflake__regexp_instr", "macro_sql": "{% macro snowflake__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{%- set regexp = \"$$\" ~ regexp ~ \"$$\" if is_raw else \"'\" ~ regexp ~ \"'\" -%}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'cimes') }}{% endif %}\nregexp_instr({{ source_value }}, {{ regexp }}, {{ position }}, {{ occurrence }}, 0, '{{ flags }}')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1322122, "supported_languages": null}, "macro.dbt_expectations.bigquery__regexp_instr": {"name": "bigquery__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.bigquery__regexp_instr", "macro_sql": "{% macro bigquery__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}\n    {{ dbt_expectations._validate_re2_flags(flags) }}\n    {# BigQuery prepends \"(?flags)\" to set flags for current group #}\n    {%- set regexp = \"(?\" ~ flags ~ \")\" ~ regexp -%}\n{% endif %}\n{%- set regexp = \"r'\" ~ regexp ~ \"'\" if is_raw else \"'\" ~ regexp ~ \"'\" -%}\nregexp_instr({{ source_value }}, {{ regexp }}, {{ position }}, {{ occurrence }})\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_re2_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1334736, "supported_languages": null}, "macro.dbt_expectations.postgres__regexp_instr": {"name": "postgres__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.postgres__regexp_instr", "macro_sql": "{% macro postgres__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'bcegimnpqstwx') }}{% endif %}\ncoalesce(array_length((select regexp_matches({{ source_value }}, '{{ regexp }}', '{{ flags }}')), 1), 0)\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1342483, "supported_languages": null}, "macro.dbt_expectations.redshift__regexp_instr": {"name": "redshift__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.redshift__regexp_instr", "macro_sql": "{% macro redshift__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'ciep') }}{% endif %}\nregexp_instr({{ source_value }}, '{{ regexp }}', {{ position }}, {{ occurrence }}, 0, '{{ flags }}')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.135109, "supported_languages": null}, "macro.dbt_expectations.duckdb__regexp_instr": {"name": "duckdb__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.duckdb__regexp_instr", "macro_sql": "{% macro duckdb__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'ciep') }}{% endif %}\nregexp_matches({{ source_value }}, '{{ regexp }}', '{{ flags }}')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.135902, "supported_languages": null}, "macro.dbt_expectations.spark__regexp_instr": {"name": "spark__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.spark__regexp_instr", "macro_sql": "{% macro spark__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if is_raw or flags %}\n    {{ exceptions.warn(\n            \"is_raw and flags options are not supported for this adapter \"\n            ~ \"and are being ignored.\"\n    ) }}\n{% endif %}\nlength(regexp_extract({{ source_value }}, '{{ regexp }}', 0))\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1366909, "supported_languages": null}, "macro.dbt_expectations._validate_flags": {"name": "_validate_flags", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations._validate_flags", "macro_sql": "{% macro _validate_flags(flags, alphabet) %}\n{% for flag in flags %}\n    {% if flag not in alphabet %}\n    {# Using raise_compiler_error causes disabled tests with invalid flags to fail compilation #}\n    {{ exceptions.warn(\n        \"flag \" ~ flag ~ \" not in list of allowed flags for this adapter: \" ~ alphabet | join(\", \")\n    ) }}\n    {% endif %}\n{% endfor %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.1375794, "supported_languages": null}, "macro.dbt_expectations._validate_re2_flags": {"name": "_validate_re2_flags", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations._validate_re2_flags", "macro_sql": "{% macro _validate_re2_flags(flags) %}\n{# Re2 supports following flags: #}\n{# i  :  case-insensitive (default fault) #}\n{# m  :  multi-line mode: ^ and $ match begin/end line in addition to begin/end text (default false) #}\n{# s  :  let . match \\n (default false) #}\n{# U  :  ungreedy: swap meaning of x* and x*?, x+ and x+?, etc (default false) #}\n{# Flag syntax is xyz (set) or -xyz (clear) or xy-z (set xy, clear z).  #}\n\n{# Regex explanation: do not allow consecutive dashes, accept all re2 flags and clear operator, do not end with a dash  #}\n{% set re2_flags_pattern = '^(?!.*--)[-imsU]*(?<!-)$' %}\n{% set re = modules.re %}\n{% set is_match = re.match(re2_flags_pattern, flags) %}\n{% if not is_match %}\n    {# Using raise_compiler_error causes disabled tests with invalid flags to fail compilation #}\n    {{ exceptions.warn(\n        \"flags \" ~ flags ~ \" isn't a valid re2 flag pattern\"\n    ) }}\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1703652758.138862, "supported_languages": null}}, "docs": {"doc.sado_analytics_services.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "homepage.md", "original_file_path": "models/homepage.md", "unique_id": "doc.sado_analytics_services.__overview__", "block_contents": "# My dbt project\n\nLink to [Github](<https://github.com/chienazazaz/sado_analytics_services>)\n<br/>\nLink to [Report](<https://headscloud.dev>)"}, "doc.sado_analytics_services.column__googleads__absolute_top_impression_percentage": {"name": "column__googleads__absolute_top_impression_percentage", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__absolute_top_impression_percentage", "block_contents": "The percent of your ad impressions that are shown as the very first ad above the organic search results.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb th\u1ee9 t\u1ef1 \u0111\u1ea7u ti\u00ean trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm."}, "doc.sado_analytics_services.column__googleads__item_id": {"name": "column__googleads__item_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__item_id", "block_contents": "Item ID of the product.\nM\u00e3 s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__googleads__content_impression_share": {"name": "column__googleads__content_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__content_impression_share", "block_contents": "The impressions you've received on the Display Network divided by the estimated number of impressions you were eligible to receive.\nT\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o qua Display Network tr\u00ean s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb."}, "doc.sado_analytics_services.column__googleads__content_rank_lost_impression_share": {"name": "column__googleads__content_rank_lost_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__content_rank_lost_impression_share", "block_contents": "The estimated percentage of impressions on the Display Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb tr\u00ean Display Network b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__search_impression_share": {"name": "column__googleads__search_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_impression_share", "block_contents": "The impressions you've received on the Search Network divided by the estimated number of impressions you were eligible to receive.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb."}, "doc.sado_analytics_services.column__googleads__search_rank_lost_absolute_top_impression_share": {"name": "column__googleads__search_rank_lost_absolute_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_rank_lost_absolute_top_impression_share", "block_contents": "The number estimating how often your ad wasn't the very first ad above the organic search results due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__search_rank_lost_impression_share": {"name": "column__googleads__search_rank_lost_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_rank_lost_impression_share", "block_contents": "The estimated percentage of impressions on the Search Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t tr\u00ean k\u00eanh t\u00ecm ki\u1ebfm do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__search_rank_lost_top_impression_share": {"name": "column__googleads__search_rank_lost_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_rank_lost_top_impression_share", "block_contents": "The number estimating how often your ad didn't show anywhere above the organic search results due to poor Ad Rank\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__account_name": {"name": "column__googleads__account_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__account_name", "block_contents": "The descriptive name of the account.\nT\u00ean t\u00e0i kho\u1ea3n qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__ad_group_id": {"name": "column__googleads__ad_group_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__ad_group_id", "block_contents": "The ID of the ad group.\nM\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__ad_group_name": {"name": "column__googleads__ad_group_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__ad_group_name", "block_contents": "The descriptive name of the ad group.\nT\u00ean nh\u00f3m qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__ad_group_type": {"name": "column__googleads__ad_group_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__ad_group_type", "block_contents": "The type of the ad group \nLo\u1ea1i nh\u00f3m qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__advertising_channel": {"name": "column__googleads__advertising_channel", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__advertising_channel", "block_contents": "The primary serving target for ads within the campaign.\nK\u00eanh qu\u1ea3ng c\u00e1o: Search, Display, Video..."}, "doc.sado_analytics_services.column__googleads__all_conversions": {"name": "column__googleads__all_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__all_conversions", "block_contents": "The total number of conversions.\nTo\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i (bao g\u1ed3m c\u1ea3 nh\u1eefng chuy\u1ec3n \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c gom trong nh\u00f3m qu\u1ea3ng c\u00e1o)"}, "doc.sado_analytics_services.column__googleads__all_conversions_from_interactions_rate": {"name": "column__googleads__all_conversions_from_interactions_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__all_conversions_from_interactions_rate", "block_contents": "All conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.\nTo\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c."}, "doc.sado_analytics_services.column__googleads__all_conversions_value": {"name": "column__googleads__all_conversions_value", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__all_conversions_value", "block_contents": "The total value of all conversions.\nT\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__bidding_stategy": {"name": "column__googleads__bidding_stategy", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__bidding_stategy", "block_contents": "The type of bidding strategy.\nChi\u1ebfn l\u01b0\u1ee3c th\u1ea7u."}, "doc.sado_analytics_services.column__googleads__campaign_id": {"name": "column__googleads__campaign_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__campaign_id", "block_contents": "The ID of the ad campaign.\nM\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__campaign_name": {"name": "column__googleads__campaign_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__campaign_name", "block_contents": "The name of the ad campaign.\nT\u00ean chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__clicks": {"name": "column__googleads__clicks", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__clicks", "block_contents": "The number of clicks.\nS\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)"}, "doc.sado_analytics_services.column__googleads__conversion_attribution_type": {"name": "column__googleads__conversion_attribution_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversion_attribution_type", "block_contents": "Conversion attribution event type.\nLo\u1ea1i s\u1ef1 ki\u1ec7n chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__conversion_name": {"name": "column__googleads__conversion_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversion_name", "block_contents": "Conversion name.\nT\u00ean s\u1ef1 ki\u1ec7n chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__conversions": {"name": "column__googleads__conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversions", "block_contents": "The number of conversions.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__conversions_from_interactions_rate": {"name": "column__googleads__conversions_from_interactions_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversions_from_interactions_rate", "block_contents": "Conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.\nL\u01b0\u1ee3ng chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c."}, "doc.sado_analytics_services.column__googleads__conversions_value": {"name": "column__googleads__conversions_value", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversions_value", "block_contents": "The total value of conversions.\nGi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__cost": {"name": "column__googleads__cost", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__cost", "block_contents": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.\nChi ph\u00ed qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__cost_per_all_conversions": {"name": "column__googleads__cost_per_all_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__cost_per_all_conversions", "block_contents": "The cost of ad interactions divided by all conversions.\nChi ph\u00ed qu\u1ea3ng c\u00e1o chia cho to\u00e0n b\u1ed9 s\u1ed1 chuy\u1ec3n \u0111\u1ed5i (bao g\u1ed3m c\u1ea3 chuy\u1ec3n \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c gom trong nh\u00f3m)"}, "doc.sado_analytics_services.column__googleads__cost_per_conversion": {"name": "column__googleads__cost_per_conversion", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__cost_per_conversion", "block_contents": "The cost of ad interactions divided by conversions.\nChi ph\u00ed qu\u1ea3ng c\u00e1o chia cho s\u1ed1 chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__cross_device_conversions": {"name": "column__googleads__cross_device_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__cross_device_conversions", "block_contents": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.\nChuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__search_absolute_top_impression_share": {"name": "column__googleads__search_absolute_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_absolute_top_impression_share", "block_contents": "The percentage of the customer's Shopping or Search ad impressions that are shown in the most prominent Shopping position.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o t\u00ecm ki\u1ebfm ho\u1eb7c mua s\u1eafm \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb v\u1ecb tr\u00ed t\u1ed1t nh\u1ea5t."}, "doc.sado_analytics_services.column__googleads__search_budget_lost_absolute_top_impression_share": {"name": "column__googleads__search_budget_lost_absolute_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_budget_lost_absolute_top_impression_share", "block_contents": "The number estimating how often your ad wasn't the very first ad above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb t\u1ea1i v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ng\u00e2n s\u00e1ch th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__search_budget_lost_top_impression_share": {"name": "column__googleads__search_budget_lost_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_budget_lost_top_impression_share", "block_contents": "The number estimating how often your ad didn't show anywhere above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb do ng\u00e2n s\u00e1ch th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__currency_code": {"name": "column__googleads__currency_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__currency_code", "block_contents": "The currency in which the account operates. A subset of the currency codes from the ISO 4217 standard is supported.\nLo\u1ea1i ti\u1ec1n t\u1ec7 \u0111\u01b0\u1ee3c t\u00ednh \u0111\u1ec3 v\u1eadn h\u00e0nh t\u00e0i kho\u1ea3n qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__budget": {"name": "column__googleads__budget", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__budget", "block_contents": "Ng\u00e2n s\u00e1ch qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__budget_period": {"name": "column__googleads__budget_period", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__budget_period", "block_contents": "Chu k\u1ef3 qu\u1ea3ng c\u00e1o (Daily...)"}, "doc.sado_analytics_services.column__googleads__date": {"name": "column__googleads__date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__date", "block_contents": "Date to which metrics apply.\nNg\u00e0y t\u00ednh ch\u1ec9 s\u1ed1"}, "doc.sado_analytics_services.column__googleads__device": {"name": "column__googleads__device", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__device", "block_contents": "Device to which metrics apply.\nThi\u1ebft b\u1ecb"}, "doc.sado_analytics_services.column__googleads__engagements": {"name": "column__googleads__engagements", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__engagements", "block_contents": "The number of engagements. An engagement occurs when a viewer expands your Lightbox ad.\nS\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. V\u1edbi qu\u1ea3ng c\u00e1o display s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng m\u1edf r\u1ed9ng qu\u1ea3ng c\u00e1o (Lightbox)"}, "doc.sado_analytics_services.column__googleads__impressions": {"name": "column__googleads__impressions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__impressions", "block_contents": "Count of how often your ad has appeared on a search results page or website on the Google Network.\nS\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network."}, "doc.sado_analytics_services.column__googleads__interactions": {"name": "column__googleads__interactions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__interactions", "block_contents": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.\nS\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video."}, "doc.sado_analytics_services.column__googleads__keyword": {"name": "column__googleads__keyword", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__keyword", "block_contents": "T\u1eeb kho\u00e1 t\u00ecm ki\u1ebfm."}, "doc.sado_analytics_services.column__googleads__match_type": {"name": "column__googleads__match_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__match_type", "block_contents": "The match type of the keyword.\nPh\u01b0\u01a1ng ph\u00e1p so kh\u1edbp t\u1eeb kho\u00e1"}, "doc.sado_analytics_services.column__googleads__network_type": {"name": "column__googleads__network_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__network_type", "block_contents": "Ad network type.\nPh\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__search_term": {"name": "column__googleads__search_term", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_term", "block_contents": "The search term.\nC\u1ee5m t\u1eeb t\u00ecm ki\u1ebfm."}, "doc.sado_analytics_services.column__googleads__slot": {"name": "column__googleads__slot", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__slot", "block_contents": "Position of the ad.\nV\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__top_impression_percentage": {"name": "column__googleads__top_impression_percentage", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__top_impression_percentage", "block_contents": "The percent of your ad impressions that are shown anywhere above the organic search results.\nT\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm."}, "doc.sado_analytics_services.column__googleads__value_per_all_conversions": {"name": "column__googleads__value_per_all_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__value_per_all_conversions", "block_contents": "The value of all conversions divided by the number of all conversions.\nT\u1ed5ng gi\u00e1 tr\u1ecb to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i chia cho to\u00e0n b\u1ed9 s\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__value_per_conversion": {"name": "column__googleads__value_per_conversion", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__value_per_conversion", "block_contents": "The value of conversions divided by the number of conversions.\nGi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i tr\u00ean m\u1ed7i l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__video_quartile_p100_rate": {"name": "column__googleads__video_quartile_p100_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_quartile_p100_rate", "block_contents": "Percentage of impressions where the viewer watched all of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem to\u00e0n b\u1ed9 video qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__video_quartile_p25_rate": {"name": "column__googleads__video_quartile_p25_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_quartile_p25_rate", "block_contents": "Percentage of impressions where the viewer watched 25% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 25% video qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__video_quartile_p50_rate": {"name": "column__googleads__video_quartile_p50_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_quartile_p50_rate", "block_contents": "Percentage of impressions where the viewer watched 50% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 50% video qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__video_quartile_p75_rate": {"name": "column__googleads__video_quartile_p75_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_quartile_p75_rate", "block_contents": "Percentage of impressions where the viewer watched 75% of your video.\nT\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 75% video qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__video_views": {"name": "column__googleads__video_views", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_views", "block_contents": "The number of times your video ads were viewed.\nS\u1ed1 l\u01b0\u1ee3t qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c xem."}, "doc.sado_analytics_services.column__googleads__view_status": {"name": "column__googleads__view_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__view_status", "block_contents": "Indicates whether the search term is currently one of your targeted or excluded keywords.\nC\u1ee5m t\u1eeb t\u00ecm ki\u1ebfm thu\u1ed9c nh\u00f3m t\u1eeb kho\u00e1 m\u1ee5c ti\u00eau hay lo\u1ea1i t\u1eeb"}, "doc.sado_analytics_services.column__googleads__search_top_impression_share": {"name": "column__googleads__search_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_top_impression_share", "block_contents": "The impressions you've received in the top location (anywhere above the organic search results) compared to the estimated number of impressions you were eligible to receive in the top location.\nT\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb t\u1ea1i khu v\u1ef1c \u0111\u1ea7u (tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm) tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec7n th\u1ecb khu v\u1ef1c \u0111\u1ea7u."}, "doc.sado_analytics_services.column__googleads__relative_ctr": {"name": "column__googleads__relative_ctr", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__relative_ctr", "block_contents": "Your clickthrough rate (Ctr) divided by the average clickthrough rate of all advertisers on the websites that show your ads.\nT\u1ec9 l\u1ec7 nh\u1ea5p t\u01b0\u01a1ng \u0111\u1ed1i, t\u00ednh d\u1ef1a tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p trung b\u00ecnh c\u1ee7a c\u00e1c nh\u00e0 qu\u1ea3ng c\u00e1o kh\u00e1c tr\u00ean trang m\u00e0 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb."}, "doc.sado_analytics_services.column__googleads__view_through_conversions": {"name": "column__googleads__view_through_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__view_through_conversions", "block_contents": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.\nS\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)"}, "doc.sado_analytics_services.column__nhanhvn__carrier_id": {"name": "column__nhanhvn__carrier_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__carrier_id", "block_contents": "Id nh\u00e0 v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__carrier_name": {"name": "column__nhanhvn__carrier_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__carrier_name", "block_contents": "T\u00ean nh\u00e0 v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__service_id": {"name": "column__nhanhvn__service_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__service_id", "block_contents": "Id d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__service_name": {"name": "column__nhanhvn__service_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__service_name", "block_contents": "T\u00ean d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__customer_name": {"name": "column__nhanhvn__customer_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__customer_name", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__gender": {"name": "column__nhanhvn__gender", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__gender", "block_contents": "Gi\u1edbi t\u00ednh kh\u00e1ch h\u00e0ng (1 = Nam, 2 = N\u1eef, Null: Ch\u01b0a c\u00f3 th\u00f4ng tin)"}, "doc.sado_analytics_services.column__nhanhvn__birthday": {"name": "column__nhanhvn__birthday", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__birthday", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__total_money": {"name": "column__nhanhvn__total_money", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__total_money", "block_contents": "T\u1ed5ng s\u1ed1 ti\u1ec1n kh\u00e1ch mua h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__first_purchase_date": {"name": "column__nhanhvn__first_purchase_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__first_purchase_date", "block_contents": "Ng\u00e0y b\u1eaft \u0111\u1ea7u mua h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__first_purchase_depot_id": {"name": "column__nhanhvn__first_purchase_depot_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__first_purchase_depot_id", "block_contents": "Kho b\u1eaft \u0111\u1ea7u mua h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__points": {"name": "column__nhanhvn__points", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__points", "block_contents": "\u0110i\u1ec3m t\u00edch l\u0169y hi\u1ec7n t\u1ea1i c\u1ee7a kh\u00e1ch h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__total_bills": {"name": "column__nhanhvn__total_bills", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__total_bills", "block_contents": "T\u1ed5ng s\u1ed1 ti\u1ec1n kh\u00e1ch thanh to\u00e1n"}, "doc.sado_analytics_services.column__nhanhvn__last_bought_date": {"name": "column__nhanhvn__last_bought_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__last_bought_date", "block_contents": "Ng\u00e0y g\u1ea7n nh\u1ea5t mua h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__depots_id": {"name": "column__nhanhvn__depots_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__depots_id", "block_contents": "ID kho h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__depot_name": {"name": "column__nhanhvn__depot_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__depot_name", "block_contents": "T\u00ean kho h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__city": {"name": "column__nhanhvn__city", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__city", "block_contents": "Th\u00e0nh ph\u1ed1"}, "doc.sado_analytics_services.column__nhanhvn__district": {"name": "column__nhanhvn__district", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__district", "block_contents": "Qu\u1eadn huy\u1ec7n"}, "doc.sado_analytics_services.column__nhanhvn__address": {"name": "column__nhanhvn__address", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__address", "block_contents": "\u0110\u1ecba ch\u1ec9 kho"}, "doc.sado_analytics_services.column__nhanhvn__order_id": {"name": "column__nhanhvn__order_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__order_id", "block_contents": "Id \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__shop_order_id": {"name": "column__nhanhvn__shop_order_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__shop_order_id", "block_contents": "Id website t\u00edch h\u1ee3p"}, "doc.sado_analytics_services.column__nhanhvn__sale_channel": {"name": "column__nhanhvn__sale_channel", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__sale_channel", "block_contents": "K\u00eanh b\u00e1n ph\u00e1t sinh \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__tracking_number": {"name": "column__nhanhvn__tracking_number", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__tracking_number", "block_contents": "M\u00e3 v\u1eadn \u0111\u01a1n"}, "doc.sado_analytics_services.column__nhanhvn__depot_id": {"name": "column__nhanhvn__depot_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__depot_id", "block_contents": "Id kho h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__order_type": {"name": "column__nhanhvn__order_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__order_type", "block_contents": "Lo\u1ea1i \u0111\u01a1n h\u00e0ng (Shipping | Shopping)"}, "doc.sado_analytics_services.column__nhanhvn__money_deposit": {"name": "column__nhanhvn__money_deposit", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__money_deposit", "block_contents": "Ti\u1ec1n \u0111\u1eb7t c\u1ecdc"}, "doc.sado_analytics_services.column__nhanhvn__money_transfer": {"name": "column__nhanhvn__money_transfer", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__money_transfer", "block_contents": "Ti\u1ec1n chuy\u1ec3n kho\u1ea3n"}, "doc.sado_analytics_services.column__nhanhvn__deposit_account": {"name": "column__nhanhvn__deposit_account", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__deposit_account", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__transfer_account": {"name": "column__nhanhvn__transfer_account", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__transfer_account", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__used_points": {"name": "column__nhanhvn__used_points", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__used_points", "block_contents": "S\u1ed1 \u0111i\u1ec3m \u0111\u00e3 ti\u00eau"}, "doc.sado_analytics_services.column__nhanhvn__money_used_points": {"name": "column__nhanhvn__money_used_points", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__money_used_points", "block_contents": "S\u1ed1 ti\u1ec1n ti\u00eau \u0111i\u1ec3m \u0111\u00e3 ti\u00eau"}, "doc.sado_analytics_services.column__nhanhvn__carrier_code": {"name": "column__nhanhvn__carrier_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__carrier_code", "block_contents": "M\u00e3 v\u1eadn \u0111\u01a1n, \u0111\u01a1n h\u00e0ng \u0111\u00e3 b\u1eafn sang h\u00e3ng v\u1eadn chuy\u1ec3n m\u1edbi c\u00f3 th\u00f4ng tin m\u00e3 v\u1eadn \u0111\u01a1n."}, "doc.sado_analytics_services.column__nhanhvn__ship_fee": {"name": "column__nhanhvn__ship_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__ship_fee", "block_contents": "Ph\u00ed v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__cod_fee": {"name": "column__nhanhvn__cod_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__cod_fee", "block_contents": "Ph\u00ed thu ti\u1ec1n h\u1ed9"}, "doc.sado_analytics_services.column__nhanhvn__customer_ship_fee": {"name": "column__nhanhvn__customer_ship_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__customer_ship_fee", "block_contents": "Ph\u00ed thu c\u1ee7a kh\u00e1ch"}, "doc.sado_analytics_services.column__nhanhvn__return_fee": {"name": "column__nhanhvn__return_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__return_fee", "block_contents": "Ph\u00ed chuy\u1ec3n ho\u00e0n"}, "doc.sado_analytics_services.column__nhanhvn__overweight_fee": {"name": "column__nhanhvn__overweight_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__overweight_fee", "block_contents": "Ph\u00ed v\u01b0\u1ee3t c\u00e2n"}, "doc.sado_analytics_services.column__nhanhvn__declared_fee": {"name": "column__nhanhvn__declared_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__declared_fee", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__description": {"name": "column__nhanhvn__description", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__description", "block_contents": "ghi ch\u00fa c\u1ee7a kh\u00e1ch h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__customer_id": {"name": "column__nhanhvn__customer_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__customer_id", "block_contents": "Id kh\u00e1ch h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__customer_contact_number": {"name": "column__nhanhvn__customer_contact_number", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__customer_contact_number", "block_contents": "S\u0110T kh\u00e1ch h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__ship_address": {"name": "column__nhanhvn__ship_address", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__ship_address", "block_contents": "\u0110\u1ecba ch\u1ec9 giao h\u00e0ng \u0111\u1ebfn c\u1ea5p ph\u01b0\u1eddng/x\u00e3"}, "doc.sado_analytics_services.column__nhanhvn__created_by_id": {"name": "column__nhanhvn__created_by_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__created_by_id", "block_contents": "ID ng\u01b0\u1eddi t\u1ea1o \u0111\u01a1n"}, "doc.sado_analytics_services.column__nhanhvn__sale_id": {"name": "column__nhanhvn__sale_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__sale_id", "block_contents": "ID nh\u00e2n vi\u00ean b\u00e1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__created_date": {"name": "column__nhanhvn__created_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__created_date", "block_contents": "Th\u1eddi gian t\u1ea1o \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__delivery_date": {"name": "column__nhanhvn__delivery_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__delivery_date", "block_contents": "Ng\u00e0y giao h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__send_carrier_date": {"name": "column__nhanhvn__send_carrier_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__send_carrier_date", "block_contents": "Ng\u00e0y giao b\u00ean v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__order_status": {"name": "column__nhanhvn__order_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__order_status", "block_contents": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__receiveables": {"name": "column__nhanhvn__receiveables", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__receiveables", "block_contents": "T\u1ed5ng thu c\u1ee7a kh\u00e1ch"}, "doc.sado_analytics_services.column__nhanhvn__traffic_source_name": {"name": "column__nhanhvn__traffic_source_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__traffic_source_name", "block_contents": "T\u00ean ngu\u1ed3n \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__coupon_code": {"name": "column__nhanhvn__coupon_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__coupon_code", "block_contents": "M\u00e3 coupon"}, "doc.sado_analytics_services.column__nhanhvn__product_code": {"name": "column__nhanhvn__product_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__product_code", "block_contents": "M\u00e3 s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__price": {"name": "column__nhanhvn__price", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__price", "block_contents": "Gi\u00e1 b\u00e1n l\u1ebb s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__quantity": {"name": "column__nhanhvn__quantity", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__quantity", "block_contents": "S\u1ed1 l\u01b0\u1ee3ng s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__discount": {"name": "column__nhanhvn__discount", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__discount", "block_contents": "Chi\u1ebft kh\u1ea5u"}, "doc.sado_analytics_services.column__nhanhvn__product_id": {"name": "column__nhanhvn__product_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__product_id", "block_contents": "ID s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn"}, "doc.sado_analytics_services.column__nhanhvn__category_id": {"name": "column__nhanhvn__category_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__category_id", "block_contents": "ID danh m\u1ee5c s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn"}, "doc.sado_analytics_services.column__nhanhvn__type_name": {"name": "column__nhanhvn__type_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__type_name", "block_contents": "Lo\u1ea1i s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__avg_cost": {"name": "column__nhanhvn__avg_cost", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__avg_cost", "block_contents": "Gi\u00e1 v\u1ed1n s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__barcode": {"name": "column__nhanhvn__barcode", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__barcode", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__product_name": {"name": "column__nhanhvn__product_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__product_name", "block_contents": "T\u00ean s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__product_status": {"name": "column__nhanhvn__product_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__product_status", "block_contents": "Tr\u1ea1ng th\u00e1i s\u1ea3n ph\u1ea9m New | Active | Inactive | Out of stock"}, "doc.sado_analytics_services.column__nhanhvn__user_id": {"name": "column__nhanhvn__user_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__user_id", "block_contents": "Id nh\u00e2n vi\u00ean"}, "doc.sado_analytics_services.column__nhanhvn__user_name": {"name": "column__nhanhvn__user_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__user_name", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__email": {"name": "column__nhanhvn__email", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__email", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__contact_number": {"name": "column__nhanhvn__contact_number", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__contact_number", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__role": {"name": "column__nhanhvn__role", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__role", "block_contents": "Nh\u00f3m quy\u1ec1n nh\u00e2n vi\u00ean"}, "doc.sado_analytics_services.column__nhanhvn__bill_id": {"name": "column__nhanhvn__bill_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__bill_id", "block_contents": "M\u00e3 ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho"}, "doc.sado_analytics_services.column__nhanhvn__bill_date": {"name": "column__nhanhvn__bill_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__bill_date", "block_contents": "Ng\u00e0y ho\u00e1 \u0111\u01a1n"}, "doc.sado_analytics_services.column__nhanhvn__bill_type": {"name": "column__nhanhvn__bill_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__bill_type", "block_contents": "Lo\u1ea1i ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho: Xu\u1ea5t kho | Nh\u1eadp kho"}, "doc.sado_analytics_services.column__nhanhvn__bill_mode": {"name": "column__nhanhvn__bill_mode", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__bill_mode", "block_contents": "Ki\u1ec3u ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho"}, "doc.sado_analytics_services.column__nhanhvn__related_bill_id": {"name": "column__nhanhvn__related_bill_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__related_bill_id", "block_contents": "M\u00e3 ho\u00e1 \u0111\u01a1n li\u00ean k\u1ebft"}, "doc.sado_analytics_services.column__nhanhvn__vat": {"name": "column__nhanhvn__vat", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__vat", "block_contents": "Thu\u1ebf VAT"}, "doc.sado_analytics_services.column__nhanhvn__receivables": {"name": "column__nhanhvn__receivables", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__receivables", "block_contents": "S\u1ed1 ti\u1ec1n ph\u1ea3i thu KH"}, "doc.sado_analytics_services.column__nhanhvn__item_gross_amount": {"name": "column__nhanhvn__item_gross_amount", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__item_gross_amount", "block_contents": "Gi\u00e1 tr\u1ecb s\u1ea3n ph\u1ea9m sau chi\u1ebft kh\u1ea5u"}, "doc.sado_analytics_services.column__nhanhvn__sub_total": {"name": "column__nhanhvn__sub_total", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__sub_total", "block_contents": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng sau chi\u1ebft kh\u1ea5u"}, "doc.sado_analytics_services.column__nhanhvn__delivery_fee": {"name": "column__nhanhvn__delivery_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__delivery_fee", "block_contents": "Chi ph\u00ed cho h\u00e3ng v\u1eadn chuy\u1ec3n, bao g\u1ed3m ph\u00ed giao h\u00e0ng & ph\u00ed thu h\u1ed9"}, "doc.sado_analytics_services.column__nhanhvn__fulfillment_time": {"name": "column__nhanhvn__fulfillment_time", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__fulfillment_time", "block_contents": "Th\u1eddi gian chu\u1ea9n b\u1ecb h\u00e0ng, t\u1eeb th\u1eddi \u0111i\u1ec3m ph\u00e1t sinh \u0111\u01a1n h\u00e0ng t\u1edbi th\u1eddi \u0111i\u1ec3m giao."}, "doc.sado_analytics_services.column__kiotviet__address": {"name": "column__kiotviet__address", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__address", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__attributes": {"name": "column__kiotviet__attributes", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__attributes", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__bankaccount_id": {"name": "column__kiotviet__bankaccount_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__bankaccount_id", "block_contents": "Id t\u00e0i kho\u1ea3n NH tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__bankaccount_name": {"name": "column__kiotviet__bankaccount_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__bankaccount_name", "block_contents": "T\u00ean t\u00e0i kho\u1ea3n tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__birth_date": {"name": "column__kiotviet__birth_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__birth_date", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__birth_month": {"name": "column__kiotviet__birth_month", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__birth_month", "block_contents": "Th\u00e1ng sinh nh\u1eadt"}, "doc.sado_analytics_services.column__kiotviet__branch_id": {"name": "column__kiotviet__branch_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__branch_id", "block_contents": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__branch_name": {"name": "column__kiotviet__branch_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__branch_name", "block_contents": "T\u00ean c\u1eeda h\u00e0ng tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__category_id": {"name": "column__kiotviet__category_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__category_id", "block_contents": "M\u00e3 nh\u00f3m h\u00e0ng tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__category": {"name": "column__kiotviet__category", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__category", "block_contents": "T\u00ean m\u00e3 nh\u00f3m h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__class_code": {"name": "column__kiotviet__class_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__class_code", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__class_name": {"name": "column__kiotviet__class_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__class_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__contact_number": {"name": "column__kiotviet__contact_number", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__contact_number", "block_contents": "S\u1ed1 \u0111i\u1ec7n tho\u1ea1i"}, "doc.sado_analytics_services.column__kiotviet__created_date": {"name": "column__kiotviet__created_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__created_date", "block_contents": "Ng\u00e0y t\u1ea1o"}, "doc.sado_analytics_services.column__kiotviet__customer_groups": {"name": "column__kiotviet__customer_groups", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_groups", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__customer_id": {"name": "column__kiotviet__customer_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_id", "block_contents": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__customer_name": {"name": "column__kiotviet__customer_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__customer_recency_group": {"name": "column__kiotviet__customer_recency_group", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_recency_group", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__customer_type": {"name": "column__kiotviet__customer_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_type", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__debt": {"name": "column__kiotviet__debt", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__debt", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__discount_ratio": {"name": "column__kiotviet__discount_ratio", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__discount_ratio", "block_contents": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1"}, "doc.sado_analytics_services.column__kiotviet__discount": {"name": "column__kiotviet__discount", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__discount", "block_contents": "gi\u00e1 tr\u1ecb gi\u1ea3m"}, "doc.sado_analytics_services.column__kiotviet__district": {"name": "column__kiotviet__district", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__district", "block_contents": "Qu\u1eadn huy\u1ec7n"}, "doc.sado_analytics_services.column__kiotviet__email": {"name": "column__kiotviet__email", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__email", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__employee_id": {"name": "column__kiotviet__employee_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__employee_id", "block_contents": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__first_purchase": {"name": "column__kiotviet__first_purchase", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__first_purchase", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__frequency": {"name": "column__kiotviet__frequency", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__frequency", "block_contents": "T\u1ea7n su\u1ea5t mua h\u00e0ng trong 1 kho\u1ea3ng th\u1eddi gian \u0111\u1ecbnh s\u1eb5n"}, "doc.sado_analytics_services.column__kiotviet__gender": {"name": "column__kiotviet__gender", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__gender", "block_contents": "true = Nam, false = N\u1eef, Null = Ch\u01b0a x\u00e1c \u0111\u1ecbnh"}, "doc.sado_analytics_services.column__kiotviet__given_name": {"name": "column__kiotviet__given_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__given_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__is_active": {"name": "column__kiotviet__is_active", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__is_active", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__last_purchase": {"name": "column__kiotviet__last_purchase", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__last_purchase", "block_contents": "Ng\u00e0y mua h\u00e0ng g\u1ea7n nh\u1ea5t"}, "doc.sado_analytics_services.column__kiotviet__last_transaction_id": {"name": "column__kiotviet__last_transaction_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__last_transaction_id", "block_contents": "M\u00e3 \u0111\u01a1n h\u00e0ng g\u1ea7n nh\u1ea5t"}, "doc.sado_analytics_services.column__kiotviet__modified_date": {"name": "column__kiotviet__modified_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__modified_date", "block_contents": "Ng\u00e0y ch\u1ec9nh s\u1eeda"}, "doc.sado_analytics_services.column__kiotviet__monetary": {"name": "column__kiotviet__monetary", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__monetary", "block_contents": "T\u1ed5ng gi\u00e1 tr\u1ecb mua h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__name": {"name": "column__kiotviet__name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__normalname": {"name": "column__kiotviet__normalname", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__normalname", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__partner_type": {"name": "column__kiotviet__partner_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__partner_type", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_amount": {"name": "column__kiotviet__payment_amount", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_amount", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_code": {"name": "column__kiotviet__payment_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_code", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_date": {"name": "column__kiotviet__payment_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_date", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_id": {"name": "column__kiotviet__payment_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_id", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_method": {"name": "column__kiotviet__payment_method", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_method", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_status": {"name": "column__kiotviet__payment_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_status", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__price": {"name": "column__kiotviet__price", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__price", "block_contents": "Gi\u00e1 s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__kiotviet__product_code": {"name": "column__kiotviet__product_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__product_code", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__product_id": {"name": "column__kiotviet__product_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__product_id", "block_contents": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__product_name": {"name": "column__kiotviet__product_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__product_name", "block_contents": "T\u00ean s\u1ea3n ph\u1ea9m tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__productline": {"name": "column__kiotviet__productline", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__productline", "block_contents": "D\u00f2ng h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__province": {"name": "column__kiotviet__province", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__province", "block_contents": "T\u1ec9nh/Th\u00e0nh ph\u1ed1"}, "doc.sado_analytics_services.column__kiotviet__quantity": {"name": "column__kiotviet__quantity", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__quantity", "block_contents": "S\u1ed1 l\u01b0\u1ee3ng"}, "doc.sado_analytics_services.column__kiotviet__recency": {"name": "column__kiotviet__recency", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__recency", "block_contents": "S\u1ed1 ng\u00e0y t\u1eeb ng\u00e0y mua h\u00e0ng g\u1ea7n nh\u1ea5t"}, "doc.sado_analytics_services.column__kiotviet__reference_transaction_id": {"name": "column__kiotviet__reference_transaction_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__reference_transaction_id", "block_contents": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)"}, "doc.sado_analytics_services.column__kiotviet__return_fee": {"name": "column__kiotviet__return_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__return_fee", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__rewardpoint": {"name": "column__kiotviet__rewardpoint", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__rewardpoint", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__salechannel_id": {"name": "column__kiotviet__salechannel_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__salechannel_id", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__sub_productline": {"name": "column__kiotviet__sub_productline", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__sub_productline", "block_contents": "Nh\u00e1nh d\u00f2ng h\u00e0ng, level d\u01b0\u1edbi d\u00f2ng h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__subtotal": {"name": "column__kiotviet__subtotal", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__subtotal", "block_contents": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__supplier_code": {"name": "column__kiotviet__supplier_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__supplier_code", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__supplier_id": {"name": "column__kiotviet__supplier_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__supplier_id", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__supplier_name": {"name": "column__kiotviet__supplier_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__supplier_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__total_invoiced": {"name": "column__kiotviet__total_invoiced", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__total_invoiced", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__total_payment": {"name": "column__kiotviet__total_payment", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__total_payment", "block_contents": "S\u1ed1 ti\u1ec1n \u0111\u00e3 thanh to\u00e1n"}, "doc.sado_analytics_services.column__kiotviet__total_point": {"name": "column__kiotviet__total_point", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__total_point", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__total": {"name": "column__kiotviet__total", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__total", "block_contents": "T\u1ed5ng gi\u00e1 tr\u1ecb sau gi\u1ea3m"}, "doc.sado_analytics_services.column__kiotviet__trademark_name": {"name": "column__kiotviet__trademark_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__trademark_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__transaction_code": {"name": "column__kiotviet__transaction_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__transaction_code", "block_contents": "M\u00e3 giao d\u1ecbch"}, "doc.sado_analytics_services.column__kiotviet__transaction_date": {"name": "column__kiotviet__transaction_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__transaction_date", "block_contents": "ng\u00e0y giao d\u1ecbch"}, "doc.sado_analytics_services.column__kiotviet__transaction_id": {"name": "column__kiotviet__transaction_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__transaction_id", "block_contents": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot"}, "doc.sado_analytics_services.column__kiotviet__transaction_status": {"name": "column__kiotviet__transaction_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__transaction_status", "block_contents": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'"}, "doc.sado_analytics_services.column__kiotviet__type": {"name": "column__kiotviet__type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__type", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__user_id": {"name": "column__kiotviet__user_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__user_id", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__user_name": {"name": "column__kiotviet__user_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__user_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__ward_name": {"name": "column__kiotviet__ward_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__ward_name", "block_contents": "Ph\u01b0\u1eddng/x\u00e3"}, "doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {"metric.sado_analytics_services.income_payment": {"name": "income_payment", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_payments.yml", "original_file_path": "models/marts/sales/semantic__revenue_payments.yml", "unique_id": "metric.sado_analytics_services.income_payment", "fqn": ["sado_analytics_services", "marts", "sales", "income_payment"], "description": "", "label": "Total payment for invoice", "type": "simple", "type_params": {"measure": {"name": "payment_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "payment_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_payment__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_payments"]}, "refs": [], "metrics": [], "created_at": 1703652761.6430628, "group": null}, "metric.sado_analytics_services.return_payment": {"name": "return_payment", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_payments.yml", "original_file_path": "models/marts/sales/semantic__revenue_payments.yml", "unique_id": "metric.sado_analytics_services.return_payment", "fqn": ["sado_analytics_services", "marts", "sales", "return_payment"], "description": "", "label": "Total payment for return", "type": "simple", "type_params": {"measure": {"name": "payment_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "payment_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_payment__transaction_type')}} = 'return'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_payments"]}, "refs": [], "metrics": [], "created_at": 1703652761.6445134, "group": null}, "metric.sado_analytics_services.num_income_payment": {"name": "num_income_payment", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_payments.yml", "original_file_path": "models/marts/sales/semantic__revenue_payments.yml", "unique_id": "metric.sado_analytics_services.num_income_payment", "fqn": ["sado_analytics_services", "marts", "sales", "num_income_payment"], "description": "", "label": "Number payments for invoice", "type": "simple", "type_params": {"measure": {"name": "num_payments", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "num_payments", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_payment__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_payments"]}, "refs": [], "metrics": [], "created_at": 1703652761.6462793, "group": null}, "metric.sado_analytics_services.num_return_payment": {"name": "num_return_payment", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_payments.yml", "original_file_path": "models/marts/sales/semantic__revenue_payments.yml", "unique_id": "metric.sado_analytics_services.num_return_payment", "fqn": ["sado_analytics_services", "marts", "sales", "num_return_payment"], "description": "", "label": "Number payments for return", "type": "simple", "type_params": {"measure": {"name": "num_payments", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "num_payments", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_payment__transaction_type')}} = 'return'"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_payments"]}, "refs": [], "metrics": [], "created_at": 1703652761.647767, "group": null}, "metric.sado_analytics_services.gross_revenue": {"name": "gross_revenue", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.gross_revenue", "fqn": ["sado_analytics_services", "marts", "sales", "gross_revenue"], "description": "", "label": "Gross Revenue", "type": "simple", "type_params": {"measure": {"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1703652761.6676712, "group": null}, "metric.sado_analytics_services.invoice_value": {"name": "invoice_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.invoice_value", "fqn": ["sado_analytics_services", "marts", "sales", "invoice_value"], "description": "", "label": "Value Sold", "type": "simple", "type_params": {"measure": {"name": "total_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "total_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1703652761.6696513, "group": null}, "metric.sado_analytics_services.invoice_count": {"name": "invoice_count", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.invoice_count", "fqn": ["sado_analytics_services", "marts", "sales", "invoice_count"], "description": "", "label": "No of Invoice", "type": "simple", "type_params": {"measure": {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1703652761.6715138, "group": null}, "metric.sado_analytics_services.return_count": {"name": "return_count", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.return_count", "fqn": ["sado_analytics_services", "marts", "sales", "return_count"], "description": "", "label": "No of Return", "type": "simple", "type_params": {"measure": {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'return'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1703652761.672996, "group": null}, "metric.sado_analytics_services.invoice_paid_value": {"name": "invoice_paid_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.invoice_paid_value", "fqn": ["sado_analytics_services", "marts", "sales", "invoice_paid_value"], "description": "", "label": "Paid Value", "type": "simple", "type_params": {"measure": {"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1703652761.6744492, "group": null}, "metric.sado_analytics_services.returned_value": {"name": "returned_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.returned_value", "fqn": ["sado_analytics_services", "marts", "sales", "returned_value"], "description": "", "label": "Returned Value", "type": "simple", "type_params": {"measure": {"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'return'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1703652761.67593, "group": null}, "metric.sado_analytics_services.order_discounted_value": {"name": "order_discounted_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.order_discounted_value", "fqn": ["sado_analytics_services", "marts", "sales", "order_discounted_value"], "description": "", "label": "Order Discounted Value", "type": "simple", "type_params": {"measure": {"name": "order_discount", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "order_discount", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1703652761.6773925, "group": null}, "metric.sado_analytics_services.aov": {"name": "aov", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.aov", "fqn": ["sado_analytics_services", "marts", "sales", "aov"], "description": "", "label": "AOV", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "total_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "invoice_value/invoice_count", "window": null, "grain_to_date": null, "metrics": [{"name": "invoice_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "invoice_count", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.invoice_value", "metric.sado_analytics_services.invoice_count"]}, "refs": [], "metrics": [], "created_at": 1703652761.6800494, "group": null}, "metric.sado_analytics_services.pending_invoice": {"name": "pending_invoice", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.pending_invoice", "fqn": ["sado_analytics_services", "marts", "sales", "pending_invoice"], "description": "", "label": "Pending Income Value", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "total_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "invoice_value - invoice_paid_value", "window": null, "grain_to_date": null, "metrics": [{"name": "invoice_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "invoice_paid_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.invoice_value", "metric.sado_analytics_services.invoice_paid_value"]}, "refs": [], "metrics": [], "created_at": 1703652761.681959, "group": null}, "metric.sado_analytics_services.pct_returned": {"name": "pct_returned", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.pct_returned", "fqn": ["sado_analytics_services", "marts", "sales", "pct_returned"], "description": "", "label": "Returned Percentage", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "return/invoice", "window": null, "grain_to_date": null, "metrics": [{"name": "return_count", "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'return'\n"}, "alias": "return", "offset_window": null, "offset_to_grain": null}, {"name": "invoice_count", "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "alias": "invoice", "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.return_count", "metric.sado_analytics_services.invoice_count"]}, "refs": [], "metrics": [], "created_at": 1703652761.6848104, "group": null}, "metric.sado_analytics_services.num_customers_rfm": {"name": "num_customers_rfm", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.num_customers_rfm", "fqn": ["sado_analytics_services", "marts", "sales", "num_customers_rfm"], "description": "", "label": "No. Customers Segmented", "type": "simple", "type_params": {"measure": {"name": "num_customers", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "num_customers", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1703652761.6909964, "group": null}, "metric.sado_analytics_services.avg_monetary_value": {"name": "avg_monetary_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.avg_monetary_value", "fqn": ["sado_analytics_services", "marts", "sales", "avg_monetary_value"], "description": "", "label": "Avg Monetary Value", "type": "simple", "type_params": {"measure": {"name": "avg_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "avg_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1703652761.69237, "group": null}, "metric.sado_analytics_services.med_monetary_value": {"name": "med_monetary_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.med_monetary_value", "fqn": ["sado_analytics_services", "marts", "sales", "med_monetary_value"], "description": "", "label": "Median Monetary Value", "type": "simple", "type_params": {"measure": {"name": "median_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "median_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1703652761.694101, "group": null}, "metric.sado_analytics_services.total_monetary_value": {"name": "total_monetary_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.total_monetary_value", "fqn": ["sado_analytics_services", "marts", "sales", "total_monetary_value"], "description": "", "label": "Total Monetary Value", "type": "simple", "type_params": {"measure": {"name": "total_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "total_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1703652761.6954296, "group": null}, "metric.sado_analytics_services.avg_recency": {"name": "avg_recency", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.avg_recency", "fqn": ["sado_analytics_services", "marts", "sales", "avg_recency"], "description": "", "label": "Avg Recency", "type": "simple", "type_params": {"measure": {"name": "avg_recency", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "avg_recency", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1703652761.6967967, "group": null}, "metric.sado_analytics_services.median_recency": {"name": "median_recency", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.median_recency", "fqn": ["sado_analytics_services", "marts", "sales", "median_recency"], "description": "", "label": "Median Recency", "type": "simple", "type_params": {"measure": {"name": "median_recency", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "median_recency", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1703652761.698134, "group": null}, "metric.sado_analytics_services.avg_freq": {"name": "avg_freq", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.avg_freq", "fqn": ["sado_analytics_services", "marts", "sales", "avg_freq"], "description": "", "label": "Avg Purchasing Frequency", "type": "simple", "type_params": {"measure": {"name": "avg_freq", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "avg_freq", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1703652761.6994648, "group": null}, "metric.sado_analytics_services.median_freq": {"name": "median_freq", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.median_freq", "fqn": ["sado_analytics_services", "marts", "sales", "median_freq"], "description": "", "label": "Median Purchasing Frequency", "type": "simple", "type_params": {"measure": {"name": "median_freq", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "median_freq", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1703652761.7009716, "group": null}, "metric.sado_analytics_services.qty_sold": {"name": "qty_sold", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.qty_sold", "fqn": ["sado_analytics_services", "marts", "sales", "qty_sold"], "description": "", "label": "Quantity Sold", "type": "simple", "type_params": {"measure": {"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_item__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_items"]}, "refs": [], "metrics": [], "created_at": 1703652761.718854, "group": null}, "metric.sado_analytics_services.qty_returned": {"name": "qty_returned", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.qty_returned", "fqn": ["sado_analytics_services", "marts", "sales", "qty_returned"], "description": "", "label": "Quantity Returned", "type": "simple", "type_params": {"measure": {"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_item__transaction_type')}} = 'return'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_items"]}, "refs": [], "metrics": [], "created_at": 1703652761.7202652, "group": null}, "metric.sado_analytics_services.item_discounted_value": {"name": "item_discounted_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.item_discounted_value", "fqn": ["sado_analytics_services", "marts", "sales", "item_discounted_value"], "description": "", "label": "Item Discounted Value", "type": "simple", "type_params": {"measure": {"name": "discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_item__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_items"]}, "refs": [], "metrics": [], "created_at": 1703652761.7222862, "group": null}, "metric.sado_analytics_services.item_sold_value": {"name": "item_sold_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.item_sold_value", "fqn": ["sado_analytics_services", "marts", "sales", "item_sold_value"], "description": "", "label": "Item Sold Value", "type": "simple", "type_params": {"measure": {"name": "item_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "item_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_item__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_items"]}, "refs": [], "metrics": [], "created_at": 1703652761.724072, "group": null}, "metric.sado_analytics_services.avg_discount_ratio": {"name": "avg_discount_ratio", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.avg_discount_ratio", "fqn": ["sado_analytics_services", "marts", "sales", "avg_discount_ratio"], "description": "", "label": "Average Discount Ratio", "type": "ratio", "type_params": {"measure": null, "input_measures": [{"name": "discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "item_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": {"name": "item_discounted_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, "denominator": {"name": "item_sold_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.item_discounted_value", "metric.sado_analytics_services.item_sold_value"]}, "refs": [], "metrics": [], "created_at": 1703652761.7259018, "group": null}, "metric.sado_analytics_services.items_per_transaction": {"name": "items_per_transaction", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.items_per_transaction", "fqn": ["sado_analytics_services", "marts", "sales", "items_per_transaction"], "description": "", "label": "Items per Transaction", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "qty_sold/invoice_count", "window": null, "grain_to_date": null, "metrics": [{"name": "qty_sold", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "invoice_count", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.qty_sold", "metric.sado_analytics_services.invoice_count"]}, "refs": [], "metrics": [], "created_at": 1703652761.7278452, "group": null}, "metric.sado_analytics_services.fb_spend": {"name": "fb_spend", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_spend", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_spend"], "description": "", "label": "FB Ads Spend", "type": "simple", "type_params": {"measure": {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.934292, "group": null}, "metric.sado_analytics_services.fb_impresions": {"name": "fb_impresions", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_impresions", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_impresions"], "description": "", "label": "FB Ads Impressions", "type": "simple", "type_params": {"measure": {"name": "impressions", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "impressions", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9356787, "group": null}, "metric.sado_analytics_services.fb_clicks": {"name": "fb_clicks", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_clicks", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_clicks"], "description": "", "label": "FB Ads Clicks", "type": "simple", "type_params": {"measure": {"name": "clicks", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "clicks", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9373033, "group": null}, "metric.sado_analytics_services.fb_reach": {"name": "fb_reach", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_reach", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_reach"], "description": "", "label": "FB Ads Reach", "type": "simple", "type_params": {"measure": {"name": "reach", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "reach", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9386542, "group": null}, "metric.sado_analytics_services.fb_link_clicks": {"name": "fb_link_clicks", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_link_clicks", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_link_clicks"], "description": "", "label": "FB Ads Link Clicks", "type": "simple", "type_params": {"measure": {"name": "link_click", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "link_click", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9400158, "group": null}, "metric.sado_analytics_services.fb_post_engagement": {"name": "fb_post_engagement", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_post_engagement", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_post_engagement"], "description": "", "label": "FB Ads Post Engagment", "type": "simple", "type_params": {"measure": {"name": "post_engagement", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "post_engagement", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.941369, "group": null}, "metric.sado_analytics_services.fb_offline_conversion": {"name": "fb_offline_conversion", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_offline_conversion", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_offline_conversion"], "description": "", "label": "FB Ads Offline Conversions", "type": "simple", "type_params": {"measure": {"name": "offline_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "offline_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9431107, "group": null}, "metric.sado_analytics_services.fb_offline_conversion_value": {"name": "fb_offline_conversion_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_offline_conversion_value", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_offline_conversion_value"], "description": "", "label": "FB Ads Offline Conversions Value", "type": "simple", "type_params": {"measure": {"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9448998, "group": null}, "metric.sado_analytics_services.fb_online_conversion": {"name": "fb_online_conversion", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_online_conversion", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_online_conversion"], "description": "", "label": "FB Ads Online Conversion", "type": "simple", "type_params": {"measure": {"name": "online_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "online_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9467473, "group": null}, "metric.sado_analytics_services.fb_online_conversion_value": {"name": "fb_online_conversion_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_online_conversion_value", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_online_conversion_value"], "description": "", "label": "FB Ads Online Conversion Value", "type": "simple", "type_params": {"measure": {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9487603, "group": null}, "metric.sado_analytics_services.fb_meta_conversion": {"name": "fb_meta_conversion", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_meta_conversion", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_meta_conversion"], "description": "", "label": "FB Ads Onsite Conversion", "type": "simple", "type_params": {"measure": {"name": "meta_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "meta_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9505193, "group": null}, "metric.sado_analytics_services.fb_meta_conversion_value": {"name": "fb_meta_conversion_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_meta_conversion_value", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_meta_conversion_value"], "description": "", "label": "FB Ads Onsite Conversion Value", "type": "simple", "type_params": {"measure": {"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.952401, "group": null}, "metric.sado_analytics_services.fb_messages": {"name": "fb_messages", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_messages", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_messages"], "description": "", "label": "FB Ads Messages", "type": "simple", "type_params": {"measure": {"name": "messages", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "messages", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.954158, "group": null}, "metric.sado_analytics_services.roas": {"name": "roas", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.roas", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "roas"], "description": "", "label": "FB ROAS", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(fb_offline_conversion_value + fb_online_conversion_value + fb_meta_conversion_value)/fb_spend", "window": null, "grain_to_date": null, "metrics": [{"name": "fb_offline_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_online_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_meta_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_spend", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.fb_offline_conversion_value", "metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_spend"]}, "refs": [], "metrics": [], "created_at": 1703652761.9563446, "group": null}, "metric.sado_analytics_services.online_roas": {"name": "online_roas", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.online_roas", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "online_roas"], "description": "", "label": "FB Online ROAS", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(fb_online_conversion_value + fb_meta_conversion_value)/fb_spend", "window": null, "grain_to_date": null, "metrics": [{"name": "fb_online_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_meta_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_spend", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_spend"]}, "refs": [], "metrics": [], "created_at": 1703652761.9585042, "group": null}, "metric.sado_analytics_services.spend_7d": {"name": "spend_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.spend_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "spend_7d"], "description": "", "label": "FB spend 7d", "type": "cumulative", "type_params": {"measure": {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.960702, "group": null}, "metric.sado_analytics_services.offline_cv_7d": {"name": "offline_cv_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.offline_cv_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "offline_cv_7d"], "description": "", "label": "Offline CV 7d", "type": "cumulative", "type_params": {"measure": {"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9621007, "group": null}, "metric.sado_analytics_services.online_cv_7d": {"name": "online_cv_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.online_cv_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "online_cv_7d"], "description": "", "label": "Online CV 7d", "type": "cumulative", "type_params": {"measure": {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9634902, "group": null}, "metric.sado_analytics_services.meta_cv_7d": {"name": "meta_cv_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.meta_cv_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "meta_cv_7d"], "description": "", "label": "Meta CV 7d", "type": "cumulative", "type_params": {"measure": {"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1703652761.9649088, "group": null}, "metric.sado_analytics_services.roas_7d": {"name": "roas_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.roas_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "roas_7d"], "description": "", "label": "FB ROAS 7d", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(offline_cv_7d + online_cv_7d+meta_cv_7d)/spend_7d", "window": null, "grain_to_date": null, "metrics": [{"name": "offline_cv_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "online_cv_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "spend_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"]}, "refs": [], "metrics": [], "created_at": 1703652761.966909, "group": null}, "metric.sado_analytics_services.online_roas_7d": {"name": "online_roas_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.online_roas_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "online_roas_7d"], "description": "", "label": "FB ROAS 7d", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(online_cv_7d+meta_cv_7d)/spend_7d", "window": null, "grain_to_date": null, "metrics": [{"name": "offline_cv_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "online_cv_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "spend_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"]}, "refs": [], "metrics": [], "created_at": 1703652761.968691, "group": null}, "metric.sado_analytics_services.onl_dly_avg_inv_7d": {"name": "onl_dly_avg_inv_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_inventory_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_inventory_balance.yml", "unique_id": "metric.sado_analytics_services.onl_dly_avg_inv_7d", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_dly_avg_inv_7d"], "description": "", "label": "Online Daily Average Inventory 7D", "type": "cumulative", "type_params": {"measure": {"name": "onl_dly_avg_remain", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_dly_avg_remain", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_inventory_balance"]}, "refs": [], "metrics": [], "created_at": 1703652762.0277567, "group": null}, "metric.sado_analytics_services.onl_dly_avg_qty_sold_7d": {"name": "onl_dly_avg_qty_sold_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_inventory_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_inventory_balance.yml", "unique_id": "metric.sado_analytics_services.onl_dly_avg_qty_sold_7d", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_dly_avg_qty_sold_7d"], "description": "", "label": "Online QTY sold 7D", "type": "cumulative", "type_params": {"measure": {"name": "onl_dly_avg_qty_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_dly_avg_qty_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_inventory_balance"]}, "refs": [], "metrics": [], "created_at": 1703652762.0295882, "group": null}, "metric.sado_analytics_services.onl_dly_total_qty_sold_7d": {"name": "onl_dly_total_qty_sold_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_inventory_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_inventory_balance.yml", "unique_id": "metric.sado_analytics_services.onl_dly_total_qty_sold_7d", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_dly_total_qty_sold_7d"], "description": "", "label": "Online QTY sold 7D", "type": "cumulative", "type_params": {"measure": {"name": "onl_dly_total_qty_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_dly_total_qty_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_inventory_balance"]}, "refs": [], "metrics": [], "created_at": 1703652762.0310047, "group": null}, "metric.sado_analytics_services.onl_inv_dio_7d": {"name": "onl_inv_dio_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_inventory_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_inventory_balance.yml", "unique_id": "metric.sado_analytics_services.onl_inv_dio_7d", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_inv_dio_7d"], "description": "", "label": "Online DIO", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "onl_dly_avg_remain", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "onl_dly_total_qty_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(remain/total_sales)*7", "window": null, "grain_to_date": null, "metrics": [{"name": "onl_dly_avg_inv_7d", "filter": null, "alias": "remain", "offset_window": null, "offset_to_grain": null}, {"name": "onl_dly_total_qty_sold_7d", "filter": null, "alias": "total_sales", "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.onl_dly_avg_inv_7d", "metric.sado_analytics_services.onl_dly_total_qty_sold_7d"]}, "refs": [], "metrics": [], "created_at": 1703652762.0334277, "group": null}, "metric.sado_analytics_services.onl_inv_turnover": {"name": "onl_inv_turnover", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_inventory_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_inventory_balance.yml", "unique_id": "metric.sado_analytics_services.onl_inv_turnover", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_inv_turnover"], "description": "", "label": "Online Inventory Turnover", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "onl_dly_total_qty_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "onl_dly_avg_remain", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(qty_sold/remain)", "window": null, "grain_to_date": null, "metrics": [{"name": "onl_dly_total_qty_sold_7d", "filter": null, "alias": "qty_sold", "offset_window": null, "offset_to_grain": null}, {"name": "onl_dly_avg_inv_7d", "filter": null, "alias": "remain", "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.onl_dly_total_qty_sold_7d", "metric.sado_analytics_services.onl_dly_avg_inv_7d"]}, "refs": [], "metrics": [], "created_at": 1703652762.0355983, "group": null}, "metric.sado_analytics_services.onl_qty_sold": {"name": "onl_qty_sold", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_qty_sold", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_qty_sold"], "description": "", "label": "Online Qty Sold", "type": "simple", "type_params": {"measure": {"name": "onl_items_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_items_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Giao h\u00e0ng t\u1eadn nh\u00e0'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.0430512, "group": null}, "metric.sado_analytics_services.onl_qty_sold_7d": {"name": "onl_qty_sold_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_qty_sold_7d", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_qty_sold_7d"], "description": "", "label": "Online Qty Sold", "type": "cumulative", "type_params": {"measure": {"name": "onl_items_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_items_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Giao h\u00e0ng t\u1eadn nh\u00e0'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.0441048, "group": null}, "metric.sado_analytics_services.onl_qty_returned": {"name": "onl_qty_returned", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_qty_returned", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_qty_returned"], "description": "", "label": "Online Qty Returned", "type": "simple", "type_params": {"measure": {"name": "onl_items_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_items_sold", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.0454812, "group": null}, "metric.sado_analytics_services.onl_purchase_item_value": {"name": "onl_purchase_item_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_purchase_item_value", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_purchase_item_value"], "description": "", "label": "Online Purchase Items Value", "type": "simple", "type_params": {"measure": {"name": "onl_items_sold_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_items_sold_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Giao h\u00e0ng t\u1eadn nh\u00e0'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.0474458, "group": null}, "metric.sado_analytics_services.onl_return_item_value": {"name": "onl_return_item_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_return_item_value", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_return_item_value"], "description": "", "label": "Online Retuned Items Value", "type": "simple", "type_params": {"measure": {"name": "onl_items_sold_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_items_sold_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.048862, "group": null}, "metric.sado_analytics_services.onl_value_sold": {"name": "onl_value_sold", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_value_sold", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_value_sold"], "description": "", "label": "Online Value Sold", "type": "simple", "type_params": {"measure": {"name": "onl_items_sold_gross", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_items_sold_gross", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Giao h\u00e0ng t\u1eadn nh\u00e0'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.0506363, "group": null}, "metric.sado_analytics_services.onl_value_returned": {"name": "onl_value_returned", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_value_returned", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_value_returned"], "description": "", "label": "Online Value Returned", "type": "simple", "type_params": {"measure": {"name": "onl_items_sold_gross", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_items_sold_gross", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.0520399, "group": null}, "metric.sado_analytics_services.onl_item_dcnt_value": {"name": "onl_item_dcnt_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_item_dcnt_value", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_item_dcnt_value"], "description": "", "label": "Online Items Discount Value", "type": "simple", "type_params": {"measure": {"name": "onl_items_discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_items_discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Giao h\u00e0ng t\u1eadn nh\u00e0'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.053805, "group": null}, "metric.sado_analytics_services.onl_item_dcnt_pct": {"name": "onl_item_dcnt_pct", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_item_dcnt_pct", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_item_dcnt_pct"], "description": "", "label": "Online Items Discount Percentage", "type": "ratio", "type_params": {"measure": null, "input_measures": [{"name": "onl_items_discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "onl_items_sold_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": {"name": "onl_item_dcnt_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, "denominator": {"name": "onl_purchase_item_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.onl_item_dcnt_value", "metric.sado_analytics_services.onl_purchase_item_value"]}, "refs": [], "metrics": [], "created_at": 1703652762.0552392, "group": null}, "metric.sado_analytics_services.onl_total_dcnt_value": {"name": "onl_total_dcnt_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_total_dcnt_value", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_total_dcnt_value"], "description": "", "label": "Online Total Discount Value", "type": "simple", "type_params": {"measure": {"name": "onl_order_discount_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_order_discount_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Giao h\u00e0ng t\u1eadn nh\u00e0'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.057208, "group": null}, "metric.sado_analytics_services.onl_order_dct_value": {"name": "onl_order_dct_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_order_dct_value", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_order_dct_value"], "description": "", "label": "Online on Order-value Discount", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "onl_order_discount_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "onl_items_discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "onl_total_dcnt_value - onl_item_dcnt_value", "window": null, "grain_to_date": null, "metrics": [{"name": "onl_total_dcnt_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "onl_item_dcnt_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.onl_total_dcnt_value", "metric.sado_analytics_services.onl_item_dcnt_value"]}, "refs": [], "metrics": [], "created_at": 1703652762.0591283, "group": null}, "metric.sado_analytics_services.onl_purchase_count": {"name": "onl_purchase_count", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_purchase_count", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_purchase_count"], "description": "", "label": "Online Purchase Count", "type": "simple", "type_params": {"measure": {"name": "onl_order_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_order_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Giao h\u00e0ng t\u1eadn nh\u00e0'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.0609317, "group": null}, "metric.sado_analytics_services.onl_return_count": {"name": "onl_return_count", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_return_count", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_return_count"], "description": "", "label": "Online Return Count", "type": "simple", "type_params": {"measure": {"name": "onl_order_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_order_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.0623062, "group": null}, "metric.sado_analytics_services.onl_total_fulfillment_time": {"name": "onl_total_fulfillment_time", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_total_fulfillment_time", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_total_fulfillment_time"], "description": "", "label": "Online Total Fulfillment Time", "type": "simple", "type_params": {"measure": {"name": "onl_fulfillment_time", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "onl_fulfillment_time", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('order_item__type')}} = 'Giao h\u00e0ng t\u1eadn nh\u00e0'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_orders_items"]}, "refs": [], "metrics": [], "created_at": 1703652762.0640934, "group": null}, "metric.sado_analytics_services.onl_avg_fulfillment_time": {"name": "onl_avg_fulfillment_time", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_avg_fulfillment_time", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_avg_fulfillment_time"], "description": "", "label": "Online Fulfillment Time", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "onl_fulfillment_time", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "onl_order_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "onl_total_fulfillment_time/onl_purchase_count", "window": null, "grain_to_date": null, "metrics": [{"name": "onl_total_fulfillment_time", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "onl_purchase_count", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.onl_total_fulfillment_time", "metric.sado_analytics_services.onl_purchase_count"]}, "refs": [], "metrics": [], "created_at": 1703652762.0660653, "group": null}, "metric.sado_analytics_services.onl_return_rate": {"name": "onl_return_rate", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "metric.sado_analytics_services.onl_return_rate", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_return_rate"], "description": "", "label": "Online Return Rate", "type": "ratio", "type_params": {"measure": null, "input_measures": [{"name": "onl_order_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "onl_order_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": {"name": "onl_return_count", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, "denominator": {"name": "onl_purchase_count", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.onl_return_count", "metric.sado_analytics_services.onl_purchase_count"]}, "refs": [], "metrics": [], "created_at": 1703652762.0676546, "group": null}, "metric.sado_analytics_services.onl_balance_value": {"name": "onl_balance_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_balance.yml", "unique_id": "metric.sado_analytics_services.onl_balance_value", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_balance_value"], "description": "", "label": "Online Balance Value", "type": "simple", "type_params": {"measure": {"name": "value_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "value_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_balance"]}, "refs": [], "metrics": [], "created_at": 1703652762.0966697, "group": null}, "metric.sado_analytics_services.onl_value_in": {"name": "onl_value_in", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_balance.yml", "unique_id": "metric.sado_analytics_services.onl_value_in", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_value_in"], "description": "", "label": "Online Value In", "type": "simple", "type_params": {"measure": {"name": "value_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "value_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('bills__type')}} = 'Nh\u1eadp kho'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_balance"]}, "refs": [], "metrics": [], "created_at": 1703652762.0980618, "group": null}, "metric.sado_analytics_services.onl_value_out": {"name": "onl_value_out", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_balance.yml", "unique_id": "metric.sado_analytics_services.onl_value_out", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_value_out"], "description": "", "label": "Online Value Out", "type": "simple", "type_params": {"measure": {"name": "value_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "value_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('bills__type')}} = 'Xu\u1ea5t kho'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_balance"]}, "refs": [], "metrics": [], "created_at": 1703652762.099433, "group": null}, "metric.sado_analytics_services.onl_balance_qty": {"name": "onl_balance_qty", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_balance.yml", "unique_id": "metric.sado_analytics_services.onl_balance_qty", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_balance_qty"], "description": "", "label": "Online Balance Quantity", "type": "simple", "type_params": {"measure": {"name": "qty_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "qty_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_balance"]}, "refs": [], "metrics": [], "created_at": 1703652762.1012, "group": null}, "metric.sado_analytics_services.onl_qty_in": {"name": "onl_qty_in", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_balance.yml", "unique_id": "metric.sado_analytics_services.onl_qty_in", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_qty_in"], "description": "", "label": "Online Quantity In", "type": "simple", "type_params": {"measure": {"name": "qty_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "qty_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('bills__type')}} = 'Nh\u1eadp kho'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_balance"]}, "refs": [], "metrics": [], "created_at": 1703652762.1025736, "group": null}, "metric.sado_analytics_services.onl_qty_out": {"name": "onl_qty_out", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_balance.yml", "unique_id": "metric.sado_analytics_services.onl_qty_out", "fqn": ["sado_analytics_services", "marts", "online_sales", "onl_qty_out"], "description": "", "label": "Online Quantity Out", "type": "simple", "type_params": {"measure": {"name": "qty_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "qty_in_out", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('bills__type')}} = 'Xu\u1ea5t kho'"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.online_balance"]}, "refs": [], "metrics": [], "created_at": 1703652762.1039894, "group": null}}, "groups": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.sado_analytics_services.int_analytics__events_format": ["model.sado_analytics_services.stg_analytics__events"], "model.sado_analytics_services.weather": ["source.sado_analytics_services.misc.weather"], "model.sado_analytics_services.calendar": ["model.sado_analytics_services.stg_gsheet__facebook_budget"], "model.sado_analytics_services.metricflow_time_spine": [], "model.sado_analytics_services.stg_analytics__events": ["model.sado_analytics_services.base_analytics__events"], "model.sado_analytics_services.base_analytics__events": ["source.sado_analytics_services.analytics.events"], "model.sado_analytics_services.stg_caresoft__contacts": ["model.sado_analytics_services.base_caresoft__contact_details", "model.sado_analytics_services.base_caresoft__contacts"], "model.sado_analytics_services.stg_caresoft__tickets": ["model.sado_analytics_services.base_caresoft__ticket_details", "model.sado_analytics_services.base_caresoft__tickets"], "model.sado_analytics_services.stg_caresoft__ticket_custom_fields": ["model.sado_analytics_services.base_caresoft__ticket_custom_fields"], "model.sado_analytics_services.stg_caresoft__calls": ["model.sado_analytics_services.base_caresoft__calls"], "model.sado_analytics_services.stg_caresoft__chats": ["model.sado_analytics_services.base_caresoft__chats"], "model.sado_analytics_services.stg_caresoft__agents": ["model.sado_analytics_services.base_caresoft__agents"], "model.sado_analytics_services.base_caresoft__chats": ["source.sado_analytics_services.caresoft.chats_fb", "source.sado_analytics_services.caresoft.chats_live", "source.sado_analytics_services.caresoft.chats_zalo"], "model.sado_analytics_services.base_caresoft__groups": ["source.sado_analytics_services.caresoft.groups"], "model.sado_analytics_services.base_caresoft__calls": ["source.sado_analytics_services.caresoft.calls"], "model.sado_analytics_services.base_caresoft__ticket_details": ["source.sado_analytics_services.caresoft.ticket_details"], "model.sado_analytics_services.base_caresoft__contact_details": ["source.sado_analytics_services.caresoft.contact_details"], "model.sado_analytics_services.base_caresoft__tickets": ["source.sado_analytics_services.caresoft.tickets"], "model.sado_analytics_services.base_caresoft__contacts": ["source.sado_analytics_services.caresoft.contacts"], "model.sado_analytics_services.base_caresoft__ticket_custom_fields": ["source.sado_analytics_services.caresoft.ticket_custom_fields"], "model.sado_analytics_services.base_caresoft__agents": ["source.sado_analytics_services.caresoft.agents"], "model.sado_analytics_services.stg_facebookads__regioninsights": ["model.sado_analytics_services.base_facebookAds__regionInsights"], "model.sado_analytics_services.stg_facebookads__creatives": ["model.sado_analytics_services.base_facebookAds__creatives"], "model.sado_analytics_services.stg_facebookads__accountinsights": ["model.sado_analytics_services.base_facebookAds__accountInsights"], "model.sado_analytics_services.stg_facebookads__audienceinsights": ["model.sado_analytics_services.base_facebookAds__audienceInsights"], "model.sado_analytics_services.stg_facebookads__adsinsights": ["model.sado_analytics_services.base_facebookAds__adsInsights"], "model.sado_analytics_services.stg_facebookads__campaigns": ["source.sado_analytics_services.facebookAds.p_AdsInsights__*"], "model.sado_analytics_services.base_facebookAds__adsInsights": ["source.sado_analytics_services.facebookAds.p_AdsInsights__*"], "model.sado_analytics_services.base_facebookAds__audienceInsights": ["source.sado_analytics_services.facebookAds.p_AudienceInsights__*"], "model.sado_analytics_services.base_facebookAds__accountInsights": ["source.sado_analytics_services.facebookAds.p_AccountInsights__*"], "model.sado_analytics_services.base_facebookAds__creatives": ["source.sado_analytics_services.facebookAds.p_CreativesInsights__*"], "model.sado_analytics_services.base_facebookAds__regionInsights": ["source.sado_analytics_services.facebookAds.p_RegionInsights__*"], "model.sado_analytics_services.stg_googleads__campaign_conversion_stats": ["source.sado_analytics_services.googleads.campaign_conversion_stats"], "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats": ["source.sado_analytics_services.googleads.ad_group_cross_device_stats"], "model.sado_analytics_services.stg_googleads__keyword_stats": ["source.sado_analytics_services.googleads.keyword", "source.sado_analytics_services.googleads.keyword_basic_stats"], "model.sado_analytics_services.stg_googleads__search_query_stats": ["source.sado_analytics_services.googleads.search_query_stats"], "model.sado_analytics_services.stg_googleads__ad_group_stats": ["source.sado_analytics_services.googleads.ad_group_basic_stats"], "model.sado_analytics_services.stg_googleads__shopping_product_stats": ["source.sado_analytics_services.googleads.shopping_product_stats"], "model.sado_analytics_services.stg_googleads__campaign_stats": ["source.sado_analytics_services.googleads.campaign_basic_stats"], "model.sado_analytics_services.stg_googleads__campaigns": ["model.sado_analytics_services.base_googleAds__accounts", "model.sado_analytics_services.base_googleAds__campaigns"], "model.sado_analytics_services.stg_googleads__ad_groups": ["model.sado_analytics_services.base_googleAds__adgroups"], "model.sado_analytics_services.base_googleAds__campaigns": ["source.sado_analytics_services.googleads.campaign"], "model.sado_analytics_services.base_googleAds__accounts": ["source.sado_analytics_services.googleads.customer"], "model.sado_analytics_services.base_googleAds__criterions": ["source.sado_analytics_services.googleads.ad_group_criterion"], "model.sado_analytics_services.base_googleAds__adgroups": ["source.sado_analytics_services.googleads.ad_group"], "model.sado_analytics_services.stg_nhanhvn__depots": ["model.sado_analytics_services.base_nhanhvn__stores"], "model.sado_analytics_services.stg_nhanhvn__carriers": ["model.sado_analytics_services.base_nhanhvn__carriers"], "model.sado_analytics_services.stg_nhanhvn__users": ["model.sado_analytics_services.base_nhanhvn__users"], "model.sado_analytics_services.stg_nhanhvn__bills": ["model.sado_analytics_services.base_nhanhvn__bills"], "model.sado_analytics_services.stg_nhanhvn__ordersdetails": ["model.sado_analytics_services.base_nhanhvn__orders"], "model.sado_analytics_services.stg_nhanhvn__inventories": ["model.sado_analytics_services.base_nhanhvn__inventories", "model.sado_analytics_services.stg_nhanhvn__depots"], "model.sado_analytics_services.stg_nhanhvn__customers": ["model.sado_analytics_services.base_nhanhvn__customers"], "model.sado_analytics_services.stg_nhanhvn__products": ["model.sado_analytics_services.base_nhanhvn__categories", "model.sado_analytics_services.base_nhanhvn__products"], "model.sado_analytics_services.stg_nhanhvn__categories": ["model.sado_analytics_services.base_nhanhvn__categories"], "model.sado_analytics_services.base_nhanhvn__inventories": ["source.sado_analytics_services.nhanhvn.p_inventory_*", "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange"], "model.sado_analytics_services.base_nhanhvn__orders": ["model.sado_analytics_services.stg_gsheet__nhanhvnsalechannels", "source.sado_analytics_services.nhanhvn.p_orders_*"], "model.sado_analytics_services.base_nhanhvn__customers": ["source.sado_analytics_services.nhanhvn.p_customers_*"], "model.sado_analytics_services.base_nhanhvn__products": ["source.sado_analytics_services.nhanhvn.p_products_*"], "model.sado_analytics_services.base_nhanhvn__users": ["source.sado_analytics_services.nhanhvn.p_users_*"], "model.sado_analytics_services.base_nhanhvn__stores": ["source.sado_analytics_services.nhanhvn.p_stores_*"], "model.sado_analytics_services.base_nhanhvn__bills": ["source.sado_analytics_services.nhanhvn.p_bills_*"], "model.sado_analytics_services.base_nhanhvn__carriers": ["source.sado_analytics_services.nhanhvn.p_carriers_*"], "model.sado_analytics_services.base_nhanhvn__categories": ["source.sado_analytics_services.nhanhvn.p_categories_*"], "model.sado_analytics_services.stg_esms__sent_data": ["source.sado_analytics_services.esms.sms_sent_data"], "model.sado_analytics_services.stg_kiotviet__invoicepayments": ["model.sado_analytics_services.base_kiotViet__invoices"], "model.sado_analytics_services.stg_kiotviet__invoicedetails": ["model.sado_analytics_services.base_kiotViet__invoices"], "model.sado_analytics_services.stg_kiotviet__locations": ["model.sado_analytics_services.base_kiotViet__locations"], "model.sado_analytics_services.stg_kiotviet__users": ["model.sado_analytics_services.base_kiotViet__users"], "model.sado_analytics_services.stg_kiotviet__branches": ["model.sado_analytics_services.base_kiotViet__branches", "model.sado_analytics_services.stg_gsheet__regions"], "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "model.sado_analytics_services.stg_kiotviet__categories": ["model.sado_analytics_services.base_kiotViet__categories"], "model.sado_analytics_services.stg_kiotviet__invoices": ["model.sado_analytics_services.base_kiotViet__invoices"], "model.sado_analytics_services.stg_kiotviet__returnpayments": ["model.sado_analytics_services.base_kiotViet__returns"], "model.sado_analytics_services.stg_kiotviet__customers": ["model.sado_analytics_services.base_kiotViet__branches", "model.sado_analytics_services.base_kiotViet__customers"], "model.sado_analytics_services.stg_kiotviet__returns": ["model.sado_analytics_services.base_kiotViet__returns"], "model.sado_analytics_services.stg_kiotviet__products": ["model.sado_analytics_services.base_kiotViet__products", "model.sado_analytics_services.stg_kiotviet__categories"], "model.sado_analytics_services.stg_kiotviet__returndetails": ["model.sado_analytics_services.base_kiotViet__returns"], "model.sado_analytics_services.stg_kiotviet__suppliers": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "model.sado_analytics_services.stg_kiotviet__bankaccounts": ["model.sado_analytics_services.base_kiotViet__bankAccounts"], "model.sado_analytics_services.stg_kiotviet__purchaseorders": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "model.sado_analytics_services.base_kiotViet__invoices": ["source.sado_analytics_services.kiotViet.p_invoices_list2_*", "source.sado_analytics_services.kiotViet.p_invoices_list_*", "source.sado_analytics_services.kiotViet.p_webhook_invoice_update"], "model.sado_analytics_services.base_kiotViet__customers": ["source.sado_analytics_services.kiotViet.p_customers_list_*", "source.sado_analytics_services.kiotViet.p_webhook_customer_update"], "model.sado_analytics_services.base_kiotViet__priceBooks": [], "model.sado_analytics_services.base_kiotViet__locations": ["source.sado_analytics_services.kiotViet.p_locations_list_*"], "model.sado_analytics_services.base_kiotViet__branches": ["source.sado_analytics_services.kiotViet.p_branches_list_*"], "model.sado_analytics_services.base_kiotViet__purchaseOrders": ["source.sado_analytics_services.kiotViet.p_purchaseorders_list2_*", "source.sado_analytics_services.kiotViet.p_purchaseorders_list_*"], "model.sado_analytics_services.base_kiotViet__bankAccounts": ["source.sado_analytics_services.kiotViet.p_bankAccounts_list_*"], "model.sado_analytics_services.base_kiotViet__products": ["source.sado_analytics_services.kiotViet.p_products_list_*"], "model.sado_analytics_services.base_kiotViet__users": ["source.sado_analytics_services.kiotViet.p_users_list_*"], "model.sado_analytics_services.base_kiotViet__categories": ["source.sado_analytics_services.kiotViet.p_categories_list_*"], "model.sado_analytics_services.base_kiotViet__returns": ["source.sado_analytics_services.kiotViet.p_returns_list2_*", "source.sado_analytics_services.kiotViet.p_returns_list_*"], "model.sado_analytics_services.stg_pancake__tags": ["model.sado_analytics_services.stg_gsheet__pancake_tags", "source.sado_analytics_services.pancake.tags"], "model.sado_analytics_services.stg_pancake__user_stats": ["source.sado_analytics_services.pancake.user_stats"], "model.sado_analytics_services.stg_pancake__pages": ["source.sado_analytics_services.pancake.pages"], "model.sado_analytics_services.stg_pancake__users": ["source.sado_analytics_services.pancake.users"], "model.sado_analytics_services.stg_pancake__orders": ["source.sado_analytics_services.pancake.pos_orders"], "model.sado_analytics_services.stg_pancake__posts": ["model.sado_analytics_services.base_pancake__posts"], "model.sado_analytics_services.stg_pancake__conversations": ["model.sado_analytics_services.base_pancake__conversations"], "model.sado_analytics_services.stg_pancake__customer_engagements": ["source.sado_analytics_services.pancake.customer_engagements"], "model.sado_analytics_services.stg_pancake__customers": ["model.sado_analytics_services.base_pancake__customers"], "model.sado_analytics_services.stg_pancake__page_stats": ["source.sado_analytics_services.pancake.page_stats"], "model.sado_analytics_services.base_pancake__conversations": ["source.sado_analytics_services.pancake.conversations"], "model.sado_analytics_services.base_pancake__customers": ["source.sado_analytics_services.pancake.customers"], "model.sado_analytics_services.base_pancake__posts": ["source.sado_analytics_services.pancake.posts"], "model.sado_analytics_services.stg_5sfashion__products": ["model.sado_analytics_services.base_5sfashion__products"], "model.sado_analytics_services.stg_5sfashion__categories": ["model.sado_analytics_services.base_5sfashion__categories"], "model.sado_analytics_services.base_5sfashion__product_ratings": ["source.sado_analytics_services.5sfashion.product_ratings"], "model.sado_analytics_services.base_5sfashion__provinces": ["source.sado_analytics_services.5sfashion.provinces"], "model.sado_analytics_services.base_5sfashion__product_variants": ["source.sado_analytics_services.5sfashion.product_variants"], "model.sado_analytics_services.base_5sfashion__districts": ["source.sado_analytics_services.5sfashion.districts"], "model.sado_analytics_services.base_5sfashion__wards": ["source.sado_analytics_services.5sfashion.wards"], "model.sado_analytics_services.base_5sfashion__order_items": ["source.sado_analytics_services.5sfashion.order_items"], "model.sado_analytics_services.base_5sfashion__categories": ["source.sado_analytics_services.5sfashion.categories"], "model.sado_analytics_services.base_5sfashion__products": ["source.sado_analytics_services.5sfashion.products"], "model.sado_analytics_services.base_5sfashion__orders": ["source.sado_analytics_services.5sfashion.orders"], "model.sado_analytics_services.stg_gsheet__pancake_tags": ["source.sado_analytics_services.gSheet._ext_pancake_tags"], "model.sado_analytics_services.stg_gsheet__facebook_budget": ["model.sado_analytics_services.stg_gsheet__asms", "model.sado_analytics_services.stg_kiotviet__branches", "source.sado_analytics_services.gSheet.facebook_budget"], "model.sado_analytics_services.stg_gsheet__asms": ["model.sado_analytics_services.base_gSheet__asms", "model.sado_analytics_services.stg_kiotviet__branches"], "model.sado_analytics_services.stg_gsheet__nhanhvnsalechannels": ["source.sado_analytics_services.gSheet._ext_nhanhvn_salechannel"], "model.sado_analytics_services.stg_gsheet__regions": ["source.sado_analytics_services.gSheet._ext_region"], "model.sado_analytics_services.base_gSheet__asms": ["source.sado_analytics_services.gSheet._ext_asm_list"], "model.sado_analytics_services.facebook_dashboard": ["model.sado_analytics_services.facebook_budget", "model.sado_analytics_services.facebook_performance", "model.sado_analytics_services.revenue", "model.sado_analytics_services.stg_gsheet__asms"], "model.sado_analytics_services.rfm_movement": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.revenue"], "model.sado_analytics_services.revenue_items": ["model.sado_analytics_services.stg_kiotviet__invoicedetails", "model.sado_analytics_services.stg_kiotviet__returndetails"], "model.sado_analytics_services.revenue": ["model.sado_analytics_services.stg_kiotviet__invoices", "model.sado_analytics_services.stg_kiotviet__returns"], "model.sado_analytics_services.revenue_payments": ["model.sado_analytics_services.stg_kiotviet__invoicepayments", "model.sado_analytics_services.stg_kiotviet__returnpayments"], "model.sado_analytics_services.sms__by__day": ["model.sado_analytics_services.stg_esms__sent_data"], "model.sado_analytics_services.tickets": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields", "model.sado_analytics_services.stg_caresoft__tickets"], "model.sado_analytics_services.conversations_engaged": ["model.sado_analytics_services.stg_pancake__conversations", "model.sado_analytics_services.stg_pancake__tags"], "model.sado_analytics_services.pancake_performance__by__users": ["model.sado_analytics_services.stg_pancake__orders", "model.sado_analytics_services.stg_pancake__user_stats"], "model.sado_analytics_services.engagements_details": ["model.sado_analytics_services.stg_caresoft__agents", "model.sado_analytics_services.stg_caresoft__calls", "model.sado_analytics_services.stg_caresoft__chats"], "model.sado_analytics_services.analytics_sessions": ["model.sado_analytics_services.int_analytics__events_format"], "model.sado_analytics_services.analytics_users": ["model.sado_analytics_services.int_analytics__events_format"], "model.sado_analytics_services.analytics_events": ["model.sado_analytics_services.int_analytics__events_format"], "model.sado_analytics_services.analytics_ecommerce": ["model.sado_analytics_services.stg_analytics__events"], "model.sado_analytics_services.facebook_performance__by_regions": ["model.sado_analytics_services.stg_facebookads__regioninsights"], "model.sado_analytics_services.facebook_budget": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.stg_gsheet__facebook_budget"], "model.sado_analytics_services.facebook_performance__by_audience": ["model.sado_analytics_services.stg_facebookads__audienceinsights"], "model.sado_analytics_services.offline_conversion": ["model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_kiotviet__customers", "model.sado_analytics_services.stg_kiotviet__invoices"], "model.sado_analytics_services.facebook_performance": ["model.sado_analytics_services.stg_facebookads__adsinsights", "model.sado_analytics_services.stg_facebookads__campaigns"], "model.sado_analytics_services.google_campaign_performance": ["model.sado_analytics_services.stg_googleads__campaign_conversion_stats", "model.sado_analytics_services.stg_googleads__campaign_stats"], "model.sado_analytics_services.google_ad_group_performance": ["model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats", "model.sado_analytics_services.stg_googleads__ad_group_stats"], "model.sado_analytics_services.current_inventory": ["model.sado_analytics_services.stg_nhanhvn__inventories"], "model.sado_analytics_services.orders_items": ["model.sado_analytics_services.stg_nhanhvn__carriers", "model.sado_analytics_services.stg_nhanhvn__ordersdetails"], "model.sado_analytics_services.online_inventory_balance": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.orders_items", "model.sado_analytics_services.stg_nhanhvn__bills", "model.sado_analytics_services.stg_nhanhvn__depots", "model.sado_analytics_services.stg_nhanhvn__inventories", "model.sado_analytics_services.stg_nhanhvn__products"], "model.sado_analytics_services.online_balance": ["model.sado_analytics_services.stg_nhanhvn__bills", "model.sado_analytics_services.stg_nhanhvn__depots"], "model.sado_analytics_services.fsn_analysis": ["model.sado_analytics_services.online_inventory_balance"], "analysis.sado_analytics_services.marketing_efforts": ["model.sado_analytics_services.analytics_sessions", "model.sado_analytics_services.facebook_performance", "model.sado_analytics_services.revenue_items", "model.sado_analytics_services.sms__by__day", "model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_kiotviet__products"], "test.sado_analytics_services.not_null_int_analytics__events_format_event_id.64f62bf66d": ["model.sado_analytics_services.int_analytics__events_format"], "test.sado_analytics_services.unique_int_analytics__events_format_event_id.62a57791c8": ["model.sado_analytics_services.int_analytics__events_format"], "test.sado_analytics_services.not_null_int_analytics__events_format_event_date.3e5c24fe51": ["model.sado_analytics_services.int_analytics__events_format"], "test.sado_analytics_services.not_null_int_analytics__events_format_event_timestamp.6fa25d84a3": ["model.sado_analytics_services.int_analytics__events_format"], "test.sado_analytics_services.not_null_int_analytics__events_format_client_id.b145f5263a": ["model.sado_analytics_services.int_analytics__events_format"], "test.sado_analytics_services.not_null_int_analytics__events_format_event_name.10ddcf6861": ["model.sado_analytics_services.int_analytics__events_format"], "test.sado_analytics_services.accepted_values_int_analytics__events_format_device_type__desktop__mobile__tablet__smart_tv.131daf94cb": ["model.sado_analytics_services.int_analytics__events_format"], "test.sado_analytics_services.not_null_int_analytics__events_format_session_id.3834dbf6d6": ["model.sado_analytics_services.int_analytics__events_format"], "test.sado_analytics_services.accepted_values_int_analytics__events_format_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.f65db99fd2": ["model.sado_analytics_services.int_analytics__events_format"], "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d": ["model.sado_analytics_services.calendar"], "test.sado_analytics_services.unique_calendar_date.b4cbc0583a": ["model.sado_analytics_services.calendar"], "test.sado_analytics_services.not_null_stg_analytics__events_param_id.eba77a9c62": ["model.sado_analytics_services.stg_analytics__events"], "test.sado_analytics_services.not_null_stg_analytics__events_event_id.bf1e285477": ["model.sado_analytics_services.stg_analytics__events"], "test.sado_analytics_services.not_null_stg_analytics__events_event_date.f0817ea4e8": ["model.sado_analytics_services.stg_analytics__events"], "test.sado_analytics_services.not_null_stg_analytics__events_event_timestamp.4538d83700": ["model.sado_analytics_services.stg_analytics__events"], "test.sado_analytics_services.not_null_stg_analytics__events_client_id.4697100241": ["model.sado_analytics_services.stg_analytics__events"], "test.sado_analytics_services.not_null_stg_analytics__events_event_name.12850a9ab6": ["model.sado_analytics_services.stg_analytics__events"], "test.sado_analytics_services.accepted_values_stg_analytics__events_device_type__desktop__mobile__tablet.6d57b40868": ["model.sado_analytics_services.stg_analytics__events"], "test.sado_analytics_services.not_null_stg_analytics__events_param_key.c5450db076": ["model.sado_analytics_services.stg_analytics__events"], "test.sado_analytics_services.not_null_stg_caresoft__agents_id.718cd3c440": ["model.sado_analytics_services.stg_caresoft__agents"], "test.sado_analytics_services.unique_stg_caresoft__agents_id.1dc507e0f7": ["model.sado_analytics_services.stg_caresoft__agents"], "test.sado_analytics_services.unique_stg_caresoft__agents_email.90f55cfcb1": ["model.sado_analytics_services.stg_caresoft__agents"], "test.sado_analytics_services.not_null_stg_caresoft__agents_email.360e1d9d56": ["model.sado_analytics_services.stg_caresoft__agents"], "test.sado_analytics_services.not_null_stg_caresoft__calls_id.2fb2499c5a": ["model.sado_analytics_services.stg_caresoft__calls"], "test.sado_analytics_services.unique_stg_caresoft__calls_id.aede802cc2": ["model.sado_analytics_services.stg_caresoft__calls"], "test.sado_analytics_services.not_null_stg_caresoft__calls_call_id.8d621fb840": ["model.sado_analytics_services.stg_caresoft__calls"], "test.sado_analytics_services.unique_stg_caresoft__calls_call_id.62c4fd8e66": ["model.sado_analytics_services.stg_caresoft__calls"], "test.sado_analytics_services.not_null_stg_caresoft__contacts_contact_id.eb790c43e2": ["model.sado_analytics_services.stg_caresoft__contacts"], "test.sado_analytics_services.unique_stg_caresoft__contacts_contact_id.9463562ba4": ["model.sado_analytics_services.stg_caresoft__contacts"], "test.sado_analytics_services.not_null_stg_caresoft__tickets_ticket_id.44b9236f2a": ["model.sado_analytics_services.stg_caresoft__tickets"], "test.sado_analytics_services.unique_stg_caresoft__tickets_ticket_id.d6716e1775": ["model.sado_analytics_services.stg_caresoft__tickets"], "test.sado_analytics_services.not_null_stg_caresoft__chats_conversation_id.f2a0e81461": ["model.sado_analytics_services.stg_caresoft__chats"], "test.sado_analytics_services.unique_stg_caresoft__chats_conversation_id.0f9e5f32bb": ["model.sado_analytics_services.stg_caresoft__chats"], "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_custom_field_id.7857424e18": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields"], "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_custom_field_id.4c14dc82f5": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields"], "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_value_id.ff7804063b": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields"], "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_value_id.a076bcc09a": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields"], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_big_campaign.2d48ae112a": ["model.sado_analytics_services.stg_facebookads__campaigns"], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_content_group.3b8f97e6ef": ["model.sado_analytics_services.stg_facebookads__campaigns"], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_pic.048f4069b2": ["model.sado_analytics_services.stg_facebookads__campaigns"], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_page.ce0463af60": ["model.sado_analytics_services.stg_facebookads__campaigns"], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_media_type.93f27013f7": ["model.sado_analytics_services.stg_facebookads__campaigns"], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_funnel.92b8a27b8c": ["model.sado_analytics_services.stg_facebookads__campaigns"], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_ad_type.8abacfa863": ["model.sado_analytics_services.stg_facebookads__campaigns"], "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d": ["model.sado_analytics_services.stg_googleads__campaign_stats"], "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226": ["model.sado_analytics_services.stg_googleads__campaign_stats"], "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c": ["model.sado_analytics_services.stg_kiotviet__products"], "test.sado_analytics_services.not_null_engagements_details_engagement_id.ba4b05a1b3": ["model.sado_analytics_services.engagements_details"], "test.sado_analytics_services.unique_engagements_details_engagement_id.fa02ef7234": ["model.sado_analytics_services.engagements_details"], "test.sado_analytics_services.not_null_tickets_ticket_id.6d0b33ca1c": ["model.sado_analytics_services.tickets"], "test.sado_analytics_services.unique_tickets_ticket_id.7bb6098968": ["model.sado_analytics_services.tickets"], "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58": ["model.sado_analytics_services.pancake_performance__by__users"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29": ["model.sado_analytics_services.pancake_performance__by__users"], "test.sado_analytics_services.not_null_conversations_engaged_conversation_id.bcf98fdb1c": ["model.sado_analytics_services.conversations_engaged"], "test.sado_analytics_services.unique_conversations_engaged_conversation_id.babc4a007d": ["model.sado_analytics_services.conversations_engaged"], "test.sado_analytics_services.not_null_analytics_ecommerce_event_id.6f1ed0d8fb": ["model.sado_analytics_services.analytics_ecommerce"], "test.sado_analytics_services.unique_analytics_ecommerce_event_id.02ed4c83a9": ["model.sado_analytics_services.analytics_ecommerce"], "test.sado_analytics_services.not_null_analytics_ecommerce_event_date.906416261f": ["model.sado_analytics_services.analytics_ecommerce"], "test.sado_analytics_services.not_null_analytics_ecommerce_event_timestamp.ecb4f8891a": ["model.sado_analytics_services.analytics_ecommerce"], "test.sado_analytics_services.not_null_analytics_ecommerce_client_id.a95291fa85": ["model.sado_analytics_services.analytics_ecommerce"], "test.sado_analytics_services.not_null_analytics_ecommerce_session_id.bd07b9226e": ["model.sado_analytics_services.analytics_ecommerce"], "test.sado_analytics_services.not_null_analytics_ecommerce_event_name.74e33efa5c": ["model.sado_analytics_services.analytics_ecommerce"], "test.sado_analytics_services.not_null_analytics_ecommerce_page_path.cf54588159": ["model.sado_analytics_services.analytics_ecommerce"], "test.sado_analytics_services.not_null_analytics_events_event_id.e85055ae44": ["model.sado_analytics_services.analytics_events"], "test.sado_analytics_services.unique_analytics_events_event_id.4247da5290": ["model.sado_analytics_services.analytics_events"], "test.sado_analytics_services.not_null_analytics_events_event_date.d3a5365c60": ["model.sado_analytics_services.analytics_events"], "test.sado_analytics_services.not_null_analytics_events_event_timestamp.af5e5bebbe": ["model.sado_analytics_services.analytics_events"], "test.sado_analytics_services.not_null_analytics_events_client_id.50d8c993ab": ["model.sado_analytics_services.analytics_events"], "test.sado_analytics_services.not_null_analytics_events_session_id.0d1ee943e2": ["model.sado_analytics_services.analytics_events"], "test.sado_analytics_services.not_null_analytics_events_event_name.3910fe2c81": ["model.sado_analytics_services.analytics_events"], "test.sado_analytics_services.not_null_analytics_events_page_path.195d70d009": ["model.sado_analytics_services.analytics_events"], "test.sado_analytics_services.not_null_analytics_sessions_session_id.d2b8fbe930": ["model.sado_analytics_services.analytics_sessions"], "test.sado_analytics_services.unique_analytics_sessions_session_id.5ad6d0e7b9": ["model.sado_analytics_services.analytics_sessions"], "test.sado_analytics_services.not_null_analytics_sessions_client_id.2b9337fcf7": ["model.sado_analytics_services.analytics_sessions"], "test.sado_analytics_services.accepted_values_analytics_sessions_device_type__desktop__mobile__tablet.37e37cbf74": ["model.sado_analytics_services.analytics_sessions"], "test.sado_analytics_services.not_null_analytics_sessions_session_date.9f12016762": ["model.sado_analytics_services.analytics_sessions"], "test.sado_analytics_services.not_null_analytics_sessions_session_initiated.c29ed80f45": ["model.sado_analytics_services.analytics_sessions"], "test.sado_analytics_services.not_null_analytics_sessions_landing_page.d65707214a": ["model.sado_analytics_services.analytics_sessions"], "test.sado_analytics_services.not_null_analytics_sessions_exit_page.63a484d937": ["model.sado_analytics_services.analytics_sessions"], "test.sado_analytics_services.accepted_values_analytics_sessions_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.06fa2c3426": ["model.sado_analytics_services.analytics_sessions"], "test.sado_analytics_services.unique_analytics_users_client_id.5be88f272b": ["model.sado_analytics_services.analytics_users"], "source.sado_analytics_services.misc.weather": [], "source.sado_analytics_services.analytics.events": [], "source.sado_analytics_services.caresoft.tickets": [], "source.sado_analytics_services.caresoft.ticket_details": [], "source.sado_analytics_services.caresoft.contacts": [], "source.sado_analytics_services.caresoft.contact_details": [], "source.sado_analytics_services.caresoft.calls": [], "source.sado_analytics_services.caresoft.chats": [], "source.sado_analytics_services.caresoft.chats_live": [], "source.sado_analytics_services.caresoft.chats_fb": [], "source.sado_analytics_services.caresoft.chats_zalo": [], "source.sado_analytics_services.caresoft.agents": [], "source.sado_analytics_services.caresoft.groups": [], "source.sado_analytics_services.caresoft.ticket_custom_fields": [], "source.sado_analytics_services.facebookAds.p_AdsInsights__*": [], "source.sado_analytics_services.facebookAds.p_AccountInsights__*": [], "source.sado_analytics_services.facebookAds.p_AudienceInsights__*": [], "source.sado_analytics_services.facebookAds.p_RegionInsights__*": [], "source.sado_analytics_services.facebookAds.p_CreativesInsights__*": [], "source.sado_analytics_services.googleads.account_conversion_stats": [], "source.sado_analytics_services.googleads.keyword_cross_device_stats": [], "source.sado_analytics_services.googleads.hourly_account_stats": [], "source.sado_analytics_services.googleads.gender": [], "source.sado_analytics_services.googleads.ad_conversion_stats": [], "source.sado_analytics_services.googleads.search_query_conversion_stats": [], "source.sado_analytics_services.googleads.video_non_click_stats": [], "source.sado_analytics_services.googleads.ad_group_conversion_stats": [], "source.sado_analytics_services.googleads.hourly_campaign_stats": [], "source.sado_analytics_services.googleads.campaign_cross_device_stats": [], "source.sado_analytics_services.googleads.gender_non_click_stats": [], "source.sado_analytics_services.googleads.video": [], "source.sado_analytics_services.googleads.video_basic_stats": [], "source.sado_analytics_services.googleads.campaign_audience_non_click_stats": [], "source.sado_analytics_services.googleads.hourly_account_conversion_stats": [], "source.sado_analytics_services.googleads.video_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_audience": [], "source.sado_analytics_services.googleads.age_range_non_click_stats": [], "source.sado_analytics_services.googleads.account_non_click_stats": [], "source.sado_analytics_services.googleads.parental_status_basic_stats": [], "source.sado_analytics_services.googleads.ad_stats": [], "source.sado_analytics_services.googleads.hourly_ad_group_conversion_stats": [], "source.sado_analytics_services.googleads.parental_status_stats": [], "source.sado_analytics_services.googleads.bid_goal": [], "source.sado_analytics_services.googleads.ad_cross_device_stats": [], "source.sado_analytics_services.googleads.ad_group_ad_label": [], "source.sado_analytics_services.googleads.ad_group_audience_conversion_stats": [], "source.sado_analytics_services.googleads.search_query_stats": [], "source.sado_analytics_services.googleads.ad_group_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.budget": [], "source.sado_analytics_services.googleads.bid_goal_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_cross_device_stats": [], "source.sado_analytics_services.googleads.age_range_stats": [], "source.sado_analytics_services.googleads.campaign_audience": [], "source.sado_analytics_services.googleads.keyword_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.campaign": [], "source.sado_analytics_services.googleads.ad_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.placement_basic_stats": [], "source.sado_analytics_services.googleads.age_range_basic_stats": [], "source.sado_analytics_services.googleads.keyword_basic_stats": [], "source.sado_analytics_services.googleads.parental_status_non_click_stats": [], "source.sado_analytics_services.googleads.gender_conversion_stats": [], "source.sado_analytics_services.googleads.placement_stats": [], "source.sado_analytics_services.googleads.ad_group": [], "source.sado_analytics_services.googleads.ad_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_stats": [], "source.sado_analytics_services.googleads.placement_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_stats": [], "source.sado_analytics_services.googleads.campaign_conversion_stats": [], "source.sado_analytics_services.googleads.budget_stats": [], "source.sado_analytics_services.googleads.account_basic_stats": [], "source.sado_analytics_services.googleads.customer": [], "source.sado_analytics_services.googleads.campaign_label": [], "source.sado_analytics_services.googleads.age_range_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_audience_basic_stats": [], "source.sado_analytics_services.googleads.keyword_stats": [], "source.sado_analytics_services.googleads.hourly_ad_group_stats": [], "source.sado_analytics_services.googleads.placement": [], "source.sado_analytics_services.googleads.video_stats": [], "source.sado_analytics_services.googleads.campaign_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_label": [], "source.sado_analytics_services.googleads.parental_status_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_stats": [], "source.sado_analytics_services.googleads.campaign_audience_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_criterion": [], "source.sado_analytics_services.googleads.hourly_bid_goal_stats": [], "source.sado_analytics_services.googleads.click_stats": [], "source.sado_analytics_services.googleads.campaign_audience_stats": [], "source.sado_analytics_services.googleads.parental_status": [], "source.sado_analytics_services.googleads.geo_stats": [], "source.sado_analytics_services.googleads.ad_group_criterion_label": [], "source.sado_analytics_services.googleads.age_range": [], "source.sado_analytics_services.googleads.geo_conversion_stats": [], "source.sado_analytics_services.googleads.hourly_campaign_conversion_stats": [], "source.sado_analytics_services.googleads.keyword": [], "source.sado_analytics_services.googleads.campaign_cookie_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_criterion": [], "source.sado_analytics_services.googleads.paid_organic_stats": [], "source.sado_analytics_services.googleads.location_based_campaign_criterion": [], "source.sado_analytics_services.googleads.gender_stats": [], "source.sado_analytics_services.googleads.account_stats": [], "source.sado_analytics_services.googleads.shopping_product_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.product_group_stats": [], "source.sado_analytics_services.googleads.gender_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_bid_modifier": [], "source.sado_analytics_services.googleads.campaign_location_target_stats": [], "source.sado_analytics_services.googleads.ad_group_basic_stats": [], "source.sado_analytics_services.googleads.keyword_conversion_stats": [], "source.sado_analytics_services.googleads.shopping_product_stats": [], "source.sado_analytics_services.googleads.placement_non_click_stats": [], "source.sado_analytics_services.googleads.bid_goal_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_non_click_stats": [], "source.sado_analytics_services.googleads.ad": [], "source.sado_analytics_services.nhanhvn.p_bills_*": [], "source.sado_analytics_services.nhanhvn.p_carriers_*": [], "source.sado_analytics_services.nhanhvn.p_categories_*": [], "source.sado_analytics_services.nhanhvn.p_customers_*": [], "source.sado_analytics_services.nhanhvn.p_orders_*": [], "source.sado_analytics_services.nhanhvn.p_products_*": [], "source.sado_analytics_services.nhanhvn.p_stores_*": [], "source.sado_analytics_services.nhanhvn.p_users_*": [], "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange": [], "source.sado_analytics_services.nhanhvn.p_webhook_orderAdd": [], "source.sado_analytics_services.nhanhvn.p_webhook_orderUpdate": [], "source.sado_analytics_services.nhanhvn.p_inventory_*": [], "source.sado_analytics_services.esms.sms_sent_data": [], "source.sado_analytics_services.kiotViet.p_products_list_*": [], "source.sado_analytics_services.kiotViet.p_branches_list_*": [], "source.sado_analytics_services.kiotViet.p_orders_list_*": [], "source.sado_analytics_services.kiotViet.p_pricebooks_branches_*": [], "source.sado_analytics_services.kiotViet.p_surcharges_list_*": [], "source.sado_analytics_services.kiotViet.p_pricebooks_users_*": [], "source.sado_analytics_services.kiotViet.p_users_list_*": [], "source.sado_analytics_services.kiotViet.p_categories_list_*": [], "source.sado_analytics_services.kiotViet.p_purchaseorders_list_*": [], "source.sado_analytics_services.kiotViet.p_purchaseorders_list2_*": [], "source.sado_analytics_services.kiotViet.p_customersGroups_list_*": [], "source.sado_analytics_services.kiotViet.p_pricebooks_customer_groups_*": [], "source.sado_analytics_services.kiotViet.p_invoices_list_*": [], "source.sado_analytics_services.kiotViet.p_invoices_list2_*": [], "source.sado_analytics_services.kiotViet.p_returns_list_*": [], "source.sado_analytics_services.kiotViet.p_returns_list2_*": [], "source.sado_analytics_services.kiotViet.p_bankAccounts_list_*": [], "source.sado_analytics_services.kiotViet.p_saleschannels_list_*": [], "source.sado_analytics_services.kiotViet.p_customers_list_*": [], "source.sado_analytics_services.kiotViet.p_locations_list_*": [], "source.sado_analytics_services.kiotViet.p_products_inventory_*": [], "source.sado_analytics_services.kiotViet.p_pricebooks_list_*": [], "source.sado_analytics_services.kiotViet.p_webhook_invoice_update": [], "source.sado_analytics_services.kiotViet.p_webhook_inventory_update": [], "source.sado_analytics_services.kiotViet.p_webhook_customer_update": [], "source.sado_analytics_services.pancake.users": [], "source.sado_analytics_services.pancake.conversations": [], "source.sado_analytics_services.pancake.customer_engagements": [], "source.sado_analytics_services.pancake.pages": [], "source.sado_analytics_services.pancake.user_stats": [], "source.sado_analytics_services.pancake.posts": [], "source.sado_analytics_services.pancake.tags": [], "source.sado_analytics_services.pancake.page": [], "source.sado_analytics_services.pancake.customers": [], "source.sado_analytics_services.pancake.page_stats": [], "source.sado_analytics_services.pancake.pos_orders": [], "source.sado_analytics_services.5sfashion.products": [], "source.sado_analytics_services.5sfashion.product_variants": [], "source.sado_analytics_services.5sfashion.product_ratings": [], "source.sado_analytics_services.5sfashion.order_items": [], "source.sado_analytics_services.5sfashion.orders": [], "source.sado_analytics_services.5sfashion.categories": [], "source.sado_analytics_services.5sfashion.districts": [], "source.sado_analytics_services.5sfashion.wards": [], "source.sado_analytics_services.5sfashion.provinces": [], "source.sado_analytics_services.gSheet._ext_asm_list": [], "source.sado_analytics_services.gSheet._ext_nhanhvn_salechannel": [], "source.sado_analytics_services.gSheet._ext_region": [], "source.sado_analytics_services.gSheet.facebook_budget": [], "source.sado_analytics_services.gSheet._ext_pancake_tags": [], "metric.sado_analytics_services.income_payment": ["semantic_model.sado_analytics_services.revenue_payments"], "metric.sado_analytics_services.return_payment": ["semantic_model.sado_analytics_services.revenue_payments"], "metric.sado_analytics_services.num_income_payment": ["semantic_model.sado_analytics_services.revenue_payments"], "metric.sado_analytics_services.num_return_payment": ["semantic_model.sado_analytics_services.revenue_payments"], "metric.sado_analytics_services.gross_revenue": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.invoice_value": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.invoice_count": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.return_count": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.invoice_paid_value": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.returned_value": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.order_discounted_value": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.aov": ["metric.sado_analytics_services.invoice_count", "metric.sado_analytics_services.invoice_value"], "metric.sado_analytics_services.pending_invoice": ["metric.sado_analytics_services.invoice_paid_value", "metric.sado_analytics_services.invoice_value"], "metric.sado_analytics_services.pct_returned": ["metric.sado_analytics_services.invoice_count", "metric.sado_analytics_services.return_count"], "metric.sado_analytics_services.num_customers_rfm": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.avg_monetary_value": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.med_monetary_value": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.total_monetary_value": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.avg_recency": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.median_recency": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.avg_freq": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.median_freq": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.qty_sold": ["semantic_model.sado_analytics_services.revenue_items"], "metric.sado_analytics_services.qty_returned": ["semantic_model.sado_analytics_services.revenue_items"], "metric.sado_analytics_services.item_discounted_value": ["semantic_model.sado_analytics_services.revenue_items"], "metric.sado_analytics_services.item_sold_value": ["semantic_model.sado_analytics_services.revenue_items"], "metric.sado_analytics_services.avg_discount_ratio": ["metric.sado_analytics_services.item_discounted_value", "metric.sado_analytics_services.item_sold_value"], "metric.sado_analytics_services.items_per_transaction": ["metric.sado_analytics_services.invoice_count", "metric.sado_analytics_services.qty_sold"], "metric.sado_analytics_services.fb_spend": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_impresions": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_clicks": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_reach": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_link_clicks": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_post_engagement": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_offline_conversion": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_offline_conversion_value": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_online_conversion": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_online_conversion_value": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_meta_conversion": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_meta_conversion_value": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_messages": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.roas": ["metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_offline_conversion_value", "metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_spend"], "metric.sado_analytics_services.online_roas": ["metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_spend"], "metric.sado_analytics_services.spend_7d": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.offline_cv_7d": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.online_cv_7d": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.meta_cv_7d": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.roas_7d": ["metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"], "metric.sado_analytics_services.online_roas_7d": ["metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"], "metric.sado_analytics_services.onl_dly_avg_inv_7d": ["semantic_model.sado_analytics_services.online_inventory_balance"], "metric.sado_analytics_services.onl_dly_avg_qty_sold_7d": ["semantic_model.sado_analytics_services.online_inventory_balance"], "metric.sado_analytics_services.onl_dly_total_qty_sold_7d": ["semantic_model.sado_analytics_services.online_inventory_balance"], "metric.sado_analytics_services.onl_inv_dio_7d": ["metric.sado_analytics_services.onl_dly_avg_inv_7d", "metric.sado_analytics_services.onl_dly_total_qty_sold_7d"], "metric.sado_analytics_services.onl_inv_turnover": ["metric.sado_analytics_services.onl_dly_avg_inv_7d", "metric.sado_analytics_services.onl_dly_total_qty_sold_7d"], "metric.sado_analytics_services.onl_qty_sold": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_qty_sold_7d": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_qty_returned": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_purchase_item_value": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_return_item_value": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_value_sold": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_value_returned": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_item_dcnt_value": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_item_dcnt_pct": ["metric.sado_analytics_services.onl_item_dcnt_value", "metric.sado_analytics_services.onl_purchase_item_value"], "metric.sado_analytics_services.onl_total_dcnt_value": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_order_dct_value": ["metric.sado_analytics_services.onl_item_dcnt_value", "metric.sado_analytics_services.onl_total_dcnt_value"], "metric.sado_analytics_services.onl_purchase_count": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_return_count": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_total_fulfillment_time": ["semantic_model.sado_analytics_services.online_orders_items"], "metric.sado_analytics_services.onl_avg_fulfillment_time": ["metric.sado_analytics_services.onl_purchase_count", "metric.sado_analytics_services.onl_total_fulfillment_time"], "metric.sado_analytics_services.onl_return_rate": ["metric.sado_analytics_services.onl_purchase_count", "metric.sado_analytics_services.onl_return_count"], "metric.sado_analytics_services.onl_balance_value": ["semantic_model.sado_analytics_services.online_balance"], "metric.sado_analytics_services.onl_value_in": ["semantic_model.sado_analytics_services.online_balance"], "metric.sado_analytics_services.onl_value_out": ["semantic_model.sado_analytics_services.online_balance"], "metric.sado_analytics_services.onl_balance_qty": ["semantic_model.sado_analytics_services.online_balance"], "metric.sado_analytics_services.onl_qty_in": ["semantic_model.sado_analytics_services.online_balance"], "metric.sado_analytics_services.onl_qty_out": ["semantic_model.sado_analytics_services.online_balance"], "semantic_model.sado_analytics_services.revenue_payments": ["model.sado_analytics_services.revenue_payments"], "semantic_model.sado_analytics_services.revenue": ["model.sado_analytics_services.revenue"], "semantic_model.sado_analytics_services.rfm_movement": ["model.sado_analytics_services.rfm_movement"], "semantic_model.sado_analytics_services.revenue_items": ["model.sado_analytics_services.revenue_items"], "semantic_model.sado_analytics_services.facebook_performance": ["model.sado_analytics_services.facebook_performance"], "semantic_model.sado_analytics_services.online_inventory_balance": ["model.sado_analytics_services.online_inventory_balance"], "semantic_model.sado_analytics_services.online_orders_items": ["model.sado_analytics_services.orders_items"], "semantic_model.sado_analytics_services.online_balance": ["model.sado_analytics_services.online_balance"]}, "child_map": {"model.sado_analytics_services.int_analytics__events_format": ["model.sado_analytics_services.analytics_events", "model.sado_analytics_services.analytics_sessions", "model.sado_analytics_services.analytics_users", "test.sado_analytics_services.accepted_values_int_analytics__events_format_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.f65db99fd2", "test.sado_analytics_services.accepted_values_int_analytics__events_format_device_type__desktop__mobile__tablet__smart_tv.131daf94cb", "test.sado_analytics_services.not_null_int_analytics__events_format_client_id.b145f5263a", "test.sado_analytics_services.not_null_int_analytics__events_format_event_date.3e5c24fe51", "test.sado_analytics_services.not_null_int_analytics__events_format_event_id.64f62bf66d", "test.sado_analytics_services.not_null_int_analytics__events_format_event_name.10ddcf6861", "test.sado_analytics_services.not_null_int_analytics__events_format_event_timestamp.6fa25d84a3", "test.sado_analytics_services.not_null_int_analytics__events_format_session_id.3834dbf6d6", "test.sado_analytics_services.unique_int_analytics__events_format_event_id.62a57791c8"], "model.sado_analytics_services.weather": [], "model.sado_analytics_services.calendar": ["model.sado_analytics_services.facebook_budget", "model.sado_analytics_services.online_inventory_balance", "model.sado_analytics_services.rfm_movement", "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d", "test.sado_analytics_services.unique_calendar_date.b4cbc0583a"], "model.sado_analytics_services.metricflow_time_spine": [], "model.sado_analytics_services.stg_analytics__events": ["model.sado_analytics_services.analytics_ecommerce", "model.sado_analytics_services.int_analytics__events_format", "test.sado_analytics_services.accepted_values_stg_analytics__events_device_type__desktop__mobile__tablet.6d57b40868", "test.sado_analytics_services.not_null_stg_analytics__events_client_id.4697100241", "test.sado_analytics_services.not_null_stg_analytics__events_event_date.f0817ea4e8", "test.sado_analytics_services.not_null_stg_analytics__events_event_id.bf1e285477", "test.sado_analytics_services.not_null_stg_analytics__events_event_name.12850a9ab6", "test.sado_analytics_services.not_null_stg_analytics__events_event_timestamp.4538d83700", "test.sado_analytics_services.not_null_stg_analytics__events_param_id.eba77a9c62", "test.sado_analytics_services.not_null_stg_analytics__events_param_key.c5450db076"], "model.sado_analytics_services.base_analytics__events": ["model.sado_analytics_services.stg_analytics__events"], "model.sado_analytics_services.stg_caresoft__contacts": ["test.sado_analytics_services.not_null_stg_caresoft__contacts_contact_id.eb790c43e2", "test.sado_analytics_services.unique_stg_caresoft__contacts_contact_id.9463562ba4"], "model.sado_analytics_services.stg_caresoft__tickets": ["model.sado_analytics_services.tickets", "test.sado_analytics_services.not_null_stg_caresoft__tickets_ticket_id.44b9236f2a", "test.sado_analytics_services.unique_stg_caresoft__tickets_ticket_id.d6716e1775"], "model.sado_analytics_services.stg_caresoft__ticket_custom_fields": ["model.sado_analytics_services.tickets", "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_custom_field_id.4c14dc82f5", "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_value_id.a076bcc09a", "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_custom_field_id.7857424e18", "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_value_id.ff7804063b"], "model.sado_analytics_services.stg_caresoft__calls": ["model.sado_analytics_services.engagements_details", "test.sado_analytics_services.not_null_stg_caresoft__calls_call_id.8d621fb840", "test.sado_analytics_services.not_null_stg_caresoft__calls_id.2fb2499c5a", "test.sado_analytics_services.unique_stg_caresoft__calls_call_id.62c4fd8e66", "test.sado_analytics_services.unique_stg_caresoft__calls_id.aede802cc2"], "model.sado_analytics_services.stg_caresoft__chats": ["model.sado_analytics_services.engagements_details", "test.sado_analytics_services.not_null_stg_caresoft__chats_conversation_id.f2a0e81461", "test.sado_analytics_services.unique_stg_caresoft__chats_conversation_id.0f9e5f32bb"], "model.sado_analytics_services.stg_caresoft__agents": ["model.sado_analytics_services.engagements_details", "test.sado_analytics_services.not_null_stg_caresoft__agents_email.360e1d9d56", "test.sado_analytics_services.not_null_stg_caresoft__agents_id.718cd3c440", "test.sado_analytics_services.unique_stg_caresoft__agents_email.90f55cfcb1", "test.sado_analytics_services.unique_stg_caresoft__agents_id.1dc507e0f7"], "model.sado_analytics_services.base_caresoft__chats": ["model.sado_analytics_services.stg_caresoft__chats"], "model.sado_analytics_services.base_caresoft__groups": [], "model.sado_analytics_services.base_caresoft__calls": ["model.sado_analytics_services.stg_caresoft__calls"], "model.sado_analytics_services.base_caresoft__ticket_details": ["model.sado_analytics_services.stg_caresoft__tickets"], "model.sado_analytics_services.base_caresoft__contact_details": ["model.sado_analytics_services.stg_caresoft__contacts"], "model.sado_analytics_services.base_caresoft__tickets": ["model.sado_analytics_services.stg_caresoft__tickets"], "model.sado_analytics_services.base_caresoft__contacts": ["model.sado_analytics_services.stg_caresoft__contacts"], "model.sado_analytics_services.base_caresoft__ticket_custom_fields": ["model.sado_analytics_services.stg_caresoft__ticket_custom_fields"], "model.sado_analytics_services.base_caresoft__agents": ["model.sado_analytics_services.stg_caresoft__agents"], "model.sado_analytics_services.stg_facebookads__regioninsights": ["model.sado_analytics_services.facebook_performance__by_regions"], "model.sado_analytics_services.stg_facebookads__creatives": [], "model.sado_analytics_services.stg_facebookads__accountinsights": [], "model.sado_analytics_services.stg_facebookads__audienceinsights": ["model.sado_analytics_services.facebook_performance__by_audience"], "model.sado_analytics_services.stg_facebookads__adsinsights": ["model.sado_analytics_services.facebook_performance"], "model.sado_analytics_services.stg_facebookads__campaigns": ["model.sado_analytics_services.facebook_performance", "test.sado_analytics_services.not_null_stg_facebookads__campaigns_ad_type.8abacfa863", "test.sado_analytics_services.not_null_stg_facebookads__campaigns_big_campaign.2d48ae112a", "test.sado_analytics_services.not_null_stg_facebookads__campaigns_content_group.3b8f97e6ef", "test.sado_analytics_services.not_null_stg_facebookads__campaigns_funnel.92b8a27b8c", "test.sado_analytics_services.not_null_stg_facebookads__campaigns_media_type.93f27013f7", "test.sado_analytics_services.not_null_stg_facebookads__campaigns_page.ce0463af60", "test.sado_analytics_services.not_null_stg_facebookads__campaigns_pic.048f4069b2"], "model.sado_analytics_services.base_facebookAds__adsInsights": ["model.sado_analytics_services.stg_facebookads__adsinsights"], "model.sado_analytics_services.base_facebookAds__audienceInsights": ["model.sado_analytics_services.stg_facebookads__audienceinsights"], "model.sado_analytics_services.base_facebookAds__accountInsights": ["model.sado_analytics_services.stg_facebookads__accountinsights"], "model.sado_analytics_services.base_facebookAds__creatives": ["model.sado_analytics_services.stg_facebookads__creatives"], "model.sado_analytics_services.base_facebookAds__regionInsights": ["model.sado_analytics_services.stg_facebookads__regioninsights"], "model.sado_analytics_services.stg_googleads__campaign_conversion_stats": ["model.sado_analytics_services.google_campaign_performance"], "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats": ["model.sado_analytics_services.google_ad_group_performance"], "model.sado_analytics_services.stg_googleads__keyword_stats": [], "model.sado_analytics_services.stg_googleads__search_query_stats": [], "model.sado_analytics_services.stg_googleads__ad_group_stats": ["model.sado_analytics_services.google_ad_group_performance"], "model.sado_analytics_services.stg_googleads__shopping_product_stats": [], "model.sado_analytics_services.stg_googleads__campaign_stats": ["model.sado_analytics_services.google_campaign_performance", "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226", "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d"], "model.sado_analytics_services.stg_googleads__campaigns": [], "model.sado_analytics_services.stg_googleads__ad_groups": [], "model.sado_analytics_services.base_googleAds__campaigns": ["model.sado_analytics_services.stg_googleads__campaigns"], "model.sado_analytics_services.base_googleAds__accounts": ["model.sado_analytics_services.stg_googleads__campaigns"], "model.sado_analytics_services.base_googleAds__criterions": [], "model.sado_analytics_services.base_googleAds__adgroups": ["model.sado_analytics_services.stg_googleads__ad_groups"], "model.sado_analytics_services.stg_nhanhvn__depots": ["model.sado_analytics_services.online_balance", "model.sado_analytics_services.online_inventory_balance", "model.sado_analytics_services.stg_nhanhvn__inventories"], "model.sado_analytics_services.stg_nhanhvn__carriers": ["model.sado_analytics_services.orders_items"], "model.sado_analytics_services.stg_nhanhvn__users": [], "model.sado_analytics_services.stg_nhanhvn__bills": ["model.sado_analytics_services.online_balance", "model.sado_analytics_services.online_inventory_balance"], "model.sado_analytics_services.stg_nhanhvn__ordersdetails": ["model.sado_analytics_services.orders_items"], "model.sado_analytics_services.stg_nhanhvn__inventories": ["model.sado_analytics_services.current_inventory", "model.sado_analytics_services.online_inventory_balance"], "model.sado_analytics_services.stg_nhanhvn__customers": [], "model.sado_analytics_services.stg_nhanhvn__products": ["model.sado_analytics_services.online_inventory_balance"], "model.sado_analytics_services.stg_nhanhvn__categories": [], "model.sado_analytics_services.base_nhanhvn__inventories": ["model.sado_analytics_services.stg_nhanhvn__inventories"], "model.sado_analytics_services.base_nhanhvn__orders": ["model.sado_analytics_services.stg_nhanhvn__ordersdetails"], "model.sado_analytics_services.base_nhanhvn__customers": ["model.sado_analytics_services.stg_nhanhvn__customers"], "model.sado_analytics_services.base_nhanhvn__products": ["model.sado_analytics_services.stg_nhanhvn__products"], "model.sado_analytics_services.base_nhanhvn__users": ["model.sado_analytics_services.stg_nhanhvn__users"], "model.sado_analytics_services.base_nhanhvn__stores": ["model.sado_analytics_services.stg_nhanhvn__depots"], "model.sado_analytics_services.base_nhanhvn__bills": ["model.sado_analytics_services.stg_nhanhvn__bills"], "model.sado_analytics_services.base_nhanhvn__carriers": ["model.sado_analytics_services.stg_nhanhvn__carriers"], "model.sado_analytics_services.base_nhanhvn__categories": ["model.sado_analytics_services.stg_nhanhvn__categories", "model.sado_analytics_services.stg_nhanhvn__products"], "model.sado_analytics_services.stg_esms__sent_data": ["model.sado_analytics_services.sms__by__day"], "model.sado_analytics_services.stg_kiotviet__invoicepayments": ["model.sado_analytics_services.revenue_payments"], "model.sado_analytics_services.stg_kiotviet__invoicedetails": ["model.sado_analytics_services.revenue_items"], "model.sado_analytics_services.stg_kiotviet__locations": [], "model.sado_analytics_services.stg_kiotviet__users": [], "model.sado_analytics_services.stg_kiotviet__branches": ["analysis.sado_analytics_services.marketing_efforts", "model.sado_analytics_services.offline_conversion", "model.sado_analytics_services.stg_gsheet__asms", "model.sado_analytics_services.stg_gsheet__facebook_budget"], "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails": [], "model.sado_analytics_services.stg_kiotviet__categories": ["model.sado_analytics_services.stg_kiotviet__products"], "model.sado_analytics_services.stg_kiotviet__invoices": ["model.sado_analytics_services.offline_conversion", "model.sado_analytics_services.revenue"], "model.sado_analytics_services.stg_kiotviet__returnpayments": ["model.sado_analytics_services.revenue_payments"], "model.sado_analytics_services.stg_kiotviet__customers": ["model.sado_analytics_services.offline_conversion"], "model.sado_analytics_services.stg_kiotviet__returns": ["model.sado_analytics_services.revenue"], "model.sado_analytics_services.stg_kiotviet__products": ["analysis.sado_analytics_services.marketing_efforts", "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c"], "model.sado_analytics_services.stg_kiotviet__returndetails": ["model.sado_analytics_services.revenue_items"], "model.sado_analytics_services.stg_kiotviet__suppliers": [], "model.sado_analytics_services.stg_kiotviet__bankaccounts": [], "model.sado_analytics_services.stg_kiotviet__purchaseorders": [], "model.sado_analytics_services.base_kiotViet__invoices": ["model.sado_analytics_services.stg_kiotviet__invoicedetails", "model.sado_analytics_services.stg_kiotviet__invoicepayments", "model.sado_analytics_services.stg_kiotviet__invoices"], "model.sado_analytics_services.base_kiotViet__customers": ["model.sado_analytics_services.stg_kiotviet__customers"], "model.sado_analytics_services.base_kiotViet__priceBooks": [], "model.sado_analytics_services.base_kiotViet__locations": ["model.sado_analytics_services.stg_kiotviet__locations"], "model.sado_analytics_services.base_kiotViet__branches": ["model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_kiotviet__customers"], "model.sado_analytics_services.base_kiotViet__purchaseOrders": ["model.sado_analytics_services.stg_kiotviet__purchaseorderdetails", "model.sado_analytics_services.stg_kiotviet__purchaseorders", "model.sado_analytics_services.stg_kiotviet__suppliers"], "model.sado_analytics_services.base_kiotViet__bankAccounts": ["model.sado_analytics_services.stg_kiotviet__bankaccounts"], "model.sado_analytics_services.base_kiotViet__products": ["model.sado_analytics_services.stg_kiotviet__products"], "model.sado_analytics_services.base_kiotViet__users": ["model.sado_analytics_services.stg_kiotviet__users"], "model.sado_analytics_services.base_kiotViet__categories": ["model.sado_analytics_services.stg_kiotviet__categories"], "model.sado_analytics_services.base_kiotViet__returns": ["model.sado_analytics_services.stg_kiotviet__returndetails", "model.sado_analytics_services.stg_kiotviet__returnpayments", "model.sado_analytics_services.stg_kiotviet__returns"], "model.sado_analytics_services.stg_pancake__tags": ["model.sado_analytics_services.conversations_engaged"], "model.sado_analytics_services.stg_pancake__user_stats": ["model.sado_analytics_services.pancake_performance__by__users"], "model.sado_analytics_services.stg_pancake__pages": [], "model.sado_analytics_services.stg_pancake__users": [], "model.sado_analytics_services.stg_pancake__orders": ["model.sado_analytics_services.pancake_performance__by__users"], "model.sado_analytics_services.stg_pancake__posts": [], "model.sado_analytics_services.stg_pancake__conversations": ["model.sado_analytics_services.conversations_engaged"], "model.sado_analytics_services.stg_pancake__customer_engagements": [], "model.sado_analytics_services.stg_pancake__customers": [], "model.sado_analytics_services.stg_pancake__page_stats": [], "model.sado_analytics_services.base_pancake__conversations": ["model.sado_analytics_services.stg_pancake__conversations"], "model.sado_analytics_services.base_pancake__customers": ["model.sado_analytics_services.stg_pancake__customers"], "model.sado_analytics_services.base_pancake__posts": ["model.sado_analytics_services.stg_pancake__posts"], "model.sado_analytics_services.stg_5sfashion__products": [], "model.sado_analytics_services.stg_5sfashion__categories": [], "model.sado_analytics_services.base_5sfashion__product_ratings": [], "model.sado_analytics_services.base_5sfashion__provinces": [], "model.sado_analytics_services.base_5sfashion__product_variants": [], "model.sado_analytics_services.base_5sfashion__districts": [], "model.sado_analytics_services.base_5sfashion__wards": [], "model.sado_analytics_services.base_5sfashion__order_items": [], "model.sado_analytics_services.base_5sfashion__categories": ["model.sado_analytics_services.stg_5sfashion__categories"], "model.sado_analytics_services.base_5sfashion__products": ["model.sado_analytics_services.stg_5sfashion__products"], "model.sado_analytics_services.base_5sfashion__orders": [], "model.sado_analytics_services.stg_gsheet__pancake_tags": ["model.sado_analytics_services.stg_pancake__tags"], "model.sado_analytics_services.stg_gsheet__facebook_budget": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.facebook_budget"], "model.sado_analytics_services.stg_gsheet__asms": ["model.sado_analytics_services.facebook_dashboard", "model.sado_analytics_services.stg_gsheet__facebook_budget"], "model.sado_analytics_services.stg_gsheet__nhanhvnsalechannels": ["model.sado_analytics_services.base_nhanhvn__orders"], "model.sado_analytics_services.stg_gsheet__regions": ["model.sado_analytics_services.stg_kiotviet__branches"], "model.sado_analytics_services.base_gSheet__asms": ["model.sado_analytics_services.stg_gsheet__asms"], "model.sado_analytics_services.facebook_dashboard": [], "model.sado_analytics_services.rfm_movement": ["semantic_model.sado_analytics_services.rfm_movement"], "model.sado_analytics_services.revenue_items": ["analysis.sado_analytics_services.marketing_efforts", "semantic_model.sado_analytics_services.revenue_items"], "model.sado_analytics_services.revenue": ["model.sado_analytics_services.facebook_dashboard", "model.sado_analytics_services.rfm_movement", "semantic_model.sado_analytics_services.revenue"], "model.sado_analytics_services.revenue_payments": ["semantic_model.sado_analytics_services.revenue_payments"], "model.sado_analytics_services.sms__by__day": ["analysis.sado_analytics_services.marketing_efforts"], "model.sado_analytics_services.tickets": ["test.sado_analytics_services.not_null_tickets_ticket_id.6d0b33ca1c", "test.sado_analytics_services.unique_tickets_ticket_id.7bb6098968"], "model.sado_analytics_services.conversations_engaged": ["test.sado_analytics_services.not_null_conversations_engaged_conversation_id.bcf98fdb1c", "test.sado_analytics_services.unique_conversations_engaged_conversation_id.babc4a007d"], "model.sado_analytics_services.pancake_performance__by__users": ["test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29", "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58"], "model.sado_analytics_services.engagements_details": ["test.sado_analytics_services.not_null_engagements_details_engagement_id.ba4b05a1b3", "test.sado_analytics_services.unique_engagements_details_engagement_id.fa02ef7234"], "model.sado_analytics_services.analytics_sessions": ["analysis.sado_analytics_services.marketing_efforts", "test.sado_analytics_services.accepted_values_analytics_sessions_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.06fa2c3426", "test.sado_analytics_services.accepted_values_analytics_sessions_device_type__desktop__mobile__tablet.37e37cbf74", "test.sado_analytics_services.not_null_analytics_sessions_client_id.2b9337fcf7", "test.sado_analytics_services.not_null_analytics_sessions_exit_page.63a484d937", "test.sado_analytics_services.not_null_analytics_sessions_landing_page.d65707214a", "test.sado_analytics_services.not_null_analytics_sessions_session_date.9f12016762", "test.sado_analytics_services.not_null_analytics_sessions_session_id.d2b8fbe930", "test.sado_analytics_services.not_null_analytics_sessions_session_initiated.c29ed80f45", "test.sado_analytics_services.unique_analytics_sessions_session_id.5ad6d0e7b9"], "model.sado_analytics_services.analytics_users": ["test.sado_analytics_services.unique_analytics_users_client_id.5be88f272b"], "model.sado_analytics_services.analytics_events": ["test.sado_analytics_services.not_null_analytics_events_client_id.50d8c993ab", "test.sado_analytics_services.not_null_analytics_events_event_date.d3a5365c60", "test.sado_analytics_services.not_null_analytics_events_event_id.e85055ae44", "test.sado_analytics_services.not_null_analytics_events_event_name.3910fe2c81", "test.sado_analytics_services.not_null_analytics_events_event_timestamp.af5e5bebbe", "test.sado_analytics_services.not_null_analytics_events_page_path.195d70d009", "test.sado_analytics_services.not_null_analytics_events_session_id.0d1ee943e2", "test.sado_analytics_services.unique_analytics_events_event_id.4247da5290"], "model.sado_analytics_services.analytics_ecommerce": ["test.sado_analytics_services.not_null_analytics_ecommerce_client_id.a95291fa85", "test.sado_analytics_services.not_null_analytics_ecommerce_event_date.906416261f", "test.sado_analytics_services.not_null_analytics_ecommerce_event_id.6f1ed0d8fb", "test.sado_analytics_services.not_null_analytics_ecommerce_event_name.74e33efa5c", "test.sado_analytics_services.not_null_analytics_ecommerce_event_timestamp.ecb4f8891a", "test.sado_analytics_services.not_null_analytics_ecommerce_page_path.cf54588159", "test.sado_analytics_services.not_null_analytics_ecommerce_session_id.bd07b9226e", "test.sado_analytics_services.unique_analytics_ecommerce_event_id.02ed4c83a9"], "model.sado_analytics_services.facebook_performance__by_regions": [], "model.sado_analytics_services.facebook_budget": ["model.sado_analytics_services.facebook_dashboard"], "model.sado_analytics_services.facebook_performance__by_audience": [], "model.sado_analytics_services.offline_conversion": [], "model.sado_analytics_services.facebook_performance": ["analysis.sado_analytics_services.marketing_efforts", "model.sado_analytics_services.facebook_dashboard", "semantic_model.sado_analytics_services.facebook_performance"], "model.sado_analytics_services.google_campaign_performance": [], "model.sado_analytics_services.google_ad_group_performance": [], "model.sado_analytics_services.current_inventory": [], "model.sado_analytics_services.orders_items": ["model.sado_analytics_services.online_inventory_balance", "semantic_model.sado_analytics_services.online_orders_items"], "model.sado_analytics_services.online_inventory_balance": ["model.sado_analytics_services.fsn_analysis", "semantic_model.sado_analytics_services.online_inventory_balance"], "model.sado_analytics_services.online_balance": ["semantic_model.sado_analytics_services.online_balance"], "model.sado_analytics_services.fsn_analysis": [], "analysis.sado_analytics_services.marketing_efforts": [], "test.sado_analytics_services.not_null_int_analytics__events_format_event_id.64f62bf66d": [], "test.sado_analytics_services.unique_int_analytics__events_format_event_id.62a57791c8": [], "test.sado_analytics_services.not_null_int_analytics__events_format_event_date.3e5c24fe51": [], "test.sado_analytics_services.not_null_int_analytics__events_format_event_timestamp.6fa25d84a3": [], "test.sado_analytics_services.not_null_int_analytics__events_format_client_id.b145f5263a": [], "test.sado_analytics_services.not_null_int_analytics__events_format_event_name.10ddcf6861": [], "test.sado_analytics_services.accepted_values_int_analytics__events_format_device_type__desktop__mobile__tablet__smart_tv.131daf94cb": [], "test.sado_analytics_services.not_null_int_analytics__events_format_session_id.3834dbf6d6": [], "test.sado_analytics_services.accepted_values_int_analytics__events_format_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.f65db99fd2": [], "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d": [], "test.sado_analytics_services.unique_calendar_date.b4cbc0583a": [], "test.sado_analytics_services.not_null_stg_analytics__events_param_id.eba77a9c62": [], "test.sado_analytics_services.not_null_stg_analytics__events_event_id.bf1e285477": [], "test.sado_analytics_services.not_null_stg_analytics__events_event_date.f0817ea4e8": [], "test.sado_analytics_services.not_null_stg_analytics__events_event_timestamp.4538d83700": [], "test.sado_analytics_services.not_null_stg_analytics__events_client_id.4697100241": [], "test.sado_analytics_services.not_null_stg_analytics__events_event_name.12850a9ab6": [], "test.sado_analytics_services.accepted_values_stg_analytics__events_device_type__desktop__mobile__tablet.6d57b40868": [], "test.sado_analytics_services.not_null_stg_analytics__events_param_key.c5450db076": [], "test.sado_analytics_services.not_null_stg_caresoft__agents_id.718cd3c440": [], "test.sado_analytics_services.unique_stg_caresoft__agents_id.1dc507e0f7": [], "test.sado_analytics_services.unique_stg_caresoft__agents_email.90f55cfcb1": [], "test.sado_analytics_services.not_null_stg_caresoft__agents_email.360e1d9d56": [], "test.sado_analytics_services.not_null_stg_caresoft__calls_id.2fb2499c5a": [], "test.sado_analytics_services.unique_stg_caresoft__calls_id.aede802cc2": [], "test.sado_analytics_services.not_null_stg_caresoft__calls_call_id.8d621fb840": [], "test.sado_analytics_services.unique_stg_caresoft__calls_call_id.62c4fd8e66": [], "test.sado_analytics_services.not_null_stg_caresoft__contacts_contact_id.eb790c43e2": [], "test.sado_analytics_services.unique_stg_caresoft__contacts_contact_id.9463562ba4": [], "test.sado_analytics_services.not_null_stg_caresoft__tickets_ticket_id.44b9236f2a": [], "test.sado_analytics_services.unique_stg_caresoft__tickets_ticket_id.d6716e1775": [], "test.sado_analytics_services.not_null_stg_caresoft__chats_conversation_id.f2a0e81461": [], "test.sado_analytics_services.unique_stg_caresoft__chats_conversation_id.0f9e5f32bb": [], "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_custom_field_id.7857424e18": [], "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_custom_field_id.4c14dc82f5": [], "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_value_id.ff7804063b": [], "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_value_id.a076bcc09a": [], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_big_campaign.2d48ae112a": [], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_content_group.3b8f97e6ef": [], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_pic.048f4069b2": [], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_page.ce0463af60": [], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_media_type.93f27013f7": [], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_funnel.92b8a27b8c": [], "test.sado_analytics_services.not_null_stg_facebookads__campaigns_ad_type.8abacfa863": [], "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d": [], "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226": [], "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c": [], "test.sado_analytics_services.not_null_engagements_details_engagement_id.ba4b05a1b3": [], "test.sado_analytics_services.unique_engagements_details_engagement_id.fa02ef7234": [], "test.sado_analytics_services.not_null_tickets_ticket_id.6d0b33ca1c": [], "test.sado_analytics_services.unique_tickets_ticket_id.7bb6098968": [], "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29": [], "test.sado_analytics_services.not_null_conversations_engaged_conversation_id.bcf98fdb1c": [], "test.sado_analytics_services.unique_conversations_engaged_conversation_id.babc4a007d": [], "test.sado_analytics_services.not_null_analytics_ecommerce_event_id.6f1ed0d8fb": [], "test.sado_analytics_services.unique_analytics_ecommerce_event_id.02ed4c83a9": [], "test.sado_analytics_services.not_null_analytics_ecommerce_event_date.906416261f": [], "test.sado_analytics_services.not_null_analytics_ecommerce_event_timestamp.ecb4f8891a": [], "test.sado_analytics_services.not_null_analytics_ecommerce_client_id.a95291fa85": [], "test.sado_analytics_services.not_null_analytics_ecommerce_session_id.bd07b9226e": [], "test.sado_analytics_services.not_null_analytics_ecommerce_event_name.74e33efa5c": [], "test.sado_analytics_services.not_null_analytics_ecommerce_page_path.cf54588159": [], "test.sado_analytics_services.not_null_analytics_events_event_id.e85055ae44": [], "test.sado_analytics_services.unique_analytics_events_event_id.4247da5290": [], "test.sado_analytics_services.not_null_analytics_events_event_date.d3a5365c60": [], "test.sado_analytics_services.not_null_analytics_events_event_timestamp.af5e5bebbe": [], "test.sado_analytics_services.not_null_analytics_events_client_id.50d8c993ab": [], "test.sado_analytics_services.not_null_analytics_events_session_id.0d1ee943e2": [], "test.sado_analytics_services.not_null_analytics_events_event_name.3910fe2c81": [], "test.sado_analytics_services.not_null_analytics_events_page_path.195d70d009": [], "test.sado_analytics_services.not_null_analytics_sessions_session_id.d2b8fbe930": [], "test.sado_analytics_services.unique_analytics_sessions_session_id.5ad6d0e7b9": [], "test.sado_analytics_services.not_null_analytics_sessions_client_id.2b9337fcf7": [], "test.sado_analytics_services.accepted_values_analytics_sessions_device_type__desktop__mobile__tablet.37e37cbf74": [], "test.sado_analytics_services.not_null_analytics_sessions_session_date.9f12016762": [], "test.sado_analytics_services.not_null_analytics_sessions_session_initiated.c29ed80f45": [], "test.sado_analytics_services.not_null_analytics_sessions_landing_page.d65707214a": [], "test.sado_analytics_services.not_null_analytics_sessions_exit_page.63a484d937": [], "test.sado_analytics_services.accepted_values_analytics_sessions_channel_grouping__Paid_Social__Organic_Social__Direct__Organic_Search__Referral__Paid_Search__Display__Unassigned.06fa2c3426": [], "test.sado_analytics_services.unique_analytics_users_client_id.5be88f272b": [], "source.sado_analytics_services.misc.weather": ["model.sado_analytics_services.weather"], "source.sado_analytics_services.analytics.events": ["model.sado_analytics_services.base_analytics__events"], "source.sado_analytics_services.caresoft.tickets": ["model.sado_analytics_services.base_caresoft__tickets"], "source.sado_analytics_services.caresoft.ticket_details": ["model.sado_analytics_services.base_caresoft__ticket_details"], "source.sado_analytics_services.caresoft.contacts": ["model.sado_analytics_services.base_caresoft__contacts"], "source.sado_analytics_services.caresoft.contact_details": ["model.sado_analytics_services.base_caresoft__contact_details"], "source.sado_analytics_services.caresoft.calls": ["model.sado_analytics_services.base_caresoft__calls"], "source.sado_analytics_services.caresoft.chats": [], "source.sado_analytics_services.caresoft.chats_live": ["model.sado_analytics_services.base_caresoft__chats"], "source.sado_analytics_services.caresoft.chats_fb": ["model.sado_analytics_services.base_caresoft__chats"], "source.sado_analytics_services.caresoft.chats_zalo": ["model.sado_analytics_services.base_caresoft__chats"], "source.sado_analytics_services.caresoft.agents": ["model.sado_analytics_services.base_caresoft__agents"], "source.sado_analytics_services.caresoft.groups": ["model.sado_analytics_services.base_caresoft__groups"], "source.sado_analytics_services.caresoft.ticket_custom_fields": ["model.sado_analytics_services.base_caresoft__ticket_custom_fields"], "source.sado_analytics_services.facebookAds.p_AdsInsights__*": ["model.sado_analytics_services.base_facebookAds__adsInsights", "model.sado_analytics_services.stg_facebookads__campaigns"], "source.sado_analytics_services.facebookAds.p_AccountInsights__*": ["model.sado_analytics_services.base_facebookAds__accountInsights"], "source.sado_analytics_services.facebookAds.p_AudienceInsights__*": ["model.sado_analytics_services.base_facebookAds__audienceInsights"], "source.sado_analytics_services.facebookAds.p_RegionInsights__*": ["model.sado_analytics_services.base_facebookAds__regionInsights"], "source.sado_analytics_services.facebookAds.p_CreativesInsights__*": ["model.sado_analytics_services.base_facebookAds__creatives"], "source.sado_analytics_services.googleads.account_conversion_stats": [], "source.sado_analytics_services.googleads.keyword_cross_device_stats": [], "source.sado_analytics_services.googleads.hourly_account_stats": [], "source.sado_analytics_services.googleads.gender": [], "source.sado_analytics_services.googleads.ad_conversion_stats": [], "source.sado_analytics_services.googleads.search_query_conversion_stats": [], "source.sado_analytics_services.googleads.video_non_click_stats": [], "source.sado_analytics_services.googleads.ad_group_conversion_stats": [], "source.sado_analytics_services.googleads.hourly_campaign_stats": [], "source.sado_analytics_services.googleads.campaign_cross_device_stats": [], "source.sado_analytics_services.googleads.gender_non_click_stats": [], "source.sado_analytics_services.googleads.video": [], "source.sado_analytics_services.googleads.video_basic_stats": [], "source.sado_analytics_services.googleads.campaign_audience_non_click_stats": [], "source.sado_analytics_services.googleads.hourly_account_conversion_stats": [], "source.sado_analytics_services.googleads.video_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_audience": [], "source.sado_analytics_services.googleads.age_range_non_click_stats": [], "source.sado_analytics_services.googleads.account_non_click_stats": [], "source.sado_analytics_services.googleads.parental_status_basic_stats": [], "source.sado_analytics_services.googleads.ad_stats": [], "source.sado_analytics_services.googleads.hourly_ad_group_conversion_stats": [], "source.sado_analytics_services.googleads.parental_status_stats": [], "source.sado_analytics_services.googleads.bid_goal": [], "source.sado_analytics_services.googleads.ad_cross_device_stats": [], "source.sado_analytics_services.googleads.ad_group_ad_label": [], "source.sado_analytics_services.googleads.ad_group_audience_conversion_stats": [], "source.sado_analytics_services.googleads.search_query_stats": ["model.sado_analytics_services.stg_googleads__search_query_stats"], "source.sado_analytics_services.googleads.ad_group_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.budget": [], "source.sado_analytics_services.googleads.bid_goal_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_cross_device_stats": ["model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats"], "source.sado_analytics_services.googleads.age_range_stats": [], "source.sado_analytics_services.googleads.campaign_audience": [], "source.sado_analytics_services.googleads.keyword_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.campaign": ["model.sado_analytics_services.base_googleAds__campaigns"], "source.sado_analytics_services.googleads.ad_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.placement_basic_stats": [], "source.sado_analytics_services.googleads.age_range_basic_stats": [], "source.sado_analytics_services.googleads.keyword_basic_stats": ["model.sado_analytics_services.stg_googleads__keyword_stats"], "source.sado_analytics_services.googleads.parental_status_non_click_stats": [], "source.sado_analytics_services.googleads.gender_conversion_stats": [], "source.sado_analytics_services.googleads.placement_stats": [], "source.sado_analytics_services.googleads.ad_group": ["model.sado_analytics_services.base_googleAds__adgroups"], "source.sado_analytics_services.googleads.ad_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_stats": [], "source.sado_analytics_services.googleads.placement_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_stats": [], "source.sado_analytics_services.googleads.campaign_conversion_stats": ["model.sado_analytics_services.stg_googleads__campaign_conversion_stats"], "source.sado_analytics_services.googleads.budget_stats": [], "source.sado_analytics_services.googleads.account_basic_stats": [], "source.sado_analytics_services.googleads.customer": ["model.sado_analytics_services.base_googleAds__accounts"], "source.sado_analytics_services.googleads.campaign_label": [], "source.sado_analytics_services.googleads.age_range_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_audience_basic_stats": [], "source.sado_analytics_services.googleads.keyword_stats": [], "source.sado_analytics_services.googleads.hourly_ad_group_stats": [], "source.sado_analytics_services.googleads.placement": [], "source.sado_analytics_services.googleads.video_stats": [], "source.sado_analytics_services.googleads.campaign_basic_stats": ["model.sado_analytics_services.stg_googleads__campaign_stats"], "source.sado_analytics_services.googleads.ad_group_label": [], "source.sado_analytics_services.googleads.parental_status_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_stats": [], "source.sado_analytics_services.googleads.campaign_audience_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_criterion": [], "source.sado_analytics_services.googleads.hourly_bid_goal_stats": [], "source.sado_analytics_services.googleads.click_stats": [], "source.sado_analytics_services.googleads.campaign_audience_stats": [], "source.sado_analytics_services.googleads.parental_status": [], "source.sado_analytics_services.googleads.geo_stats": [], "source.sado_analytics_services.googleads.ad_group_criterion_label": [], "source.sado_analytics_services.googleads.age_range": [], "source.sado_analytics_services.googleads.geo_conversion_stats": [], "source.sado_analytics_services.googleads.hourly_campaign_conversion_stats": [], "source.sado_analytics_services.googleads.keyword": ["model.sado_analytics_services.stg_googleads__keyword_stats"], "source.sado_analytics_services.googleads.campaign_cookie_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_criterion": ["model.sado_analytics_services.base_googleAds__criterions"], "source.sado_analytics_services.googleads.paid_organic_stats": [], "source.sado_analytics_services.googleads.location_based_campaign_criterion": [], "source.sado_analytics_services.googleads.gender_stats": [], "source.sado_analytics_services.googleads.account_stats": [], "source.sado_analytics_services.googleads.shopping_product_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.product_group_stats": [], "source.sado_analytics_services.googleads.gender_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_bid_modifier": [], "source.sado_analytics_services.googleads.campaign_location_target_stats": [], "source.sado_analytics_services.googleads.ad_group_basic_stats": ["model.sado_analytics_services.stg_googleads__ad_group_stats"], "source.sado_analytics_services.googleads.keyword_conversion_stats": [], "source.sado_analytics_services.googleads.shopping_product_stats": ["model.sado_analytics_services.stg_googleads__shopping_product_stats"], "source.sado_analytics_services.googleads.placement_non_click_stats": [], "source.sado_analytics_services.googleads.bid_goal_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_non_click_stats": [], "source.sado_analytics_services.googleads.ad": [], "source.sado_analytics_services.nhanhvn.p_bills_*": ["model.sado_analytics_services.base_nhanhvn__bills"], "source.sado_analytics_services.nhanhvn.p_carriers_*": ["model.sado_analytics_services.base_nhanhvn__carriers"], "source.sado_analytics_services.nhanhvn.p_categories_*": ["model.sado_analytics_services.base_nhanhvn__categories"], "source.sado_analytics_services.nhanhvn.p_customers_*": ["model.sado_analytics_services.base_nhanhvn__customers"], "source.sado_analytics_services.nhanhvn.p_orders_*": ["model.sado_analytics_services.base_nhanhvn__orders"], "source.sado_analytics_services.nhanhvn.p_products_*": ["model.sado_analytics_services.base_nhanhvn__products"], "source.sado_analytics_services.nhanhvn.p_stores_*": ["model.sado_analytics_services.base_nhanhvn__stores"], "source.sado_analytics_services.nhanhvn.p_users_*": ["model.sado_analytics_services.base_nhanhvn__users"], "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange": ["model.sado_analytics_services.base_nhanhvn__inventories"], "source.sado_analytics_services.nhanhvn.p_webhook_orderAdd": [], "source.sado_analytics_services.nhanhvn.p_webhook_orderUpdate": [], "source.sado_analytics_services.nhanhvn.p_inventory_*": ["model.sado_analytics_services.base_nhanhvn__inventories"], "source.sado_analytics_services.esms.sms_sent_data": ["model.sado_analytics_services.stg_esms__sent_data"], "source.sado_analytics_services.kiotViet.p_products_list_*": ["model.sado_analytics_services.base_kiotViet__products"], "source.sado_analytics_services.kiotViet.p_branches_list_*": ["model.sado_analytics_services.base_kiotViet__branches"], "source.sado_analytics_services.kiotViet.p_orders_list_*": [], "source.sado_analytics_services.kiotViet.p_pricebooks_branches_*": [], "source.sado_analytics_services.kiotViet.p_surcharges_list_*": [], "source.sado_analytics_services.kiotViet.p_pricebooks_users_*": [], "source.sado_analytics_services.kiotViet.p_users_list_*": ["model.sado_analytics_services.base_kiotViet__users"], "source.sado_analytics_services.kiotViet.p_categories_list_*": ["model.sado_analytics_services.base_kiotViet__categories"], "source.sado_analytics_services.kiotViet.p_purchaseorders_list_*": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "source.sado_analytics_services.kiotViet.p_purchaseorders_list2_*": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "source.sado_analytics_services.kiotViet.p_customersGroups_list_*": [], "source.sado_analytics_services.kiotViet.p_pricebooks_customer_groups_*": [], "source.sado_analytics_services.kiotViet.p_invoices_list_*": ["model.sado_analytics_services.base_kiotViet__invoices"], "source.sado_analytics_services.kiotViet.p_invoices_list2_*": ["model.sado_analytics_services.base_kiotViet__invoices"], "source.sado_analytics_services.kiotViet.p_returns_list_*": ["model.sado_analytics_services.base_kiotViet__returns"], "source.sado_analytics_services.kiotViet.p_returns_list2_*": ["model.sado_analytics_services.base_kiotViet__returns"], "source.sado_analytics_services.kiotViet.p_bankAccounts_list_*": ["model.sado_analytics_services.base_kiotViet__bankAccounts"], "source.sado_analytics_services.kiotViet.p_saleschannels_list_*": [], "source.sado_analytics_services.kiotViet.p_customers_list_*": ["model.sado_analytics_services.base_kiotViet__customers"], "source.sado_analytics_services.kiotViet.p_locations_list_*": ["model.sado_analytics_services.base_kiotViet__locations"], "source.sado_analytics_services.kiotViet.p_products_inventory_*": [], "source.sado_analytics_services.kiotViet.p_pricebooks_list_*": [], "source.sado_analytics_services.kiotViet.p_webhook_invoice_update": ["model.sado_analytics_services.base_kiotViet__invoices"], "source.sado_analytics_services.kiotViet.p_webhook_inventory_update": [], "source.sado_analytics_services.kiotViet.p_webhook_customer_update": ["model.sado_analytics_services.base_kiotViet__customers"], "source.sado_analytics_services.pancake.users": ["model.sado_analytics_services.stg_pancake__users"], "source.sado_analytics_services.pancake.conversations": ["model.sado_analytics_services.base_pancake__conversations"], "source.sado_analytics_services.pancake.customer_engagements": ["model.sado_analytics_services.stg_pancake__customer_engagements"], "source.sado_analytics_services.pancake.pages": ["model.sado_analytics_services.stg_pancake__pages"], "source.sado_analytics_services.pancake.user_stats": ["model.sado_analytics_services.stg_pancake__user_stats"], "source.sado_analytics_services.pancake.posts": ["model.sado_analytics_services.base_pancake__posts"], "source.sado_analytics_services.pancake.tags": ["model.sado_analytics_services.stg_pancake__tags"], "source.sado_analytics_services.pancake.page": [], "source.sado_analytics_services.pancake.customers": ["model.sado_analytics_services.base_pancake__customers"], "source.sado_analytics_services.pancake.page_stats": ["model.sado_analytics_services.stg_pancake__page_stats"], "source.sado_analytics_services.pancake.pos_orders": ["model.sado_analytics_services.stg_pancake__orders"], "source.sado_analytics_services.5sfashion.products": ["model.sado_analytics_services.base_5sfashion__products"], "source.sado_analytics_services.5sfashion.product_variants": ["model.sado_analytics_services.base_5sfashion__product_variants"], "source.sado_analytics_services.5sfashion.product_ratings": ["model.sado_analytics_services.base_5sfashion__product_ratings"], "source.sado_analytics_services.5sfashion.order_items": ["model.sado_analytics_services.base_5sfashion__order_items"], "source.sado_analytics_services.5sfashion.orders": ["model.sado_analytics_services.base_5sfashion__orders"], "source.sado_analytics_services.5sfashion.categories": ["model.sado_analytics_services.base_5sfashion__categories"], "source.sado_analytics_services.5sfashion.districts": ["model.sado_analytics_services.base_5sfashion__districts"], "source.sado_analytics_services.5sfashion.wards": ["model.sado_analytics_services.base_5sfashion__wards"], "source.sado_analytics_services.5sfashion.provinces": ["model.sado_analytics_services.base_5sfashion__provinces"], "source.sado_analytics_services.gSheet._ext_asm_list": ["model.sado_analytics_services.base_gSheet__asms"], "source.sado_analytics_services.gSheet._ext_nhanhvn_salechannel": ["model.sado_analytics_services.stg_gsheet__nhanhvnsalechannels"], "source.sado_analytics_services.gSheet._ext_region": ["model.sado_analytics_services.stg_gsheet__regions"], "source.sado_analytics_services.gSheet.facebook_budget": ["model.sado_analytics_services.stg_gsheet__facebook_budget"], "source.sado_analytics_services.gSheet._ext_pancake_tags": ["model.sado_analytics_services.stg_gsheet__pancake_tags"], "metric.sado_analytics_services.income_payment": [], "metric.sado_analytics_services.return_payment": [], "metric.sado_analytics_services.num_income_payment": [], "metric.sado_analytics_services.num_return_payment": [], "metric.sado_analytics_services.gross_revenue": [], "metric.sado_analytics_services.invoice_value": ["metric.sado_analytics_services.aov", "metric.sado_analytics_services.pending_invoice"], "metric.sado_analytics_services.invoice_count": ["metric.sado_analytics_services.aov", "metric.sado_analytics_services.items_per_transaction", "metric.sado_analytics_services.pct_returned"], "metric.sado_analytics_services.return_count": ["metric.sado_analytics_services.pct_returned"], "metric.sado_analytics_services.invoice_paid_value": ["metric.sado_analytics_services.pending_invoice"], "metric.sado_analytics_services.returned_value": [], "metric.sado_analytics_services.order_discounted_value": [], "metric.sado_analytics_services.aov": [], "metric.sado_analytics_services.pending_invoice": [], "metric.sado_analytics_services.pct_returned": [], "metric.sado_analytics_services.num_customers_rfm": [], "metric.sado_analytics_services.avg_monetary_value": [], "metric.sado_analytics_services.med_monetary_value": [], "metric.sado_analytics_services.total_monetary_value": [], "metric.sado_analytics_services.avg_recency": [], "metric.sado_analytics_services.median_recency": [], "metric.sado_analytics_services.avg_freq": [], "metric.sado_analytics_services.median_freq": [], "metric.sado_analytics_services.qty_sold": ["metric.sado_analytics_services.items_per_transaction"], "metric.sado_analytics_services.qty_returned": [], "metric.sado_analytics_services.item_discounted_value": ["metric.sado_analytics_services.avg_discount_ratio"], "metric.sado_analytics_services.item_sold_value": ["metric.sado_analytics_services.avg_discount_ratio"], "metric.sado_analytics_services.avg_discount_ratio": [], "metric.sado_analytics_services.items_per_transaction": [], "metric.sado_analytics_services.fb_spend": ["metric.sado_analytics_services.online_roas", "metric.sado_analytics_services.roas"], "metric.sado_analytics_services.fb_impresions": [], "metric.sado_analytics_services.fb_clicks": [], "metric.sado_analytics_services.fb_reach": [], "metric.sado_analytics_services.fb_link_clicks": [], "metric.sado_analytics_services.fb_post_engagement": [], "metric.sado_analytics_services.fb_offline_conversion": [], "metric.sado_analytics_services.fb_offline_conversion_value": ["metric.sado_analytics_services.roas"], "metric.sado_analytics_services.fb_online_conversion": [], "metric.sado_analytics_services.fb_online_conversion_value": ["metric.sado_analytics_services.online_roas", "metric.sado_analytics_services.roas"], "metric.sado_analytics_services.fb_meta_conversion": [], "metric.sado_analytics_services.fb_meta_conversion_value": ["metric.sado_analytics_services.online_roas", "metric.sado_analytics_services.roas"], "metric.sado_analytics_services.fb_messages": [], "metric.sado_analytics_services.roas": [], "metric.sado_analytics_services.online_roas": [], "metric.sado_analytics_services.spend_7d": ["metric.sado_analytics_services.online_roas_7d", "metric.sado_analytics_services.roas_7d"], "metric.sado_analytics_services.offline_cv_7d": ["metric.sado_analytics_services.online_roas_7d", "metric.sado_analytics_services.roas_7d"], "metric.sado_analytics_services.online_cv_7d": ["metric.sado_analytics_services.online_roas_7d", "metric.sado_analytics_services.roas_7d"], "metric.sado_analytics_services.meta_cv_7d": [], "metric.sado_analytics_services.roas_7d": [], "metric.sado_analytics_services.online_roas_7d": [], "metric.sado_analytics_services.onl_dly_avg_inv_7d": ["metric.sado_analytics_services.onl_inv_dio_7d", "metric.sado_analytics_services.onl_inv_turnover"], "metric.sado_analytics_services.onl_dly_avg_qty_sold_7d": [], "metric.sado_analytics_services.onl_dly_total_qty_sold_7d": ["metric.sado_analytics_services.onl_inv_dio_7d", "metric.sado_analytics_services.onl_inv_turnover"], "metric.sado_analytics_services.onl_inv_dio_7d": [], "metric.sado_analytics_services.onl_inv_turnover": [], "metric.sado_analytics_services.onl_qty_sold": [], "metric.sado_analytics_services.onl_qty_sold_7d": [], "metric.sado_analytics_services.onl_qty_returned": [], "metric.sado_analytics_services.onl_purchase_item_value": ["metric.sado_analytics_services.onl_item_dcnt_pct"], "metric.sado_analytics_services.onl_return_item_value": [], "metric.sado_analytics_services.onl_value_sold": [], "metric.sado_analytics_services.onl_value_returned": [], "metric.sado_analytics_services.onl_item_dcnt_value": ["metric.sado_analytics_services.onl_item_dcnt_pct", "metric.sado_analytics_services.onl_order_dct_value"], "metric.sado_analytics_services.onl_item_dcnt_pct": [], "metric.sado_analytics_services.onl_total_dcnt_value": ["metric.sado_analytics_services.onl_order_dct_value"], "metric.sado_analytics_services.onl_order_dct_value": [], "metric.sado_analytics_services.onl_purchase_count": ["metric.sado_analytics_services.onl_avg_fulfillment_time", "metric.sado_analytics_services.onl_return_rate"], "metric.sado_analytics_services.onl_return_count": ["metric.sado_analytics_services.onl_return_rate"], "metric.sado_analytics_services.onl_total_fulfillment_time": ["metric.sado_analytics_services.onl_avg_fulfillment_time"], "metric.sado_analytics_services.onl_avg_fulfillment_time": [], "metric.sado_analytics_services.onl_return_rate": [], "metric.sado_analytics_services.onl_balance_value": [], "metric.sado_analytics_services.onl_value_in": [], "metric.sado_analytics_services.onl_value_out": [], "metric.sado_analytics_services.onl_balance_qty": [], "metric.sado_analytics_services.onl_qty_in": [], "metric.sado_analytics_services.onl_qty_out": [], "semantic_model.sado_analytics_services.revenue_payments": ["metric.sado_analytics_services.income_payment", "metric.sado_analytics_services.num_income_payment", "metric.sado_analytics_services.num_return_payment", "metric.sado_analytics_services.return_payment"], "semantic_model.sado_analytics_services.revenue": ["metric.sado_analytics_services.gross_revenue", "metric.sado_analytics_services.invoice_count", "metric.sado_analytics_services.invoice_paid_value", "metric.sado_analytics_services.invoice_value", "metric.sado_analytics_services.order_discounted_value", "metric.sado_analytics_services.return_count", "metric.sado_analytics_services.returned_value"], "semantic_model.sado_analytics_services.rfm_movement": ["metric.sado_analytics_services.avg_freq", "metric.sado_analytics_services.avg_monetary_value", "metric.sado_analytics_services.avg_recency", "metric.sado_analytics_services.med_monetary_value", "metric.sado_analytics_services.median_freq", "metric.sado_analytics_services.median_recency", "metric.sado_analytics_services.num_customers_rfm", "metric.sado_analytics_services.total_monetary_value"], "semantic_model.sado_analytics_services.revenue_items": ["metric.sado_analytics_services.item_discounted_value", "metric.sado_analytics_services.item_sold_value", "metric.sado_analytics_services.qty_returned", "metric.sado_analytics_services.qty_sold"], "semantic_model.sado_analytics_services.facebook_performance": ["metric.sado_analytics_services.fb_clicks", "metric.sado_analytics_services.fb_impresions", "metric.sado_analytics_services.fb_link_clicks", "metric.sado_analytics_services.fb_messages", "metric.sado_analytics_services.fb_meta_conversion", "metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_offline_conversion", "metric.sado_analytics_services.fb_offline_conversion_value", "metric.sado_analytics_services.fb_online_conversion", "metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_post_engagement", "metric.sado_analytics_services.fb_reach", "metric.sado_analytics_services.fb_spend", "metric.sado_analytics_services.meta_cv_7d", "metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"], "semantic_model.sado_analytics_services.online_inventory_balance": ["metric.sado_analytics_services.onl_dly_avg_inv_7d", "metric.sado_analytics_services.onl_dly_avg_qty_sold_7d", "metric.sado_analytics_services.onl_dly_total_qty_sold_7d"], "semantic_model.sado_analytics_services.online_orders_items": ["metric.sado_analytics_services.onl_item_dcnt_value", "metric.sado_analytics_services.onl_purchase_count", "metric.sado_analytics_services.onl_purchase_item_value", "metric.sado_analytics_services.onl_qty_returned", "metric.sado_analytics_services.onl_qty_sold", "metric.sado_analytics_services.onl_qty_sold_7d", "metric.sado_analytics_services.onl_return_count", "metric.sado_analytics_services.onl_return_item_value", "metric.sado_analytics_services.onl_total_dcnt_value", "metric.sado_analytics_services.onl_total_fulfillment_time", "metric.sado_analytics_services.onl_value_returned", "metric.sado_analytics_services.onl_value_sold"], "semantic_model.sado_analytics_services.online_balance": ["metric.sado_analytics_services.onl_balance_qty", "metric.sado_analytics_services.onl_balance_value", "metric.sado_analytics_services.onl_qty_in", "metric.sado_analytics_services.onl_qty_out", "metric.sado_analytics_services.onl_value_in", "metric.sado_analytics_services.onl_value_out"]}, "group_map": {}, "semantic_models": {"semantic_model.sado_analytics_services.revenue_payments": {"name": "revenue_payments", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_payments.yml", "original_file_path": "models/marts/sales/semantic__revenue_payments.yml", "unique_id": "semantic_model.sado_analytics_services.revenue_payments", "fqn": ["sado_analytics_services", "marts", "sales", "revenue_payments"], "model": "ref('revenue_payments')", "node_relation": {"alias": "revenue_payments", "schema_name": "dbt_prod_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue_payments`"}, "description": "payments for revenue with each payment_id associate with a transaction", "label": null, "defaults": {"agg_time_dimension": "transaction_date"}, "entities": [{"name": "transaction_payment", "type": "primary", "description": null, "label": null, "role": null, "expr": "concat(transaction_id, '.',payment_id)"}, {"name": "branch", "type": "foreign", "description": null, "label": null, "role": null, "expr": "branch_id"}, {"name": "customer", "type": "foreign", "description": null, "label": null, "role": null, "expr": "customer_id"}, {"name": "employee", "type": "foreign", "description": null, "label": null, "role": null, "expr": "employee_id"}], "measures": [{"name": "num_payments", "agg": "count_distinct", "description": "no payments", "label": null, "create_metric": false, "expr": "concat(transaction_id,'.',payment_id)", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "payment_value", "agg": "sum", "description": "total payments", "label": null, "create_metric": false, "expr": "payment_amount", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "transaction_date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(transaction_date)", "metadata": null}, {"name": "payment_date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(payment_date)", "metadata": null}, {"name": "transaction_type", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "transaction_type", "metadata": null}, {"name": "payment_method", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "payment_method", "metadata": null}, {"name": "payment_status", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "payment_status", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.revenue_payments"]}, "refs": [{"name": "revenue_payments", "package": null, "version": null}], "created_at": 1703652761.6648612, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.revenue": {"name": "revenue", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "semantic_model.sado_analytics_services.revenue", "fqn": ["sado_analytics_services", "marts", "sales", "revenue"], "model": "ref('revenue')", "node_relation": {"alias": "revenue", "schema_name": "dbt_prod_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue`"}, "description": "revenue fact table with single revenue stream per row, excluding terminated transaction", "label": null, "defaults": {"agg_time_dimension": "transaction_date"}, "entities": [{"name": "transaction", "type": "primary", "description": null, "label": null, "role": null, "expr": "transaction_id"}, {"name": "branch", "type": "foreign", "description": null, "label": null, "role": null, "expr": "branch_id"}, {"name": "customer", "type": "foreign", "description": null, "label": null, "role": null, "expr": "customer_id"}, {"name": "employee", "type": "foreign", "description": null, "label": null, "role": null, "expr": "employee_id"}], "measures": [{"name": "transaction_count", "agg": "count_distinct", "description": "total number of transaction", "label": null, "create_metric": false, "expr": "transaction_id", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "total_transaction_value", "agg": "sum", "description": "total value sold", "label": null, "create_metric": false, "expr": "total", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "received_transaction_value", "agg": "sum", "description": "total revenue received via payments", "label": null, "create_metric": false, "expr": "total_payment", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "return_fee", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "return_fee", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "order_discount", "agg": "sum", "description": "total order discount value", "label": null, "create_metric": false, "expr": "discount", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "transaction_date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(transaction_date)", "metadata": null}, {"name": "transaction_type", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "transaction_type", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.revenue"]}, "refs": [{"name": "revenue", "package": null, "version": null}], "created_at": 1703652761.6881542, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.rfm_movement": {"name": "rfm_movement", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "semantic_model.sado_analytics_services.rfm_movement", "fqn": ["sado_analytics_services", "marts", "sales", "rfm_movement"], "model": "ref('rfm_movement')", "node_relation": {"alias": "rfm_movement", "schema_name": "dbt_prod_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`"}, "description": "rfm segmentation semantic model", "label": null, "defaults": {"agg_time_dimension": "start_of_month"}, "entities": [{"name": "rfm_customer", "type": "primary", "description": null, "label": null, "role": null, "expr": "customer_id"}], "measures": [{"name": "num_customers", "agg": "count_distinct", "description": null, "label": null, "create_metric": false, "expr": "customer_id", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "avg_monetary_value", "agg": "average", "description": null, "label": null, "create_metric": false, "expr": "monetary", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "median_monetary_value", "agg": "median", "description": null, "label": null, "create_metric": false, "expr": "monetary", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "total_monetary_value", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "monetary", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "avg_recency", "agg": "average", "description": null, "label": null, "create_metric": false, "expr": "recency", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "median_recency", "agg": "median", "description": null, "label": null, "create_metric": false, "expr": "recency", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "avg_freq", "agg": "average", "description": null, "label": null, "create_metric": false, "expr": "frequency", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "median_freq", "agg": "median", "description": null, "label": null, "create_metric": false, "expr": "frequency", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "segment", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "segment", "metadata": null}, {"name": "start_of_month", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "start_of_month", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.rfm_movement"]}, "refs": [{"name": "rfm_movement", "package": null, "version": null}], "created_at": 1703652761.7057853, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.revenue_items": {"name": "revenue_items", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "semantic_model.sado_analytics_services.revenue_items", "fqn": ["sado_analytics_services", "marts", "sales", "revenue_items"], "model": "ref('revenue_items')", "node_relation": {"alias": "revenue_items", "schema_name": "dbt_prod_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue_items`"}, "description": "revenue fact table with single revenue stream per row, excluding terminated transaction", "label": null, "defaults": {"agg_time_dimension": "transaction_date"}, "entities": [{"name": "transaction_item", "type": "primary", "description": null, "label": null, "role": null, "expr": "concat(transaction_id, '.',product_id)"}, {"name": "branch", "type": "foreign", "description": null, "label": null, "role": null, "expr": "branch_id"}, {"name": "customer", "type": "foreign", "description": null, "label": null, "role": null, "expr": "customer_id"}, {"name": "employee", "type": "foreign", "description": null, "label": null, "role": null, "expr": "employee_id"}, {"name": "product", "type": "foreign", "description": null, "label": null, "role": null, "expr": "product_id"}], "measures": [{"name": "num_items", "agg": "sum", "description": "total number of item_sold", "label": null, "create_metric": false, "expr": "quantity", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "discounted_value", "agg": "sum", "description": "value discounted for item", "label": null, "create_metric": false, "expr": "discount", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "item_value", "agg": "sum", "description": "value of item on transaction", "label": null, "create_metric": false, "expr": "subtotal", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "transaction_date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(transaction_date)", "metadata": null}, {"name": "transaction_type", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "transaction_type", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.revenue_items"]}, "refs": [{"name": "revenue_items", "package": null, "version": null}], "created_at": 1703652761.7322855, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.facebook_performance": {"name": "facebook_performance", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "semantic_model.sado_analytics_services.facebook_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_performance"], "model": "ref('facebook_performance')", "node_relation": {"alias": "facebook_performance", "schema_name": "dbt_prod_marketing", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance`"}, "description": "Facebook performance metrics", "label": null, "defaults": {"agg_time_dimension": "date"}, "entities": [{"name": "campaign_date", "type": "primary", "description": null, "label": null, "role": null, "expr": "concat(campaign_name,\".\",unix_date(date_start))"}], "measures": [{"name": "spend", "agg": "sum", "description": "total spend on facebook ads", "label": null, "create_metric": false, "expr": "spend", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "impressions", "agg": "sum", "description": "total FB ads impressions", "label": null, "create_metric": false, "expr": "impressions", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "clicks", "agg": "sum", "description": "total FB ads clicks", "label": null, "create_metric": false, "expr": "clicks", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "reach", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "reach", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "link_click", "agg": "sum", "description": "total FB ads link clicks", "label": null, "create_metric": false, "expr": "link_click", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "post_engagement", "agg": "sum", "description": "total FB ads post engagements", "label": null, "create_metric": false, "expr": "post_engagement", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "offline_conversion", "agg": "sum", "description": "total offline transactions matched by FB", "label": null, "create_metric": false, "expr": "offline_conversion_purchase", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "offline_conversion_value", "agg": "sum", "description": "total offline transactions value matched by FB", "label": null, "create_metric": false, "expr": "offline_conversion_purchase_value", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "online_conversion", "agg": "sum", "description": "total online transactions attributed for ads, captured via pixel", "label": null, "create_metric": false, "expr": "pixel_purchase", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "online_conversion_value", "agg": "sum", "description": "total online transactions value attributed for ads, captured via pixel", "label": null, "create_metric": false, "expr": "pixel_purchase_value", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "meta_conversion", "agg": "sum", "description": "total transactions attributed for ads, captured directly on facebook", "label": null, "create_metric": false, "expr": "meta_purchase", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "meta_conversion_value", "agg": "sum", "description": "total transactions value attributed for ads, captured directly on facebook", "label": null, "create_metric": false, "expr": "meta_purchase_value", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "messages", "agg": "sum", "description": "number of messages generated from ads", "label": null, "create_metric": false, "expr": "messaging_conversation_started_7d", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(date_start)", "metadata": null}, {"name": "account", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "account_name", "metadata": null}, {"name": "campaign", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "campaign_name", "metadata": null}, {"name": "event", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "big_campaign", "metadata": null}, {"name": "pic", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "pic", "metadata": null}, {"name": "content_group", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "content_group", "metadata": null}, {"name": "page", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "page", "metadata": null}, {"name": "promoted_productline", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "promoted_productline", "metadata": null}, {"name": "media", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "media_type", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.facebook_performance"]}, "refs": [{"name": "facebook_performance", "package": null, "version": null}], "created_at": 1703652761.975783, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.online_inventory_balance": {"name": "online_inventory_balance", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_inventory_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_inventory_balance.yml", "unique_id": "semantic_model.sado_analytics_services.online_inventory_balance", "fqn": ["sado_analytics_services", "marts", "online_sales", "online_inventory_balance"], "model": "ref('online_inventory_balance')", "node_relation": {"alias": "online_inventory_balance", "schema_name": "dbt_prod_online_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`online_inventory_balance`"}, "description": null, "label": null, "defaults": {"agg_time_dimension": "date"}, "entities": [{"name": "product_date", "type": "primary", "description": null, "label": null, "role": null, "expr": "concat(product_id,'.',unix_date(date))"}, {"name": "product", "type": "foreign", "description": null, "label": null, "role": null, "expr": "product_id"}], "measures": [{"name": "onl_dly_avg_remain", "agg": "average", "description": null, "label": null, "create_metric": false, "expr": "daily_average_remain", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "onl_dly_avg_qty_sold", "agg": "average", "description": null, "label": null, "create_metric": false, "expr": "daily_qty_sold", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "onl_dly_total_qty_sold", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "daily_qty_sold", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "depot", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "depot_name,", "metadata": null}, {"name": "date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.online_inventory_balance"]}, "refs": [{"name": "online_inventory_balance", "package": null, "version": null}], "created_at": 1703652762.0403478, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.online_orders_items": {"name": "online_orders_items", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__orders_items.yml", "original_file_path": "models/marts/online_sales/semantic__orders_items.yml", "unique_id": "semantic_model.sado_analytics_services.online_orders_items", "fqn": ["sado_analytics_services", "marts", "online_sales", "online_orders_items"], "model": "ref('orders_items')", "node_relation": {"alias": "orders_items", "schema_name": "dbt_prod_online_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`orders_items`"}, "description": "revenue fact table for online sales recorded on nhanhvn", "label": null, "defaults": {"agg_time_dimension": "created_date"}, "entities": [{"name": "order_item", "type": "primary", "description": null, "label": null, "role": null, "expr": "concat(order_id,'.',product_id)"}, {"name": "customer", "type": "foreign", "description": null, "label": null, "role": null, "expr": "customer_id"}, {"name": "employee", "type": "foreign", "description": null, "label": null, "role": null, "expr": "created_by_id"}, {"name": "product", "type": "foreign", "description": null, "label": null, "role": null, "expr": "product_id"}], "measures": [{"name": "onl_items_sold", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "quantity", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "onl_items_sold_value", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "price", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "onl_items_sold_gross", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "item_gross_amount", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "onl_items_discounted_value", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "item_discount", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "onl_order_count", "agg": "count_distinct", "description": null, "label": null, "create_metric": false, "expr": "order_id", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "onl_order_discount_value", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "order_discount", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "onl_fulfillment_time", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "fulfillment_time", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "created_date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(created_date)", "metadata": null}, {"name": "sale_channel", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "sale_channel", "metadata": null}, {"name": "depot", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "depot_name", "metadata": null}, {"name": "status", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "order_status", "metadata": null}, {"name": "type", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "order_type", "metadata": null}, {"name": "service", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "service_name", "metadata": null}, {"name": "traffic_source", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "traffic_source_name", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.orders_items"]}, "refs": [{"name": "orders_items", "package": null, "version": null}], "created_at": 1703652762.073652, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.online_balance": {"name": "online_balance", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/online_sales/semantic__online_balance.yml", "original_file_path": "models/marts/online_sales/semantic__online_balance.yml", "unique_id": "semantic_model.sado_analytics_services.online_balance", "fqn": ["sado_analytics_services", "marts", "online_sales", "online_balance"], "model": "ref('online_balance')", "node_relation": {"alias": "online_balance", "schema_name": "dbt_prod_online_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`online_balance`"}, "description": "Online revenue calculated by invoices, include inventory In-Out", "label": null, "defaults": {"agg_time_dimension": "bill_date"}, "entities": [{"name": "bills", "type": "primary", "description": null, "label": null, "role": null, "expr": "concat(bill_id,'.',product_id)"}, {"name": "order", "type": "foreign", "description": null, "label": null, "role": null, "expr": "order_id"}, {"name": "customer", "type": "foreign", "description": null, "label": null, "role": null, "expr": "customer_id"}, {"name": "employee", "type": "foreign", "description": null, "label": null, "role": null, "expr": "created_by_id"}, {"name": "product", "type": "foreign", "description": null, "label": null, "role": null, "expr": "product_id"}], "measures": [{"name": "qty_in_out", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "quantity", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "value_in_out", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "item_net_amount", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "created_date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(created_date)", "metadata": null}, {"name": "bill_date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(created_date)", "metadata": null}, {"name": "depot", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "depot_name", "metadata": null}, {"name": "type", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "bill_type", "metadata": null}, {"name": "mode", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "bill_mode", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.online_balance"]}, "refs": [{"name": "online_balance", "package": null, "version": null}], "created_at": 1703652762.1086416, "config": {"enabled": true}, "primary_entity": null}}}