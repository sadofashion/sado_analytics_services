{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v10.json", "dbt_version": "1.6.6", "generated_at": "2024-11-22T09:37:23.732512Z", "invocation_id": "bbb8162b-3c5e-410b-be4b-5b299c6fb4b7", "env": {}, "project_name": "sado_analytics_services", "project_id": "148c6db774f961ddb86f6e2712b91cb0", "user_id": "290aa911-45b8-402b-a50b-dc81b86f7fe4", "send_anonymous_usage_stats": true, "adapter_type": "bigquery"}, "nodes": {"model.sado_analytics_services.fct__constructing_tasks": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "fct__constructing_tasks", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/fct__constructing_tasks.sql", "original_file_path": "models/marts/fct__constructing_tasks.sql", "unique_id": "model.sado_analytics_services.fct__constructing_tasks", "fqn": ["sado_analytics_services", "marts", "fct__constructing_tasks"], "alias": "fct__constructing_tasks", "checksum": {"name": "sha256", "checksum": "67eb9f5aeeacee7b82c568a40a74236403d899684c0bcf12ccfd1b3cb9606b40"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["fact", "view"], "meta": {"joins": [{"join": "calendar", "type": "right", "sql_on": "${fct__constructing_tasks.deadline} = ${calendar.date}"}, {"join": "fct__construction_estimates", "sql_on": "${fct__construction_estimates.project_id} = ${fct__constructing_tasks.project_id}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view"], "description": "", "columns": {"project_id": {"name": "project_id", "description": "", "meta": {"dimension": {"type": "string"}, "metrics": {"m_num_projects": {"type": "count_distinct", "label": "Num Projects"}, "m_num_accepted_on_first_review": {"type": "count_distinct", "label": "#Tasks accepted on first review", "filters": [{"task_name": "6.S\u1eeda ch\u1eefa l\u1ed7i (n\u1ebfu c\u00f3)"}, {"deadline": "null"}]}, "m_num_accepted_on_second_review": {"type": "count_distinct", "label": "#Tasks accepted on second review", "filters": [{"task_name": "7.Nghi\u1ec7m thu cu\u1ed1i"}, {"deadline": "!null"}]}, "m_project_transfer_on_time": {"type": "count_distinct", "label": "#Projects transferred on time", "filters": [{"task_group_name": "1.Quy tr\u00ecnh thi c\u00f4ng"}, {"task_name": "4.B\u00e0n giao"}, {"flag": ["\u0110\u00fang Deadline", "Tr\u01b0\u1edbc Deadline"]}]}, "m_pct_project_transfer_on_time": {"type": "number", "label": "%Projects transferred on time", "sql": "safe_divide(${m_project_transfer_on_time},${m_num_projects})", "format": "percent", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "", "meta": {"dimension": {"type": "string", "label": "Project Name"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asm": {"name": "asm", "description": "", "meta": {"dimension": {"type": "string", "label": "ASM Region"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "task_id": {"name": "task_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_tasks": {"type": "count_distinct", "label": "#Tasks", "filters": [{"deadline": "!null"}]}, "m_num_finished_tasks": {"type": "count_distinct", "label": "#Tasks finished", "filters": [{"finish_date": "!null"}]}, "m_pct_task_finished": {"type": "number", "label": "%Tasks finished", "sql": "safe_divide(${m_num_finished_tasks},${m_num_tasks})", "format": "percent", "round": 2}, "m_num_unfinished_tasks": {"type": "count_distinct", "label": "#Tasks unfinished", "filters": [{"finish_date": "null"}]}, "m_num_tasks_late": {"type": "count_distinct", "label": "#Tasks missed deadline", "filters": [{"flag": "Tr\u1ec5 Deadline"}]}, "m_num_tasks_on_time": {"type": "count_distinct", "label": "#Tasks meet deadline", "filters": [{"flag": ["\u0110\u00fang Deadline", "Tr\u01b0\u1edbc Deadline"]}]}, "m_pct_tasks_on_time": {"type": "number", "label": "%Tasks meet deadline", "sql": "safe_divide(${m_num_tasks_on_time},${m_num_tasks})", "format": "percent", "round": 2}, "m_document_task": {"type": "count_distinct", "label": "#Document tasks", "filters": [{"task_group_name": "2.Ho\u00e0n thi\u1ec7n h\u1ed3 s\u01a1 quy\u1ebft to\u00e1n"}]}, "m_document_task_on_time": {"type": "count_distinct", "label": "#Document tasks meet deadline", "filters": [{"task_group_name": "2.Ho\u00e0n thi\u1ec7n h\u1ed3 s\u01a1 quy\u1ebft to\u00e1n"}, {"flag": ["\u0110\u00fang Deadline", "Tr\u01b0\u1edbc Deadline"]}]}, "m_pct_document_task_on_time": {"type": "number", "label": "%Document tasks meet deadline", "sql": "safe_divide(${m_document_task_on_time},${m_document_task})", "format": "percent", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "task_group_name": {"name": "task_group_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "task_name": {"name": "task_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "deadline": {"name": "deadline", "description": "", "meta": {"dimension": {"type": "date"}, "metrics": {"m_num_deadlines": {"type": "count", "label": "Num Deadlines"}, "m_deadline": {"type": "date", "label": "Deadline", "sql": "max(${TABLE}.deadline)"}, "m_deadline_status": {"type": "string", "label": "Deadline status", "sql": "max(case when ${TABLE}.finish_date is null then 'Ch\u01b0a ho\u00e0n th\u00e0nh' when ${TABLE}.finish_date > ${TABLE}.deadline then 'Tr\u1ec5 Deadline' when ${TABLE}.finish_date <= ${TABLE}.deadline then '\u0110\u00fang Deadline' end)"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "finish_date": {"name": "finish_date", "description": "", "meta": {"dimension": {"type": "date"}, "metrics": {"m_finish_date": {"type": "date", "label": "Finish date", "sql": "max(${TABLE}.finish_date)"}, "m_acceptance_date": {"type": "date", "label": "Acceptance date", "sql": "max(case when ${TABLE}.task_name in ('preliminary_acceptance_review','final_acceptance_review') then ${TABLE}.finish_date end)"}, "m_avg_days_to_finish": {"type": "average", "label": "Avg days to finish", "sql": "greatest(date_diff(${TABLE}.finish_date,${TABLE}.previous_task_finish_date,day),0)"}, "m_total_days_to_finish": {"type": "sum", "label": "Total days till acceptance", "sql": "date_diff(${TABLE}.finish_date,${TABLE}.previous_task_finish_date,day)"}, "m_avg_days_to_construct": {"type": "average", "label": "Avg days to construct", "sql": "greatest(date_diff(${TABLE}.finish_date,${TABLE}.previous_task_finish_date,day),0)", "filters": [{"task_name": ["4.B\u00e0n giao", "6.S\u1eeda ch\u1eefa l\u1ed7i (n\u1ebfu c\u00f3)"]}, {"deadline": "!null"}]}, "m_avg_days_to_fix_defect": {"type": "average", "label": "Avg days to fix defect", "sql": "date_diff(${TABLE}.finish_date,${TABLE}.previous_task_finish_date,day)", "filters": [{"task_name": "6.S\u1eeda ch\u1eefa l\u1ed7i (n\u1ebfu c\u00f3)"}]}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "flag": {"name": "flag", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "previous_task_finish_date": {"name": "previous_task_finish_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "construction_type": {"name": "construction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "review_start_date": {"name": "review_start_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "area_sqm": {"name": "area_sqm", "description": "", "meta": {"dimension": {"type": "number"}, "metrics": {"m_total_area": {"type": "sum", "label": "Total area", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "frontage": {"name": "frontage", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "type": "right", "sql_on": "${fct__constructing_tasks.deadline} = ${calendar.date}"}, {"join": "fct__construction_estimates", "sql_on": "${fct__construction_estimates.project_id} = ${fct__constructing_tasks.project_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/fct__constructing_tasks.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "type": "right", "sql_on": "${fct__constructing_tasks.deadline} = ${calendar.date}"}, {"join": "fct__construction_estimates", "sql_on": "${fct__construction_estimates.project_id} = ${fct__constructing_tasks.project_id}"}]}, "tags": ["fact", "view"]}, "created_at": 1732268179.688203, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`fct__constructing_tasks`", "raw_code": "{{\n  config(\n    materialized = 'view',\n    tags = ['fact','view']\n    )\n}}\n\nwith raw_ as (\n    select \n        c.project_id,\n        c.branch_name,\n        c.asm,\n        c.created_at,\n        c.province,\n        c.construction_type,\n        c.review_start_date,\n        c.project_id||\":pw:\"||paper_works.type as task_id,\n        \"2.Ho\u00e0n thi\u1ec7n h\u1ed3 s\u01a1 quy\u1ebft to\u00e1n\" as task_group_name,\n        paper_works.type as task_name,\n        paper_works.deadline,\n        paper_works.finish_date,\n        case\n            when coalesce(paper_works.finish_date,current_date) > paper_works.deadline then \"Tr\u1ec5 Deadline\"\n            when paper_works.finish_date = paper_works.deadline then \"\u0110\u00fang Deadline\"\n            when paper_works.finish_date < paper_works.deadline then \"Tr\u01b0\u1edbc Deadline\"\n        end as flag\n    from {{ ref(\"stg_gsheet__construction\") }} c\n    left join unnest(c.paper_works) paper_works\n\n    union all \n\n    select \n        c.project_id,\n        c.branch_name,\n        c.asm,\n        c.created_at,\n        c.province,\n        c.construction_type,\n        c.review_start_date,\n        c.project_id||\":pc:\"||procedure.type as task_id,\n        \"1.Quy tr\u00ecnh thi c\u00f4ng\" as task_group_name,\n        procedure.step_num ||\".\"||procedure.type as task_name,\n        procedure.deadline,\n        procedure.finish_date,\n        case\n            when coalesce(procedure.finish_date,current_date) > procedure.deadline then \"Tr\u1ec5 Deadline\"\n            when procedure.finish_date = procedure.deadline then \"\u0110\u00fang Deadline\"\n            when procedure.finish_date < procedure.deadline then \"Tr\u01b0\u1edbc Deadline\"\n        end as flag\n    from {{ ref(\"stg_gsheet__construction\") }} c\n    left join unnest(c.procedure) procedure\n)\nselect raw_.*,\ncoalesce(lag(finish_date) over (partition by project_id,task_group_name order by task_name),review_start_date) as previous_task_finish_date,\nb.area_sqm,\nb.frontage,\nfrom raw_ \nleft join {{ ref(\"dim__branches\") }} b on raw_.branch_name = b.branch_name\nwhere deadline is not null", "language": "sql", "refs": [{"name": "stg_gsheet__construction", "package": null, "version": null}, {"name": "stg_gsheet__construction", "package": null, "version": null}, {"name": "dim__branches", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_gsheet__construction", "model.sado_analytics_services.dim__branches"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/fct__constructing_tasks.sql", "compiled": true, "compiled_code": "\n\nwith raw_ as (\n    select \n        c.project_id,\n        c.branch_name,\n        c.asm,\n        c.created_at,\n        c.province,\n        c.construction_type,\n        c.review_start_date,\n        c.project_id||\":pw:\"||paper_works.type as task_id,\n        \"2.Ho\u00e0n thi\u1ec7n h\u1ed3 s\u01a1 quy\u1ebft to\u00e1n\" as task_group_name,\n        paper_works.type as task_name,\n        paper_works.deadline,\n        paper_works.finish_date,\n        case\n            when coalesce(paper_works.finish_date,current_date) > paper_works.deadline then \"Tr\u1ec5 Deadline\"\n            when paper_works.finish_date = paper_works.deadline then \"\u0110\u00fang Deadline\"\n            when paper_works.finish_date < paper_works.deadline then \"Tr\u01b0\u1edbc Deadline\"\n        end as flag\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__construction` c\n    left join unnest(c.paper_works) paper_works\n\n    union all \n\n    select \n        c.project_id,\n        c.branch_name,\n        c.asm,\n        c.created_at,\n        c.province,\n        c.construction_type,\n        c.review_start_date,\n        c.project_id||\":pc:\"||procedure.type as task_id,\n        \"1.Quy tr\u00ecnh thi c\u00f4ng\" as task_group_name,\n        procedure.step_num ||\".\"||procedure.type as task_name,\n        procedure.deadline,\n        procedure.finish_date,\n        case\n            when coalesce(procedure.finish_date,current_date) > procedure.deadline then \"Tr\u1ec5 Deadline\"\n            when procedure.finish_date = procedure.deadline then \"\u0110\u00fang Deadline\"\n            when procedure.finish_date < procedure.deadline then \"Tr\u01b0\u1edbc Deadline\"\n        end as flag\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__construction` c\n    left join unnest(c.procedure) procedure\n)\nselect raw_.*,\ncoalesce(lag(finish_date) over (partition by project_id,task_group_name order by task_name),review_start_date) as previous_task_finish_date,\nb.area_sqm,\nb.frontage,\nfrom raw_ \nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on raw_.branch_name = b.branch_name\nwhere deadline is not null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__construction_estimates": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "fct__construction_estimates", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/fct__construction_estimates.sql", "original_file_path": "models/marts/fct__construction_estimates.sql", "unique_id": "model.sado_analytics_services.fct__construction_estimates", "fqn": ["sado_analytics_services", "marts", "fct__construction_estimates"], "alias": "fct__construction_estimates", "checksum": {"name": "sha256", "checksum": "23ddba790732be8b0de67b74517f19ac8501b710ceec20741b556f756c96311c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["fact", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view"], "description": "", "columns": {"project_id": {"name": "project_id", "description": "", "meta": {"dimension": {"type": "string"}, "metrics": {"m_num_projects": {"type": "count_distinct", "label": "Num Projects"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "", "meta": {"dimension": {"type": "string", "label": "Project Name"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asm": {"name": "asm", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost_category": {"name": "cost_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actual": {"name": "actual", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_actual": {"type": "sum", "label": "Actual cost", "compact": "millions", "round": 0, "filters": [{"cost_category": "!total"}]}, "m_avg_cost_per_project": {"type": "number", "label": "Avg cost per project", "compact": "millions", "sql": "safe_divide(${m_actual},${m_num_projects})", "round": 1}, "m_pct_overrun": {"type": "number", "label": "% Overrun", "sql": "safe_divide(${m_actual},${m_estimate}) - 1", "format": "percent", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "estimate": {"name": "estimate", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_estimate": {"type": "sum", "label": "Estimated cost", "compact": "millions", "round": 0, "filters": [{"cost_category": "!total"}]}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "area_sqm": {"name": "area_sqm", "description": "", "meta": {"dimension": {"type": "number"}, "metrics": {"m_total_area": {"type": "sum", "label": "Total Area", "round": 0, "sql": "${TABLE}.area_sqm/6"}, "m_avg_area_per_project": {"type": "number", "label": "Avg Area per project", "sql": "safe_divide(${m_total_area},${m_num_projects})", "round": 0}, "m_cost_per_sqm": {"type": "number", "label": "Cost per sqm", "sql": "safe_divide(${m_actual},${m_total_area})", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "frontage": {"name": "frontage", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/fct__construction_estimates.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["fact", "view"]}, "created_at": 1732268179.6953514, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`fct__construction_estimates`", "raw_code": "{{\n  config(\n    materialized = 'view',\n    tags = ['fact','view']\n    )\n}}\n\nwith estimates as (\n    select distinct\n        c.project_id,\n        c.branch_name,\n        c.asm,\n        c.created_at,\n        c.province,\n        setup_cost.*,\n    from {{ ref(\"stg_gsheet__construction\") }} c\n    left join unnest(c.setup_cost) setup_cost\n)\n\nselect \n    e.* ,\n    b.area_sqm,\n    b.frontage,\nfrom estimates e\nleft join {{ ref(\"dim__branches\") }} b on e.branch_name = b.branch_name", "language": "sql", "refs": [{"name": "stg_gsheet__construction", "package": null, "version": null}, {"name": "dim__branches", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_gsheet__construction", "model.sado_analytics_services.dim__branches"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/fct__construction_estimates.sql", "compiled": true, "compiled_code": "\n\nwith estimates as (\n    select distinct\n        c.project_id,\n        c.branch_name,\n        c.asm,\n        c.created_at,\n        c.province,\n        setup_cost.*,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__construction` c\n    left join unnest(c.setup_cost) setup_cost\n)\n\nselect \n    e.* ,\n    b.area_sqm,\n    b.frontage,\nfrom estimates e\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on e.branch_name = b.branch_name", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__manufactoring_progress": {"database": "agile-scheme-394814", "schema": "dbt_prod_merchandise", "name": "fct__manufactoring_progress", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/merchandise/fct__manufactoring_progress.sql", "original_file_path": "models/marts/merchandise/fct__manufactoring_progress.sql", "unique_id": "model.sado_analytics_services.fct__manufactoring_progress", "fqn": ["sado_analytics_services", "marts", "merchandise", "fct__manufactoring_progress"], "alias": "fct__manufactoring_progress", "checksum": {"name": "sha256", "checksum": "357b8c515d49535dd669acf3a8d8982c38a35dc5f3f7eee8c7690fe46d165569"}, "config": {"enabled": true, "alias": null, "schema": "merchandise", "database": null, "tags": ["fact", "view", "daily"], "meta": {"joins": [{"join": "calendar", "alias": "planned_calendar", "sql_on": "${calendar.date} = ${fct__manufactoring_progress.expected_deliver_date}"}, {"join": "stg_kiotviet__suppliers", "sql_on": "${stg_kiotviet__suppliers.supplier_id} = ${fct__manufactoring_progress.supplier_id}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "daily"], "description": "", "columns": {"product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "original_code": {"name": "original_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "expected_deliver_amount": {"name": "expected_deliver_amount", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_expected_deliver_amount": {"type": "sum", "label": "Expected Deliver Amount", "group_label": "Manufacturing Progress", "sql": "safe_divide(${TABLE}.expected_deliver_amount,${TABLE}.num_receipt_count)", "round": 0}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "expected_deliver_date": {"name": "expected_deliver_date", "description": "", "meta": {"dimension": {"type": "date"}, "additional_dimensions": {"d_late_delivery": {"type": "string", "label": "Delivery Status", "sql": "CASE WHEN ${TABLE}.expected_deliver_date < ${TABLE}.transaction_date THEN 'Giao tr\u1ec5' ELSE 'Giao theo h\u1eb9n' END"}}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "supplier_id": {"name": "supplier_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "bignumeric", "constraints": [], "quote": true, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "actual_receipt_amount": {"name": "actual_receipt_amount", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_actual_receipt_amount": {"type": "sum", "label": "Actual Receipt Amount", "group_label": "Manufacturing Progress", "round": 0}, "m_actual_receipt_amount_rate": {"type": "number", "sql": "safe_divide(${m_actual_receipt_amount}, ${m_expected_deliver_amount})", "label": "Actual Receipt Amount Rate", "group_label": "Manufacturing Progress", "format": "percent", "round": 2}, "m_to_be_deliver_amount": {"type": "number", "sql": "greatest(${m_expected_deliver_amount} - ${m_actual_receipt_amount},0)", "label": "To Be Deliver Amount", "group_label": "Manufacturing Progress", "round": 0}}}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "num_receipt_count": {"name": "num_receipt_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "int64", "constraints": [], "quote": true, "tags": []}, "product_group": {"name": "product_group", "description": "", "meta": {"dimension": {"type": "string", "label": "Nh\u00f3m s\u1ea3n ph\u1ea9m"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seasonal": {"name": "seasonal", "description": "", "meta": {"dimension": {"type": "string", "label": "Ph\u00e2n lo\u1ea1i SP"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "alias": "planned_calendar", "sql_on": "${calendar.date} = ${fct__manufactoring_progress.expected_deliver_date}"}, {"join": "stg_kiotviet__suppliers", "sql_on": "${stg_kiotviet__suppliers.supplier_id} = ${fct__manufactoring_progress.supplier_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/merchandise/fct__manufactoring_progress.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "merchandise", "meta": {"joins": [{"join": "calendar", "alias": "planned_calendar", "sql_on": "${calendar.date} = ${fct__manufactoring_progress.expected_deliver_date}"}, {"join": "stg_kiotviet__suppliers", "sql_on": "${stg_kiotviet__suppliers.supplier_id} = ${fct__manufactoring_progress.supplier_id}"}]}, "tags": ["fact", "view", "daily"]}, "created_at": 1732268179.7094731, "relation_name": "`agile-scheme-394814`.`dbt_prod_merchandise`.`fct__manufactoring_progress`", "raw_code": "{{\n  config(\n    materialized = 'view',\n    tags = ['fact','view','daily']\n    )\n}}\n\n{% set mapping = { \n  \"Ph\u1ee5 ki\u1ec7n\" : {\n    \"Ph\u1ee5 ki\u1ec7n\":['0TAT',\"0BLL\",'0BOX','0BRF'],\n  },\n  \"Quanh n\u0103m\": {\n    \"\u00c1o s\u01a1 mi (d\u00e0i)\": [\"0ASM\",\"0SMD\"],\n    \"Qu\u1ea7n Kaki\": [\"0QKK\",\"0QKD\"],\n    \"Qu\u1ea7n Jean\": [\"0QJE\",\"0QBD\"],\n    \"Qu\u1ea7n \u00e2u\":[\"0QAU\"],\n  },\n  \"Thu \u0111\u00f4ng\": {\n    \"\u00c1o Bomber\":['0AKB'],\n    \"\u00c1o Blazer\":['0ABZ'],\n    \"B\u1ed9 gi\u00f3\": [\"BAKG\",\"BQDT\",\"BAGB\"],\n    \"\u00c1o Gi\u00f3 (l\u1ebb)\":['0AKG'],\n    \"\u00c1o gi\u1eef nhi\u1ec7t\":[\"0AGN\"],\n    \"\u00c1o kho\u00e1c th\u1eddi trang\": [\"0AKH\"],\n    \"\u00c1o kho\u00e1c da\":[\"0AKD\"],\n    \"\u00c1o len\": [\"0ALE\"],\n    \"\u00c1o n\u1ec9 (r\u1eddi)\":[\"0ANI\",\"0ANO\",\"0AKN\"],\n    \"\u00c1o phao\": [\"0APH\",\"0AKC\"],\n    \"\u00c1o polo d\u00e0i tay\":['0APD'],\n    \"\u00c1o thun d\u00e0i tay\":[\"0APO\",\"0ATH\"],\n    \"B\u1ed9 n\u1ec9\": [\"BANI\",\"BQNI\",\"BAKN\",\"BANK\",\"BANH\"],\n    \"Qu\u1ea7n gi\u00f3 (l\u1ebb)\": [\"0QDT\"],\n    \"Qu\u1ea7n n\u1ec9 (l\u1ebb)\":['0QNI'],\n    \"Qu\u1ea7n d\u00e0i Casual\":[\"0QDC\"],\n  },\n  \"Xu\u00e2n h\u00e8\" : {\n    \"\u00c1o ba l\u1ed7\": [\"0ABL\"],\n    \"\u00c1o ch\u1ed1ng n\u1eafng\": [\"0ACN\"],\n    \"\u00c1o s\u00e1t n\u00e1ch\": [\"0ASN\"],\n    \"\u00c1o T-shirt\": [\"0ATS\"],\n    \"Qu\u1ea7n short gi\u00f3\": [\"0QSG\"],\n    \"Qu\u1ea7n short kaki\": [\"0QSK\"],\n    \"Qu\u1ea7n short th\u1ec3 thao\": [\"0QST\"],\n    \"Qu\u1ea7n short casual\": [\"0QSC\"],\n    \"S\u01a1 mi c\u1ed9c\": [\"0SMC\"],\n    \"\u00c1o b\u1ed9 polo\": [\"0APB\"],\n    \"\u00c1o Polo\": [\"0APC\"],\n  },\n  \n} %}\n\n-- This model is used to store the manufacturing progress of the products.\nWITH plan AS (\n    SELECT\n        product_code,\n        original_code,\n        {# po_code, #}\n        sum(expected_deliver_amount) as expected_deliver_amount,\n        max(expected_deliver_date) expected_deliver_date,\n    FROM\n        {{ ref(\"stg_gsheet__manufacture_plan\") }}\n        where product_code is not null\n    group by 1,2\n),\n-- actual progress\nactual_progress as (\n    select \n    po.transaction_code,\n    po.transaction_status,\n    po.supplier_id,\n    date(po.transaction_date) transaction_date,\n    p.product_design_code,\n    sum(quantity) quantity\n    from {{ ref(\"stg_kiotviet__purchaseorderdetails\") }} po\n    left join {{ ref('stg_kiotviet__products') }} p on po.product_id = p.product_id\n    where po.product_id is not null\n    and po.branch_id = 49880\n    and po.supplier_id not in (209080)\n    and po.transaction_status not in ('\u0110\u00e3 hu\u1ef7')\n    {{dbt_utils.group_by(5)}}\n)\n\nSELECT\n  plan.*,\n  ap.transaction_code,\n  ap.transaction_status,\n  ap.supplier_id,\n  ap.transaction_date,\n  {# ap.product_design_code, #}\n  ap.quantity as actual_receipt_amount,\n  greatest(count(ap.transaction_code) over (partition by plan.product_code),1) as num_receipt_count,\n  case \n  {% for seasonal,items in mapping.items()%}\n    {% for key, values in items.items() -%}\n      when left(plan.product_code,4) in ('{{values|join(\"','\")}}') then '{{key}}' \n    {% endfor -%}\n  {%endfor%} \n  end as product_group,\n  case\n  {% for seasonal,items in mapping.items() -%}\n    {% for key, values in items.items() -%}\n      when left(plan.product_code,4) in ('{{values|join(\"','\")}}') then '{{seasonal}}' \n    {% endfor -%}\n  {%endfor%} end as seasonal,\n\nFROM\n  plan\nLEFT JOIN actual_progress ap on plan.product_code = ap.product_design_code\nand date_trunc(plan.expected_deliver_date,month) = date_trunc(date(ap.transaction_date),month)", "language": "sql", "refs": [{"name": "stg_gsheet__manufacture_plan", "package": null, "version": null}, {"name": "stg_kiotviet__purchaseorderdetails", "package": null, "version": null}, {"name": "stg_kiotviet__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_gsheet__manufacture_plan", "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails", "model.sado_analytics_services.stg_kiotviet__products"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/merchandise/fct__manufactoring_progress.sql", "compiled": true, "compiled_code": "\n\n\n\n-- This model is used to store the manufacturing progress of the products.\nWITH plan AS (\n    SELECT\n        product_code,\n        original_code,\n        \n        sum(expected_deliver_amount) as expected_deliver_amount,\n        max(expected_deliver_date) expected_deliver_date,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__manufacture_plan`\n        where product_code is not null\n    group by 1,2\n),\n-- actual progress\nactual_progress as (\n    select \n    po.transaction_code,\n    po.transaction_status,\n    po.supplier_id,\n    date(po.transaction_date) transaction_date,\n    p.product_design_code,\n    sum(quantity) quantity\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__purchaseorderdetails` po\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products` p on po.product_id = p.product_id\n    where po.product_id is not null\n    and po.branch_id = 49880\n    and po.supplier_id not in (209080)\n    and po.transaction_status not in ('\u0110\u00e3 hu\u1ef7')\n    group by 1,2,3,4,5\n)\n\nSELECT\n  plan.*,\n  ap.transaction_code,\n  ap.transaction_status,\n  ap.supplier_id,\n  ap.transaction_date,\n  \n  ap.quantity as actual_receipt_amount,\n  greatest(count(ap.transaction_code) over (partition by plan.product_code),1) as num_receipt_count,\n  case \n  \n    when left(plan.product_code,4) in ('0TAT','0BLL','0BOX','0BRF') then 'Ph\u1ee5 ki\u1ec7n' \n    \n    when left(plan.product_code,4) in ('0ASM','0SMD') then '\u00c1o s\u01a1 mi (d\u00e0i)' \n    when left(plan.product_code,4) in ('0QKK','0QKD') then 'Qu\u1ea7n Kaki' \n    when left(plan.product_code,4) in ('0QJE','0QBD') then 'Qu\u1ea7n Jean' \n    when left(plan.product_code,4) in ('0QAU') then 'Qu\u1ea7n \u00e2u' \n    \n    when left(plan.product_code,4) in ('0AKB') then '\u00c1o Bomber' \n    when left(plan.product_code,4) in ('0ABZ') then '\u00c1o Blazer' \n    when left(plan.product_code,4) in ('BAKG','BQDT','BAGB') then 'B\u1ed9 gi\u00f3' \n    when left(plan.product_code,4) in ('0AKG') then '\u00c1o Gi\u00f3 (l\u1ebb)' \n    when left(plan.product_code,4) in ('0AGN') then '\u00c1o gi\u1eef nhi\u1ec7t' \n    when left(plan.product_code,4) in ('0AKH') then '\u00c1o kho\u00e1c th\u1eddi trang' \n    when left(plan.product_code,4) in ('0AKD') then '\u00c1o kho\u00e1c da' \n    when left(plan.product_code,4) in ('0ALE') then '\u00c1o len' \n    when left(plan.product_code,4) in ('0ANI','0ANO','0AKN') then '\u00c1o n\u1ec9 (r\u1eddi)' \n    when left(plan.product_code,4) in ('0APH','0AKC') then '\u00c1o phao' \n    when left(plan.product_code,4) in ('0APD') then '\u00c1o polo d\u00e0i tay' \n    when left(plan.product_code,4) in ('0APO','0ATH') then '\u00c1o thun d\u00e0i tay' \n    when left(plan.product_code,4) in ('BANI','BQNI','BAKN','BANK','BANH') then 'B\u1ed9 n\u1ec9' \n    when left(plan.product_code,4) in ('0QDT') then 'Qu\u1ea7n gi\u00f3 (l\u1ebb)' \n    when left(plan.product_code,4) in ('0QNI') then 'Qu\u1ea7n n\u1ec9 (l\u1ebb)' \n    when left(plan.product_code,4) in ('0QDC') then 'Qu\u1ea7n d\u00e0i Casual' \n    \n    when left(plan.product_code,4) in ('0ABL') then '\u00c1o ba l\u1ed7' \n    when left(plan.product_code,4) in ('0ACN') then '\u00c1o ch\u1ed1ng n\u1eafng' \n    when left(plan.product_code,4) in ('0ASN') then '\u00c1o s\u00e1t n\u00e1ch' \n    when left(plan.product_code,4) in ('0ATS') then '\u00c1o T-shirt' \n    when left(plan.product_code,4) in ('0QSG') then 'Qu\u1ea7n short gi\u00f3' \n    when left(plan.product_code,4) in ('0QSK') then 'Qu\u1ea7n short kaki' \n    when left(plan.product_code,4) in ('0QST') then 'Qu\u1ea7n short th\u1ec3 thao' \n    when left(plan.product_code,4) in ('0QSC') then 'Qu\u1ea7n short casual' \n    when left(plan.product_code,4) in ('0SMC') then 'S\u01a1 mi c\u1ed9c' \n    when left(plan.product_code,4) in ('0APB') then '\u00c1o b\u1ed9 polo' \n    when left(plan.product_code,4) in ('0APC') then '\u00c1o Polo' \n     \n  end as product_group,\n  case\n  when left(plan.product_code,4) in ('0TAT','0BLL','0BOX','0BRF') then 'Ph\u1ee5 ki\u1ec7n' \n    when left(plan.product_code,4) in ('0ASM','0SMD') then 'Quanh n\u0103m' \n    when left(plan.product_code,4) in ('0QKK','0QKD') then 'Quanh n\u0103m' \n    when left(plan.product_code,4) in ('0QJE','0QBD') then 'Quanh n\u0103m' \n    when left(plan.product_code,4) in ('0QAU') then 'Quanh n\u0103m' \n    when left(plan.product_code,4) in ('0AKB') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0ABZ') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('BAKG','BQDT','BAGB') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0AKG') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0AGN') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0AKH') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0AKD') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0ALE') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0ANI','0ANO','0AKN') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0APH','0AKC') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0APD') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0APO','0ATH') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('BANI','BQNI','BAKN','BANK','BANH') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0QDT') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0QNI') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0QDC') then 'Thu \u0111\u00f4ng' \n    when left(plan.product_code,4) in ('0ABL') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0ACN') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0ASN') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0ATS') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0QSG') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0QSK') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0QST') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0QSC') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0SMC') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0APB') then 'Xu\u00e2n h\u00e8' \n    when left(plan.product_code,4) in ('0APC') then 'Xu\u00e2n h\u00e8' \n     end as seasonal,\n\nFROM\n  plan\nLEFT JOIN actual_progress ap on plan.product_code = ap.product_design_code\nand date_trunc(plan.expected_deliver_date,month) = date_trunc(date(ap.transaction_date),month)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__cs_calls": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__cs_calls", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/fct__cs_calls.sql", "original_file_path": "models/marts/marketing/fct__cs_calls.sql", "unique_id": "model.sado_analytics_services.fct__cs_calls", "fqn": ["sado_analytics_services", "marts", "marketing", "fct__cs_calls"], "alias": "fct__cs_calls", "checksum": {"name": "sha256", "checksum": "e80c2b57859511df31e7166a0c5ed9b9ac97ca0446db525e63a89e9ba5f81034"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["table", "fact", "marketing", "calls"], "meta": {"joins": [{"join": "calendar", "alias": "call_calendar", "sql_on": "${fct__cs_calls.call_month} = ${call_calendar.date}"}, {"join": "dim__branches", "alias": "call_branch", "sql_on": "${fct__cs_calls.branch_name} = ${call_branch.branch_name}"}, {"join": "fct__customers", "sql_on": "${fct__cs_calls.customer_id} = ${fct__customers.universal_customer_id}"}, {"join": "rfm_movement", "sql_on": "${fct__cs_calls.customer_id} = ${rfm_movement.customer_id} and ${fct__cs_calls.call_month} = ${rfm_movement.start_of_month}"}, {"join": "calendar", "alias": "transaction_calendar", "sql_on": "${fct__cs_calls.transaction_date} = ${transaction_calendar.date}"}, {"join": "dim__branches", "alias": "transaction_branch", "sql_on": "${fct__cs_calls.branch_id} = ${transaction_branch.branch_id}"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "marketing", "calls"], "description": "", "columns": {"call_status": {"name": "call_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "call_month": {"name": "call_month", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_cusotomers": {"type": "count_distinct", "label": "No. Customers", "group_label": "Sales metrics", "round": 0}, "m_num_customer_called": {"type": "count_distinct", "label": "No. Customers Called", "group_label": "Sales metrics", "round": 0, "filters": [{"call_status": "!null"}]}, "m_num_successful_calls": {"type": "count_distinct", "label": "No. Successful Calls", "group_label": "Sales metrics", "round": 0, "filters": [{"call_status": ["H\u1eb9n ra c\u1eeda h\u00e0ng", "Th\u00e0nh c\u00f4ng"]}]}, "m_calls_with_transactions": {"type": "count_distinct", "label": "No. Calls with Transactions", "group_label": "Sales metrics", "round": 0, "filters": [{"transaction_date": "!null"}]}, "m_call_cvr": {"type": "number", "sql": "safe_divide(${m_calls_with_transactions},${m_num_customer_called})", "label": "Call Conversion Rate", "group_label": "Sales metrics", "format": "percent", "round": 2}, "m_call_progress": {"type": "number", "sql": "safe_divide(${m_num_customer_called},${m_num_cusotomers})", "label": "Call Progress", "group_label": "Sales metrics", "format": "percent", "round": 2}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_stores": {"type": "count_distinct", "label": "No. Stores", "group_label": "Sales metrics", "round": 0}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "val_transaction_id": {"name": "val_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng giao d\u1ecbch", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_transactions": {"type": "sum", "label": "No. Transactions", "group_label": "Sales metrics", "round": 0}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "num_invoice_transaction_id": {"name": "num_invoice_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng invoice", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_invoices": {"type": "sum", "label": "No. Invoices", "group_label": "Sales metrics", "round": 0}, "m_aov": {"type": "number", "sql": "safe_divide(${m_invoice_val},${m_num_invoices})", "label": "AOV", "group_label": "Sales metrics", "compact": "thousands", "round": 0}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "num_return_transaction_id": {"name": "num_return_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng tr\u1ea3", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_returns": {"type": "sum", "label": "No. Returns", "group_label": "Sales metrics", "round": 0}, "m_return_rate": {"type": "number", "sql": "safe_divide(${m_num_returns},${m_num_transactions})", "label": "Return Rate", "group_label": "Sales metrics", "format": "percent", "round": 1}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "val_total": {"name": "val_total", "description": "gi\u00e1 tr\u1ecb giao d\u1ecbch", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_transaction_val": {"type": "sum", "label": "Transaction Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_invoice_total": {"name": "num_invoice_total", "description": "gi\u00e1 tr\u1ecb b\u00e1n", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_invoice_val": {"type": "sum", "label": "Invoice Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_return_total": {"name": "num_return_total", "description": "gi\u00e1 tr\u1ecb tr\u1ea3", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_return_val": {"type": "sum", "label": "Return Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "val_total_payment": {"name": "val_total_payment", "description": "doanh thu thu\u1ea7n", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_payment_val": {"type": "sum", "label": "Payment", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_invoice_total_payment": {"name": "num_invoice_total_payment", "description": "doanh thu thu\u1ea7n b\u00e1n h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_return_total_payment": {"name": "num_return_total_payment", "description": "doanh thu thu\u1ea7n tr\u1ea3 h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "alias": "call_calendar", "sql_on": "${fct__cs_calls.call_month} = ${call_calendar.date}"}, {"join": "dim__branches", "alias": "call_branch", "sql_on": "${fct__cs_calls.branch_name} = ${call_branch.branch_name}"}, {"join": "fct__customers", "sql_on": "${fct__cs_calls.customer_id} = ${fct__customers.universal_customer_id}"}, {"join": "rfm_movement", "sql_on": "${fct__cs_calls.customer_id} = ${rfm_movement.customer_id} and ${fct__cs_calls.call_month} = ${rfm_movement.start_of_month}"}, {"join": "calendar", "alias": "transaction_calendar", "sql_on": "${fct__cs_calls.transaction_date} = ${transaction_calendar.date}"}, {"join": "dim__branches", "alias": "transaction_branch", "sql_on": "${fct__cs_calls.branch_id} = ${transaction_branch.branch_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/fct__cs_calls.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "alias": "call_calendar", "sql_on": "${fct__cs_calls.call_month} = ${call_calendar.date}"}, {"join": "dim__branches", "alias": "call_branch", "sql_on": "${fct__cs_calls.branch_name} = ${call_branch.branch_name}"}, {"join": "fct__customers", "sql_on": "${fct__cs_calls.customer_id} = ${fct__customers.universal_customer_id}"}, {"join": "rfm_movement", "sql_on": "${fct__cs_calls.customer_id} = ${rfm_movement.customer_id} and ${fct__cs_calls.call_month} = ${rfm_movement.start_of_month}"}, {"join": "calendar", "alias": "transaction_calendar", "sql_on": "${fct__cs_calls.transaction_date} = ${transaction_calendar.date}"}, {"join": "dim__branches", "alias": "transaction_branch", "sql_on": "${fct__cs_calls.branch_id} = ${transaction_branch.branch_id}"}]}, "tags": ["table", "fact", "marketing", "calls"]}, "created_at": 1732268179.72928, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__cs_calls`", "raw_code": "{{ config(\n    materialized = 'table',\n    tags = ['table','fact','marketing','calls']\n) }}\n\n{% set rev_calcols ={ \"transaction_id\" :\"count(distinct \",\n\"total\" :\"sum(\",\n\"total_payment\" :\"sum(\" } %}\n{% set rev_types = [\"invoice\", \"return\"] %}\n\nWITH calls AS (\n\n    SELECT\n        cs.call_status,\n        cs.call_month,\n        c.kiotviet_customer_id AS customer_id,\n        cs.branch_name,\n    FROM\n        {{ ref(\"stg_gsheet__cs_calls\") }}\n        cs\n        INNER JOIN {{ ref('fct__customers') }} C\n        ON cs.customer_phone = c.contact_number\n        AND kiotviet_customer_id IS NOT NULL\n),\ntransactions AS (\n    SELECT\n        customer_id,\n        transaction_date,\n        branch_id, \n        {% for col,cal in rev_calcols.items() %}\n            {{ cal +\" \" +col + \")\" }} AS {{ \"val_\"+col }},\n            {% for type in rev_types %}\n                {{ cal }} CASE\n                    WHEN transaction_type = '{{type}}' THEN {{ col }}\n                END {{ \")\" }} AS {{ \"num_\"+type +\"_\"+col}},\n            {% endfor %}\n        {% endfor %}\n    FROM\n        {{ ref(\"fct__transactions\") }}\n    WHERE\n        source = 'kiotviet'\n        AND transaction_date >= '2024-10-01'\n    {{dbt_utils.group_by(3)}}\n)\nSELECT\n    c.call_status,\n    c.call_month,\n    c.customer_id AS customer_id,\n    c.branch_name,\n    t.* except(customer_id)\nFROM\n    calls c\n    left join transactions t\n    ON c.customer_id = t.customer_id\n    AND lower(c.call_status) NOT IN (\n        \"kh\u00f4ng nghe m\u00e1y\",\n        \"t\u1eeb ch\u1ed1i\",\n        \"thu\u00ea bao\"\n    )\n    AND (\n        (t.transaction_date >= c.call_month\n            AND t.transaction_date < date_add(c.call_month, INTERVAL 1 MONTH))\n        OR t.transaction_date IS NULL\n    )", "language": "sql", "refs": [{"name": "stg_gsheet__cs_calls", "package": null, "version": null}, {"name": "fct__customers", "package": null, "version": null}, {"name": "fct__transactions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_gsheet__cs_calls", "model.sado_analytics_services.fct__customers", "model.sado_analytics_services.fct__transactions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/fct__cs_calls.sql", "compiled": true, "compiled_code": "\n\n\n\n\nWITH calls AS (\n\n    SELECT\n        cs.call_status,\n        cs.call_month,\n        c.kiotviet_customer_id AS customer_id,\n        cs.branch_name,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__cs_calls`\n        cs\n        INNER JOIN `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers` C\n        ON cs.customer_phone = c.contact_number\n        AND kiotviet_customer_id IS NOT NULL\n),\ntransactions AS (\n    SELECT\n        customer_id,\n        transaction_date,\n        branch_id, \n        \n            count(distinct  transaction_id) AS val_transaction_id,\n            \n                count(distinct  CASE\n                    WHEN transaction_type = 'invoice' THEN transaction_id\n                END ) AS num_invoice_transaction_id,\n            \n                count(distinct  CASE\n                    WHEN transaction_type = 'return' THEN transaction_id\n                END ) AS num_return_transaction_id,\n            \n        \n            sum( total) AS val_total,\n            \n                sum( CASE\n                    WHEN transaction_type = 'invoice' THEN total\n                END ) AS num_invoice_total,\n            \n                sum( CASE\n                    WHEN transaction_type = 'return' THEN total\n                END ) AS num_return_total,\n            \n        \n            sum( total_payment) AS val_total_payment,\n            \n                sum( CASE\n                    WHEN transaction_type = 'invoice' THEN total_payment\n                END ) AS num_invoice_total_payment,\n            \n                sum( CASE\n                    WHEN transaction_type = 'return' THEN total_payment\n                END ) AS num_return_total_payment,\n            \n        \n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n    WHERE\n        source = 'kiotviet'\n        AND transaction_date >= '2024-10-01'\n    group by 1,2,3\n)\nSELECT\n    c.call_status,\n    c.call_month,\n    c.customer_id AS customer_id,\n    c.branch_name,\n    t.* except(customer_id)\nFROM\n    calls c\n    left join transactions t\n    ON c.customer_id = t.customer_id\n    AND lower(c.call_status) NOT IN (\n        \"kh\u00f4ng nghe m\u00e1y\",\n        \"t\u1eeb ch\u1ed1i\",\n        \"thu\u00ea bao\"\n    )\n    AND (\n        (t.transaction_date >= c.call_month\n            AND t.transaction_date < date_add(c.call_month, INTERVAL 1 MONTH))\n        OR t.transaction_date IS NULL\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__contents": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__contents", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/dim__contents.sql", "original_file_path": "models/marts/marketing/facebook/dim__contents.sql", "unique_id": "model.sado_analytics_services.dim__contents", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "dim__contents"], "alias": "dim__contents", "checksum": {"name": "sha256", "checksum": "69013af3ab9e39716e3d9e8a78e3bdf4121d7738942bf5384669f345a05a345f"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fb", "dimensions", "table"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fb", "dimensions", "table"], "description": "", "columns": {"event_name": {"name": "event_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "content_angle": {"name": "content_angle", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "promotion": {"name": "promotion", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "product": {"name": "product", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "headline": {"name": "headline", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "body": {"name": "body", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "pic": {"name": "pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "media_type": {"name": "media_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "approval_status": {"name": "approval_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "content_code": {"name": "content_code", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_contents": {"type": "count_distinct", "label": "Num Contents", "group_label": "FB Ads"}}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "content_month": {"name": "content_month", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "content_type": {"name": "content_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/dim__contents.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "tags": ["fb", "dimensions", "table"]}, "created_at": 1732268179.7577567, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__contents`", "raw_code": "{{\n  config(\n    materialized = 'table',\n    tags = ['fb','dimensions','table']\n    )\n}}\n\nselect \n* except (sheet_name,_batched_at),\ncase when sheet_name = 'PAGE T\u1ed4NG' then 'social' else 'performance' end as content_type,\nfrom {{ ref(\"stg_gsheet__contents\") }}", "language": "sql", "refs": [{"name": "stg_gsheet__contents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_gsheet__contents"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__contents.sql", "compiled": true, "compiled_code": "\n\nselect \n* except (sheet_name,_batched_at),\ncase when sheet_name = 'PAGE T\u1ed4NG' then 'social' else 'performance' end as content_type,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__contents`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__posts": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__posts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/dim__posts.sql", "original_file_path": "models/marts/marketing/facebook/dim__posts.sql", "unique_id": "model.sado_analytics_services.dim__posts", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "dim__posts"], "alias": "dim__posts", "checksum": {"name": "sha256", "checksum": "efb751b33be75e5578fc33b428a89a7ad5f5832e6e1de996d696522cd0de4965"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["dimension", "view", "facebook"], "meta": {"joins": [{"join": "dim__pages", "sql_on": "${dim__posts.page_id} = ${dim__pages.page_id}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["dimension", "view", "facebook"], "description": "The model is a dimension table that contains information about posts. ", "columns": {"post_id": {"name": "post_id", "description": "The unique identifier for each post. This is a primary key.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "The unique identifier for the Facebook page where the post was made. This can be used to join with other tables containing page-level information.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "created_time": {"name": "created_time", "description": "The timestamp indicating when the post was created. This is in UTC.", "meta": {"dimension": {"type": "timestamp"}, "additional_dimensions": {"d_created_date": {"type": "date", "label": "Published Date", "sql": "date(${created_time}, 'Asia/Ho_Chi_Minh')"}}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "permalink_url": {"name": "permalink_url", "description": "The 'permalink_url' column contains the permanent URL of the post. This URL can be used to directly access the post on the platform.", "meta": {"dimension": {"type": "string", "urls": [{"label": "View Post", "url": "${value.raw}"}]}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "tag_line": {"name": "tag_line", "description": "The 'tag_line' column contains the tag line of the post. This is a short, catchy phrase designed to summarize the post's content and attract readers.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "main_body": {"name": "main_body", "description": "The 'main_body' column contains the main content of the post. This is where the bulk of the information or message of the post is conveyed.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "first_footer": {"name": "first_footer", "description": "The 'first_footer' column contains the initial footer text that appears at the bottom of a post. This could include additional information, disclaimers, or links related to the post.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "second_footer": {"name": "second_footer", "description": "The 'second_footer' column contains the secondary footer text that appears at the bottom of a post, following the first footer. This could include further details, additional links, or follow-up information to the content in the first footer.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "content_id": {"name": "content_id", "description": "The 'content_id' column contains a unique identifier for the content of the post. This ID is used to link the post content with other related data in the database.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__pages", "sql_on": "${dim__posts.page_id} = ${dim__pages.page_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/dim__posts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "dim__pages", "sql_on": "${dim__posts.page_id} = ${dim__pages.page_id}"}]}, "tags": ["dimension", "view", "facebook"]}, "created_at": 1732268179.8227208, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__posts`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['dimension', 'view','facebook']\n) }}\n\nSELECT\n    *\nFROM\n    {{ ref(\"dim_fb__posts\") }}", "language": "sql", "refs": [{"name": "dim_fb__posts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.dim_fb__posts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__posts.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_fb__posts`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__facebook_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__facebook_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/fct__facebook_performance.sql", "original_file_path": "models/marts/marketing/facebook/fct__facebook_performance.sql", "unique_id": "model.sado_analytics_services.fct__facebook_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fct__facebook_performance"], "alias": "fct__facebook_performance", "checksum": {"name": "sha256", "checksum": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268176.9118366, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__facebook_performance`", "raw_code": "", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__page_impressions_by_city": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__page_impressions_by_city", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/fct__page_impressions_by_city.sql", "original_file_path": "models/marts/marketing/facebook/fct__page_impressions_by_city.sql", "unique_id": "model.sado_analytics_services.fct__page_impressions_by_city", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fct__page_impressions_by_city"], "alias": "fct__page_impressions_by_city", "checksum": {"name": "sha256", "checksum": "65bcae91368c228b7c1747f95aef802cff738875af38d31c8ee4e41125bead82"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "facebook"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "facebook"], "description": "The model is a fact table that contains metrics related to Facebook page impressions categorized by city.", "columns": {"metric_id": {"name": "metric_id", "description": "The unique identifier for each metric. This is a primary key in the table.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "The unique identifier for each page. This is a foreign key that links to the page dimension table.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_name": {"name": "metric_name", "description": "The name of the metric. This is a descriptive field that provides more context about the metric.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "aggregate_period": {"name": "aggregate_period", "description": "The period over which the metric is aggregated. This could be daily, weekly, monthly, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_title": {"name": "metric_title", "description": "The title of the metric being measured. This is a human-readable name for the metric.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_description": {"name": "metric_description", "description": "A detailed description of what the metric measures. This provides more context about the metric and how it should be interpreted.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_time": {"name": "metric_time", "description": "The 'metric_time' column represents the timestamp of when the metric was recorded. It is of datetime type and is in UTC format.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "metric_value": {"name": "metric_value", "description": "The 'metric_value' column represents the value of the metric recorded. It is of integer type and represents the number of page impressions.", "meta": {"dimension": {"type": "number"}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/fct__page_impressions_by_city.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "tags": ["fact", "view", "facebook"]}, "created_at": 1732268179.9656942, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__page_impressions_by_city`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','facebook']\n) }}\n\nSELECT\n    * except(city),\n    trim(SPLIT(city,\" - \")[safe_offset(1)]) AS country,\n    trim(SPLIT(city,\" - \")[safe_offset(0)]) AS city,\nFROM\n    {{ ref(\"fct_fb__page_impressions_by_city\") }}", "language": "sql", "refs": [{"name": "fct_fb__page_impressions_by_city", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.fct_fb__page_impressions_by_city"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/fct__page_impressions_by_city.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    * except(city),\n    trim(SPLIT(city,\" - \")[safe_offset(1)]) AS country,\n    trim(SPLIT(city,\" - \")[safe_offset(0)]) AS city,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_impressions_by_city`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__video_view_time_by_city": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__video_view_time_by_city", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/fct__video_view_time_by_city.sql", "original_file_path": "models/marts/marketing/facebook/fct__video_view_time_by_city.sql", "unique_id": "model.sado_analytics_services.fct__video_view_time_by_city", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fct__video_view_time_by_city"], "alias": "fct__video_view_time_by_city", "checksum": {"name": "sha256", "checksum": "bed85891b1a72268e8d578f6d807ba548db6ba3565fd847e3f94857bd51fdb1a"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "facebook"], "meta": {"joins": [{"join": "dim__posts", "sql_on": "${fct__video_view_time_by_city.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__video_view_time_by_city.page_id} = ${dim__pages.page_id}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "facebook"], "description": "The model is a fact table that contains metrics related to the video view time on Facebook, breakdown by city", "columns": {"metric_id": {"name": "metric_id", "description": "The unique identifier for each metric. This is a primary key in the table.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "The unique identifier for each post. This is a foreign key that links to the posts table.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_name": {"name": "metric_name", "description": "The name of the metric. This describes the type of metric being recorded, such as 'video view time'.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "aggregate_period": {"name": "aggregate_period", "description": "The time period over which the metric is aggregated. This could be daily, weekly, monthly, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_title": {"name": "metric_title", "description": "The title of the metric being measured. This is a human-readable name that describes the metric.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_description": {"name": "metric_description", "description": "A detailed description of the metric. This provides more context about what the metric is measuring and how it is calculated.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_time": {"name": "metric_time", "description": "The 'metric_time' column represents the time at which the metric was recorded. This is typically in the format of a timestamp.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "city": {"name": "city", "description": "The city column represents the city where the video was viewed. It is a string type column.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_value": {"name": "metric_value", "description": "The 'metric_value' column represents the value of the metric being measured. For this model, it represents the total time users spent watching the video. The value is aggregated based on the age and gender group, and the time period specified in the 'aggregate_period' column.", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_total_view_time": {"type": "sum", "label": "Total View Time (seconds)", "round": 0}, "m_avg_view_time": {"type": "average", "label": "Average View Time (seconds)", "round": 1}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__posts", "sql_on": "${fct__video_view_time_by_city.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__video_view_time_by_city.page_id} = ${dim__pages.page_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/fct__video_view_time_by_city.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "dim__posts", "sql_on": "${fct__video_view_time_by_city.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__video_view_time_by_city.page_id} = ${dim__pages.page_id}"}]}, "tags": ["fact", "view", "facebook"]}, "created_at": 1732268179.7510662, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__video_view_time_by_city`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','facebook']\n) }}\n\nSELECT\n    * except(metric_value,city),\n    safe_cast(metric_value as float64)/1000 as metric_value,\n    trim(SPLIT(city,\" - \")[safe_offset(1)]) AS country,\n    trim(SPLIT(city,\" - \")[safe_offset(0)]) AS city,\nFROM\n    {{ ref(\"fct_fb__video_view_time_by_city\") }}", "language": "sql", "refs": [{"name": "fct_fb__video_view_time_by_city", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.fct_fb__video_view_time_by_city"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/fct__video_view_time_by_city.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    * except(metric_value,city),\n    safe_cast(metric_value as float64)/1000 as metric_value,\n    trim(SPLIT(city,\" - \")[safe_offset(1)]) AS country,\n    trim(SPLIT(city,\" - \")[safe_offset(0)]) AS city,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_view_time_by_city`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.offline_conversion": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "offline_conversion", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/offline_conversion.sql", "original_file_path": "models/marts/marketing/facebook/offline_conversion.sql", "unique_id": "model.sado_analytics_services.offline_conversion", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "offline_conversion"], "alias": "offline_conversion", "checksum": {"name": "sha256", "checksum": "b56113bd549f90cde8d75d257e3551d76165f469f070139c8dc669c0e86396e8"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fb", "integration", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fb", "integration", "view"], "description": "table to upload offline conversion to facebook", "columns": {"transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/offline_conversion.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "tags": ["fb", "integration", "view"]}, "created_at": 1732268179.9641669, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`offline_conversion`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fb','integration','view']\n) }}\n\nSELECT\n    invoices.transaction_code,\n    invoices.created_date,\n    unix_seconds(\n        timestamp_add(\n            invoices.transaction_date,\n            INTERVAL -7 HOUR\n        )\n    ) transaction_date,\n    invoices.total,\n    REGEXP_REPLACE(customers.contact_number, \"^0\", \"84\") AS contact_number,\n    CASE WHEN customers.gender THEN 'm' ELSE 'f' END AS gender,\n    branches.branch_name,\nFROM\n    {{ ref('stg_kiotviet__invoices') }}\n    invoices\n    LEFT JOIN {{ ref('stg_kiotviet__branches') }}\n    branches\n    ON invoices.branch_id = branches.branch_id\n    LEFT JOIN {{ ref('stg_kiotviet__customers') }}\n    customers\n    ON invoices.customer_id = customers.customer_id\nWHERE\n    1 = 1\n    AND invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.total > 0\n    AND customers.contact_number <> ''\n    AND customers.contact_number IS NOT NULL\n    AND transaction_code NOT LIKE 'HDD_%'", "language": "sql", "refs": [{"name": "stg_kiotviet__invoices", "package": null, "version": null}, {"name": "stg_kiotviet__branches", "package": null, "version": null}, {"name": "stg_kiotviet__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoices", "model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_kiotviet__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/offline_conversion.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.transaction_code,\n    invoices.created_date,\n    unix_seconds(\n        timestamp_add(\n            invoices.transaction_date,\n            INTERVAL -7 HOUR\n        )\n    ) transaction_date,\n    invoices.total,\n    REGEXP_REPLACE(customers.contact_number, \"^0\", \"84\") AS contact_number,\n    CASE WHEN customers.gender THEN 'm' ELSE 'f' END AS gender,\n    branches.branch_name,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n    invoices\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`\n    branches\n    ON invoices.branch_id = branches.branch_id\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers`\n    customers\n    ON invoices.customer_id = customers.customer_id\nWHERE\n    1 = 1\n    AND invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.total > 0\n    AND customers.contact_number <> ''\n    AND customers.contact_number IS NOT NULL\n    AND transaction_code NOT LIKE 'HDD_%'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__ad_accounts": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__ad_accounts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/dim__ad_accounts.sql", "original_file_path": "models/marts/marketing/facebook/dim__ad_accounts.sql", "unique_id": "model.sado_analytics_services.dim__ad_accounts", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "dim__ad_accounts"], "alias": "dim__ad_accounts", "checksum": {"name": "sha256", "checksum": "d3348cf5f36806fad5f87bc1e84c99f95c75c8af3b2ba584e7ff8750db205c0a"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fb", "dimensions", "table"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fb", "dimensions", "table"], "description": "", "columns": {"is_active": {"name": "is_active", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_name": {"name": "account_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bm_id": {"name": "bm_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "business_name": {"name": "business_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_personal": {"name": "is_personal", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "age": {"name": "age", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend_cap": {"name": "spend_cap", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "amount_spent": {"name": "amount_spent", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timezone_name": {"name": "timezone_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_time": {"name": "created_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/dim__ad_accounts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "tags": ["fb", "dimensions", "table"]}, "created_at": 1732268179.7455933, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__ad_accounts`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fb','dimensions','table']\n) }}\n\nSELECT\n    *\nFROM\n    {{ ref(\"stg_fb__ad_accounts\") }}", "language": "sql", "refs": [{"name": "stg_fb__ad_accounts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.stg_fb__ad_accounts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__ad_accounts.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_accounts`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__post_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__post_insights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/fct__post_insights.sql", "original_file_path": "models/marts/marketing/facebook/fct__post_insights.sql", "unique_id": "model.sado_analytics_services.fct__post_insights", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fct__post_insights"], "alias": "fct__post_insights", "checksum": {"name": "sha256", "checksum": "6f16b18c8a6262eeb0b6a18ab7b375894a2850b7a54916b0c3fad9b31d2c5bb4"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "facebook"], "meta": {"joins": [{"join": "calendar", "sql_on": "date(${fct__post_insights.metric_time}) = ${calendar.date} and ${fct__post_insights.aggregate_period} = 'day'"}, {"join": "dim__posts", "sql_on": "${fct__post_insights.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__post_insights.page_id} = ${dim__pages.page_id}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "facebook"], "description": "The model is a fact table that contains metrics related to Facebook post insights", "columns": {"metric_id": {"name": "metric_id", "description": "The unique identifier for each metric. This is a primary key.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "The unique identifier for each post. This is a foreign key that links to the post table.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_name": {"name": "metric_name", "description": "The name of the metric. This is a descriptive field that indicates the type of metric being recorded.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "aggregate_period": {"name": "aggregate_period", "description": "The 'aggregate_period' column represents the time period over which the metric is aggregated. This could be daily, weekly, monthly, etc.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_title": {"name": "metric_title", "description": "The 'metric_title' column contains the title of the metric being reported. This could be any metric related to post insights such as 'post_engagement', 'post_reach', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_description": {"name": "metric_description", "description": "The 'metric_description' column provides a detailed description of what the metric represents. This helps users understand the context and significance of the metric.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_time": {"name": "metric_time", "description": "The 'metric_time' column represents the timestamp at which the metric was recorded. It is of type TIMESTAMP and is in UTC.", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_days_since_publish": {"type": "number", "sql": "date_diff(${fct__post_insights.metric_time},${dim__posts.created_time},day)", "label": "Days since published"}}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "metric_value": {"name": "metric_value", "description": "The 'metric_value' column represents the value of the metric recorded. It is of type FLOAT and can contain decimal values.", "meta": {"dimension": {"type": "number"}, "metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_clicks"}]}, "m_impressions": {"type": "sum", "label": "Impressions", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_impressions"}]}, "m_clicks_unique": {"type": "sum", "label": "Unique Clicks", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_clicks_unique"}]}, "m_paid_impressions": {"type": "sum", "label": "Paid Impressions", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_impressions_paid"}]}, "m_organic_impressions": {"type": "sum", "label": "Organic Impressions", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_impressions_organic"}]}, "m_viral_impressions": {"type": "sum", "label": "Viral Impressions", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_impressions_viral"}]}, "m_click_rate": {"type": "number", "label": "Click Rate", "format": "percent", "round": 2, "sql": "safe_divide(${m_clicks}, ${m_impressions})"}, "m_paid_click_rate": {"type": "number", "label": "Paid Click Rate", "format": "percent", "round": 2, "sql": "safe_divide(${m_clicks}, ${m_paid_impressions})"}, "m_engaged_users": {"type": "sum", "label": "Engaged Users", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_engaged_users"}]}, "m_unique_impressions": {"type": "sum", "label": "Reach", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_impressions_unique"}]}, "m_engagement_rate": {"type": "number", "label": "Engagement Rate", "format": "percent", "round": 2, "sql": "safe_divide(${m_engaged_users}, ${m_unique_impressions})"}, "m_video_view_time": {"type": "sum", "label": "Lifetime View Time", "compact": "thousands", "sql": "${TABLE}.metric_value/1000", "round": 1, "filters": [{"metric_name": "post_video_view_time"}, {"aggregate_period": "lifetime"}]}, "m_avg_view_time": {"type": "average", "label": "Average View Time", "sql": "${TABLE}.metric_value/1000", "round": 1, "filters": [{"metric_name": "post_video_avg_time_watched"}, {"aggregate_period": "lifetime"}]}, "m_video_views": {"type": "sum", "label": "Lifetime Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views"}, {"aggregate_period": "lifetime"}]}, "m_unique_video_views": {"type": "sum", "label": "Lifetime Unique Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_unique"}, {"aggregate_period": "lifetime"}]}, "m_paid_video_views": {"type": "sum", "label": "Lifetime Paid Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_paid"}, {"aggregate_period": "lifetime"}]}, "m_unique_paid_video_views": {"type": "sum", "label": "Unique Paid Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_paid_unique"}]}, "m_video_views_active": {"type": "sum", "label": "Active Videos Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_clicked_to_play"}]}, "m_video_views_autoplayed": {"type": "sum", "label": "Autoplayed Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_autoplayed"}]}, "m_organic_video_views": {"type": "sum", "label": "Organic Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_organic"}]}, "m_unique_organic_video_views": {"type": "sum", "label": "Unique Organic Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_organic_unique"}]}, "m_organic_view_time": {"type": "sum", "sql": "${TABLE}.metric_value/1000", "label": "Organic View Time", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_view_time_organic"}, {"aggregate_period": "lifetime"}]}, "m_daily_video_views": {"type": "sum", "label": "Daily Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views"}, {"aggregate_period": "day"}]}, "m_daily_unique_video_views": {"type": "sum", "label": "Daily Unique Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_unique"}, {"aggregate_period": "day"}]}, "m_daily_paid_video_views": {"type": "sum", "label": "Daily Paid Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_paid"}, {"aggregate_period": "day"}]}, "m_daily_organic_video_views": {"type": "sum", "label": "Daily Organic Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_organic"}, {"aggregate_period": "day"}]}, "m_daily_avg_view_time": {"type": "average", "label": "Daily Average View Time", "sql": "${TABLE}.metric_value/1000", "round": 1, "filters": [{"metric_name": "post_video_avg_time_watched"}, {"aggregate_period": "day"}]}, "m_avg_daily_video_views": {"type": "average", "label": "Average Daily Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views"}, {"aggregate_period": "day"}]}, "m_avg_daily_unique_video_views": {"type": "average", "label": "Average Daily Unique Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_unique"}, {"aggregate_period": "day"}]}, "m_avg_daily_paid_video_views": {"type": "average", "label": "Average Daily Paid Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_paid"}, {"aggregate_period": "day"}]}, "m_avg_daily_organic_video_views": {"type": "average", "label": "Average Daily Organic Video Views", "compact": "thousands", "round": 1, "filters": [{"metric_name": "post_video_views_organic"}, {"aggregate_period": "day"}]}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "date(${fct__post_insights.metric_time}) = ${calendar.date} and ${fct__post_insights.aggregate_period} = 'day'"}, {"join": "dim__posts", "sql_on": "${fct__post_insights.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__post_insights.page_id} = ${dim__pages.page_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/fct__post_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "date(${fct__post_insights.metric_time}) = ${calendar.date} and ${fct__post_insights.aggregate_period} = 'day'"}, {"join": "dim__posts", "sql_on": "${fct__post_insights.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__post_insights.page_id} = ${dim__pages.page_id}"}]}, "tags": ["fact", "view", "facebook"]}, "created_at": 1732268179.9374769, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__post_insights`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','facebook']\n) }}\n\nSELECT\n    * \n    {# except(metric_time),  #}\nFROM\n    {{ ref(\"fct_fb__post_insights\") }}", "language": "sql", "refs": [{"name": "fct_fb__post_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.fct_fb__post_insights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/fct__post_insights.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    * \n    \nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__post_insights`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__campaigns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/dim__campaigns.sql", "original_file_path": "models/marts/marketing/facebook/dim__campaigns.sql", "unique_id": "model.sado_analytics_services.dim__campaigns", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "dim__campaigns"], "alias": "dim__campaigns", "checksum": {"name": "sha256", "checksum": "7b78561916cd2bf31b380244f4313694634ecd5df93f16c506902a1237dad832"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fb", "dimension", "table"], "meta": {"joins": [{"join": "dim__pages", "sql_on": "${dim__campaigns.ad_page_id} = ${dim__pages.page_id}", "always": true}, {"join": "dim__ad_accounts", "sql_on": "${dim__campaigns.account_id} = ${dim__ad_accounts.account_id}", "always": true}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fb", "dimension", "table"], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "adset_name": {"name": "adset_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_name": {"name": "ad_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "adset_id": {"name": "adset_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_key": {"name": "ad_key", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "convention_version_number": {"name": "convention_version_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "channel": {"name": "channel", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "brand_name": {"name": "brand_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_location_layer": {"name": "ad_location_layer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "campaign_category": {"name": "campaign_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "content_edge": {"name": "content_edge", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "audience_type": {"name": "audience_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "target_method": {"name": "target_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "original_audience_name": {"name": "original_audience_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "audience_demographic": {"name": "audience_demographic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "audience_region": {"name": "audience_region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "audience_source_name": {"name": "audience_source_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "media_type": {"name": "media_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "content_code": {"name": "content_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "content_edge_group": {"name": "content_edge_group", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "", "meta": {"dimension": {"type": "string"}, "additional_dimensions": {"d_opening": {"type": "string", "sql": "case when ${TABLE}.event_name in (\"KHAI TR\u01af\u01a0NG\",\"KT\") then \"CH khai tr\u01b0\u01a1ng\" else \"\u0110\u00e3 khai tr\u01b0\u01a1ng\" end", "label": "Opening"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_location": {"name": "ad_location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_group_location": {"name": "ad_group_location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "region": {"name": "region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "country": {"name": "country", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_pic": {"name": "ad_pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "category_name": {"name": "category_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "product_group": {"name": "product_group", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_season": {"type": "string", "sql": "case when ${TABLE}.season in (\"XU\u00c2N H\u00c8\",\"THU \u0110\u00d4NG\",\"QUANH N\u0102M\", \"PH\u1ee4 KI\u1ec6N\") then ${TABLE}.season else \"CH\u01afA PH\u00c2N LO\u1ea0I\" end", "label": "Seasonal"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_page_id": {"name": "ad_page_id", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}}, "meta": {"joins": [{"join": "dim__pages", "sql_on": "${dim__campaigns.ad_page_id} = ${dim__pages.page_id}", "always": true}, {"join": "dim__ad_accounts", "sql_on": "${dim__campaigns.account_id} = ${dim__ad_accounts.account_id}", "always": true}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/dim__campaigns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "dim__pages", "sql_on": "${dim__campaigns.ad_page_id} = ${dim__pages.page_id}", "always": true}, {"join": "dim__ad_accounts", "sql_on": "${dim__campaigns.account_id} = ${dim__ad_accounts.account_id}", "always": true}]}, "tags": ["fb", "dimension", "table"]}, "created_at": 1732268179.9579952, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__campaigns`", "raw_code": "{{\n  config(\n    materialized = 'table',\n    tags = ['fb','dimension','table']\n    )\n}}\n\n{%- set extract_product -%}\n    regexp_replace(regexp_extract(p.content_edge,r'\\w{2} (.*)'),r\"\\s+?\\d+\",\"\")\n    {# regexp_extract(p.content_edge,r'\\w{2} (.*)(?:\\d{2})') #}\n{%-endset-%}\n\nwith store_group as (\n    select\n    distinct \n    local_page, \n    local_page_code,\n    region_code,\n    province_code,\n    from {{ ref('dim__branches') }}\n    where local_page_code is not null\n),\npreprocessing as \n(\n    select \n        distinct c.* except(ad_location,event_name),\n        case \n            when regexp_contains(content_edge,r\"^th|sp th\") then \"T\u1ed5ng h\u1ee3p\"\n            when content_edge like \"sp%\" then \"S\u1ea3n ph\u1ea9m\"\n            when content_edge like \"cb%\" then \"Combo\"\n            when content_edge like \"br%\" then \"Th\u01b0\u01a1ng hi\u1ec7u\"\n            when content_edge like \"nd%\" then \"Nh\u1eadn di\u1ec7n\"\n            when content_edge like \"qt%\" then \"Qu\u00e0 t\u1eb7ng\"\n        end as content_edge_group,\n        case when lower(event_name) = 'kt' then 'KHAI TR\u01af\u01a0NG' else upper(event_name) end as event_name,\n        case \n            when c.ad_location_layer =\"Country\" then \"Vietnam\" \n            else coalesce(s.local_page_code,p.province_code, r.region_code, b.branch_code,c.ad_location) \n        end as ad_location,\n        case \n            when c.ad_location_layer =\"Store\" \n            and coalesce(s.local_page_code, b.local_page_code, c.ad_location) = \"TBH12\" \n            and convention_version_number ='2406'\n            and lower(event_name) in ('kt','khai tr\u01b0\u01a1ng') then 'TBH13'\n            when c.ad_location_layer =\"Store\" then coalesce(s.local_page_code, b.local_page_code, c.ad_location) \n        end as ad_group_location,\n        coalesce(p.province_code,p2.province_code,p3.province_code) as province,\n        coalesce(r.region_code,r2.region_code, r3.region_code) as region,\n        \"Vietnam\" as country,\n\nfrom {{ ref('stg_facebookads__campaigns') }} c\n-- join store group base on convention version number\nleft join store_group s on case when c.convention_version_number = 'B2406' then c.ad_location = s.local_page else c.ad_location = s.local_page_code end \n-- if the store group is null, join with branches\nleft join {{ ref(\"dim__branches\") }} b on c.ad_location = b.branch_code and s.local_page_code is null\n-- if the store group is null, join with branches\nleft join {{ ref(\"dim__provinces\") }} p on c.ad_location = p.province_code\nleft join {{ ref(\"dim__provinces\") }} p2 on s.province_code = p2.province_code\nleft join {{ ref(\"dim__provinces\") }} p3 on b.province_code = p3.province_code\n\nleft join {{ ref(\"dim__regions\") }} r on c.ad_location = r.region_code\nleft join {{ ref(\"dim__regions\") }} r2 on s.region_code = r2.region_code\nleft join {{ ref(\"dim__regions\") }} r3 on b.region_code = r3.region_code\n)\nselect \n    p.* except(ad_pic),\n    case \n        when ad_location in ('5SFTHA') or regexp_contains(lower(ad_pic),r'thang|th\u1eafng')  then 'Th\u1eafng'\n        when ad_location in ('5SFTIE','TIEN') or regexp_contains(lower(ad_pic),r'tien|ti\u1ebfn') then 'Ti\u1ebfn'\n        when ad_location in ('5SFTUN','TUNG') or regexp_contains(lower(ad_pic),r'tung|t\u00f9ng')  then 'T\u00f9ng'\n        when ad_location in ('5SFTRA') or regexp_contains(lower(ad_pic),r'trang|ht') then 'Trang'\n        when ad_location in ('5SFTUY','TUYE') or  regexp_contains(lower(ad_pic),r'tuyen|tuy\u1ec1n') then 'Tuy\u1ec1n'\n    else ad_pic end as ad_pic,\n    upper(coalesce(pg.category_name,{{extract_product}}) ) as category_name,\n    upper(case when coalesce(pg.product_group,{{extract_product}}) = 'atb' then 'ats' else coalesce(pg.product_group,{{extract_product}}) end ) as product_group,\n    upper(coalesce(pg.season,{{extract_product}})) as season,\n    {# ap.ad_page_id, #}\n    from preprocessing p\n    left join {{ ref(\"int__product_group\") }} pg on regexp_extract(p.content_edge,r'\\w{2} (\\w{3})') = pg.product_group_code\n    {# left join {{ ref(\"int_pancake__ad_post_id\") }} ap on p.ad_id = ap.ad_id #}", "language": "sql", "refs": [{"name": "dim__branches", "package": null, "version": null}, {"name": "stg_facebookads__campaigns", "package": null, "version": null}, {"name": "dim__branches", "package": null, "version": null}, {"name": "dim__provinces", "package": null, "version": null}, {"name": "dim__provinces", "package": null, "version": null}, {"name": "dim__provinces", "package": null, "version": null}, {"name": "dim__regions", "package": null, "version": null}, {"name": "dim__regions", "package": null, "version": null}, {"name": "dim__regions", "package": null, "version": null}, {"name": "int__product_group", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.stg_facebookads__campaigns", "model.sado_analytics_services.dim__provinces", "model.sado_analytics_services.dim__regions", "model.sado_analytics_services.int__product_group"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__campaigns.sql", "compiled": true, "compiled_code": "with  __dbt__cte__int__product_group as (\nselect distinct \n    category_name,\n    lower(product_group_code) product_group_code,\n    product_group,\n    season,\n    from \n    `agile-scheme-394814`.`dbt_prod`.`stg__ad_product_categories`\n), store_group as (\n    select\n    distinct \n    local_page, \n    local_page_code,\n    region_code,\n    province_code,\n    from `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches`\n    where local_page_code is not null\n),\npreprocessing as \n(\n    select \n        distinct c.* except(ad_location,event_name),\n        case \n            when regexp_contains(content_edge,r\"^th|sp th\") then \"T\u1ed5ng h\u1ee3p\"\n            when content_edge like \"sp%\" then \"S\u1ea3n ph\u1ea9m\"\n            when content_edge like \"cb%\" then \"Combo\"\n            when content_edge like \"br%\" then \"Th\u01b0\u01a1ng hi\u1ec7u\"\n            when content_edge like \"nd%\" then \"Nh\u1eadn di\u1ec7n\"\n            when content_edge like \"qt%\" then \"Qu\u00e0 t\u1eb7ng\"\n        end as content_edge_group,\n        case when lower(event_name) = 'kt' then 'KHAI TR\u01af\u01a0NG' else upper(event_name) end as event_name,\n        case \n            when c.ad_location_layer =\"Country\" then \"Vietnam\" \n            else coalesce(s.local_page_code,p.province_code, r.region_code, b.branch_code,c.ad_location) \n        end as ad_location,\n        case \n            when c.ad_location_layer =\"Store\" \n            and coalesce(s.local_page_code, b.local_page_code, c.ad_location) = \"TBH12\" \n            and convention_version_number ='2406'\n            and lower(event_name) in ('kt','khai tr\u01b0\u01a1ng') then 'TBH13'\n            when c.ad_location_layer =\"Store\" then coalesce(s.local_page_code, b.local_page_code, c.ad_location) \n        end as ad_group_location,\n        coalesce(p.province_code,p2.province_code,p3.province_code) as province,\n        coalesce(r.region_code,r2.region_code, r3.region_code) as region,\n        \"Vietnam\" as country,\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns` c\n-- join store group base on convention version number\nleft join store_group s on case when c.convention_version_number = 'B2406' then c.ad_location = s.local_page else c.ad_location = s.local_page_code end \n-- if the store group is null, join with branches\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on c.ad_location = b.branch_code and s.local_page_code is null\n-- if the store group is null, join with branches\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__provinces` p on c.ad_location = p.province_code\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__provinces` p2 on s.province_code = p2.province_code\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__provinces` p3 on b.province_code = p3.province_code\n\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__regions` r on c.ad_location = r.region_code\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__regions` r2 on s.region_code = r2.region_code\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__regions` r3 on b.region_code = r3.region_code\n)\nselect \n    p.* except(ad_pic),\n    case \n        when ad_location in ('5SFTHA') or regexp_contains(lower(ad_pic),r'thang|th\u1eafng')  then 'Th\u1eafng'\n        when ad_location in ('5SFTIE','TIEN') or regexp_contains(lower(ad_pic),r'tien|ti\u1ebfn') then 'Ti\u1ebfn'\n        when ad_location in ('5SFTUN','TUNG') or regexp_contains(lower(ad_pic),r'tung|t\u00f9ng')  then 'T\u00f9ng'\n        when ad_location in ('5SFTRA') or regexp_contains(lower(ad_pic),r'trang|ht') then 'Trang'\n        when ad_location in ('5SFTUY','TUYE') or  regexp_contains(lower(ad_pic),r'tuyen|tuy\u1ec1n') then 'Tuy\u1ec1n'\n    else ad_pic end as ad_pic,\n    upper(coalesce(pg.category_name,regexp_replace(regexp_extract(p.content_edge,r'\\w{2} (.*)'),r\"\\s+?\\d+\",\"\")\n    ) ) as category_name,\n    upper(case when coalesce(pg.product_group,regexp_replace(regexp_extract(p.content_edge,r'\\w{2} (.*)'),r\"\\s+?\\d+\",\"\")\n    ) = 'atb' then 'ats' else coalesce(pg.product_group,regexp_replace(regexp_extract(p.content_edge,r'\\w{2} (.*)'),r\"\\s+?\\d+\",\"\")\n    ) end ) as product_group,\n    upper(coalesce(pg.season,regexp_replace(regexp_extract(p.content_edge,r'\\w{2} (.*)'),r\"\\s+?\\d+\",\"\")\n    )) as season,\n    \n    from preprocessing p\n    left join __dbt__cte__int__product_group pg on regexp_extract(p.content_edge,r'\\w{2} (\\w{3})') = pg.product_group_code\n    ", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sado_analytics_services.int__product_group", "sql": " __dbt__cte__int__product_group as (\nselect distinct \n    category_name,\n    lower(product_group_code) product_group_code,\n    product_group,\n    season,\n    from \n    `agile-scheme-394814`.`dbt_prod`.`stg__ad_product_categories`\n)"}], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__video_view_time_by_age_gender": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__video_view_time_by_age_gender", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/fct__video_view_time_by_age_gender.sql", "original_file_path": "models/marts/marketing/facebook/fct__video_view_time_by_age_gender.sql", "unique_id": "model.sado_analytics_services.fct__video_view_time_by_age_gender", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fct__video_view_time_by_age_gender"], "alias": "fct__video_view_time_by_age_gender", "checksum": {"name": "sha256", "checksum": "5bd8744818b93b04932667f6a580ea182bde88d56618eb139a8dd0e5d7598040"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "facebook"], "meta": {"joins": [{"join": "dim__posts", "sql_on": "${fct__video_view_time_by_age_gender.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__video_view_time_by_age_gender.page_id} = ${dim__pages.page_id}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "facebook"], "description": "The model is a fact table that contains metrics related to Facebook post impressions segmented by age and gender.", "columns": {"metric_id": {"name": "metric_id", "description": "The unique identifier for each metric. This is a primary key in the table.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "The unique identifier for each Facebook post. This is a foreign key that links to the posts table.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_name": {"name": "metric_name", "description": "The name of the metric. This column describes the type of metric being recorded, such as 'impressions', 'clicks', 'likes', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "aggregate_period": {"name": "aggregate_period", "description": "The aggregate_period column represents the time period over which the metrics are aggregated. This could be daily, weekly, monthly, etc.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_title": {"name": "metric_title", "description": "The metric_title column contains the title of the metric being measured. This could be impressions, clicks, likes, shares, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_description": {"name": "metric_description", "description": "The metric_description column provides a detailed description of the metric being measured. This could include information on how the metric is calculated, what it represents, and any other relevant details.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_time": {"name": "metric_time", "description": "The 'metric_time' column represents the time period for which the metrics are aggregated. This could be a specific date, week, month, or year depending on the aggregate period.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "gender_group": {"name": "gender_group", "description": "The 'gender_group' column categorizes the impressions by the gender of the Facebook users who viewed the post. The categories include 'male', 'female', and 'unknown'.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "age_group": {"name": "age_group", "description": "The 'age_group' column categorizes the impressions by the age group of the Facebook users who viewed the post. The age groups are defined by Facebook and can range from '13-17', '18-24', '25-34', '35-44', '45-54', '55-64', '65+' and 'unknown'.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_value": {"name": "metric_value", "description": "The 'metric_value' column represents the actual value of the metric being measured. This could be the number of impressions, clicks, likes, shares, etc. depending on the 'metric_name'. The value is aggregated over the specified 'aggregate_period'.", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_total_view_time": {"type": "sum", "label": "Total View Time", "compact": "thousands", "round": 1}, "m_avg_view_time": {"type": "average", "label": "Average View Time", "compact": "thousands", "round": 1}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__posts", "sql_on": "${fct__video_view_time_by_age_gender.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__video_view_time_by_age_gender.page_id} = ${dim__pages.page_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/fct__video_view_time_by_age_gender.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "dim__posts", "sql_on": "${fct__video_view_time_by_age_gender.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__video_view_time_by_age_gender.page_id} = ${dim__pages.page_id}"}]}, "tags": ["fact", "view", "facebook"]}, "created_at": 1732268179.942904, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__video_view_time_by_age_gender`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','facebook']\n) }}\n\nSELECT\n    * except(metric_value),\n    safe_cast(metric_value as float64)/1000 as metric_value,\nFROM\n    {{ ref(\"fct_fb__video_view_time_by_age_gender\") }}", "language": "sql", "refs": [{"name": "fct_fb__video_view_time_by_age_gender", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.fct_fb__video_view_time_by_age_gender"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/fct__video_view_time_by_age_gender.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    * except(metric_value),\n    safe_cast(metric_value as float64)/1000 as metric_value,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_view_time_by_age_gender`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__page_impressions_by_age_gender": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__page_impressions_by_age_gender", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/fct__page_impressions_by_age_gender.sql", "original_file_path": "models/marts/marketing/facebook/fct__page_impressions_by_age_gender.sql", "unique_id": "model.sado_analytics_services.fct__page_impressions_by_age_gender", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fct__page_impressions_by_age_gender"], "alias": "fct__page_impressions_by_age_gender", "checksum": {"name": "sha256", "checksum": "04ba2608093504c2017c761dfd2463bb2ee9ad3443dbe390e1835d1a5f11e7d0"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "facebook"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "facebook"], "description": "The model contains metrics related to Facebook page impressions segmented by age and gender.", "columns": {"metric_id": {"name": "metric_id", "description": "The unique identifier for each metric. This is a string value.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "The unique identifier for each Facebook page. This is a string value.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_name": {"name": "metric_name", "description": "The name of the metric. This is a string value that describes the type of metric being recorded, such as 'page_views', 'likes', 'shares', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "aggregate_period": {"name": "aggregate_period", "description": "The aggregate_period column represents the time period over which the metrics are aggregated. This could be daily, weekly, monthly, etc.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_title": {"name": "metric_title", "description": "The metric_title column contains the title of the metric being reported. This could be 'Page Impressions', 'Page Views', 'Page Likes', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_description": {"name": "metric_description", "description": "The metric_description column provides a detailed description of what the metric represents. This could include information on how the metric is calculated, what it measures, and any other relevant details.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_time": {"name": "metric_time", "description": "The timestamp indicating when the metric was recorded. This is typically the end of the aggregate period.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "metric_value": {"name": "metric_value", "description": "The value of the metric for the given period. This is a floating point number that represents the number of page impressions.", "meta": {"dimension": {"type": "number"}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/fct__page_impressions_by_age_gender.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "tags": ["fact", "view", "facebook"]}, "created_at": 1732268179.834063, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__page_impressions_by_age_gender`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','facebook']\n) }}\n\nSELECT\n    *\nFROM\n    {{ ref(\"fct_fb__page_impressions_by_age_gender\") }}", "language": "sql", "refs": [{"name": "fct_fb__page_impressions_by_age_gender", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.fct_fb__page_impressions_by_age_gender"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/fct__page_impressions_by_age_gender.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_impressions_by_age_gender`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__video_retention": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__video_retention", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/fct__video_retention.sql", "original_file_path": "models/marts/marketing/facebook/fct__video_retention.sql", "unique_id": "model.sado_analytics_services.fct__video_retention", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fct__video_retention"], "alias": "fct__video_retention", "checksum": {"name": "sha256", "checksum": "3ec5ce027c68b8248ecde6afcf33e3b433c581d822442130519ce9768526eb7f"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "facebook"], "meta": {"joins": [{"join": "dim__posts", "sql_on": "${fct__video_retention.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__video_retention.page_id} = ${dim__pages.page_id}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "facebook"], "description": "The model is a fact table that contains metrics related to Facebook page impressions by city.", "columns": {"metric_id": {"name": "metric_id", "description": "The unique identifier for each metric. This is a primary key in the table.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_name": {"name": "metric_name", "description": "The name of the metric. This describes the type of metric being recorded, such as 'page_views', 'likes', 'shares', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "aggregate_period": {"name": "aggregate_period", "description": "The period over which the metric is aggregated. This could be daily, weekly, monthly, etc.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_title": {"name": "metric_title", "description": "The title of the metric being measured. This is a human-readable name that describes what the metric is.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_description": {"name": "metric_description", "description": "A detailed description of the metric. This provides more context about what the metric is measuring and how it is calculated.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_time": {"name": "metric_time", "description": "The 'metric_time' column represents the timestamp at which the metric was recorded. It is in the format of YYYY-MM-DD HH:MM:SS.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "metric_value": {"name": "metric_value", "description": "The 'metric_value' column represents the value of the metric recorded. This could be the number of impressions, clicks, likes, shares, etc., depending on the 'metric_name'.", "meta": {"dimension": {"type": "number"}, "metrics": {"m_percent_retention": {"type": "average", "label": "Percent Retention", "round": 1, "format": "percent", "filter": [{"metric_name": "post_video_retention_graph"}]}, "m_percent_retention_autoplayed": {"type": "average", "label": "Percent Retention (autoplayed)", "round": 1, "format": "percent", "filter": [{"metric_name": "post_video_retention_graph_autoplayed"}]}, "m_percent_retention_clicked": {"type": "average", "label": "Percent Retention (clicked)", "round": 1, "format": "percent", "filter": [{"metric_name": "post_video_retention_graph_clicked_to_play"}]}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "second": {"name": "second", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__posts", "sql_on": "${fct__video_retention.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__video_retention.page_id} = ${dim__pages.page_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/fct__video_retention.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "dim__posts", "sql_on": "${fct__video_retention.post_id} = ${dim__posts.post_id}"}, {"join": "dim__pages", "sql_on": "${fct__video_retention.page_id} = ${dim__pages.page_id}"}]}, "tags": ["fact", "view", "facebook"]}, "created_at": 1732268179.739375, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__video_retention`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','facebook']\n) }}\n\nSELECT\n    * except(metric_value,second),\n    safe_cast(second as int64) as second,\n    safe_cast(metric_value as float64) as metric_value,\nFROM\n    {{ ref(\"fct_fb__video_retention\") }}", "language": "sql", "refs": [{"name": "fct_fb__video_retention", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.fct_fb__video_retention"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/fct__video_retention.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    * except(metric_value,second),\n    safe_cast(second as int64) as second,\n    safe_cast(metric_value as float64) as metric_value,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_retention`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__page_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__page_insights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/fct__page_insights.sql", "original_file_path": "models/marts/marketing/facebook/fct__page_insights.sql", "unique_id": "model.sado_analytics_services.fct__page_insights", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fct__page_insights"], "alias": "fct__page_insights", "checksum": {"name": "sha256", "checksum": "5511985d51f2f6c42ed3c2edbcbb57d83c99edc177cf668b77cc7ab75b37b3a5"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "facebook"], "meta": {"joins": [{"join": "dim__pages", "sql_on": "${fct__page_insights.page_id} = ${dim__pages.page_id}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "facebook"], "description": "The model is a fact table that contains metrics related to Facebook post insights.", "columns": {"metric_id": {"name": "metric_id", "description": "The unique identifier for each metric. This is a primary key in the table.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_name": {"name": "metric_name", "description": "The name of the metric. This is a descriptive field that provides the name of the metric being measured, such as 'likes', 'shares', 'comments', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "aggregate_period": {"name": "aggregate_period", "description": "The aggregate_period column represents the time period over which the metric data was aggregated. This could be daily, weekly, monthly, etc.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_title": {"name": "metric_title", "description": "The metric_title column contains the title of the metric being reported. This could be any of the various metrics that Facebook provides for post insights, such as 'post_engagement', 'post_reach', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_description": {"name": "metric_description", "description": "The metric_description column provides a detailed description of what the metric represents. This is useful for understanding the context and significance of the metric value.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "metric_time": {"name": "metric_time", "description": "The 'metric_time' column represents the timestamp at which the metric was recorded. It is of type TIMESTAMP and is in UTC.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "metric_value": {"name": "metric_value", "description": "The 'metric_value' column represents the value of the metric at the given 'metric_time'. It is of type FLOAT and can take any numerical value.", "meta": {"dimension": {"type": "number"}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__pages", "sql_on": "${fct__page_insights.page_id} = ${dim__pages.page_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/fct__page_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "dim__pages", "sql_on": "${fct__page_insights.page_id} = ${dim__pages.page_id}"}]}, "tags": ["fact", "view", "facebook"]}, "created_at": 1732268179.848657, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__page_insights`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','facebook']\n) }}\n\nSELECT\n    *\nFROM\n    {{ ref(\"fct_fb__page_insights\") }}", "language": "sql", "refs": [{"name": "fct_fb__page_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.fct_fb__page_insights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/fct__page_insights.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_insights`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.facebook_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "facebook_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/facebook_performance.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance.sql", "unique_id": "model.sado_analytics_services.facebook_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_performance"], "alias": "facebook_performance", "checksum": {"name": "sha256", "checksum": "6005bd4211cdbcfde18beb8fcbafb20617fa528697b4f4f0dc52e347e96a31d5"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "hourly", "fact"], "meta": {"joins": [{"join": "calendar", "sql_on": "${facebook_performance.date_start} = ${calendar.date}"}, {"join": "dim__campaigns", "sql_on": "${dim__campaigns.ad_key} = ${facebook_performance.ad_key}", "always": true}, {"join": "dim__ad_accounts", "sql_on": "${dim__ad_accounts.id} = ${dim__campaigns.account_id}"}, {"join": "dim__pages", "sql_on": "${dim__pages.page_id} = ${dim__campaigns.ad_page_id}"}, {"join": "dim__contents", "sql_on": "${dim__contents.content_code} = ${dim__campaigns.content_code}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["date_start", "campaign_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "fact"], "description": "", "columns": {"date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "FB Ads", "compact": "thousands", "round": 1}, "m_avg_impressions": {"type": "average", "label": "AVG Impressions", "group_label": "FB Ads", "compact": "millions", "round": 1}, "m_cpm": {"type": "number", "label": "CPM", "group_label": "FB Ads", "sql": "safe_divide(${m_spend},${m_impressions}) * 1000", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_spend": {"type": "sum", "label": "Spend", "group_label": "FB Ads", "compact": "millions", "round": 2}, "m_avg_spend": {"type": "average", "label": "Avg Spend", "group_label": "FB Ads", "compact": "millions", "round": 1}, "m_ads_purchased": {"type": "number", "label": "Ads Purchased", "sql": "ifnull(${m_ocv},0) + ifnull(${m_pcv},0) + ifnull(${m_meta_purchase},0)", "group_label": "FB Ads", "round": 0}, "m_ads_purchased_value": {"type": "number", "label": "Ads Purchased Value", "sql": "ifnull(${m_ocv_value},0) + ifnull(${m_pcv_value},0) + ifnull(${m_meta_purchase_value},0)", "group_label": "FB Ads", "round": 1, "compact": "millions"}, "m_ads_roas": {"type": "number", "label": "Ads ROAS", "sql": "safe_divide(${m_ads_purchased_value},${m_spend})", "group_label": "FB Ads", "round": 2}, "m_ads_aov": {"type": "number", "label": "Ads AOV", "sql": "safe_divide(${m_ads_purchased_value},${m_ads_purchased})", "group_label": "FB Ads", "round": 1, "compact": "thousands"}, "m_ads_cost_per_purchase": {"type": "number", "label": "Ads Cost per Purchase", "sql": "safe_divide(${m_spend},${m_ads_purchased})", "group_label": "FB Ads", "round": 1, "compact": "thousands"}, "m_ads_cost_over_value": {"type": "number", "label": "Ads Cost over Value", "sql": "safe_divide(${m_spend},${m_ads_purchased_value})", "group_label": "FB Ads", "round": 2, "format": "percent"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "FB Ads", "compact": "thousands", "round": 1}, "m_cpc": {"type": "number", "label": "CPC", "group_label": "FB Ads", "sql": "safe_divide(${m_spend},${m_clicks})", "compact": "thousands", "round": 1}, "m_ctr": {"type": "number", "label": "CTR", "group_label": "FB Ads", "sql": "safe_divide(${m_clicks},${m_impressions})", "format": "percent", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_reach": {"type": "average", "label": "Reach", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "number of clicks to any urls in ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_link_click": {"type": "sum", "label": "Link Clicks", "group_label": "FB Ads", "compact": "thousands", "round": 1}, "m_cpl": {"type": "number", "label": "Cost per Link click", "group_label": "FB Ads", "sql": "safe_divide(${m_spend},${m_link_click})", "compact": "thousands", "round": 1}, "m_ctr_link_click": {"type": "number", "label": "CTR Link Click", "group_label": "FB Ads", "sql": "safe_divide(${m_link_click},${m_impressions})", "format": "percent", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "number of engagement with ad post", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_post_engagement": {"type": "sum", "label": "Post engagement", "group_label": "FB Ads", "compact": "thousands", "round": 1}, "m_cost_per_engagement": {"type": "number", "label": "Cost per engagement", "group_label": "FB Ads", "sql": "safe_divide(${m_spend},${m_post_engagement})", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "number of offline purchases attributed to ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_ocv": {"type": "sum", "label": "Offine CV Purchase", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "offline purchase value attributed to ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_ocv_value": {"type": "sum", "label": "Offline CV Value", "group_label": "FB Ads", "compact": "millions", "round": 1}, "m_ocv_aov": {"type": "number", "label": "Offline AOV", "group_label": "FB Ads", "sql": "safe_divide(${m_ocv_value},${m_ocv})", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "website purchase attributed to ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_pcv": {"type": "sum", "label": "Online CV", "group_label": "FB Ads", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "website purchase value attributed to ads", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_pcv_value": {"type": "sum", "label": "Online CV Value", "group_label": "FB Ads", "compact": "millions", "round": 1}, "m_pcv_aov": {"type": "number", "label": "Online AOV", "group_label": "FB Ads", "sql": "safe_divide(${m_pcv_value},${m_pcv})", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase": {"name": "meta_purchase", "description": "number of purchase generated directly on facebook", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_meta_purchase": {"type": "sum", "label": "Message CV", "group_label": "FB Ads", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase_value": {"name": "meta_purchase_value", "description": "purchase value generated directly on facebook", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_meta_purchase_value": {"type": "sum", "label": "Message CV Value", "group_label": "FB Ads", "compact": "millions", "round": 1}, "m_meta_purchase_aov": {"type": "number", "label": "Message AOV", "group_label": "FB Ads", "sql": "safe_divide(${m_meta_purchase_value},${m_meta_purchase})", "compact": "thousands", "round": 1}, "m_meta_purchase_roas": {"type": "number", "label": "Message ROAS", "group_label": "FB Ads", "sql": "safe_divide(${m_meta_purchase_value},${m_spend})", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_results_message": {"name": "_results_message", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_messages": {"type": "sum", "label": "Messages", "group_label": "FB Ads", "round": 0}, "m_cost_per_message": {"type": "number", "label": "Cost per message", "group_label": "FB Ads", "sql": "safe_divide(${m_spend},${m_messages})", "compact": "thousands", "round": 1}, "m_message_cr": {"type": "number", "label": "Message CR", "group_label": "FB Ads", "sql": "safe_divide(${m_meta_purchase},${m_messages})", "format": "percent", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_key": {"name": "ad_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${facebook_performance.date_start} = ${calendar.date}"}, {"join": "dim__campaigns", "sql_on": "${dim__campaigns.ad_key} = ${facebook_performance.ad_key}", "always": true}, {"join": "dim__ad_accounts", "sql_on": "${dim__ad_accounts.id} = ${dim__campaigns.account_id}"}, {"join": "dim__pages", "sql_on": "${dim__pages.page_id} = ${dim__campaigns.ad_page_id}"}, {"join": "dim__contents", "sql_on": "${dim__contents.content_code} = ${dim__campaigns.content_code}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/facebook_performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${facebook_performance.date_start} = ${calendar.date}"}, {"join": "dim__campaigns", "sql_on": "${dim__campaigns.ad_key} = ${facebook_performance.ad_key}", "always": true}, {"join": "dim__ad_accounts", "sql_on": "${dim__ad_accounts.id} = ${dim__campaigns.account_id}"}, {"join": "dim__pages", "sql_on": "${dim__pages.page_id} = ${dim__campaigns.ad_page_id}"}, {"join": "dim__contents", "sql_on": "${dim__contents.content_code} = ${dim__campaigns.content_code}"}]}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["date_start", "campaign_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "fact"]}, "created_at": 1732268179.78489, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date_start',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  unique_key = ['date_start','campaign_id'],\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'hourly','fact']\n) }}\n\n{# WITH facebook_performance AS ( #}\n\n  SELECT\n    adsinsights.account_id,\n    adsinsights.date_start,\n    {# campaigns.campaign_name, #}\n    {# campaigns.event_name as big_campaign,\n    campaigns.ad_pic as pic,\n    campaigns.content_edge as content_group,\n    campaigns.ad_location as page,\n    campaigns.content_edge as promoted_productline,\n    campaigns.media_type,\n    campaigns.campaign_category as ad_type, #}\n    {# campaigns.audience_source_name as funnel, #}\n    adsinsights.ad_key,\n    SUM(adsinsights.impressions) impressions,\n    SUM(adsinsights.spend) spend,\n    SUM(adsinsights.clicks) clicks,\n    SUM(adsinsights.reach) reach,\n    SUM(adsinsights.link_click) link_click,\n    SUM(adsinsights.post_engagement) post_engagement,\n    SUM(adsinsights.offline_conversion_purchase) offline_conversion_purchase,\n    SUM(adsinsights.offline_conversion_purchase_value) offline_conversion_purchase_value,\n    SUM(adsinsights.pixel_purchase) pixel_purchase,\n    SUM(adsinsights.pixel_purchase_value) pixel_purchase_value,\n    SUM(adsinsights.meta_purchase) meta_purchase,\n    SUM(adsinsights.meta_purchase_value) meta_purchase_value,\n    SUM(adsinsights.messaging_conversation_started_7d) _results_message\n  FROM\n    {{ ref('stg_facebookads__adsinsights') }}\n    adsinsights\n    where 1=1\n    {% if is_incremental() %}\n       and date_start >= date_add(current_date, interval -1 day)\n    {% endif %}\n\n    {{ dbt_utils.group_by(3) }}", "language": "sql", "refs": [{"name": "stg_facebookads__adsinsights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_facebookads__adsinsights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/facebook_performance.sql", "compiled": true, "compiled_code": "\n\n\n\n  SELECT\n    adsinsights.account_id,\n    adsinsights.date_start,\n    \n    \n    \n    adsinsights.ad_key,\n    SUM(adsinsights.impressions) impressions,\n    SUM(adsinsights.spend) spend,\n    SUM(adsinsights.clicks) clicks,\n    SUM(adsinsights.reach) reach,\n    SUM(adsinsights.link_click) link_click,\n    SUM(adsinsights.post_engagement) post_engagement,\n    SUM(adsinsights.offline_conversion_purchase) offline_conversion_purchase,\n    SUM(adsinsights.offline_conversion_purchase_value) offline_conversion_purchase_value,\n    SUM(adsinsights.pixel_purchase) pixel_purchase,\n    SUM(adsinsights.pixel_purchase_value) pixel_purchase_value,\n    SUM(adsinsights.meta_purchase) meta_purchase,\n    SUM(adsinsights.meta_purchase_value) meta_purchase_value,\n    SUM(adsinsights.messaging_conversation_started_7d) _results_message\n  FROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__adsinsights`\n    adsinsights\n    where 1=1\n    \n       and date_start >= date_add(current_date, interval -1 day)\n    \n\n    group by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__pages": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__pages", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/dim__pages.sql", "original_file_path": "models/marts/marketing/facebook/dim__pages.sql", "unique_id": "model.sado_analytics_services.dim__pages", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "dim__pages"], "alias": "dim__pages", "checksum": {"name": "sha256", "checksum": "8817c940b25a284fb857a09801a776912db129f78a6325dcf53547dd62226ddb"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["dimension", "view", "facebook"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["dimension", "view", "facebook"], "description": "The model is a dimension table that contains information about different pages.", "columns": {"page_id": {"name": "page_id", "description": "The unique identifier for each page. This is a primary key.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_name": {"name": "page_name", "description": "The name of the page. This is a descriptive field that provides the name as it appears on the platform.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_about": {"name": "page_about", "description": "A brief description or about section of the page. This field provides additional information about the page.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_category": {"name": "page_category", "description": "The category of the page. This field is used to classify the page into a specific category based on its content and purpose.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "global_brand_page_name": {"name": "global_brand_page_name", "description": "The global brand name associated with the page. This field is used to identify the global brand that the page represents.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "has_transitioned_to_new_page_experience": {"name": "has_transitioned_to_new_page_experience", "description": "A boolean field indicating whether the page has transitioned to a new page experience. If the value is true, it means the page has transitioned to a new page experience; if false, it has not.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_link": {"name": "page_link", "description": "The 'page_link' column contains the URL of the page. This is a unique identifier for each page and can be used to directly access the page.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_phone": {"name": "page_phone", "description": "The 'page_phone' column contains the phone number associated with the page. This could be the contact number for the business or individual the page represents.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_website": {"name": "page_website", "description": "The 'page_website' column contains the website associated with the page. This could be the official website of the business or individual the page represents.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "store_code": {"name": "store_code", "description": "The 'store_code' column represents the unique code assigned to each store associated with the page. This code is used for internal tracking and identification purposes.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "store_number": {"name": "store_number", "description": "The 'store_number' column represents the unique number assigned to each store associated with the page. This number is used for internal tracking and identification purposes.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "single_line_address": {"name": "single_line_address", "description": "The 'single_line_address' column represents the physical address of the store associated with the page. The address is presented in a single line format.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "bm_id": {"name": "bm_id", "description": "The bm_id column represents the unique identifier for the business manager associated with the page.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "bm_name": {"name": "bm_name", "description": "The bm_name column represents the name of the business manager associated with the page.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/dim__pages.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "tags": ["dimension", "view", "facebook"]}, "created_at": 1732268179.9714482, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__pages`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['dimension', 'view','facebook']\n) }}\n\nSELECT\n    p.*,\n    lg.region,\n    lg.province,\n    lg.fb_ads_pic,\nFROM\n    {{ ref(\"stg_fb__pages\") }}\n    p\n    LEFT JOIN {{ ref(\"dim__location_groups\") }}\n    lg\n    ON p.store_code = lg.local_page_code", "language": "sql", "refs": [{"name": "stg_fb__pages", "package": null, "version": null}, {"name": "dim__location_groups", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.fb.stg_fb__pages", "model.sado_analytics_services.dim__location_groups"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__pages.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    p.*,\n    lg.region,\n    lg.province,\n    lg.fb_ads_pic,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_fb__pages`\n    p\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod_marketing`.`dim__location_groups`\n    lg\n    ON p.store_code = lg.local_page_code", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.facebook_budget": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "facebook_budget", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/facebook_budget.sql", "original_file_path": "models/marts/marketing/facebook/facebook_budget.sql", "unique_id": "model.sado_analytics_services.facebook_budget", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_budget"], "alias": "facebook_budget", "checksum": {"name": "sha256", "checksum": "916d20dbb6151321566bd20c8b881a45ee466bba66a09a85ed1b0235397bcc00"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "fact", "budget", "ignore"], "meta": {"joins": [{"join": "dim__branches", "sql_on": "${dim__branches.branch_id} =${facebook_budget.branch_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${facebook_budget.date}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["branch_id", "date"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date", "data_type": "date", "granularity": "month"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "budget", "ignore"], "description": "", "columns": {"branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number"}, "metrics": {"m_num_stores": {"type": "count_distinct", "label": "No. Stores", "group_label": "Misc"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch": {"name": "branch", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start": {"name": "start", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "milestone_name": {"name": "milestone_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end": {"name": "end", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_budget": {"name": "daily_budget", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_budget": {"type": "sum", "label": "Budget", "group_label": "Budget", "compact": "millions", "round": 1}, "m_avg_budget": {"type": "average", "label": "_Budget", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_sales_target": {"name": "daily_sales_target", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_sales_target": {"type": "sum", "label": "Sales Target", "group_label": "Budget", "compact": "millions", "round": 1}, "m_avg_sales_target": {"type": "average", "label": "_Sales Target", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_traffic_target": {"name": "daily_traffic_target", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_traffic_target": {"type": "sum", "label": "Traffic Target", "group_label": "Budget", "compact": "thousands", "round": 1}, "m_avg_traffic_target": {"type": "average", "label": "_Traffic Target", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_aov": {"name": "daily_aov", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "local_page": {"name": "local_page", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region_page": {"name": "region_page", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__branches", "sql_on": "${dim__branches.branch_id} =${facebook_budget.branch_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${facebook_budget.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/facebook_budget.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "dim__branches", "sql_on": "${dim__branches.branch_id} =${facebook_budget.branch_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${facebook_budget.date}"}]}, "partition_by": {"field": "date", "data_type": "date", "granularity": "month"}, "unique_key": ["branch_id", "date"], "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["incremental", "fact", "budget", "ignore"]}, "created_at": 1732268179.8325205, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_budget`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'date',\n    'data_type': 'date',\n    'granularity': 'month' },\n    unique_key = ['branch_id','date'],\n    incremental_strategy = 'insert_overwrite',\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'fact','budget','ignore']\n) }}\n\n{% set targets = [\"budget\", \"sales_target\", \"traffic_target\",'aov'] %}\nWITH processed AS (\n    SELECT\n        *\n    EXCEPT\n        ({% for item in targets %}\n            val_{{ item }} {{ \", \" if not loop.last }}\n        {% endfor %}),\n        {% for item in targets %}\n            safe_divide(val_{{ item }}, date_diff(tb.end, tb.start, DAY) + 1) AS daily_{{ item }},\n        {% endfor %}\nFROM\n    (\n        SELECT\n            {# branch_id, #}\n            case when branch =  '5S Nam Giang' then '5S Nam Giang 2' else branch end as branch,\n            {# local_page, #}\n            {# region_page, #}\n            milestones.*,\n        FROM\n            {{ ref('stg_gsheet__facebook_budget') }} b,\n            unnest(milestones) milestones\n    ) \n    pivot (\n    SUM(VALUE) AS val for budget_type IN ('{{targets|join(\"','\")}}')\n    ) AS tb\n),\nfinal as (SELECT\n    processed.*,\n    C.date,\nFROM\n    processed\n    CROSS JOIN {{ ref(\"calendar\") }} C \nWHERE\n    C.date >= processed.start\n    AND C.date <= processed.end {# {{dbt_utils.group_by(14)}} #}\n        {% if is_incremental() %}\n          and processed.start >=  date_trunc(date(_dbt_max_partition),month)\n        {% endif %}\n        )\n\nselect final.*,\nbranch.branch_id,\nbranch.local_page_code,\nbranch.fb_ads_pic,\n{# branch.region_page_code, #}\nfrom final\nleft join {{ ref('dim__branches') }} branch\non lower(final.branch) = lower(branch.branch_name)\nwhere 1= 1\nand branch.branch_id not in (select branch_id from {{ ref('kiotviet__removed_branch') }})", "language": "sql", "refs": [{"name": "stg_gsheet__facebook_budget", "package": null, "version": null}, {"name": "calendar", "package": null, "version": null}, {"name": "dim__branches", "package": null, "version": null}, {"name": "kiotviet__removed_branch", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_gsheet__facebook_budget", "model.sado_analytics_services.calendar", "model.sado_analytics_services.dim__branches", "seed.sado_analytics_services.kiotviet__removed_branch"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/facebook_budget.sql", "compiled": true, "compiled_code": "\n\n\nWITH processed AS (\n    SELECT\n        *\n    EXCEPT\n        (\n            val_budget , \n        \n            val_sales_target , \n        \n            val_traffic_target , \n        \n            val_aov \n        ),\n        \n            safe_divide(val_budget, date_diff(tb.end, tb.start, DAY) + 1) AS daily_budget,\n        \n            safe_divide(val_sales_target, date_diff(tb.end, tb.start, DAY) + 1) AS daily_sales_target,\n        \n            safe_divide(val_traffic_target, date_diff(tb.end, tb.start, DAY) + 1) AS daily_traffic_target,\n        \n            safe_divide(val_aov, date_diff(tb.end, tb.start, DAY) + 1) AS daily_aov,\n        \nFROM\n    (\n        SELECT\n            \n            case when branch =  '5S Nam Giang' then '5S Nam Giang 2' else branch end as branch,\n            \n            \n            milestones.*,\n        FROM\n            `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__facebook_budget` b,\n            unnest(milestones) milestones\n    ) \n    pivot (\n    SUM(VALUE) AS val for budget_type IN ('budget','sales_target','traffic_target','aov')\n    ) AS tb\n),\nfinal as (SELECT\n    processed.*,\n    C.date,\nFROM\n    processed\n    CROSS JOIN `agile-scheme-394814`.`dbt_prod`.`calendar` C \nWHERE\n    C.date >= processed.start\n    AND C.date <= processed.end \n        \n          and processed.start >=  date_trunc(date(_dbt_max_partition),month)\n        \n        )\n\nselect final.*,\nbranch.branch_id,\nbranch.local_page_code,\nbranch.fb_ads_pic,\n\nfrom final\nleft join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` branch\non lower(final.branch) = lower(branch.branch_name)\nwhere 1= 1\nand branch.branch_id not in (select branch_id from `agile-scheme-394814`.`dbt_prod`.`kiotviet__removed_branch`)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__location_groups": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__location_groups", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/dim__location_groups.sql", "original_file_path": "models/marts/marketing/facebook/dim__location_groups.sql", "unique_id": "model.sado_analytics_services.dim__location_groups", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "dim__location_groups"], "alias": "dim__location_groups", "checksum": {"name": "sha256", "checksum": "282f5422c65e901621cd43124959521e852827aa29ed6bebb378516d8306894e"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} >= ${dim__location_groups.opening_day}", "type": "full", "always": true}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"local_page_code": {"name": "local_page_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "local_page": {"name": "local_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region": {"name": "region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asm_name": {"name": "asm_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fb_ads_pic": {"name": "fb_ads_pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opening_day": {"name": "opening_day", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}, "additional_dimensions": {"d_opening": {"type": "string", "label": "CH Khai tr\u01b0\u01a1ng", "sql": "case when date_diff( ${calendar.date},${TABLE}.opening_day,day) <10 then \"CH khai tr\u01b0\u01a1ng\" else '\u0110\u00e3 khai tr\u01b0\u01a1ng' end"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "close_date": {"name": "close_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} >= ${dim__location_groups.opening_day}", "type": "full", "always": true}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/dim__location_groups.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} >= ${dim__location_groups.opening_day}", "type": "full", "always": true}]}}, "created_at": 1732268179.8404307, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__location_groups`", "raw_code": "{{ config(\n    materialized = 'view',\n) }}\n\nSELECT\n    local_page_code,\n    local_page,\n    region,\n    province,\n    asm_name,\n    fb_ads_pic,\n    MAX(opening_day) opening_day,\n    MAX(close_date) close_date,\nFROM\n    {{ ref('dim__branches') }}\nWHERE\n    1=1 \n    and channel = 'Offline' \n    and local_page_code is not null\n    {{ dbt_utils.group_by(6) }}", "language": "sql", "refs": [{"name": "dim__branches", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.dim__branches"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__location_groups.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    local_page_code,\n    local_page,\n    region,\n    province,\n    asm_name,\n    fb_ads_pic,\n    MAX(opening_day) opening_day,\n    MAX(close_date) close_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches`\nWHERE\n    1=1 \n    and channel = 'Offline' \n    and local_page_code is not null\n    group by 1,2,3,4,5,6", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__sms_revenue": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__sms_revenue", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/sms/fct__sms_revenue.sql", "original_file_path": "models/marts/marketing/sms/fct__sms_revenue.sql", "unique_id": "model.sado_analytics_services.fct__sms_revenue", "fqn": ["sado_analytics_services", "marts", "marketing", "sms", "fct__sms_revenue"], "alias": "fct__sms_revenue", "checksum": {"name": "sha256", "checksum": "ec934d80a44050bb2e9358dcb9b92aca9d8ccc447fe79d8cc07368795329dcac"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["table", "fact", "sms", "daily"], "meta": {"joins": [{"join": "calendar", "alias": "sent_calendar", "sql_on": "${sent_calendar.date} = date(${fct__sms_revenue.sent_time})"}, {"join": "dim__sms_campaigns", "sql_on": "${dim__sms_campaigns.campaign} = ${fct__sms_revenue.campaign}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__sms_revenue.customer_id} and date(${rfm_movement.start_of_month}) = date_trunc(date(${fct__sms_revenue.sent_time}),month)"}, {"join": "calendar", "alias": "rev_calendar", "sql_on": "${rev_calendar.date} = ${fct__sms_revenue.transaction_date}"}]}, "group": null, "materialized": "table", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["campaign", "phone", "sent_time", "transaction_date"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "sent_time", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "sms", "daily"], "description": "", "columns": {"phone": {"name": "phone", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_id": {"name": "sent_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign": {"name": "campaign", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_id": {"name": "reference_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_cost": {"name": "sms_cost", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_status": {"name": "sent_status", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_result": {"name": "sent_result", "description": "", "meta": {"dimension": {"type": "boolean", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_time": {"name": "sent_time", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_id": {"name": "sms_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_type": {"name": "sms_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}, "additional_dimensions": {"d_lag_days": {"type": "number", "sql": "date_diff(transaction_date,date(sent_time),day)"}}, "metrics": {"m_avg_lag_days": {"type": "average", "sql": "${d_lag_days}", "label": "Avg lag days", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_sms_revenue": {"type": "sum", "label": "SMS Revenue", "compact": "millions", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number"}, "additional_dimensions": {"d_previous_segment": {"type": "string", "sql": "coalesce(${rfm_movement.previous_segment},'Cold Data')", "label": "Previous Segment"}, "d_segment": {"type": "string", "sql": "coalesce(${rfm_movement.segment},'Cold Data')", "label": "Segment"}}, "metrics": {"m_customer_converted": {"type": "count_distinct", "label": "No. customer converted", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "alias": "sent_calendar", "sql_on": "${sent_calendar.date} = date(${fct__sms_revenue.sent_time})"}, {"join": "dim__sms_campaigns", "sql_on": "${dim__sms_campaigns.campaign} = ${fct__sms_revenue.campaign}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__sms_revenue.customer_id} and date(${rfm_movement.start_of_month}) = date_trunc(date(${fct__sms_revenue.sent_time}),month)"}, {"join": "calendar", "alias": "rev_calendar", "sql_on": "${rev_calendar.date} = ${fct__sms_revenue.transaction_date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/sms/fct__sms_revenue.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "alias": "sent_calendar", "sql_on": "${sent_calendar.date} = date(${fct__sms_revenue.sent_time})"}, {"join": "dim__sms_campaigns", "sql_on": "${dim__sms_campaigns.campaign} = ${fct__sms_revenue.campaign}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__sms_revenue.customer_id} and date(${rfm_movement.start_of_month}) = date_trunc(date(${fct__sms_revenue.sent_time}),month)"}, {"join": "calendar", "alias": "rev_calendar", "sql_on": "${rev_calendar.date} = ${fct__sms_revenue.transaction_date}"}]}, "partition_by": {"field": "sent_time", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["campaign", "phone", "sent_time", "transaction_date"], "on_schema_change": "sync_all_columns", "tags": ["table", "fact", "sms", "daily"]}, "created_at": 1732268179.9831467, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__sms_revenue`", "raw_code": "{{ config(\n    materialized = 'table',\n    partition_by ={ 'field': 'sent_time',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['campaign','phone', 'sent_time', 'transaction_date'],\n    on_schema_change = 'sync_all_columns',\n    tags = ['table', 'fact','sms','daily']\n) }}\n\nWITH revenue AS (\n    SELECT\n        r.customer_id,\n        C.contact_number,\n        DATE(r.transaction_date) transaction_date,\n        SUM(r.total) total,\n    FROM\n        {{ ref('fct__transactions') }} r\n        LEFT JOIN {{ ref('fct__customers') }} C\n        ON r.customer_id = C.universal_customer_id\n        left join {{ ref(\"dim__branches\") }} b on r.branch_id = b.branch_id\n    WHERE\n        r.transaction_type = 'invoice'\n        AND C.contact_number IS NOT NULL\n        and b.channel = 'Offline'\n        {% if is_incremental() %}\n        AND DATE(r.transaction_date) >= date_add(current_date, INTERVAL -15 DAY)\n        {% endif %}\n{{dbt_utils.group_by(3)}}\n    ),\n    sms_data AS (\n        SELECT\n            *\n        FROM\n            {{ ref('stg_esms__sent_data') }}\n            sms\n        WHERE\n            sms.sent_time IS NOT NULL\n            AND sent_status in ('Th\u00e0nh c\u00f4ng')\n            and (audience not in ('TUYEN DUNG','THONG BAO DON HANG') or audience is null)\n        {% if is_incremental() %}\n        AND DATE(sms.sent_time) >= date_add(current_date, INTERVAL -7 DAY)\n        {% endif %}\n)\nSELECT\n    sms.* except(start_date, end_date,audience),\n    revenue.transaction_date,\n    revenue.total,\n    revenue.customer_id,\nFROM\n    sms_data sms\n    LEFT JOIN revenue\n    ON sms.phone = revenue.contact_number\nWHERE\n    DATE(sms.sent_time) < revenue.transaction_date \n    AND (\n        revenue.transaction_date  <= DATE(sms.end_date)  or date_diff(revenue.transaction_date, DATE(sms.sent_time), DAY) <= 10 \n    )\n\nqualify ROW_NUMBER() over( PARTITION BY revenue.customer_id, revenue.transaction_date ORDER BY sms.sent_time DESC) = 1", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}, {"name": "fct__customers", "package": null, "version": null}, {"name": "dim__branches", "package": null, "version": null}, {"name": "stg_esms__sent_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.fct__transactions", "model.sado_analytics_services.fct__customers", "model.sado_analytics_services.dim__branches", "model.sado_analytics_services.stg_esms__sent_data"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/sms/fct__sms_revenue.sql", "compiled": true, "compiled_code": "\n\nWITH revenue AS (\n    SELECT\n        r.customer_id,\n        C.contact_number,\n        DATE(r.transaction_date) transaction_date,\n        SUM(r.total) total,\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` r\n        LEFT JOIN `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers` C\n        ON r.customer_id = C.universal_customer_id\n        left join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on r.branch_id = b.branch_id\n    WHERE\n        r.transaction_type = 'invoice'\n        AND C.contact_number IS NOT NULL\n        and b.channel = 'Offline'\n        \ngroup by 1,2,3\n    ),\n    sms_data AS (\n        SELECT\n            *\n        FROM\n            `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`\n            sms\n        WHERE\n            sms.sent_time IS NOT NULL\n            AND sent_status in ('Th\u00e0nh c\u00f4ng')\n            and (audience not in ('TUYEN DUNG','THONG BAO DON HANG') or audience is null)\n        \n)\nSELECT\n    sms.* except(start_date, end_date,audience),\n    revenue.transaction_date,\n    revenue.total,\n    revenue.customer_id,\nFROM\n    sms_data sms\n    LEFT JOIN revenue\n    ON sms.phone = revenue.contact_number\nWHERE\n    DATE(sms.sent_time) < revenue.transaction_date \n    AND (\n        revenue.transaction_date  <= DATE(sms.end_date)  or date_diff(revenue.transaction_date, DATE(sms.sent_time), DAY) <= 10 \n    )\n\nqualify ROW_NUMBER() over( PARTITION BY revenue.customer_id, revenue.transaction_date ORDER BY sms.sent_time DESC) = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.google_ad_group_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "google_ad_group_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/google/google_ad_group_performance.sql", "original_file_path": "models/marts/marketing/google/google_ad_group_performance.sql", "unique_id": "model.sado_analytics_services.google_ad_group_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "google", "google_ad_group_performance"], "alias": "google_ad_group_performance", "checksum": {"name": "sha256", "checksum": "b0d9179dce9171dcc5d31a49eb23b6e5ef6c0173c21ca5dffd76d550ff76037a"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["ggads", "fact", "table"], "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${google_ad_group_performance.ad_group_id}=${stg_googleads__ad_groups.ad_group_id}"}, {"join": "stg_googleads__campaigns", "sql_on": "${google_ad_group_performance.campaign_id}=${stg_googleads__campaigns.campaign_id}"}, {"join": "calendar", "sql_on": "${google_ad_group_performance.date}=${calendar.date}"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "table"], "description": "", "columns": {"campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.M\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.Ph\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "top_impression_percentage": {"name": "top_impression_percentage", "description": "The percent of your ad impressions that are shown anywhere above the organic search results.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"metrics": {"m_top_impression_percentage": {"type": "average", "label": "Top Impression Percentage", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_top_impression_share": {"name": "search_top_impression_share", "description": "The impressions you've received in the top location (anywhere above the organic search results) compared to the estimated number of impressions you were eligible to receive in the top location.T\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb t\u1ea1i khu v\u1ef1c \u0111\u1ea7u (tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm) tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec7n th\u1ecb khu v\u1ef1c \u0111\u1ea7u.", "meta": {"metrics": {"m_search_top_impression_share": {"type": "average", "label": "Search Top Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p100_rate": {"name": "video_quartile_p100_rate", "description": "Percentage of impressions where the viewer watched all of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem to\u00e0n b\u1ed9 video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p100_rate": {"type": "average", "label": "Video Quartile P100 Rate", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p75_rate": {"name": "video_quartile_p75_rate", "description": "Percentage of impressions where the viewer watched 75% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 75% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p75_rate": {"type": "average", "label": "Video Quartile P75 Rate", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p50_rate": {"name": "video_quartile_p50_rate", "description": "Percentage of impressions where the viewer watched 50% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 50% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p50_rate": {"type": "average", "label": "Video Quartile P50 Rate", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p25_rate": {"name": "video_quartile_p25_rate", "description": "Percentage of impressions where the viewer watched 25% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 25% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p25_rate": {"type": "average", "label": "Video Quartile P25 Rate", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "absolute_top_impression_percentage": {"name": "absolute_top_impression_percentage", "description": "The percent of your ad impressions that are shown as the very first ad above the organic search results.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb th\u1ee9 t\u1ef1 \u0111\u1ea7u ti\u00ean trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"metrics": {"m_absolute_top_impression_percentage": {"type": "average", "label": "Absolute Top Impression Percentage", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_impression_share": {"name": "content_impression_share", "description": "The impressions you've received on the Display Network divided by the estimated number of impressions you were eligible to receive.T\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o qua Display Network tr\u00ean s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb.", "meta": {"metrics": {"m_content_impression_share": {"type": "average", "label": "Content Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_rank_lost_impression_share": {"name": "content_rank_lost_impression_share", "description": "The estimated percentage of impressions on the Display Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb tr\u00ean Display Network b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"metrics": {"m_content_rank_lost_impression_share": {"type": "average", "label": "Content Rank Lost Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cross_device_conversions": {"name": "cross_device_conversions", "description": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.Chuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cross_device_conversions": {"type": "sum", "label": "Cross Device Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagements": {"name": "engagements", "description": "The number of engagements. An engagement occurs when a viewer expands your Lightbox ad.S\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. V\u1edbi qu\u1ea3ng c\u00e1o display s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng m\u1edf r\u1ed9ng qu\u1ea3ng c\u00e1o (Lightbox)", "meta": {"metrics": {"m_engagements": {"type": "sum", "label": "Engagements", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relative_ctr": {"name": "relative_ctr", "description": "Your clickthrough rate (Ctr) divided by the average clickthrough rate of all advertisers on the websites that show your ads.T\u1ec9 l\u1ec7 nh\u1ea5p t\u01b0\u01a1ng \u0111\u1ed1i, t\u00ednh d\u1ef1a tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p trung b\u00ecnh c\u1ee7a c\u00e1c nh\u00e0 qu\u1ea3ng c\u00e1o kh\u00e1c tr\u00ean trang m\u00e0 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb.", "meta": {"metrics": {"m_relative_ctr": {"type": "average", "label": "Relative Ctr", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_absolute_top_impression_share": {"name": "search_absolute_top_impression_share", "description": "The percentage of the customer's Shopping or Search ad impressions that are shown in the most prominent Shopping position.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o t\u00ecm ki\u1ebfm ho\u1eb7c mua s\u1eafm \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb v\u1ecb tr\u00ed t\u1ed1t nh\u1ea5t.", "meta": {"metrics": {"m_search_absolute_top_impression_share": {"type": "average", "label": "Search Absolute Top Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_budget_lost_absolute_top_impression_share": {"name": "search_budget_lost_absolute_top_impression_share", "description": "The number estimating how often your ad wasn't the very first ad above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb t\u1ea1i v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ng\u00e2n s\u00e1ch th\u1ea5p.", "meta": {"metrics": {"m_search_budget_lost_absolute_top_impression_share": {"type": "average", "label": "Search Budget Lost Absolute Top Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_budget_lost_top_impression_share": {"name": "search_budget_lost_top_impression_share", "description": "The number estimating how often your ad didn't show anywhere above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb do ng\u00e2n s\u00e1ch th\u1ea5p.", "meta": {"metrics": {"m_search_budget_lost_top_impression_share": {"type": "average", "label": "Search Budget Lost Top Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_impression_share": {"name": "search_impression_share", "description": "The impressions you've received on the Search Network divided by the estimated number of impressions you were eligible to receive.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb.", "meta": {"metrics": {"m_search_impression_share": {"type": "average", "label": "Search Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_absolute_top_impression_share": {"name": "search_rank_lost_absolute_top_impression_share", "description": "The number estimating how often your ad wasn't the very first ad above the organic search results due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"metrics": {"m_search_rank_lost_absolute_top_impression_share": {"type": "average", "label": "Search Rank Lost Absolute Top Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_impression_share": {"name": "search_rank_lost_impression_share", "description": "The estimated percentage of impressions on the Search Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t tr\u00ean k\u00eanh t\u00ecm ki\u1ebfm do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"metrics": {"m_search_rank_lost_impression_share": {"type": "average", "label": "Search Rank Lost Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_top_impression_share": {"name": "search_rank_lost_top_impression_share", "description": "The number estimating how often your ad didn't show anywhere above the organic search results due to poor Ad Rank\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"metrics": {"m_search_rank_lost_top_impression_share": {"type": "average", "label": "Search Rank Lost Top Impression Share", "group_label": "GG Ads metrics", "format": "percent", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_views": {"name": "video_views", "description": "The number of times your video ads were viewed.S\u1ed1 l\u01b0\u1ee3t qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c xem.", "meta": {"metrics": {"m_video_views": {"type": "sum", "label": "Video Views", "group_label": "GG Ads metrics", "compact": "thousands"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.S\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "GG Ads metrics", "compact": "thousands"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions": {"type": "sum", "label": "Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.Chi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics", "compact": "millions", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.S\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.S\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"m_interactions": {"type": "sum", "label": "Interactions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"metrics": {"m_view_through_conversions": {"type": "sum", "label": "View Through Conversions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${google_ad_group_performance.ad_group_id}=${stg_googleads__ad_groups.ad_group_id}"}, {"join": "stg_googleads__campaigns", "sql_on": "${google_ad_group_performance.campaign_id}=${stg_googleads__campaigns.campaign_id}"}, {"join": "calendar", "sql_on": "${google_ad_group_performance.date}=${calendar.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/google/google_ad_group_performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${google_ad_group_performance.ad_group_id}=${stg_googleads__ad_groups.ad_group_id}"}, {"join": "stg_googleads__campaigns", "sql_on": "${google_ad_group_performance.campaign_id}=${stg_googleads__campaigns.campaign_id}"}, {"join": "calendar", "sql_on": "${google_ad_group_performance.date}=${calendar.date}"}]}, "tags": ["ggads", "fact", "table"]}, "created_at": 1732268180.0232365, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`google_ad_group_performance`", "raw_code": "{{ config(\n    tags = ['ggads','fact','table']\n) }}\n\nWITH ad_group_stats AS (\n\n    SELECT\n        ad_group_id,\n        campaign_id,\n        DATE,\n        SUM(clicks) clicks,\n        SUM(conversions) conversions,\n        SUM(conversions_value) conversions_value,\n        SUM(cost) cost,\n        SUM(impressions) impressions,\n        SUM(interactions) interactions,\n        SUM(view_through_conversions) view_through_conversions,\n    FROM\n        {{ ref('stg_googleads__ad_group_stats') }}\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    ags.campaign_id,\n    ags.ad_group_id,\n    ags.date,\n    ags.network_type,\n    ags.top_impression_percentage,\n    ags.search_top_impression_share,\n    ags.video_quartile_p100_rate,\n    ags.video_quartile_p75_rate,\n    ags.video_quartile_p50_rate,\n    ags.video_quartile_p25_rate,\n    ags.absolute_top_impression_percentage,\n    ags.content_impression_share,\n    ags.content_rank_lost_impression_share,\n    ags.cross_device_conversions,\n    ags.engagements,\n    ags.relative_ctr,\n    ags.search_absolute_top_impression_share,\n    ags.search_budget_lost_absolute_top_impression_share,\n    ags.search_budget_lost_top_impression_share,\n    ags.search_impression_share,\n    ags.search_rank_lost_absolute_top_impression_share,\n    ags.search_rank_lost_impression_share,\n    ags.search_rank_lost_top_impression_share,\n    ags.video_views,\n    s.clicks,\n    s.conversions,\n    s.cost,\n    s.impressions,\n    s.interactions,\n    s.view_through_conversions,\nFROM\n    {{ ref('stg_googleads__ad_group_cross_device_stats') }}\n    ags\n    LEFT JOIN ad_group_stats s\n    ON ags.campaign_id = s.campaign_id\n    AND ags.ad_group_id = s.ad_group_id\n    AND ags.date = s.date", "language": "sql", "refs": [{"name": "stg_googleads__ad_group_stats", "package": null, "version": null}, {"name": "stg_googleads__ad_group_cross_device_stats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_googleads__ad_group_stats", "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/google/google_ad_group_performance.sql", "compiled": true, "compiled_code": "\n\nWITH ad_group_stats AS (\n\n    SELECT\n        ad_group_id,\n        campaign_id,\n        DATE,\n        SUM(clicks) clicks,\n        SUM(conversions) conversions,\n        SUM(conversions_value) conversions_value,\n        SUM(cost) cost,\n        SUM(impressions) impressions,\n        SUM(interactions) interactions,\n        SUM(view_through_conversions) view_through_conversions,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_stats`\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    ags.campaign_id,\n    ags.ad_group_id,\n    ags.date,\n    ags.network_type,\n    ags.top_impression_percentage,\n    ags.search_top_impression_share,\n    ags.video_quartile_p100_rate,\n    ags.video_quartile_p75_rate,\n    ags.video_quartile_p50_rate,\n    ags.video_quartile_p25_rate,\n    ags.absolute_top_impression_percentage,\n    ags.content_impression_share,\n    ags.content_rank_lost_impression_share,\n    ags.cross_device_conversions,\n    ags.engagements,\n    ags.relative_ctr,\n    ags.search_absolute_top_impression_share,\n    ags.search_budget_lost_absolute_top_impression_share,\n    ags.search_budget_lost_top_impression_share,\n    ags.search_impression_share,\n    ags.search_rank_lost_absolute_top_impression_share,\n    ags.search_rank_lost_impression_share,\n    ags.search_rank_lost_top_impression_share,\n    ags.video_views,\n    s.clicks,\n    s.conversions,\n    s.cost,\n    s.impressions,\n    s.interactions,\n    s.view_through_conversions,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_cross_device_stats`\n    ags\n    LEFT JOIN ad_group_stats s\n    ON ags.campaign_id = s.campaign_id\n    AND ags.ad_group_id = s.ad_group_id\n    AND ags.date = s.date", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.google_campaign_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "google_campaign_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/google/google_campaign_performance.sql", "original_file_path": "models/marts/marketing/google/google_campaign_performance.sql", "unique_id": "model.sado_analytics_services.google_campaign_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "google", "google_campaign_performance"], "alias": "google_campaign_performance", "checksum": {"name": "sha256", "checksum": "77e604f3c45d279d2389b2c5679f4956bdc1fd724f976e200db5472b4f10c6de"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["ggads", "fact", "table"], "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaigns.campaign_id} = ${google_campaign_performance.campaign_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${google_campaign_performance.date}"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "table"], "description": "", "columns": {"campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.V\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_cost": {"name": "ads_cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.Chi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_ads_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics", "compact": "millions", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_impressions": {"name": "ads_impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.S\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_ads_impressions": {"type": "sum", "label": "#Impressions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}, "m_cpm": {"type": "number", "sql": "safe_divide(${m_ads_cost},${m_ads_impressions}) * 1000", "label": "CPM", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_clicks": {"name": "ads_clicks", "description": "The number of clicks.S\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_ads_clicks": {"type": "sum", "label": "#Clicks", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}, "m_cpc": {"type": "number", "sql": "safe_divide(${m_ads_cost},${m_ads_clicks})", "label": "CPC", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}, "m_ctr": {"type": "number", "sql": "safe_divide(${m_ads_clicks},${m_ads_impressions})", "label": "CTR", "group_label": "GG Ads metrics", "format": "percent", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_conversions": {"name": "ads_conversions", "description": "The number of conversions.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_ads_conversions": {"type": "sum", "label": "#Conversions", "group_label": "GG Ads metrics", "round": 0}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_interactions": {"name": "ads_interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.S\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"m_ads_interactions": {"type": "sum", "label": "#Interactions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_purchase": {"name": "ads_purchase", "description": "", "meta": {"metrics": {"m_ads_purchase": {"type": "sum", "label": "#Web Purchases", "group_label": "GG Ads metrics"}, "m_cost_per_purchase": {"type": "number", "sql": "safe_divide(${m_ads_cost},${m_ads_purchase})", "label": "Cost per Purchase", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_purchase_value": {"name": "ads_purchase_value", "description": "", "meta": {"metrics": {"m_ads_purchase_value": {"type": "sum", "label": "Web Purchases Value", "group_label": "GG Ads metrics", "compact": "millions", "round": 1}, "m_roas": {"type": "number", "sql": "safe_divide(${m_ads_purchase_value},${m_ads_cost})", "label": "ROAS", "group_label": "GG Ads metrics", "round": 2}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_contacts": {"name": "ads_contacts", "description": "", "meta": {"metrics": {"m_ads_contacts": {"type": "sum", "label": "#Contacts intent", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_atc": {"name": "ads_atc", "description": "", "meta": {"metrics": {"m_ads_atc": {"type": "sum", "label": "#Add to cart", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaigns.campaign_id} = ${google_campaign_performance.campaign_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${google_campaign_performance.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/google/google_campaign_performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaigns.campaign_id} = ${google_campaign_performance.campaign_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${google_campaign_performance.date}"}]}, "tags": ["ggads", "fact", "table"]}, "created_at": 1732268180.0012026, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`google_campaign_performance`", "raw_code": "{{ config(\n    tags = ['ggads','fact','table']\n) }}\n\nWITH campaign_stats AS (\n\n    SELECT\n        campaign_id,\n        DATE,\n        slot,\n        SUM(cost) AS ads_cost,\n        SUM(impressions) AS ads_impressions,\n        SUM(clicks) AS ads_clicks,\n        SUM(conversions) AS ads_conversions,\n        SUM(interactions) AS ads_interactions,\n    FROM\n        {{ ref('stg_googleads__campaign_stats') }}\n    GROUP BY\n        1,\n        2,\n        3\n),\ncampaign_conversion_stats AS (\n    SELECT\n        campaign_id,\n        DATE,\n        slot,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase','web_purchase')) THEN (conversions)\n                ELSE NULL\n            END\n        ) AS ads_purchase,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase','web_purchase')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_purchase_value,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('add_to_cart','web_add_to_cart')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_atc,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_call', 'website_message','web_click_calls', 'web_messages')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_contacts,\n    FROM\n        {{ ref('stg_googleads__campaign_conversion_stats') }}\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    cs.*,\n    ccs.ads_purchase,\n    ccs.ads_purchase_value,\n    ccs.ads_contacts,\n    ccs.ads_atc,\nFROM\n    campaign_stats cs\n    LEFT JOIN campaign_conversion_stats ccs\n    ON cs.campaign_id = ccs.campaign_id\n    AND cs.date = ccs.date\n    AND cs.slot = ccs.slot", "language": "sql", "refs": [{"name": "stg_googleads__campaign_stats", "package": null, "version": null}, {"name": "stg_googleads__campaign_conversion_stats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_googleads__campaign_stats", "model.sado_analytics_services.stg_googleads__campaign_conversion_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/google/google_campaign_performance.sql", "compiled": true, "compiled_code": "\n\nWITH campaign_stats AS (\n\n    SELECT\n        campaign_id,\n        DATE,\n        slot,\n        SUM(cost) AS ads_cost,\n        SUM(impressions) AS ads_impressions,\n        SUM(clicks) AS ads_clicks,\n        SUM(conversions) AS ads_conversions,\n        SUM(interactions) AS ads_interactions,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`\n    GROUP BY\n        1,\n        2,\n        3\n),\ncampaign_conversion_stats AS (\n    SELECT\n        campaign_id,\n        DATE,\n        slot,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase','web_purchase')) THEN (conversions)\n                ELSE NULL\n            END\n        ) AS ads_purchase,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_purchase','web_purchase')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_purchase_value,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('add_to_cart','web_add_to_cart')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_atc,\n        SUM(\n            CASE\n                WHEN ((conversion_name) IN ('website_call', 'website_message','web_click_calls', 'web_messages')) THEN (conversions_value)\n                ELSE NULL\n            END\n        ) AS ads_contacts,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_conversion_stats`\n    GROUP BY\n        1,\n        2,\n        3\n)\nSELECT\n    cs.*,\n    ccs.ads_purchase,\n    ccs.ads_purchase_value,\n    ccs.ads_contacts,\n    ccs.ads_atc,\nFROM\n    campaign_stats cs\n    LEFT JOIN campaign_conversion_stats ccs\n    ON cs.campaign_id = ccs.campaign_id\n    AND cs.date = ccs.date\n    AND cs.slot = ccs.slot", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__client_keys": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__client_keys", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/dim__client_keys.sql", "original_file_path": "models/marts/marketing/web_analytics/dim__client_keys.sql", "unique_id": "model.sado_analytics_services.dim__client_keys", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "dim__client_keys"], "alias": "dim__client_keys", "checksum": {"name": "sha256", "checksum": "3d412325a19c53a4b7f4190290ca5a4404fbd8f182927065d1d87541e2902f46"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["dimension", "view", "ga4"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["dimension", "view", "ga4"], "description": "", "columns": {"client_key": {"name": "client_key", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_event": {"name": "first_event", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_event": {"name": "last_event", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "stream_id": {"name": "stream_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_geo_continent": {"name": "first_geo_continent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_geo_country": {"name": "first_geo_country", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_geo_region": {"name": "first_geo_region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_geo_city": {"name": "first_geo_city", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_geo_sub_continent": {"name": "first_geo_sub_continent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_geo_metro": {"name": "first_geo_metro", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_category": {"name": "first_device_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_mobile_brand_name": {"name": "first_device_mobile_brand_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_mobile_model_name": {"name": "first_device_mobile_model_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_mobile_marketing_name": {"name": "first_device_mobile_marketing_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_mobile_os_hardware_model": {"name": "first_device_mobile_os_hardware_model", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_operating_system": {"name": "first_device_operating_system", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_operating_system_version": {"name": "first_device_operating_system_version", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_vendor_id": {"name": "first_device_vendor_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_advertising_id": {"name": "first_device_advertising_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_language": {"name": "first_device_language", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_is_limited_ad_tracking": {"name": "first_device_is_limited_ad_tracking", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_time_zone_offset_seconds": {"name": "first_device_time_zone_offset_seconds", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "first_device_browser": {"name": "first_device_browser", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_browser_version": {"name": "first_device_browser_version", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_web_info_browser": {"name": "first_device_web_info_browser", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_web_info_browser_version": {"name": "first_device_web_info_browser_version", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_device_web_info_hostname": {"name": "first_device_web_info_hostname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_user_campaign": {"name": "first_user_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_user_medium": {"name": "first_user_medium", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_user_source": {"name": "first_user_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_geo_continent": {"name": "last_geo_continent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_geo_country": {"name": "last_geo_country", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_geo_region": {"name": "last_geo_region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_geo_city": {"name": "last_geo_city", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_geo_sub_continent": {"name": "last_geo_sub_continent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_geo_metro": {"name": "last_geo_metro", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_category": {"name": "last_device_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_mobile_brand_name": {"name": "last_device_mobile_brand_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_mobile_model_name": {"name": "last_device_mobile_model_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_mobile_marketing_name": {"name": "last_device_mobile_marketing_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_mobile_os_hardware_model": {"name": "last_device_mobile_os_hardware_model", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_operating_system": {"name": "last_device_operating_system", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_operating_system_version": {"name": "last_device_operating_system_version", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_vendor_id": {"name": "last_device_vendor_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_advertising_id": {"name": "last_device_advertising_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_language": {"name": "last_device_language", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_is_limited_ad_tracking": {"name": "last_device_is_limited_ad_tracking", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_time_zone_offset_seconds": {"name": "last_device_time_zone_offset_seconds", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "last_device_browser": {"name": "last_device_browser", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_browser_version": {"name": "last_device_browser_version", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_web_info_browser": {"name": "last_device_web_info_browser", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_web_info_browser_version": {"name": "last_device_web_info_browser_version", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_device_web_info_hostname": {"name": "last_device_web_info_hostname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_user_campaign": {"name": "last_user_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_user_medium": {"name": "last_user_medium", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_user_source": {"name": "last_user_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_visit": {"name": "first_visit", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "TIMESTAMP", "constraints": [], "quote": null, "tags": []}, "last_seen_at": {"name": "last_seen_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "TIMESTAMP", "constraints": [], "quote": null, "tags": []}, "first_page_location": {"name": "first_page_location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_page_hostname": {"name": "first_page_hostname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_page_referrer": {"name": "first_page_referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_page_location": {"name": "last_page_location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_page_hostname": {"name": "last_page_hostname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_page_referrer": {"name": "last_page_referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "most_recent_page_location": {"name": "most_recent_page_location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "visited_branch": {"name": "visited_branch", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "searched_branch": {"name": "searched_branch", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/dim__client_keys.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "tags": ["dimension", "view", "ga4"]}, "created_at": 1732268180.1684322, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__client_keys`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['dimension', 'view','ga4']\n) }}\n\nSELECT\n    *\nFROM\n    {{ ref(\"dim_ga4__client_keys\") }}\n    where not regexp_contains(lower(name),r'test|it|tesst')", "language": "sql", "refs": [{"name": "dim_ga4__client_keys", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.dim_ga4__client_keys"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/dim__client_keys.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__client_keys`\n    where not regexp_contains(lower(name),r'test|it|tesst')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__sessions": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__sessions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/dim__sessions.sql", "original_file_path": "models/marts/marketing/web_analytics/dim__sessions.sql", "unique_id": "model.sado_analytics_services.dim__sessions", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "dim__sessions"], "alias": "dim__sessions", "checksum": {"name": "sha256", "checksum": "6da7103507ec5c6917955e0fdf48abe83f11c474038b03bcbd4d1f0c8c3d6d49"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["dimension", "view", "ga4"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["dimension", "view", "ga4"], "description": "", "columns": {"session_key": {"name": "session_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_partition_date": {"name": "session_partition_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "session_start_timestamp": {"name": "session_start_timestamp", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "landing_page_path": {"name": "landing_page_path", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "landing_page": {"name": "landing_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "landing_page_hostname": {"name": "landing_page_hostname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "landing_page_referrer": {"name": "landing_page_referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_continent": {"name": "geo_continent", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_country": {"name": "geo_country", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_region": {"name": "geo_region", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_city": {"name": "geo_city", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_sub_continent": {"name": "geo_sub_continent", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_metro": {"name": "geo_metro", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "stream_id": {"name": "stream_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "platform": {"name": "platform", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_category": {"name": "device_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_mobile_brand_name": {"name": "device_mobile_brand_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_mobile_model_name": {"name": "device_mobile_model_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_mobile_marketing_name": {"name": "device_mobile_marketing_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_mobile_os_hardware_model": {"name": "device_mobile_os_hardware_model", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_operating_system": {"name": "device_operating_system", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_operating_system_version": {"name": "device_operating_system_version", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_vendor_id": {"name": "device_vendor_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_advertising_id": {"name": "device_advertising_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_language": {"name": "device_language", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_is_limited_ad_tracking": {"name": "device_is_limited_ad_tracking", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_time_zone_offset_seconds": {"name": "device_time_zone_offset_seconds", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "device_browser": {"name": "device_browser", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_web_info_browser": {"name": "device_web_info_browser", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_web_info_browser_version": {"name": "device_web_info_browser_version", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_web_info_hostname": {"name": "device_web_info_hostname", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_number": {"name": "session_number", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "additional_dimensions": {"d_session_number": {"type": "string", "sql": "case when session_number >3 then '3+' else str(session_number) end", "label": "Session Num"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "is_first_session": {"name": "is_first_session", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "user_campaign": {"name": "user_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "user_medium": {"name": "user_medium", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_user_source_medium": {"type": "string", "sql": "concat(user_source, '/', user_medium)", "label": "User Source/Medium"}}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "user_source": {"name": "user_source", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_source": {"name": "session_source", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_session_source_medium": {"type": "string", "sql": "concat(session_source, '/', session_medium)", "label": "Session Source/Medium"}}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_medium": {"name": "session_medium", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_campaign": {"name": "session_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_content": {"name": "session_content", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_term": {"name": "session_term", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_default_channel_grouping": {"name": "session_default_channel_grouping", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_source_category": {"name": "session_source_category", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/dim__sessions.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "tags": ["dimension", "view", "ga4"]}, "created_at": 1732268180.116661, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__sessions`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['dimension', 'view','ga4']\n) }}\n\nSELECT\n    *\nFROM\n    {{ ref(\"dim_ga4__sessions\") }}", "language": "sql", "refs": [{"name": "dim_ga4__sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.dim_ga4__sessions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/dim__sessions.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__pagespeed_cwv": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__pagespeed_cwv", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/fct__pagespeed_cwv.sql", "original_file_path": "models/marts/marketing/web_analytics/fct__pagespeed_cwv.sql", "unique_id": "model.sado_analytics_services.fct__pagespeed_cwv", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "fct__pagespeed_cwv"], "alias": "fct__pagespeed_cwv", "checksum": {"name": "sha256", "checksum": "434284d70e5889d3914fcca8781e0dc2018ffae8db091887b21b5bb3e8a870d6"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["pagespeed", "fact", "table"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__pagespeed_cwv.analysis_date}"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["pagespeed", "fact", "table"], "description": "", "columns": {"analysis_date": {"name": "analysis_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "url": {"name": "url", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "strategy": {"name": "strategy", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "metric_range": {"name": "metric_range", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "range_distribution_category": {"name": "range_distribution_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "percentile_cumulative_layout_shift_score": {"name": "percentile_cumulative_layout_shift_score", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_percentile_cumulative_layout_shift_score": {"type": "average", "label": "Cumulative layout shift Percentile", "sql": "safe_divide(${TABLE}.percentile_cumulative_layout_shift_score,100)", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "proportion_cumulative_layout_shift_score": {"name": "proportion_cumulative_layout_shift_score", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_proportion_cumulative_layout_shift_score": {"type": "average", "label": "Cumulative layout shift Proportion", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "percentile_experimental_time_to_first_byte": {"name": "percentile_experimental_time_to_first_byte", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_percentile_experimental_time_to_first_byte": {"type": "average", "label": "Experimental time to first byte Percentile", "compact": "thousands", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "proportion_experimental_time_to_first_byte": {"name": "proportion_experimental_time_to_first_byte", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_proportion_experimental_time_to_first_byte": {"type": "average", "label": "Experimental time to first byte Proportion", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "percentile_first_contentful_paint_ms": {"name": "percentile_first_contentful_paint_ms", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_percentile_first_contentful_paint_ms": {"type": "average", "label": "First contentful paint Percentile", "compact": "thousands", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "proportion_first_contentful_paint_ms": {"name": "proportion_first_contentful_paint_ms", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_proportion_first_contentful_paint_ms": {"type": "average", "label": "First contentful paint Proportion", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "percentile_first_input_delay_ms": {"name": "percentile_first_input_delay_ms", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_percentile_first_input_delay_ms": {"type": "average", "label": "First input delay Percentile", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "proportion_first_input_delay_ms": {"name": "proportion_first_input_delay_ms", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_proportion_first_input_delay_ms": {"type": "average", "label": "First input delay Proportion", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "percentile_interaction_to_next_paint": {"name": "percentile_interaction_to_next_paint", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_percentile_interaction_to_next_paint": {"type": "average", "label": "Interaction to next paint Percentile", "compact": "thousands", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "proportion_interaction_to_next_paint": {"name": "proportion_interaction_to_next_paint", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_proportion_interaction_to_next_paint": {"type": "average", "label": "Interaction to next paint Proportion", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "percentile_largest_contentful_paint_ms": {"name": "percentile_largest_contentful_paint_ms", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_percentile_largest_contentful_paint_ms": {"type": "average", "label": "Largest contentful paint Percentile", "compact": "thousands", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "proportion_largest_contentful_paint_ms": {"name": "proportion_largest_contentful_paint_ms", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_proportion_largest_contentful_paint_ms": {"type": "average", "label": "Largest contentful paint Proportion", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__pagespeed_cwv.analysis_date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/fct__pagespeed_cwv.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__pagespeed_cwv.analysis_date}"}]}, "tags": ["pagespeed", "fact", "table"]}, "created_at": 1732268180.1302414, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__pagespeed_cwv`", "raw_code": "{{\n  config(\n    materialized = 'table',\n    tags = ['pagespeed','fact','table']\n    )\n}}\n\n{%set metrics = ['CUMULATIVE_LAYOUT_SHIFT_SCORE', 'EXPERIMENTAL_TIME_TO_FIRST_BYTE', 'FIRST_CONTENTFUL_PAINT_MS', 'FIRST_INPUT_DELAY_MS', 'INTERACTION_TO_NEXT_PAINT', 'LARGEST_CONTENTFUL_PAINT_MS']%}\n\nselect \ndistinct\nanalysis_date,\nurl,\nstrategy,\nmetric_range,\nrange_distribution_category,\n{%for metric in metrics%}\navg(percentile_{{ metric | lower() }}) as percentile_{{ metric | lower() }},\navg(proportion_{{ metric | lower() }}) as proportion_{{ metric | lower() }},\n{%endfor%}\n\nfrom {{ ref('stg_pagespeed__metrics') }}\nPIVOT (avg(metric_percentile_value) as percentile, avg(range_proportion) as proportion FOR metric_name IN (\n    '{{metrics | join(\"','\")}}'\n))\n\n{{dbt_utils.group_by(5)}}", "language": "sql", "refs": [{"name": "stg_pagespeed__metrics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_pagespeed__metrics"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/fct__pagespeed_cwv.sql", "compiled": true, "compiled_code": "\n\n\n\nselect \ndistinct\nanalysis_date,\nurl,\nstrategy,\nmetric_range,\nrange_distribution_category,\n\navg(percentile_cumulative_layout_shift_score) as percentile_cumulative_layout_shift_score,\navg(proportion_cumulative_layout_shift_score) as proportion_cumulative_layout_shift_score,\n\navg(percentile_experimental_time_to_first_byte) as percentile_experimental_time_to_first_byte,\navg(proportion_experimental_time_to_first_byte) as proportion_experimental_time_to_first_byte,\n\navg(percentile_first_contentful_paint_ms) as percentile_first_contentful_paint_ms,\navg(proportion_first_contentful_paint_ms) as proportion_first_contentful_paint_ms,\n\navg(percentile_first_input_delay_ms) as percentile_first_input_delay_ms,\navg(proportion_first_input_delay_ms) as proportion_first_input_delay_ms,\n\navg(percentile_interaction_to_next_paint) as percentile_interaction_to_next_paint,\navg(proportion_interaction_to_next_paint) as proportion_interaction_to_next_paint,\n\navg(percentile_largest_contentful_paint_ms) as percentile_largest_contentful_paint_ms,\navg(proportion_largest_contentful_paint_ms) as proportion_largest_contentful_paint_ms,\n\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_pagespeed__metrics`\nPIVOT (avg(metric_percentile_value) as percentile, avg(range_proportion) as proportion FOR metric_name IN (\n    'CUMULATIVE_LAYOUT_SHIFT_SCORE','EXPERIMENTAL_TIME_TO_FIRST_BYTE','FIRST_CONTENTFUL_PAINT_MS','FIRST_INPUT_DELAY_MS','INTERACTION_TO_NEXT_PAINT','LARGEST_CONTENTFUL_PAINT_MS'\n))\n\ngroup by 1,2,3,4,5", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__sessions_daily": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__sessions_daily", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/dim__sessions_daily.sql", "original_file_path": "models/marts/marketing/web_analytics/dim__sessions_daily.sql", "unique_id": "model.sado_analytics_services.dim__sessions_daily", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "dim__sessions_daily"], "alias": "dim__sessions_daily", "checksum": {"name": "sha256", "checksum": "80ab39bf1aa9a832273427c80aee359db9234bc478351a1173081615490dd000"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["dimension", "view", "ga4"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["dimension", "view", "ga4"], "description": "", "columns": {"stream_id": {"name": "stream_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_key": {"name": "session_key", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_partition_key": {"name": "session_partition_key", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_partition_date": {"name": "session_partition_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "session_partition_start_timestamp": {"name": "session_partition_start_timestamp", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "landing_page_path": {"name": "landing_page_path", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "landing_page_location": {"name": "landing_page_location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "landing_page_hostname": {"name": "landing_page_hostname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "referrer": {"name": "referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_continent": {"name": "geo_continent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_country": {"name": "geo_country", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_region": {"name": "geo_region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_city": {"name": "geo_city", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_sub_continent": {"name": "geo_sub_continent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "geo_metro": {"name": "geo_metro", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "platform": {"name": "platform", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_category": {"name": "device_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_mobile_brand_name": {"name": "device_mobile_brand_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_mobile_model_name": {"name": "device_mobile_model_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_mobile_marketing_name": {"name": "device_mobile_marketing_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_mobile_os_hardware_model": {"name": "device_mobile_os_hardware_model", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_operating_system": {"name": "device_operating_system", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_operating_system_version": {"name": "device_operating_system_version", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_vendor_id": {"name": "device_vendor_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_advertising_id": {"name": "device_advertising_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_language": {"name": "device_language", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_is_limited_ad_tracking": {"name": "device_is_limited_ad_tracking", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_time_zone_offset_seconds": {"name": "device_time_zone_offset_seconds", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "device_browser": {"name": "device_browser", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_web_info_browser": {"name": "device_web_info_browser", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_web_info_browser_version": {"name": "device_web_info_browser_version", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_web_info_hostname": {"name": "device_web_info_hostname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "user_campaign": {"name": "user_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "user_medium": {"name": "user_medium", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "user_source": {"name": "user_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_source": {"name": "session_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_medium": {"name": "session_medium", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_campaign": {"name": "session_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_content": {"name": "session_content", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_term": {"name": "session_term", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_default_channel_grouping": {"name": "session_default_channel_grouping", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_source_category": {"name": "session_source_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_non_direct_source": {"name": "last_non_direct_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_non_direct_medium": {"name": "last_non_direct_medium", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_non_direct_campaign": {"name": "last_non_direct_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_non_direct_content": {"name": "last_non_direct_content", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_non_direct_term": {"name": "last_non_direct_term", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_non_direct_default_channel_grouping": {"name": "last_non_direct_default_channel_grouping", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_non_direct_source_category": {"name": "last_non_direct_source_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/dim__sessions_daily.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "tags": ["dimension", "view", "ga4"]}, "created_at": 1732268180.138884, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__sessions_daily`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['dimension', 'view','ga4']\n) }}\n\nSELECT\n    *\nFROM\n    {{ ref(\"dim_ga4__sessions_daily\") }}", "language": "sql", "refs": [{"name": "dim_ga4__sessions_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.dim_ga4__sessions_daily"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/dim__sessions_daily.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions_daily`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__sessions_daily": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__sessions_daily", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/fct__sessions_daily.sql", "original_file_path": "models/marts/marketing/web_analytics/fct__sessions_daily.sql", "unique_id": "model.sado_analytics_services.fct__sessions_daily", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "fct__sessions_daily"], "alias": "fct__sessions_daily", "checksum": {"name": "sha256", "checksum": "84f87b9272bbaaf1ae1def5617aa48a68528770757188a058072e7f1a40a8f8c"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "ga4"], "meta": {"joins": [{"join": "dim__sessions_daily", "sql_on": "${dim__sessions_daily.session_key} = ${fct__sessions_daily.session_key}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${fct__sessions_daily.session_partition_date}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "ga4"], "description": "", "columns": {"client_key": {"name": "client_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "stream_id": {"name": "stream_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_partition_min_timestamp": {"name": "session_partition_min_timestamp", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "session_partition_count_page_views": {"name": "session_partition_count_page_views", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "session_partition_sum_event_value_in_usd": {"name": "session_partition_sum_event_value_in_usd", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "session_partition_max_session_engaged": {"name": "session_partition_max_session_engaged", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "session_partition_sum_engagement_time_msec": {"name": "session_partition_sum_engagement_time_msec", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "session_number": {"name": "session_number", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "session_key": {"name": "session_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_partition_key": {"name": "session_partition_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_partition_date": {"name": "session_partition_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "purchase_count": {"name": "purchase_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "message_count": {"name": "message_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "call_count": {"name": "call_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "generate_lead_count": {"name": "generate_lead_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "store_visit_count": {"name": "store_visit_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__sessions_daily", "sql_on": "${dim__sessions_daily.session_key} = ${fct__sessions_daily.session_key}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${fct__sessions_daily.session_partition_date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/fct__sessions_daily.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "dim__sessions_daily", "sql_on": "${dim__sessions_daily.session_key} = ${fct__sessions_daily.session_key}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${fct__sessions_daily.session_partition_date}"}]}, "tags": ["fact", "view", "ga4"]}, "created_at": 1732268180.073452, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__sessions_daily`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','ga4']\n) }}\n\nSELECT\n    sd.*\nFROM\n    {{ ref(\"fct_ga4__sessions_daily\") }} sd\n    left join {{ ref('dim__excluded_clients') }} ex on sd.client_key = ex.client_key\nwhere ex.client_key is null", "language": "sql", "refs": [{"name": "fct_ga4__sessions_daily", "package": null, "version": null}, {"name": "dim__excluded_clients", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.fct_ga4__sessions_daily", "model.sado_analytics_services.dim__excluded_clients"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/fct__sessions_daily.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    sd.*\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions_daily` sd\n    left join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients` ex on sd.client_key = ex.client_key\nwhere ex.client_key is null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__client_keys": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__client_keys", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/fct__client_keys.sql", "original_file_path": "models/marts/marketing/web_analytics/fct__client_keys.sql", "unique_id": "model.sado_analytics_services.fct__client_keys", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "fct__client_keys"], "alias": "fct__client_keys", "checksum": {"name": "sha256", "checksum": "2c03dc78947d1de1c6e6d54003029a3c7b5b1b8d0e0f9fde1d989bbf1a764254"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "ga4"], "meta": {"joins": [{"join": "calendar", "alias": "first_seen", "sql_on": "${first_seen.date} = ${fct__client_keys.first_seen_date}"}, {"join": "calendar", "alias": "last_seen", "sql_on": "${last_seen.date} = ${fct__client_keys.last_seen_date}"}, {"join": "dim__sessions", "sql_on": "${dim__sessions.session_key} = ${fct__client_keys.stream_id}"}, {"join": "dim__client_keys", "sql_on": "${dim__client_keys.client_key} = ${fct__client_keys.client_key}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "ga4"], "description": "", "columns": {"client_key": {"name": "client_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_users": {"type": "count_distinct", "label": "# Users", "compact": "thousands", "round": 1}, "m_num_engaged_users": {"type": "count_distinct", "label": "# Engaged Users", "compact": "thousands", "round": 1, "filters": [{"count_purchase": ">0"}]}, "m_user_engagement_rate": {"type": "number", "sql": "safe_divide(${m_num_engaged_users}, ${m_num_users})", "label": "User Engagement Rate", "format": "percent", "round": 1}, "m_num_purchased_users": {"type": "count_distinct", "label": "# Purchased Users", "compact": "thousands", "round": 1, "filters": [{"count_purchase": ">0"}]}, "m_user_conversion_rate": {"type": "number", "sql": "safe_divide(${m_num_purchased_users}, ${m_num_users})", "label": "User Conversion Rate", "format": "percent", "round": 1}}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "stream_id": {"name": "stream_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_seen_timestamp": {"name": "first_seen_timestamp", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "last_seen_session_timestamp": {"name": "last_seen_session_timestamp", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "first_seen_date": {"name": "first_seen_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "last_seen_date": {"name": "last_seen_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "count_pageviews": {"name": "count_pageviews", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_count_pageviews": {"type": "sum", "label": "# Pageviews", "round": 1}, "m_avg_pageviews": {"type": "number", "sql": "safe_divide(${m_count_pageviews}, ${m_num_users})", "label": "Pageviews per User", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_engaged_sessions": {"name": "count_engaged_sessions", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_count_engaged_sessions": {"type": "sum", "label": "Engaged Sessions", "round": 1}, "m_avg_count_engaged_sessions": {"type": "number", "sql": "safe_divide(${m_count_engaged_sessions}, ${m_num_users})", "label": "Avg Engaged Sessions per User", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "sum_event_value_in_usd": {"name": "sum_event_value_in_usd", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "sum_engaged_time_msec": {"name": "sum_engaged_time_msec", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_engaged_time_msec": {"type": "sum", "label": "Engaged Time (msec)", "compact": "thousands", "round": 1}, "m_avg_engaged_time_sec": {"type": "number", "label": "Avg Engaged Time per User (Sec)", "sql": "safe_divide(${m_engaged_time_msec}, ${m_num_users})/1000", "round": 1}, "m_avg_engaged_time_min": {"type": "number", "label": "Avg Engaged Time per User (Min)", "sql": "safe_divide(${m_engaged_time_msec}, ${m_num_users})/60000", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_sessions": {"name": "count_sessions", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_count_sessions": {"type": "sum", "label": "Sessions", "round": 1}, "m_avg_count_sessions": {"type": "number", "sql": "safe_divide(${m_count_sessions}, ${m_num_users})", "label": "Avg Sessions per User", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_purchase": {"name": "count_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_count_purchase": {"type": "sum", "label": "Purchases"}, "m_avg_count_purchase": {"type": "number", "sql": "safe_divide(${m_count_purchase}, ${m_num_purchased_users})", "label": "Avg Purchases per User", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_message": {"name": "count_message", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_count_message": {"type": "sum", "label": "Avg Message per User", "round": 1}, "m_avg_count_message": {"type": "number", "sql": "safe_divide(${m_count_message}, ${m_num_users})", "label": "Avg Message per User", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_call": {"name": "count_call", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_count_call": {"type": "sum", "label": "Count Call", "round": 1}, "m_avg_count_call": {"type": "number", "label": "Avg Call per User", "sql": "safe_divide(${m_count_call}, ${m_num_users})", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_generate_lead": {"name": "count_generate_lead", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_count_generate_lead": {"type": "number", "label": "Avg Generate Lead per User", "sql": "safe_divide(${m_count_generate_lead}, ${m_num_users})", "round": 1}, "m_count_generate_lead": {"type": "sum", "label": "Count Generate Lead", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_store_visit": {"name": "count_store_visit", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_count_store_visit": {"type": "number", "label": "Avg Store Visit per User", "round": 1, "sql": "safe_divide(${m_count_store_visit}, ${m_num_users})"}, "m_count_store_visit": {"type": "sum", "label": "Count Store Visit", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "alias": "first_seen", "sql_on": "${first_seen.date} = ${fct__client_keys.first_seen_date}"}, {"join": "calendar", "alias": "last_seen", "sql_on": "${last_seen.date} = ${fct__client_keys.last_seen_date}"}, {"join": "dim__sessions", "sql_on": "${dim__sessions.session_key} = ${fct__client_keys.stream_id}"}, {"join": "dim__client_keys", "sql_on": "${dim__client_keys.client_key} = ${fct__client_keys.client_key}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/fct__client_keys.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "alias": "first_seen", "sql_on": "${first_seen.date} = ${fct__client_keys.first_seen_date}"}, {"join": "calendar", "alias": "last_seen", "sql_on": "${last_seen.date} = ${fct__client_keys.last_seen_date}"}, {"join": "dim__sessions", "sql_on": "${dim__sessions.session_key} = ${fct__client_keys.stream_id}"}, {"join": "dim__client_keys", "sql_on": "${dim__client_keys.client_key} = ${fct__client_keys.client_key}"}]}, "tags": ["fact", "view", "ga4"]}, "created_at": 1732268180.0477834, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__client_keys`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','ga4']\n) }}\n\nSELECT\n    cl.*\nFROM\n    {{ ref(\"fct_ga4__client_keys\") }} cl \nleft join {{ ref('dim__excluded_clients') }} ex on cl.client_key = ex.client_key\nwhere ex.client_key is null", "language": "sql", "refs": [{"name": "fct_ga4__client_keys", "package": null, "version": null}, {"name": "dim__excluded_clients", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.fct_ga4__client_keys", "model.sado_analytics_services.dim__excluded_clients"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/fct__client_keys.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    cl.*\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__client_keys` cl \nleft join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients` ex on cl.client_key = ex.client_key\nwhere ex.client_key is null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__pages": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__pages", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/fct__pages.sql", "original_file_path": "models/marts/marketing/web_analytics/fct__pages.sql", "unique_id": "model.sado_analytics_services.fct__pages", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "fct__pages"], "alias": "fct__pages", "checksum": {"name": "sha256", "checksum": "5ec65c2e08e6f504b8b89219ebfd4d953c08fb38a50ad2d0d80fd0dc31d9a255"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "ga4"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__pages.event_date_dt}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "ga4"], "description": "", "columns": {"event_date_dt": {"name": "event_date_dt", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "stream_id": {"name": "stream_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "page_location": {"name": "page_location", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_page_location": {"type": "string", "label": "Page Location", "sql": "coalesce(regexp_extract(${page_location}, r'^https:\\/\\/5sfashion.vn([a-zA-Z0-9\\-\\/]+)(?:\\?.*)?$'),'/')"}, "d_page_type": {"type": "string", "label": "Page Type", "sql": "case \n  when ${d_page_location} = '/' then 'Home'\n  when ${page_location} like '%san-pham%' then 'Product Page'\n  when ${page_location} like '%danh-muc%' then 'Listing Page'\n  when ${page_location} like '%cart%' then 'Cart Page'\n  when ${page_location} like '%tin-tuc%' then 'Blog Page'\nelse ${d_page_location} end"}}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "page_views": {"name": "page_views", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_page_views": {"type": "sum", "label": "# Page Views", "compact": "thousands"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "distinct_client_keys": {"name": "distinct_client_keys", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_distinct_client_keys": {"type": "count_distinct", "label": "# Distinct Client Keys", "compact": "thousands"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "new_client_keys": {"name": "new_client_keys", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_new_client_keys": {"type": "count_distinct", "label": "# New Client Keys", "compact": "thousands"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "entrances": {"name": "entrances", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_entrances": {"type": "count", "label": "# Entrances", "compact": "thousands"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_engagement_time_msec": {"name": "total_engagement_time_msec", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_engagement_time_msec": {"type": "average", "sql": "safe_divide(${total_engagement_time_msec}, ${distinct_client_keys})", "label": "Engagement Time per User", "compact": "thousands"}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "avg_engagement_time_denominator": {"name": "avg_engagement_time_denominator", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "purchase_count": {"name": "purchase_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "message_count": {"name": "message_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_message_count": {"type": "count", "label": "# Message Count", "compact": "thousands"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "call_count": {"name": "call_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_call_count": {"type": "count", "label": "# Call Count", "compact": "thousands"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "generate_lead_count": {"name": "generate_lead_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_generate_lead_count": {"type": "count", "label": "# Generate Lead Count", "compact": "thousands"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "store_visit_count": {"name": "store_visit_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "scroll_events": {"name": "scroll_events", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_scroll_events": {"type": "count", "label": "# Scroll Events", "compact": "thousands"}, "m_scroll_rate": {"type": "number", "sql": "safe_divide(${m_scroll_events}, ${m_page_views})", "label": "Scroll Rate", "compact": "thousands"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__pages.event_date_dt}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/fct__pages.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__pages.event_date_dt}"}]}, "tags": ["fact", "view", "ga4"]}, "created_at": 1732268180.0620334, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__pages`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','ga4']\n) }}\n\nSELECT\n    *\nFROM\n    {{ ref(\"fct_ga4__pages\") }}", "language": "sql", "refs": [{"name": "fct_ga4__pages", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.fct_ga4__pages"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/fct__pages.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    *\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__pages`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__pagespeed_score": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__pagespeed_score", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/fct__pagespeed_score.sql", "original_file_path": "models/marts/marketing/web_analytics/fct__pagespeed_score.sql", "unique_id": "model.sado_analytics_services.fct__pagespeed_score", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "fct__pagespeed_score"], "alias": "fct__pagespeed_score", "checksum": {"name": "sha256", "checksum": "97f2c7812ff38ee76568b5452de7d57bff7090d7de6a206b7fa953fc0f29ed28"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["pagespeed", "fact", "table"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__pagespeed_score.analysis_date}"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["pagespeed", "fact", "table"], "description": "", "columns": {"analysis_date": {"name": "analysis_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "url": {"name": "url", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "strategy": {"name": "strategy", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "overall_speed_category": {"name": "overall_speed_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "accessibility_score": {"name": "accessibility_score", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_accessibility_score": {"type": "average", "label": "Accessibility Score", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "best_practices_score": {"name": "best_practices_score", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_best_practices_score": {"type": "average", "label": "Best practices Score", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "performance_score": {"name": "performance_score", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_performance_score": {"type": "average", "label": "Performance Score", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "pwa_score": {"name": "pwa_score", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_pwa_score": {"type": "average", "label": "PWA Score", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "seo_score": {"name": "seo_score", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_seo_score": {"type": "average", "label": "SEO Score", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "overall_score": {"name": "overall_score", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "additional_dimensions": {"d_overall_score": {"type": "string", "sql": "case when ${fct__pagespeed_score.overall_score} >= 90 then 'Good' \nwhen ${fct__pagespeed_score.overall_score} >= 50 then 'Needs Improvement' \nelse 'Poor' end", "label": "Overall Page Score"}}, "metrics": {"m_overall_score": {"type": "average", "label": "Overall Page Score", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__pagespeed_score.analysis_date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/fct__pagespeed_score.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__pagespeed_score.analysis_date}"}]}, "tags": ["pagespeed", "fact", "table"]}, "created_at": 1732268180.0973632, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__pagespeed_score`", "raw_code": "{{\n    config(\n        materialized = 'table',\n        tags = ['pagespeed','fact','table']\n    )\n}}\n\n{%set score_categories = [\"accessibility_score\",\"best_practices_score\",\"performance_score\",\"pwa_score\",\"seo_score\"]%}\n\nselect \ndistinct\nanalysis_date,\nurl,\nstrategy,\n-- metrics\noverall_speed_category,\n{{score_categories| join(',')}}, \n{%- set _ = score_categories.remove(\"pwa_score\") %}\n({{score_categories | join('+')}})/{{score_categories|length}} as overall_score\nfrom {{ ref('stg_pagespeed__metrics') }}", "language": "sql", "refs": [{"name": "stg_pagespeed__metrics", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_pagespeed__metrics"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/fct__pagespeed_score.sql", "compiled": true, "compiled_code": "\n\n\n\nselect \ndistinct\nanalysis_date,\nurl,\nstrategy,\n-- metrics\noverall_speed_category,\naccessibility_score,best_practices_score,performance_score,pwa_score,seo_score,\n(accessibility_score+best_practices_score+performance_score+seo_score)/4 as overall_score\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_pagespeed__metrics`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__items_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__items_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/fct__items_performance.sql", "original_file_path": "models/marts/marketing/web_analytics/fct__items_performance.sql", "unique_id": "model.sado_analytics_services.fct__items_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "fct__items_performance"], "alias": "fct__items_performance", "checksum": {"name": "sha256", "checksum": "33c8c60115c07587dc2eae3e1408e73dae1ff318fc6416e1e25012e6da29befb"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "fact", "ga4"], "meta": {"joins": [{"join": "dim__sessions", "sql_on": "${dim__sessions.session_key} = ${fct__items_performance.session_key}"}, {"join": "dim__client_keys", "sql_on": "${dim__client_keys.client_key} = ${fct__items_performance.client_key}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${fct__items_performance.event_date_dt}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["item_id", "session_key", "event_date_dt"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "event_date_dt", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "ga4"], "description": "The fct__items_performance model provides a detailed view of the performance of items in the e-commerce store.", "columns": {"item_id": {"name": "item_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "client_key": {"name": "client_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_key": {"name": "session_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "event_date_dt": {"name": "event_date_dt", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "item_variant": {"name": "item_variant", "description": "The variant of the item in the format Color | Size", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "coupon": {"name": "coupon", "description": "The coupon code that was used during the purchase", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "promotion_name": {"name": "promotion_name", "description": "The name of the promotion applied to the item", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "payment_type": {"name": "payment_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "delivery_method": {"name": "delivery_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "num_purchase": {"name": "num_purchase", "description": "This column represents the count of unique purchases made for a particular item", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_purchase": {"type": "sum", "label": "# Purchases", "compact": "thousands", "round": 1}, "m_purchase_to_atc_rate": {"type": "number", "sql": "safe_divide(${m_num_purchase}, ${m_num_add_to_cart})", "label": "Purchase To ATC Rate", "format": "percent", "round": 1}, "m_purchase_rate": {"type": "number", "sql": "safe_divide(${m_num_purchase}, ${m_num_view_item})", "label": "Purchase Rate", "format": "percent", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_purchase_quantity": {"name": "total_purchase_quantity", "description": "total quantity of a particular item purchased", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_purchase_quantity": {"type": "sum", "label": "Total Purchase Quantity", "round": 0}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "avg_purchase_price": {"name": "avg_purchase_price", "description": "average price at which a particular item was purchased", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_purchase_price": {"type": "average", "label": "Average Purchase Price", "compact": "thousands", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "num_view_item": {"name": "num_view_item", "description": "the count of unique view events for each item", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_view_item": {"type": "sum", "label": "# View Items", "compact": "thousands", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_view_item_quantity": {"name": "total_view_item_quantity", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "avg_view_item_price": {"name": "avg_view_item_price", "description": "average price of the viewed items", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_view_item_price": {"type": "average", "label": "Average View Item Price", "compact": "thousands", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "num_add_to_cart": {"name": "num_add_to_cart", "description": "count of unique events where an item was added to the cart", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_add_to_cart": {"type": "sum", "label": "# Add to Cart", "compact": "thousands", "round": 1}, "m_add_to_cart_rate": {"type": "number", "label": "Add to Cart Rate", "sql": "safe_divide(${m_num_add_to_cart}, ${m_num_view_item})", "round": 2, "format": "percent"}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_add_to_cart_quantity": {"name": "total_add_to_cart_quantity", "description": "total quantity of items that were added to the cart", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "avg_add_to_cart_price": {"name": "avg_add_to_cart_price", "description": "average price of items that were added to the cart", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "num_orders": {"name": "num_orders", "description": "total number of unique orders placed", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_item_revenue": {"name": "total_item_revenue", "description": "total revenue generated from the sale of items", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_shipping": {"name": "total_shipping", "description": "total shipping cost for all the items", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_tax": {"name": "total_tax", "description": "total tax amount for all transactions associated with a specific item", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__sessions", "sql_on": "${dim__sessions.session_key} = ${fct__items_performance.session_key}"}, {"join": "dim__client_keys", "sql_on": "${dim__client_keys.client_key} = ${fct__items_performance.client_key}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${fct__items_performance.event_date_dt}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/fct__items_performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "dim__sessions", "sql_on": "${dim__sessions.session_key} = ${fct__items_performance.session_key}"}, {"join": "dim__client_keys", "sql_on": "${dim__client_keys.client_key} = ${fct__items_performance.client_key}"}, {"join": "calendar", "sql_on": "${calendar.date} = ${fct__items_performance.event_date_dt}"}]}, "unique_key": ["item_id", "session_key", "event_date_dt"], "partition_by": {"field": "event_date_dt", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "tags": ["incremental", "fact", "ga4"]}, "created_at": 1732268180.1846182, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__items_performance`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    unique_key = ['item_id','session_key','event_date_dt'],\n    partition_by = {\n      \"field\": \"event_date_dt\",\n      \"data_type\": \"date\",\n      \"granularity\": \"day\"\n    },\n    incremental_strategy = 'insert_overwrite',\n    tags = ['incremental','fact','ga4']\n    )\n}}\n\n{%set events = ['purchase','view_item','add_to_cart']%}\n\n\nwith event_format as (\nselect e.* except(event_name),\n/*\n    begin_checkout event actually another add_to_cart (nothing different in term of operation)\n  */\n  case \n    when e.event_name = 'begin_checkout' then 'add_to_cart' \n    else e.event_name end as event_name,\nfrom {{ ref(\"stg_ga4__event_items\") }} e\nleft join {{ ref('dim__excluded_clients') }} ex on e.client_key = ex.client_key\nwhere e.event_name in ( '{{ events|join(\"','\") }}','begin_checkout')\nand ex.client_key is null\nand e.item_id is not null\n{% if is_incremental() %}\n  and e.event_date_dt >= date_add(current_date, interval -1 day)\n{% endif %}\n)\n\nselect\n  regexp_replace(item_id,r'\\W','') as item_id,\n  client_key,\n  session_key,\n  event_date_dt,\n\n  item_variant,\n\n  coupon,\n  promotion_name,\n  payment_type,\n  delivery_method,\n  {%for event in events%}\n  count(distinct case when event_name = '{{event}}' then event_key end) as num_{{event}},\n  sum(case when event_name = '{{event}}' then quantity end) as total_{{event}}_quantity,\n  avg(case when event_name = '{{event}}' then price end) as avg_{{event}}_price,\n  {%endfor%}\n  \n  count(distinct transaction_id) as num_orders,\n  sum(item_revenue) as total_item_revenue,\n  sum(shipping) as total_shipping,\n  sum(tax) as total_tax,\n\nfrom event_format\n\n{{dbt_utils.group_by(9)}}", "language": "sql", "refs": [{"name": "stg_ga4__event_items", "package": null, "version": null}, {"name": "dim__excluded_clients", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.ga4.stg_ga4__event_items", "model.sado_analytics_services.dim__excluded_clients"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/fct__items_performance.sql", "compiled": true, "compiled_code": "\n\n\n\n\nwith event_format as (\nselect e.* except(event_name),\n/*\n    begin_checkout event actually another add_to_cart (nothing different in term of operation)\n  */\n  case \n    when e.event_name = 'begin_checkout' then 'add_to_cart' \n    else e.event_name end as event_name,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_items` e\nleft join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients` ex on e.client_key = ex.client_key\nwhere e.event_name in ( 'purchase','view_item','add_to_cart','begin_checkout')\nand ex.client_key is null\nand e.item_id is not null\n\n  and e.event_date_dt >= date_add(current_date, interval -1 day)\n\n)\n\nselect\n  regexp_replace(item_id,r'\\W','') as item_id,\n  client_key,\n  session_key,\n  event_date_dt,\n\n  item_variant,\n\n  coupon,\n  promotion_name,\n  payment_type,\n  delivery_method,\n  \n  count(distinct case when event_name = 'purchase' then event_key end) as num_purchase,\n  sum(case when event_name = 'purchase' then quantity end) as total_purchase_quantity,\n  avg(case when event_name = 'purchase' then price end) as avg_purchase_price,\n  \n  count(distinct case when event_name = 'view_item' then event_key end) as num_view_item,\n  sum(case when event_name = 'view_item' then quantity end) as total_view_item_quantity,\n  avg(case when event_name = 'view_item' then price end) as avg_view_item_price,\n  \n  count(distinct case when event_name = 'add_to_cart' then event_key end) as num_add_to_cart,\n  sum(case when event_name = 'add_to_cart' then quantity end) as total_add_to_cart_quantity,\n  avg(case when event_name = 'add_to_cart' then price end) as avg_add_to_cart_price,\n  \n  \n  count(distinct transaction_id) as num_orders,\n  sum(item_revenue) as total_item_revenue,\n  sum(shipping) as total_shipping,\n  sum(tax) as total_tax,\n\nfrom event_format\n\ngroup by 1,2,3,4,5,6,7,8,9", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__sessions": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct__sessions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/fct__sessions.sql", "original_file_path": "models/marts/marketing/web_analytics/fct__sessions.sql", "unique_id": "model.sado_analytics_services.fct__sessions", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "fct__sessions"], "alias": "fct__sessions", "checksum": {"name": "sha256", "checksum": "059269f5d6dbd22d84d2209d11fa87058c72a98962f57c657fe64104c0db0afe"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["fact", "view", "ga4"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__sessions.session_start_date}"}, {"join": "dim__sessions", "sql_on": "${dim__sessions.session_key} = ${fct__sessions.session_key}"}, {"join": "dim__client_keys", "sql_on": "${dim__client_keys.client_key} = ${fct__sessions.client_key}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "view", "ga4"], "description": "", "columns": {"client_key": {"name": "client_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_users": {"type": "count_distinct", "label": "# Users", "group_label": "Users", "compact": "thousands", "round": 1}, "m_engaged_users": {"type": "count_distinct", "label": "# Engaged Users", "group_label": "Users", "filters": [{"is_session_engaged": 1}], "compact": "thousands", "round": 1}, "m_user_engagement_rate": {"type": "number", "label": "User Engagement Rate", "sql": "safe_divide(${m_engaged_users}, ${m_users})", "group_label": "Users", "format": "percent", "round": 1}}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_key": {"name": "session_key", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_sessions": {"type": "count_distinct", "label": "# Sessions", "group_label": "Sessions", "compact": "thousands", "round": 1}, "m_engaged_sessions": {"type": "count_distinct", "label": "# Engaged Sessions", "group_label": "Sessions", "filters": [{"is_session_engaged": 1}], "compact": "thousands", "round": 1}, "m_session_engagement_rate": {"type": "number", "label": "Session Engagement Rate", "sql": "safe_divide(${m_engaged_sessions}, ${m_sessions})", "group_label": "Sessions", "format": "percent", "round": 1}}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "stream_id": {"name": "stream_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "session_start_timestamp": {"name": "session_start_timestamp", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "session_start_date": {"name": "session_start_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "count_pageviews": {"name": "count_pageviews", "description": "", "meta": {"dimension": {"type": "number"}, "metrics": {"m_pageviews": {"type": "sum", "label": "# Page Views", "group_label": "Sessions", "compact": "thousands", "round": 1}, "m_pageviews_per_session": {"type": "number", "label": "# Page Views per Session", "group_label": "Sessions", "sql": "safe_divide(${m_pageviews}, ${m_sessions})", "round": 1}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "sum_event_value_in_usd": {"name": "sum_event_value_in_usd", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "is_session_engaged": {"name": "is_session_engaged", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "sum_engaged_time_msec": {"name": "sum_engaged_time_msec", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_engaged_time_msec": {"type": "average", "label": "Avg Engaged Time (msec)", "group_label": "Sessions", "compact": "thousands", "round": 1}, "m_total_engaged_time_msec": {"type": "sum", "label": "Total Engaged Time (msec)", "group_label": "Sessions", "compact": "thousands", "round": 0}, "m_total_engaged_time_msec_per_user": {"type": "number", "label": "Total Engaged Time (msec) per User", "group_label": "Users", "sql": "safe_divide(${m_total_engaged_time_msec}, ${m_users})", "round": 1}, "m_med_engaged_time_msec": {"type": "median", "label": "Median Engaged Time (msec)", "group_label": "Sessions", "compact": "thousands", "round": 0}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "session_number": {"name": "session_number", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_purchase": {"name": "count_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_purchase": {"type": "sum", "label": "# Purchases", "group_label": "Sessions", "round": 0}, "m_session_conversion_rate": {"type": "number", "label": "Session Conversion Rate", "group_label": "Sessions", "sql": "safe_divide(${m_purchase}, ${m_sessions})", "format": "percent", "round": 2}, "m_user_conversion_rate": {"type": "number", "label": "User Conversion Rate", "group_label": "Users", "sql": "safe_divide(${m_purchase}, ${m_users})", "format": "percent", "round": 2}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_message": {"name": "count_message", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_message": {"type": "sum", "label": "# Messages", "group_label": "Sessions", "round": 0}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_call": {"name": "count_call", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_call": {"type": "sum", "label": "# Calls", "group_label": "Sessions", "round": 0}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_generate_lead": {"name": "count_generate_lead", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_generate_lead": {"type": "sum", "label": "# Generate Lead", "group_label": "Sessions", "round": 0}, "m_contacts": {"type": "sum", "label": "# Contacts", "group_label": "Sessions", "sql": "(${count_generate_lead} + ${count_message} + ${count_call})", "round": 0}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "count_store_visit": {"name": "count_store_visit", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_store_visit": {"type": "sum", "label": "# Store Visits", "group_label": "Sessions", "round": 0}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__sessions.session_start_date}"}, {"join": "dim__sessions", "sql_on": "${dim__sessions.session_key} = ${fct__sessions.session_key}"}, {"join": "dim__client_keys", "sql_on": "${dim__client_keys.client_key} = ${fct__sessions.client_key}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/fct__sessions.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__sessions.session_start_date}"}, {"join": "dim__sessions", "sql_on": "${dim__sessions.session_key} = ${fct__sessions.session_key}"}, {"join": "dim__client_keys", "sql_on": "${dim__client_keys.client_key} = ${fct__sessions.client_key}"}]}, "tags": ["fact", "view", "ga4"]}, "created_at": 1732268180.0879335, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct__sessions`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fact', 'view','ga4']\n) }}\n\nSELECT\n    s.*\nFROM\n    {{ ref(\"fct_ga4__sessions\") }} s\nleft join {{ ref('dim__excluded_clients') }} ex on s.client_key = ex.client_key\nwhere ex.client_key is null", "language": "sql", "refs": [{"name": "fct_ga4__sessions", "package": null, "version": null}, {"name": "dim__excluded_clients", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.fct_ga4__sessions", "model.sado_analytics_services.dim__excluded_clients"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/fct__sessions.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    s.*\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions` s\nleft join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients` ex on s.client_key = ex.client_key\nwhere ex.client_key is null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__excluded_clients": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__excluded_clients", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/dim__excluded_clients.sql", "original_file_path": "models/marts/marketing/web_analytics/dim__excluded_clients.sql", "unique_id": "model.sado_analytics_services.dim__excluded_clients", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "dim__excluded_clients"], "alias": "dim__excluded_clients", "checksum": {"name": "sha256", "checksum": "03244b1555600728bb23d574c90c958b37567187a2bf56fe57c6961a50432d45"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Exclude test users from the analysis", "columns": {"client_key": {"name": "client_key", "description": "unique ID of test users", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/dim__excluded_clients.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268180.1692088, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__excluded_clients`", "raw_code": "{{\n  config(\n    materialized = 'table',\n    )\n}}\n\nSELECT\n    client_key,\nFROM\n    {{ ref(\"dim_ga4__client_keys\") }}\nWHERE\n    regexp_contains(LOWER(NAME), r'test|it|tesst')", "language": "sql", "refs": [{"name": "dim_ga4__client_keys", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.dim_ga4__client_keys"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/web_analytics/dim__excluded_clients.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    client_key,\nFROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__client_keys`\nWHERE\n    regexp_contains(LOWER(NAME), r'test|it|tesst')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.pancake_performance__by__users": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "pancake_performance__by__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/contact_center/pancake_performance__by__users.sql", "original_file_path": "models/marts/marketing/contact_center/pancake_performance__by__users.sql", "unique_id": "model.sado_analytics_services.pancake_performance__by__users", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "pancake_performance__by__users"], "alias": "pancake_performance__by__users", "checksum": {"name": "sha256", "checksum": "d7696231beefa90c9ee35a9df0831cf5f8720c98dacf7e9d35c09d8f4402bfda"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["pancake", "fact", "incremental"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${pancake_performance__by__users.hour})"}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${pancake_performance__by__users.user_id}", "fields": ["user_id", "user_name"]}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["user_id", "hour"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "hour", "data_type": "datetime", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["pancake", "fact", "incremental"], "description": "T\u1ed5ng h\u1ee3p d\u1eef li\u1ec7u th\u1ed1ng k\u00ea theo nh\u00e2n s\u1ef1", "columns": {"user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "average_response_time": {"name": "average_response_time", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "additional_dimensions": {"d_average_response_time": {"type": "number", "sql": "case when ${d_hour} >= 7 and ${d_hour} <= 23 then ${TABLE}.average_response_time else 0 end", "hidden": true}}, "metrics": {"m_avg_response_time": {"type": "average", "round": 1, "label": "Avg response time (hour)", "group_label": "Pancake metrics", "sql": "${d_average_response_time}/3600"}, "m_med_response_time": {"type": "median", "round": 1, "label": "Median of response time (min)", "group_label": "Pancake metrics", "sql": "${d_average_response_time}/60"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment_count": {"name": "comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_comment": {"type": "sum", "round": 2, "label": "No. comments", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour": {"name": "hour", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_hour": {"type": "number", "sql": "extract(hour from ${TABLE}.hour)", "label": "Hour"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbox_count": {"name": "inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_inbox": {"type": "sum", "round": 2, "label": "No. inboxes", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_number_count": {"name": "phone_number_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_phone": {"type": "sum", "label": "No. phones", "group_label": "Pancake metrics", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "private_reply_count": {"name": "private_reply_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_private_reply": {"type": "sum", "round": 0, "label": "No. private replies", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_comment_count": {"name": "unique_comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique_comment": {"type": "sum", "round": 0, "label": "No. unique comments", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_inbox_count": {"name": "unique_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique inbox": {"type": "sum", "round": 0, "label": "No. unique inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_order": {"name": "num_order", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_orders": {"type": "sum", "label": "No. orders", "group_label": "Pancake metrics", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_payment": {"type": "sum", "label": "Payment value", "group_label": "Pancake metrics", "compact": "millions", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${pancake_performance__by__users.hour})"}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${pancake_performance__by__users.user_id}", "fields": ["user_id", "user_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/contact_center/pancake_performance__by__users.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${pancake_performance__by__users.hour})"}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${pancake_performance__by__users.user_id}", "fields": ["user_id", "user_name"]}]}, "unique_key": ["user_id", "hour"], "partition_by": {"field": "hour", "data_type": "datetime", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["pancake", "fact", "incremental"]}, "created_at": 1732268180.2322526, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`pancake_performance__by__users`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    unique_key = ['user_id','hour'],\n    partition_by ={ \n        'field': 'hour',\n        'data_type': 'datetime',\n        'granularity': 'day',\n        },\n    incremental_strategy = 'insert_overwrite',\n    on_schema_change = 'sync_all_columns',\n    tags = ['pancake','fact','incremental']\n) }}\n\nwith user_stats as (\n    select \n    user_id,\n    hour,\n    avg(average_response_time) average_response_time,\n    sum(comment_count) comment_count,\n    sum(inbox_count) inbox_count,\n    sum(phone_number_count) phone_number_count,\n    sum(private_reply_count) private_reply_count,\n    sum(unique_comment_count) unique_comment_count,\n    sum(unique_inbox_count) unique_inbox_count,\n    from {{ref(\"stg_pancake__user_stats\")}}\n    {% if is_incremental() %}\n    where\n         date(hour) >= date(_dbt_max_partition)\n        {% endif %}\n        group by 1,2\n),\norders as (\n    select \n    seller_id,\n    date_trunc(inserted_at, hour) as hour,\n    count(distinct order_id) num_order,\n    sum(total_price) as total_payment,\n    from {{ref(\"stg_pancake__orders\")}}\n    where\n    seller_id is not null\n    and status = '\u0110\u00e3 x\u00e1c nh\u1eadn'\n    {% if is_incremental() %}\n         and date(updated_at) >= date_add(date(_dbt_max_partition), interval -3 day)\n        {% endif %}\n    group by 1,2\n)\n\nselect \nus.* except(hour, user_id),\ncoalesce(us.user_id, o.seller_id) as user_id,\ncoalesce(us.hour, o.hour) as hour,\no.num_order,\no.total_payment\nfrom user_stats us\nfull outer join orders o on us.user_id = o.seller_id and us.hour = o.hour", "language": "sql", "refs": [{"name": "stg_pancake__user_stats", "package": null, "version": null}, {"name": "stg_pancake__orders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_pancake__user_stats", "model.sado_analytics_services.stg_pancake__orders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/pancake_performance__by__users.sql", "compiled": true, "compiled_code": "\n\nwith user_stats as (\n    select \n    user_id,\n    hour,\n    avg(average_response_time) average_response_time,\n    sum(comment_count) comment_count,\n    sum(inbox_count) inbox_count,\n    sum(phone_number_count) phone_number_count,\n    sum(private_reply_count) private_reply_count,\n    sum(unique_comment_count) unique_comment_count,\n    sum(unique_inbox_count) unique_inbox_count,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_pancake__user_stats`\n    \n    where\n         date(hour) >= date(_dbt_max_partition)\n        \n        group by 1,2\n),\norders as (\n    select \n    seller_id,\n    date_trunc(inserted_at, hour) as hour,\n    count(distinct order_id) num_order,\n    sum(total_price) as total_payment,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_pancake__orders`\n    where\n    seller_id is not null\n    and status = '\u0110\u00e3 x\u00e1c nh\u1eadn'\n    \n         and date(updated_at) >= date_add(date(_dbt_max_partition), interval -3 day)\n        \n    group by 1,2\n)\n\nselect \nus.* except(hour, user_id),\ncoalesce(us.user_id, o.seller_id) as user_id,\ncoalesce(us.hour, o.hour) as hour,\no.num_order,\no.total_payment\nfrom user_stats us\nfull outer join orders o on us.user_id = o.seller_id and us.hour = o.hour", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.conversations_engaged": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "conversations_engaged", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/contact_center/conversations_engaged.sql", "original_file_path": "models/marts/marketing/contact_center/conversations_engaged.sql", "unique_id": "model.sado_analytics_services.conversations_engaged", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "conversations_engaged"], "alias": "conversations_engaged", "checksum": {"name": "sha256", "checksum": "dca61b7f66690a070dd2aae7183e8d70fc35f743d81e83ddb39e37699f254779"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["pancake", "fact", "incremental", "daily"], "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${conversations_engaged.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${conversations_engaged.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${conversations_engaged.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${conversations_engaged.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${conversations_engaged.inserted_at})"}, {"join": "calendar", "alias": "ad_calendar", "sql_on": "${ad_calendar.date} = date(${conversations_engaged.ad_inserted_at})"}, {"join": "dim__campaigns", "sql_on": "${dim__campaigns.ad_id} = ${conversations_engaged.ad_id}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["conversation_id", "ad_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "inserted_at", "data_type": "datetime", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["pancake", "fact", "incremental", "daily"], "description": "", "columns": {"inserted_at": {"name": "inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_customer_class": {"type": "string", "sql": "case when ${stg_pancake__customers.inserted_at} < ${TABLE}.inserted_at then 'Kh\u00e1ch c\u0169' else 'Kh\u00e1ch m\u1edbi' end", "label": "Customer group"}}}, "data_type": "datetime", "constraints": [], "quote": null, "tags": []}, "conversation_id": {"name": "conversation_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_conversations": {"type": "count_distinct", "label": "No. conversations", "group_label": "Pancake metrics", "round": 0}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_customer_engaged": {"type": "count_distinct", "label": "No. Engaged Customers", "group_label": "Pancake metrics", "compact": "thousands", "round": 1}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "message_count": {"name": "message_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_messages": {"type": "sum", "label": "No. Messages", "group_label": "Pancake metrics", "compact": "thousands", "round": 1}, "m_avg_messages_per_convo": {"type": "number", "label": "Avg. Messages per conversation", "group_label": "Pancake metrics", "sql": "safe_divide(${m_num_messages},${m_num_conversations})", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "snippet": {"name": "snippet", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ads_assisted": {"name": "ads_assisted", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "agent": {"name": "agent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "conversation_type": {"name": "conversation_type", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_conversation_type": {"type": "string", "label": "Conversation type", "sql": "coalesce(${TABLE}.conversation_type,\"Mua h\u00e0ng\")"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "promotion_type": {"name": "promotion_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "customer_type": {"name": "customer_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "stage": {"name": "stage", "description": "", "meta": {"dimension": {"type": "string", "label": "Tag value"}, "additional_dimensions": {"d_stage": {"type": "string", "sql": "case when lower(${TABLE}.stage) like '%ch\u01b0a ph\u1ea3n h\u1ed3i%' then '[2] Ch\u01b0a ph\u1ea3n h\u1ed3i' when lower(${TABLE}.stage) like '%tham kh\u1ea3o%' then '[3] Tham kh\u1ea3o' when regexp_contains(lower(${TABLE}.stage),r'ch\u0103m s\u00f3c l\u1ea7n') then '[3.1] Ch\u0103m s\u00f3c l\u1ea1i' when regexp_contains(lower(${TABLE}.stage),r'\u0111ang ch\u1ed5t|\u0111ang ch\u1ed1t') then '[4] \u0110ang ch\u1ed1t' when regexp_contains(lower(${TABLE}.stage),r'chuy\u1ec3n ch|kh\u00e1ch ra sr|\u0111\u00e3 mua h\u00e0ng') then '[5] Ch\u1ed1t \u0111\u01a1n' when regexp_contains(lower(${TABLE}.stage),r'\u0111\u00e3 g\u1eedi|ki\u1ec3m h\u00e0ng') then '[0] \u0110ang giao h\u00e0ng' when regexp_contains(lower(${TABLE}.stage),r'gi\u00e1 cao|h\u1ebft h\u00e0ng') then 'Hu\u1ef7' else '[1] H\u1ed9i tho\u1ea1i m\u1edbi' end", "label": "Stage"}, "d_closed_state": {"type": "string", "sql": "case  when lower(${TABLE}.stage) like '%\u0111\u00e3 mua h\u00e0ng%' then '\u0110\u00e3 mua h\u00e0ng'  when lower(${TABLE}.stage) like '%chuy\u1ec3n ch%' then 'chuy\u1ec3n CH' when lower(${TABLE}.stage) like '%kh\u00e1ch ra sr%' then 'Kh\u00e1ch ra SR' end", "label": "Closed State"}, "d_refuse_reason": {"type": "string", "sql": "case  when lower(${TABLE}.stage) like '%gi\u00e1 cao%' then 'Gi\u00e1 Cao' when lower(${TABLE}.stage) like '%h\u1ebft h\u00e0ng%' then 'H\u1ebft h\u00e0ng' end", "label": "Refuse Reason"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "claim_status": {"name": "claim_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "ad_post_id": {"name": "ad_post_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "ad_inserted_at": {"name": "ad_inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": "datetime", "constraints": [], "quote": true, "tags": []}}, "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${conversations_engaged.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${conversations_engaged.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${conversations_engaged.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${conversations_engaged.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${conversations_engaged.inserted_at})"}, {"join": "calendar", "alias": "ad_calendar", "sql_on": "${ad_calendar.date} = date(${conversations_engaged.ad_inserted_at})"}, {"join": "dim__campaigns", "sql_on": "${dim__campaigns.ad_id} = ${conversations_engaged.ad_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/contact_center/conversations_engaged.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${conversations_engaged.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${conversations_engaged.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${conversations_engaged.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${conversations_engaged.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${conversations_engaged.inserted_at})"}, {"join": "calendar", "alias": "ad_calendar", "sql_on": "${ad_calendar.date} = date(${conversations_engaged.ad_inserted_at})"}, {"join": "dim__campaigns", "sql_on": "${dim__campaigns.ad_id} = ${conversations_engaged.ad_id}"}]}, "partition_by": {"field": "inserted_at", "data_type": "datetime", "granularity": "day"}, "unique_key": ["conversation_id", "ad_id"], "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["pancake", "fact", "incremental", "daily"]}, "created_at": 1732268180.2037199, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`conversations_engaged`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ \n        'field': 'inserted_at',\n        'data_type': 'datetime',\n        'granularity': 'day',\n        },\n    unique_key = ['conversation_id','ad_id'],\n    incremental_strategy = 'insert_overwrite',\n    on_schema_change = 'sync_all_columns',\n    tags = ['pancake','fact','incremental','daily']\n) }}\n\n{% set tag_fields = {\n    \"agent\" :\"Nh\u00e2n s\u1ef1\",\n    \"conversation_type\" :\"Ph\u00e2n lo\u1ea1i\",\n    \"promotion_type\" :\"Ph\u00e2n lo\u1ea1i ch\u01b0\u01a1ng tr\u00ecnh\",\n    \"customer_type\" :\"Ph\u00e2n lo\u1ea1i KH\",\n    \"stage\" :\"Ti\u1ebfn tr\u00ecnh ch\u0103m s\u00f3c\",\n    \"claim_status\" :\"Tr\u1ea1ng th\u00e1i x\u1eed l\u00fd\" \n} %}\nWITH tags AS (\n\n    SELECT\n        DISTINCT *\n    FROM\n        {{ ref(\"stg_pancake__tags\") }}\n),\nraw_ AS (\n    SELECT\n        conversations.inserted_at,\n        conversations.conversation_id,\n        conversations.customer_id,\n        conversations.user_id,\n        conversations.page_id,\n        conversations.post_id,\n        conversations.message_count,\n        conversations.snippet,\n        conversations.type,\n        conversations.ad_id,\n        conversations.ad_post_id,\n        conversations.ad_inserted_at,\n        CASE\n            WHEN COUNT(ad_id) over(\n                PARTITION BY conversations.ad_id\n            ) > 0 THEN 'Ads'\n            ELSE 'Non-Ads'\n        END AS ads_assisted,\n        tags.tag_value,\n        tags.category,\n    FROM\n        {{ ref(\"stg_pancake__conversations\") }}\n        conversations\n        LEFT JOIN tags\n        ON conversations.tag_id = tags.tag_id\n    WHERE 1=1\n{% if is_incremental() %}\n and ( \n    date(conversations.inserted_at) in (\n        select date(inserted_at) \n        from {{ ref(\"stg_pancake__conversations\") }} \n        where DATE(updated_at) >= date_sub(CURRENT_DATE, interval 1 day)\n        )\n)\n{% endif %}\n)\nSELECT\n    DISTINCT *\nFROM\n    raw_ \n    pivot (string_agg(distinct tag_value,',') for category IN ({% for key, value in tag_fields.items() %}\n        \"{{value}}\" AS {{ key }}\n        {{ \",\" if not loop.last }}\n    {% endfor %}))", "language": "sql", "refs": [{"name": "stg_pancake__tags", "package": null, "version": null}, {"name": "stg_pancake__conversations", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_pancake__tags", "model.sado_analytics_services.stg_pancake__conversations"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/conversations_engaged.sql", "compiled": true, "compiled_code": "\n\n\nWITH tags AS (\n\n    SELECT\n        DISTINCT *\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_pancake__tags`\n),\nraw_ AS (\n    SELECT\n        conversations.inserted_at,\n        conversations.conversation_id,\n        conversations.customer_id,\n        conversations.user_id,\n        conversations.page_id,\n        conversations.post_id,\n        conversations.message_count,\n        conversations.snippet,\n        conversations.type,\n        conversations.ad_id,\n        conversations.ad_post_id,\n        conversations.ad_inserted_at,\n        CASE\n            WHEN COUNT(ad_id) over(\n                PARTITION BY conversations.ad_id\n            ) > 0 THEN 'Ads'\n            ELSE 'Non-Ads'\n        END AS ads_assisted,\n        tags.tag_value,\n        tags.category,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_pancake__conversations`\n        conversations\n        LEFT JOIN tags\n        ON conversations.tag_id = tags.tag_id\n    WHERE 1=1\n\n and ( \n    date(conversations.inserted_at) in (\n        select date(inserted_at) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_pancake__conversations` \n        where DATE(updated_at) >= date_sub(CURRENT_DATE, interval 1 day)\n        )\n)\n\n)\nSELECT\n    DISTINCT *\nFROM\n    raw_ \n    pivot (string_agg(distinct tag_value,',') for category IN (\n        \"Nh\u00e2n s\u1ef1\" AS agent\n        ,\n    \n        \"Ph\u00e2n lo\u1ea1i\" AS conversation_type\n        ,\n    \n        \"Ph\u00e2n lo\u1ea1i ch\u01b0\u01a1ng tr\u00ecnh\" AS promotion_type\n        ,\n    \n        \"Ph\u00e2n lo\u1ea1i KH\" AS customer_type\n        ,\n    \n        \"Ti\u1ebfn tr\u00ecnh ch\u0103m s\u00f3c\" AS stage\n        ,\n    \n        \"Tr\u1ea1ng th\u00e1i x\u1eed l\u00fd\" AS claim_status\n        \n    ))", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__daily_inventory": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "fct__daily_inventory", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/inventory/fct__daily_inventory.sql", "original_file_path": "models/marts/inventory/fct__daily_inventory.sql", "unique_id": "model.sado_analytics_services.fct__daily_inventory", "fqn": ["sado_analytics_services", "marts", "inventory", "fct__daily_inventory"], "alias": "fct__daily_inventory", "checksum": {"name": "sha256", "checksum": "064f5e64ed698727a6ff46766f768ba7639aad22fb069a4874bf64aa78f3a0ed"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1732268177.1960926, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`fct__daily_inventory`", "raw_code": "with inventory as (\n    select \n        * except(last_inventory_date,next_inventory_date,inventory_date),\n        coalesce(lag(ending_inventory) over (partition by product_id,branch_id order by date),0) as beginning_inventory,\n    from {{ ref(\"int_kiotviet__inventory_change\") }} inv\n),\nquantity_sold as (\n    select \n        branch_id,\n        product_id,\n        transaction_date,\n        sum(quantity) as quantity_sold\n    from {{ ref(\"int_kiotviet__revenue_items\") }}\n    group by 1,2,3\n),\nquantity_return as (\n    select \n        branch_id,\n        product_id,\n        transaction_date,\n        sum(quantity) as quantity_return\n    from {{ ref(\"int_kiotviet__return_items\") }}\n    group by 1,2,3\n),\n\ntransfers_in as (\n    select \n        receipt_branch_id,\n        product_id,\n        date(received_date) transaction_date,\n        sum(receive_quantity) as quantity_transfer_in,\n    from {{ ref(\"stg_kiotviet__transfers_details\") }}\n    group by 1,2,3\n),\n\ntransfers_out as (\n    select \n        transfer_branch_id,\n        product_id,\n        date(sent_date) transaction_date,\n        sum(send_quantity) as quantity_transfer_out,\n    from {{ ref(\"stg_kiotviet__transfers_details\") }}\n    group by 1,2,3\n)\n\nselect \n    inv.*,\n    (inv.ending_inventory - inv.beginning_inventory) as quantity_change,\n    (inv.ending_inventory + inv.beginning_inventory)/2 as average_inventory,\n    coalesce(sold.quantity_sold,0) quantity_sold,\n    coalesce(ret.quantity_return,0) quantity_return,\n    coalesce(tin.quantity_transfer_in,0) quantity_transfer_in,\n    coalesce(tout.quantity_transfer_out,0) quantity_transfer_out,\nfrom inventory inv\nleft join quantity_sold sold on inv.branch_id = sold.branch_id and inv.product_id = sold.product_id and inv.date = sold.transaction_date\nleft join quantity_return ret on inv.branch_id = ret.branch_id and inv.product_id = ret.product_id and inv.date = ret.transaction_date\nleft join transfers_in tin on inv.branch_id = tin.receipt_branch_id and inv.product_id = tin.product_id and inv.date = tin.transaction_date\nleft join transfers_out tout on inv.branch_id = tout.transfer_branch_id and inv.product_id = tout.product_id and inv.date = tout.transaction_date", "language": "sql", "refs": [{"name": "int_kiotviet__inventory_change", "package": null, "version": null}, {"name": "int_kiotviet__revenue_items", "package": null, "version": null}, {"name": "int_kiotviet__return_items", "package": null, "version": null}, {"name": "stg_kiotviet__transfers_details", "package": null, "version": null}, {"name": "stg_kiotviet__transfers_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.int_kiotviet__inventory_change", "model.sado_analytics_services.int_kiotviet__revenue_items", "model.sado_analytics_services.int_kiotviet__return_items", "model.sado_analytics_services.stg_kiotviet__transfers_details"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/inventory/fct__daily_inventory.sql", "compiled": true, "compiled_code": "with  __dbt__cte__int__working_days as (\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    p.promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel in ('Offline','Popup')\nand c.date <= current_date()\nAND b.branch_id NOT IN (1000087891)\nand b.asm_name is not null\n),  __dbt__cte__int_kiotviet__inventory_change as (\n\n\nwith cal_ending_inventory as (\nSELECT\n    distinct \n    product_id,\n    branch_id,\n    DATE(_batched_at) AS inventory_date,\n    LAST_VALUE(on_hand) over w1 AS ending_inventory,\n    max(case when on_hand > 0 then DATE(_batched_at) end) over w2 as last_inventory_date\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__inventories`\n    window w1 AS (\n        PARTITION BY product_id,\n        branch_id,\n        DATE(_batched_at)\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    ),\n    w2 as (\n        PARTITION BY product_id,\n        branch_id\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    )\n),\ncal_last_inventory_date as (\nselect * except(last_inventory_date),\n    coalesce(max(case when inventory_date > last_inventory_date and ending_inventory = 0 then inventory_date end ) over (PARTITION BY product_id,branch_id),last_inventory_date) last_inventory_date ,\n    lead(inventory_date) over (PARTITION BY product_id,branch_id ORDER BY inventory_date) as next_inventory_date,\nfrom cal_ending_inventory\n)\n\nselect inv.* , w.date\nfrom cal_last_inventory_date inv\nleft join __dbt__cte__int__working_days w\non inv.branch_id = w.branch_id \nand ((inv.inventory_date <= w.date and inv.next_inventory_date > w.date) \n     or (inv.last_inventory_date <= w.date and w.date< current_date() and ending_inventory >0 and inv.next_inventory_date is null)\n     or (inv.last_inventory_date = w.date and inv.next_inventory_date is null and ending_inventory =0)\n    )\n    \nwhere inventory_date <= last_inventory_date\n), inventory as (\n    select \n        * except(last_inventory_date,next_inventory_date,inventory_date),\n        coalesce(lag(ending_inventory) over (partition by product_id,branch_id order by date),0) as beginning_inventory,\n    from __dbt__cte__int_kiotviet__inventory_change inv\n),\nquantity_sold as (\n    select \n        branch_id,\n        product_id,\n        transaction_date,\n        sum(quantity) as quantity_sold\n    from `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__revenue_items`\n    group by 1,2,3\n),\nquantity_return as (\n    select \n        branch_id,\n        product_id,\n        transaction_date,\n        sum(quantity) as quantity_return\n    from `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__return_items`\n    group by 1,2,3\n),\n\ntransfers_in as (\n    select \n        receipt_branch_id,\n        product_id,\n        date(received_date) transaction_date,\n        sum(receive_quantity) as quantity_transfer_in,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__transfers_details`\n    group by 1,2,3\n),\n\ntransfers_out as (\n    select \n        transfer_branch_id,\n        product_id,\n        date(sent_date) transaction_date,\n        sum(send_quantity) as quantity_transfer_out,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__transfers_details`\n    group by 1,2,3\n)\n\nselect \n    inv.*,\n    (inv.ending_inventory - inv.beginning_inventory) as quantity_change,\n    (inv.ending_inventory + inv.beginning_inventory)/2 as average_inventory,\n    coalesce(sold.quantity_sold,0) quantity_sold,\n    coalesce(ret.quantity_return,0) quantity_return,\n    coalesce(tin.quantity_transfer_in,0) quantity_transfer_in,\n    coalesce(tout.quantity_transfer_out,0) quantity_transfer_out,\nfrom inventory inv\nleft join quantity_sold sold on inv.branch_id = sold.branch_id and inv.product_id = sold.product_id and inv.date = sold.transaction_date\nleft join quantity_return ret on inv.branch_id = ret.branch_id and inv.product_id = ret.product_id and inv.date = ret.transaction_date\nleft join transfers_in tin on inv.branch_id = tin.receipt_branch_id and inv.product_id = tin.product_id and inv.date = tin.transaction_date\nleft join transfers_out tout on inv.branch_id = tout.transfer_branch_id and inv.product_id = tout.product_id and inv.date = tout.transaction_date", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sado_analytics_services.int__working_days", "sql": " __dbt__cte__int__working_days as (\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    p.promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel in ('Offline','Popup')\nand c.date <= current_date()\nAND b.branch_id NOT IN (1000087891)\nand b.asm_name is not null\n)"}, {"id": "model.sado_analytics_services.int_kiotviet__inventory_change", "sql": " __dbt__cte__int_kiotviet__inventory_change as (\n\n\nwith cal_ending_inventory as (\nSELECT\n    distinct \n    product_id,\n    branch_id,\n    DATE(_batched_at) AS inventory_date,\n    LAST_VALUE(on_hand) over w1 AS ending_inventory,\n    max(case when on_hand > 0 then DATE(_batched_at) end) over w2 as last_inventory_date\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__inventories`\n    window w1 AS (\n        PARTITION BY product_id,\n        branch_id,\n        DATE(_batched_at)\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    ),\n    w2 as (\n        PARTITION BY product_id,\n        branch_id\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    )\n),\ncal_last_inventory_date as (\nselect * except(last_inventory_date),\n    coalesce(max(case when inventory_date > last_inventory_date and ending_inventory = 0 then inventory_date end ) over (PARTITION BY product_id,branch_id),last_inventory_date) last_inventory_date ,\n    lead(inventory_date) over (PARTITION BY product_id,branch_id ORDER BY inventory_date) as next_inventory_date,\nfrom cal_ending_inventory\n)\n\nselect inv.* , w.date\nfrom cal_last_inventory_date inv\nleft join __dbt__cte__int__working_days w\non inv.branch_id = w.branch_id \nand ((inv.inventory_date <= w.date and inv.next_inventory_date > w.date) \n     or (inv.last_inventory_date <= w.date and w.date< current_date() and ending_inventory >0 and inv.next_inventory_date is null)\n     or (inv.last_inventory_date = w.date and inv.next_inventory_date is null and ending_inventory =0)\n    )\n    \nwhere inventory_date <= last_inventory_date\n)"}], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__curent_inventory": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "fct__curent_inventory", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/inventory/fct__curent_inventory.sql", "original_file_path": "models/marts/inventory/fct__curent_inventory.sql", "unique_id": "model.sado_analytics_services.fct__curent_inventory", "fqn": ["sado_analytics_services", "marts", "inventory", "fct__curent_inventory"], "alias": "fct__curent_inventory", "checksum": {"name": "sha256", "checksum": "0dc698b009a067528592f5394523b5258baa71874919b52b96461cd3a1eae475"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["fact", "kiotviet", "inventory"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "kiotviet", "inventory"], "description": "Current inventory on hand", "columns": {"branch_id": {"name": "branch_id", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "product_id": {"name": "product_id", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "product_name": {"name": "product_name", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "on_hand": {"name": "on_hand", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "reserved": {"name": "reserved", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "actual_reserved": {"name": "actual_reserved", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "max_quantity": {"name": "max_quantity", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "min_quantity": {"name": "min_quantity", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/inventory/fct__curent_inventory.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["fact", "kiotviet", "inventory"]}, "created_at": 1732268180.2599728, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`fct__curent_inventory`", "raw_code": "{{\n  config(\n    tags = [\"fact\",\"kiotviet\",\"inventory\"]\n    )\n}}\n\nwith source as ({{ \n    dbt_utils.deduplicate(\n    relation = ref('stg_kiotviet__inventories'), \n    partition_by = 'product_id,branch_id', \n    order_by = \"_batched_at desc\",\n    ) \n    }})\nselect * from source where on_hand > 0", "language": "sql", "refs": [{"name": "stg_kiotviet__inventories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": ["model.sado_analytics_services.stg_kiotviet__inventories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/inventory/fct__curent_inventory.sql", "compiled": true, "compiled_code": "\n\nwith source as (select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__inventories` original\n        group by product_id,branch_id\n    ))\nselect * from source where on_hand > 0", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__regions": {"database": "agile-scheme-394814", "schema": "dbt_prod_dimensions", "name": "dim__regions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/dimensions/dim__regions.sql", "original_file_path": "models/marts/dimensions/dim__regions.sql", "unique_id": "model.sado_analytics_services.dim__regions", "fqn": ["sado_analytics_services", "marts", "dimensions", "dim__regions"], "alias": "dim__regions", "checksum": {"name": "sha256", "checksum": "19764c178aadc0936e3392ac9cef467d8a1fbd66bfde3da38c63ee57f8df9dd7"}, "config": {"enabled": true, "alias": null, "schema": "dimensions", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"region": {"name": "region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region_code": {"name": "region_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/dimensions/dim__regions.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dimensions"}, "created_at": 1732268180.2743318, "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__regions`", "raw_code": "{{\n  config(\n    materialized = 'view',\n    )\n}}\nselect * from {{ ref('regions') }}", "language": "sql", "refs": [{"name": "regions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["seed.sado_analytics_services.regions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/dimensions/dim__regions.sql", "compiled": true, "compiled_code": "\nselect * from `agile-scheme-394814`.`dbt_prod`.`regions`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__inventory_classes": {"database": "agile-scheme-394814", "schema": "dbt_prod_dimensions", "name": "dim__inventory_classes", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/dimensions/dim__inventory_classes.sql", "original_file_path": "models/marts/dimensions/dim__inventory_classes.sql", "unique_id": "model.sado_analytics_services.dim__inventory_classes", "fqn": ["sado_analytics_services", "marts", "dimensions", "dim__inventory_classes"], "alias": "dim__inventory_classes", "checksum": {"name": "sha256", "checksum": "ceccb42c9f41ab8f90c488ef1e0e5374285eb79b6eecfdb42aafffd94758ba2d"}, "config": {"enabled": true, "alias": null, "schema": "dimensions", "database": null, "tags": ["view", "dimension"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension"], "description": "", "columns": {"sub_productline": {"name": "sub_productline", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "productline": {"name": "productline", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "category": {"name": "category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "product_group": {"name": "product_group", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "season": {"name": "season", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "class_code": {"name": "class_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/dimensions/dim__inventory_classes.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dimensions", "tags": ["view", "dimension"]}, "created_at": 1732268180.2712646, "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_classes`", "raw_code": "{{\n  config(\n    materialized = 'view',\n    tags=['view','dimension']\n    )\n}}\nselect \ndistinct\nproduct_design_code as class_code,\nfirst_value(sub_productline ignore nulls) over w1 as sub_productline,\nfirst_value(productline ignore nulls) over w1 as productline,\nfirst_value(category ignore nulls) over w1 as category,\nfirst_value(product_group ignore nulls) over w1 as product_group,\nfirst_value(season ignore nulls) over w1 as season\nfrom {{ ref(\"dim__inventory_items\") }}\nwhere product_design_code is not null\nand (category not in ('WEBSITE (Kh\u00f4ng x\u00f3a)') or category is null)\nwindow w1 as (partition by product_design_code order by kiotviet_product_id rows BETWEEN unbounded preceding and unbounded following)\n{# and kiotviet_product_id is not null #}", "language": "sql", "refs": [{"name": "dim__inventory_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.dim__inventory_items"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/dimensions/dim__inventory_classes.sql", "compiled": true, "compiled_code": "\nselect \ndistinct\nproduct_design_code as class_code,\nfirst_value(sub_productline ignore nulls) over w1 as sub_productline,\nfirst_value(productline ignore nulls) over w1 as productline,\nfirst_value(category ignore nulls) over w1 as category,\nfirst_value(product_group ignore nulls) over w1 as product_group,\nfirst_value(season ignore nulls) over w1 as season\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_items`\nwhere product_design_code is not null\nand (category not in ('WEBSITE (Kh\u00f4ng x\u00f3a)') or category is null)\nwindow w1 as (partition by product_design_code order by kiotviet_product_id rows BETWEEN unbounded preceding and unbounded following)\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__branches": {"database": "agile-scheme-394814", "schema": "dbt_prod_dimensions", "name": "dim__branches", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/dimensions/dim__branches.sql", "original_file_path": "models/marts/dimensions/dim__branches.sql", "unique_id": "model.sado_analytics_services.dim__branches", "fqn": ["sado_analytics_services", "marts", "dimensions", "dim__branches"], "alias": "dim__branches", "checksum": {"name": "sha256", "checksum": "2e2d88f23b1c8cfc581ae8a73017cbeeaf60ef0ba4893fba3324235e2403a5e5"}, "config": {"enabled": true, "alias": null, "schema": "dimensions", "database": null, "tags": ["table", "dimension"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "dimension"], "description": "T\u1ed5ng h\u1ee3p CH Online & Offline", "columns": {"branch_id": {"name": "branch_id", "description": "This is a unique identifier for each branch. It is used to distinguish between different branches in the database.", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "branch_name": {"name": "branch_name", "description": "This is the name of the branch. It provides a human-readable identifier for each branch and is used in various reports and analyses.", "meta": {"additional_dimensions": {"d_source": {"type": "string", "sql": "case when ${channel} = 'Offline' then ${asm_name} \nwhen ${channel} = 'Online & Ecom' and ${branch_name} in ('Website','FB - WEB','5S Web') then 'Website'\nwhen ${channel} = 'Online & Ecom' and ${branch_name} in ('Facebook','Instagram') then 'Social'\nwhen ${channel} = 'Online & Ecom' and ${branch_name} in ('Tiktok Shop','Lazada.vn','Shopee.vn','Tiki.vn','S\u00e0n','Zalo Shop') then 'S\u00e0n'\nelse ${branch_name} end", "label": "Source"}}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "branch_code": {"name": "branch_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "channel": {"name": "channel", "description": "This column indicates the channel through which the branch operates. It can be either 'Offline' for physical branches or 'Online & Ecom' for online sales channels.", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "asm_name": {"name": "asm_name", "description": "The name of the Area Sales Manager (ASM) associated with the branch. If the ASM name is not available, the value will be 'Kho & CH kh\u00e1c Kiotviet' for offline channels and 'Online' for online channels.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "The phone number associated with the branch. This field may be null for online channels.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "local_page": {"name": "local_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "region_page": {"name": "region_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "fb_ads_pic": {"name": "fb_ads_pic", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "province": {"name": "province", "description": "The 'province' column represents the province where the branch is located. It is a string type column and can contain any valid string value representing the name of the province.", "meta": {"dimension": {"type": "string"}, "additional_dimensions": {"d_province": {"type": "string", "sql": "case when ${province} is null then 'Ch\u01b0a ph\u00e2n lo\u1ea1i' else ${province} end", "label": "Province group"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "province_code": {"name": "province_code", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "region": {"name": "region", "description": "The 'region' column represents the region where the branch is located. It is a string type column and can contain any valid string value representing the name of the region.", "meta": {"dimension": {"type": "string"}, "additional_dimensions": {"d_region": {"type": "string", "sql": "case when ${region} is null then 'Ch\u01b0a ph\u00e2n lo\u1ea1i' else ${region} end", "label": "Region group"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "region_code": {"name": "region_code", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "opening_day": {"name": "opening_day", "description": "The 'opening_day' column represents the date when the branch was opened. It is a date type column and can contain any valid date value in the format 'YYYY-MM-DD'.", "meta": {"dimension": {"type": "date"}, "additional_dimensions": {"d_store_age_group": {"type": "string", "sql": "case when date_diff(current_date,${opening_day},month) < 3 then '1. under 3M' when date_diff(current_date,${opening_day},month) between 3 and 5 then '2. 3-6M' when date_diff(current_date,${opening_day},month) between 6 and 8 then '3. 6-9M' when date_diff(current_date,${opening_day},month) between 9 and 11 then '4. 9-12M' when date_diff(current_date,${opening_day},month) between 12 and 17 then '5. 1-1.5Y' when date_diff(current_date,${opening_day},month) between 18 and 23 then '6. 1.5-2Y' when date_diff(current_date,${opening_day},month) between 24 and 35 then '7. 2-3Y' else '8. over 3Y' end", "label": "Store age group"}, "d_store_age": {"type": "number", "sql": "date_diff(current_date,${opening_day},month)", "label": "Store age"}, "d_opening_quarter": {"type": "string", "sql": "extract(year from ${TABLE}.opening_day)||\" Q\"||extract(quarter from ${TABLE}.opening_day)", "label": "Opening Quarter"}, "d_opening_period": {"type": "string", "sql": "case when extract(year from ${TABLE}.opening_day) = extract(year from current_date) then ${d_opening_quarter} else safe_cast(extract(year from ${TABLE}.opening_day) as string) end", "label": "Opening Period"}}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "close_date": {"name": "close_date", "description": "The 'close_date' column represents the date when the branch was closed. The data type of this column is 'date'. If the branch is still operational, this field may be null.", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/dimensions/dim__branches.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "dimensions", "tags": ["table", "dimension"]}, "created_at": 1732268180.269126, "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches`", "raw_code": "{{\n  config(\n    tags=['table','dimension']\n    )\n}}\n\nWITH branches AS (\n    SELECT\n        *\n    FROM\n        {{ ref(\"stg_kiotviet__branches\") }}\n    WHERE 1=1\n        {# branch_name LIKE '5S%' #}\n        and branch_id not in (1000087891,86414)\n),\n\nasm_list as ( \nselect \n    distinct\n    *\nfrom {{ ref(\"stg_gsheet__asms\") }}\n)\n\nSELECT\n    branches.branch_id,\n    coalesce(branches.branch_name, asm_list.store_name) as branch_name,\n    asm_list.branch_code,\n    branches.channel,\n\n    asm_list.asm_name,\n    safe_cast(asm_list.phone as string) phone,\n    asm_list.email,\n\n    asm_list.local_page,\n    asm_list.local_page_code,\n    asm_list.region_page,\n    asm_list.pic as fb_ads_pic,\n\n    asm_list.province,\n    asm_list.province_code,\n    asm_list.region,\n    asm_list.region_code,\n\n    asm_list.opening_day,\n    asm_list.close_date,\n\n    asm_list.frontage,\n    asm_list.area_sqm,\n\n    coalesce(asm_list.type,branches.channel) as model_type,\nFROM\n    asm_list\nfull outer JOIN  branches\n    ON asm_list.store_name = branches.branch_name\n\nunion all \n\nselect \n    channel_id as branch_id,\n    channel as branch_name,\n    cast(null as string) as branch_code,\n    \"Online & Ecom\" as channel,\n\n    \"Online\" as asm_name,\n    cast(null as string) as phone,\n    cast(null as string) as email,\n\n    cast(null as string) as local_page,\n    cast(null as string) as local_page_code,\n    cast(null as string) as region_page,\n    cast(null as string) as fb_ads_pic,\n\n    \"Online & Ecom\" as province,\n    \"HNO\" as province_code,\n    \"Online & Ecom\" as region,\n    \"HNO\" as region_code,\n\n    date(\"2022-10-10\") as opening_day,\n    cast(null as date) as close_date,\n\n    cast(null as float64) as frontage,\n    cast(null as float64) as area_sqm,\n\n    \"S\u00e0n\" as type,\n    from {{ ref(\"stg_nhanhvn__sales_channels\") }}", "language": "sql", "refs": [{"name": "stg_kiotviet__branches", "package": null, "version": null}, {"name": "stg_gsheet__asms", "package": null, "version": null}, {"name": "stg_nhanhvn__sales_channels", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_gsheet__asms", "model.sado_analytics_services.stg_nhanhvn__sales_channels"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/dimensions/dim__branches.sql", "compiled": true, "compiled_code": "\n\nWITH branches AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`\n    WHERE 1=1\n        \n        and branch_id not in (1000087891,86414)\n),\n\nasm_list as ( \nselect \n    distinct\n    *\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__asms`\n)\n\nSELECT\n    branches.branch_id,\n    coalesce(branches.branch_name, asm_list.store_name) as branch_name,\n    asm_list.branch_code,\n    branches.channel,\n\n    asm_list.asm_name,\n    safe_cast(asm_list.phone as string) phone,\n    asm_list.email,\n\n    asm_list.local_page,\n    asm_list.local_page_code,\n    asm_list.region_page,\n    asm_list.pic as fb_ads_pic,\n\n    asm_list.province,\n    asm_list.province_code,\n    asm_list.region,\n    asm_list.region_code,\n\n    asm_list.opening_day,\n    asm_list.close_date,\n\n    asm_list.frontage,\n    asm_list.area_sqm,\n\n    coalesce(asm_list.type,branches.channel) as model_type,\nFROM\n    asm_list\nfull outer JOIN  branches\n    ON asm_list.store_name = branches.branch_name\n\nunion all \n\nselect \n    channel_id as branch_id,\n    channel as branch_name,\n    cast(null as string) as branch_code,\n    \"Online & Ecom\" as channel,\n\n    \"Online\" as asm_name,\n    cast(null as string) as phone,\n    cast(null as string) as email,\n\n    cast(null as string) as local_page,\n    cast(null as string) as local_page_code,\n    cast(null as string) as region_page,\n    cast(null as string) as fb_ads_pic,\n\n    \"Online & Ecom\" as province,\n    \"HNO\" as province_code,\n    \"Online & Ecom\" as region,\n    \"HNO\" as region_code,\n\n    date(\"2022-10-10\") as opening_day,\n    cast(null as date) as close_date,\n\n    cast(null as float64) as frontage,\n    cast(null as float64) as area_sqm,\n\n    \"S\u00e0n\" as type,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__sales_channels`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__working_days": {"database": "agile-scheme-394814", "schema": "dbt_prod_dimensions", "name": "fct__working_days", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/dimensions/fct__working_days.sql", "original_file_path": "models/marts/dimensions/fct__working_days.sql", "unique_id": "model.sado_analytics_services.fct__working_days", "fqn": ["sado_analytics_services", "marts", "dimensions", "fct__working_days"], "alias": "fct__working_days", "checksum": {"name": "sha256", "checksum": "717c5ac42d26bcfb16e741b1e83c42e1a352ab49d75a50cc04425425f464ffa6"}, "config": {"enabled": true, "alias": null, "schema": "dimensions", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"branch_working_day_id": {"name": "branch_working_day_id", "description": "This is a unique identifier for each working day at a specific branch. It is generated by hashing the branch_id and the date. This identifier is useful for tracking and analyzing the performance of each branch on a daily basis.", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_operating_days": {"type": "count_distinct", "label": "Operating Days"}}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "branch_id": {"name": "branch_id", "description": "This is a unique numeric identifier for each branch. It is used to distinguish between different branches in the company's network.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_operating_branches": {"type": "count_distinct", "label": "Operating branches", "filters": [{"channel": "Offline"}]}, "m_operating_popups": {"type": "count_distinct", "label": "Operating popups", "filters": [{"channel": "Popup"}]}, "m_operating_online_stores": {"type": "count_distinct", "label": "Operating online stores", "filters": [{"channel": "Online & Ecom"}]}}}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "branch_name": {"name": "branch_name", "description": "This is the name of the branch. It provides a human-readable identifier for each branch, making it easier for business users to understand and analyze the data.", "meta": {"dimension": {"type": "string"}, "additional_dimensions": {"d_source": {"type": "string", "sql": "case when ${channel} = 'Offline' then ${asm_name} \nwhen ${channel} = 'Online & Ecom' and ${branch_name} in ('Website','FB - WEB','5S Web') then 'Website'\nwhen ${channel} = 'Online & Ecom' and ${branch_name} in ('Facebook','Instagram') then 'Social'\nwhen ${channel} = 'Online & Ecom' and ${branch_name} in ('Tiktok Shop','Lazada.vn','Shopee.vn','Tiki.vn','S\u00e0n','Zalo Shop') then 'S\u00e0n'\nelse ${branch_name} end", "label": "Source"}}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "branch_code": {"name": "branch_code", "description": "This is a unique identifier for each branch in the business. It is used to track and manage the operations of each branch separately.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "channel": {"name": "channel", "description": "This refers to the medium or platform through which the business interacts with its customers. It could be online, in-store, or any other method of interaction.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "asm_name": {"name": "asm_name", "description": "This is the name of the Area Sales Manager responsible for the branch. It is used to track the performance and accountability of each manager in the business.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "local_page": {"name": "local_page", "description": "This column represents the name of the local page associated with the branch. It is a string type and can be used to identify the specific local page for marketing or other business purposes.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "local_page_code": {"name": "local_page_code", "description": "This column represents the unique code associated with the local page. It is a string type and can be used for data analysis and tracking purposes.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "region_page": {"name": "region_page", "description": "This column represents the name of the regional page associated with the branch. It is a string type and can be used to identify the specific regional page for marketing or other business purposes.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "fb_ads_pic": {"name": "fb_ads_pic", "description": "This column contains the URL of the Facebook advertisement picture associated with the branch. This is used for marketing and promotional purposes.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "province": {"name": "province", "description": "This column represents the province where the branch is located. It is useful for geographical analysis and segmentation.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "region": {"name": "region", "description": "This column represents the region where the branch is located. It is a broader geographical classification than province and is useful for regional analysis and segmentation.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "opening_day": {"name": "opening_day", "description": "This column represents the date when a particular branch was opened. It is in the date format (YYYY-MM-DD). This information is crucial for understanding the operational timeline of the branch.", "meta": {"dimension": {"type": "date", "hidden": true}, "additional_dimensions": {"d_opening_month": {"type": "string", "sql": "format_date('%Y-%m',opening_day)", "label": "Opening Month"}, "d_opening_year": {"type": "string", "sql": "format_date('%Y',opening_day)", "label": "Opening Year"}, "d_opening_quarter": {"type": "string", "sql": "format_date('%Y-Q%Q',opening_day)", "label": "Opening Quarter"}, "d_store_age": {"type": "number", "sql": "date_diff( CURRENT_DATE(), opening_day, month)", "label": "Store Age"}, "d_store_age_group": {"type": "number", "sql": "case \n  when date_diff( date, opening_day, month) <= 3 then 'a. 0-3 Months'\n  when date_diff( date, opening_day, month) <= 6 then 'b. 4-6 Months'\n  when date_diff( date, opening_day, month) <= 12 then 'c. 7-12 Months'\n  when date_diff( date, opening_day, month) <= 18 then 'd. 1-1.5 Years'\n  when date_diff( date, opening_day, month) <= 24 then 'e. 1.5-2 Years'\n  when date_diff( date, opening_day, month) <= 36 then 'f. 2-3 Years'\n  else 'g. 3+ Years' end", "label": "Store Age Group"}}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "close_date": {"name": "close_date", "description": "This column represents the date when a particular branch was closed. It is also in the date format (YYYY-MM-DD). If the branch is still operational, this field will be NULL. This information helps in understanding the lifespan of the branch.", "meta": {"dimension": {"type": "date", "hidden": true}, "additional_dimensions": {"d_is_currently_active": {"type": "string", "sql": "case when close_date is null then 'Yes' else 'No' end", "label": "Currently Active"}}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "model_type": {"name": "model_type", "description": "This column represents the type of the branch model. It is a string value that can provide insights into the operational model of the branch. This information can be used to categorize branches and analyze performance based on the model type.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "date": {"name": "date", "description": "This column represents the specific date of the working day for a particular branch. It is in the format of YYYY-MM-DD. This field is crucial for time-based analysis and reporting.", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "day_of_month": {"name": "day_of_month", "description": "This column indicates the day of the month for the working day. It is a numeric field ranging from 1 to 31. This field can be used to analyze trends and patterns that occur on specific days of the month.", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": true, "tags": []}, "day_name": {"name": "day_name", "description": "This column provides the name of the day of the week (e.g., Monday, Tuesday, etc.) for the working day. This field can be used to analyze trends and patterns that occur on specific days of the week.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "start_of_month": {"name": "start_of_month", "description": "This column represents the first day of the month for the given date. It is useful for monthly reporting and analysis, allowing business users to easily group data by month.", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "end_of_month": {"name": "end_of_month", "description": "This column represents the last day of the month for the given date. It is useful for monthly reporting and analysis, especially when determining the end of a specific business period.", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "month_name": {"name": "month_name", "description": "This column contains the name of the month for the given date. It provides a more human-readable format for dates, making it easier for business users to understand and interpret the data.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "year_month": {"name": "year_month", "description": "This column represents the year and month of the working day in the format 'YYYY-MM'. It is useful for aggregating data on a monthly basis.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "year_quarter": {"name": "year_quarter", "description": "This column represents the year and quarter of the working day in the format 'YYYY-Q'. It is useful for aggregating data on a quarterly basis.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "year": {"name": "year", "description": "This column represents the year of the working day. It is useful for aggregating data on an annual basis.", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "month": {"name": "month", "description": "This column represents the month of the year in numerical format (1-12), where 1 corresponds to January and 12 corresponds to December. It is useful for monthly trend analysis and comparisons.", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "month_day": {"name": "month_day", "description": "This column represents the specific day of the month. It is a combination of the month and the day, formatted as 'MM-DD'. This can be used to identify specific days for detailed daily analysis.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "day_of_week": {"name": "day_of_week", "description": "This column represents the day of the week, provided as a string (e.g., 'Monday', 'Tuesday', etc.). This can be used to analyze weekly trends or patterns, such as identifying the busiest or slowest days of the week.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "period": {"name": "period", "description": "This column represents the specific time period for which the data is relevant. It could be a specific day, week, month, or year. This information is crucial for understanding the temporal context of the data.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "period_code": {"name": "period_code", "description": "This column contains a unique code associated with each period. This code is used for internal tracking and data management purposes. It allows for efficient querying and sorting of data based on the time period.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "promotion": {"name": "promotion", "description": "This column indicates whether a promotion was active during the specified period. It provides insights into the marketing activities of the company and can be used to analyze the impact of promotions on business performance.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/dimensions/fct__working_days.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dimensions"}, "created_at": 1732268180.2902873, "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`fct__working_days`", "raw_code": "{{\n  config(\n    materialized = 'view',\n    )\n}}\n\nselect\n    {{dbt_utils.generate_surrogate_key(['b.branch_id', 'c.date'])}} as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    case when date_diff(c.date,b.opening_day,day) <= 10 then 'Khai tr\u01b0\u01a1ng' else p.promotion end as promotion,\nfrom {{ ref(\"dim__branches\") }} b\nleft join {{ ref(\"calendar\") }} c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join {{ ref(\"promotions\") }} p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel not in ('Kho & CH kh\u00e1c Kiotviet',\"\u0110i\u1ec3m x\u1ea3\")\nand c.date <= current_date()", "language": "sql", "refs": [{"name": "dim__branches", "package": null, "version": null}, {"name": "calendar", "package": null, "version": null}, {"name": "promotions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.calendar", "seed.sado_analytics_services.promotions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/dimensions/fct__working_days.sql", "compiled": true, "compiled_code": "\n\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    case when date_diff(c.date,b.opening_day,day) <= 10 then 'Khai tr\u01b0\u01a1ng' else p.promotion end as promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel not in ('Kho & CH kh\u00e1c Kiotviet',\"\u0110i\u1ec3m x\u1ea3\")\nand c.date <= current_date()", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__sms_campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod_dimensions", "name": "dim__sms_campaigns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/dimensions/dim__sms_campaigns.sql", "original_file_path": "models/marts/dimensions/dim__sms_campaigns.sql", "unique_id": "model.sado_analytics_services.dim__sms_campaigns", "fqn": ["sado_analytics_services", "marts", "dimensions", "dim__sms_campaigns"], "alias": "dim__sms_campaigns", "checksum": {"name": "sha256", "checksum": "b84180e75d6bcee3d86419e65824a292c5bf20e23876173aa08ee28ddd6cfbc1"}, "config": {"enabled": true, "alias": null, "schema": "dimensions", "database": null, "tags": ["view", "dimension", "sms", "daily"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "sms", "daily"], "description": "", "columns": {"campaign": {"name": "campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "start_date": {"name": "start_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "end_date": {"name": "end_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "audience": {"name": "audience", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "sms_type": {"name": "sms_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "sms_id": {"name": "sms_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/dimensions/dim__sms_campaigns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "dimensions", "tags": ["view", "dimension", "sms", "daily"]}, "created_at": 1732268180.2763815, "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__sms_campaigns`", "raw_code": "{{\n  config(\n    tags=['view','dimension','sms','daily']\n    )\n}}\n\nSELECT\n    DISTINCT campaign,\n    date(start_date) start_date,\n    date(end_date) end_date,\n    audience,\n    sms_type,\n    sms_id\nFROM\n    {{ ref('stg_esms__sent_data') }}", "language": "sql", "refs": [{"name": "stg_esms__sent_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_esms__sent_data"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/dimensions/dim__sms_campaigns.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    DISTINCT campaign,\n    date(start_date) start_date,\n    date(end_date) end_date,\n    audience,\n    sms_type,\n    sms_id\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__provinces": {"database": "agile-scheme-394814", "schema": "dbt_prod_dimensions", "name": "dim__provinces", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/dimensions/dim__provinces.sql", "original_file_path": "models/marts/dimensions/dim__provinces.sql", "unique_id": "model.sado_analytics_services.dim__provinces", "fqn": ["sado_analytics_services", "marts", "dimensions", "dim__provinces"], "alias": "dim__provinces", "checksum": {"name": "sha256", "checksum": "9621f9b1ed9625b3432493dc60d7da91e8de1c0aee974a337f63db6bb1b0151c"}, "config": {"enabled": true, "alias": null, "schema": "dimensions", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"province": {"name": "province", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province_code": {"name": "province_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "country_code": {"name": "country_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region_code": {"name": "region_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/dimensions/dim__provinces.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "dimensions"}, "created_at": 1732268180.2619402, "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__provinces`", "raw_code": "{{\n  config(\n    materialized = 'view',\n    )\n}}\nselect * from {{ ref('provinces') }}", "language": "sql", "refs": [{"name": "provinces", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["seed.sado_analytics_services.provinces"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/dimensions/dim__provinces.sql", "compiled": true, "compiled_code": "\nselect * from `agile-scheme-394814`.`dbt_prod`.`provinces`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.dim__inventory_items": {"database": "agile-scheme-394814", "schema": "dbt_prod_dimensions", "name": "dim__inventory_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/dimensions/dim__inventory_items.sql", "original_file_path": "models/marts/dimensions/dim__inventory_items.sql", "unique_id": "model.sado_analytics_services.dim__inventory_items", "fqn": ["sado_analytics_services", "marts", "dimensions", "dim__inventory_items"], "alias": "dim__inventory_items", "checksum": {"name": "sha256", "checksum": "26947a19ae3013d947bc599e3f2fdc5afd7dc1ddb6a9782199c91e4c994b3129"}, "config": {"enabled": true, "alias": null, "schema": "dimensions", "database": null, "tags": ["table", "dimension", "daily"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "dimension", "daily"], "description": "The 'dim__inventory_items' model is a comprehensive view of the inventory items, combining data from kiotviet and nhanhvn. This model excludes items from the 'NGUY\u00caN PH\u1ee4 LI\u1ec6U' product line and 'Combo' type.", "columns": {"extended_code": {"name": "extended_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "product_code": {"name": "product_code", "description": "This is a unique identifier for each product. It is used to track and manage inventory across different systems.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "product_name": {"name": "product_name", "description": "This is the name of the product as it appears in the inventory. It is used for easy identification of products and is usually descriptive of the product's features or uses.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "product_design_code": {"name": "product_design_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "class_name": {"name": "class_name", "description": "This column represents the name of the product class. It is a categorical variable that helps in grouping similar types of products together. This can be useful for inventory management and product categorization.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "sub_productline": {"name": "sub_productline", "description": "This column represents the subcategory within a product line. It provides a more granular level of product categorization, allowing for more specific product identification and management.", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_sub_product_line": {"label": "Sub Productline", "type": "string", "sql": "coalesce(${TABLE}.sub_productline, 'Ch\u01b0a ph\u00e2n lo\u1ea1i')"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "productline": {"name": "productline", "description": "This column represents the main product line or category. It is a broad classification of the product, which helps in understanding the overall product assortment and aids in strategic decision making related to product management.", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_productline": {"label": "Productline", "type": "string", "sql": "coalesce(${TABLE}.productline, 'Ch\u01b0a ph\u00e2n lo\u1ea1i')"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ads_product_mapping": {"name": "ads_product_mapping", "description": "This column contains the mapping of the product with the advertisements. It helps in tracking the performance of the product in different ad campaigns and understanding the impact of advertising on product sales.", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_ads_product_mapping": {"label": "ads product mapping", "type": "string", "sql": "coalesce(${TABLE}.ads_product_mapping, \"CH\u01afA PH\u00c2N LO\u1ea0I\")"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "This column represents the category of the product. The category can be used to compare similar products and understand market trends.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "kiotviet_product_id": {"name": "kiotviet_product_id", "description": "This is a unique identifier for each product in the KiotViet system. ", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "nhanhvn_product_id": {"name": "nhanhvn_product_id", "description": "This is a unique identifier for each product in the Nhanh.vn system. ", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "class_code": {"name": "class_code", "description": "This is a code that categorizes products into different classes. It is used for organizing products and can be helpful in understanding the product's nature or its place within the overall product range.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "category_name": {"name": "category_name", "description": "", "meta": {"dimension": {"type": "string"}, "additional_dimensions": {"d_category_name": {"type": "string", "sql": "coalesce(${TABLE}.category_name, \"CH\u01afA PH\u00c2N LO\u1ea0I\")", "label": "Category Name"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "product_group": {"name": "product_group", "description": "This column represents the group to which the product belongs. It is a broader classification of the product, which helps in categorizing similar products under one umbrella for better management and analysis.", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_product_group": {"label": "Product group", "type": "string", "sql": "coalesce(${TABLE}.product_group, \"CH\u01afA PH\u00c2N LO\u1ea0I\")"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_season": {"type": "string", "sql": "case \n  when ${TABLE}.season = 'XU\u00c2N H\u00c8' then '3.XU\u00c2N H\u00c8' \n  when ${TABLE}.season = 'THU \u0110\u00d4NG' then '1.THU \u0110\u00d4NG' \n  when ${TABLE}.season = 'QUANH N\u0102M' then '2.QUANH N\u0102M' \n  else coalesce(${TABLE}.season, \"CH\u01afA PH\u00c2N LO\u1ea0I\") end", "label": "Seasonal"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "year": {"name": "year", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_year": {"type": "string", "sql": "case when ${TABLE}.year not in ('24','23') then 'C\u0169' else coalesce(${TABLE}.year,'C\u0169') end", "label": "Year"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "color_code": {"name": "color_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "size_code": {"name": "size_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "form_code": {"name": "form_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "weaving_method_code": {"name": "weaving_method_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/dimensions/dim__inventory_items.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "dimensions", "tags": ["table", "dimension", "daily"]}, "created_at": 1732268180.3041768, "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_items`", "raw_code": "{{\n  config(\n    tags=['table','dimension','daily']\n    )\n}}\n\nWITH kiotviet_products AS (\n    SELECT\n        kiot.product_id AS kiotviet_product_id,\n        kiot.product_name,\n        kiot.product_code,\n        kiot.product_code_prefix,\n        kiot.extended_code,\n\n        kiot.product_design_code,\n        kiot.class_name,\n\n        kiot.category,\n        kiot.sub_productline,\n        kiot.productline,\n        kiot.product_group,\n\n        kiot.ads_product_mapping,\n        kiot.year,\n        kiot.color_code,\n        kiot.size_code,\n        kiot.form_code,\n        kiot.weaving_method_code,\n    FROM\n        {{ ref(\"stg_kiotviet__products\") }}\n        kiot\n    WHERE\n        kiot.productline NOT IN ('NGUY\u00caN PH\u1ee4 LI\u1ec6U','NPL 2023','DANH M\u1ee4C V\u1eacN CHUY\u1ec2N')\n        {# AND kiot.type NOT IN ('Combo') #}\n),\nnhanhvn__products AS (\n    SELECT\n        product_id AS nhanhvn_product_id,\n        product_name,\n        product_code,\n        product_design_code,\n        category_name,\n        sub_productline,\n        productline,\n        ads_product_mapping\n    FROM\n        (\n            {{ dbt_utils.deduplicate(relation=ref(\"stg_nhanhvn__products\"),\n                partition_by = 'product_code',\n                order_by = 'product_id desc') }}\n        )\n    WHERE 1=1\n        {# and type_name NOT IN ('Combo') #}\n        and product_code is not null\n),\nitems as (\nSELECT\n    coalesce(p1.extended_code,p2.product_code) AS extended_code,\n    coalesce(p1.product_code,p2.product_code) AS product_code,\n    coalesce(p1.product_name,p2.product_name) AS product_name,\n    coalesce(p1.product_design_code,p2.product_design_code) AS product_design_code,\n    p1.class_name,\n    coalesce(p1.sub_productline,p2.sub_productline) as sub_productline,\n    coalesce(p1.productline,p2.productline) as productline,\n    {# CASE WHEN regexp_contains(lower(coalesce(p1.productline,p2.productline)),r'thu \u0111\u00f4ng') THEN 'THU \u0110\u00d4NG'\n    WHEN regexp_contains(lower(coalesce(p1.productline,p2.productline)),r'xu\u00e2n h\u00e8') THEN 'XU\u00c2N H\u00c8'\n    when coalesce(p1.productline,p2.productline) is not null then 'Quanh n\u0103m' \n    else 'Ch\u01b0a ph\u00e2n lo\u1ea1i' END AS product_group, #}\n    {# p1.product_group, #}\n    coalesce(p1.ads_product_mapping,p2.ads_product_mapping) as ads_product_mapping,\n    coalesce(p1.category,p2.category_name) AS category,\n    p1.kiotviet_product_id,\n    p2.nhanhvn_product_id,\n    p1.year,\n    p1.color_code,\n    p1.size_code,\n    p1.form_code,\n    p1.weaving_method_code,\nFROM\n    kiotviet_products p1 \n    full OUTER JOIN nhanhvn__products p2\n    ON p1.extended_code = p2.product_code\n    where (p1.productline not in ('\u0110\u1ed2NG PH\u1ee4C') or p1.productline is null)\n)\n\nselect \nit.*,\nregexp_extract(it.product_code,r'(?:Y|0)?([B0]\\w{3}[0-9S]{3,5})') class_code,\nupper(p.category_name) category_name,\nupper(p.product_group) product_group,\nupper(p.season) season,\nfrom items it \nleft join {{ ref(\"int__product_group\") }} p \non it.ads_product_mapping =  p.product_group_code", "language": "sql", "refs": [{"name": "stg_kiotviet__products", "package": null, "version": null}, {"name": "stg_nhanhvn__products", "package": null, "version": null}, {"name": "int__product_group", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": ["model.sado_analytics_services.stg_kiotviet__products", "model.sado_analytics_services.stg_nhanhvn__products", "model.sado_analytics_services.int__product_group"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/dimensions/dim__inventory_items.sql", "compiled": true, "compiled_code": "\n\nWITH  __dbt__cte__int__product_group as (\nselect distinct \n    category_name,\n    lower(product_group_code) product_group_code,\n    product_group,\n    season,\n    from \n    `agile-scheme-394814`.`dbt_prod`.`stg__ad_product_categories`\n), kiotviet_products AS (\n    SELECT\n        kiot.product_id AS kiotviet_product_id,\n        kiot.product_name,\n        kiot.product_code,\n        kiot.product_code_prefix,\n        kiot.extended_code,\n\n        kiot.product_design_code,\n        kiot.class_name,\n\n        kiot.category,\n        kiot.sub_productline,\n        kiot.productline,\n        kiot.product_group,\n\n        kiot.ads_product_mapping,\n        kiot.year,\n        kiot.color_code,\n        kiot.size_code,\n        kiot.form_code,\n        kiot.weaving_method_code,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`\n        kiot\n    WHERE\n        kiot.productline NOT IN ('NGUY\u00caN PH\u1ee4 LI\u1ec6U','NPL 2023','DANH M\u1ee4C V\u1eacN CHUY\u1ec2N')\n        \n),\nnhanhvn__products AS (\n    SELECT\n        product_id AS nhanhvn_product_id,\n        product_name,\n        product_code,\n        product_design_code,\n        category_name,\n        sub_productline,\n        productline,\n        ads_product_mapping\n    FROM\n        (\n            select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by product_id desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__products` original\n        group by product_code\n    )\n        )\n    WHERE 1=1\n        \n        and product_code is not null\n),\nitems as (\nSELECT\n    coalesce(p1.extended_code,p2.product_code) AS extended_code,\n    coalesce(p1.product_code,p2.product_code) AS product_code,\n    coalesce(p1.product_name,p2.product_name) AS product_name,\n    coalesce(p1.product_design_code,p2.product_design_code) AS product_design_code,\n    p1.class_name,\n    coalesce(p1.sub_productline,p2.sub_productline) as sub_productline,\n    coalesce(p1.productline,p2.productline) as productline,\n    \n    \n    coalesce(p1.ads_product_mapping,p2.ads_product_mapping) as ads_product_mapping,\n    coalesce(p1.category,p2.category_name) AS category,\n    p1.kiotviet_product_id,\n    p2.nhanhvn_product_id,\n    p1.year,\n    p1.color_code,\n    p1.size_code,\n    p1.form_code,\n    p1.weaving_method_code,\nFROM\n    kiotviet_products p1 \n    full OUTER JOIN nhanhvn__products p2\n    ON p1.extended_code = p2.product_code\n    where (p1.productline not in ('\u0110\u1ed2NG PH\u1ee4C') or p1.productline is null)\n)\n\nselect \nit.*,\nregexp_extract(it.product_code,r'(?:Y|0)?([B0]\\w{3}[0-9S]{3,5})') class_code,\nupper(p.category_name) category_name,\nupper(p.product_group) product_group,\nupper(p.season) season,\nfrom items it \nleft join __dbt__cte__int__product_group p \non it.ads_product_mapping =  p.product_group_code", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sado_analytics_services.int__product_group", "sql": " __dbt__cte__int__product_group as (\nselect distinct \n    category_name,\n    lower(product_group_code) product_group_code,\n    product_group,\n    season,\n    from \n    `agile-scheme-394814`.`dbt_prod`.`stg__ad_product_categories`\n)"}], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.rfm_movement": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "rfm_movement", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/rfm_movement.sql", "original_file_path": "models/marts/sales/rfm_movement.sql", "unique_id": "model.sado_analytics_services.rfm_movement", "fqn": ["sado_analytics_services", "marts", "sales", "rfm_movement"], "alias": "rfm_movement", "checksum": {"name": "sha256", "checksum": "58539f313626c129bca012be094a92642fb47f7c5c7e9241659b9e7279316440"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["incremental", "table", "fact", "kiotviet", "daily"], "meta": {"joins": [{"join": "fct__customers_attributes", "sql_on": "${rfm_movement.customer_id} = ${fct__customers_attributes.customer_id}", "always": true, "type": "inner"}, {"join": "dim__branches", "alias": "create_branch", "sql_on": "${fct__customers_attributes.registered_branch_id} = ${create_branch.branch_id}"}, {"join": "dim__branches", "alias": "last_purchase_branch", "sql_on": "${fct__customers_attributes.last_purchase_branch_id} = ${last_purchase_branch.branch_id}"}, {"join": "fct__customers", "sql_on": "${rfm_movement.customer_id} = ${fct__customers.universal_customer_id}"}, {"join": "calendar", "sql_on": "${rfm_movement.start_of_month} = ${calendar.date}"}, {"join": "calendar", "alias": "last_calendar", "sql_on": "${fct__customers_attributes.last_purchase_date} = ${last_calendar.date}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["customer_id", "start_of_month"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "start_of_month", "data_type": "date", "granularity": "month"}, "partition_expiration_days": 720, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "table", "fact", "kiotviet", "daily"], "description": "rfm segmentation result", "columns": {"customer_id": {"name": "customer_id", "description": "", "meta": {"metrics": {"m_num_customers": {"type": "count_distinct", "label": "Total customers", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}, "m_new_customers": {"type": "count_distinct", "label": "New customers", "sql": "case when ${recency_type} = 'Kh\u00e1ch m\u1edbi' then ${customer_id} end", "group_label": "Customer Metrics"}, "m_new_customers_pct": {"type": "number", "format": "percent", "label": "New customers (%)", "sql": "safe_divide(${m_new_customers} , ${m_num_customers})", "round": 2}, "m_old_customers": {"type": "count_distinct", "label": "Returning customers", "sql": "case when ${recency_type} <> 'Kh\u00e1ch m\u1edbi' then ${customer_id} end", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}, "m_customer_base_growth": {"type": "number", "label": "Customer base growth", "sql": "safe_divide(${m_new_customers},${m_old_customers})", "format": "percent", "round": 2}, "m_returned_customers": {"type": "count_distinct", "label": "Returned customers", "sql": "case when ${recency_type} <> 'Kh\u00e1ch m\u1edbi' and ${start_of_month}=date_trunc(${last_purchase},month) then ${customer_id} end", "group_label": "Customer Metrics"}, "m_returned_customers_pct": {"type": "number", "format": "percent", "label": "Returned customers (%)", "sql": "safe_divide(${m_returned_customers},${m_old_customers})", "round": 2, "group_label": "Customer Metrics"}, "m_purchasing_customers": {"type": "number", "label": "Purchasing customers", "sql": "${m_returned_customers} + ${m_new_customers}", "group_label": "Customer Metrics"}, "m_new_customer_over_purchasing_total": {"type": "number", "label": "New customers / Purchasing total", "sql": "safe_divide(${m_new_customers},${m_purchasing_customers})", "format": "percent", "round": 2, "group_label": "Customer Metrics"}, "m_returned_customer_over_purchasing_total": {"type": "number", "label": "Returned customers / Purchasing total", "sql": "safe_divide(${m_returned_customers},${m_purchasing_customers})", "format": "percent", "round": 2, "group_label": "Customer Metrics"}, "m_lost_customers": {"type": "count_distinct", "label": "Lost customers", "group_label": "Customer Metrics", "filters": [{"segment": ["Lost customers", "Hibernating customers"]}]}, "m_lost_pct": {"type": "number", "label": "Lost customers (%)", "sql": "safe_divide(${m_lost_customers},${m_old_customers})", "format": "percent", "round": 2, "group_label": "Customer Metrics"}, "m_lost_over_new_acquired_ratio": {"type": "number", "label": "Lost customers / New acquired ratio", "sql": "safe_divide(${m_new_lost_customers},${m_new_customers})", "round": 2, "group_label": "Customer Metrics"}, "m_new_lost_customers": {"type": "count_distinct", "label": "New lost customers", "sql": "case when ${segment} in ('Lost customers','Hibernating customers') and previous_segment not in ('Lost customers','Hibernating customers') then ${customer_id} end", "group_label": "Customer Metrics"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_purchase_branch": {"name": "last_purchase_branch", "description": "lastest store customer made purchase", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_of_month": {"name": "start_of_month", "description": "month of rfm calculation", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_purchase": {"name": "first_purchase", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_purchase": {"name": "last_purchase", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recency": {"name": "recency", "description": "no. days since last purchase", "meta": {"metrics": {"m_med_recency": {"type": "median", "label": "Med of Recency", "group_label": "Customer Metrics", "round": 1}, "m_avg_recency": {"type": "average", "label": "AVG of Recency", "group_label": "Customer Metrics", "round": 1}, "m_max_recency": {"type": "max", "label": "Max of Recency", "group_label": "Customer Metrics", "round": 1}, "m_min_recency": {"type": "min", "label": "Min of Recency", "group_label": "Customer Metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monetary": {"name": "monetary", "description": "total monetary value since created", "meta": {"metrics": {"m_monetary": {"type": "average", "label": "AVG of Monetary", "group_label": "Customer Metrics", "compact": "thousands", "round": 0}, "m_total_monetary": {"type": "sum", "label": "Total Monetary", "group_label": "Customer Metrics", "compact": "billions", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "frequency": {"name": "frequency", "description": "times of purchasing", "meta": {"metrics": {"m_freq": {"type": "average", "label": "AVG of Freq", "group_label": "Customer Metrics", "round": 1}}, "dimension": {"type": "number"}, "additional_dimensions": {"d_freq": {"type": "string", "label": "Frequency (Grouped)", "sql": "case ${frequency} when  1 then 'Mua 1 l\u1ea7n' when 2 then 'Mua 2 l\u1ea7n' when 3 then 'Mua 3 l\u1ea7n' else 'Mua tr\u00ean 3 l\u1ea7n' end"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recency_score": {"name": "recency_score", "description": "calculate by dividing customer base into 5 groups by quantile range of recency", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "frequency_score": {"name": "frequency_score", "description": "calculate by dividing customer base into 5 groups by quantile range of frequency", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "monetary_score": {"name": "monetary_score", "description": "calculate by dividing customer base into 5 groups by quantile range of monetary value", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "score_concat": {"name": "score_concat", "description": "rfm concatenated score", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "segment": {"name": "segment", "description": "group segmentation base on rfm score", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "recency_type": {"name": "recency_type", "description": "classify new and returning customers", "meta": {"dimension": {"type": "string"}, "additional_dimensions": {"d_recency_type": {"type": "string", "label": "Recency Type (modified)", "sql": "case when ${recency_type} = 'Kh\u00e1ch m\u1edbi' then ${recency_type} else 'Kh\u00e1ch quay l\u1ea1i' end"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "previous_segment": {"name": "previous_segment", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "fct__customers_attributes", "sql_on": "${rfm_movement.customer_id} = ${fct__customers_attributes.customer_id}", "always": true, "type": "inner"}, {"join": "dim__branches", "alias": "create_branch", "sql_on": "${fct__customers_attributes.registered_branch_id} = ${create_branch.branch_id}"}, {"join": "dim__branches", "alias": "last_purchase_branch", "sql_on": "${fct__customers_attributes.last_purchase_branch_id} = ${last_purchase_branch.branch_id}"}, {"join": "fct__customers", "sql_on": "${rfm_movement.customer_id} = ${fct__customers.universal_customer_id}"}, {"join": "calendar", "sql_on": "${rfm_movement.start_of_month} = ${calendar.date}"}, {"join": "calendar", "alias": "last_calendar", "sql_on": "${fct__customers_attributes.last_purchase_date} = ${last_calendar.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/rfm_movement.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "sales", "meta": {"joins": [{"join": "fct__customers_attributes", "sql_on": "${rfm_movement.customer_id} = ${fct__customers_attributes.customer_id}", "always": true, "type": "inner"}, {"join": "dim__branches", "alias": "create_branch", "sql_on": "${fct__customers_attributes.registered_branch_id} = ${create_branch.branch_id}"}, {"join": "dim__branches", "alias": "last_purchase_branch", "sql_on": "${fct__customers_attributes.last_purchase_branch_id} = ${last_purchase_branch.branch_id}"}, {"join": "fct__customers", "sql_on": "${rfm_movement.customer_id} = ${fct__customers.universal_customer_id}"}, {"join": "calendar", "sql_on": "${rfm_movement.start_of_month} = ${calendar.date}"}, {"join": "calendar", "alias": "last_calendar", "sql_on": "${fct__customers_attributes.last_purchase_date} = ${last_calendar.date}"}]}, "partition_by": {"field": "start_of_month", "data_type": "date", "granularity": "month"}, "incremental_strategy": "insert_overwrite", "unique_key": ["customer_id", "start_of_month"], "on_schema_change": "sync_all_columns", "partition_expiration_days": 720, "tags": ["incremental", "table", "fact", "kiotviet", "daily"]}, "created_at": 1732268180.3333588, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'start_of_month',\n  'data_type': 'date',\n  'granularity': 'month' },\n  incremental_strategy = 'insert_overwrite',\n  unique_key = ['customer_id', 'start_of_month'],\n  on_schema_change = 'sync_all_columns',\n  partition_expiration_days = 720,\n  tags = ['incremental','table', 'fact', 'kiotviet','daily']\n) }}\n\n{% set rfm_groups ={ \n  \"Champions\": ['555','554','544','545','454','455','445'],\n  \"Loyal\" :['543','444','435','355','354','345','344','335'],\n  \"Potential Loyalists\": ['553', '551', '552', '541', '542', '533', '532', '531', '452', '451', '442', '441', '431', '453', '433', '432', '423', '353', '352', '351', '342', '341', '333', '323'],\n  'Walk-in Customers' :['512', '511', '422', '421','412', '411', '311'],\n  'Promising' :['525', '524', '523', '522', '521', '515', '514', '513', '425', '424', '413', '414', '415', '315', '314', '313'],\n  'Need Attention' :['535', '534', '443', '434', '343', '334', '325', '324'],\n  'About To Sleep' :[ '331', '321', '312', '221', '213', '231', '241', '251'],\n  'At Risk' :[ '255', '254', '245', '244', '253', '252', '243', '242', '235', '234', '225', '224', '153', '152', '145', '143', '142', '135', '134', '133', '125', '124'],\n  'Cannot Lose Them' :[ '155', '154', '144', '214', '215', '115', '114', '113'],\n  'Hibernating customers' :[ '332', '322', '233', '232', '223', '222', '132', '123', '122', '212', '211'],\n  'Lost customers' :[ '111', '112', '121', '131', '141', '151'] \n} \n%}\nWITH calendar AS (\n\n  SELECT\n    DISTINCT start_of_month,\n  FROM\n    {{ ref('calendar') }}\n),\nsource AS (\n  SELECT\n    customer_id,\n    DATE(transaction_date) transaction_date,\n    DATE_TRUNC(DATE(transaction_date), MONTH) transaction_month,\n    SUM(total) total,\n    COUNT( DISTINCT CASE WHEN transaction_type = 'invoice' THEN DATE_TRUNC(transaction_date, DAY) END) num_transactions,\n  FROM\n    {{ ref('fct__transactions') }}\n  WHERE\n    customer_id IS NOT NULL\n    {# and total <> 0 #}\n  GROUP BY\n    1,\n    2,\n    3\n),\naggregated_and_cross_join AS (\n  SELECT\n    calendar.start_of_month,\n    source.customer_id,\n    SUM(CASE WHEN calendar.start_of_month = source.transaction_month THEN total END) total,\n    SUM(CASE WHEN calendar.start_of_month = source.transaction_month THEN num_transactions END) num_transactions,\n    MAX(CASE WHEN calendar.start_of_month = source.transaction_month THEN transaction_date END ) transaction_date\n  FROM\n    calendar\n    CROSS JOIN source\n  WHERE\n    1 = 1\n    AND calendar.start_of_month <= CURRENT_DATE()\n  GROUP BY\n    1,\n    2\n),\naggregated_cumulative AS (\n  SELECT\n    start_of_month,\n    customer_id,\n    MIN(transaction_date) over w3 AS first_purchase,\n    COALESCE(MAX(transaction_date) over w4, MAX(transaction_date) over w5) AS last_purchase,\n    coalesce(safe_divide(SUM(total) over w1,SUM(num_transactions) over w1),0) AS monetary,\n    COALESCE(SUM(num_transactions) over w1, 0) AS frequency,\n    date_diff(\n      COALESCE(MAX(transaction_date) over w2, case when LAST_DAY(start_of_month, MONTH) < current_date() then LAST_DAY(start_of_month, MONTH) else current_date() end  ),\n      COALESCE(MAX(transaction_date) over w4, MAX(transaction_date) over w5),\n      DAY) AS recency\n      FROM\n        aggregated_and_cross_join \n        window w1 AS (\n          PARTITION BY customer_id\n          ORDER BY\n            unix_date(LAST_DAY(start_of_month, MONTH)) asc RANGE BETWEEN 365 preceding\n            AND CURRENT ROW\n        ),\n        w2 AS (\n          PARTITION BY customer_id,\n          start_of_month\n          ORDER BY\n            unix_date(start_of_month) ASC RANGE BETWEEN unbounded preceding\n            AND 1 preceding\n        ),\n        w4 AS (\n          PARTITION BY customer_id,\n          start_of_month\n          ORDER BY\n            unix_date(start_of_month) ASC RANGE BETWEEN unbounded preceding\n            AND CURRENT ROW\n        ),\n        w5 AS (\n          PARTITION BY customer_id\n          ORDER BY\n            unix_date(start_of_month) ASC RANGE BETWEEN unbounded preceding\n            AND 1 preceding\n        ),\n        w3 AS (\n          PARTITION BY customer_id\n        )\n    ),\n    scoring AS (\n      SELECT\n        customer_id,\n        start_of_month,\n        first_purchase,\n        last_purchase,\n        recency,\n        monetary,\n        frequency,\n        NTILE(5) over (\n          PARTITION BY start_of_month\n          ORDER BY\n            recency DESC\n        ) AS recency_score,\n        CASE\n          WHEN frequency > 0 THEN NTILE(5) over (\n            PARTITION BY start_of_month\n            ,(\n              CASE\n                WHEN monetary > 0 THEN \"purchase\"\n                ELSE \"notpurchase\"\n              END\n            )\n            ORDER BY\n              frequency ASC\n          )\n          ELSE 1\n        END AS frequency_score,\n        CASE\n          WHEN monetary > 0 THEN NTILE(5) over (\n            PARTITION BY start_of_month\n            ,\n            (\n              CASE\n                WHEN monetary > 0 THEN \"purchase\"\n                ELSE \"notpurchase\"\n              END\n            )\n            ORDER BY\n              monetary ASC\n          )\n          ELSE 1\n        END AS monetary_score\n      FROM\n        aggregated_cumulative\n      WHERE\n        start_of_month >= DATE_TRUNC(\n          first_purchase,\n          MONTH\n        )\n    ),\n    last_branch AS (\n      SELECT\n        DISTINCT customer_id,\n        DATE(transaction_date) transaction_date,\n        DATE_TRUNC(DATE(transaction_date), MONTH) AS transaction_month,\n        FIRST_VALUE(branch_id) over (\n          PARTITION BY customer_id,\n          DATE_TRUNC(DATE(transaction_date), MONTH)\n          ORDER BY\n            transaction_date DESC rows BETWEEN unbounded preceding\n            AND unbounded following) AS last_purchase_branch,\n          FROM\n            {{ ref('fct__transactions') }}\n          WHERE\n            customer_id IS NOT NULL\n        ),\n      final as (\n        SELECT\n        DISTINCT scoring.*,\n        CONCAT(\n          recency_score,\n          frequency_score,\n          monetary_score\n        ) score_concat,\n        CASE\n        {%for key,values in rfm_groups.items() %}\n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('{{values | join(\"', '\")}}') then '{{key}}'\n          {%endfor%}\n        END AS segment,\n        CASE\n          WHEN DATE_TRUNC(first_purchase,MONTH) = start_of_month THEN \"Kh\u00e1ch m\u1edbi\"\n          WHEN recency > 360 THEN '>1Y n\u0103m ch\u01b0a quay l\u1ea1i'\n          WHEN recency > 180 THEN '6T-1Y ch\u01b0a quay l\u1ea1i'\n          WHEN recency > 90 THEN '3-6T ch\u01b0a quay l\u1ea1i'\n          WHEN recency > 31 THEN '1-3T ch\u01b0a quay l\u1ea1i'\n          ELSE \"Kh\u00e1ch quay l\u1ea1i\"\n        END AS recency_type,\n        last_branch.last_purchase_branch,\n      FROM\n        scoring\n        LEFT JOIN last_branch\n        ON scoring.customer_id = last_branch.customer_id\n        AND last_branch.transaction_month = scoring.start_of_month\n\n{% if is_incremental() %}\nWHERE\n  DATE(start_of_month) >= date_add(DATE(_dbt_max_partition), interval -1 month)\n{% endif %}\n),\nprevious as (\nselect * except(last_purchase_branch),\n{# last_purchase_branch, #}\nfirst_value(last_purchase_branch ignore nulls) over (\n          partition by customer_id \n          order by start_of_month desc \n          rows between current row and unbounded following) last_purchase_branch,\ncoalesce(lag(segment) over (partition by customer_id order by start_of_month asc),'First-time Purchaser') as previous_segment\nfrom final\n)\n\nselect * from previous \n{% if is_incremental() %}\nWHERE\n  DATE(start_of_month) >= DATE(_dbt_max_partition)\n{% endif %}", "language": "sql", "refs": [{"name": "calendar", "package": null, "version": null}, {"name": "fct__transactions", "package": null, "version": null}, {"name": "fct__transactions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.fct__transactions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/rfm_movement.sql", "compiled": true, "compiled_code": "\n\n\nWITH calendar AS (\n\n  SELECT\n    DISTINCT start_of_month,\n  FROM\n    `agile-scheme-394814`.`dbt_prod`.`calendar`\n),\nsource AS (\n  SELECT\n    customer_id,\n    DATE(transaction_date) transaction_date,\n    DATE_TRUNC(DATE(transaction_date), MONTH) transaction_month,\n    SUM(total) total,\n    COUNT( DISTINCT CASE WHEN transaction_type = 'invoice' THEN DATE_TRUNC(transaction_date, DAY) END) num_transactions,\n  FROM\n    `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n  WHERE\n    customer_id IS NOT NULL\n    \n  GROUP BY\n    1,\n    2,\n    3\n),\naggregated_and_cross_join AS (\n  SELECT\n    calendar.start_of_month,\n    source.customer_id,\n    SUM(CASE WHEN calendar.start_of_month = source.transaction_month THEN total END) total,\n    SUM(CASE WHEN calendar.start_of_month = source.transaction_month THEN num_transactions END) num_transactions,\n    MAX(CASE WHEN calendar.start_of_month = source.transaction_month THEN transaction_date END ) transaction_date\n  FROM\n    calendar\n    CROSS JOIN source\n  WHERE\n    1 = 1\n    AND calendar.start_of_month <= CURRENT_DATE()\n  GROUP BY\n    1,\n    2\n),\naggregated_cumulative AS (\n  SELECT\n    start_of_month,\n    customer_id,\n    MIN(transaction_date) over w3 AS first_purchase,\n    COALESCE(MAX(transaction_date) over w4, MAX(transaction_date) over w5) AS last_purchase,\n    coalesce(safe_divide(SUM(total) over w1,SUM(num_transactions) over w1),0) AS monetary,\n    COALESCE(SUM(num_transactions) over w1, 0) AS frequency,\n    date_diff(\n      COALESCE(MAX(transaction_date) over w2, case when LAST_DAY(start_of_month, MONTH) < current_date() then LAST_DAY(start_of_month, MONTH) else current_date() end  ),\n      COALESCE(MAX(transaction_date) over w4, MAX(transaction_date) over w5),\n      DAY) AS recency\n      FROM\n        aggregated_and_cross_join \n        window w1 AS (\n          PARTITION BY customer_id\n          ORDER BY\n            unix_date(LAST_DAY(start_of_month, MONTH)) asc RANGE BETWEEN 365 preceding\n            AND CURRENT ROW\n        ),\n        w2 AS (\n          PARTITION BY customer_id,\n          start_of_month\n          ORDER BY\n            unix_date(start_of_month) ASC RANGE BETWEEN unbounded preceding\n            AND 1 preceding\n        ),\n        w4 AS (\n          PARTITION BY customer_id,\n          start_of_month\n          ORDER BY\n            unix_date(start_of_month) ASC RANGE BETWEEN unbounded preceding\n            AND CURRENT ROW\n        ),\n        w5 AS (\n          PARTITION BY customer_id\n          ORDER BY\n            unix_date(start_of_month) ASC RANGE BETWEEN unbounded preceding\n            AND 1 preceding\n        ),\n        w3 AS (\n          PARTITION BY customer_id\n        )\n    ),\n    scoring AS (\n      SELECT\n        customer_id,\n        start_of_month,\n        first_purchase,\n        last_purchase,\n        recency,\n        monetary,\n        frequency,\n        NTILE(5) over (\n          PARTITION BY start_of_month\n          ORDER BY\n            recency DESC\n        ) AS recency_score,\n        CASE\n          WHEN frequency > 0 THEN NTILE(5) over (\n            PARTITION BY start_of_month\n            ,(\n              CASE\n                WHEN monetary > 0 THEN \"purchase\"\n                ELSE \"notpurchase\"\n              END\n            )\n            ORDER BY\n              frequency ASC\n          )\n          ELSE 1\n        END AS frequency_score,\n        CASE\n          WHEN monetary > 0 THEN NTILE(5) over (\n            PARTITION BY start_of_month\n            ,\n            (\n              CASE\n                WHEN monetary > 0 THEN \"purchase\"\n                ELSE \"notpurchase\"\n              END\n            )\n            ORDER BY\n              monetary ASC\n          )\n          ELSE 1\n        END AS monetary_score\n      FROM\n        aggregated_cumulative\n      WHERE\n        start_of_month >= DATE_TRUNC(\n          first_purchase,\n          MONTH\n        )\n    ),\n    last_branch AS (\n      SELECT\n        DISTINCT customer_id,\n        DATE(transaction_date) transaction_date,\n        DATE_TRUNC(DATE(transaction_date), MONTH) AS transaction_month,\n        FIRST_VALUE(branch_id) over (\n          PARTITION BY customer_id,\n          DATE_TRUNC(DATE(transaction_date), MONTH)\n          ORDER BY\n            transaction_date DESC rows BETWEEN unbounded preceding\n            AND unbounded following) AS last_purchase_branch,\n          FROM\n            `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n          WHERE\n            customer_id IS NOT NULL\n        ),\n      final as (\n        SELECT\n        DISTINCT scoring.*,\n        CONCAT(\n          recency_score,\n          frequency_score,\n          monetary_score\n        ) score_concat,\n        CASE\n        \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('555', '554', '544', '545', '454', '455', '445') then 'Champions'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('543', '444', '435', '355', '354', '345', '344', '335') then 'Loyal'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('553', '551', '552', '541', '542', '533', '532', '531', '452', '451', '442', '441', '431', '453', '433', '432', '423', '353', '352', '351', '342', '341', '333', '323') then 'Potential Loyalists'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('512', '511', '422', '421', '412', '411', '311') then 'Walk-in Customers'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('525', '524', '523', '522', '521', '515', '514', '513', '425', '424', '413', '414', '415', '315', '314', '313') then 'Promising'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('535', '534', '443', '434', '343', '334', '325', '324') then 'Need Attention'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('331', '321', '312', '221', '213', '231', '241', '251') then 'About To Sleep'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('255', '254', '245', '244', '253', '252', '243', '242', '235', '234', '225', '224', '153', '152', '145', '143', '142', '135', '134', '133', '125', '124') then 'At Risk'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('155', '154', '144', '214', '215', '115', '114', '113') then 'Cannot Lose Them'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('332', '322', '233', '232', '223', '222', '132', '123', '122', '212', '211') then 'Hibernating customers'\n          \n          WHEN CONCAT(\n            recency_score,\n            frequency_score,\n            monetary_score\n          ) in ('111', '112', '121', '131', '141', '151') then 'Lost customers'\n          \n        END AS segment,\n        CASE\n          WHEN DATE_TRUNC(first_purchase,MONTH) = start_of_month THEN \"Kh\u00e1ch m\u1edbi\"\n          WHEN recency > 360 THEN '>1Y n\u0103m ch\u01b0a quay l\u1ea1i'\n          WHEN recency > 180 THEN '6T-1Y ch\u01b0a quay l\u1ea1i'\n          WHEN recency > 90 THEN '3-6T ch\u01b0a quay l\u1ea1i'\n          WHEN recency > 31 THEN '1-3T ch\u01b0a quay l\u1ea1i'\n          ELSE \"Kh\u00e1ch quay l\u1ea1i\"\n        END AS recency_type,\n        last_branch.last_purchase_branch,\n      FROM\n        scoring\n        LEFT JOIN last_branch\n        ON scoring.customer_id = last_branch.customer_id\n        AND last_branch.transaction_month = scoring.start_of_month\n\n\nWHERE\n  DATE(start_of_month) >= date_add(DATE(_dbt_max_partition), interval -1 month)\n\n),\nprevious as (\nselect * except(last_purchase_branch),\n\nfirst_value(last_purchase_branch ignore nulls) over (\n          partition by customer_id \n          order by start_of_month desc \n          rows between current row and unbounded following) last_purchase_branch,\ncoalesce(lag(segment) over (partition by customer_id order by start_of_month asc),'First-time Purchaser') as previous_segment\nfrom final\n)\n\nselect * from previous \n\nWHERE\n  DATE(start_of_month) >= DATE(_dbt_max_partition)\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__revenue_items": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "fct__revenue_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/fct__revenue_items.sql", "original_file_path": "models/marts/sales/fct__revenue_items.sql", "unique_id": "model.sado_analytics_services.fct__revenue_items", "fqn": ["sado_analytics_services", "marts", "sales", "fct__revenue_items"], "alias": "fct__revenue_items", "checksum": {"name": "sha256", "checksum": "f08a1a86defa0cbb0d91424b27f01fc00c086d03b2e0fbdcb6b0454c7c368ba2"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["incremental", "hourly", "fact", "kiotviet", "nhanhvn"], "meta": {"joins": [{"join": "dim__inventory_items", "sql_on": "${dim__inventory_items.extended_code} = ${fct__revenue_items.product_code} "}, {"join": "fct__working_days", "sql_on": "${fct__working_days.date} = ${fct__revenue_items.transaction_date} and ${fct__working_days.branch_id} = ${fct__revenue_items.branch_id}", "always": true}]}, "group": null, "materialized": "table", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "fact", "kiotviet", "nhanhvn"], "description": "The fct__revenue_items model merges transaction data from the kiotviet and nhanhvn sources, providing details such as branch, customer, product, transaction date, type, source, price, quantity, discount, and subtotal.", "columns": {"branch_id": {"name": "branch_id", "description": "This is a numeric identifier that represents the specific branch where the transaction took place. It is crucial for understanding the performance of different branches and identifying areas for improvement.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "This is a big numeric identifier that represents a unique customer. Can be useful for customer segmentation and personalized marketing.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "This is a string identifier that represents a unique product. It is used to track the sales performance of individual products, which can be useful for inventory management and sales forecasting.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "This column represents the date when the transaction occurred. This information can be useful for analyzing sales trends over time or comparing sales performance across different periods.", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "This column indicates the type of transaction that took place. This information can be useful for understanding the nature of transactions and identifying patterns in sales and returns.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "The 'price' column represents the original price of the product sold in a transaction. This is the price before any discounts are applied.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "The 'quantity' column indicates the number of units of a product sold in a single transaction. This can be used to understand the volume of products sold.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_units_sold": {"type": "sum", "label": "Units Sold", "group_label": "Sales Metrics", "round": 0, "filters": [{"transaction_type": "invoice"}, {"subtotal": "> 0"}, {"transaction_code": "!%HDD%"}]}, "m_units_gift": {"type": "sum", "label": "Units Gift", "group_label": "Sales Metrics", "round": 0, "filters": [{"transaction_type": "invoice"}, {"subtotal": "0"}]}, "m_units_exchanged": {"type": "sum", "label": "Units Exchanged", "group_label": "Sales Metrics", "round": 0, "filters": [{"transaction_code": "%HDD%"}]}, "m_units_returned": {"type": "sum", "label": "Units Returned", "group_label": "Sales Metrics", "round": 0, "filters": [{"transaction_type": "return"}]}, "m_units_returned_pct": {"type": "number", "label": "Units Returned Pct", "sql": "safe_divide(${m_units_returned} , ${m_units_sold})", "format": "percent", "round": 2, "group_label": "Sales Metrics"}, "m_net_item_sold": {"type": "sum", "label": "Net Items Sold", "group_label": "Sales Metrics", "round": 0, "filters": [{"subtotal": "!0"}]}}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "The 'discount' column shows the total discount applied to the product in a transaction. This is useful for understanding the promotional activities and their impact on sales.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_item_discount": {"type": "sum", "label": "Item Discount Value", "group_label": "Sales Metrics", "compact": "millions", "round": 1, "filters": [{"transaction_type": "invoice"}]}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "The 'subtotal' column represents the total amount of revenue generated from a particular transaction after discounts are applied. This information is crucial for understanding the gross revenue generated from each transaction.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_sold_value": {"type": "sum", "label": "Total Sold Value", "group_label": "Sales Metrics", "compact": "millions", "round": 1, "filters": [{"transaction_type": "invoice"}]}, "m_total_retuned_value": {"type": "sum", "label": "Total Returned Value", "group_label": "Sales Metrics", "compact": "millions", "round": 1, "filters": [{"transaction_type": "return"}]}, "m_avg_sold_price": {"type": "number", "label": "Avg Sold Price", "sql": "safe_divide(${m_total_sold_value} , ${m_units_sold})", "compact": "thousands", "round": 2, "group_label": "Sales Metrics"}, "m_item_revenue": {"type": "sum", "label": "Item Revenue", "group_label": "Sales Metrics", "compact": "millions", "round": 1}, "m_actual_revenue": {"type": "number", "label": "Revenue", "group_label": "Sales Metrics", "compact": "millions", "round": 1, "sql": "${m_item_revenue} - ${m_order_discount}"}, "m_revenue_psd": {"type": "number", "sql": "safe_divide(${m_actual_revenue} , ${fct__working_days.m_operating_days})", "round": 1, "compact": "millions", "label": "Revenue Per Day", "group_label": "Sales Metrics"}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "revenue_item_id": {"name": "revenue_item_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_id": {"name": "transaction_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_transactions": {"type": "count_distinct", "label": "No. Transactions", "group_label": "Sales Metrics", "round": 0}, "m_aov": {"type": "number", "label": "AOV", "group_label": "Sales Metrics", "sql": "safe_divide(${m_total_sold_value} , ${m_num_invoices})", "compact": "thousands", "round": 1}, "m_quantity_per_transaction": {"type": "number", "label": "Quantity per Transaction", "group_label": "Sales Metrics", "sql": "safe_divide(${m_units_sold} , ${m_num_invoices})", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cogs": {"name": "cogs", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_cogs": {"type": "sum", "label": "Total COGS", "group_label": "Sales Metrics", "compact": "millions", "round": 1}, "m_gross_margin": {"type": "number", "label": "Gross Margin", "group_label": "Sales Metrics", "sql": "safe_divide(${m_actual_revenue} -${m_total_cogs}, ${m_actual_revenue})", "format": "percent", "round": 2}, "m_gross_profit": {"type": "number", "label": "Gross Profit", "group_label": "Sales Metrics", "sql": "${m_actual_revenue} - ${m_total_cogs}", "compact": "millions", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_discount": {"name": "order_discount", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_order_discount": {"type": "sum", "label": "Order Discount", "group_label": "Sales Metrics", "compact": "millions", "round": 1}, "m_total_discount": {"type": "number", "label": "Total Discount", "group_label": "Sales Metrics", "sql": "${m_item_discount} + ${m_order_discount}", "compact": "millions", "round": 1}, "m_avg_dct_per_item": {"type": "number", "label": "Avg Discount per Unit", "sql": "safe_divide(${m_total_discount} , ${m_units_sold})", "compact": "thousands", "round": 0, "group_label": "Sales Metrics"}, "m_avg_dct_pct": {"type": "number", "label": "Avg Discount Pct", "sql": "safe_divide(${m_total_discount} , ${m_total_sold_value}+${m_total_discount})", "format": "percent", "round": 2, "group_label": "Sales Metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_invoices": {"type": "count_distinct", "label": "No. Invoices", "group_label": "Sales Metrics", "round": 0, "filters": [{"transaction_type": "invoice"}, {"transaction_code": "!%HDD%"}]}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__inventory_items", "sql_on": "${dim__inventory_items.extended_code} = ${fct__revenue_items.product_code} "}, {"join": "fct__working_days", "sql_on": "${fct__working_days.date} = ${fct__revenue_items.transaction_date} and ${fct__working_days.branch_id} = ${fct__revenue_items.branch_id}", "always": true}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/fct__revenue_items.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "sales", "meta": {"joins": [{"join": "dim__inventory_items", "sql_on": "${dim__inventory_items.extended_code} = ${fct__revenue_items.product_code} "}, {"join": "fct__working_days", "sql_on": "${fct__working_days.date} = ${fct__revenue_items.transaction_date} and ${fct__working_days.branch_id} = ${fct__revenue_items.branch_id}", "always": true}]}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "fact", "kiotviet", "nhanhvn"]}, "created_at": 1732268180.434815, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`fct__revenue_items`", "raw_code": "{{ config(\n    materialized = 'table',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'hourly','fact','kiotviet','nhanhvn']\n) }}\n\n{# select *,\n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'product_code', 'transaction_date', 'transaction_type', 'transaction_source'])}} as revenue_item_id,\n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'transaction_date', 'transaction_type', ])}} as transaction_id,\nFROM\n    kiotviet_details\nUNION ALL\nSELECT\n    *,\n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'product_code', 'transaction_date', 'transaction_type', 'transaction_source'])}} as revenue_item_id,\n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'transaction_date', 'transaction_type', ])}} as transaction_id,\nFROM\n    nhanhvn_details #}\n\n{% set list_cols = [\n    \"transaction_date\",\n    \"transaction_code\",\n    \"branch_id\",\n    \"customer_id\",\n    \"product_id\",\n    \"product_code\",\n    \"price\",\n    \"transaction_type\",\n    \"source\",\n    \"quantity\",\n    \"discount_ratio\",\n    \"discount\",\n    \"order_discount\",\n    \"subTotal\",\n]%}\n\nwith preprocessed as (\n    select \n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'product_code', 'transaction_date', 'transaction_type', 'source'])}} as revenue_item_id,\n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'transaction_date', 'transaction_type', ])}} as transaction_id,\n{{list_cols | join(',\\n')}}\nfrom {{ ref(\"int_kiotviet__revenue_items\") }} \nunion all\n\nselect \n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'product_code', 'transaction_date', 'transaction_type', 'source'])}} as revenue_item_id,\n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'transaction_date', 'transaction_type', ])}} as transaction_id,\n{{list_cols | join(',\\n')}}\nfrom {{ ref(\"int_kiotviet__return_items\") }}\n\nunion all\n\nselect \n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'product_code', 'transaction_date', 'transaction_type', 'source'])}} as revenue_item_id,\n{{dbt_utils.generate_surrogate_key(['branch_id', 'customer_id', 'transaction_date', 'transaction_type', ])}} as transaction_id,\n{{list_cols | join(',\\n')}}\nfrom {{ ref(\"int_nhanhvn__revenue_items\") }}\n)\n\nselect p.*,\nc.inventory_value_per_unit*p.quantity as cogs\nfrom preprocessed p\nleft join {{ ref(\"stg_gsheet__cogs\") }} c \non p.product_code = c.product_code \nand p.transaction_date >= date(c.dbt_valid_from) \nand (p.transaction_date < date(c.dbt_valid_to) or c.dbt_valid_to is null)", "language": "sql", "refs": [{"name": "int_kiotviet__revenue_items", "package": null, "version": null}, {"name": "int_kiotviet__return_items", "package": null, "version": null}, {"name": "int_nhanhvn__revenue_items", "package": null, "version": null}, {"name": "stg_gsheet__cogs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.sado_analytics_services.int_kiotviet__revenue_items", "model.sado_analytics_services.int_kiotviet__return_items", "model.sado_analytics_services.int_nhanhvn__revenue_items", "snapshot.sado_analytics_services.stg_gsheet__cogs"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__revenue_items.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith preprocessed as (\n    select \nto_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(product_code as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as revenue_item_id,\nto_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as transaction_id,\ntransaction_date,\ntransaction_code,\nbranch_id,\ncustomer_id,\nproduct_id,\nproduct_code,\nprice,\ntransaction_type,\nsource,\nquantity,\ndiscount_ratio,\ndiscount,\norder_discount,\nsubTotal\nfrom `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__revenue_items` \nunion all\n\nselect \nto_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(product_code as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as revenue_item_id,\nto_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as transaction_id,\ntransaction_date,\ntransaction_code,\nbranch_id,\ncustomer_id,\nproduct_id,\nproduct_code,\nprice,\ntransaction_type,\nsource,\nquantity,\ndiscount_ratio,\ndiscount,\norder_discount,\nsubTotal\nfrom `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__return_items`\n\nunion all\n\nselect \nto_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(product_code as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as revenue_item_id,\nto_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_type as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as transaction_id,\ntransaction_date,\ntransaction_code,\nbranch_id,\ncustomer_id,\nproduct_id,\nproduct_code,\nprice,\ntransaction_type,\nsource,\nquantity,\ndiscount_ratio,\ndiscount,\norder_discount,\nsubTotal\nfrom `agile-scheme-394814`.`dbt_prod`.`int_nhanhvn__revenue_items`\n)\n\nselect p.*,\nc.inventory_value_per_unit*p.quantity as cogs\nfrom preprocessed p\nleft join `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__cogs` c \non p.product_code = c.product_code \nand p.transaction_date >= date(c.dbt_valid_from) \nand (p.transaction_date < date(c.dbt_valid_to) or c.dbt_valid_to is null)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.revenue_items": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "revenue_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/revenue_items.sql", "original_file_path": "models/marts/sales/revenue_items.sql", "unique_id": "model.sado_analytics_services.revenue_items", "fqn": ["sado_analytics_services", "marts", "sales", "revenue_items"], "alias": "revenue_items", "checksum": {"name": "sha256", "checksum": "260952db5823a4988eac1ba2a311e0638b352fd9dc1a66f7ab5090e092859a11"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["incremental", "fact", "kiotviet", "hourly"], "meta": {"joins": [{"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${revenue_items.branch_id}"}, {"join": "dim__inventory_items", "sql_on": "${dim__inventory_items.kiotviet_product_id} = ${revenue_items.product_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue_items.transaction_date)"}, {"join": "revenue", "sql_on": "${revenue_items.transaction_id} = ${revenue.transaction_id}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["transaction_id", "product_id", "price"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "kiotviet", "hourly"], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_transactions": {"type": "count_distinct", "label": "Num Transactions", "compact": "thousands", "round": 0}, "m_num_invoices": {"type": "count_distinct", "label": "Num Invoices", "compact": "thousands", "round": 0, "filters": [{"transaction_type": "invoice"}]}, "m_num_returns": {"type": "count_distinct", "label": "Num Returns", "compact": "thousands", "round": 0, "filters": [{"transaction_type": "return"}]}}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": "TIMESTAMP", "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "", "meta": {"metrics": {"m_item_sold": {"type": "sum", "label": "Num Items Sold", "round": 0, "filters": [{"transaction_type": "invoice"}, {"subtotal": "> 0"}]}, "m_item_gift": {"type": "sum", "label": "Num Items Gift", "compact": "thousands", "round": 1, "filters": [{"transaction_type": "invoice"}, {"subtotal": "0"}]}, "m_item_return": {"type": "sum", "label": "Num Items Return", "round": 0, "filters": [{"transaction_type": "return"}]}, "m_gift_ratio": {"type": "number", "label": "Gift Ratio", "sql": "safe_divide(${m_item_gift},${m_item_sold})", "format": "percent", "round": 2}, "m_quantity_item_per_order": {"type": "number", "label": "Quantity Item per Order", "sql": "safe_divide(${m_item_sold},${m_num_invoices})", "round": 2}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {"metrics": {"m_item_discount_value": {"type": "sum", "label": "Value discount on Items", "filters": [{"transaction_type": "invoice"}], "compact": "millions", "round": 1}, "m_discount_per_invoice": {"type": "number", "label": "Discount per Invoice", "sql": "safe_divide(${m_item_discount_value},${m_num_invoices})", "round": 1, "compact": "thousands"}, "m_discount_pct": {"type": "number", "label": "Discount Rate", "sql": "safe_divide(${m_item_discount_value},${m_item_value})", "format": "percent", "round": 2}}, "dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "", "meta": {"metrics": {"m_item_value": {"type": "sum", "label": "Item Sold Value", "compact": "millions", "round": 1, "filters": [{"transaction_type": "invoice"}]}, "m_value_per_item_sold": {"type": "number", "label": "Value per Item Sold", "sql": "safe_divide(${m_item_value},${m_item_sold})", "round": 1, "compact": "thousands"}, "m_value_per_item_returned": {"type": "number", "label": "Value per Item Returned", "sql": "safe_divide(${m_item_return_value},${m_item_return})", "round": 1, "compact": "thousands"}, "m_item_return_value": {"type": "sum", "label": "Item Return Value", "compact": "millions", "round": 1, "filters": [{"transaction_type": "return"}]}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${revenue_items.branch_id}"}, {"join": "dim__inventory_items", "sql_on": "${dim__inventory_items.kiotviet_product_id} = ${revenue_items.product_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue_items.transaction_date)"}, {"join": "revenue", "sql_on": "${revenue_items.transaction_id} = ${revenue.transaction_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/revenue_items.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "sales", "meta": {"joins": [{"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${revenue_items.branch_id}"}, {"join": "dim__inventory_items", "sql_on": "${dim__inventory_items.kiotviet_product_id} = ${revenue_items.product_id}"}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue_items.transaction_date)"}, {"join": "revenue", "sql_on": "${revenue_items.transaction_id} = ${revenue.transaction_id}"}]}, "tags": ["incremental", "fact", "kiotviet", "hourly"], "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["transaction_id", "product_id", "price"], "on_schema_change": "sync_all_columns"}, "created_at": 1732268180.4615378, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue_items`", "raw_code": "{{ config(\n    tags = ['incremental', 'fact','kiotviet','hourly'],\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'timestamp',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['transaction_id','product_id','price'],\n    on_schema_change = 'sync_all_columns'\n) }}\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    CAST(NULL AS int64) AS reference_transaction_id,\n    invoices.transaction_date,\n    invoices.transaction_status,\n    invoices.branch_id,\n    invoices.employee_id,\n    invoices.customer_id,\n    invoices.product_id,\n    invoices.product_code,\n    invoices.price,\n    invoices.transaction_type,\n    invoices.modified_date,\n    sum(invoices.quantity) quantity,\n    avg(COALESCE(\n        invoices.discount_ratio,\n        safe_divide(\n            invoices.discount * 100,\n            invoices.price\n        ),\n        0\n    )) discount_ratio,\n    avg(invoices.discount) discount,\n    sum(invoices.subtotal) subTotal,\nFROM\n    {{ ref('stg_kiotviet__invoicedetails') }}\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.quantity <> 0\n{% if is_incremental() %}\n    AND date(invoices.transaction_date) in (\n        select\n        date(transaction_date) \n        from {{ ref('stg_kiotviet__invoicedetails') }}\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n    {# and date(coalesce(invoices.modified_date,invoices.transaction_date)) >= date_add(current_date, interval -3 day) #}\n{% endif %}\n{{dbt_utils.group_by(13)}}\n\nUNION ALL\n\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.reference_transaction_id,\n    returns.transaction_date,\n    returns.transaction_status,\n    returns.branch_id,\n    returns.employee_id,\n    returns.customer_id,\n    returns.product_id,\n    returns.product_code,\n    returns.price,\n    returns.transaction_type,\n    returns.modified_date,\n    sum(returns.quantity) quantity, \n    CAST(NULL AS float64) AS discount_ratio,\n    CAST(NULL AS float64) AS discount,\n    sum(returns.price*returns.quantity) subtotal,\nFROM\n    {{ ref('stg_kiotviet__returndetails') }}\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n{% if is_incremental() %}\nAND date(returns.transaction_date) in (\n        select \n        date(transaction_date) \n        from {{ ref('stg_kiotviet__invoicedetails') }}\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n{# and date(coalesce(returns.modified_date,returns.transaction_date)) >= date_add(current_date, interval -3 day) #}\n{% endif %}\n{{dbt_utils.group_by(13)}}", "language": "sql", "refs": [{"name": "stg_kiotviet__invoicedetails", "package": null, "version": null}, {"name": "stg_kiotviet__returndetails", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoicedetails", "model.sado_analytics_services.stg_kiotviet__returndetails"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/revenue_items.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    CAST(NULL AS int64) AS reference_transaction_id,\n    invoices.transaction_date,\n    invoices.transaction_status,\n    invoices.branch_id,\n    invoices.employee_id,\n    invoices.customer_id,\n    invoices.product_id,\n    invoices.product_code,\n    invoices.price,\n    invoices.transaction_type,\n    invoices.modified_date,\n    sum(invoices.quantity) quantity,\n    avg(COALESCE(\n        invoices.discount_ratio,\n        safe_divide(\n            invoices.discount * 100,\n            invoices.price\n        ),\n        0\n    )) discount_ratio,\n    avg(invoices.discount) discount,\n    sum(invoices.subtotal) subTotal,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.quantity <> 0\n\n    AND date(invoices.transaction_date) in (\n        select\n        date(transaction_date) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n    \n\ngroup by 1,2,3,4,5,6,7,8,9,10,11,12,13\n\nUNION ALL\n\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.reference_transaction_id,\n    returns.transaction_date,\n    returns.transaction_status,\n    returns.branch_id,\n    returns.employee_id,\n    returns.customer_id,\n    returns.product_id,\n    returns.product_code,\n    returns.price,\n    returns.transaction_type,\n    returns.modified_date,\n    sum(returns.quantity) quantity, \n    CAST(NULL AS float64) AS discount_ratio,\n    CAST(NULL AS float64) AS discount,\n    sum(returns.price*returns.quantity) subtotal,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n\nAND date(returns.transaction_date) in (\n        select \n        date(transaction_date) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n\n\ngroup by 1,2,3,4,5,6,7,8,9,10,11,12,13", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__customers_attributes": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "fct__customers_attributes", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/fct__customers_attributes.sql", "original_file_path": "models/marts/sales/fct__customers_attributes.sql", "unique_id": "model.sado_analytics_services.fct__customers_attributes", "fqn": ["sado_analytics_services", "marts", "sales", "fct__customers_attributes"], "alias": "fct__customers_attributes", "checksum": {"name": "sha256", "checksum": "1ac926e97aeb0fd7a1c4f319b5b48ac7c4c4c1aab29933b86e19149b2700aa0e"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["incremental", "daily", "fact", "kiotviet", "nhanhvn"], "meta": {"joins": [{"join": "calendar", "alias": "last_calendar", "sql_on": "${last_calendar.date} = ${fct__customers_attributes.last_purchase_date}"}, {"join": "calendar", "alias": "first_calendar", "sql_on": "${first_calendar.date} = ${fct__customers_attributes.first_purchase_date}"}, {"join": "dim__branches", "alias": "create_branch", "sql_on": "${create_branch.branch_id} = ${fct__customers_attributes.registered_branch_id}"}, {"join": "dim__branches", "alias": "latest_branch", "sql_on": "${latest_branch.branch_id} = ${fct__customers_attributes.last_purchase_branch_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__customers_attributes.customer_id} and ${rfm_movement.start_of_month} = date_trunc(current_date(), month)"}, {"join": "fct__customers", "alias": "customers", "sql_on": "${customers.universal_customer_id} = ${fct__customers_attributes.customer_id}", "type": "inner", "always": true}]}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["customer_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "last_purchase_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "fact", "kiotviet", "nhanhvn"], "description": "The 'fct__customers_attributes' model provides a comprehensive view of each customer's transactional behavior. This model is particularly useful for understanding customer purchasing patterns and identifying high-value customers.", "columns": {"customer_id": {"name": "customer_id", "description": "This is a unique identifier for each customer. It is used to track all transactions and activities associated with a specific customer.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_customers": {"type": "count_distinct", "label": "Number of Customers", "group_label": "Customers", "round": 0}, "m_active_customers": {"type": "count_distinct", "sql": "case when ${TABLE}.last_purchase_date >= date_add(current_date(), interval -30 day) then ${TABLE}.customer_id end", "label": "Active Customers", "group_label": "Customers", "round": 0}}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "num_transactions": {"name": "num_transactions", "description": "This represents the total number of invoice transactions a customer has made. It provides insights into the customer's purchasing frequency.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_transactions": {"type": "sum", "label": "Number of Transactions", "group_label": "Transactions", "round": 0}}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_purchased_goods_value": {"name": "total_purchased_goods_value", "description": "This is the total value of all goods purchased by a customer. It gives an idea of the customer's spending capacity and the value they bring to the business.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_purchased_goods_value": {"type": "sum", "label": "Total Purchased Goods Value", "group_label": "Value", "compact": "millions", "round": 2}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_monetary_value": {"name": "total_monetary_value", "description": "This column represents the total monetary value of all transactions made by a customer. This value is useful for understanding the overall revenue generated by each customer.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_monetary_value": {"type": "sum", "label": "Total Monetary Value", "group_label": "Value", "compact": "millions", "round": 2}, "m_monetary_per_purchase": {"type": "number", "label": "Monetary per Purchase", "sql": "safe_divide(${m_total_monetary_value}, ${m_num_transactions})", "compact": "thousands", "round": 2, "group_label": "Value"}, "m_monetary_per_customer": {"type": "average", "label": "Monetary per Customer", "compact": "millions", "round": 2, "group_label": "Value"}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "last_purchase_date": {"name": "last_purchase_date", "description": "This column indicates the date of the most recent purchase made by a customer. This information can be used to understand the recency of a customer's engagement with the business.", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "first_purchase_date": {"name": "first_purchase_date", "description": "This information can be used to understand how long a customer has been engaged with the business.", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "has_online_purchase": {"name": "has_online_purchase", "description": "If the value is 'true', it means the customer has made more than one purchase online. This information can be useful for understanding the customer's purchasing habits and preferences.", "meta": {"dimension": {"type": "boolean", "hidden": true}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "registered_branch_id": {"name": "registered_branch_id", "description": "This column represents the branch where the customer made their first purchase. It is useful for understanding the customer's initial point of interaction with the business.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "last_purchase_branch_id": {"name": "last_purchase_branch_id", "description": "This column represents branch where the customer made their most recent purchase. It is useful for understanding customer behavior and preferences, as well as for tracking sales performance across different branches.", "meta": {"dimension": {"type": "number", "hidden": true}, "additional_dimensions": {"d_is_moved": {"sql": "${TABLE}.registered_branch_id = ${TABLE}.last_purchase_branch_id", "type": "boolean", "label": "Is Moved"}}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "alias": "last_calendar", "sql_on": "${last_calendar.date} = ${fct__customers_attributes.last_purchase_date}"}, {"join": "calendar", "alias": "first_calendar", "sql_on": "${first_calendar.date} = ${fct__customers_attributes.first_purchase_date}"}, {"join": "dim__branches", "alias": "create_branch", "sql_on": "${create_branch.branch_id} = ${fct__customers_attributes.registered_branch_id}"}, {"join": "dim__branches", "alias": "latest_branch", "sql_on": "${latest_branch.branch_id} = ${fct__customers_attributes.last_purchase_branch_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__customers_attributes.customer_id} and ${rfm_movement.start_of_month} = date_trunc(current_date(), month)"}, {"join": "fct__customers", "alias": "customers", "sql_on": "${customers.universal_customer_id} = ${fct__customers_attributes.customer_id}", "type": "inner", "always": true}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/fct__customers_attributes.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "sales", "meta": {"joins": [{"join": "calendar", "alias": "last_calendar", "sql_on": "${last_calendar.date} = ${fct__customers_attributes.last_purchase_date}"}, {"join": "calendar", "alias": "first_calendar", "sql_on": "${first_calendar.date} = ${fct__customers_attributes.first_purchase_date}"}, {"join": "dim__branches", "alias": "create_branch", "sql_on": "${create_branch.branch_id} = ${fct__customers_attributes.registered_branch_id}"}, {"join": "dim__branches", "alias": "latest_branch", "sql_on": "${latest_branch.branch_id} = ${fct__customers_attributes.last_purchase_branch_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__customers_attributes.customer_id} and ${rfm_movement.start_of_month} = date_trunc(current_date(), month)"}, {"join": "fct__customers", "alias": "customers", "sql_on": "${customers.universal_customer_id} = ${fct__customers_attributes.customer_id}", "type": "inner", "always": true}]}, "partition_by": {"field": "last_purchase_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": ["customer_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "fact", "kiotviet", "nhanhvn"]}, "created_at": 1732268180.400493, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`fct__customers_attributes`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'last_purchase_date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'merge',\n    unique_key = ['customer_id'],\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'daily','fact','kiotviet','nhanhvn']\n    )\n}}\n\nwith updated_customers as (\n    select distinct customer_id\n    from {{ ref(\"fct__transactions\") }}\n    where customer_id is not null\n    {% if is_incremental() %}\n       and transaction_date >= date_add(current_date(), interval -7 day)\n    {% endif %}\n),\n\nagg_metrics as (\n    SELECT\n    u.customer_id,\n    COUNT(\n        DISTINCT CASE\n            WHEN transaction_type = 'invoice' THEN t.transaction_source_id\n        END\n    ) AS num_transactions,\n    SUM(t.total) AS total_purchased_goods_value,\n    SUM(t.total_payment) AS total_monetary_value,\n    MAX(t.transaction_date) AS last_purchase_date,\n    MIN(t.transaction_date) AS first_purchase_date,\n    COUNT(\n        CASE\n            WHEN t.source = 'nhanhvn' THEN t.transaction_id\n        END\n    ) > 1 AS has_online_purchase,\nFROM\n    updated_customers u\n    inner join {{ ref(\"fct__transactions\") }} t on u.customer_id = t.customer_id\n    {{ dbt_utils.group_by(1) }}\n),\n\nagg_dimensions as (\n    SELECT\n        u.customer_id,\n        first_value(t.branch_id) over w1 as registered_branch_id,\n        last_value(t.branch_id) over w1 as last_purchase_branch_id,\n    FROM\n        updated_customers u\n    inner join {{ ref(\"fct__transactions\") }} t on u.customer_id = t.customer_id\n    qualify row_number() over (partition by u.customer_id order by t.transaction_date asc ) = 1\n\n    window w1 AS (\n        partition by u.customer_id order by t.transaction_date asc rows between unbounded preceding and unbounded following\n    )\n)\n\nselect \n    m.*,\n    d.* except(customer_id),\nfrom agg_metrics m \ninner join agg_dimensions d on m.customer_id = d.customer_id", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}, {"name": "fct__transactions", "package": null, "version": null}, {"name": "fct__transactions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.fct__transactions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__customers_attributes.sql", "compiled": true, "compiled_code": "\n\nwith updated_customers as (\n    select distinct customer_id\n    from `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n    where customer_id is not null\n    \n       and transaction_date >= date_add(current_date(), interval -7 day)\n    \n),\n\nagg_metrics as (\n    SELECT\n    u.customer_id,\n    COUNT(\n        DISTINCT CASE\n            WHEN transaction_type = 'invoice' THEN t.transaction_source_id\n        END\n    ) AS num_transactions,\n    SUM(t.total) AS total_purchased_goods_value,\n    SUM(t.total_payment) AS total_monetary_value,\n    MAX(t.transaction_date) AS last_purchase_date,\n    MIN(t.transaction_date) AS first_purchase_date,\n    COUNT(\n        CASE\n            WHEN t.source = 'nhanhvn' THEN t.transaction_id\n        END\n    ) > 1 AS has_online_purchase,\nFROM\n    updated_customers u\n    inner join `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` t on u.customer_id = t.customer_id\n    group by 1\n),\n\nagg_dimensions as (\n    SELECT\n        u.customer_id,\n        first_value(t.branch_id) over w1 as registered_branch_id,\n        last_value(t.branch_id) over w1 as last_purchase_branch_id,\n    FROM\n        updated_customers u\n    inner join `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` t on u.customer_id = t.customer_id\n    qualify row_number() over (partition by u.customer_id order by t.transaction_date asc ) = 1\n\n    window w1 AS (\n        partition by u.customer_id order by t.transaction_date asc rows between unbounded preceding and unbounded following\n    )\n)\n\nselect \n    m.*,\n    d.* except(customer_id),\nfrom agg_metrics m \ninner join agg_dimensions d on m.customer_id = d.customer_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.revenue": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "revenue", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/revenue.sql", "original_file_path": "models/marts/sales/revenue.sql", "unique_id": "model.sado_analytics_services.revenue", "fqn": ["sado_analytics_services", "marts", "sales", "revenue"], "alias": "revenue", "checksum": {"name": "sha256", "checksum": "d565657623c3ef3933aa9bdf59ed3c7a0fe8340b5be1f8433755b67b56e9228f"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["incremental", "hourly", "fact", "kiotviet"], "meta": {"joins": [{"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${revenue.customer_id} and ${rfm_movement.start_of_month} = date_trunc(date(revenue.transaction_date),month)"}, {"join": "stg_kiotviet__customers", "sql_on": "${stg_kiotviet__customers.customer_id} = ${revenue.customer_id}", "fields": ["customer_id", "customer_groups", "customer_type", "m_avg_invoiced", "m_total_points", "m_rewarded_points", "m_avg_revenue", "m_no_customers", "m_num_phones"]}, {"join": "stg_kiotviet__users", "sql_on": "${stg_kiotviet__users.user_id} =${revenue.employee_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue.transaction_date)"}, {"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${revenue.branch_id}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["transaction_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "fact", "kiotviet"], "description": "revenue fact table with single revenue stream per row, excluding terminated transaction", "columns": {"transaction_id": {"name": "transaction_id", "description": "", "meta": {"metrics": {"m_num_transactions": {"type": "count_distinct", "label": "Number of transactions", "group_label": "Sales Metrics", "compact": "thousands", "round": 1}, "m_num_invoices": {"type": "count_distinct", "label": "Number of invoices", "group_label": "Sales Metrics", "filters": [{"transaction_type": "invoice"}], "compact": "thousands", "round": 1}, "m_num_returns": {"type": "count_distinct", "label": "Number of returns", "group_label": "Sales Metrics", "filters": [{"transaction_type": "return"}], "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "", "meta": {"metrics": {"m_num_stores": {"type": "count_distinct", "label": "Number of stores", "group_label": "Sales Metrics"}, "m_no_working_days": {"type": "count_distinct", "label": "Working days", "group_label": "Sales Metrics", "sql": "concat(date(${transaction_date}), ${branch_id})"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"metrics": {"m_num_customers": {"type": "count_distinct", "label": "Number of customers", "group_label": "Sales Metrics", "compact": "thousands", "round": 1, "filters": [{"transaction_type": "invoice"}]}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {"metrics": {"m_total_transaction_value": {"type": "sum", "label": "Total Transaction Value", "group_label": "Sales Metrics", "compact": "billions", "round": 1}, "m_total_invoice_value": {"type": "sum", "label": "Total Invoice Value", "group_label": "Sales Metrics", "filters": [{"transaction_type": "invoice"}], "compact": "billions", "round": 1}, "m_total_return_value": {"type": "sum", "label": "Total Return Value", "group_label": "Sales Metrics", "filters": [{"transaction_type": "return"}], "compact": "billions", "round": 1}, "m_aov": {"type": "average", "label": "AOV", "group_label": "Sales Metrics", "compact": "thousands", "round": 0, "filters": [{"transaction_type": "invoice"}]}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "", "meta": {"metrics": {"total_transaction_payment": {"type": "sum", "label": "Total Transaction Payment", "group_label": "Sales Metrics", "compact": "billions", "round": 1}, "avg_order_value": {"type": "average", "label": "Average Transaction Value", "group_label": "Sales Metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "", "meta": {"metrics": {"discount_value": {"type": "sum", "label": "Value discount on order", "group_label": "Sales Metrics", "compact": "millions", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_fee": {"name": "return_fee", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${revenue.customer_id} and ${rfm_movement.start_of_month} = date_trunc(date(revenue.transaction_date),month)"}, {"join": "stg_kiotviet__customers", "sql_on": "${stg_kiotviet__customers.customer_id} = ${revenue.customer_id}", "fields": ["customer_id", "customer_groups", "customer_type", "m_avg_invoiced", "m_total_points", "m_rewarded_points", "m_avg_revenue", "m_no_customers", "m_num_phones"]}, {"join": "stg_kiotviet__users", "sql_on": "${stg_kiotviet__users.user_id} =${revenue.employee_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue.transaction_date)"}, {"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${revenue.branch_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/revenue.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "sales", "meta": {"joins": [{"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${revenue.customer_id} and ${rfm_movement.start_of_month} = date_trunc(date(revenue.transaction_date),month)"}, {"join": "stg_kiotviet__customers", "sql_on": "${stg_kiotviet__customers.customer_id} = ${revenue.customer_id}", "fields": ["customer_id", "customer_groups", "customer_type", "m_avg_invoiced", "m_total_points", "m_rewarded_points", "m_avg_revenue", "m_no_customers", "m_num_phones"]}, {"join": "stg_kiotviet__users", "sql_on": "${stg_kiotviet__users.user_id} =${revenue.employee_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(revenue.transaction_date)"}, {"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${revenue.branch_id}"}]}, "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": ["transaction_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "fact", "kiotviet"]}, "created_at": 1732268180.4472966, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'timestamp',\n    'granularity': 'day' },\n    incremental_strategy = 'merge',\n    unique_key = ['transaction_id'],\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'hourly','fact','kiotviet']\n) }}\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    invoices.transaction_date,\n    CAST(NULL AS int64) AS reference_transaction_id,\n    invoices.branch_id,\n    invoices.customer_id,\n    invoices.employee_id,\n    invoices.total,\n    invoices.total_payment,\n    invoices.discount,\n    invoices.discount_ratio,\n    CAST(\n        NULL AS int64\n    ) AS return_fee,\n    invoices.transaction_type,\n    date(coalesce(invoices.modified_date, invoices.transaction_date)) as modified_date,\nFROM\n    {{ ref('stg_kiotviet__invoices') }}\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    {% if is_incremental() %}\n      and date(coalesce(invoices.modified_date, invoices.transaction_date)) >= date_add(date(_dbt_max_partition), interval -2 day)\n    {% endif %}\nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.transaction_date,\n    returns.reference_transaction_id,\n    returns.branch_id,\n    returns.customer_id,\n    returns.employee_id,\n    (- returns.total) AS total,\n    returns.total_payment,\n    returns.return_discount,\n    CAST(\n        NULL AS float64\n    ) discount_ratio,\n    returns.return_fee,\n    returns.transaction_type,\n    date(coalesce(returns.modified_date, returns.transaction_date)) as modified_date,\nFROM\n    {{ ref('stg_kiotviet__returns') }}\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n    {% if is_incremental() %}\n      and date(coalesce(returns.modified_date, returns.transaction_date)) >= date_add(date(_dbt_max_partition), interval -2 day)\n    {% endif %}", "language": "sql", "refs": [{"name": "stg_kiotviet__invoices", "package": null, "version": null}, {"name": "stg_kiotviet__returns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoices", "model.sado_analytics_services.stg_kiotviet__returns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/revenue.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    invoices.transaction_date,\n    CAST(NULL AS int64) AS reference_transaction_id,\n    invoices.branch_id,\n    invoices.customer_id,\n    invoices.employee_id,\n    invoices.total,\n    invoices.total_payment,\n    invoices.discount,\n    invoices.discount_ratio,\n    CAST(\n        NULL AS int64\n    ) AS return_fee,\n    invoices.transaction_type,\n    date(coalesce(invoices.modified_date, invoices.transaction_date)) as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    \n      and date(coalesce(invoices.modified_date, invoices.transaction_date)) >= date_add(date(_dbt_max_partition), interval -2 day)\n    \nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.transaction_date,\n    returns.reference_transaction_id,\n    returns.branch_id,\n    returns.customer_id,\n    returns.employee_id,\n    (- returns.total) AS total,\n    returns.total_payment,\n    returns.return_discount,\n    CAST(\n        NULL AS float64\n    ) discount_ratio,\n    returns.return_fee,\n    returns.transaction_type,\n    date(coalesce(returns.modified_date, returns.transaction_date)) as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n    \n      and date(coalesce(returns.modified_date, returns.transaction_date)) >= date_add(date(_dbt_max_partition), interval -2 day)\n    ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "fct__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/fct__customers.sql", "original_file_path": "models/marts/sales/fct__customers.sql", "unique_id": "model.sado_analytics_services.fct__customers", "fqn": ["sado_analytics_services", "marts", "sales", "fct__customers"], "alias": "fct__customers", "checksum": {"name": "sha256", "checksum": "26087abd998574cf9aa612a618ea82675b5bd7e58684faab232f8e0c4c0ea419"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["table", "daily", "dimension", "kiotviet", "nhanhvn"], "meta": {"joins": [{"join": "fct__customers_attributes", "alias": "attributes", "sql_on": "${fct__customers.universal_customer_id} = ${attributes.customer_id}", "type": "inner", "always": true}, {"join": "dim__branches", "alias": "registered_branches", "sql_on": "${registered_branches.branch_id} = ${fct__customers_attributes.registered_branch_id}"}, {"join": "dim__branches", "alias": "last_visited_branches", "sql_on": "${last_visited_branches.branch_id} = ${fct__customers_attributes.last_purchase_branch_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__customers.universal_customer_id}", "type": "left"}, {"join": "calendar", "alias": "calculated_month", "sql_on": "${calculated_month.date} = ${rfm_movement.start_of_month}", "type": "left"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "daily", "dimension", "kiotviet", "nhanhvn"], "description": "The model is designed to provide a unified view of the customer, regardless of the source of the data. The universal_customer_id field is a unique identifier for each customer, created by coalescing the kiotviet_customer_id and nhanhvn_customer_id. This model is particularly useful for business users who need to analyze customer data across multiple platforms.", "columns": {"contact_number": {"name": "contact_number", "description": "customer phone number", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "universal_customer_id": {"name": "universal_customer_id", "description": "universal customer id use between systems", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_customers": {"type": "count_distinct", "label": "Total Customers", "compact": "thousands", "round": 1, "group_label": "Customer Metrics"}}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "kiotviet_customer_id": {"name": "kiotviet_customer_id", "description": "This is the unique identifier for each customer in the KiotViet system", "meta": {"dimension": {"type": "number"}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "nhanhvn_customer_id": {"name": "nhanhvn_customer_id", "description": "This is the unique identifier for each customer in the Nhanh.vn system", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "customer_name": {"name": "customer_name", "description": "This field represents the name of the customer. It is a combination of the customer's first and last name. This information is collected from two sources: KiotViet and Nhanh.vn. In case of discrepancies, the most recent data is used.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "This column represents the gender of the customer. It is a boolean value, where 'True' indicates male and 'False' indicates female", "meta": {"dimension": {"type": "boolean", "hidden": true}, "additional_dimensions": {"d_gender": {"type": "string", "sql": "case when ${TABLE}.gender then 'Nam' else 'N\u1eef' end", "label": "Gi\u1edbi t\u00ednh"}}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "birth_date": {"name": "birth_date", "description": "This column represents the birth date of the customer. The date is formatted as YYYY-MM-DD.", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "birth_month": {"name": "birth_month", "description": "This column represents the month of birth of the customer. This information is useful for understanding customer demographics and can be used for targeted marketing campaigns, such as birthday promotions.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "age": {"name": "age", "description": "This field represents the age of the customer. This information can be useful for understanding the age demographics of our customer base.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "This column represents the date when the customer was first created or registered in the system.", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "last_modified_date": {"name": "last_modified_date", "description": "This column represents the most recent date when the customer's information was updated.", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "This field contains the customer's address, useful for understanding the geographical distribution of customers, which can be used for targeted marketing and sales strategies.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "fct__customers_attributes", "alias": "attributes", "sql_on": "${fct__customers.universal_customer_id} = ${attributes.customer_id}", "type": "inner", "always": true}, {"join": "dim__branches", "alias": "registered_branches", "sql_on": "${registered_branches.branch_id} = ${fct__customers_attributes.registered_branch_id}"}, {"join": "dim__branches", "alias": "last_visited_branches", "sql_on": "${last_visited_branches.branch_id} = ${fct__customers_attributes.last_purchase_branch_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__customers.universal_customer_id}", "type": "left"}, {"join": "calendar", "alias": "calculated_month", "sql_on": "${calculated_month.date} = ${rfm_movement.start_of_month}", "type": "left"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/fct__customers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "sales", "meta": {"joins": [{"join": "fct__customers_attributes", "alias": "attributes", "sql_on": "${fct__customers.universal_customer_id} = ${attributes.customer_id}", "type": "inner", "always": true}, {"join": "dim__branches", "alias": "registered_branches", "sql_on": "${registered_branches.branch_id} = ${fct__customers_attributes.registered_branch_id}"}, {"join": "dim__branches", "alias": "last_visited_branches", "sql_on": "${last_visited_branches.branch_id} = ${fct__customers_attributes.last_purchase_branch_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__customers.universal_customer_id}", "type": "left"}, {"join": "calendar", "alias": "calculated_month", "sql_on": "${calculated_month.date} = ${rfm_movement.start_of_month}", "type": "left"}]}, "tags": ["table", "daily", "dimension", "kiotviet", "nhanhvn"]}, "created_at": 1732268180.4760785, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`", "raw_code": "{{\n  config(\n    materialized = 'table',\n    tags = ['table', 'daily','dimension','kiotviet','nhanhvn']\n    )\n}}\n\nwith kiotviet_cus as (\n    select \n    customer_id as kiotviet_customer_id,\n    contact_number, \n    customer_name,\n    gender, \n    date(birth_date) birth_date, \n    birth_month,\n    date(created_date) created_date,\n    date(modified_date) as last_modified_date,\n    from {{ ref('stg_kiotviet__customers') }}\n    where regexp_contains(contact_number, r'^0\\d{9}$')\n    {% if is_incremental() %}\n     and modified_date >= date(_dbt_max_partition)\n    {% endif %}\n    qualify ROW_NUMBER() over( PARTITION BY contact_number ORDER BY modified_date DESC) = 1\n),\nnhanhvn_cus as (\n    select\n    customer_id as nhanhvn_customer_id,\n    customer_name,\n    email,\n    contact_number,\n    gender,\n    address,\n    birthday,\n    first_purchase_date,\n    last_bought_date as last_modified_date\n    from {{ ref(\"stg_nhanhvn__customers\") }}\n    where regexp_contains(contact_number, r'^0\\d{9}$')\n    {% if is_incremental() %}\n      and date(last_bought_date) >= date(_dbt_max_partition)\n    {% endif %}\n    qualify ROW_NUMBER() over( PARTITION BY contact_number ORDER BY last_bought_date DESC) = 1\n)\n\n    select \ncoalesce(k.contact_number, n.contact_number) contact_number,\ncoalesce(k.kiotviet_customer_id,n.nhanhvn_customer_id) as universal_customer_id,\nk.kiotviet_customer_id,\nn.nhanhvn_customer_id,\ncoalesce(k.customer_name,n.customer_name) customer_name,\ncoalesce(k.gender,n.gender) gender,\ncoalesce(k.birth_date,date(n.birthday)) birth_date,\ncoalesce(k.birth_month,extract(month from date(n.birthday))) birth_month,\ndate_diff(current_date(),coalesce(k.birth_date,date(n.birthday)),day) as age,\ncoalesce(k.created_date,n.first_purchase_date) created_date,\ngreatest(k.last_modified_date,n.last_modified_date) as last_modified_date,\nn.address,\nfrom kiotviet_cus k \nfull outer join nhanhvn_cus n on k.contact_number = n.contact_number", "language": "sql", "refs": [{"name": "stg_kiotviet__customers", "package": null, "version": null}, {"name": "stg_nhanhvn__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_kiotviet__customers", "model.sado_analytics_services.stg_nhanhvn__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__customers.sql", "compiled": true, "compiled_code": "\n\nwith kiotviet_cus as (\n    select \n    customer_id as kiotviet_customer_id,\n    contact_number, \n    customer_name,\n    gender, \n    date(birth_date) birth_date, \n    birth_month,\n    date(created_date) created_date,\n    date(modified_date) as last_modified_date,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers`\n    where regexp_contains(contact_number, r'^0\\d{9}$')\n    \n    qualify ROW_NUMBER() over( PARTITION BY contact_number ORDER BY modified_date DESC) = 1\n),\nnhanhvn_cus as (\n    select\n    customer_id as nhanhvn_customer_id,\n    customer_name,\n    email,\n    contact_number,\n    gender,\n    address,\n    birthday,\n    first_purchase_date,\n    last_bought_date as last_modified_date\n    from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__customers`\n    where regexp_contains(contact_number, r'^0\\d{9}$')\n    \n    qualify ROW_NUMBER() over( PARTITION BY contact_number ORDER BY last_bought_date DESC) = 1\n)\n\n    select \ncoalesce(k.contact_number, n.contact_number) contact_number,\ncoalesce(k.kiotviet_customer_id,n.nhanhvn_customer_id) as universal_customer_id,\nk.kiotviet_customer_id,\nn.nhanhvn_customer_id,\ncoalesce(k.customer_name,n.customer_name) customer_name,\ncoalesce(k.gender,n.gender) gender,\ncoalesce(k.birth_date,date(n.birthday)) birth_date,\ncoalesce(k.birth_month,extract(month from date(n.birthday))) birth_month,\ndate_diff(current_date(),coalesce(k.birth_date,date(n.birthday)),day) as age,\ncoalesce(k.created_date,n.first_purchase_date) created_date,\ngreatest(k.last_modified_date,n.last_modified_date) as last_modified_date,\nn.address,\nfrom kiotviet_cus k \nfull outer join nhanhvn_cus n on k.contact_number = n.contact_number", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct__transactions": {"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "fct__transactions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/fct__transactions.sql", "original_file_path": "models/marts/sales/fct__transactions.sql", "unique_id": "model.sado_analytics_services.fct__transactions", "fqn": ["sado_analytics_services", "marts", "sales", "fct__transactions"], "alias": "fct__transactions", "checksum": {"name": "sha256", "checksum": "1c04177ff7f550e102019a3b990d4e2c1bac2355c6c72711952456c587ffff3d"}, "config": {"enabled": true, "alias": null, "schema": "sales", "database": null, "tags": ["hourly", "fact", "nhanhvn"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__transactions.transaction_date}", "always": true}, {"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${fct__transactions.branch_id}"}, {"join": "fct__customers", "sql_on": "${fct__customers.universal_customer_id} = ${fct__transactions.customer_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__transactions.customer_id} and ${rfm_movement.start_of_month} = date_trunc(transaction_date,month)"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["hourly", "fact", "nhanhvn"], "description": "The 'fct__transactions' model is a comprehensive view of the company's transactions, combining data from two sources: 'kiotviet' and 'nhanhvn'. The model is designed to provide a holistic view of the company's revenue, taking into account both invoices and returns. It is particularly useful for business users who need to analyze revenue trends, customer behavior, and transaction patterns.", "columns": {"transaction_id": {"name": "transaction_id", "description": "This is a unique identifier for each transaction. It is a large numeric value that is automatically generated by the system for each transaction. This field is crucial for tracking and auditing purposes.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "This is a unique code associated with each transaction. It is a string value that may contain alphanumeric characters. This code is often used for referencing transactions in reports and discussions.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "This is the date when the transaction occurred. It is stored in the DATE format. This field is important for financial reporting and analysis, as it allows the business to track revenue and sales trends over time.", "meta": {"dimension": {"type": "date", "hidden": true}, "additional_dimensions": {"d_days_since_opening": {"type": "number", "sql": "DATE_DIFF(${calendar.date}, ${dim__branches.opening_day},day)", "label": "Days Since Opening", "group_label": "Opening"}, "d_is_opening": {"type": "string", "sql": "case when date_diff( ${calendar.date},${dim__branches.opening_day},day) <10 then \"CH khai tr\u01b0\u01a1ng\" else '\u0110\u00e3 khai tr\u01b0\u01a1ng' end", "label": "Is Opening Period", "group_label": "Opening"}}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "This is a unique identifier for the transaction that the current transaction is referencing. It is used to link related transactions together. For example, if a customer returns an item, the return transaction would reference the original purchase transaction.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "This is a unique identifier for the branch where the transaction took place. It is used to track the performance of different branches and to allocate resources effectively.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_working_days": {"type": "count_distinct", "sql": "(${transaction_date}||${branch_id})", "label": "Working Days", "round": 0, "group_label": "Working Days"}}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "This is a unique identifier for the customer who made the transaction. It is used to track customer behavior and preferences, and to personalize the customer experience.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_active_customers": {"type": "count_distinct", "label": "Active Customers", "round": 0, "group_label": "Customers"}, "m_customers_psd": {"type": "number", "sql": "safe_divide(${m_active_customers},${m_working_days})", "label": "Customers per day", "round": 1, "group_label": "Customers"}, "m_revenue_per_customer": {"type": "number", "sql": "safe_divide(${m_customer_total_payment},${m_active_customers})", "label": "Revenue per customer", "round": 0, "compact": "thousands", "group_label": "Sales Metrics"}, "m_customers_bday": {"type": "count_distinct", "label": "Customer Birthday", "group_label": "Customers", "sql": "case when ${fct__customers.birth_month} = extract(month from ${TABLE}.transaction_date) then ${TABLE}.customer_id end", "round": 1}, "m_percent_customers_bday": {"type": "number", "label": "% Customer Birthday", "group_label": "Customers", "sql": "safe_divide(${m_customers_bday},${m_active_customers})", "format": "percent", "round": 1}}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "This is the unique identifier for each employee in the company. It is used to track the transactions made by each employee.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "This represents the total amount of the transaction after any discounts or fees are applied. It is a key metric in understanding the company's revenue.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_value": {"type": "sum", "compact": "millions", "round": 1, "label": "Total Booked Revenue", "group_label": "Revenue Metrics"}, "m_total_returned": {"type": "sum", "compact": "millions", "round": 1, "label": "Total Returned", "group_label": "Revenue Metrics", "filters": [{"transaction_type": "return"}]}, "m_total_invoice": {"type": "sum", "compact": "millions", "round": 1, "label": "Total Invoice", "group_label": "Revenue Metrics", "filters": [{"transaction_type": "invoice"}]}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "This is the final amount paid by the customer after all discounts have been applied and fees added. It is a crucial figure in understanding the company's actual earnings from each transaction.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_payment": {"type": "sum", "compact": "millions", "round": 1, "label": "Total Collected Revenue", "group_label": "Revenue Metrics"}, "m_total_payment_bday": {"type": "sum", "compact": "millions", "round": 1, "label": "Total Collected Revenue (Birthday)", "group_label": "Revenue Metrics", "sql": "case when ${fct__customers.birth_month} = extract(month from ${TABLE}.transaction_date) then ${TABLE}.total end"}, "m_percent_total_payment_bday": {"type": "number", "label": "% Total Payment Birthday", "group_label": "Revenue Metrics", "sql": "safe_divide(${m_total_payment_bday},${m_total_payment})", "format": "percent", "round": 1}, "m_customer_total_payment": {"type": "sum", "compact": "millions", "round": 1, "label": "Total Collected Revenue (customer)", "group_label": "Revenue Metrics", "filters": [{"customer_id": "!null"}]}, "m_returned_value": {"type": "sum", "compact": "millions", "round": 1, "label": "Returned Value", "group_label": "Revenue Metrics", "filters": [{"transaction_type": "return"}]}, "m_invoice_value": {"type": "sum", "compact": "millions", "round": 1, "label": "Sales Value", "group_label": "Revenue Metrics", "filters": [{"transaction_type": "invoice"}]}, "m_revenue_psd": {"type": "number", "sql": "safe_divide(${m_total_payment} , ${m_working_days})", "compact": "millions", "round": 1, "label": "Revenue Per Day", "group_label": "Revenue Metrics"}, "m_online_revenue": {"type": "sum", "compact": "millions", "round": 1, "label": "Online Revenue", "group_label": "Revenue Metrics", "filters": [{"dim__branches.channel": "Online & Ecom"}]}, "m_offline_revenue": {"type": "sum", "compact": "millions", "round": 1, "label": "Offline Revenue", "group_label": "Revenue Metrics", "filters": [{"dim__branches.channel": "Offline"}]}, "m_online_attribution_pct": {"type": "number", "format": "percent", "round": 2, "label": "Online Attribution Pct", "group_label": "Revenue Metrics", "sql": "safe_divide(${m_online_revenue}, ${m_total_payment})"}, "m_aov": {"label": "AOV", "type": "average", "group_label": "Sales Metrics", "compact": "thousands", "round": 0, "filters": [{"transaction_type": "invoice"}, {"total": ">0"}]}, "m_aov_bday": {"label": "AOV (Birthday)", "type": "average", "group_label": "Sales Metrics", "compact": "thousands", "round": 0, "sql": "case when ${fct__customers.birth_month} = extract(month from ${TABLE}.transaction_date) and ${TABLE}.transaction_type ='invoice' and ${TABLE}.total_payment>0 then ${TABLE}.total_payment end"}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "This column represents the total amount of discount applied to a particular transaction. It is calculated based on the discount rules set by the company. The value is in the currency of the transaction and can be used to understand the company's discount strategy and its impact on revenue.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_discount": {"type": "sum", "compact": "millions", "round": 1, "label": "Total Discount", "group_label": "Revenue Metrics", "filters": [{"transaction_type": "invoice"}]}, "m_discount_pct": {"type": "number", "sql": "safe_divide(${m_total_discount},${m_invoice_value}+${m_total_discount})", "label": "Discount Pct", "group_label": "Revenue Metrics", "format": "percent", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "This column represents the ratio of the discount to the total transaction amount before the discount was applied. It is calculated by dividing the discount by the sum of the discount and the total transaction amount. This ratio can be used to understand the proportion of the transaction that was discounted and can provide insights into the company's discounting practices.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "return_fee": {"name": "return_fee", "description": "This column represents the fee charged for returning a product. It is calculated based on the company's return policy. This fee is usually charged to cover the costs associated with processing the return. This can be used to understand the company's return policy and its impact on customer satisfaction and revenue.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_return_fee": {"type": "sum", "compact": "millions", "round": 1, "label": "Return Fee", "group_label": "Revenue Metrics", "filters": [{"transaction_type": "return"}]}}}, "data_type": "NUMERIC", "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "This column represents the type of transaction that has taken place. It can either be an 'invoice' which indicates a sale or a 'return' which indicates a product return by the customer.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "This column represents the date when the transaction was last modified. It helps in tracking the changes made to the transaction over time.", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "source": {"name": "source", "description": "This column indicates the source from where the transaction data was fetched. It can either be 'kiotviet' or 'nhanhvn', representing the two different systems from which the data is sourced.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "transaction_source_id": {"name": "transaction_source_id", "description": "This is a unique identifier for each transaction. It is generated by applying the MD5 hash function to the combination of the transaction_id and the source of the transaction. This identifier is useful for tracking and referencing individual transactions across different sources.", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_invoices": {"label": "No. Invoices", "type": "count_distinct", "group_label": "Sales Metrics", "round": 0, "filters": [{"transaction_type": "invoice"}]}, "m_num_invoices_psd": {"type": "number", "sql": "safe_divide(${m_num_invoices} , ${m_working_days})", "round": 0, "label": "No. Invoices Per Day", "group_label": "Sales Metrics"}, "m_num_returns": {"label": "No. Returns", "type": "count_distinct", "group_label": "Sales Metrics", "round": 0, "filters": [{"transaction_type": "return"}]}, "m_return_rate": {"type": "number", "label": "Return Rate", "group_label": "Sales Metrics", "sql": "safe_divide(${m_num_returns},${m_num_invoices})", "format": "percent", "round": 1}}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "branch_revenue_id": {"name": "branch_revenue_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__transactions.transaction_date}", "always": true}, {"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${fct__transactions.branch_id}"}, {"join": "fct__customers", "sql_on": "${fct__customers.universal_customer_id} = ${fct__transactions.customer_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__transactions.customer_id} and ${rfm_movement.start_of_month} = date_trunc(transaction_date,month)"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/fct__transactions.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "sales", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${fct__transactions.transaction_date}", "always": true}, {"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${fct__transactions.branch_id}"}, {"join": "fct__customers", "sql_on": "${fct__customers.universal_customer_id} = ${fct__transactions.customer_id}"}, {"join": "rfm_movement", "sql_on": "${rfm_movement.customer_id} = ${fct__transactions.customer_id} and ${rfm_movement.start_of_month} = date_trunc(transaction_date,month)"}]}, "tags": ["hourly", "fact", "nhanhvn"]}, "created_at": 1732268180.5039616, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`", "raw_code": "{{ config(\n    tags = ['hourly','fact','nhanhvn']\n) }}\n\nSELECT\n    invoices.*,\n    {{ dbt_utils.generate_surrogate_key(['transaction_id','source']) }} AS transaction_source_id,\n    {{dbt_utils.generate_surrogate_key(['branch_id','transaction_date'])}} AS branch_revenue_id,\nFROM\n    {{ ref(\"int_kiotviet__invoices\") }} invoices\nUNION ALL\nSELECT\n    returns.*,\n    {{ dbt_utils.generate_surrogate_key(['transaction_id','source']) }} AS transaction_source_id,\n    {{dbt_utils.generate_surrogate_key(['branch_id','transaction_date'])}} AS branch_revenue_id,\nFROM\n    {{ ref(\"int_kiotviet__returns\") }} returns\nUNION ALL\nSELECT\n    order_details.*,\n    {{ dbt_utils.generate_surrogate_key(['transaction_id','source']) }} AS transaction_source_id,\n    {{dbt_utils.generate_surrogate_key(['branch_id','transaction_date'])}} AS branch_revenue_id,\nFROM\n    {{ ref(\"int_nhanhvn__ordersdetails\") }} order_details", "language": "sql", "refs": [{"name": "int_kiotviet__invoices", "package": null, "version": null}, {"name": "int_kiotviet__returns", "package": null, "version": null}, {"name": "int_nhanhvn__ordersdetails", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.sado_analytics_services.int_kiotviet__invoices", "model.sado_analytics_services.int_kiotviet__returns", "model.sado_analytics_services.int_nhanhvn__ordersdetails"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__transactions.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    invoices.*,\n    to_hex(md5(cast(coalesce(cast(transaction_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS transaction_source_id,\n    to_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS branch_revenue_id,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__invoices` invoices\nUNION ALL\nSELECT\n    returns.*,\n    to_hex(md5(cast(coalesce(cast(transaction_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS transaction_source_id,\n    to_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS branch_revenue_id,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`int_kiotviet__returns` returns\nUNION ALL\nSELECT\n    order_details.*,\n    to_hex(md5(cast(coalesce(cast(transaction_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS transaction_source_id,\n    to_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS branch_revenue_id,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`int_nhanhvn__ordersdetails` order_details", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.orders_items": {"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "orders_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/orders_items.sql", "original_file_path": "models/marts/online_sales/orders_items.sql", "unique_id": "model.sado_analytics_services.orders_items", "fqn": ["sado_analytics_services", "marts", "online_sales", "orders_items"], "alias": "orders_items", "checksum": {"name": "sha256", "checksum": "4c6be3f876b2c26919bfb31dff34305a94dbf79290913742cea2694c799c3c64"}, "config": {"enabled": true, "alias": null, "schema": "online_sales", "database": null, "tags": ["incremental", "fact", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["order_id", "product_id", "price"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "created_date", "data_type": "datetime", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "nhanhvn"], "description": "", "columns": {"order_id": {"name": "order_id", "description": "Id \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "sales_channel_id": {"name": "sales_channel_id", "description": "", "meta": {}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "T\u00ean kho h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Id kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "ID ng\u01b0\u1eddi t\u1ea1o \u0111\u01a1n", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "traffic_source_id": {"name": "traffic_source_id", "description": "", "meta": {}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "order_type": {"name": "order_type", "description": "Lo\u1ea1i \u0111\u01a1n h\u00e0ng (Shipping | Shopping)", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "order_status": {"name": "order_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Th\u1eddi gian t\u1ea1o \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "DATETIME", "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "ID s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "service_name": {"name": "service_name", "description": "T\u00ean d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "delivery_date": {"name": "delivery_date", "description": "", "meta": {}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 b\u00e1n l\u1ebb s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "ship_address": {"name": "ship_address", "description": "\u0110\u1ecba ch\u1ec9 giao h\u00e0ng \u0111\u1ebfn c\u1ea5p ph\u01b0\u1eddng/x\u00e3", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "item_discount": {"name": "item_discount", "description": "Chi\u1ebft kh\u1ea5u, theo s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "order_discount": {"name": "order_discount", "description": "Chi\u1ebft kh\u1ea5u, theo \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "money_used_points": {"name": "money_used_points", "description": "S\u1ed1 ti\u1ec1n ti\u00eau \u0111i\u1ec3m \u0111\u00e3 ti\u00eau", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "fulfillment_time": {"name": "fulfillment_time", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "item_gross_amount": {"name": "item_gross_amount", "description": "Gi\u00e1 tr\u1ecb s\u1ea3n ph\u1ea9m sau chi\u1ebft kh\u1ea5u", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "delivery_fee": {"name": "delivery_fee", "description": "Chi ph\u00ed cho h\u00e3ng v\u1eadn chuy\u1ec3n, bao g\u1ed3m ph\u00ed giao h\u00e0ng & ph\u00ed thu h\u1ed9", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "sub_total": {"name": "sub_total", "description": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng sau chi\u1ebft kh\u1ea5u", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "order_total_lines": {"name": "order_total_lines", "description": "S\u1ed1 l\u01b0\u1ee3ng line trong \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/orders_items.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "online_sales", "tags": ["incremental", "fact", "nhanhvn"], "partition_by": {"field": "created_date", "data_type": "datetime", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": ["order_id", "product_id", "price"], "on_schema_change": "sync_all_columns"}, "created_at": 1732268180.5685587, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`orders_items`", "raw_code": "{{ config(\n    tags = ['incremental', 'fact','nhanhvn'],\n    materialized = 'incremental',\n    partition_by ={ 'field': 'created_date',\n    'data_type': 'datetime',\n    'granularity': 'day' },\n    incremental_strategy = 'merge',\n    unique_key = ['order_id','product_id','price'],\n    on_schema_change = 'sync_all_columns'\n) }}\n\n{%set order_statuses = ['M\u1edbi',\n        'Ch\u1edd x\u00e1c nh\u1eadn',\n        '\u0110ang x\u00e1c nh\u1eadn',\n        '\u0110\u00e3 x\u00e1c nh\u1eadn',\n        '\u0110\u1ed5i kho h\u00e0ng',\n        '\u0110ang \u0111\u00f3ng g\u00f3i',\n        '\u0110\u00e3 \u0111\u00f3ng g\u00f3i',\n        'Ch\u1edd thu gom',\n        '\u0110ang chuy\u1ec3n',\n        'Th\u00e0nh c\u00f4ng']%}\nwith orders as (\n    SELECT\n    orders.* except(products),\n    products.product_id,\n    products.product_code,\n    products.price,\n    sum(products.quantity) quantity,\n    sum(products.item_discount) item_discount,\nFROM\n    {{ ref('stg_nhanhvn__ordersdetails') }}\n    orders,\n    unnest(products) products\n    {% if is_incremental() %}\n      where date(last_sync) >= date(_dbt_max_partition)\n    {% endif %}\n    {{dbt_utils.group_by(41)}}\n\n)\n\nSELECT\n    orders.order_id,\n    orders.sales_channel_id,\n    orders.depot_name,\n    orders.customer_id,\n    COALESCE(\n        orders.created_by_id,\n        orders.sale_id\n    ) AS created_by_id,\n    orders.traffic_source_id,\n    orders.order_type,\n    orders.order_status,\n    orders.created_date,\n    orders.product_id,\n    orders.product_code,\n    carriers.service_name,\n    orders.delivery_date,\n    orders.price,\n    orders.quantity,\n    orders.ship_address,\n    orders.item_discount,\n    orders.last_sync,\n    orders.order_discount /(COUNT(product_id) over w1) order_discount,\n    orders.money_used_points /(COUNT(product_id) over w1) AS money_used_points,\n    date_diff(orders.delivery_date, DATE(orders.created_date), DAY) /(COUNT(product_id) over w1) AS fulfillment_time,\n    ((orders.price - orders.item_discount) * orders.quantity) AS item_gross_amount,\n    (\n        orders.ship_fee + orders.cod_fee\n    ) /(COUNT(product_id) over w1) AS delivery_fee,\n    (\n        orders.receivables + orders.money_transfer + orders.money_deposit + orders.customer_ship_fee\n    ) /(COUNT(product_id) over w1) AS sub_total,\n    (COUNT(product_id) over w1) AS order_total_lines,\nFROM\n    orders\n    LEFT JOIN {{ ref('stg_nhanhvn__carriers') }}\n    carriers\n    ON orders.carrier_id = carriers.carrier_id\n    AND orders.service_id = carriers.service_id\nWHERE\n    orders.order_status IN (\n        '{{order_statuses|join(\"','\")}}'\n    ) window w1 AS (\n        PARTITION BY orders.order_id\n    )", "language": "sql", "refs": [{"name": "stg_nhanhvn__ordersdetails", "package": null, "version": null}, {"name": "stg_nhanhvn__carriers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_nhanhvn__ordersdetails", "model.sado_analytics_services.stg_nhanhvn__carriers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/online_sales/orders_items.sql", "compiled": true, "compiled_code": "\n\n\nwith orders as (\n    SELECT\n    orders.* except(products),\n    products.product_id,\n    products.product_code,\n    products.price,\n    sum(products.quantity) quantity,\n    sum(products.item_discount) item_discount,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`\n    orders,\n    unnest(products) products\n    \n      where date(last_sync) >= date(_dbt_max_partition)\n    \n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41\n\n)\n\nSELECT\n    orders.order_id,\n    orders.sales_channel_id,\n    orders.depot_name,\n    orders.customer_id,\n    COALESCE(\n        orders.created_by_id,\n        orders.sale_id\n    ) AS created_by_id,\n    orders.traffic_source_id,\n    orders.order_type,\n    orders.order_status,\n    orders.created_date,\n    orders.product_id,\n    orders.product_code,\n    carriers.service_name,\n    orders.delivery_date,\n    orders.price,\n    orders.quantity,\n    orders.ship_address,\n    orders.item_discount,\n    orders.last_sync,\n    orders.order_discount /(COUNT(product_id) over w1) order_discount,\n    orders.money_used_points /(COUNT(product_id) over w1) AS money_used_points,\n    date_diff(orders.delivery_date, DATE(orders.created_date), DAY) /(COUNT(product_id) over w1) AS fulfillment_time,\n    ((orders.price - orders.item_discount) * orders.quantity) AS item_gross_amount,\n    (\n        orders.ship_fee + orders.cod_fee\n    ) /(COUNT(product_id) over w1) AS delivery_fee,\n    (\n        orders.receivables + orders.money_transfer + orders.money_deposit + orders.customer_ship_fee\n    ) /(COUNT(product_id) over w1) AS sub_total,\n    (COUNT(product_id) over w1) AS order_total_lines,\nFROM\n    orders\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__carriers`\n    carriers\n    ON orders.carrier_id = carriers.carrier_id\n    AND orders.service_id = carriers.service_id\nWHERE\n    orders.order_status IN (\n        'M\u1edbi','Ch\u1edd x\u00e1c nh\u1eadn','\u0110ang x\u00e1c nh\u1eadn','\u0110\u00e3 x\u00e1c nh\u1eadn','\u0110\u1ed5i kho h\u00e0ng','\u0110ang \u0111\u00f3ng g\u00f3i','\u0110\u00e3 \u0111\u00f3ng g\u00f3i','Ch\u1edd thu gom','\u0110ang chuy\u1ec3n','Th\u00e0nh c\u00f4ng'\n    ) window w1 AS (\n        PARTITION BY orders.order_id\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.fct_sp__orders": {"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "fct_sp__orders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/fct_sp__orders.sql", "original_file_path": "models/marts/online_sales/fct_sp__orders.sql", "unique_id": "model.sado_analytics_services.fct_sp__orders", "fqn": ["sado_analytics_services", "marts", "online_sales", "fct_sp__orders"], "alias": "fct_sp__orders", "checksum": {"name": "sha256", "checksum": "bd860e4f47565a49e1e3265acde392faa23c678d56d7d8e5b7397581573cd27f"}, "config": {"enabled": true, "alias": null, "schema": "online_sales", "database": null, "tags": ["fact", "shopee", "table"], "meta": {"joins": [{"join": "calendar", "sql_on": "${fct_sp__orders.transaction_date} = ${calendar.date}"}, {"join": "dim__inventory_classes", "sql_on": "${dim__inventory_classes.class_code} = ${fct_sp__orders.class_code}"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "shopee", "table"], "description": "", "columns": {"order_number": {"name": "order_number", "description": "Unique identifier for each order placed", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_orders": {"type": "count_distinct", "label": "Orders", "group_label": "Orders"}, "m_num_completed_orders": {"type": "count_distinct", "label": "Completed Orders", "group_label": "Orders", "filters": [{"order_status": "COMPLETED"}]}, "m_num_cancelled_orders": {"type": "count_distinct", "label": "Cancelled Orders", "group_label": "Orders", "filters": [{"order_status": "CANCELLED"}]}, "m_num_shipped_orders": {"type": "count_distinct", "label": "Shipped Orders", "group_label": "Orders", "filters": [{"order_status": "SHIPPED"}]}, "m_num_pending_orders": {"type": "count_distinct", "label": "Wait for Confirm Orders", "group_label": "Orders", "filters": [{"order_status": "TO_CONFIRM_RECEIVE"}]}, "m_num_to_return_orders": {"type": "count_distinct", "label": "Wait for Return Orders", "group_label": "Orders", "filters": [{"order_status": "TO_RETURN"}]}, "m_num_unpaid_orders": {"type": "count_distinct", "label": "Unpaid Orders", "group_label": "Orders", "filters": [{"order_status": "UNPAID"}]}, "m_num_fulfilled_orders": {"type": "count_distinct", "label": "Fulfilled Orders", "group_label": "Orders", "filters": [{"order_status": ["SHIPPED", "COMPLETED"]}]}, "m_num_failed_orders": {"type": "count_distinct", "label": "Failed Orders", "group_label": "Orders", "filters": [{"order_status": ["CANCELLED", "TO_RETURN"]}]}, "m_canceled_rate": {"type": "number", "sql": "safe_divide(${m_num_cancelled_orders},${m_num_orders})", "label": "Canceled Rate", "group_label": "Orders", "format": "percent", "round": 2}, "m_failed_rate": {"type": "number", "sql": "safe_divide(${m_num_failed_orders},${m_num_orders})", "label": "Failed Rate", "group_label": "Orders", "format": "percent", "round": 2}}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "order_status": {"name": "order_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "cancel_by": {"name": "cancel_by", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "cancel_reason": {"name": "cancel_reason", "description": "This field provides the reason for the cancellation of an order", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "add_on_deal": {"name": "add_on_deal", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "add_on_deal_id": {"name": "add_on_deal_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "item_id": {"name": "item_id", "description": "Unique identifier for the item that was purchased in the order", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "item_name": {"name": "item_name", "description": "The name of the item that was purchased in the order", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "item_sku": {"name": "item_sku", "description": "Stock Keeping Unit (SKU) of the item that was purchased", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "main_item": {"name": "main_item", "description": "Indicates whether the item is the main item in the order or an add-on", "meta": {"dimension": {"type": "boolean"}}, "data_type": "boolean", "constraints": [], "quote": true, "tags": []}, "model_id": {"name": "model_id", "description": "The unique identifier for the product model", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "model_name": {"name": "model_name", "description": "The name of the product model", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "model_discounted_price": {"name": "model_discounted_price", "description": "The price of the product model after any discounts have been applied", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_item_value": {"type": "sum", "label": "Item Sold Value", "group_label": "Orders", "compact": "millions", "round": 1}, "m_item_collected_value": {"type": "sum", "label": "Collected Item Value", "group_label": "Orders", "compact": "millions", "round": 1, "filters": [{"order_status": "COMPLETED"}]}, "m_discounted_value": {"type": "sum", "label": "Discounted Value", "sql": "${TABLE}.model_original_price-${TABLE}.model_discounted_price", "group_label": "Orders"}, "m_aov": {"type": "number", "sql": "safe_divide(${m_item_collected_value},${m_num_completed_orders})", "round": 2, "group_label": "Orders", "label": "AOV", "compact": "thousands", "description": "Average Order Value"}, "m_ausp": {"type": "number", "sql": "safe_divide(${m_item_collected_value},${m_quantity_sold_completed})", "round": 2, "group_label": "Orders", "compact": "thousands", "label": "AUSP", "description": "Average Unit Selling Price"}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "model_original_price": {"name": "model_original_price", "description": "This field represents the original price of the product model before any discounts or promotions are applied", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_item_original_value": {"type": "sum", "label": "Item Original Value", "group_label": "Orders", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "model_quantity_purchased": {"name": "model_quantity_purchased", "description": "Indicates the quantity of a particular product model that was purchased in a single order", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_quantity_sold": {"type": "sum", "label": "Quantity Sold", "group_label": "Orders"}, "m_quantity_sold_completed": {"type": "sum", "label": "Quantity Sold Completed", "group_label": "Orders", "filters": [{"order_status": "COMPLETED"}]}, "m_quantity_per_order": {"type": "number", "sql": "safe_divide(${m_quantity_sold_completed},${m_num_completed_orders})", "label": "Quantity per Order", "group_label": "Orders", "round": 2}, "m_quantity_sold_main": {"type": "sum", "label": "Quantity Sold Main", "group_label": "Orders", "filters": [{"main_item": true}]}, "m_quantity_sold_add_on": {"type": "sum", "label": "Quantity Sold Add On", "group_label": "Orders", "filters": [{"main_item": false}, {"model_discounted_price": ">0"}]}, "m_cross_sale_ratio": {"type": "number", "sql": "safe_divide(${m_quantity_sold_add_on},${m_quantity_sold_main})", "label": "Cross Sale Ratio", "group_label": "Orders", "round": 2}, "m_quantity_sold_cancelled": {"type": "sum", "label": "Quantity Sold Cancelled", "group_label": "Orders", "filters": [{"order_status": "CANCELLED"}]}, "m_quantity_sold_return": {"type": "sum", "label": "Quantity Sold Return", "group_label": "Orders", "filters": [{"order_status": "TO_RETURN"}]}, "m_lost_quantity_sold": {"type": "sum", "label": "Lost Quantity Sold", "group_label": "Orders", "filters": [{"order_status": ["TO_RETURN", "CANCELLED"]}]}, "m_lost_sold_rate": {"type": "number", "sql": "safe_divide(${m_lost_quantity_sold},${m_quantity_sold})", "label": "Lost Sold Rate", "group_label": "Orders", "format": "percent", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "model_sku": {"name": "model_sku", "description": "Stock Keeping Unit (SKU) of the product model", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "order_item_id": {"name": "order_item_id", "description": "Unique identifier for each item in an order", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "promotion_group_id": {"name": "promotion_group_id", "description": "Unique identifier for a group of promotions", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "promotion_id": {"name": "promotion_id", "description": "Unique identifier for each promotion", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "line_amount": {"name": "line_amount", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_line_amount": {"type": "sum", "label": "Order Total Amount", "group_label": "Orders", "compact": "millions", "round": 1}, "m_order_discount": {"type": "number", "sql": "${m_line_amount}-${m_item_value}", "label": "Order Discount", "group_label": "Orders"}, "m_revenue": {"type": "sum", "label": "Collected Revenue", "group_label": "Orders", "compact": "millions", "round": 1, "filters": [{"order_status": "COMPLETED"}]}, "m_revenue_shipped": {"type": "sum", "label": "Revenue (Shipped)", "group_label": "Orders", "compact": "millions", "round": 1, "filters": [{"order_status": "SHIPPED"}]}, "m_revenue_wait_for_confirm": {"type": "sum", "label": "Revenue (Wait for Confirm)", "group_label": "Orders", "compact": "millions", "round": 1, "filters": [{"order_status": "TO_CONFIRM_RECEIVE"}]}, "m_pending_revenue": {"type": "sum", "label": "Pending Revenue", "group_label": "Orders", "compact": "millions", "round": 1, "filters": [{"order_status": ["SHIPPED", "TO_CONFIRM_RECEIVE"]}]}, "m_lost_revenue_to_return": {"type": "sum", "label": "Wait for return Revenue", "group_label": "Orders", "compact": "millions", "round": 1, "filters": [{"order_status": "TO_RETURN"}]}, "m_lost_revenue_cancelled": {"type": "sum", "label": "Cancelled Revenue", "group_label": "Orders", "compact": "millions", "round": 1, "filters": [{"order_status": "CANCELLED"}]}, "m_lost_revenue": {"type": "sum", "label": "Lost Revenue", "group_label": "Orders", "compact": "millions", "round": 1, "filters": [{"order_status": ["CANCELLED", "TO_RETURN"]}]}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "class_code": {"name": "class_code", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "promotion_type": {"name": "promotion_type", "description": "The type of promotion applied to the order", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${fct_sp__orders.transaction_date} = ${calendar.date}"}, {"join": "dim__inventory_classes", "sql_on": "${dim__inventory_classes.class_code} = ${fct_sp__orders.class_code}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/fct_sp__orders.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "online_sales", "meta": {"joins": [{"join": "calendar", "sql_on": "${fct_sp__orders.transaction_date} = ${calendar.date}"}, {"join": "dim__inventory_classes", "sql_on": "${dim__inventory_classes.class_code} = ${fct_sp__orders.class_code}"}]}, "tags": ["fact", "shopee", "table"]}, "created_at": 1732268180.5559723, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`fct_sp__orders`", "raw_code": "{{\n  config(\n    tags=['fact', 'shopee','table'],\n    materialized='table'\n    )\n}}\n\n{% set promotion_types = {\n    \"product_promotion\":\"\u01afu \u0111\u00e3i s\u1ea3n ph\u1ea9m\", \n    \"flash_sale\":\"Flash Sale\", \n    \"bundle_deal\": \"\u01afu \u0111\u00e3i combo\", \n    \"add_on_deal_main\": \"\u01afu \u0111\u00e3i mua k\u00e8m s\u1ea3n ph\u1ea9m ch\u00ednh\", \n    \"add_on_deal_sub\": \"\u01afu \u0111\u00e3i mua k\u00e8m s\u1ea3n ph\u1ea9m ph\u1ee5\",\n}\n%}\n\nwith extracted_values as (\n    select \no.order_sn as order_number,\no.order_status,\no.cancel_by,\no.cancel_reason,\ndate(o.create_time) as transaction_date,\no.payment_method,\njson_value(item_list,'$.add_on_deal') as add_on_deal,\njson_value(item_list,'$.add_on_deal_id') as add_on_deal_id,\njson_value(item_list,'$.item_id') as item_id,\njson_value(item_list,'$.item_name') as item_name,\njson_value(item_list,'$.item_sku') as item_sku,\nsafe_cast(json_value(item_list,'$.main_item') as bool) as main_item,\njson_value(item_list,'$.model_id') as model_id,\njson_value(item_list,'$.model_name') as model_name,\nsafe_cast(json_value(item_list,'$.model_discounted_price') as float64) as model_discounted_price,\nsafe_cast(json_value(item_list,'$.model_original_price') as float64) as model_original_price,\nsafe_cast(json_value(item_list,'$.model_quantity_purchased') as int64) as model_quantity_purchased,\njson_value(item_list,'$.model_sku') as model_sku,\nCOALESCE(regexp_extract(json_value(item_list,'$.model_sku'), r'[A-Z]{3}(2[1-5])'), \"C\u0169\") AS year,\njson_value(item_list,'$.order_item_id') as order_item_id,\njson_value(item_list,'$.promotion_group_id') as promotion_group_id,\njson_value(item_list,'$.promotion_id') as promotion_id,\nnullif(json_value(item_list,'$.promotion_type'),\"\") as promotion_type,\nsafe_divide(o.total_amount, count(json_value(item_list,'$.model_sku')) over(partition by o.order_sn)) as line_amount,\nfrom {{ ref(\"stg_sp__orders\") }} o\nleft join unnest(item_list) as item_list\n)\nselect \n    * except(promotion_type),\n    regexp_extract(model_sku,r'-?(\\w+)') as product_code,\n    {# COALESCE(\n        REGEXP_EXTRACT(\n            regexp_extract(model_sku,r'-?(\\w+)$'),\n            r'(?:Y0|YY|00|YB)?([A-Z]{3}\\d{5})'), \n            REGEXP_EXTRACT(model_sku,r'(?:Y0|YY|00|YB)?([A-Z]{3}\\d{5})')\n            ) as class_code, #}\n    CASE\n        WHEN year = \"24\" THEN regexp_extract(model_sku, r\"^(?:[ZXY0]{0,3})([BC0][A-Z]{3}[0-9]{3,5})\")\n        else regexp_extract(model_sku, r\"^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})\") end\n    AS class_code,\n    case  {% for k,v in promotion_types.items() -%}\n    when promotion_type = \"{{k}}\" then \"{{v}}\"\n    {% endfor -%}\n    end as promotion_type\nfrom extracted_values", "language": "sql", "refs": [{"name": "stg_sp__orders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_sp__orders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/online_sales/fct_sp__orders.sql", "compiled": true, "compiled_code": "\n\n\n\nwith extracted_values as (\n    select \no.order_sn as order_number,\no.order_status,\no.cancel_by,\no.cancel_reason,\ndate(o.create_time) as transaction_date,\no.payment_method,\njson_value(item_list,'$.add_on_deal') as add_on_deal,\njson_value(item_list,'$.add_on_deal_id') as add_on_deal_id,\njson_value(item_list,'$.item_id') as item_id,\njson_value(item_list,'$.item_name') as item_name,\njson_value(item_list,'$.item_sku') as item_sku,\nsafe_cast(json_value(item_list,'$.main_item') as bool) as main_item,\njson_value(item_list,'$.model_id') as model_id,\njson_value(item_list,'$.model_name') as model_name,\nsafe_cast(json_value(item_list,'$.model_discounted_price') as float64) as model_discounted_price,\nsafe_cast(json_value(item_list,'$.model_original_price') as float64) as model_original_price,\nsafe_cast(json_value(item_list,'$.model_quantity_purchased') as int64) as model_quantity_purchased,\njson_value(item_list,'$.model_sku') as model_sku,\nCOALESCE(regexp_extract(json_value(item_list,'$.model_sku'), r'[A-Z]{3}(2[1-5])'), \"C\u0169\") AS year,\njson_value(item_list,'$.order_item_id') as order_item_id,\njson_value(item_list,'$.promotion_group_id') as promotion_group_id,\njson_value(item_list,'$.promotion_id') as promotion_id,\nnullif(json_value(item_list,'$.promotion_type'),\"\") as promotion_type,\nsafe_divide(o.total_amount, count(json_value(item_list,'$.model_sku')) over(partition by o.order_sn)) as line_amount,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_sp__orders` o\nleft join unnest(item_list) as item_list\n)\nselect \n    * except(promotion_type),\n    regexp_extract(model_sku,r'-?(\\w+)') as product_code,\n    \n    CASE\n        WHEN year = \"24\" THEN regexp_extract(model_sku, r\"^(?:[ZXY0]{0,3})([BC0][A-Z]{3}[0-9]{3,5})\")\n        else regexp_extract(model_sku, r\"^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})\") end\n    AS class_code,\n    case  when promotion_type = \"product_promotion\" then \"\u01afu \u0111\u00e3i s\u1ea3n ph\u1ea9m\"\n    when promotion_type = \"flash_sale\" then \"Flash Sale\"\n    when promotion_type = \"bundle_deal\" then \"\u01afu \u0111\u00e3i combo\"\n    when promotion_type = \"add_on_deal_main\" then \"\u01afu \u0111\u00e3i mua k\u00e8m s\u1ea3n ph\u1ea9m ch\u00ednh\"\n    when promotion_type = \"add_on_deal_sub\" then \"\u01afu \u0111\u00e3i mua k\u00e8m s\u1ea3n ph\u1ea9m ph\u1ee5\"\n    end as promotion_type\nfrom extracted_values", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.calendar": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "calendar", "resource_type": "model", "package_name": "sado_analytics_services", "path": "utilities/calendar.sql", "original_file_path": "models/utilities/calendar.sql", "unique_id": "model.sado_analytics_services.calendar", "fqn": ["sado_analytics_services", "utilities", "calendar"], "alias": "calendar", "checksum": {"name": "sha256", "checksum": "82de39f5b12ac223fe0c85022d6f5f72cdb5a254bad3fae68e03e44a512fe199"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "The 'calendar' model generates a calendar table with various date-related information. This calendar table can be used for analyzing and reporting data based on different time periods.", "columns": {"date": {"name": "date", "description": "", "meta": {"metrics": {"no_days": {"type": "count_distinct", "label": "Days in Month", "group_label": "General metrics"}}, "dimension": {"type": "date", "time_intervals": ["DAY", "WEEK", "MONTH", "YEAR", "QUARTER"]}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "day_of_month": {"name": "day_of_month", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "day_name": {"name": "day_name", "description": "", "meta": {"dimension": {"type": "string"}, "additional_dimensions": {"d_day_nam_short": {"type": "string", "sql": "format_date('%a',${TABLE}.date)", "label": "Day name short"}}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "start_of_month": {"name": "start_of_month", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "end_of_month": {"name": "end_of_month", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "start_of_week": {"name": "start_of_week", "description": "", "meta": {"dimension": {"type": "date"}, "additional_dimensions": {"d_week": {"type": "string", "sql": "format_date('%g',${TABLE}.start_of_week)||\"T\"||format_date('%W',${TABLE}.start_of_week)||\" \"||format_date('%d/%m',${TABLE}.start_of_week)||\"-\"||format_date('%d/%m',${TABLE}.end_of_week)", "label": "Week range"}}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "end_of_week": {"name": "end_of_week", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "month_name": {"name": "month_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "year_month": {"name": "year_month", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "year_quarter": {"name": "year_quarter", "description": "", "meta": {}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "YEAR": {"name": "YEAR", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "MONTH": {"name": "MONTH", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "month_day": {"name": "month_day", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "day_of_week": {"name": "day_of_week", "description": "", "meta": {}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "period": {"name": "period", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "period_code": {"name": "period_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/utilities/calendar.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.5808904, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`calendar`", "raw_code": "WITH date_spine AS (\n    {{ dbt_utils.date_spine(\n        start_date = \"cast('2018-01-01' as Date)\",\n        datepart = \"day\",\n        end_date = \"date_add( current_date() , interval 6 month)\"\n    ) }}\n),\n_milestone AS (\n    SELECT\n        milestones.*\n    FROM\n        {{ ref(\"stg_gsheet__facebook_budget\") }},\n        unnest(milestones) milestones\n),\ncalendar AS (\n    SELECT\n        DISTINCT DATE(date_day) AS date,\n        EXTRACT(DAY FROM date_day) AS day_of_month,\n        format_date('%A',date_day) AS day_name,\n        DATE_TRUNC(DATE(date_day), MONTH) AS start_of_month,\n        LAST_DAY(date_day,MONTH) AS end_of_month,\n        DATE_TRUNC(DATE(date_day), isoweek) AS start_of_week,\n        LAST_DAY(DATE(date_day), isoweek) AS end_of_week,\n        format_date('%B',date_day) AS month_name,\n        format_date('%Y.%m',date_day) AS year_month,\n        format_date('%YQ%Q',date_day) AS year_quarter,\n        EXTRACT(YEAR FROM date_day) AS YEAR,\n        EXTRACT(MONTH FROM date_day) AS MONTH,\n        format_date('%m.%d', date_day) as month_day,\n        format_date('%u', date_day) as day_of_week,\n\n    FROM\n        date_spine\n),\ncalendar_fmt AS (\n    SELECT\n        *,\n        \"Tu\u1ea7n \" || DENSE_RANK() over (\n            PARTITION BY start_of_month\n            ORDER BY\n                GREATEST(\n                    start_of_month,\n                    start_of_week\n                ) ASC\n        ) || ' (' || format_date(\"%d/%m\", GREATEST(start_of_month, start_of_week)) || ' - ' || format_date(\"%d/%m\", LEAST(end_of_week, end_of_month)) || ')' AS period,\n        format_date(\n            \"%Y.%mT\",\n            DATE\n        ) || DENSE_RANK() over (\n            PARTITION BY start_of_month\n            ORDER BY\n                GREATEST(\n                    start_of_month,\n                    start_of_week\n                ) ASC\n        ) AS period_code\n    FROM\n        calendar\n)\nSELECT\n    distinct\n    d.*\nEXCEPT(\n        period,\n        period_code\n    ),\n    COALESCE(\n        b.milestone_name,\n        d.period\n    ) AS period,\n    COALESCE(\n        CONCAT(format_date('%Y.%m', d.date), 'T', regexp_extract(b.milestone_name, r'Tu\u1ea7n (\\d+)')),\n        d.period_code\n    ) AS period_code\nFROM\n    calendar_fmt d\n    LEFT JOIN _milestone b\n    ON d.date >= b.start\n    and d.date <= b.end", "language": "sql", "refs": [{"name": "stg_gsheet__facebook_budget", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.date_spine"], "nodes": ["model.sado_analytics_services.stg_gsheet__facebook_budget"]}, "compiled_path": "target/compiled/sado_analytics_services/models/utilities/calendar.sql", "compiled": true, "compiled_code": "WITH date_spine AS (\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 2698\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n        datetime_add(\n            cast( cast('2018-01-01' as Date) as datetime),\n        interval row_number() over (order by 1) - 1 day\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= date_add( current_date() , interval 6 month)\n\n)\n\nselect * from filtered\n\n\n),\n_milestone AS (\n    SELECT\n        milestones.*\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__facebook_budget`,\n        unnest(milestones) milestones\n),\ncalendar AS (\n    SELECT\n        DISTINCT DATE(date_day) AS date,\n        EXTRACT(DAY FROM date_day) AS day_of_month,\n        format_date('%A',date_day) AS day_name,\n        DATE_TRUNC(DATE(date_day), MONTH) AS start_of_month,\n        LAST_DAY(date_day,MONTH) AS end_of_month,\n        DATE_TRUNC(DATE(date_day), isoweek) AS start_of_week,\n        LAST_DAY(DATE(date_day), isoweek) AS end_of_week,\n        format_date('%B',date_day) AS month_name,\n        format_date('%Y.%m',date_day) AS year_month,\n        format_date('%YQ%Q',date_day) AS year_quarter,\n        EXTRACT(YEAR FROM date_day) AS YEAR,\n        EXTRACT(MONTH FROM date_day) AS MONTH,\n        format_date('%m.%d', date_day) as month_day,\n        format_date('%u', date_day) as day_of_week,\n\n    FROM\n        date_spine\n),\ncalendar_fmt AS (\n    SELECT\n        *,\n        \"Tu\u1ea7n \" || DENSE_RANK() over (\n            PARTITION BY start_of_month\n            ORDER BY\n                GREATEST(\n                    start_of_month,\n                    start_of_week\n                ) ASC\n        ) || ' (' || format_date(\"%d/%m\", GREATEST(start_of_month, start_of_week)) || ' - ' || format_date(\"%d/%m\", LEAST(end_of_week, end_of_month)) || ')' AS period,\n        format_date(\n            \"%Y.%mT\",\n            DATE\n        ) || DENSE_RANK() over (\n            PARTITION BY start_of_month\n            ORDER BY\n                GREATEST(\n                    start_of_month,\n                    start_of_week\n                ) ASC\n        ) AS period_code\n    FROM\n        calendar\n)\nSELECT\n    distinct\n    d.*\nEXCEPT(\n        period,\n        period_code\n    ),\n    COALESCE(\n        b.milestone_name,\n        d.period\n    ) AS period,\n    COALESCE(\n        CONCAT(format_date('%Y.%m', d.date), 'T', regexp_extract(b.milestone_name, r'Tu\u1ea7n (\\d+)')),\n        d.period_code\n    ) AS period_code\nFROM\n    calendar_fmt d\n    LEFT JOIN _milestone b\n    ON d.date >= b.start\n    and d.date <= b.end", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.weather": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "weather", "resource_type": "model", "package_name": "sado_analytics_services", "path": "utilities/weather.sql", "original_file_path": "models/utilities/weather.sql", "unique_id": "model.sado_analytics_services.weather", "fqn": ["sado_analytics_services", "utilities", "weather"], "alias": "weather", "checksum": {"name": "sha256", "checksum": "daff8fb032abb80c754b619b5efcfccf1ffb73b634f78f68cdf8ed7b8ba1ab1b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "This model aggregates weather data by date, providing maximum, minimum, and mean temperatures, rain sum, and maximum wind speed for each location. It also calculates rolling averages for temperature and apparent temperature over 10, 15, and 30 days.", "columns": {"date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "temperature_2m_max": {"name": "temperature_2m_max", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "temperature_2m_min": {"name": "temperature_2m_min", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "temperature_2m_mean": {"name": "temperature_2m_mean", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apparent_temperature_max": {"name": "apparent_temperature_max", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apparent_temperature_min": {"name": "apparent_temperature_min", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "apparent_temperature_mean": {"name": "apparent_temperature_mean", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rain_sum": {"name": "rain_sum", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wind_speed10m_max": {"name": "wind_speed10m_max", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "lat": {"name": "lat", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "long": {"name": "long", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rain_pct": {"name": "rain_pct", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "selling_hour_rain": {"name": "selling_hour_rain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "selling_hour_avg_temp": {"name": "selling_hour_avg_temp", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/utilities/weather.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.591312, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`weather`", "raw_code": "WITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('misc', 'weather'), partition_by = 'lat,long,time', order_by = \"_batched_at desc\",) }}\n),\n\nsource_hourly AS (\n    {{ dbt_utils.deduplicate(relation = source('misc', 'weather_hourly'), partition_by = 'lat,long,time', order_by = \"_batched_at desc\",) }}\n),\n\nhourly as (\n    select date(source_hourly.time) as date,\n    extract(hour from timestamp(source_hourly.time)) as hour,\n    source_hourly.rain,\n    source_hourly.temperature2m,\n    source_hourly.lat,\n    source_hourly.long,\n    from source_hourly\n),\n\nhourly_aggregate as (\n    select \n    hourly.date,\n    hourly.lat,\n    hourly.long,\n    count( distinct case when hourly.rain>=3 then hourly.hour end) as raining_hour,\n    sum(hourly.rain) as rain_sum,\n    avg(hourly.temperature2m) as avg_temp,\n    from hourly\n    where hourly.hour between 9 and 23\n    group by 1,2,3\n)\n\nSELECT\n    DATE(\n        source.time\n    ) AS date,\n    source.temperature2mMax AS temperature_2m_max,\n    source.temperature2mMin AS temperature_2m_min,\n    source.temperature2mMean AS temperature_2m_mean,\n    source.apparentTemperatureMax AS apparent_temperature_max,\n    source.apparentTemperatureMin AS apparent_temperature_min,\n    source.apparentTemperatureMean AS apparent_temperature_mean,\n    source.rainSum AS rain_sum,\n    source.windSpeed10mMax AS wind_speed10m_max,\n    source.lat AS lat,\n    source.long AS long,\n    safe_divide(hourly_aggregate.raining_hour,14) as rain_pct,\n    hourly_aggregate.rain_sum as selling_hour_rain,\n    hourly_aggregate.avg_temp as selling_hour_avg_temp,\nFROM\n    source\n    left join hourly_aggregate \n    on source.lat= hourly_aggregate.lat \n    and source.long = hourly_aggregate.long \n    and DATE(source.time) = hourly_aggregate.date", "language": "sql", "refs": [], "sources": [["misc", "weather"], ["misc", "weather_hourly"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.misc.weather", "source.sado_analytics_services.misc.weather_hourly"]}, "compiled_path": "target/compiled/sado_analytics_services/models/utilities/weather.sql", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Misc`.`p__weather__*` original\n        group by lat,long,time\n    )\n),\n\nsource_hourly AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Misc`.`p__weather_hourly__*` original\n        group by lat,long,time\n    )\n),\n\nhourly as (\n    select date(source_hourly.time) as date,\n    extract(hour from timestamp(source_hourly.time)) as hour,\n    source_hourly.rain,\n    source_hourly.temperature2m,\n    source_hourly.lat,\n    source_hourly.long,\n    from source_hourly\n),\n\nhourly_aggregate as (\n    select \n    hourly.date,\n    hourly.lat,\n    hourly.long,\n    count( distinct case when hourly.rain>=3 then hourly.hour end) as raining_hour,\n    sum(hourly.rain) as rain_sum,\n    avg(hourly.temperature2m) as avg_temp,\n    from hourly\n    where hourly.hour between 9 and 23\n    group by 1,2,3\n)\n\nSELECT\n    DATE(\n        source.time\n    ) AS date,\n    source.temperature2mMax AS temperature_2m_max,\n    source.temperature2mMin AS temperature_2m_min,\n    source.temperature2mMean AS temperature_2m_mean,\n    source.apparentTemperatureMax AS apparent_temperature_max,\n    source.apparentTemperatureMin AS apparent_temperature_min,\n    source.apparentTemperatureMean AS apparent_temperature_mean,\n    source.rainSum AS rain_sum,\n    source.windSpeed10mMax AS wind_speed10m_max,\n    source.lat AS lat,\n    source.long AS long,\n    safe_divide(hourly_aggregate.raining_hour,14) as rain_pct,\n    hourly_aggregate.rain_sum as selling_hour_rain,\n    hourly_aggregate.avg_temp as selling_hour_avg_temp,\nFROM\n    source\n    left join hourly_aggregate \n    on source.lat= hourly_aggregate.lat \n    and source.long = hourly_aggregate.long \n    and DATE(source.time) = hourly_aggregate.date", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.metricflow_time_spine": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "metricflow_time_spine", "resource_type": "model", "package_name": "sado_analytics_services", "path": "utilities/metricflow_time_spine.sql", "original_file_path": "models/utilities/metricflow_time_spine.sql", "unique_id": "model.sado_analytics_services.metricflow_time_spine", "fqn": ["sado_analytics_services", "utilities", "metricflow_time_spine"], "alias": "metricflow_time_spine", "checksum": {"name": "sha256", "checksum": "ef806eb3fc733628735283db49040774a56ec48c6e6ca39c703ceb25250128b8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"date_day": {"name": "date_day", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/utilities/metricflow_time_spine.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1732268180.574659, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`metricflow_time_spine`", "raw_code": "{{config(materialized='table')}}\nwith days as (\n    {{dbt_utils.date_spine(\n        'day',\n        \"DATE(2000,01,01)\",\n        \"DATE(2030,01,01)\"\n    )\n    }}\n),\n\nfinal as (\n    select cast(date_day as date) as date_day\n    from days\n)\n\nselect *\nfrom final", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.date_spine"], "nodes": []}, "compiled_path": "target/compiled/sado_analytics_services/models/utilities/metricflow_time_spine.sql", "compiled": true, "compiled_code": "\nwith days as (\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n     + \n    \n    p12.generated_number * power(2, 12)\n     + \n    \n    p13.generated_number * power(2, 13)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n     cross join \n    \n    p as p12\n     cross join \n    \n    p as p13\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 10958\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n        datetime_add(\n            cast( DATE(2000,01,01) as datetime),\n        interval row_number() over (order by 1) - 1 day\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= DATE(2030,01,01)\n\n)\n\nselect * from filtered\n\n\n),\n\nfinal as (\n    select cast(date_day as date) as date_day\n    from days\n)\n\nselect *\nfrom final", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_forecaster__forecast": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_forecaster__forecast", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/forecaster/stg_forecaster__forecast.sql", "original_file_path": "models/staging/forecaster/stg_forecaster__forecast.sql", "unique_id": "model.sado_analytics_services.stg_forecaster__forecast", "fqn": ["sado_analytics_services", "staging", "forecaster", "stg_forecaster__forecast"], "alias": "stg_forecaster__forecast", "checksum": {"name": "sha256", "checksum": "8cbb80dcd4541053509754735a7f24269541e00cbe16b4cb2b96883118b613f9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "forecaster"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "forecaster"], "description": "", "columns": {"forecast_date": {"name": "forecast_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_in_future": {"name": "date_in_future", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mean_estimated": {"name": "mean_estimated", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mean_upper_estimated": {"name": "mean_upper_estimated", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "mean_lower_estimated": {"name": "mean_lower_estimated", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "forecasted_value": {"name": "forecasted_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/forecaster/stg_forecaster__forecast.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "forecaster"]}, "created_at": 1732268180.7149675, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_forecaster__forecast`", "raw_code": "{{\n  config(\n    tags=['view', 'forecaster']\n  )\n}}\nWITH source AS (\n        {{ dbt_utils.deduplicate(\n        relation = source(\n            'forecaster',\n            'forecast'\n        ),\n        partition_by = 'forecast_date',\n        order_by = \"forecast_date\",\n    ) }}\n)\n\nselect \nforecast_date,\nestimates.date as date_in_future,\nestimates.mean_hat as mean_estimated,\nestimates.mean_ci_upper_hat as mean_upper_estimated,\nestimates.mean_ci_lower_hat as mean_lower_estimated,\nexponential_smoothing.forecast as forecasted_value\nfrom source\nleft join unnest(estimates) estimates\nleft join unnest(exponential_smoothing) exponential_smoothing\nwhere estimates.date = exponential_Smoothing.date", "language": "sql", "refs": [], "sources": [["forecaster", "forecast"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.forecaster.forecast"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/forecaster/stg_forecaster__forecast.sql", "compiled": true, "compiled_code": "\nWITH source AS (\n        select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by forecast_date\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`AutoForecaster`.`forecast` original\n        group by forecast_date\n    )\n)\n\nselect \nforecast_date,\nestimates.date as date_in_future,\nestimates.mean_hat as mean_estimated,\nestimates.mean_ci_upper_hat as mean_upper_estimated,\nestimates.mean_ci_lower_hat as mean_lower_estimated,\nexponential_smoothing.forecast as forecasted_value\nfrom source\nleft join unnest(estimates) estimates\nleft join unnest(exponential_smoothing) exponential_smoothing\nwhere estimates.date = exponential_Smoothing.date", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__sales_channels": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__sales_channels", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__sales_channels.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__sales_channels.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__sales_channels", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__sales_channels"], "alias": "stg_nhanhvn__sales_channels", "checksum": {"name": "sha256", "checksum": "98207bebee36403f491a8cd6cc0747c08472c0ca25477deab04fd6e7fbad1360"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"channel": {"name": "channel", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel_id": {"name": "channel_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__sales_channels.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1732268180.7174964, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__sales_channels`", "raw_code": "{{ config(\n    tags = ['view', 'dimension','nhanhvn']\n) }}\n\n{% set sales_channel = [\n    \"Admin\",\"Website\",\"API\",\"Facebook\",\n    \"Instagram\",\"Lazada.vn\",\"Shopee.vn\",\n    \"Sendo.vn\",\"Tiki.vn\",\"Zalo Shop\",\"1Landing.vn\",\n    \"Tiktok Shop\",\"Zalo OA\",\"Shopee Chat\",\"Lazada Chat\",\n    \"Website\",\"S\u00e0n\",\"FB - WEB\",\"Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n\"\n    ] %}\n\nSELECT\n    distinct *\nFROM\n    unnest([ struct <channel string, channel_id int64>\n    {%for channel in sales_channel%} \n    ('{{channel}}', farm_fingerprint('{{channel}}')) {{\",\" if not loop.last}}\n    {%endfor%}\n    ])", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__sales_channels.sql", "compiled": true, "compiled_code": "\n\n\n\nSELECT\n    distinct *\nFROM\n    unnest([ struct <channel string, channel_id int64>\n     \n    ('Admin', farm_fingerprint('Admin')) ,\n     \n    ('Website', farm_fingerprint('Website')) ,\n     \n    ('API', farm_fingerprint('API')) ,\n     \n    ('Facebook', farm_fingerprint('Facebook')) ,\n     \n    ('Instagram', farm_fingerprint('Instagram')) ,\n     \n    ('Lazada.vn', farm_fingerprint('Lazada.vn')) ,\n     \n    ('Shopee.vn', farm_fingerprint('Shopee.vn')) ,\n     \n    ('Sendo.vn', farm_fingerprint('Sendo.vn')) ,\n     \n    ('Tiki.vn', farm_fingerprint('Tiki.vn')) ,\n     \n    ('Zalo Shop', farm_fingerprint('Zalo Shop')) ,\n     \n    ('1Landing.vn', farm_fingerprint('1Landing.vn')) ,\n     \n    ('Tiktok Shop', farm_fingerprint('Tiktok Shop')) ,\n     \n    ('Zalo OA', farm_fingerprint('Zalo OA')) ,\n     \n    ('Shopee Chat', farm_fingerprint('Shopee Chat')) ,\n     \n    ('Lazada Chat', farm_fingerprint('Lazada Chat')) ,\n     \n    ('Website', farm_fingerprint('Website')) ,\n     \n    ('S\u00e0n', farm_fingerprint('S\u00e0n')) ,\n     \n    ('FB - WEB', farm_fingerprint('FB - WEB')) ,\n     \n    ('Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n', farm_fingerprint('Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n')) \n    \n    ])", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__products": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__products", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__products.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__products.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__products", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__products"], "alias": "stg_nhanhvn__products", "checksum": {"name": "sha256", "checksum": "dcebd45fc0ab705c687f8c48a2c220e023288ecb1acbe7354cfcd65b586856ea"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "ID s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type_name": {"name": "type_name", "description": "Lo\u1ea1i s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_cost": {"name": "avg_cost", "description": "Gi\u00e1 v\u1ed1n s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "M\u00e3 s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "class_code": {"name": "class_code", "description": "G\u1ed9p m\u00e3 SP theo m\u00e0u & size", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "barcode": {"name": "barcode", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_name": {"name": "product_name", "description": "T\u00ean s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 b\u00e1n l\u1ebb s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_status": {"name": "product_status", "description": "Tr\u1ea1ng th\u00e1i s\u1ea3n ph\u1ea9m New | Active | Inactive | Out of stock", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name": {"name": "category_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__products.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1732268180.7302415, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__products`", "raw_code": "{{ config(\n  tags = ['view', 'dimension','nhanhvn']\n) }}\n\n{% set productline_mapping ={ \"B\u1ed8 \u0110\u1ed2 - THU \u0110\u00d4NG\" :[\"B\u1ed9 gi\u00f3\",\"B\u1ed9 Vest\",\"B\u1ed9 n\u1ec9\"],\n\"B\u1ed8 \u0110\u1ed2 - XU\u00c2N H\u00c8\" :[\"B\u1ed9 T-shirt\",\"B\u1ed9 Polo\"],\n\"QU\u1ea6N - QUANH N\u0102M\" :[\"Qu\u1ea7n \u00e2u\",\"Qu\u1ea7n khaki\",\"Qu\u1ea7n Jean\"],\n\"QU\u1ea6N - THU \u0110\u00d4NG\" :[\"Qu\u1ea7n d\u00e0i th\u1ec3 thao\",\"Qu\u1ea7n n\u1ec9 r\u1eddi\"],\n\"QU\u1ea6N - THU \u0110\u00d4NG\" :[\"Qu\u1ea7n n\u1ec9 r\u1eddi\",\"Qu\u1ea7n short gi\u00f3\"],\n\"QU\u1ea6N - XU\u00c2N H\u00c8\" :[\"Qu\u1ea7n short gi\u00f3\",\"Qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun\",\"Qu\u1ea7n short kaki\",\"Qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac\",\"Qu\u1ea7n short casual\"],\n\"\u00c1O - QUANH N\u0102M\" :[\"S\u01a1 Mi D\u00e0i\"],\n\"\u00c1O - THU \u0110\u00d4NG\" :[\"\u00c1o gi\u1eef nhi\u1ec7t\",\"\u00c1o polo d\u00e0i tay\",\"\u00c1o Blazer\",\"\u00c1o thun d\u00e0i tay\",\"\u00c1o Bomber\",\"\u00c1o n\u1ec9 r\u1eddi\",\"\u00c1o len\",\"\u00c1o phao\",\"\u00c1o gi\u00f3\"],\n\"\u00c1O - XU\u00c2N H\u00c8\" :[\"Tshirt\",\"\u00c1o s\u00e1t n\u00e1ch\",\"Polo\",\"\u00c1o ba l\u1ed7\",\"\u00c1o ch\u1ed1ng n\u1eafng\",\"S\u01a1 mi c\u1ed9c\"],\n\"\u0110\u1ed2 L\u00d3T, PH\u1ee4 KI\u1ec6N\" :[\"T\u1ea4T\",\"BA L\u1ed6 L\u00d3T\",\"PH\u1ee4 KI\u1ec6N\",\"S\u1ecaP\"] } %}\n{% set ads_product_mapping ={ \"ABZ\" :[\"\u00e1o blazer\"],\n\"ACN\" :['\u00e1o ch\u1ed1ng n\u1eafng'],\n\"AGB\" :[\"\u00e1o gi\u00f3 b\u1ed9\"],\n\"AGN\" :[\"\u00e1o gi\u1eef nhi\u1ec7t\"],\n\"AKB\" :['\u00e1o bomber'],\n\"AKC\" :[\"\u00e1o phao\"],\n\"AKD\" :[\"\u00e1o kho\u00e1c da\"],\n\"AKG\" :[\"\u00e1o gi\u00f3\",\"b\u1ed9 gi\u00f3\"],\n\"ALO\" :[\"\u00e1o len\"],\n\"ANB\" :[\"\u00e1o n\u1ec9 b\u1ed9\"],\n\"ANO\" :[\"\u00e1o n\u1ec9 r\u1eddi\"],\n\"APB\" :[\"\u00e1o b\u1ed9 polo\"],\n\"APC\" :['b\u1ed9 polo','polo'],\n\"APD\" :['\u00e1o polo d\u00e0i tay'],\n\"APO\" :[\"\u00e1o thun d\u00e0i tay\"],\n\"ATS\" :['b\u1ed9 t-shirt','tshirt',\"t-shirt c\u0169\",\"t-shirt th\u1ec3 thao\",\"t-shirt thi\u1ebft k\u1ebf\",\"\u00e1o s\u00e1t n\u00e1ch\"],\n\"ATT\" :['\u00e1o s\u00e1t n\u00e1ch','\u00e1o ba l\u1ed7'],\n\"AVB\" :[\"\u00e1o vest\",\"b\u1ed9 \u0111\u1ed3\",\"b\u1ed9 vest\"],\n\"BNI\" :[\"b\u1ed9 n\u1ec9\",],\n\"PKN\" :['t\u1ea5t','ba l\u1ed7 l\u00f3t','s\u1ecbp','ph\u1ee5 ki\u1ec7n'],\n\"QAU\" :[\"qu\u1ea7n \u00e2u\"],\n\"QBD\" :['qu\u1ea7n jean'],\n\"QDT\" :['qu\u1ea7n d\u00e0i th\u1ec3 thao'],\n\"QGB\" :[\"qu\u1ea7n gi\u00f3 b\u1ed9\"],\n\"QKD\" :['qu\u1ea7n khaki'],\n\"QNB\" :[\"qu\u1ea7n n\u1ec9 b\u1ed9\"],\n\"QNI\" :['qu\u1ea7n n\u1ec9 r\u1eddi'],\n\"QSG\" :['qu\u1ea7n short gi\u00f3'],\n\"QSK\" :['qu\u1ea7n short kaki'],\n\"QST\" :['qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac',\"qu\u1ea7n b\u1ed9 polo\",\"qu\u1ea7n b\u1ed9 tshirt\",\"qu\u1ea7n short v\u1ea3i\",\"qu\u1ea7n short \u00e2u\"],\n\"QSC\" :[\"qu\u1ea7n short casual\"],\n\"QVE\" :[\"qu\u1ea7n vest\"],\n\"SMC\" :['s\u01a1 mi c\u1ed9c'],\n\"SMD\" :['s\u01a1 mi d\u00e0i'],} %}\n{% set sub_productline_patterns ={ \"B\u1ed9 gi\u00f3\" :[\"b\u1ed9 gi\u00f3\"],\n\"B\u1ed9 Vest\" :[\"b\u1ed9 vest\",\"vest\"],\n\"B\u1ed9 n\u1ec9\" :[\"b\u1ed9 n\u1ec9\"],\n\"B\u1ed9 T-shirt\" :[\"b\u1ed9 t-shirt\",'\u00e1o ph\u00f4ng'],\n\"B\u1ed9 Polo\" :[\"b\u1ed9 polo\"],\n\"Qu\u1ea7n \u00e2u\" :[\"qu\u1ea7n \u00e2u\"],\n\"Qu\u1ea7n khaki\" :[\"qu\u1ea7n khaki\",\"kaki\"],\n\"Qu\u1ea7n Jean\" :[\"qu\u1ea7n jean\"],\n\"Qu\u1ea7n d\u00e0i th\u1ec3 thao\" :[\"qu\u1ea7n d\u00e0i th\u1ec3 thao\",\"jogger\",'qu\u1ea7n gi\u00f3'],\n\"Qu\u1ea7n n\u1ec9 r\u1eddi\" :[\"qu\u1ea7n n\u1ec9\"],\n\"Qu\u1ea7n short gi\u00f3\" :[\"qu\u1ea7n short gi\u00f3\"],\n\"Qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac\" :[\"qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac\"],\n\"Qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun\" :[\"qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun\",\"qu\u1ea7n short th\u1ec3 thao\"],\n\"Qu\u1ea7n short kaki\" :[\"qu\u1ea7n short kaki\",\"qu\u1ea7n short khaki\"],\n\"Qu\u1ea7n short casual\" :[\"qu\u1ea7n short casual\"],\n\"S\u01a1 Mi D\u00e0i\" :[\"s\u01a1 mi d\u00e0i\"],\n\"\u00c1o gi\u1eef nhi\u1ec7t\" :[\"\u00e1o gi\u1eef nhi\u1ec7t\"],\n\"\u00c1o polo d\u00e0i tay\" :[\"polo d\u00e0i tay\"],\n\"\u00c1o Blazer\" :[\"blazer\"],\n\"\u00c1o thun d\u00e0i tay\" :[\"\u00e1o thun\"],\n\"\u00c1o Bomber\" :[\"bomber\"],\n\"\u00c1o n\u1ec9 r\u1eddi\" :[\"\u00e1o n\u1ec9\"],\n\"\u00c1o len\" :[\"\u00e1o len\"],\n\"\u00c1o phao\" :[\"\u00e1o phao\",\"\u00e1o kho\u00e1c ch\u1ea7n b\u00f4ng\",\"\u00e1o kho\u00e1c l\u00f4ng v\u0169\",\"\u00e1o kho\u00e1c si\u00eau nh\u1eb9\",\"\u00e1o kho\u00e1c phao\"],\n\"\u00c1o gi\u00f3\" :[\"\u00e1o gi\u00f3\",\"\u00e1o kho\u00e1c gi\u00f3\"],\n\"Tshirt\" :[\"tshirt\",\"t-shirt\"],\n\"\u00c1o s\u00e1t n\u00e1ch\" :[\"\u00e1o s\u00e1t n\u00e1ch\",\"tanktop\",\"tank top\"],\n\"Polo\" :[\"polo\"],\n\"\u00c1o ba l\u1ed7\" :[\"\u00e1o ba l\u1ed7\"],\n\"\u00c1o ch\u1ed1ng n\u1eafng\" :[\"\u00e1o ch\u1ed1ng n\u1eafng\"],\n\"S\u01a1 mi c\u1ed9c\" :[\"s\u01a1 mi c\u1ed9c\"],\n\"T\u1ea4T\" :[\"t\u1ea5t\"],\n\"BA L\u1ed6 L\u00d3T\" :[\"ba l\u1ed7\"],\n\"PH\u1ee4 KI\u1ec6N\" :[\"ph\u1ee5 ki\u1ec7n\",\"v\u00ed\"],\n\"S\u1ecaP\" :[\"s\u1ecbp\",\"qu\u1ea7n l\u00f3t\"] } %}\n\n{% set product_design_code ={ \"custom\":{ \"24\" :'^(?:[ZXY0]{0,3})([BC0][A-Z]{3}[0-9]{3,5})' },\n\"default\": '^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})',} %}\n\nWITH source AS (\n  {{ dbt_utils.deduplicate(\n    relation = source(\n      'nhanhvn',\n      'p_products'\n    ),\n    partition_by = 'idNhanh',\n    order_by = \"_batched_at desc\",\n  ) }}\n),\nbase_cat AS (\n  {{ dbt_utils.deduplicate(\n    relation = source(\n      'nhanhvn',\n      'p_categories'\n    ),\n    partition_by = 'id',\n    order_by = \"_batched_at desc\",\n  ) }}\n),\ncategory AS (\n  SELECT\n    safe_cast(products.idNhanh AS int64) AS product_id,\n    products.typeName AS type_name,\n    safe_cast(products.avgCost AS int64) AS avg_cost,\n    products.code AS product_code,\n    COALESCE(regexp_extract(products.code, r'[A-Z]{3}(2[1-5])'), \"C\u0169\") AS YEAR,\n    COALESCE(regexp_extract(products.code,r'([A-Za-z0-9-]+)(?:[A-Z]{3}\\d{1,5}$)'),products.code) AS class_code,\n    products.barcode,\n    products.name AS product_name,\n    safe_cast(products.price AS int64) price,\n    products.status AS product_status,\n    categories.name AS category_name,\n    CASE\n      {% for sub_productline,pattern in sub_productline_patterns.items() -%}\n        WHEN regexp_contains(LOWER(products.name), r'{{pattern|join(\"|\")}}') THEN '{{sub_productline}}'\n      {% endfor -%}\n    END AS sub_productline\n  FROM\n    source products\n    LEFT JOIN base_cat categories\n    ON products.categoryId = categories.id\n)\nSELECT\n  *,\n  CASE\n    {% for key,pattern in product_design_code.items() -%}\n      WHEN year = \"{{key}}\" THEN regexp_extract(product_code,r\"{{ pattern }}\")\n    {% endfor -%}\n    ELSE regexp_extract(product_code,r\"{{ product_design_code['default'] }}\") END AS product_design_code,\n  CASE\n    {% for product,values in ads_product_mapping.items() -%}\n      WHEN LOWER(sub_productline) IN ('{{values|join(\"','\")}}') THEN '{{product | lower()}}'\n    {% endfor -%}\n  END AS ads_product_mapping,\n  CASE\n    {% for product,values in productline_mapping.items() -%}\n      WHEN sub_productline IN ('{{values|join(\"','\")}}') THEN '{{product}}'\n    {% endfor -%}\n  END AS productline,\nFROM\n  category", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_products"], ["nhanhvn", "p_categories"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.nhanhvn.p_products", "source.sado_analytics_services.nhanhvn.p_categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__products.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_products_*` original\n        group by idNhanh\n    )\n),\nbase_cat AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_categories_*` original\n        group by id\n    )\n),\ncategory AS (\n  SELECT\n    safe_cast(products.idNhanh AS int64) AS product_id,\n    products.typeName AS type_name,\n    safe_cast(products.avgCost AS int64) AS avg_cost,\n    products.code AS product_code,\n    COALESCE(regexp_extract(products.code, r'[A-Z]{3}(2[1-5])'), \"C\u0169\") AS YEAR,\n    COALESCE(regexp_extract(products.code,r'([A-Za-z0-9-]+)(?:[A-Z]{3}\\d{1,5}$)'),products.code) AS class_code,\n    products.barcode,\n    products.name AS product_name,\n    safe_cast(products.price AS int64) price,\n    products.status AS product_status,\n    categories.name AS category_name,\n    CASE\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 gi\u00f3') THEN 'B\u1ed9 gi\u00f3'\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 vest|vest') THEN 'B\u1ed9 Vest'\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 n\u1ec9') THEN 'B\u1ed9 n\u1ec9'\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 t-shirt|\u00e1o ph\u00f4ng') THEN 'B\u1ed9 T-shirt'\n      WHEN regexp_contains(LOWER(products.name), r'b\u1ed9 polo') THEN 'B\u1ed9 Polo'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n \u00e2u') THEN 'Qu\u1ea7n \u00e2u'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n khaki|kaki') THEN 'Qu\u1ea7n khaki'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n jean') THEN 'Qu\u1ea7n Jean'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n d\u00e0i th\u1ec3 thao|jogger|qu\u1ea7n gi\u00f3') THEN 'Qu\u1ea7n d\u00e0i th\u1ec3 thao'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n n\u1ec9') THEN 'Qu\u1ea7n n\u1ec9 r\u1eddi'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short gi\u00f3') THEN 'Qu\u1ea7n short gi\u00f3'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac') THEN 'Qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun|qu\u1ea7n short th\u1ec3 thao') THEN 'Qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short kaki|qu\u1ea7n short khaki') THEN 'Qu\u1ea7n short kaki'\n      WHEN regexp_contains(LOWER(products.name), r'qu\u1ea7n short casual') THEN 'Qu\u1ea7n short casual'\n      WHEN regexp_contains(LOWER(products.name), r's\u01a1 mi d\u00e0i') THEN 'S\u01a1 Mi D\u00e0i'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o gi\u1eef nhi\u1ec7t') THEN '\u00c1o gi\u1eef nhi\u1ec7t'\n      WHEN regexp_contains(LOWER(products.name), r'polo d\u00e0i tay') THEN '\u00c1o polo d\u00e0i tay'\n      WHEN regexp_contains(LOWER(products.name), r'blazer') THEN '\u00c1o Blazer'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o thun') THEN '\u00c1o thun d\u00e0i tay'\n      WHEN regexp_contains(LOWER(products.name), r'bomber') THEN '\u00c1o Bomber'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o n\u1ec9') THEN '\u00c1o n\u1ec9 r\u1eddi'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o len') THEN '\u00c1o len'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o phao|\u00e1o kho\u00e1c ch\u1ea7n b\u00f4ng|\u00e1o kho\u00e1c l\u00f4ng v\u0169|\u00e1o kho\u00e1c si\u00eau nh\u1eb9|\u00e1o kho\u00e1c phao') THEN '\u00c1o phao'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o gi\u00f3|\u00e1o kho\u00e1c gi\u00f3') THEN '\u00c1o gi\u00f3'\n      WHEN regexp_contains(LOWER(products.name), r'tshirt|t-shirt') THEN 'Tshirt'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o s\u00e1t n\u00e1ch|tanktop|tank top') THEN '\u00c1o s\u00e1t n\u00e1ch'\n      WHEN regexp_contains(LOWER(products.name), r'polo') THEN 'Polo'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o ba l\u1ed7') THEN '\u00c1o ba l\u1ed7'\n      WHEN regexp_contains(LOWER(products.name), r'\u00e1o ch\u1ed1ng n\u1eafng') THEN '\u00c1o ch\u1ed1ng n\u1eafng'\n      WHEN regexp_contains(LOWER(products.name), r's\u01a1 mi c\u1ed9c') THEN 'S\u01a1 mi c\u1ed9c'\n      WHEN regexp_contains(LOWER(products.name), r't\u1ea5t') THEN 'T\u1ea4T'\n      WHEN regexp_contains(LOWER(products.name), r'ba l\u1ed7') THEN 'BA L\u1ed6 L\u00d3T'\n      WHEN regexp_contains(LOWER(products.name), r'ph\u1ee5 ki\u1ec7n|v\u00ed') THEN 'PH\u1ee4 KI\u1ec6N'\n      WHEN regexp_contains(LOWER(products.name), r's\u1ecbp|qu\u1ea7n l\u00f3t') THEN 'S\u1ecaP'\n      END AS sub_productline\n  FROM\n    source products\n    LEFT JOIN base_cat categories\n    ON products.categoryId = categories.id\n)\nSELECT\n  *,\n  CASE\n    WHEN year = \"custom\" THEN regexp_extract(product_code,r\"{'24': '^(?:[ZXY0]{0,3})([BC0][A-Z]{3}[0-9]{3,5})'}\")\n    WHEN year = \"default\" THEN regexp_extract(product_code,r\"^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})\")\n    ELSE regexp_extract(product_code,r\"^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})\") END AS product_design_code,\n  CASE\n    WHEN LOWER(sub_productline) IN ('\u00e1o blazer') THEN 'abz'\n    WHEN LOWER(sub_productline) IN ('\u00e1o ch\u1ed1ng n\u1eafng') THEN 'acn'\n    WHEN LOWER(sub_productline) IN ('\u00e1o gi\u00f3 b\u1ed9') THEN 'agb'\n    WHEN LOWER(sub_productline) IN ('\u00e1o gi\u1eef nhi\u1ec7t') THEN 'agn'\n    WHEN LOWER(sub_productline) IN ('\u00e1o bomber') THEN 'akb'\n    WHEN LOWER(sub_productline) IN ('\u00e1o phao') THEN 'akc'\n    WHEN LOWER(sub_productline) IN ('\u00e1o kho\u00e1c da') THEN 'akd'\n    WHEN LOWER(sub_productline) IN ('\u00e1o gi\u00f3','b\u1ed9 gi\u00f3') THEN 'akg'\n    WHEN LOWER(sub_productline) IN ('\u00e1o len') THEN 'alo'\n    WHEN LOWER(sub_productline) IN ('\u00e1o n\u1ec9 b\u1ed9') THEN 'anb'\n    WHEN LOWER(sub_productline) IN ('\u00e1o n\u1ec9 r\u1eddi') THEN 'ano'\n    WHEN LOWER(sub_productline) IN ('\u00e1o b\u1ed9 polo') THEN 'apb'\n    WHEN LOWER(sub_productline) IN ('b\u1ed9 polo','polo') THEN 'apc'\n    WHEN LOWER(sub_productline) IN ('\u00e1o polo d\u00e0i tay') THEN 'apd'\n    WHEN LOWER(sub_productline) IN ('\u00e1o thun d\u00e0i tay') THEN 'apo'\n    WHEN LOWER(sub_productline) IN ('b\u1ed9 t-shirt','tshirt','t-shirt c\u0169','t-shirt th\u1ec3 thao','t-shirt thi\u1ebft k\u1ebf','\u00e1o s\u00e1t n\u00e1ch') THEN 'ats'\n    WHEN LOWER(sub_productline) IN ('\u00e1o s\u00e1t n\u00e1ch','\u00e1o ba l\u1ed7') THEN 'att'\n    WHEN LOWER(sub_productline) IN ('\u00e1o vest','b\u1ed9 \u0111\u1ed3','b\u1ed9 vest') THEN 'avb'\n    WHEN LOWER(sub_productline) IN ('b\u1ed9 n\u1ec9') THEN 'bni'\n    WHEN LOWER(sub_productline) IN ('t\u1ea5t','ba l\u1ed7 l\u00f3t','s\u1ecbp','ph\u1ee5 ki\u1ec7n') THEN 'pkn'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n \u00e2u') THEN 'qau'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n jean') THEN 'qbd'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n d\u00e0i th\u1ec3 thao') THEN 'qdt'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n gi\u00f3 b\u1ed9') THEN 'qgb'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n khaki') THEN 'qkd'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n n\u1ec9 b\u1ed9') THEN 'qnb'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n n\u1ec9 r\u1eddi') THEN 'qni'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n short gi\u00f3') THEN 'qsg'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n short kaki') THEN 'qsk'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac','qu\u1ea7n b\u1ed9 polo','qu\u1ea7n b\u1ed9 tshirt','qu\u1ea7n short v\u1ea3i','qu\u1ea7n short \u00e2u') THEN 'qst'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n short casual') THEN 'qsc'\n    WHEN LOWER(sub_productline) IN ('qu\u1ea7n vest') THEN 'qve'\n    WHEN LOWER(sub_productline) IN ('s\u01a1 mi c\u1ed9c') THEN 'smc'\n    WHEN LOWER(sub_productline) IN ('s\u01a1 mi d\u00e0i') THEN 'smd'\n    END AS ads_product_mapping,\n  CASE\n    WHEN sub_productline IN ('B\u1ed9 gi\u00f3','B\u1ed9 Vest','B\u1ed9 n\u1ec9') THEN 'B\u1ed8 \u0110\u1ed2 - THU \u0110\u00d4NG'\n    WHEN sub_productline IN ('B\u1ed9 T-shirt','B\u1ed9 Polo') THEN 'B\u1ed8 \u0110\u1ed2 - XU\u00c2N H\u00c8'\n    WHEN sub_productline IN ('Qu\u1ea7n \u00e2u','Qu\u1ea7n khaki','Qu\u1ea7n Jean') THEN 'QU\u1ea6N - QUANH N\u0102M'\n    WHEN sub_productline IN ('Qu\u1ea7n n\u1ec9 r\u1eddi','Qu\u1ea7n short gi\u00f3') THEN 'QU\u1ea6N - THU \u0110\u00d4NG'\n    WHEN sub_productline IN ('Qu\u1ea7n short gi\u00f3','Qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','Qu\u1ea7n short kaki','Qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac','Qu\u1ea7n short casual') THEN 'QU\u1ea6N - XU\u00c2N H\u00c8'\n    WHEN sub_productline IN ('S\u01a1 Mi D\u00e0i') THEN '\u00c1O - QUANH N\u0102M'\n    WHEN sub_productline IN ('\u00c1o gi\u1eef nhi\u1ec7t','\u00c1o polo d\u00e0i tay','\u00c1o Blazer','\u00c1o thun d\u00e0i tay','\u00c1o Bomber','\u00c1o n\u1ec9 r\u1eddi','\u00c1o len','\u00c1o phao','\u00c1o gi\u00f3') THEN '\u00c1O - THU \u0110\u00d4NG'\n    WHEN sub_productline IN ('Tshirt','\u00c1o s\u00e1t n\u00e1ch','Polo','\u00c1o ba l\u1ed7','\u00c1o ch\u1ed1ng n\u1eafng','S\u01a1 mi c\u1ed9c') THEN '\u00c1O - XU\u00c2N H\u00c8'\n    WHEN sub_productline IN ('T\u1ea4T','BA L\u1ed6 L\u00d3T','PH\u1ee4 KI\u1ec6N','S\u1ecaP') THEN '\u0110\u1ed2 L\u00d3T, PH\u1ee4 KI\u1ec6N'\n    END AS productline,\nFROM\n  category", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__customers.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__customers.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__customers", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__customers"], "alias": "stg_nhanhvn__customers", "checksum": {"name": "sha256", "checksum": "75e0fa06f25acc928ccbec3263a27b83081d6b40266ee1c25f2d7c38e958b899"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "daily", "nhanhvn", "dimension"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "customer_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "last_bought_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "nhanhvn", "dimension"], "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "Id kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "customer_name": {"name": "customer_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "Gi\u1edbi t\u00ednh kh\u00e1ch h\u00e0ng (1 = Nam, 2 = N\u1eef, Null: Ch\u01b0a c\u00f3 th\u00f4ng tin)", "meta": {"dimension": {"type": "string"}}, "data_type": "boolean", "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "\u0110\u1ecba ch\u1ec9 kho", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "birthday": {"name": "birthday", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "total_money": {"name": "total_money", "description": "T\u1ed5ng s\u1ed1 ti\u1ec1n kh\u00e1ch mua h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "first_purchase_date": {"name": "first_purchase_date", "description": "Ng\u00e0y b\u1eaft \u0111\u1ea7u mua h\u00e0ng", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "first_purchase_depot_id": {"name": "first_purchase_depot_id", "description": "Kho b\u1eaft \u0111\u1ea7u mua h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "\u0110i\u1ec3m t\u00edch l\u0169y hi\u1ec7n t\u1ea1i c\u1ee7a kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "total_bills": {"name": "total_bills", "description": "T\u1ed5ng s\u1ed1 ti\u1ec1n kh\u00e1ch thanh to\u00e1n", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "last_bought_date": {"name": "last_bought_date", "description": "Ng\u00e0y g\u1ea7n nh\u1ea5t mua h\u00e0ng", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__customers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unique_key": "customer_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "nhanhvn", "dimension"], "incremental_strategy": "merge", "partition_by": {"field": "last_bought_date", "data_type": "date", "granularity": "day"}}, "created_at": 1732268180.7466605, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__customers`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  unique_key = 'customer_id',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'daily','nhanhvn','dimension'],\n  incremental_strategy = 'merge',\n  partition_by ={ \"field\": \"last_bought_date\",\n  \"data_type\": \"date\",\n  \"granularity\": \"day\" }\n) }}\n\nWITH source AS (\n\n  SELECT\n    *\n  FROM\n    {{ source(\n      'nhanhvn',\n      'p_customers'\n    ) }}\n  WHERE\n    1 = 1\n{% if is_incremental() %}\nAND parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(DATE(_dbt_max_partition), INTERVAL -2 DAY)\n{% endif %}\n),\n\ndeduplicate AS (\n  {{ dbt_utils.deduplicate(\n    relation = 'source',\n    partition_by = 'id',\n    order_by = \"_batched_at desc\",\n  ) }}\n)\n\nSELECT\n  safe_cast(id AS int64) AS customer_id,\n  NAME AS customer_name,\n  email AS email,\n  mobile AS contact_number,\n  CASE\n    WHEN gender = '1' THEN true\n    WHEN gender = '2' THEN false\n  END AS gender,\n  address,\n  birthday,\n  safe_cast(totalMoney AS int64) AS total_money,\n  DATE(startedDate) AS first_purchase_date,\n  safe_cast(startedDepotId AS int64) AS first_purchase_depot_id,\n  safe_cast(points AS int64) AS points,\n  safe_cast(totalBills AS int64) AS total_bills,\n  DATE(lastBoughtDate) AS last_bought_date,\nFROM\n  deduplicate", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_customers"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.nhanhvn.p_customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__customers.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT\n    *\n  FROM\n    `agile-scheme-394814`.`Nhanhvn`.`p_customers_*`\n  WHERE\n    1 = 1\n\nAND parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(DATE(_dbt_max_partition), INTERVAL -2 DAY)\n\n),\n\ndeduplicate AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\n\nSELECT\n  safe_cast(id AS int64) AS customer_id,\n  NAME AS customer_name,\n  email AS email,\n  mobile AS contact_number,\n  CASE\n    WHEN gender = '1' THEN true\n    WHEN gender = '2' THEN false\n  END AS gender,\n  address,\n  birthday,\n  safe_cast(totalMoney AS int64) AS total_money,\n  DATE(startedDate) AS first_purchase_date,\n  safe_cast(startedDepotId AS int64) AS first_purchase_depot_id,\n  safe_cast(points AS int64) AS points,\n  safe_cast(totalBills AS int64) AS total_bills,\n  DATE(lastBoughtDate) AS last_bought_date,\nFROM\n  deduplicate", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__depots": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__depots", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__depots.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__depots.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__depots", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__depots"], "alias": "stg_nhanhvn__depots", "checksum": {"name": "sha256", "checksum": "07633fb1674a3136a1fc6baa37586751fcbcf798e5cefb0f50255f2539213ab8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"depot_id": {"name": "depot_id", "description": "Id kho h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "T\u00ean kho h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city": {"name": "city", "description": "Th\u00e0nh ph\u1ed1", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "district": {"name": "district", "description": "Qu\u1eadn huy\u1ec7n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "\u0110\u1ecba ch\u1ec9 kho", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__depots.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1732268180.7319574, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__depots`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','nhanhvn']\n  )\n}}\n\nWITH source AS (\n  {{ dbt_utils.deduplicate(\n    relation = source(\n        'nhanhvn',\n        'p_stores'\n    ),\n    partition_by = 'id',\n    order_by = \"_batched_at desc\",\n) }}\n)\n\nSELECT\n    safe_cast(id as int64) AS depot_id,\n    NAME AS depot_name,\n    mobile AS contact_number,\n    cityName AS city,\n    districtName AS district,\n    address\nFROM\n    source", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_stores"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.nhanhvn.p_stores"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__depots.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_stores_*` original\n        group by id\n    )\n)\n\nSELECT\n    safe_cast(id as int64) AS depot_id,\n    NAME AS depot_name,\n    mobile AS contact_number,\n    cityName AS city,\n    districtName AS district,\n    address\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__bills": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__bills", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__bills.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__bills.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__bills", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__bills"], "alias": "stg_nhanhvn__bills", "checksum": {"name": "sha256", "checksum": "d46dfc28c722a627146b51cf689a9e7d602826df211978e0d3448c785ba24efd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "nhanhvn"], "description": "", "columns": {"bill_id": {"name": "bill_id", "description": "M\u00e3 ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_date": {"name": "bill_date", "description": "Ng\u00e0y ho\u00e1 \u0111\u01a1n", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Th\u1eddi gian t\u1ea1o \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_type": {"name": "bill_type", "description": "Lo\u1ea1i ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho: Xu\u1ea5t kho | Nh\u1eadp kho", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_mode": {"name": "bill_mode", "description": "Ki\u1ec3u ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "related_bill_id": {"name": "related_bill_id", "description": "M\u00e3 ho\u00e1 \u0111\u01a1n li\u00ean k\u1ebft", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id": {"name": "order_id", "description": "Id \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_id": {"name": "depot_id", "description": "Id kho h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Id kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "ID ng\u01b0\u1eddi t\u1ea1o \u0111\u01a1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "Chi\u1ebft kh\u1ea5u", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requirement_bill_id": {"name": "requirement_bill_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inventory_check_id": {"name": "inventory_check_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sale_id": {"name": "sale_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "technical_id": {"name": "technical_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "used_points": {"name": "used_points", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money": {"name": "money", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sale_bonus": {"name": "sale_bonus", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_transfer": {"name": "money_transfer", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cash": {"name": "cash", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installment_money": {"name": "installment_money", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "credit_money": {"name": "credit_money", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_used_points": {"name": "money_used_points", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_fee": {"name": "return_fee", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment": {"name": "payment", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supplier_id": {"name": "supplier_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "coupon_code": {"name": "coupon_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "coupon_value": {"name": "coupon_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_money": {"name": "customer_money", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_return": {"name": "money_return", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cash_account": {"name": "cash_account", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transfer_account": {"name": "transfer_account", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "credit_code": {"name": "credit_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "installment_account": {"name": "installment_account", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "products": {"name": "products", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__bills.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "nhanhvn"]}, "created_at": 1732268180.742917, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__bills`", "raw_code": "{{ config(\n  tags = ['view','nhanhvn']\n) }}\n\n{% set bill_types ={ \"1\" :\"Nh\u1eadp kho\",\n\"2\" :\"Xu\u1ea5t kho\" } %}\n{% set bill_modes ={ \"1\" :\"Giao h\u00e0ng\",\n\"2\" :\"B\u00e1n l\u1ebb\",\n\"3\" :\"Chuy\u1ec3n kho\",\n\"4\" :\"Qu\u00e0 t\u1eb7ng\",\n\"5\" :\"Nh\u00e0 cung c\u1ea5p\",\n\"6\" :\"B\u00e1n s\u1ec9\",\n\"8\" :\"Ki\u1ec3m kho\",\n\"10\" :\"Kh\u00e1c\" } %}\n\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'nhanhvn',\n            'p_bills'\n        ),\n        partition_by = 'id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\nSELECT\n    safe_cast(b.id AS int64) AS bill_id,\n    safe_cast(b.relatedBillId AS int64) AS related_bill_id,\n    safe_cast(b.depotId AS int64) AS depot_id,\n    safe_cast(b.orderId AS int64) AS order_id,\n    safe_cast(b.requirementBillId AS int64) AS requirement_bill_id,\n    safe_cast(b.inventoryCheckId AS int64) AS inventory_check_id,\n    DATE(b.date) AS bill_date,\n    b.createdDateTime AS created_date,\n    safe_cast(b.customerId AS int64) AS customer_id,\n    safe_cast(b.saleId AS int64) AS sale_id,\n    CASE b.type\n    {% for key, value in bill_types.items() %}\n    WHEN '{{key}}' THEN '{{value}}'\n{% endfor %} END AS bill_type,\nCASE b.mode\n{% for key, value in bill_modes.items() %}\nWHEN '{{key}}' THEN '{{value}}'\n{% endfor %} END AS bill_mode,\nsafe_cast(b.createdByID AS int64) AS created_by_id,\nsafe_cast(b.technicalId AS int64) AS technical_id,\nb.discount,\nb.points,\nb.usedPoints AS used_points,\nb.money,\nb.saleBonus AS sale_bonus,\nb.moneyTransfer AS money_transfer,\nb.cash,\nb.installmentMoney AS installment_money,\nb.creditMoney AS credit_money,\nb.usedPointsMoney AS money_used_points,\nb.returnFee AS return_fee,\nb.payment,\nb.description,\nb.supplierId AS supplier_id,\nb.couponCode AS coupon_code,\nsafe_cast(b.couponValue AS int64) AS coupon_value,\nsafe_cast(b.customerMoney AS int64) AS customer_money,\nb.moneyReturn AS money_return,\nb.cashAccount AS cash_account,\nb.transferAccount AS transfer_account,\nb.creditCode AS credit_code,\nb.installmentAccount AS installment_account,\nARRAY_AGG(\n    STRUCT(\n        safe_cast(products.id AS int64) AS product_id, \n        products.code AS product_code, \n        products.name AS product_name, \n        safe_cast(products.quantity AS int64) AS quantity, \n        safe_cast(products.price AS int64) AS price, \n        safe_cast(products.discount AS int64) AS discount, \n        safe_cast(products.vat AS int64) AS vat, \n        safe_cast(products.extendedWarrantyMoney AS int64) AS extended_warranty_money\n        )\n) AS products\nFROM\n    source b,\n    unnest(products) products\n    {{ dbt_utils.group_by(36) }}", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_bills"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.nhanhvn.p_bills"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__bills.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_bills_*` original\n        group by id\n    )\n)\nSELECT\n    safe_cast(b.id AS int64) AS bill_id,\n    safe_cast(b.relatedBillId AS int64) AS related_bill_id,\n    safe_cast(b.depotId AS int64) AS depot_id,\n    safe_cast(b.orderId AS int64) AS order_id,\n    safe_cast(b.requirementBillId AS int64) AS requirement_bill_id,\n    safe_cast(b.inventoryCheckId AS int64) AS inventory_check_id,\n    DATE(b.date) AS bill_date,\n    b.createdDateTime AS created_date,\n    safe_cast(b.customerId AS int64) AS customer_id,\n    safe_cast(b.saleId AS int64) AS sale_id,\n    CASE b.type\n    \n    WHEN '1' THEN 'Nh\u1eadp kho'\n\n    WHEN '2' THEN 'Xu\u1ea5t kho'\n END AS bill_type,\nCASE b.mode\n\nWHEN '1' THEN 'Giao h\u00e0ng'\n\nWHEN '2' THEN 'B\u00e1n l\u1ebb'\n\nWHEN '3' THEN 'Chuy\u1ec3n kho'\n\nWHEN '4' THEN 'Qu\u00e0 t\u1eb7ng'\n\nWHEN '5' THEN 'Nh\u00e0 cung c\u1ea5p'\n\nWHEN '6' THEN 'B\u00e1n s\u1ec9'\n\nWHEN '8' THEN 'Ki\u1ec3m kho'\n\nWHEN '10' THEN 'Kh\u00e1c'\n END AS bill_mode,\nsafe_cast(b.createdByID AS int64) AS created_by_id,\nsafe_cast(b.technicalId AS int64) AS technical_id,\nb.discount,\nb.points,\nb.usedPoints AS used_points,\nb.money,\nb.saleBonus AS sale_bonus,\nb.moneyTransfer AS money_transfer,\nb.cash,\nb.installmentMoney AS installment_money,\nb.creditMoney AS credit_money,\nb.usedPointsMoney AS money_used_points,\nb.returnFee AS return_fee,\nb.payment,\nb.description,\nb.supplierId AS supplier_id,\nb.couponCode AS coupon_code,\nsafe_cast(b.couponValue AS int64) AS coupon_value,\nsafe_cast(b.customerMoney AS int64) AS customer_money,\nb.moneyReturn AS money_return,\nb.cashAccount AS cash_account,\nb.transferAccount AS transfer_account,\nb.creditCode AS credit_code,\nb.installmentAccount AS installment_account,\nARRAY_AGG(\n    STRUCT(\n        safe_cast(products.id AS int64) AS product_id, \n        products.code AS product_code, \n        products.name AS product_name, \n        safe_cast(products.quantity AS int64) AS quantity, \n        safe_cast(products.price AS int64) AS price, \n        safe_cast(products.discount AS int64) AS discount, \n        safe_cast(products.vat AS int64) AS vat, \n        safe_cast(products.extendedWarrantyMoney AS int64) AS extended_warranty_money\n        )\n) AS products\nFROM\n    source b,\n    unnest(products) products\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__inventories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__inventories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__inventories.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__inventories.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__inventories", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__inventories"], "alias": "stg_nhanhvn__inventories", "checksum": {"name": "sha256", "checksum": "a3a6706dd3e6a30a2234b2bc048299b6bae19f4ca16367fb65fd8c363e7356af"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["product_id", "depot_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "updated_at", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "nhanhvn"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "available": {"name": "available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "remain": {"name": "remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping": {"name": "shipping", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "damaged": {"name": "damaged", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "holding": {"name": "holding", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty": {"name": "warranty", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty_holding": {"name": "warranty_holding", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__inventories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unique_key": ["product_id", "depot_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "nhanhvn"], "incremental_strategy": "insert_overwrite", "partition_by": {"field": "updated_at", "data_type": "timestamp", "granularity": "day"}}, "created_at": 1732268180.71633, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__inventories`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    unique_key = ['product_id','depot_id'],\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'hourly','nhanhvn'],\n    incremental_strategy = 'insert_overwrite',\n    partition_by ={ \"field\": \"updated_at\",\n    \"data_type\": \"timestamp\",\n    \"granularity\": \"day\" }\n) }}\n\nWITH source AS (\n\n    SELECT\n        safe_cast(\n            id AS int64\n        ) AS product_id,\n        datetime_add(\n            _batched_at,\n            INTERVAL 7 HOUR\n        ) AS updated_at,\n        safe_cast(\n            depots.depotId AS int64\n        ) AS depot_id,\n        depots.available,\n        depots.remain,\n        depots.shipping,\n        depots.damaged,\n        depots.holding,\n        depots.warranty,\n        depots.warrantyHolding AS warranty_holding,\n    FROM\n        {{ source(\n            'nhanhvn',\n            'p_webhook_inventoryChange'\n        ) }},\n        unnest(depots) depots\n    WHERE\n        depots.remain IS NOT NULL\n    {% if is_incremental() %}\n    AND date(_batched_at) >= date(_dbt_max_partition)\n    {% endif %}\nUNION ALL\nSELECT\n    safe_cast(\n        idNhanh AS int64\n    ) AS product_id,\n    TIMESTAMP(datetime_add(_batched_at, INTERVAL 7 HOUR)) AS updated_at,\n    safe_cast(\n        depots.depotId AS int64\n    ) AS depot_id,\n    depots.available,\n    depots.remain,\n    depots.shipping,\n    depots.damage,\n    depots.holding,\n    depots.warranty,\n    depots.warrantyHolding AS warranty_holding,\nFROM\n    {{ source(\n        'nhanhvn',\n        'p_inventory'\n    ) }},\n    unnest(depots) depots\nWHERE\n    depots.remain <> 0\n    {% if is_incremental() %}\n      and date(TIMESTAMP(datetime_add(_batched_at, INTERVAL 7 HOUR))) >= date(_dbt_max_partition)\n    {% endif %}\n)\nSELECT\n    inv.product_id,\n    d.depot_name,\n    inv.updated_at,\n    inv.available,\n    inv.remain,\n    inv.shipping,\n    inv.damaged,\n    inv.holding,\n    inv.warranty,\n    inv.warranty_holding,\nFROM\n    source inv\n    LEFT JOIN {{ ref('stg_nhanhvn__depots') }}\n    d\n    ON inv.depot_id = d.depot_id", "language": "sql", "refs": [{"name": "stg_nhanhvn__depots", "package": null, "version": null}], "sources": [["nhanhvn", "p_webhook_inventoryChange"], ["nhanhvn", "p_inventory"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental"], "nodes": ["source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange", "source.sado_analytics_services.nhanhvn.p_inventory", "model.sado_analytics_services.stg_nhanhvn__depots"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__inventories.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        safe_cast(\n            id AS int64\n        ) AS product_id,\n        datetime_add(\n            _batched_at,\n            INTERVAL 7 HOUR\n        ) AS updated_at,\n        safe_cast(\n            depots.depotId AS int64\n        ) AS depot_id,\n        depots.available,\n        depots.remain,\n        depots.shipping,\n        depots.damaged,\n        depots.holding,\n        depots.warranty,\n        depots.warrantyHolding AS warranty_holding,\n    FROM\n        `agile-scheme-394814`.`Nhanhvn`.`p_webhook_inventoryChange`,\n        unnest(depots) depots\n    WHERE\n        depots.remain IS NOT NULL\n    \n    AND date(_batched_at) >= date(_dbt_max_partition)\n    \nUNION ALL\nSELECT\n    safe_cast(\n        idNhanh AS int64\n    ) AS product_id,\n    TIMESTAMP(datetime_add(_batched_at, INTERVAL 7 HOUR)) AS updated_at,\n    safe_cast(\n        depots.depotId AS int64\n    ) AS depot_id,\n    depots.available,\n    depots.remain,\n    depots.shipping,\n    depots.damage,\n    depots.holding,\n    depots.warranty,\n    depots.warrantyHolding AS warranty_holding,\nFROM\n    `agile-scheme-394814`.`Nhanhvn`.`p_inventory_*`,\n    unnest(depots) depots\nWHERE\n    depots.remain <> 0\n    \n      and date(TIMESTAMP(datetime_add(_batched_at, INTERVAL 7 HOUR))) >= date(_dbt_max_partition)\n    \n)\nSELECT\n    inv.product_id,\n    d.depot_name,\n    inv.updated_at,\n    inv.available,\n    inv.remain,\n    inv.shipping,\n    inv.damaged,\n    inv.holding,\n    inv.warranty,\n    inv.warranty_holding,\nFROM\n    source inv\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__depots`\n    d\n    ON inv.depot_id = d.depot_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__users": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__users.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__users.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__users", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__users"], "alias": "stg_nhanhvn__users", "checksum": {"name": "sha256", "checksum": "2c3d4740ef98c811e246d41d529d967b9db0a9ae583c9f84ed0c95071a13dabb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"user_id": {"name": "user_id", "description": "Id nh\u00e2n vi\u00ean", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role": {"name": "role", "description": "Nh\u00f3m quy\u1ec1n nh\u00e2n vi\u00ean", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__users.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1732268180.7480028, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__users`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','nhanhvn']\n  )\n}}\n\n\nWITH source AS (\n  {{ dbt_utils.deduplicate(\n    relation = source(\n        'nhanhvn',\n        'p_users'\n    ),\n    partition_by = 'id',\n    order_by = \"_batched_at desc\",\n) }}\n)\n\nSELECT\n    safe_cast(id as int64) AS user_id,\n    userName AS user_name,\n    email AS email,\n    mobile AS contact_number,\n    roleName AS role,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_users"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.nhanhvn.p_users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__users.sql", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_users_*` original\n        group by id\n    )\n)\n\nSELECT\n    safe_cast(id as int64) AS user_id,\n    userName AS user_name,\n    email AS email,\n    mobile AS contact_number,\n    roleName AS role,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__categories.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__categories.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__categories", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__categories"], "alias": "stg_nhanhvn__categories", "checksum": {"name": "sha256", "checksum": "288840a265b4f261c9a91648a3aa68643ff9ed463c780b65e6960d45ce99e11e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"category_code_level1": {"name": "category_code_level1", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id_level1": {"name": "category_id_level1", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name_level1": {"name": "category_name_level1", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_code_level2": {"name": "category_code_level2", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id_level2": {"name": "category_id_level2", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name_level2": {"name": "category_name_level2", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_code_level3": {"name": "category_code_level3", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id_level3": {"name": "category_id_level3", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name_level3": {"name": "category_name_level3", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_code_level4": {"name": "category_code_level4", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id_level4": {"name": "category_id_level4", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name_level4": {"name": "category_name_level4", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__categories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1732268180.7238135, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__categories`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','nhanhvn']\n  )\n}}\n\nwith source as (\n  {{ dbt_utils.deduplicate(\n    relation = source(\n        'nhanhvn',\n        'p_categories'\n    ),\n    partition_by = 'id',\n    order_by = \"_batched_at desc\",\n) }}\n)\n\nSELECT\n    c1.code AS category_code_level1,\n    c1.id AS category_id_level1,\n    c1.name AS category_name_level1,\n    c2.code AS category_code_level2,\n    c2.id AS category_id_level2,\n    c2.name AS category_name_level2,\n    c3.code AS category_code_level3,\n    c3.id AS category_id_level3,\n    c3.name AS category_name_level3,\n    c4.code AS category_code_level4,\n    c4.id AS category_id_level4,\n    c4.name AS category_name_level4,\nFROM\n    source\n    c1\n    LEFT JOIN source\n    c2\n    ON c1.id = c2.parentId\n    LEFT JOIN source\n    c3\n    ON c2.id = c3.parentId\n    LEFT JOIN source\n    c4\n    ON c3.id = c4.parentId\nWHERE\n    c1.parentId IS NULL", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_categories"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.nhanhvn.p_categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__categories.sql", "compiled": true, "compiled_code": "\n\nwith source as (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_categories_*` original\n        group by id\n    )\n)\n\nSELECT\n    c1.code AS category_code_level1,\n    c1.id AS category_id_level1,\n    c1.name AS category_name_level1,\n    c2.code AS category_code_level2,\n    c2.id AS category_id_level2,\n    c2.name AS category_name_level2,\n    c3.code AS category_code_level3,\n    c3.id AS category_id_level3,\n    c3.name AS category_name_level3,\n    c4.code AS category_code_level4,\n    c4.id AS category_id_level4,\n    c4.name AS category_name_level4,\nFROM\n    source\n    c1\n    LEFT JOIN source\n    c2\n    ON c1.id = c2.parentId\n    LEFT JOIN source\n    c3\n    ON c2.id = c3.parentId\n    LEFT JOIN source\n    c4\n    ON c3.id = c4.parentId\nWHERE\n    c1.parentId IS NULL", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__ordersdetails": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__ordersdetails", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__ordersdetails.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__ordersdetails.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__ordersdetails", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__ordersdetails"], "alias": "stg_nhanhvn__ordersdetails", "checksum": {"name": "sha256", "checksum": "b268ef2dabef64cfc2c71c5534ba3372b8b516b6700746e019f4a64a116862c3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "order_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "created_date", "data_type": "datetime", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "nhanhvn"], "description": "", "columns": {"order_id": {"name": "order_id", "description": "Id \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "T\u00ean kho h\u00e0ng", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Id kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "ID ng\u01b0\u1eddi t\u1ea1o \u0111\u01a1n", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sale_id": {"name": "sale_id", "description": "ID nh\u00e2n vi\u00ean b\u00e1n h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Th\u1eddi gian t\u1ea1o \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "delivery_date": {"name": "delivery_date", "description": "Ng\u00e0y giao h\u00e0ng", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "send_carrier_date": {"name": "send_carrier_date", "description": "Ng\u00e0y giao b\u00ean v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_status": {"name": "order_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_type": {"name": "order_type", "description": "Lo\u1ea1i \u0111\u01a1n h\u00e0ng (Shipping | Shopping)", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "carrier_id": {"name": "carrier_id", "description": "Id nh\u00e0 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "Id d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_discount": {"name": "order_discount", "description": "Chi\u1ebft kh\u1ea5u, tr\u00ean to\u00e0n b\u1ed9 \u0111\u01a1n", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_deposit": {"name": "money_deposit", "description": "Ti\u1ec1n \u0111\u1eb7t c\u1ecdc", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_transfer": {"name": "money_transfer", "description": "Ti\u1ec1n chuy\u1ec3n kho\u1ea3n", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "money_used_points": {"name": "money_used_points", "description": "S\u1ed1 ti\u1ec1n ti\u00eau \u0111i\u1ec3m \u0111\u00e3 ti\u00eau", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_fee": {"name": "ship_fee", "description": "Ph\u00ed v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cod_fee": {"name": "cod_fee", "description": "Ph\u00ed thu ti\u1ec1n h\u1ed9", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_ship_fee": {"name": "customer_ship_fee", "description": "Ph\u00ed thu c\u1ee7a kh\u00e1ch", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_fee": {"name": "return_fee", "description": "Ph\u00ed chuy\u1ec3n ho\u00e0n", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "overweight_fee": {"name": "overweight_fee", "description": "Ph\u00ed v\u01b0\u1ee3t c\u00e2n", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "description": {"name": "description", "description": "ghi ch\u00fa c\u1ee7a kh\u00e1ch h\u00e0ng", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ship_address": {"name": "ship_address", "description": "\u0110\u1ecba ch\u1ec9 giao h\u00e0ng \u0111\u1ebfn c\u1ea5p ph\u01b0\u1eddng/x\u00e3", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receivables": {"name": "receivables", "description": "S\u1ed1 ti\u1ec1n ph\u1ea3i thu KH", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "coupon_code": {"name": "coupon_code", "description": "M\u00e3 coupon", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_order_id": {"name": "shop_order_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tracking_number": {"name": "tracking_number", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_id": {"name": "depot_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "deposit_account": {"name": "deposit_account", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transfer_account": {"name": "transfer_account", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "used_points": {"name": "used_points", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "carrier_code": {"name": "carrier_code", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "declared_fee": {"name": "declared_fee", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_contact_number": {"name": "customer_contact_number", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "products": {"name": "products", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_from_order_id": {"name": "return_from_order_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_channel_id": {"name": "sales_channel_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic_source_id": {"name": "traffic_source_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__ordersdetails.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "partition_by": {"field": "created_date", "data_type": "datetime", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "order_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "nhanhvn"]}, "created_at": 1732268180.756043, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\"field\": \"created_date\", \"data_type\": \"datetime\", \"granularity\": \"day\"},\n    incremental_strategy = 'insert_overwrite',\n    unique_key = 'order_id',\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'hourly','nhanhvn']\n    )\n}}\n\nWITH source AS (\n    select * from \n    {{ source('nhanhvn', 'p_orders') }}\n    where 1=1\n    and createdDateTime is not null\n    {% if is_incremental() %}\n    and date(createdDateTime) in (\n        select distinct date(createdDateTime) \n        from {{ source('nhanhvn', 'p_orders') }} \n        where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(current_date, interval -1 day)\n        )\n    {# and parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(current_date, interval -7 day) #}\n    {% endif %}\n),\n\ndeduplicate as (\n    {{ dbt_utils.deduplicate(\n        relation = 'source',\n        partition_by = 'id',\n        order_by = \"_batched_at desc\",\n    ) }}\n),\n\ndeleted_orders as (\n    {{dbt_utils.deduplicate(\n    relation=source('nhanhvn','p_webhook_orderDelete'),\n    partition_by='orderId',\n    order_by='orderId desc'\n)}}\n),\n\nsalechannels AS (\n    SELECT\n        *\n    FROM\n        unnest([ \n            struct<sale_channel_id NUMERIC, sale_channel string> \n            (1, 'Admin'), (2, 'Website'), (10, 'API'), \n            (20, 'Facebook'), (21, 'Instagram'), (41, 'Lazada.vn'), (42, 'Shopee.vn'), \n            (43, 'Sendo.vn'), (45, 'Tiki.vn'), (46, 'Zalo Shop'), (47, '1Landing.vn'), \n            (48, 'Tiktok Shop'), (49, 'Zalo OA'), (50, 'Shopee Chat'), (51, 'Lazada Chat')\n            ])\n)\nSELECT\n    safe_cast(orders.id AS int64) AS order_id,\n    orders.shopOrderId AS shop_order_id,\n    farm_fingerprint(salechannels.sale_channel) sales_channel_id,\n    orders.merchantTrackingNumber AS tracking_number,\n    safe_cast(orders.depotId AS int64) AS depot_id,\n    orders.depotName AS depot_name,\n    orders.type AS order_type,\n    safe_cast(orders.moneyDiscount AS int64) AS order_discount,\n    safe_cast(orders.moneyDeposit AS int64) AS money_deposit,\n    safe_cast(orders.moneyTransfer AS int64) AS money_transfer,\n    safe_cast(orders.depositAccount AS int64) AS deposit_account,\n    safe_cast(orders.transferAccount AS int64) AS transfer_account,\n    safe_cast(orders.usedPoints AS int64) AS used_points,\n    safe_cast(orders.moneyUsedPoints AS int64) AS money_used_points,\n    safe_cast(orders.carrierId AS int64) AS carrier_id,\n    safe_cast(orders.serviceId AS int64) AS service_id,\n    orders.carrierCode AS carrier_code,\n    safe_cast(orders.shipFee AS int64) AS ship_fee,\n    safe_cast(orders.codFee AS int64) AS cod_fee,\n    safe_cast(orders.customerShipFee AS int64) AS customer_ship_fee,\n    safe_cast(orders.returnFee AS int64) AS return_fee,\n    safe_cast(orders.overWeightShipFee AS int64) AS overweight_fee,\n    safe_cast(orders.declaredFee AS int64) AS declared_fee,\n    orders.description,\n    safe_cast(orders.customerId AS int64) AS customer_id,\n    orders.customerMobile AS customer_contact_number,\n    ARRAY_TO_STRING([orders.customerWard, orders.customerDistrict, orders.customerCity],', ') AS ship_address,\n    safe_cast(orders.createdById AS int64) AS created_by_id,\n    safe_cast(orders.saleId AS int64) AS sale_id,\n    orders.createdDateTime AS created_date,\n    DATE(nullif(orders.deliveryDate,'0000-00-00')) AS delivery_date,\n    DATE(nullif(orders.sendCarrierDate,'0000-00-00')) AS send_carrier_date,\n    orders.statusName AS order_status,\n    safe_cast(orders.calcTotalMoney AS int64) AS receivables,\n    farm_fingerprint(\n        CASE\n            WHEN COALESCE(orders.trafficSourceName,salechannels.sale_channel) IN ('API','Admin') THEN 'Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n'\n            ELSE COALESCE(orders.trafficSourceName,salechannels.sale_channel)\n        END\n    ) AS traffic_source_id,\n    orders.couponCode AS coupon_code,\n    safe_cast(orders.returnFromOrderId AS int64) return_from_order_id,\n    _batched_at as last_sync,\n    ARRAY_AGG(\n        STRUCT(\n            safe_cast(products.productId AS int64) AS product_id, \n            products.productCode AS product_code, \n            safe_cast(products.price AS int64) AS price, \n            safe_cast(products.quantity AS int64) AS quantity, \n            safe_cast(products.discount AS int64) AS item_discount\n            )\n    ) products,\nFROM\n    deduplicate orders,\n    unnest(products) products\n    LEFT JOIN salechannels\n    ON orders.saleChannel = salechannels.sale_channel_id \n    left join deleted_orders\n    on orders.id = deleted_orders.orderId\n    where deleted_orders.orderId is null\n{{ dbt_utils.group_by(38) }}", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_orders"], ["nhanhvn", "p_webhook_orderDelete"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.nhanhvn.p_orders", "source.sado_analytics_services.nhanhvn.p_webhook_orderDelete"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__ordersdetails.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select * from \n    `agile-scheme-394814`.`Nhanhvn`.`p_orders_*`\n    where 1=1\n    and createdDateTime is not null\n    \n    and date(createdDateTime) in (\n        select distinct date(createdDateTime) \n        from `agile-scheme-394814`.`Nhanhvn`.`p_orders_*` \n        where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(current_date, interval -1 day)\n        )\n    \n    \n),\n\ndeduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n),\n\ndeleted_orders as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by orderId desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_webhook_orderDelete` original\n        group by orderId\n    )\n),\n\nsalechannels AS (\n    SELECT\n        *\n    FROM\n        unnest([ \n            struct<sale_channel_id NUMERIC, sale_channel string> \n            (1, 'Admin'), (2, 'Website'), (10, 'API'), \n            (20, 'Facebook'), (21, 'Instagram'), (41, 'Lazada.vn'), (42, 'Shopee.vn'), \n            (43, 'Sendo.vn'), (45, 'Tiki.vn'), (46, 'Zalo Shop'), (47, '1Landing.vn'), \n            (48, 'Tiktok Shop'), (49, 'Zalo OA'), (50, 'Shopee Chat'), (51, 'Lazada Chat')\n            ])\n)\nSELECT\n    safe_cast(orders.id AS int64) AS order_id,\n    orders.shopOrderId AS shop_order_id,\n    farm_fingerprint(salechannels.sale_channel) sales_channel_id,\n    orders.merchantTrackingNumber AS tracking_number,\n    safe_cast(orders.depotId AS int64) AS depot_id,\n    orders.depotName AS depot_name,\n    orders.type AS order_type,\n    safe_cast(orders.moneyDiscount AS int64) AS order_discount,\n    safe_cast(orders.moneyDeposit AS int64) AS money_deposit,\n    safe_cast(orders.moneyTransfer AS int64) AS money_transfer,\n    safe_cast(orders.depositAccount AS int64) AS deposit_account,\n    safe_cast(orders.transferAccount AS int64) AS transfer_account,\n    safe_cast(orders.usedPoints AS int64) AS used_points,\n    safe_cast(orders.moneyUsedPoints AS int64) AS money_used_points,\n    safe_cast(orders.carrierId AS int64) AS carrier_id,\n    safe_cast(orders.serviceId AS int64) AS service_id,\n    orders.carrierCode AS carrier_code,\n    safe_cast(orders.shipFee AS int64) AS ship_fee,\n    safe_cast(orders.codFee AS int64) AS cod_fee,\n    safe_cast(orders.customerShipFee AS int64) AS customer_ship_fee,\n    safe_cast(orders.returnFee AS int64) AS return_fee,\n    safe_cast(orders.overWeightShipFee AS int64) AS overweight_fee,\n    safe_cast(orders.declaredFee AS int64) AS declared_fee,\n    orders.description,\n    safe_cast(orders.customerId AS int64) AS customer_id,\n    orders.customerMobile AS customer_contact_number,\n    ARRAY_TO_STRING([orders.customerWard, orders.customerDistrict, orders.customerCity],', ') AS ship_address,\n    safe_cast(orders.createdById AS int64) AS created_by_id,\n    safe_cast(orders.saleId AS int64) AS sale_id,\n    orders.createdDateTime AS created_date,\n    DATE(nullif(orders.deliveryDate,'0000-00-00')) AS delivery_date,\n    DATE(nullif(orders.sendCarrierDate,'0000-00-00')) AS send_carrier_date,\n    orders.statusName AS order_status,\n    safe_cast(orders.calcTotalMoney AS int64) AS receivables,\n    farm_fingerprint(\n        CASE\n            WHEN COALESCE(orders.trafficSourceName,salechannels.sale_channel) IN ('API','Admin') THEN 'Ch\u01b0a ph\u00e2n lo\u1ea1i ngu\u1ed3n'\n            ELSE COALESCE(orders.trafficSourceName,salechannels.sale_channel)\n        END\n    ) AS traffic_source_id,\n    orders.couponCode AS coupon_code,\n    safe_cast(orders.returnFromOrderId AS int64) return_from_order_id,\n    _batched_at as last_sync,\n    ARRAY_AGG(\n        STRUCT(\n            safe_cast(products.productId AS int64) AS product_id, \n            products.productCode AS product_code, \n            safe_cast(products.price AS int64) AS price, \n            safe_cast(products.quantity AS int64) AS quantity, \n            safe_cast(products.discount AS int64) AS item_discount\n            )\n    ) products,\nFROM\n    deduplicate orders,\n    unnest(products) products\n    LEFT JOIN salechannels\n    ON orders.saleChannel = salechannels.sale_channel_id \n    left join deleted_orders\n    on orders.id = deleted_orders.orderId\n    where deleted_orders.orderId is null\ngroup by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_nhanhvn__carriers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_nhanhvn__carriers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/stg_nhanhvn__carriers.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__carriers.sql", "unique_id": "model.sado_analytics_services.stg_nhanhvn__carriers", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "stg_nhanhvn__carriers"], "alias": "stg_nhanhvn__carriers", "checksum": {"name": "sha256", "checksum": "5f6ac8cdbe6d1d3960915de0dec26b3bac4d346727a8f1860e038059782057d8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "nhanhvn"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "nhanhvn"], "description": "", "columns": {"carrier_id": {"name": "carrier_id", "description": "Id nh\u00e0 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "Id d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_name": {"name": "service_name", "description": "T\u00ean d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/nhanhvn/stg_nhanhvn__carriers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "nhanhvn"]}, "created_at": 1732268180.7265, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__carriers`", "raw_code": "{{ config(\n  tags = ['view', 'dimension','nhanhvn']\n) }}\n\nWITH source AS (\n  {{ dbt_utils.deduplicate(\n    relation = source(\n      'nhanhvn',\n      'p_carriers'\n    ),\n    partition_by = 'id',\n    order_by = \"_batched_at desc\",\n  ) }}\n)\nSELECT\n  safe_cast(\n    carriers.id AS int64\n  ) AS carrier_id,\n  safe_cast(\n    services.id AS int64\n  ) AS service_id,\n  CONCAT(\n    carriers.name,\n    ' - ',\n    services.name\n  ) AS service_name\nFROM\n  source carriers,\n  unnest(services) services", "language": "sql", "refs": [], "sources": [["nhanhvn", "p_carriers"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.nhanhvn.p_carriers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__carriers.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Nhanhvn`.`p_carriers_*` original\n        group by id\n    )\n)\nSELECT\n  safe_cast(\n    carriers.id AS int64\n  ) AS carrier_id,\n  safe_cast(\n    services.id AS int64\n  ) AS service_id,\n  CONCAT(\n    carriers.name,\n    ' - ',\n    services.name\n  ) AS service_name\nFROM\n  source carriers,\n  unnest(services) services", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__inventories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__inventories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__inventories.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__inventories.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__inventories", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__inventories"], "alias": "stg_kiotviet__inventories", "checksum": {"name": "sha256", "checksum": "25e296f7184e81a3746f2b741c29105663b5bb892835b16842d70db70eb70c2f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "fact", "kiotviet"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["product_id", "branch_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "_batched_at", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "fact", "kiotviet"], "description": "", "columns": {"branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_name": {"name": "product_name", "description": "T\u00ean s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "on_hand": {"name": "on_hand", "description": "Number of items on storage", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reserved": {"name": "reserved", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "actual_reserved": {"name": "actual_reserved", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "max_quantity": {"name": "max_quantity", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "min_quantity": {"name": "min_quantity", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "lastest sync to datawarehouse", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__inventories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unique_key": ["product_id", "branch_id"], "partition_by": {"field": "_batched_at", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "fact", "kiotviet"]}, "created_at": 1732268180.846671, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__inventories`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    unique_key = ['product_id','branch_id'],\n    partition_by ={ 'field': '_batched_at',\n    'data_type': 'timestamp',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'hourly','fact','kiotviet']\n) }}\n\nWITH source AS (\n\n    SELECT\n        branchId AS branch_id,\n        productId AS product_id,\n        onhand AS on_hand,\n        reserved,\n        actualReserved AS actual_reserved,\n        maxQuantity AS max_quantity,\n        minQuantity AS min_quantity,\n        _batched_at,\n    FROM\n        {{ source('kiotViet','p_webhook_inventory_update') }}\n\nWHERE 1=1\n{% if is_incremental() %}\n    and date(_batched_at) >= current_date\n{% endif %}\n\nUNION ALL\nSELECT\n    branchId AS branch_id,\n    productId AS product_id,\n    onhand AS on_hand,\n    reserved,\n    actualReserved AS actual_reserved,\n    maxQuantity AS max_quantity,\n    minQuantity AS min_quantity,\n    _batched_at,\nFROM\n    {{ source('kiotViet','p_products_inventory') }}\nWHERE 1=1\n{% if is_incremental() %}\n    and DATE(_batched_at) >= DATE(current_date)\n{% endif %}\n)\n{{ \n    dbt_utils.deduplicate(\n    relation = 'source', \n    partition_by = 'product_id,branch_id, date(_batched_at)', \n    order_by = \"_batched_at desc\",\n    ) \n    }}", "language": "sql", "refs": [], "sources": [["kiotViet", "p_webhook_inventory_update"], ["kiotViet", "p_products_inventory"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_webhook_inventory_update", "source.sado_analytics_services.kiotViet.p_products_inventory"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__inventories.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        branchId AS branch_id,\n        productId AS product_id,\n        onhand AS on_hand,\n        reserved,\n        actualReserved AS actual_reserved,\n        maxQuantity AS max_quantity,\n        minQuantity AS min_quantity,\n        _batched_at,\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_webhook_inventory_update`\n\nWHERE 1=1\n\n    and date(_batched_at) >= current_date\n\n\nUNION ALL\nSELECT\n    branchId AS branch_id,\n    productId AS product_id,\n    onhand AS on_hand,\n    reserved,\n    actualReserved AS actual_reserved,\n    maxQuantity AS max_quantity,\n    minQuantity AS min_quantity,\n    _batched_at,\nFROM\n    `agile-scheme-394814`.`KiotViet`.`p_products_inventory__*`\nWHERE 1=1\n\n    and DATE(_batched_at) >= DATE(current_date)\n\n)\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by product_id,branch_id, date(_batched_at)\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__products": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__products", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__products.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__products.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__products", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__products"], "alias": "stg_kiotviet__products", "checksum": {"name": "sha256", "checksum": "3697c68581055d14a230004354c2b2fa9df090a7495b262667880c4d39357e1f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "product_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "dimension", "kiotviet"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id": {"name": "category_id", "description": "M\u00e3 nh\u00f3m h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_name": {"name": "product_name", "description": "T\u00ean s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "class_name": {"name": "class_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "class_code": {"name": "class_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_active": {"name": "is_active", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "attributes": {"name": "attributes", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_productline": {"name": "sub_productline", "description": "Nh\u00e1nh d\u00f2ng h\u00e0ng, level d\u01b0\u1edbi d\u00f2ng h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "T\u00ean m\u00e3 nh\u00f3m h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "productline": {"name": "productline", "description": "D\u00f2ng h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "trademarkname": {"name": "trademarkname", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_group": {"name": "product_group", "description": "", "meta": {"dimension": {"type": "string", "label": "Product group"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_product_mapping": {"name": "ads_product_mapping", "description": "", "meta": {"dimension": {"type": "string", "label": "Ads products"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code_prefix": {"name": "product_code_prefix", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "year": {"name": "year", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_alow_sale": {"name": "is_alow_sale", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_multiplier": {"name": "product_multiplier", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tax_code": {"name": "tax_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_design_code": {"name": "product_design_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "color_code": {"name": "color_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "size_code": {"name": "size_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "weaving_method_code": {"name": "weaving_method_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "form_code": {"name": "form_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "extended_code": {"name": "extended_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__products.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "merge", "unique_key": "product_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "dimension", "kiotviet"]}, "created_at": 1732268180.8359618, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  incremental_strategy = 'merge',\n  unique_key = 'product_id',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'dimension','kiotviet']\n) }}\n\n{% set patterns ={ \n  \"tax_code\":{ \n    \"custom\":{ '22': '^[X0]{1,2}',\n             '23': '^[Y0]{1,2}' },\n    \"default\": '^Y{1,2}|^0{1,2}',},\n  \"product_design_code\":{ \"custom\":{\"24\":'^(?:[ZXY0]{0,3})([BC0][A-Z]{3}[0-9]{3,5})'}, \"default\": '^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})',},\n  \"color_code\":{ \"default\": '^(?:[ZXY0]{0,3})(?:[BC0]?[A-Z]{3}[0-9]{3,5})([A-Z]{3})',},\n  \"size_code\":{ \"default\": '^(?:[ZXY0]{0,3})(?:[BC0]?[A-Z]{3}[0-9]{3,5})(?:[A-Z]{3})(\\d{2})',},\n  \"weaving_method_code\":{ \"default\": '^[ZXY0]{0,2}?(?:[CB0]?[A-Z]{3}\\d{3,5})(?:[A-Z]{3})(?:\\d{2})([KT0])' },\n  \"form_code\":{ \"default\": \"^[ZXY0]{0,2}?(?:[CB0]?[A-Z]{3}\\d{3,5})(?:[A-Z]{3})(?:\\d{2})(?:[KT0])([0-6])\" }\n}%}\n\nWITH source AS (\n\n  SELECT\n    p.*\n  FROM\n    {{ source('kiotViet','p_products_list') }} p \n    left join {{ source('kiotViet', 'webhook_product_delete') }} wh on p.id = wh.id\n\n  WHERE wh.id is null\n  {% if is_incremental() %}\n    and parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(CURRENT_DATE,INTERVAL -1 DAY)\n  {% endif %}\n),\ndeduplicate AS (\n  {{ dbt_utils.deduplicate(\n    relation = 'source',\n    partition_by = 'id',\n    order_by = \"modifiedDate DESC,_batched_at desc\",\n  ) }}\n),\npreprocess AS (\n  SELECT\n    p.id AS product_id,\n    p.categoryId AS category_id,\n    p.fullName AS product_name,\n    p.code as extended_code,\n    REGEXP_REPLACE(p.fullName,r'\\s\\-.*$','') AS class_name,\n    regexp_extract(p.code,r'-?([A-Z0-9a-z.]+)$') AS product_code,\n    regexp_extract(p.code,r'(\\w+)-') AS product_code_prefix,\n    COALESCE(regexp_extract(p.code, r'[A-Z]{3}(2[1-5])'), \"C\u0169\") AS year,\n    REGEXP_REPLACE(p.code,r'\\d{2}$','') AS class_code,\n    p.trademarkName AS trademarkName,\n    p.allowsSale AS is_alow_sale,\n    p.isActive AS is_active,\n    CASE\n      p.type\n      WHEN 1 THEN 'Combo'\n      WHEN 2 THEN 'H\u00e0ng ho\u00e1'\n      WHEN 3 THEN 'D\u1ecbch v\u1ee5'\n    END AS type,\n    p.attributes,\n    C.sub_productline,\n    C.category,\n    C.productline,\n    C.ads_product_mapping,\n    C.product_group,\n  FROM\n    deduplicate p\n    INNER JOIN {{ ref('stg_kiotviet__categories') }} AS C\n    ON p.categoryId = C.category_id\n)\nSELECT\n  *,\n  coalesce(safe_cast(regexp_extract(product_code_prefix,r'[CX]?(\\d+)[CX]?') as int64),1) as product_multiplier,\n  {% for field, config in patterns.items() -%}\n    {% if config.custom is defined -%}\n    CASE\n        {% for key, pattern in config.custom.items()-%}\n        WHEN p.year = \"{{key}}\" THEN regexp_extract(product_code, r\"{{ pattern }}\")\n        {% endfor -%}\n      else regexp_extract(product_code, r\"{{ config['default'] }}\") end\n      {% else -%}\n      regexp_extract(product_code, r\"{{ config['default'] }}\")\n    {%- endif -%}  AS {{ field }},\n  {% endfor -%}\nFROM\n  preprocess p", "language": "sql", "refs": [{"name": "stg_kiotviet__categories", "package": null, "version": null}], "sources": [["kiotViet", "p_products_list"], ["kiotViet", "webhook_product_delete"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_products_list", "source.sado_analytics_services.kiotViet.webhook_product_delete", "model.sado_analytics_services.stg_kiotviet__categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__products.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH source AS (\n\n  SELECT\n    p.*\n  FROM\n    `agile-scheme-394814`.`KiotViet`.`p_products_list__*` p \n    left join `agile-scheme-394814`.`KiotViet`.`p_webhook_product_delete` wh on p.id = wh.id\n\n  WHERE wh.id is null\n  \n    and parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(CURRENT_DATE,INTERVAL -1 DAY)\n  \n),\ndeduplicate AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modifiedDate DESC,_batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n),\npreprocess AS (\n  SELECT\n    p.id AS product_id,\n    p.categoryId AS category_id,\n    p.fullName AS product_name,\n    p.code as extended_code,\n    REGEXP_REPLACE(p.fullName,r'\\s\\-.*$','') AS class_name,\n    regexp_extract(p.code,r'-?([A-Z0-9a-z.]+)$') AS product_code,\n    regexp_extract(p.code,r'(\\w+)-') AS product_code_prefix,\n    COALESCE(regexp_extract(p.code, r'[A-Z]{3}(2[1-5])'), \"C\u0169\") AS year,\n    REGEXP_REPLACE(p.code,r'\\d{2}$','') AS class_code,\n    p.trademarkName AS trademarkName,\n    p.allowsSale AS is_alow_sale,\n    p.isActive AS is_active,\n    CASE\n      p.type\n      WHEN 1 THEN 'Combo'\n      WHEN 2 THEN 'H\u00e0ng ho\u00e1'\n      WHEN 3 THEN 'D\u1ecbch v\u1ee5'\n    END AS type,\n    p.attributes,\n    C.sub_productline,\n    C.category,\n    C.productline,\n    C.ads_product_mapping,\n    C.product_group,\n  FROM\n    deduplicate p\n    INNER JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__categories` AS C\n    ON p.categoryId = C.category_id\n)\nSELECT\n  *,\n  coalesce(safe_cast(regexp_extract(product_code_prefix,r'[CX]?(\\d+)[CX]?') as int64),1) as product_multiplier,\n  CASE\n        WHEN p.year = \"22\" THEN regexp_extract(product_code, r\"^[X0]{1,2}\")\n        WHEN p.year = \"23\" THEN regexp_extract(product_code, r\"^[Y0]{1,2}\")\n        else regexp_extract(product_code, r\"^Y{1,2}|^0{1,2}\") end\n      AS tax_code,\n  CASE\n        WHEN p.year = \"24\" THEN regexp_extract(product_code, r\"^(?:[ZXY0]{0,3})([BC0][A-Z]{3}[0-9]{3,5})\")\n        else regexp_extract(product_code, r\"^(?:[ZXY0]{0,2})([BC0]?[A-Z]{3}[0-9]{3,5})\") end\n      AS product_design_code,\n  regexp_extract(product_code, r\"^(?:[ZXY0]{0,3})(?:[BC0]?[A-Z]{3}[0-9]{3,5})([A-Z]{3})\")AS color_code,\n  regexp_extract(product_code, r\"^(?:[ZXY0]{0,3})(?:[BC0]?[A-Z]{3}[0-9]{3,5})(?:[A-Z]{3})(\\d{2})\")AS size_code,\n  regexp_extract(product_code, r\"^[ZXY0]{0,2}?(?:[CB0]?[A-Z]{3}\\d{3,5})(?:[A-Z]{3})(?:\\d{2})([KT0])\")AS weaving_method_code,\n  regexp_extract(product_code, r\"^[ZXY0]{0,2}?(?:[CB0]?[A-Z]{3}\\d{3,5})(?:[A-Z]{3})(?:\\d{2})(?:[KT0])([0-6])\")AS form_code,\n  FROM\n  preprocess p", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__invoicepayments": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__invoicepayments", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__invoicepayments.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__invoicepayments.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__invoicepayments", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__invoicepayments"], "alias": "stg_kiotviet__invoicepayments", "checksum": {"name": "sha256", "checksum": "632043f71f5815a774e78b140a191a2e65c74635eb50a674a91908b5cf6a6a7a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_id": {"name": "payment_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_code": {"name": "payment_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_status": {"name": "payment_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_date": {"name": "payment_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_amount": {"name": "payment_amount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccount_id": {"name": "bankaccount_id", "description": "Id t\u00e0i kho\u1ea3n NH tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__invoicepayments.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.8442013, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicepayments`", "raw_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    invoices.transaction_type,\n    invoices.modifiedDate as modified_date\nFROM\n    {{ ref('base_kiotViet__invoices') }}\n    invoices\n    left join unnest(payments) payments", "language": "sql", "refs": [{"name": "base_kiotViet__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__invoices"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__invoicepayments.sql", "compiled": true, "compiled_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    invoices.transaction_type,\n    invoices.modifiedDate as modified_date\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`\n    invoices\n    left join unnest(payments) payments", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__bankaccounts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__bankaccounts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__bankaccounts.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__bankaccounts.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__bankaccounts", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__bankaccounts"], "alias": "stg_kiotviet__bankaccounts", "checksum": {"name": "sha256", "checksum": "d631ddde5fc087b586b18b1c7da0d99296a5fcfbe2d9196741514aef8f77e670"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "list of bank accounts on kiotviet", "columns": {"bankaccount_id": {"name": "bankaccount_id", "description": "Id t\u00e0i kho\u1ea3n NH tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccount_name": {"name": "bankaccount_name", "description": "T\u00ean t\u00e0i kho\u1ea3n tr\u00ean Kiot", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotViet__bankaccounts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1732268180.7754052, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__bankaccounts`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'kiotViet',\n            'p_bankAccounts_list'\n        ),\n        partition_by = 'id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\n\n\nSELECT\n    id AS bankAccount_id,\n    bankName as bankAccount_name,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["kiotViet", "p_bankAccounts_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_bankAccounts_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__bankaccounts.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_bankAccounts_list__*` original\n        group by id\n    )\n)\n\n\nSELECT\n    id AS bankAccount_id,\n    bankName as bankAccount_name,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__customers.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__customers.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__customers", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__customers"], "alias": "stg_kiotviet__customers", "checksum": {"name": "sha256", "checksum": "36143703b2257ef5119626ac73dc84942d42b33d8438992790cdb6d35025d3de"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {"joins": [{"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${stg_kiotviet__customers.branch_id}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "customers fact table", "columns": {"customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_no_customers": {"type": "count_distinct", "label": "Number of customers", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "customer_name": {"name": "customer_name", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "true = Nam, false = N\u1eef, Null = Ch\u01b0a x\u00e1c \u0111\u1ecbnh", "meta": {"dimension": {"type": "boolean"}}, "data_type": "boolean", "constraints": [], "quote": null, "tags": []}, "birth_month": {"name": "birth_month", "description": "Th\u00e1ng sinh nh\u1eadt", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "birth_date": {"name": "birth_date", "description": "", "meta": {"dimension": {"type": "timestamp"}, "metrics": {"m_bday": {"type": "count", "label": "num_bday", "group_label": "Customer Metrics"}}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "S\u1ed1 \u0111i\u1ec7n tho\u1ea1i", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_phones": {"type": "count_distinct", "label": "No. Phones", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "customer_type": {"name": "customer_type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "customer_groups": {"name": "customer_groups", "description": "", "meta": {"dimension": {"type": "string", "sql": "case \n  when lower(customer_groups) like '%b\u1ea1c%' then 'H\u1ea1ng B\u1ea1c'\n  when lower(customer_groups) like '%v\u00e0ng%' then 'H\u1ea1ng V\u00e0ng'\n  when lower(customer_groups) like '%kim c\u01b0\u01a1ng%' then 'H\u1ea1ng Kim C\u01b0\u01a1ng'\n  when lower(customer_groups) like '%vip%' then 'H\u1ea1ng VIP'\n  else 'H\u1ea1ng th\u01b0\u1eddng' end"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "debt": {"name": "debt", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "total_invoiced": {"name": "total_invoiced", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_invoiced": {"type": "average", "label": "Avg Invoiced Value", "group_label": "Customer Metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "total_point": {"name": "total_point", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_points": {"type": "sum", "label": "Total Points", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "total_revenue": {"name": "total_revenue", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_revenue": {"type": "average", "label": "Avg Revenue", "group_label": "Customer Metrics", "compact": "millions", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "rewardpoint": {"name": "rewardpoint", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_rewarded_points": {"type": "sum", "label": "Total Rewarded Points", "group_label": "Customer Metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": "timestamp", "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "T\u00ean c\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": true, "tags": []}, "customer_recency_group": {"name": "customer_recency_group", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${stg_kiotviet__customers.branch_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__customers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${stg_kiotviet__customers.branch_id}"}]}, "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1732268180.7840173, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers`", "raw_code": "{{ config(\n    tags = ['view', 'dimension','kiotviet']\n) }}\n\nWITH staging AS (\n\n    SELECT\n        C.id AS customer_id,\n        C.code AS customer_code,\n        C.NAME AS customer_name,\n        C.gender,\n        EXTRACT(\n            MONTH\n            FROM\n                C.birthDate\n        ) AS birth_month,\n        C.birthDate AS birth_date,\n        regexp_replace(C.contactNumber,r'\\D','') AS contact_number,\n        C.branchId AS branch_id,\n        C.TYPE AS customer_type,\n        C.groups AS customer_groups,\n        C.debt,\n        C.totalInvoiced AS total_invoiced,\n        C.totalPoint AS total_point,\n        C.totalRevenue AS total_revenue,\n        C.rewardPoint AS rewardpoint,\n        C.createdDate AS created_date,\n        B.branch_name,\n        C.modifieddate as modified_date,\n    FROM\n        {{ ref('base_kiotViet__customers') }} C\n    left join  {{ref('stg_kiotviet__branches')}} B on C.branchId = B.branch_id\n)\nSELECT\n    DISTINCT staging.customer_id,\n    staging.customer_name,\n    staging.gender,\n    staging.birth_month,\n    staging.birth_date,\n    case \n        when \n            length(staging.contact_number) = 9 \n            and regexp_contains(staging.contact_number,r'^[1-9]') \n            then concat('0',staging.contact_number) \n        else \n            regexp_replace(staging.contact_number,r'^(84|840)','0') \n        end as contact_number,\n    staging.branch_id,\n    staging.customer_type,\n    staging.customer_groups,\n    staging.debt,\n    staging.total_invoiced,\n    staging.total_point,\n    staging.total_revenue,\n    staging.rewardpoint,\n    staging.created_date,\n    staging.branch_name,\n    staging.modified_date,\n    CASE\n        WHEN DATE_TRUNC(DATE(staging.created_date), MONTH) < DATE_TRUNC(CURRENT_DATE(), MONTH) THEN 'old'\n        ELSE 'new'END AS customer_recency_group,\n    FROM\n        staging", "language": "sql", "refs": [{"name": "base_kiotViet__customers", "package": null, "version": null}, {"name": "stg_kiotviet__branches", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__customers", "model.sado_analytics_services.stg_kiotviet__branches"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__customers.sql", "compiled": true, "compiled_code": "\n\nWITH staging AS (\n\n    SELECT\n        C.id AS customer_id,\n        C.code AS customer_code,\n        C.NAME AS customer_name,\n        C.gender,\n        EXTRACT(\n            MONTH\n            FROM\n                C.birthDate\n        ) AS birth_month,\n        C.birthDate AS birth_date,\n        regexp_replace(C.contactNumber,r'\\D','') AS contact_number,\n        C.branchId AS branch_id,\n        C.TYPE AS customer_type,\n        C.groups AS customer_groups,\n        C.debt,\n        C.totalInvoiced AS total_invoiced,\n        C.totalPoint AS total_point,\n        C.totalRevenue AS total_revenue,\n        C.rewardPoint AS rewardpoint,\n        C.createdDate AS created_date,\n        B.branch_name,\n        C.modifieddate as modified_date,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__customers` C\n    left join  `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches` B on C.branchId = B.branch_id\n)\nSELECT\n    DISTINCT staging.customer_id,\n    staging.customer_name,\n    staging.gender,\n    staging.birth_month,\n    staging.birth_date,\n    case \n        when \n            length(staging.contact_number) = 9 \n            and regexp_contains(staging.contact_number,r'^[1-9]') \n            then concat('0',staging.contact_number) \n        else \n            regexp_replace(staging.contact_number,r'^(84|840)','0') \n        end as contact_number,\n    staging.branch_id,\n    staging.customer_type,\n    staging.customer_groups,\n    staging.debt,\n    staging.total_invoiced,\n    staging.total_point,\n    staging.total_revenue,\n    staging.rewardpoint,\n    staging.created_date,\n    staging.branch_name,\n    staging.modified_date,\n    CASE\n        WHEN DATE_TRUNC(DATE(staging.created_date), MONTH) < DATE_TRUNC(CURRENT_DATE(), MONTH) THEN 'old'\n        ELSE 'new'END AS customer_recency_group,\n    FROM\n        staging", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__branches": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__branches", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__branches.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__branches.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__branches", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__branches"], "alias": "stg_kiotviet__branches", "checksum": {"name": "sha256", "checksum": "baabdada2caba5b444003a50b65a64ed3306ab50fb18729592e1be79c1dc78d9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "list of branches on kiotviet", "columns": {"branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "T\u00ean c\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ward_name": {"name": "ward_name", "description": "Ph\u01b0\u1eddng/x\u00e3", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_number": {"name": "contact_number", "description": "S\u1ed1 \u0111i\u1ec7n tho\u1ea1i", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "Ng\u00e0y ch\u1ec9nh s\u1eeda", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__branches.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1732268180.8423197, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__branches`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\nwith source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'kiotViet',\n            'p_branches_list'\n        ),\n        partition_by = 'id',\n        order_by = \"modifiedDate DESC,_batched_at desc\",\n    ) }}\n)\n\nSELECT\n    b.id as branch_id,\n    b.branchName as branch_name,\n    b.address,\n    b.wardName ward_name,\n    regexp_replace(b.contactNumber,r'\\.|\\,|\\s','') as contact_number,\n    b.email,\n    b.createdDate as created_Date,\n    b.modifiedDate as modified_date,\n    case \n        when b.branchName = '5S Web' then 'Online'\n        when b.branchName like 'DX%' then \"\u0110i\u1ec3m x\u1ea3\"\n        when b.branchName like 'PU%' then \"Popup\"\n        when b.branchName like '5S%' then \"Offline\"\n        else \"Kho & CH kh\u00e1c Kiotviet\" end as channel\nFROM\n    source b", "language": "sql", "refs": [], "sources": [["kiotViet", "p_branches_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_branches_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__branches.sql", "compiled": true, "compiled_code": "\n\nwith source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modifiedDate DESC,_batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_branches_list__*` original\n        group by id\n    )\n)\n\nSELECT\n    b.id as branch_id,\n    b.branchName as branch_name,\n    b.address,\n    b.wardName ward_name,\n    regexp_replace(b.contactNumber,r'\\.|\\,|\\s','') as contact_number,\n    b.email,\n    b.createdDate as created_Date,\n    b.modifiedDate as modified_date,\n    case \n        when b.branchName = '5S Web' then 'Online'\n        when b.branchName like 'DX%' then \"\u0110i\u1ec3m x\u1ea3\"\n        when b.branchName like 'PU%' then \"Popup\"\n        when b.branchName like '5S%' then \"Offline\"\n        else \"Kho & CH kh\u00e1c Kiotviet\" end as channel\nFROM\n    source b", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__transfers_details": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__transfers_details", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__transfers_details.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__transfers_details.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__transfers_details", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__transfers_details"], "alias": "stg_kiotviet__transfers_details", "checksum": {"name": "sha256", "checksum": "141a009e494a7094a9fbfd3c2062dfb27d6cd3d101a7b23c1b1c55b3b60add9a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "kiotviet"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "sent_date", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "kiotviet"], "description": "", "columns": {"sent_date": {"name": "sent_date", "description": "", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": true, "tags": []}, "received_date": {"name": "received_date", "description": "", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": true, "tags": []}, "transfer_code": {"name": "transfer_code", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "description": {"name": "description", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "transfer_branch_id": {"name": "transfer_branch_id", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "receipt_branch_id": {"name": "receipt_branch_id", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "is_active": {"name": "is_active", "description": "", "meta": {}, "data_type": "boolean", "constraints": [], "quote": true, "tags": []}, "transfer_status": {"name": "transfer_status", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "transfer_id": {"name": "transfer_id", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "product_id": {"name": "product_id", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "product_name": {"name": "product_name", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "send_quantity": {"name": "send_quantity", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "receive_quantity": {"name": "receive_quantity", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "send_price": {"name": "send_price", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "receive_price": {"name": "receive_price", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}, "price": {"name": "price", "description": "", "meta": {}, "data_type": "numeric", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__transfers_details.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "on_schema_change": "sync_all_columns", "partition_by": {"field": "sent_date", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "tags": ["incremental", "hourly", "kiotviet"]}, "created_at": 1732268180.7920508, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__transfers_details`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    on_schema_change = 'sync_all_columns',\n    partition_by ={ \"field\": \"sent_date\",\n    \"data_type\": \"timestamp\",\n    \"granularity\": \"day\" },\n    incremental_strategy = 'insert_overwrite',\n    tags = ['incremental', 'hourly','kiotviet']\n) }}\n\n{% set status = {\n    2: '\u0110ang chuy\u1ec3n',\n    3: '\u0110\u00e3 nh\u1eadn',\n    4: '\u0110\u00e3 h\u1ee7y',\n}\n%}\n\nwith source as (\n    SELECT *\n    FROM\n        {{ source('kiotViet','p_transfers_list') }}\n    WHERE\n        1=1\n    {% if is_incremental() %}\n        and date(dispatchedDate) in (\n            select \n                distinct date(dispatchedDate) \n            from {{ source('kiotViet','p_transfers_list') }} \n                where parse_date('%Y%m%d',_TABLE_SUFFIX) >= current_date\n            )\n    {% endif %}\n),\n\nraw_ as (\n    {{ dbt_utils.deduplicate(\n        relation = 'source',\n        partition_by = 'id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\n\nselect\n    dispatchedDate as sent_date,\n    receivedDate as received_date,\n    code as transfer_code,\n    description,\n    fromBranchId as transfer_branch_id,\n    toBranchId as receipt_branch_id,\n    isActive as is_active,\n    case status \n    {%for k,v in status.items()%}\n        when {{k}} then '{{v}}'\n    {%endfor%} end as transfer_status,\n    id as transfer_id,\n    transferDetails.productId as product_id,\n    transferDetails.productCode as product_code,\n    transferDetails.productName as product_name,\n    transferDetails.sendQuantity as send_quantity,\n    transferDetails.receiveQuantity as receive_quantity,\n    transferDetails.sendPrice as send_price,\n    transferDetails.receivePrice as receive_price,\n    transferDetails.price as price,\nfrom raw_\nleft join unnest(transferDetails) transferDetails", "language": "sql", "refs": [], "sources": [["kiotViet", "p_transfers_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_transfers_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__transfers_details.sql", "compiled": true, "compiled_code": "\n\n\n\nwith source as (\n    SELECT *\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_transfers_list__*`\n    WHERE\n        1=1\n    \n        and date(dispatchedDate) in (\n            select \n                distinct date(dispatchedDate) \n            from `agile-scheme-394814`.`KiotViet`.`p_transfers_list__*` \n                where parse_date('%Y%m%d',_TABLE_SUFFIX) >= current_date\n            )\n    \n),\n\nraw_ as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\n\nselect\n    dispatchedDate as sent_date,\n    receivedDate as received_date,\n    code as transfer_code,\n    description,\n    fromBranchId as transfer_branch_id,\n    toBranchId as receipt_branch_id,\n    isActive as is_active,\n    case status \n    \n        when 2 then '\u0110ang chuy\u1ec3n'\n    \n        when 3 then '\u0110\u00e3 nh\u1eadn'\n    \n        when 4 then '\u0110\u00e3 h\u1ee7y'\n     end as transfer_status,\n    id as transfer_id,\n    transferDetails.productId as product_id,\n    transferDetails.productCode as product_code,\n    transferDetails.productName as product_name,\n    transferDetails.sendQuantity as send_quantity,\n    transferDetails.receiveQuantity as receive_quantity,\n    transferDetails.sendPrice as send_price,\n    transferDetails.receivePrice as receive_price,\n    transferDetails.price as price,\nfrom raw_\nleft join unnest(transferDetails) transferDetails", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__purchaseorders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__purchaseorders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__purchaseorders.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__purchaseorders.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__purchaseorders", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__purchaseorders"], "alias": "stg_kiotviet__purchaseorders", "checksum": {"name": "sha256", "checksum": "6397f5aa9070245a4f9f52cb06774f1abca54168faeab5aa92a04276e8da4a02"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supplier_id": {"name": "supplier_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "partner_type": {"name": "partner_type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "T\u1ed5ng gi\u00e1 tr\u1ecb sau gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "S\u1ed1 ti\u1ec1n \u0111\u00e3 thanh to\u00e1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "gi\u00e1 tr\u1ecb gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__purchaseorders.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.7859797, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__purchaseorders`", "raw_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    purchaseById AS employee_id,\n    supplierId as supplier_id,\n    partnerType as partner_type,\n    total,\n    totalPayment as total_payment,\n    discount,\n    discountRatio as discount_ratio ,\n    transaction_status,\n    createdDate as created_date,\nFROM\n    {{ ref('base_kiotViet__purchaseOrders') }}", "language": "sql", "refs": [{"name": "base_kiotViet__purchaseOrders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__purchaseorders.sql", "compiled": true, "compiled_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    purchaseById AS employee_id,\n    supplierId as supplier_id,\n    partnerType as partner_type,\n    total,\n    totalPayment as total_payment,\n    discount,\n    discountRatio as discount_ratio ,\n    transaction_status,\n    createdDate as created_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__suppliers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__suppliers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__suppliers.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__suppliers.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__suppliers", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__suppliers"], "alias": "stg_kiotviet__suppliers", "checksum": {"name": "sha256", "checksum": "1dbaef14fa7876bb9c6c1cbd17dd0e784856d283cf45ccb0a4c827785b779217"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "", "columns": {"supplier_id": {"name": "supplier_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supplier_name": {"name": "supplier_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supplier_code": {"name": "supplier_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__suppliers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1732268180.7733078, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__suppliers`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\nSELECT\n    distinct\n    supplierId as supplier_id,\n    supplierName as supplier_name,\n    supplierCode as supplier_code\nFROM\n    {{ ref('base_kiotViet__purchaseOrders') }}", "language": "sql", "refs": [{"name": "base_kiotViet__purchaseOrders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__suppliers.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    distinct\n    supplierId as supplier_id,\n    supplierName as supplier_name,\n    supplierCode as supplier_code\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__returnpayments": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__returnpayments", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__returnpayments.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__returnpayments.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__returnpayments", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__returnpayments"], "alias": "stg_kiotviet__returnpayments", "checksum": {"name": "sha256", "checksum": "ccb45f78e1e7a56208534bd558c900680e8605b033ea17b143ffa3a1ac261c97"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_id": {"name": "payment_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_code": {"name": "payment_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_status": {"name": "payment_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_date": {"name": "payment_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_amount": {"name": "payment_amount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccount_id": {"name": "bankaccount_id", "description": "Id t\u00e0i kho\u1ea3n NH tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__returnpayments.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.8029556, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returnpayments`", "raw_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue AS transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    returns.transaction_type,\n    modifiedDate as modified_date,\nFROM\n    {{ ref('base_kiotViet__returns') }}\n    returns\n    left join unnest(payments) payments", "language": "sql", "refs": [{"name": "base_kiotViet__returns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__returns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__returnpayments.sql", "compiled": true, "compiled_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue AS transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    payments.id AS payment_id,\n    payments.code AS payment_code,\n    payments.statusValue AS payment_status,\n    payments.transDate as payment_date,\n    payments.amount AS payment_amount,\n    payments.method AS payment_method,\n    payments.accountId AS bankaccount_id,\n    returns.transaction_type,\n    modifiedDate as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`\n    returns\n    left join unnest(payments) payments", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__categories.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__categories.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__categories", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__categories"], "alias": "stg_kiotviet__categories", "checksum": {"name": "sha256", "checksum": "7f9b079fc50b825128f4d8c886419ab5f27e51e31f169ee9f5785f896f864b33"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "", "columns": {"sub_productline": {"name": "sub_productline", "description": "Nh\u00e1nh d\u00f2ng h\u00e0ng, level d\u01b0\u1edbi d\u00f2ng h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_id": {"name": "category_id", "description": "M\u00e3 nh\u00f3m h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "T\u00ean m\u00e3 nh\u00f3m h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "productline": {"name": "productline", "description": "D\u00f2ng h\u00e0ng", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ads_product_mapping": {"name": "ads_product_mapping", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_group": {"name": "product_group", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__categories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1732268180.845314, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__categories`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\n{% set mapping = { \n  \"Qu\u00e0 t\u1eb7ng\" : {\n    \"QTA\":['^qu\u00e0 t\u1eb7ng',\"nl q\u00f9a t\u1eb7ng t\u00fai x\u00e1ch balo\"],\n  },\n  \"Ph\u1ee5 ki\u1ec7n\" : {\n    \"PKN\":['t\u1ea5t','ba l\u1ed7 l\u00f3t','s\u1ecbp','ph\u1ee5 ki\u1ec7n',\"\u00e1o l\u00f3t c\u1ed9c tay\", \"d\u00e2y l\u01b0ng\",\"gi\u00e0y\",\"kh\u1ea9u trang\",\"v\u00ed\",\"carvat\"],\n  },\n  \"Quanh n\u0103m\": {\n    \"SMD\":['s\u01a1 mi d\u00e0i'],\n    \"QKD\":['qu\u1ea7n khaki'],\n    \"QBD\":['qu\u1ea7n jean'],\n    \"QAU\":[\"qu\u1ea7n \u00e2u\"],\n  },\n  \"Thu \u0111\u00f4ng\": {\n    \"AKB\":['\u00e1o bomber'],\n    \"ABZ\":[\"\u00e1o blazer\"],\n    \"AGB\":[\"\u00e1o gi\u00f3 b\u1ed9\"],\n    \"AKG\":[\"\u00e1o gi\u00f3\",\"b\u1ed9 gi\u00f3\",\"\u00e1o kho\u00e1c gi\u00f3\",\"\u00e1o kho\u00e1c\"],\n    \"AGN\":[\"\u00e1o gi\u1eef nhi\u1ec7t\"],\n    \"AKD\":[\"\u00e1o kho\u00e1c da\"],\n    \"ALO\":[\"\u00e1o len\"],\n    \"ANO\":[\"\u00e1o n\u1ec9 r\u1eddi\"],\n    \"AKC\":[\"\u00e1o phao\"],\n    \"APD\":['\u00e1o polo d\u00e0i tay'],\n    \"APO\":[\"\u00e1o thun d\u00e0i tay\"],\n    \"ANB\":[\"\u00e1o n\u1ec9 b\u1ed9\"],\n    \"AVB\":[\"\u00e1o vest\",\"b\u1ed9 \u0111\u1ed3\",\"b\u1ed9 vest\"],\n    \"BNI\":[\"b\u1ed9 n\u1ec9\",],\n    \"QGB\":[\"qu\u1ea7n gi\u00f3 b\u1ed9\"],\n    \"QNB\":[\"qu\u1ea7n n\u1ec9 b\u1ed9\"],\n    \"QVE\":[\"qu\u1ea7n vest\"],\n    \"QDT\":['qu\u1ea7n d\u00e0i th\u1ec3 thao'],\n    \"QNI\":['qu\u1ea7n n\u1ec9 r\u1eddi'],\n  },\n  \"Xu\u00e2n h\u00e8\" : {\n    \"ABL\":['\u00e1o ba l\u1ed7'],\n    \"ACN\":['\u00e1o ch\u1ed1ng n\u1eafng'],\n    \"ASN\": ['\u00e1o s\u00e1t n\u00e1ch',],\n    \"ATS\":['b\u1ed9 t-shirt','tshirt',\"t-shirt c\u0169\",\"t-shirt th\u1ec3 thao\",\"t-shirt thi\u1ebft k\u1ebf\"],\n    \"QSG\":['qu\u1ea7n short gi\u00f3'],\n    \"QSK\":['qu\u1ea7n short kaki'],\n    \"QST\":['qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac',\"qu\u1ea7n b\u1ed9 polo\",\"qu\u1ea7n b\u1ed9 tshirt\",\"qu\u1ea7n short v\u1ea3i\",\"qu\u1ea7n short \u00e2u\"],\n    \"QSC\":[\"qu\u1ea7n short casual\"],\n    \"SMC\":['s\u01a1 mi c\u1ed9c'],\n    \"APB\":[\"\u00e1o b\u1ed9 polo\",\"b\u1ed9 polo\"],\n    \"APC\":['polo'],\n  },\n  \n} %}\n\nWITH source AS (\n\n    {{ dbt_utils.deduplicate(relation = source(\n            'kiotViet',\n            'p_categories_list'\n        ), partition_by = 'categoryId', order_by = \"modifiedDate DESC,_batched_at desc\",) }}\n)\n\n{# with preprocess as ( #}\n  SELECT\n    r1.categoryName category,\n    r1.categoryId as category_id,\n    case when coalesce(r2.categoryName,r1.categoryName) = coalesce(r3.categoryName,r2.categoryName,r1.categoryName) then r1.categoryName else coalesce(r2.categoryName,r1.categoryName) end as sub_productline,\n    {# coalesce(r2.categoryName,r1.categoryName) AS sub_productline, #}\n    coalesce(r3.categoryName,r2.categoryName,r1.categoryName) AS productLine,\n    CASE\n    {% for season,product_groups in mapping.items() -%}\n      {% for key,values in product_groups.items() -%}\n      WHEN LOWER(r2.categoryName) IN ('{{ values|join(\"','\") }}') \n      or LOWER(r1.categoryName) IN ('{{ values|join(\"','\") }}') THEN '{{key|lower()}}'\n      {% endfor -%}\n    {% endfor -%}\n    ELSE LOWER(\n      r2.categoryName\n    )\n  END AS ads_product_mapping,\n  CASE\n    {% for season,product_groups in mapping.items() -%}\n      {% for key,values in product_groups.items() -%}\n    WHEN regexp_contains(lower(r1.categoryName),r'{{ values|join(\"|\") }}') THEN '{{season|upper()}}'\n      {% endfor -%}\n    {% endfor -%}\n    ELSE 'KH\u00d4NG PH\u00c2N LO\u1ea0I' END AS product_group,\nFROM\n    source\n    r1\n    left JOIN source\n    r2\n    ON r1.parentId = r2.categoryId\n    left JOIN source\n    r3\n    ON r2.parentId = r3.categoryId\n    {# )\n\n  select \n  from preprocess p1 #}", "language": "sql", "refs": [], "sources": [["kiotViet", "p_categories_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_categories_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__categories.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH source AS (\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modifiedDate DESC,_batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_categories_list__*` original\n        group by categoryId\n    )\n)\n\n\n  SELECT\n    r1.categoryName category,\n    r1.categoryId as category_id,\n    case when coalesce(r2.categoryName,r1.categoryName) = coalesce(r3.categoryName,r2.categoryName,r1.categoryName) then r1.categoryName else coalesce(r2.categoryName,r1.categoryName) end as sub_productline,\n    \n    coalesce(r3.categoryName,r2.categoryName,r1.categoryName) AS productLine,\n    CASE\n    WHEN LOWER(r2.categoryName) IN ('^qu\u00e0 t\u1eb7ng','nl q\u00f9a t\u1eb7ng t\u00fai x\u00e1ch balo') \n      or LOWER(r1.categoryName) IN ('^qu\u00e0 t\u1eb7ng','nl q\u00f9a t\u1eb7ng t\u00fai x\u00e1ch balo') THEN 'qta'\n      WHEN LOWER(r2.categoryName) IN ('t\u1ea5t','ba l\u1ed7 l\u00f3t','s\u1ecbp','ph\u1ee5 ki\u1ec7n','\u00e1o l\u00f3t c\u1ed9c tay','d\u00e2y l\u01b0ng','gi\u00e0y','kh\u1ea9u trang','v\u00ed','carvat') \n      or LOWER(r1.categoryName) IN ('t\u1ea5t','ba l\u1ed7 l\u00f3t','s\u1ecbp','ph\u1ee5 ki\u1ec7n','\u00e1o l\u00f3t c\u1ed9c tay','d\u00e2y l\u01b0ng','gi\u00e0y','kh\u1ea9u trang','v\u00ed','carvat') THEN 'pkn'\n      WHEN LOWER(r2.categoryName) IN ('s\u01a1 mi d\u00e0i') \n      or LOWER(r1.categoryName) IN ('s\u01a1 mi d\u00e0i') THEN 'smd'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n khaki') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n khaki') THEN 'qkd'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n jean') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n jean') THEN 'qbd'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n \u00e2u') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n \u00e2u') THEN 'qau'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o bomber') \n      or LOWER(r1.categoryName) IN ('\u00e1o bomber') THEN 'akb'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o blazer') \n      or LOWER(r1.categoryName) IN ('\u00e1o blazer') THEN 'abz'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o gi\u00f3 b\u1ed9') \n      or LOWER(r1.categoryName) IN ('\u00e1o gi\u00f3 b\u1ed9') THEN 'agb'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o gi\u00f3','b\u1ed9 gi\u00f3','\u00e1o kho\u00e1c gi\u00f3','\u00e1o kho\u00e1c') \n      or LOWER(r1.categoryName) IN ('\u00e1o gi\u00f3','b\u1ed9 gi\u00f3','\u00e1o kho\u00e1c gi\u00f3','\u00e1o kho\u00e1c') THEN 'akg'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o gi\u1eef nhi\u1ec7t') \n      or LOWER(r1.categoryName) IN ('\u00e1o gi\u1eef nhi\u1ec7t') THEN 'agn'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o kho\u00e1c da') \n      or LOWER(r1.categoryName) IN ('\u00e1o kho\u00e1c da') THEN 'akd'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o len') \n      or LOWER(r1.categoryName) IN ('\u00e1o len') THEN 'alo'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o n\u1ec9 r\u1eddi') \n      or LOWER(r1.categoryName) IN ('\u00e1o n\u1ec9 r\u1eddi') THEN 'ano'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o phao') \n      or LOWER(r1.categoryName) IN ('\u00e1o phao') THEN 'akc'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o polo d\u00e0i tay') \n      or LOWER(r1.categoryName) IN ('\u00e1o polo d\u00e0i tay') THEN 'apd'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o thun d\u00e0i tay') \n      or LOWER(r1.categoryName) IN ('\u00e1o thun d\u00e0i tay') THEN 'apo'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o n\u1ec9 b\u1ed9') \n      or LOWER(r1.categoryName) IN ('\u00e1o n\u1ec9 b\u1ed9') THEN 'anb'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o vest','b\u1ed9 \u0111\u1ed3','b\u1ed9 vest') \n      or LOWER(r1.categoryName) IN ('\u00e1o vest','b\u1ed9 \u0111\u1ed3','b\u1ed9 vest') THEN 'avb'\n      WHEN LOWER(r2.categoryName) IN ('b\u1ed9 n\u1ec9') \n      or LOWER(r1.categoryName) IN ('b\u1ed9 n\u1ec9') THEN 'bni'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n gi\u00f3 b\u1ed9') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n gi\u00f3 b\u1ed9') THEN 'qgb'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n n\u1ec9 b\u1ed9') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n n\u1ec9 b\u1ed9') THEN 'qnb'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n vest') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n vest') THEN 'qve'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n d\u00e0i th\u1ec3 thao') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n d\u00e0i th\u1ec3 thao') THEN 'qdt'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n n\u1ec9 r\u1eddi') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n n\u1ec9 r\u1eddi') THEN 'qni'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o ba l\u1ed7') \n      or LOWER(r1.categoryName) IN ('\u00e1o ba l\u1ed7') THEN 'abl'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o ch\u1ed1ng n\u1eafng') \n      or LOWER(r1.categoryName) IN ('\u00e1o ch\u1ed1ng n\u1eafng') THEN 'acn'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o s\u00e1t n\u00e1ch') \n      or LOWER(r1.categoryName) IN ('\u00e1o s\u00e1t n\u00e1ch') THEN 'asn'\n      WHEN LOWER(r2.categoryName) IN ('b\u1ed9 t-shirt','tshirt','t-shirt c\u0169','t-shirt th\u1ec3 thao','t-shirt thi\u1ebft k\u1ebf') \n      or LOWER(r1.categoryName) IN ('b\u1ed9 t-shirt','tshirt','t-shirt c\u0169','t-shirt th\u1ec3 thao','t-shirt thi\u1ebft k\u1ebf') THEN 'ats'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n short gi\u00f3') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n short gi\u00f3') THEN 'qsg'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n short kaki') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n short kaki') THEN 'qsk'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac','qu\u1ea7n b\u1ed9 polo','qu\u1ea7n b\u1ed9 tshirt','qu\u1ea7n short v\u1ea3i','qu\u1ea7n short \u00e2u') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun','qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac','qu\u1ea7n b\u1ed9 polo','qu\u1ea7n b\u1ed9 tshirt','qu\u1ea7n short v\u1ea3i','qu\u1ea7n short \u00e2u') THEN 'qst'\n      WHEN LOWER(r2.categoryName) IN ('qu\u1ea7n short casual') \n      or LOWER(r1.categoryName) IN ('qu\u1ea7n short casual') THEN 'qsc'\n      WHEN LOWER(r2.categoryName) IN ('s\u01a1 mi c\u1ed9c') \n      or LOWER(r1.categoryName) IN ('s\u01a1 mi c\u1ed9c') THEN 'smc'\n      WHEN LOWER(r2.categoryName) IN ('\u00e1o b\u1ed9 polo','b\u1ed9 polo') \n      or LOWER(r1.categoryName) IN ('\u00e1o b\u1ed9 polo','b\u1ed9 polo') THEN 'apb'\n      WHEN LOWER(r2.categoryName) IN ('polo') \n      or LOWER(r1.categoryName) IN ('polo') THEN 'apc'\n      ELSE LOWER(\n      r2.categoryName\n    )\n  END AS ads_product_mapping,\n  CASE\n    WHEN regexp_contains(lower(r1.categoryName),r'^qu\u00e0 t\u1eb7ng|nl q\u00f9a t\u1eb7ng t\u00fai x\u00e1ch balo') THEN 'QU\u00c0 T\u1eb6NG'\n      WHEN regexp_contains(lower(r1.categoryName),r't\u1ea5t|ba l\u1ed7 l\u00f3t|s\u1ecbp|ph\u1ee5 ki\u1ec7n|\u00e1o l\u00f3t c\u1ed9c tay|d\u00e2y l\u01b0ng|gi\u00e0y|kh\u1ea9u trang|v\u00ed|carvat') THEN 'PH\u1ee4 KI\u1ec6N'\n      WHEN regexp_contains(lower(r1.categoryName),r's\u01a1 mi d\u00e0i') THEN 'QUANH N\u0102M'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n khaki') THEN 'QUANH N\u0102M'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n jean') THEN 'QUANH N\u0102M'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n \u00e2u') THEN 'QUANH N\u0102M'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o bomber') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o blazer') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o gi\u00f3 b\u1ed9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o gi\u00f3|b\u1ed9 gi\u00f3|\u00e1o kho\u00e1c gi\u00f3|\u00e1o kho\u00e1c') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o gi\u1eef nhi\u1ec7t') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o kho\u00e1c da') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o len') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o n\u1ec9 r\u1eddi') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o phao') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o polo d\u00e0i tay') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o thun d\u00e0i tay') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o n\u1ec9 b\u1ed9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o vest|b\u1ed9 \u0111\u1ed3|b\u1ed9 vest') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'b\u1ed9 n\u1ec9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n gi\u00f3 b\u1ed9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n n\u1ec9 b\u1ed9') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n vest') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n d\u00e0i th\u1ec3 thao') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n n\u1ec9 r\u1eddi') THEN 'THU \u0110\u00d4NG'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o ba l\u1ed7') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o ch\u1ed1ng n\u1eafng') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o s\u00e1t n\u00e1ch') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'b\u1ed9 t-shirt|tshirt|t-shirt c\u0169|t-shirt th\u1ec3 thao|t-shirt thi\u1ebft k\u1ebf') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n short gi\u00f3') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n short kaki') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n short th\u1ec3 thao c\u1ea1p chun|qu\u1ea7n short th\u1ec3 thao c\u1ea1p c\u00fac|qu\u1ea7n b\u1ed9 polo|qu\u1ea7n b\u1ed9 tshirt|qu\u1ea7n short v\u1ea3i|qu\u1ea7n short \u00e2u') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'qu\u1ea7n short casual') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r's\u01a1 mi c\u1ed9c') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'\u00e1o b\u1ed9 polo|b\u1ed9 polo') THEN 'XU\u00c2N H\u00c8'\n      WHEN regexp_contains(lower(r1.categoryName),r'polo') THEN 'XU\u00c2N H\u00c8'\n      ELSE 'KH\u00d4NG PH\u00c2N LO\u1ea0I' END AS product_group,\nFROM\n    source\n    r1\n    left JOIN source\n    r2\n    ON r1.parentId = r2.categoryId\n    left JOIN source\n    r3\n    ON r2.parentId = r3.categoryId\n    ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__purchaseorderdetails", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__purchaseorderdetails.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__purchaseorderdetails.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__purchaseorderdetails"], "alias": "stg_kiotviet__purchaseorderdetails", "checksum": {"name": "sha256", "checksum": "feafb2d5e732f143063bd1dd2d0cf65041b631969aa35dfebf0c9698676aa58d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "supplier_id": {"name": "supplier_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "gi\u00e1 tr\u1ecb gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__purchaseorderdetails.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.8010895, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__purchaseorderdetails`", "raw_code": "SELECT\n    purchaseOrders.id AS transaction_id,\n    purchaseOrders.code AS transaction_code,\n    purchaseOrders.purchaseDate AS transaction_date,\n    purchaseOrders.transaction_status,\n    purchaseOrders.branchId as branch_id,\n    purchaseOrders.purchaseById AS employee_id,\n    purchaseOrders.supplierId as supplier_id,\n    purchaseOrderDetails.productId as product_id,\n    purchaseOrderDetails.productCode as product_code,\n    purchaseOrderDetails.quantity,\n    purchaseOrderDetails.price,\n    purchaseOrderDetails.discountRatio as discount_ratio,\n    purchaseOrderDetails.discount,\nFROM\n    {{ ref('base_kiotViet__purchaseOrders') }} purchaseOrders\n    left join unnest(purchaseOrderDetails) purchaseOrderDetails", "language": "sql", "refs": [{"name": "base_kiotViet__purchaseOrders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__purchaseorderdetails.sql", "compiled": true, "compiled_code": "SELECT\n    purchaseOrders.id AS transaction_id,\n    purchaseOrders.code AS transaction_code,\n    purchaseOrders.purchaseDate AS transaction_date,\n    purchaseOrders.transaction_status,\n    purchaseOrders.branchId as branch_id,\n    purchaseOrders.purchaseById AS employee_id,\n    purchaseOrders.supplierId as supplier_id,\n    purchaseOrderDetails.productId as product_id,\n    purchaseOrderDetails.productCode as product_code,\n    purchaseOrderDetails.quantity,\n    purchaseOrderDetails.price,\n    purchaseOrderDetails.discountRatio as discount_ratio,\n    purchaseOrderDetails.discount,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders` purchaseOrders\n    left join unnest(purchaseOrderDetails) purchaseOrderDetails", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__returndetails": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__returndetails", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__returndetails.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__returndetails.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__returndetails", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__returndetails"], "alias": "stg_kiotviet__returndetails", "checksum": {"name": "sha256", "checksum": "49f5f14a106bdd167bae64650c5ea317b45e8be4efecb98d382053d1a5974fb6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "salechannel_id": {"name": "salechannel_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__returndetails.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.7720795, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`", "raw_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue as transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    returns.saleChannelId as salechannel_id,\n    returns.returnDiscount*safe_divide(returnDetails.price*returnDetails.quantity,returns.returnTotal+returns.returnDiscount) as order_discount,\n    returnDetails.productId as product_id,\n    returnDetails.productCode as product_code,\n    returnDetails.quantity,\n    returnDetails.price,\n    returnDetails.subTotal,\n    returns.transaction_type,\n    returns.modifiedDate as modified_date,\nFROM\n    {{ ref('base_kiotViet__returns') }}\n    returns\n    left join unnest(returnDetails) returnDetails", "language": "sql", "refs": [{"name": "base_kiotViet__returns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__returns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__returndetails.sql", "compiled": true, "compiled_code": "SELECT\n    returns.id AS transaction_id,\n    returns.code AS transaction_code,\n    returns.invoiceId AS reference_transaction_id,\n    returns.returnDate AS transaction_date,\n    returns.statusValue as transaction_status,\n    returns.branchId as branch_id,\n    returns.receivedById AS employee_id,\n    returns.customerId as customer_id,\n    returns.saleChannelId as salechannel_id,\n    returns.returnDiscount*safe_divide(returnDetails.price*returnDetails.quantity,returns.returnTotal+returns.returnDiscount) as order_discount,\n    returnDetails.productId as product_id,\n    returnDetails.productCode as product_code,\n    returnDetails.quantity,\n    returnDetails.price,\n    returnDetails.subTotal,\n    returns.transaction_type,\n    returns.modifiedDate as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`\n    returns\n    left join unnest(returnDetails) returnDetails", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__returns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__returns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__returns.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__returns.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__returns", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__returns"], "alias": "stg_kiotviet__returns", "checksum": {"name": "sha256", "checksum": "2506e3f777052a601a64243d6ae089d3c1cdf5a252141fc18d633764e0785a0e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "T\u1ed5ng gi\u00e1 tr\u1ecb sau gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "S\u1ed1 ti\u1ec1n \u0111\u00e3 thanh to\u00e1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_fee": {"name": "return_fee", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "salechannel_id": {"name": "salechannel_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "Ng\u00e0y ch\u1ec9nh s\u1eeda", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_fee_ratio": {"name": "return_fee_ratio", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "return_discount": {"name": "return_discount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__returns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.799523, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns`", "raw_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    invoiceId AS reference_transaction_id,\n    returnDate AS transaction_date,\n    branchId  as branch_id,\n    receivedById AS employee_id,\n    customerId as customer_id,\n    returnTotal AS total,\n    returnFeeRatio as return_fee_ratio,\n    returnDiscount as return_discount,\n    totalPayment as total_payment,\n    returnFee as return_fee,\n    statusValue AS transaction_status,\n    saleChannelId as salechannel_id,\n    createdDate as created_date ,\n    coalesce(modifiedDate,createdDate) as modified_date,\n    transaction_type\nFROM\n    {{ ref('base_kiotViet__returns') }}", "language": "sql", "refs": [{"name": "base_kiotViet__returns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__returns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__returns.sql", "compiled": true, "compiled_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    invoiceId AS reference_transaction_id,\n    returnDate AS transaction_date,\n    branchId  as branch_id,\n    receivedById AS employee_id,\n    customerId as customer_id,\n    returnTotal AS total,\n    returnFeeRatio as return_fee_ratio,\n    returnDiscount as return_discount,\n    totalPayment as total_payment,\n    returnFee as return_fee,\n    statusValue AS transaction_status,\n    saleChannelId as salechannel_id,\n    createdDate as created_date ,\n    coalesce(modifiedDate,createdDate) as modified_date,\n    transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__locations": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__locations", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__locations.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__locations.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__locations", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__locations"], "alias": "stg_kiotviet__locations", "checksum": {"name": "sha256", "checksum": "9d97d5db61d980329bef5bd7ddb619a3ea42ecb09224bc051cbd721e72957519"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "", "columns": {"name": {"name": "name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "normalname": {"name": "normalname", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "T\u1ec9nh/Th\u00e0nh ph\u1ed1", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "district": {"name": "district", "description": "Qu\u1eadn huy\u1ec7n", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__locations.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1732268180.8310964, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__locations`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\nWITH source AS (\n        {{ dbt_utils.deduplicate(\n        relation = source(\n            'kiotViet',\n            'p_locations_list'\n        ),\n        partition_by = 'id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\n\n\n\nSELECT\n    NAME,\n    normalName,\n    regexp_extract(\n        NAME,\n        r'^(.*)\\s-\\s(?:.*)'\n    ) AS province,\n    regexp_extract(\n        NAME,\n        r'^(?:.*)\\s-\\s(.*)'\n    ) AS district,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["kiotViet", "p_locations_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_locations_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__locations.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n        select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_locations_list__*` original\n        group by id\n    )\n)\n\n\n\nSELECT\n    NAME,\n    normalName,\n    regexp_extract(\n        NAME,\n        r'^(.*)\\s-\\s(?:.*)'\n    ) AS province,\n    regexp_extract(\n        NAME,\n        r'^(?:.*)\\s-\\s(.*)'\n    ) AS district,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__users": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__users.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__users.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__users", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__users"], "alias": "stg_kiotviet__users", "checksum": {"name": "sha256", "checksum": "4d74abe698f9774e9d3dc2b1cf5bf930c72b3ee99db9604c688d797a4a85ca50"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimension", "kiotviet"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimension", "kiotviet"], "description": "", "columns": {"user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "given_name": {"name": "given_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "birth_date": {"name": "birth_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__users.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimension", "kiotviet"]}, "created_at": 1732268180.7742908, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__users`", "raw_code": "{{\n  config(\n    tags=['view', 'dimension','kiotviet']\n  )\n}}\n\nWITH source AS (\n        {{ dbt_utils.deduplicate(\n        relation = source(\n            'kiotViet',\n            'p_users_list'\n        ),\n        partition_by = 'id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\n\n\nSELECT\n    id as user_id,\n    userName as user_name,\n    givenName as given_name,\n    birthDate as birth_date,\nFROM\n   source", "language": "sql", "refs": [], "sources": [["kiotViet", "p_users_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_users_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__users.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n        select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`KiotViet`.`p_users_list__*` original\n        group by id\n    )\n)\n\n\nSELECT\n    id as user_id,\n    userName as user_name,\n    givenName as given_name,\n    birthDate as birth_date,\nFROM\n   source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__invoices": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__invoices", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__invoices.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__invoices.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__invoices", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__invoices"], "alias": "stg_kiotviet__invoices", "checksum": {"name": "sha256", "checksum": "f7f2ca25bba0a24336bf51d3fe60d4ad31697bcf30b6c6f12b53dff433324d46"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "T\u1ed5ng gi\u00e1 tr\u1ecb sau gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_payment": {"name": "total_payment", "description": "S\u1ed1 ti\u1ec1n \u0111\u00e3 thanh to\u00e1n", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "Ng\u00e0y t\u1ea1o", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "Ng\u00e0y ch\u1ec9nh s\u1eeda", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "gi\u00e1 tr\u1ecb gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__invoices.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.84868, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`", "raw_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    soldById AS employee_id,\n    customerId as customer_id,\n    orderCode AS reference_transaction_id,\n    total,\n    totalPayment as total_payment,\n    statusValue AS transaction_status,\n    createdDate as created_Date,\n    coalesce(modifiedDate,createdDate) as modified_date,\n    discountRatio as discount_ratio,\n    discount,\n    transaction_type\nFROM\n    {{ ref('base_kiotViet__invoices') }}", "language": "sql", "refs": [{"name": "base_kiotViet__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__invoices"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__invoices.sql", "compiled": true, "compiled_code": "SELECT\n    id AS transaction_id,\n    code AS transaction_code,\n    purchaseDate AS transaction_date,\n    branchId as branch_id,\n    soldById AS employee_id,\n    customerId as customer_id,\n    orderCode AS reference_transaction_id,\n    total,\n    totalPayment as total_payment,\n    statusValue AS transaction_status,\n    createdDate as created_Date,\n    coalesce(modifiedDate,createdDate) as modified_date,\n    discountRatio as discount_ratio,\n    discount,\n    transaction_type\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_kiotviet__invoicedetails": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_kiotviet__invoicedetails", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/stg_kiotviet__invoicedetails.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__invoicedetails.sql", "unique_id": "model.sado_analytics_services.stg_kiotviet__invoicedetails", "fqn": ["sado_analytics_services", "staging", "kiotViet", "stg_kiotviet__invoicedetails"], "alias": "stg_kiotviet__invoicedetails", "checksum": {"name": "sha256", "checksum": "0c66724db9739256e41f5981abd498d26356bc58f6cb6c16f112bb7750436813"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "M\u00e3 giao d\u1ecbch", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "S\u1ed1 l\u01b0\u1ee3ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Gi\u00e1 s\u1ea3n ph\u1ea9m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount_ratio": {"name": "discount_ratio", "description": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "gi\u00e1 tr\u1ecb gi\u1ea3m", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "subtotal": {"name": "subtotal", "description": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "modified_date": {"name": "modified_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/kiotViet/stg_kiotviet__invoicedetails.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268180.8297994, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`", "raw_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    invoices.discount*safe_divide(invoiceDetails.subTotal,invoices.total+invoices.discount) as order_discount,\n    invoiceDetails.productId as product_id,\n    invoiceDetails.productCode as product_code,\n    invoiceDetails.quantity,\n    invoiceDetails.price,\n    invoiceDetails.discountRatio as discount_ratio,\n    invoiceDetails.discount,\n    invoiceDetails.subTotal,\n    invoices.transaction_type,\n    invoices.modifiedDate as modified_date,\nFROM\n    {{ ref('base_kiotViet__invoices') }}\n    invoices\n    left join unnest(invoiceDetails) invoiceDetails", "language": "sql", "refs": [{"name": "base_kiotViet__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_kiotViet__invoices"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__invoicedetails.sql", "compiled": true, "compiled_code": "SELECT\n    invoices.id AS transaction_id,\n    invoices.code AS transaction_code,\n    invoices.orderCode as reference_transaction_id,\n    invoices.purchaseDate AS transaction_date,\n    invoices.statusValue AS transaction_status,\n    invoices.branchId as branch_id,\n    invoices.soldById AS employee_id,\n    invoices.customerId as customer_id,\n    invoices.discount*safe_divide(invoiceDetails.subTotal,invoices.total+invoices.discount) as order_discount,\n    invoiceDetails.productId as product_id,\n    invoiceDetails.productCode as product_code,\n    invoiceDetails.quantity,\n    invoiceDetails.price,\n    invoiceDetails.discountRatio as discount_ratio,\n    invoiceDetails.discount,\n    invoiceDetails.subTotal,\n    invoices.transaction_type,\n    invoices.modifiedDate as modified_date,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`\n    invoices\n    left join unnest(invoiceDetails) invoiceDetails", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__invoices": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__invoices", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__invoices.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__invoices.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__invoices", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__invoices"], "alias": "base_kiotViet__invoices", "checksum": {"name": "sha256", "checksum": "e95691c51e5abea406543ba8bec394f86b3e98f1b6ccf61fd759cc4cf6bf7675"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "kiotviet"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "createdDate", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "kiotviet"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unique_key": "id", "on_schema_change": "sync_all_columns", "partition_by": {"field": "createdDate", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "tags": ["incremental", "hourly", "kiotviet"]}, "created_at": 1732268177.8204272, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__invoices`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    unique_key = 'id',\n    on_schema_change = 'sync_all_columns',\n    partition_by = {\n      \"field\": \"createdDate\",\n      \"data_type\": \"timestamp\",\n      \"granularity\": \"day\"\n    },\n    incremental_strategy = 'insert_overwrite',\n    tags = ['incremental', 'hourly','kiotviet']\n    )\n}}\n\nWITH source AS (\n\n    SELECT\n        * except(invoiceDelivery,invoiceDetails),\n        invoiceDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_invoices_list'\n        ) }} invoice1\n        {% if is_incremental() %}\n          where date(createdDate) in (select distinct date(createdDate) from {{ source(\n            'kiotViet',\n            'p_invoices_list'\n        ) }} where parse_date('%Y%m%d',_TABLE_SUFFIX) >= current_date\n        )\n        {# and parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(current_date, interval -7 day) #}\n        {% endif %}\n\n    union all \n\n    select * except(invoiceDelivery,invoice_details),\n    invoice_details as invoiceDetails\n    from {{ source(\n            'kiotViet',\n            'p_invoices_list2'\n        ) }} \n        {% if is_incremental() %}\n          where date(createdDate) in (select distinct date(createdDate) from {{ source(\n            'kiotViet',\n            'p_invoices_list2'\n        ) }} where parse_date('%Y%m%d',_TABLE_SUFFIX) >= current_date\n        )\n        {# and parse_date('%Y%m%d',_TABLE_SUFFIX) >= date_add(current_date, interval -7 day) #}\n\n        {% endif %}\n),\nraw_ AS (\n    {{ dbt_utils.deduplicate(relation = 'source', partition_by = 'id', order_by = \"_batched_at desc\",) }}\n)\nSELECT\n    id,\n    uuid,\n    code,\n    purchaseDate,\n    branchId,\n    soldById,\n    customerId,\n    orderCode,\n    total,\n    totalPayment,\n    statusValue,\n    COALESCE(first_value(createdDate ignore nulls) over (partition by id order by _batched_at asc), \n    first_value(_batched_at) over (partition by id order by _batched_at asc)\n     ) createdDate ,\n    modifiedDate,\n    discountRatio,\n    discount,\n    payments,\n    invoiceDetails,\n    \"invoice\" as transaction_type,\nFROM\n    raw_", "language": "sql", "refs": [], "sources": [["kiotViet", "p_invoices_list"], ["kiotViet", "p_invoices_list2"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_invoices_list", "source.sado_analytics_services.kiotViet.p_invoices_list2"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__invoices.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        * except(invoiceDelivery,invoiceDetails),\n        invoiceDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_invoices_list__*` invoice1\n        \n          where date(createdDate) in (select distinct date(createdDate) from `agile-scheme-394814`.`KiotViet`.`p_invoices_list__*` where parse_date('%Y%m%d',_TABLE_SUFFIX) >= current_date\n        )\n        \n        \n\n    union all \n\n    select * except(invoiceDelivery,invoice_details),\n    invoice_details as invoiceDetails\n    from `agile-scheme-394814`.`KiotViet`.`p_invoices_list2__*` \n        \n          where date(createdDate) in (select distinct date(createdDate) from `agile-scheme-394814`.`KiotViet`.`p_invoices_list2__*` where parse_date('%Y%m%d',_TABLE_SUFFIX) >= current_date\n        )\n        \n\n        \n),\nraw_ AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\nSELECT\n    id,\n    uuid,\n    code,\n    purchaseDate,\n    branchId,\n    soldById,\n    customerId,\n    orderCode,\n    total,\n    totalPayment,\n    statusValue,\n    COALESCE(first_value(createdDate ignore nulls) over (partition by id order by _batched_at asc), \n    first_value(_batched_at) over (partition by id order by _batched_at asc)\n     ) createdDate ,\n    modifiedDate,\n    discountRatio,\n    discount,\n    payments,\n    invoiceDetails,\n    \"invoice\" as transaction_type,\nFROM\n    raw_", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__returns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__returns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__returns.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__returns.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__returns", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__returns"], "alias": "base_kiotViet__returns", "checksum": {"name": "sha256", "checksum": "da8935aa2cb85f7104bb083ac09cee31308c4ed2c9ebb4ce94fff61d77750db2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "kiotviet"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "createdDate", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "kiotviet"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unique_key": "id", "on_schema_change": "sync_all_columns", "partition_by": {"field": "createdDate", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "merge", "tags": ["incremental", "hourly", "kiotviet"]}, "created_at": 1732268177.8300014, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__returns`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    unique_key = 'id',\n    on_schema_change = 'sync_all_columns',\n    partition_by ={ \"field\": \"createdDate\",\n    \"data_type\": \"timestamp\",\n    \"granularity\": \"day\" },\n    incremental_strategy = 'merge',\n    tags = ['incremental', 'hourly','kiotviet']\n) }}\n\nWITH source AS (\n\n    SELECT\n        *\n    EXCEPT(returnDetails),\n        returnDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_returns_list'\n        ) }}\n\n    {% if is_incremental() %}\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    {% endif %}\n\n    UNION ALL\n\n    SELECT\n        *\n    EXCEPT(return_details),\n        return_details AS returnDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_returns_list2'\n        ) }}\n\n    {% if is_incremental() %}\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    {% endif %}\n),\nraw_ AS (\n    {{ dbt_utils.deduplicate(\n        relation = 'source',\n        partition_by = 'id',\n        order_by = \"modifiedDate DESC,_batched_at desc\",\n    ) }}\n)\nSELECT\n    id,\n    code,\n    invoiceId,\n    returnDate,\n    branchId,\n    receivedById,\n    customerId,\n    returnTotal,\n    returnDiscount,\n    totalPayment,\n    returnFee,\n    returnFeeRatio,\n    saleChannelId,\n    statusValue,\n    createdDate,\n    modifiedDate,\n    payments,\n    returnDetails,\n    \"return\" AS transaction_type\nFROM\n    raw_", "language": "sql", "refs": [], "sources": [["kiotViet", "p_returns_list"], ["kiotViet", "p_returns_list2"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_returns_list", "source.sado_analytics_services.kiotViet.p_returns_list2"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__returns.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n        *\n    EXCEPT(returnDetails),\n        returnDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_returns_list__*`\n\n    \n    where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    \n\n    UNION ALL\n\n    SELECT\n        *\n    EXCEPT(return_details),\n        return_details AS returnDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_returns_list2__*`\n\n    \n    where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    \n),\nraw_ AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modifiedDate DESC,_batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\nSELECT\n    id,\n    code,\n    invoiceId,\n    returnDate,\n    branchId,\n    receivedById,\n    customerId,\n    returnTotal,\n    returnDiscount,\n    totalPayment,\n    returnFee,\n    returnFeeRatio,\n    saleChannelId,\n    statusValue,\n    createdDate,\n    modifiedDate,\n    payments,\n    returnDetails,\n    \"return\" AS transaction_type\nFROM\n    raw_", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__customers.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__customers.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__customers", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__customers"], "alias": "base_kiotViet__customers", "checksum": {"name": "sha256", "checksum": "c18099ef3ba449644eab5c2bea4bb527e024e1fec75b38b0e38f89cc78cb75aa"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "kiotviet"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "createdDate", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "kiotviet"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unique_key": "id", "on_schema_change": "sync_all_columns", "partition_by": {"field": "createdDate", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "merge", "tags": ["incremental", "hourly", "kiotviet"]}, "created_at": 1732268177.8389535, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__customers`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    unique_key = 'id',\n    on_schema_change = 'sync_all_columns',\n    partition_by = {\n      \"field\": \"createdDate\",\n      \"data_type\": \"timestamp\",\n      \"granularity\": \"day\"\n    },\n    incremental_strategy = 'merge',\n    tags = ['incremental', 'hourly','kiotviet']\n    )\n}}\nWITH source AS (\n    SELECT\n        *\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_customers_list'\n        ) }}\n        {% if is_incremental() %}\n          where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n        {% endif %}\n    UNION ALL\n    SELECT\n        *\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_webhook_customer_update'\n        ) }}\n        {% if is_incremental() %}\n          where date(_batched_at) >= date(_dbt_max_partition)\n        {% endif %}\n),\nraw_ AS (\n    {{ dbt_utils.deduplicate(relation = 'source', partition_by = 'id', order_by = \"_batched_at desc\",) }}\n)\nSELECT\n    id,\n    code,\n    NAME,\n    gender,\n    birthDate,\n    contactNumber,\n    branchId,\n    TYPE,\n    raw_.groups,\n    debt,\n    totalInvoiced,\n    totalPoint,\n    totalRevenue,\n    rewardPoint,\n    createdDate,\n    modifiedDate,\nFROM\n    raw_", "language": "sql", "refs": [], "sources": [["kiotViet", "p_customers_list"], ["kiotViet", "p_webhook_customer_update"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_customers_list", "source.sado_analytics_services.kiotViet.p_webhook_customer_update"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__customers.sql", "compiled": true, "compiled_code": "\nWITH source AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_customers_list__*`\n        \n          where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n        \n    UNION ALL\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_webhook_customer_update`\n        \n          where date(_batched_at) >= date(_dbt_max_partition)\n        \n),\nraw_ AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\nSELECT\n    id,\n    code,\n    NAME,\n    gender,\n    birthDate,\n    contactNumber,\n    branchId,\n    TYPE,\n    raw_.groups,\n    debt,\n    totalInvoiced,\n    totalPoint,\n    totalRevenue,\n    rewardPoint,\n    createdDate,\n    modifiedDate,\nFROM\n    raw_", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_kiotViet__purchaseOrders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_kiotViet__purchaseOrders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/kiotViet/base/base_kiotViet__purchaseOrders.sql", "original_file_path": "models/staging/kiotViet/base/base_kiotViet__purchaseOrders.sql", "unique_id": "model.sado_analytics_services.base_kiotViet__purchaseOrders", "fqn": ["sado_analytics_services", "staging", "kiotViet", "base", "base_kiotViet__purchaseOrders"], "alias": "base_kiotViet__purchaseOrders", "checksum": {"name": "sha256", "checksum": "d30f9286e8258da3c36ad1f2800849c5d31cc918b9733df82ede2f0a23c40a25"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "kiotviet"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "createdDate", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "kiotviet"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unique_key": "id", "on_schema_change": "sync_all_columns", "partition_by": {"field": "createdDate", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "merge", "tags": ["incremental", "hourly", "kiotviet"]}, "created_at": 1732268177.8479688, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_kiotViet__purchaseOrders`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    unique_key = 'id',\n    on_schema_change = 'sync_all_columns',\n    partition_by = {\n      \"field\": \"createdDate\",\n      \"data_type\": \"timestamp\",\n      \"granularity\": \"day\"\n    },\n    incremental_strategy = 'merge',\n    tags = ['incremental', 'hourly','kiotviet']\n    )\n}}\n\n\nWITH source AS (\n    SELECT\n        *\n    EXCEPT(purchaseOrderDetails),\n        purchaseOrderDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_purchaseorders_list'\n        ) }}\n    {% if is_incremental() %}\n      where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    {% endif %}\n\n    UNION ALL\n\n    SELECT\n        *\n    EXCEPT(purchaseOrder_details),\n        purchaseOrder_details AS purchaseOrderDetails\n    FROM\n        {{ source(\n            'kiotViet',\n            'p_purchaseorders_list2'\n        ) }}\n    {% if is_incremental() %}\n      where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    {% endif %}\n),\nraw_ AS (\n    {{ dbt_utils.deduplicate(\n        relation = 'source',\n        partition_by = 'id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\nSELECT\n    id,\n    code,\n    purchaseDate,\n    branchId,\n    purchaseById,\n    supplierId,\n    supplierName,\n    supplierCode,\n    partnerType,\n    total,\n    totalPayment,\n    discount,\n    discountRatio,\n    CASE\n        WHEN status = 3 THEN \"\u0110\u00e3 nh\u1eadp h\u00e0ng\"\n        WHEN status = 1 THEN \"Phi\u1ebfu t\u1ea1m\"\n        WHEN status = 4 THEN \"\u0110\u00e3 hu\u1ef7\"\n    END AS transaction_status,\n    createdDate,\n    purchaseOrderDetails,\nFROM\n    raw_", "language": "sql", "refs": [], "sources": [["kiotViet", "p_purchaseorders_list"], ["kiotViet", "p_purchaseorders_list2"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.kiotViet.p_purchaseorders_list", "source.sado_analytics_services.kiotViet.p_purchaseorders_list2"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/base/base_kiotViet__purchaseOrders.sql", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n    SELECT\n        *\n    EXCEPT(purchaseOrderDetails),\n        purchaseOrderDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list__*`\n    \n      where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    \n\n    UNION ALL\n\n    SELECT\n        *\n    EXCEPT(purchaseOrder_details),\n        purchaseOrder_details AS purchaseOrderDetails\n    FROM\n        `agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list2__*`\n    \n      where parse_date('%Y%m%d',_TABLE_SUFFIX) >= date(_dbt_max_partition)\n    \n),\nraw_ AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\nSELECT\n    id,\n    code,\n    purchaseDate,\n    branchId,\n    purchaseById,\n    supplierId,\n    supplierName,\n    supplierCode,\n    partnerType,\n    total,\n    totalPayment,\n    discount,\n    discountRatio,\n    CASE\n        WHEN status = 3 THEN \"\u0110\u00e3 nh\u1eadp h\u00e0ng\"\n        WHEN status = 1 THEN \"Phi\u1ebfu t\u1ea1m\"\n        WHEN status = 4 THEN \"\u0110\u00e3 hu\u1ef7\"\n    END AS transaction_status,\n    createdDate,\n    purchaseOrderDetails,\nFROM\n    raw_", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_esms__sent_data": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_esms__sent_data", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/esms/stg_esms__sent_data.sql", "original_file_path": "models/staging/esms/stg_esms__sent_data.sql", "unique_id": "model.sado_analytics_services.stg_esms__sent_data", "fqn": ["sado_analytics_services", "staging", "esms", "stg_esms__sent_data"], "alias": "stg_esms__sent_data", "checksum": {"name": "sha256", "checksum": "5304e9a74e3c38850aa8b10ea5fdec3a5711b7db3c03855332e1dcc3aa7def9d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "esms", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "sent_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "sent_time", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "esms", "daily"], "description": "Th\u00f4ng tin g\u1eedi SMS", "columns": {"phone": {"name": "phone", "description": "S\u0110T KH", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_id": {"name": "sent_id", "description": "m\u00e3 tin g\u1eedi", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign": {"name": "campaign", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_id": {"name": "reference_id", "description": "M\u00e3 tin nh\u1eafn", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_cost": {"name": "sms_cost", "description": "Chi ph\u00ed tin nh\u1eafn", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_status": {"name": "sent_status", "description": "Tr\u1ea1ng th\u00e1i g\u1eedi", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_result": {"name": "sent_result", "description": "K\u1ebft qu\u1ea3 g\u1eedi", "meta": {"dimension": {"type": "boolean", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_time": {"name": "sent_time", "description": "Th\u1eddi gi\u1ea3n g\u1eedi", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_id": {"name": "sms_id", "description": "M\u00e3 tin nh\u1eafn", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_type": {"name": "sms_type", "description": "Lo\u1ea1i tin nh\u1eafn", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_date": {"name": "start_date", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_date": {"name": "end_date", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "audience": {"name": "audience", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/esms/stg_esms__sent_data.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["incremental", "esms", "daily"], "unique_key": "sent_id", "on_schema_change": "sync_all_columns", "incremental_strategy": "insert_overwrite", "partition_by": {"field": "sent_time", "data_type": "date", "granularity": "day"}}, "created_at": 1732268180.8573453, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`", "raw_code": "{{ config(\n  tags = ['incremental','esms','daily'],\n  materialized =\"incremental\",\n  unique_key = 'sent_id',\n  on_schema_change = 'sync_all_columns',\n  incremental_strategy = 'insert_overwrite',\n  partition_by = {\n    \"field\": \"sent_time\",\n    \"data_type\": \"date\",\n    \"granularity\": \"day\"\n  }\n) }}\n\n{% set sms_types ={ \"1\": \"Tin qu\u1ea3ng c\u00e1o\",\n\"2\": \"Tin CSKH\",\n\"8\": \"Tin C\u1ed1 \u0111\u1ecbnh gi\u00e1 r\u1ebb\",\n\"24\": \"Zalo \u01b0u ti\u00ean\",\n\"25\": \"Zalo b\u00ecnh th\u01b0\u1eddng\",} %}\n{% set sms_statuses ={ \"1\": \"Ch\u1edd duy\u1ec7t\",\n\"2\": \"Ch\u1edd g\u1eedi\",\n\"3\": \"\u0110ang g\u1eedi\",\n\"4\": \"T\u1eeb ch\u1ed1i\",\n\"5\": \"Th\u00e0nh c\u00f4ng\",\n\"7\": \"Th\u1ea5t b\u1ea1i\",} %}\nWITH \nincrement as (\n  select * except(sentresult, campaign),\n  first_value(campaign ignore nulls) over (partition by smsid order by _batched_at desc) as campaign, \n  from {{source('esms', 'sms_sent_data')}}\n  where (campaign not in ('ZNS||2024-03-15-2024-17-03|| WK 84 LL - 5S mua h\u00e0ng 6 th\u00e1ng') or campaign is null)\n  {% if is_incremental() %}\n   and parse_date('%Y%m%d', _TABLE_SUFFIX) >= date_add(current_date, interval -1 day)\n  {% endif %}\n  union all \n  select * except(sentresult,campaign) ,\n  first_value(campaign ignore nulls) over (partition by smsid order by _batched_at desc) as campaign, \n  from {{source('esms', 'sms_sent_data_history')}}\n  where (campaign not in ('ZNS||2024-03-15-2024-17-03|| WK 84 LL - 5S mua h\u00e0ng 6 th\u00e1ng') or campaign is null)\n  {% if is_incremental() %}\n   and parse_date('%Y%m%d', _TABLE_SUFFIX) >= date_add(current_date, interval -1 day)\n  {% endif %}\n),\n\nsource AS (\n  {{ dbt_utils.deduplicate(relation = 'increment', partition_by = 'smsid,phone', order_by = \"_batched_at desc\",) }}\n)\nSELECT\n  phone,\n  {{ dbt_utils.generate_surrogate_key(['phone','SmsId']) }} AS sent_id,\n  CASE\n    WHEN smstype = 25 AND regexp_contains(content,r'^\\(.*\\)$') THEN 'CSKH||THONG BAO DON HANG'\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN 'QC||FLASHSALES'\n    ELSE COALESCE(campaign,'QC||KHONG PHAN LOAI')\n  END AS campaign,\n  referenceid AS reference_id,\n  sellprice AS sms_cost,\n  CASE\n    sendstatus\n    {% for key,status in sms_statuses.items() -%}\n    WHEN {{ key }} THEN \"{{status}}\"\n    {% endfor -%}\n  END AS sent_status,\n  {# sentresult AS sent_result, #}\n  CASE\n    when senttime like \"/Date%\" then date(timestamp_millis(safe_cast(regexp_extract(senttime,r'(\\d+)\\+') as int64)),\"Asia/Saigon\")\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN date('2024-02-02')\n    WHEN campaign IN ('KM th\u00e1ng 3 - 8000 ng\u00e0y 1','KM T3 dot 2- 8000') THEN date('2024-03-01')\n    WHEN campaign IN (\"QC||2024-02-26-2024-03-03|| CT DON KHO - KH 3 THANG\") THEN date('2024-03-07')\n    when senttime is not null then date(parse_datetime('%d/%m/%Y %H:%M:%S',COALESCE(senttime, MIN(senttime) over (PARTITION BY campaign))))\n    else date(regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(0)])\n  END as sent_time,\n  smsid AS sms_id,\n  CASE\n    smstype\n    {% for key,type in sms_types.items() -%}\n    WHEN {{ key }} THEN '{{type}}'\n    {% endfor -%}\n  END AS sms_type,\n  CASE\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN '2024-02-02'\n    WHEN campaign IN ('KM th\u00e1ng 3 - 8000 ng\u00e0y 1','KM T3 dot 2- 8000') THEN '2024-03-01'\n    WHEN campaign IN (\"QC||2024-02-26-2024-03-03|| CT DON KHO - KH 3 THANG\") THEN '2024-03-07'\n    ELSE regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(0)]\n  END AS start_date,\n  CASE\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN '2024-02-07' \n    WHEN campaign IN ('KM th\u00e1ng 3 - 8000 ng\u00e0y 1','KM T3 dot 2- 8000') THEN '2024-03-03'\n    WHEN campaign IN (\"QC||2024-02-26-2024-03-03|| CT DON KHO - KH 3 THANG\") THEN '2024-03-17'\n    ELSE coalesce(regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(1)],regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(0)])\n  END AS end_date,\n  CASE\n    WHEN regexp_contains(LOWER(content), r'phong van|chon loc ho so|ung tuyen') THEN 'TUYEN DUNG'\n    WHEN smstype = 25 AND regexp_contains(content,r'^\\(.*\\)$') THEN 'THONG BAO DON HANG'\n    WHEN campaign IS NULL THEN 'KHONG PHAN LOAI'\n    ELSE regexp_extract(campaign,r'\\|-\\s?(.*)$')\n  END AS audience\nFROM\n  source", "language": "sql", "refs": [], "sources": [["esms", "sms_sent_data"], ["esms", "sms_sent_data_history"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate", "macro.dbt_utils.generate_surrogate_key"], "nodes": ["source.sado_analytics_services.esms.sms_sent_data", "source.sado_analytics_services.esms.sms_sent_data_history"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/esms/stg_esms__sent_data.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH \nincrement as (\n  select * except(sentresult, campaign),\n  first_value(campaign ignore nulls) over (partition by smsid order by _batched_at desc) as campaign, \n  from `agile-scheme-394814`.`Esms`.`p__sms_sent_data_v2__*`\n  where (campaign not in ('ZNS||2024-03-15-2024-17-03|| WK 84 LL - 5S mua h\u00e0ng 6 th\u00e1ng') or campaign is null)\n  \n   and parse_date('%Y%m%d', _TABLE_SUFFIX) >= date_add(current_date, interval -1 day)\n  \n  union all \n  select * except(sentresult,campaign) ,\n  first_value(campaign ignore nulls) over (partition by smsid order by _batched_at desc) as campaign, \n  from `agile-scheme-394814`.`Esms`.`p__sms_sent_data_v1__*`\n  where (campaign not in ('ZNS||2024-03-15-2024-17-03|| WK 84 LL - 5S mua h\u00e0ng 6 th\u00e1ng') or campaign is null)\n  \n   and parse_date('%Y%m%d', _TABLE_SUFFIX) >= date_add(current_date, interval -1 day)\n  \n),\n\nsource AS (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from increment original\n        group by smsid,phone\n    )\n)\nSELECT\n  phone,\n  to_hex(md5(cast(coalesce(cast(phone as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(SmsId as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS sent_id,\n  CASE\n    WHEN smstype = 25 AND regexp_contains(content,r'^\\(.*\\)$') THEN 'CSKH||THONG BAO DON HANG'\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN 'QC||FLASHSALES'\n    ELSE COALESCE(campaign,'QC||KHONG PHAN LOAI')\n  END AS campaign,\n  referenceid AS reference_id,\n  sellprice AS sms_cost,\n  CASE\n    sendstatus\n    WHEN 1 THEN \"Ch\u1edd duy\u1ec7t\"\n    WHEN 2 THEN \"Ch\u1edd g\u1eedi\"\n    WHEN 3 THEN \"\u0110ang g\u1eedi\"\n    WHEN 4 THEN \"T\u1eeb ch\u1ed1i\"\n    WHEN 5 THEN \"Th\u00e0nh c\u00f4ng\"\n    WHEN 7 THEN \"Th\u1ea5t b\u1ea1i\"\n    END AS sent_status,\n  \n  CASE\n    when senttime like \"/Date%\" then date(timestamp_millis(safe_cast(regexp_extract(senttime,r'(\\d+)\\+') as int64)),\"Asia/Saigon\")\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN date('2024-02-02')\n    WHEN campaign IN ('KM th\u00e1ng 3 - 8000 ng\u00e0y 1','KM T3 dot 2- 8000') THEN date('2024-03-01')\n    WHEN campaign IN (\"QC||2024-02-26-2024-03-03|| CT DON KHO - KH 3 THANG\") THEN date('2024-03-07')\n    when senttime is not null then date(parse_datetime('%d/%m/%Y %H:%M:%S',COALESCE(senttime, MIN(senttime) over (PARTITION BY campaign))))\n    else date(regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(0)])\n  END as sent_time,\n  smsid AS sms_id,\n  CASE\n    smstype\n    WHEN 1 THEN 'Tin qu\u1ea3ng c\u00e1o'\n    WHEN 2 THEN 'Tin CSKH'\n    WHEN 8 THEN 'Tin C\u1ed1 \u0111\u1ecbnh gi\u00e1 r\u1ebb'\n    WHEN 24 THEN 'Zalo \u01b0u ti\u00ean'\n    WHEN 25 THEN 'Zalo b\u00ecnh th\u01b0\u1eddng'\n    END AS sms_type,\n  CASE\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN '2024-02-02'\n    WHEN campaign IN ('KM th\u00e1ng 3 - 8000 ng\u00e0y 1','KM T3 dot 2- 8000') THEN '2024-03-01'\n    WHEN campaign IN (\"QC||2024-02-26-2024-03-03|| CT DON KHO - KH 3 THANG\") THEN '2024-03-07'\n    ELSE regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(0)]\n  END AS start_date,\n  CASE\n    WHEN campaign IN ('Chi\u1ebfn d\u1ecbch 02/02/2024','Chi\u1ebfn d\u1ecbch 01/02/2024') THEN '2024-02-07' \n    WHEN campaign IN ('KM th\u00e1ng 3 - 8000 ng\u00e0y 1','KM T3 dot 2- 8000') THEN '2024-03-03'\n    WHEN campaign IN (\"QC||2024-02-26-2024-03-03|| CT DON KHO - KH 3 THANG\") THEN '2024-03-17'\n    ELSE coalesce(regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(1)],regexp_extract_all(campaign,r'\\d{4}-\\d{2}-\\d{2}')[safe_offset(0)])\n  END AS end_date,\n  CASE\n    WHEN regexp_contains(LOWER(content), r'phong van|chon loc ho so|ung tuyen') THEN 'TUYEN DUNG'\n    WHEN smstype = 25 AND regexp_contains(content,r'^\\(.*\\)$') THEN 'THONG BAO DON HANG'\n    WHEN campaign IS NULL THEN 'KHONG PHAN LOAI'\n    ELSE regexp_extract(campaign,r'\\|-\\s?(.*)$')\n  END AS audience\nFROM\n  source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pagespeed__metrics": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pagespeed__metrics", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pagespeed/stg_pagespeed__metrics.sql", "original_file_path": "models/staging/pagespeed/stg_pagespeed__metrics.sql", "unique_id": "model.sado_analytics_services.stg_pagespeed__metrics", "fqn": ["sado_analytics_services", "staging", "pagespeed", "stg_pagespeed__metrics"], "alias": "stg_pagespeed__metrics", "checksum": {"name": "sha256", "checksum": "ae4dcc3294bf72f36283f77a51587862393ea3bbe59b31914ece6be5bea824e7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["pagespeed", "fact", "view"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${stg_pagespeed__metrics.analysis_date}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["pagespeed", "fact", "view"], "description": "The model extracts various metrics related to page loading experience such as cumulative layout shift score, experimental time to first byte, first contentful paint, first input delay, interaction to next paint, and largest contentful paint.", "columns": {"url": {"name": "url", "description": "represents the URL of the webpage", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "strategy": {"name": "strategy", "description": "represents the strategy used for the analysis (mobile | desktop)", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "analysis_date": {"name": "analysis_date", "description": "The date when the analysis was performed", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "overall_speed_category": {"name": "overall_speed_category", "description": "the overall speed category of the webpage as determined by Google's PageSpeed Insights. The speed category can be 'FAST', 'AVERAGE', or 'SLOW'.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "accessibility_score": {"name": "accessibility_score", "description": "the accessibility score of a webpage as determined by Google's Lighthouse tool. This score is a measure of how accessible the webpage is to all users, including those with disabilities", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_accessibility_score": {"type": "average", "sql": "${TABLE}.accessibility_score*100", "label": "Accessibility Score", "group_label": "Scores", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "best_practices_score": {"name": "best_practices_score", "description": "the score for best practices as calculated by the Lighthouse tool. The score is a measure of how well the webpage adheres to best practices for web development, including aspects like HTTPS usage, correct image aspect ratios, and usage of modern JavaScript features.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_best_practices_score": {"type": "average", "sql": "${TABLE}.best_practices_score*100", "label": "Best Practices Score", "group_label": "Scores", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "performance_score": {"name": "performance_score", "description": "performance score of a webpage as calculated by Google's Lighthouse tool. This score is a measure of the page's performance, derived from a variety of metrics including load time and responsiveness.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_performance_score": {"type": "average", "sql": "${TABLE}.performance_score*100", "label": "Performance Score", "group_label": "Scores", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "pwa_score": {"name": "pwa_score", "description": "Progressive Web App (PWA) score of the webpage, derived from the Lighthouse audit of the webpage and indicates how well the webpage meets the standard of a Progressive Web App", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_pwa_score": {"type": "average", "sql": "${TABLE}.pwa_score*100", "label": "PWA Score", "group_label": "Scores", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "seo_score": {"name": "seo_score", "description": "Search Engine Optimization score for a given URL, determined by Google's Lighthouse tool. The SEO score is a measure of how well the website is optimized for search engines.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_seo_score": {"type": "average", "sql": "${TABLE}.seo_score*100", "label": "SEO Score", "group_label": "Scores", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "metric_name": {"name": "metric_name", "description": "website performance metric names", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "metric_category": {"name": "metric_category", "description": "category of the performance metric result (FAST | AVERAGE | SLOW)", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "metric_percentile_value": {"name": "metric_percentile_value", "description": "represents the percentile value of the specific metric being analyzed", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_metric_percentile_value": {"type": "average", "sql": "${TABLE}.metric_percentile_value*100", "label": "Metric Percentile Value", "group_label": "Scores", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "metric_range": {"name": "metric_range", "description": "represents the range of the metric distribution", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "range_proportion": {"name": "range_proportion", "description": "represents the proportion of the metric range", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_range_proportion": {"type": "average", "sql": "${TABLE}.range_proportion*100", "label": "Range Proportion", "group_label": "Scores", "round": 1}}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "range_distribution_category": {"name": "range_distribution_category", "description": "categorizes the distribution of the metric range into 'FAST', 'AVERAGE', or 'SLOW'", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${stg_pagespeed__metrics.analysis_date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pagespeed/stg_pagespeed__metrics.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${stg_pagespeed__metrics.analysis_date}"}]}, "tags": ["pagespeed", "fact", "view"]}, "created_at": 1732268180.8708615, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pagespeed__metrics`", "raw_code": "{{\n  config(\n    materialized = 'view',\n    tags = ['pagespeed','fact','view']\n    )\n}}\n\n{% set metrics = [ \n    'CUMULATIVE_LAYOUT_SHIFT_SCORE', \n    'EXPERIMENTAL_TIME_TO_FIRST_BYTE', \n    'FIRST_CONTENTFUL_PAINT_MS', \n    'FIRST_INPUT_DELAY_MS', \n    'INTERACTION_TO_NEXT_PAINT', \n    'LARGEST_CONTENTFUL_PAINT_MS' \n    ] %}\n\n{% set categories = [ \n    'accessibility', \n    'best-practices', \n    'performance', \n    'pwa', \n    'seo' \n    ] %}\n\nWITH source AS (\n    SELECT\n        url,\n        strategy,\n        DATE(_batched_at) AS analysis_date,\n        JSON_VALUE(data,'$.loadingExperience.overall_category') AS overall_speed_category,\n        {%for category in categories%}\n        cast(json_value(data,'$.lighthouseResult.categories.{{category}}.score') as float64) AS {{category | replace('-','_')}}_score,\n        {%endfor%}\n        {% for metric in metrics %}\n        json_extract(data,'$.loadingExperience.metrics.{{metric}}') AS {{ metric }},\n        {% endfor %}\n    FROM\n        ({{ dbt_utils.deduplicate(\n            relation = source('pagespeed','pagespeed'),\n            partition_by = 'url,strategy,date(_batched_at)',\n            order_by = '_batched_at desc') \n            }})\n),\npreprocess AS (\n    SELECT\n        *\n    FROM\n        source unpivot(\n            metrics FOR metric_name IN ({{ metrics | join(',') }})\n            )\n)\nSELECT\n    * EXCEPT(distributions,metrics),\n    json_value(metrics,'$.category') metric_category,\n    cast(json_value(metrics,'$.percentile') as float64) metric_percentile_value,\n    json_value(distributions,'$.min') || COALESCE('-' || json_value(distributions, '$.max'), '+') AS metric_range,\n    cast(json_value(distributions,'$.proportion') as float64) AS range_proportion,\n    CASE\n        WHEN CAST(json_value(distributions, '$.min') AS int64) = 0 THEN 'FAST'\n        WHEN json_value(distributions,'$.max') IS NULL THEN 'SLOW'\n        ELSE 'AVERAGE'\n    END AS range_distribution_category\nFROM\n    preprocess,\n    unnest(json_extract_array(metrics, '$.distributions')) distributions", "language": "sql", "refs": [], "sources": [["pagespeed", "pagespeed"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pagespeed.pagespeed"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pagespeed/stg_pagespeed__metrics.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nWITH source AS (\n    SELECT\n        url,\n        strategy,\n        DATE(_batched_at) AS analysis_date,\n        JSON_VALUE(data,'$.loadingExperience.overall_category') AS overall_speed_category,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.accessibility.score') as float64) AS accessibility_score,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.best-practices.score') as float64) AS best_practices_score,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.performance.score') as float64) AS performance_score,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.pwa.score') as float64) AS pwa_score,\n        \n        cast(json_value(data,'$.lighthouseResult.categories.seo.score') as float64) AS seo_score,\n        \n        \n        json_extract(data,'$.loadingExperience.metrics.CUMULATIVE_LAYOUT_SHIFT_SCORE') AS CUMULATIVE_LAYOUT_SHIFT_SCORE,\n        \n        json_extract(data,'$.loadingExperience.metrics.EXPERIMENTAL_TIME_TO_FIRST_BYTE') AS EXPERIMENTAL_TIME_TO_FIRST_BYTE,\n        \n        json_extract(data,'$.loadingExperience.metrics.FIRST_CONTENTFUL_PAINT_MS') AS FIRST_CONTENTFUL_PAINT_MS,\n        \n        json_extract(data,'$.loadingExperience.metrics.FIRST_INPUT_DELAY_MS') AS FIRST_INPUT_DELAY_MS,\n        \n        json_extract(data,'$.loadingExperience.metrics.INTERACTION_TO_NEXT_PAINT') AS INTERACTION_TO_NEXT_PAINT,\n        \n        json_extract(data,'$.loadingExperience.metrics.LARGEST_CONTENTFUL_PAINT_MS') AS LARGEST_CONTENTFUL_PAINT_MS,\n        \n    FROM\n        (select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`PageSpeedInsights`.`PageSpeedInsights` original\n        group by url,strategy,date(_batched_at)\n    ))\n),\npreprocess AS (\n    SELECT\n        *\n    FROM\n        source unpivot(\n            metrics FOR metric_name IN (CUMULATIVE_LAYOUT_SHIFT_SCORE,EXPERIMENTAL_TIME_TO_FIRST_BYTE,FIRST_CONTENTFUL_PAINT_MS,FIRST_INPUT_DELAY_MS,INTERACTION_TO_NEXT_PAINT,LARGEST_CONTENTFUL_PAINT_MS)\n            )\n)\nSELECT\n    * EXCEPT(distributions,metrics),\n    json_value(metrics,'$.category') metric_category,\n    cast(json_value(metrics,'$.percentile') as float64) metric_percentile_value,\n    json_value(distributions,'$.min') || COALESCE('-' || json_value(distributions, '$.max'), '+') AS metric_range,\n    cast(json_value(distributions,'$.proportion') as float64) AS range_proportion,\n    CASE\n        WHEN CAST(json_value(distributions, '$.min') AS int64) = 0 THEN 'FAST'\n        WHEN json_value(distributions,'$.max') IS NULL THEN 'SLOW'\n        ELSE 'AVERAGE'\n    END AS range_distribution_category\nFROM\n    preprocess,\n    unnest(json_extract_array(metrics, '$.distributions')) distributions", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__ad_groups": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__ad_groups", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__ad_groups.sql", "original_file_path": "models/staging/googleAds/stg_googleads__ad_groups.sql", "unique_id": "model.sado_analytics_services.stg_googleads__ad_groups", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__ad_groups"], "alias": "stg_googleads__ad_groups", "checksum": {"name": "sha256", "checksum": "0e8b7a7c1c9cec3336fc08cbc4fb86d9c0a6d9e7579c9ef6174111bc9c657d67"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "dimension", "view"], "description": "", "columns": {"campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.M\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_type": {"name": "ad_group_type", "description": "The type of the ad group Lo\u1ea1i nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_name": {"name": "ad_group_name", "description": "The descriptive name of the ad group.T\u00ean nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__ad_groups.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["ggads", "dimension", "view"]}, "created_at": 1732268180.9033859, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_groups`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','dimension','view']\n)}}\n\nSELECT\n    ag.account_id,\n    ag.campaign_id,\n    ag.ad_group_id,\n    ag.ad_group_type,\n    ag.ad_group_name\nFROM\n   {{ ref('base_googleAds__adgroups') }}\n    ag", "language": "sql", "refs": [{"name": "base_googleAds__adgroups", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_googleAds__adgroups"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__ad_groups.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    ag.account_id,\n    ag.campaign_id,\n    ag.ad_group_id,\n    ag.ad_group_type,\n    ag.ad_group_name\nFROM\n   `agile-scheme-394814`.`dbt_prod`.`base_googleAds__adgroups`\n    ag", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__campaign_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__campaign_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__campaign_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaign_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__campaign_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__campaign_stats"], "alias": "stg_googleads__campaign_stats", "checksum": {"name": "sha256", "checksum": "641c3a557166252966da9217db8931ddfa3c62d073324985c055ba87b45caf89"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"row_id": {"name": "row_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device": {"name": "device", "description": "Device to which metrics apply.Thi\u1ebft b\u1ecb", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.Ph\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.V\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.S\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"ads_clicks": {"type": "sum", "label": "#Clicks", "group_label": "GG Ads metrics", "compact": "thousands"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"ads_conversions": {"type": "sum", "label": "#Conversions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.Gi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"ads_conversions_value": {"type": "sum", "label": "#Conversions value", "group_label": "GG Ads metrics", "compact": "millions", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.Chi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"ads_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics", "compact": "millions", "round": 2}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.S\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"ads_impressions": {"type": "sum", "label": "#Impressions", "group_label": "GG Ads metrics", "compact": "thousands"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.S\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"ads_interactions": {"type": "sum", "label": "#Interactions", "group_label": "GG Ads metrics", "compact": "thousands"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"metrics": {"ads_view_through_conversions": {"type": "sum", "label": "#View though conversions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__campaign_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1732268180.8984406, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['ggads','fact','view']\n) }}\n\nSELECT\n    {{ dbt_utils.generate_surrogate_key(['campaign_id','segments_date','segments_device','segments_ad_network_type','segments_slot']) }} AS row_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros / 1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    {{ source(\n        'googleads',\n        'campaign_basic_stats'\n    ) }}\n    stats", "language": "sql", "refs": [], "sources": [["googleads", "campaign_basic_stats"]], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.campaign_basic_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaign_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    to_hex(md5(cast(coalesce(cast(campaign_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_date as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_device as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_ad_network_type as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(segments_slot as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS row_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros / 1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_CampaignBasicStats_1322374205`\n    stats", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__ad_group_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__ad_group_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__ad_group_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__ad_group_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__ad_group_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__ad_group_stats"], "alias": "stg_googleads__ad_group_stats", "checksum": {"name": "sha256", "checksum": "6abbf4c96c56e6f2669e2101eff2c7cd376336a95ebbab989444ad698734052f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__ad_group_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.M\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device": {"name": "device", "description": "Device to which metrics apply.Thi\u1ebft b\u1ecb", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.Ph\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.V\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.S\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.Gi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.Chi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.S\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.S\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__ad_group_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__ad_group_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__ad_group_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1732268180.9831648, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_stats`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','fact','view']\n)}}\n\nSELECT\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros/1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    {{ source(\n        'googleads',\n        'ad_group_basic_stats'\n    ) }}\n    stats", "language": "sql", "refs": [], "sources": [["googleads", "ad_group_basic_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.ad_group_basic_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__ad_group_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_device AS device,\n    stats.segments_ad_network_type AS network_type,\n    stats.segments_slot AS slot,\n    stats.metrics_clicks AS clicks,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\n    stats.metrics_cost_micros/1e6 AS cost,\n    stats.metrics_impressions AS impressions,\n    stats.metrics_interactions AS interactions,\n    stats.metrics_view_through_conversions AS view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_AdGroupBasicStats_1322374205`\n    stats", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__campaigns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__campaigns.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaigns.sql", "unique_id": "model.sado_analytics_services.stg_googleads__campaigns", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__campaigns"], "alias": "stg_googleads__campaigns", "checksum": {"name": "sha256", "checksum": "dc099dfbfc37fe284ae01ec78d8049b58ad8e648f3abb2b06b2fac3189d703c2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "dimension", "view"], "description": "", "columns": {"account_name": {"name": "account_name", "description": "The descriptive name of the account.T\u00ean t\u00e0i kho\u1ea3n qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "currency_code": {"name": "currency_code", "description": "The currency in which the account operates. A subset of the currency codes from the ISO 4217 standard is supported.Lo\u1ea1i ti\u1ec1n t\u1ec7 \u0111\u01b0\u1ee3c t\u00ednh \u0111\u1ec3 v\u1eadn h\u00e0nh t\u00e0i kho\u1ea3n qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "The name of the ad campaign.T\u00ean chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "advertising_channel": {"name": "advertising_channel", "description": "The primary serving target for ads within the campaign.K\u00eanh qu\u1ea3ng c\u00e1o: Search, Display, Video...", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bidding_stategy": {"name": "bidding_stategy", "description": "The type of bidding strategy.Chi\u1ebfn l\u01b0\u1ee3c th\u1ea7u.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "budget": {"name": "budget", "description": "Ng\u00e2n s\u00e1ch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "budget_period": {"name": "budget_period", "description": "Chu k\u1ef3 qu\u1ea3ng c\u00e1o (Daily...)", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__campaigns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["ggads", "dimension", "view"]}, "created_at": 1732268180.8804326, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaigns`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','dimension','view']\n)}}\n\nSELECT\n    A.account_name,\n    A.currency_code,\n    C.campaign_id,\n    C.campaign_name,\n    C.advertising_channel,\n    C.bidding_stategy,\n    C.budget,\n    C.budget_period,\nFROM\n    {{ ref('base_googleAds__accounts') }} A\n    LEFT JOIN {{ ref('base_googleAds__campaigns') }} C\n    ON A.account_id = C.account_id", "language": "sql", "refs": [{"name": "base_googleAds__accounts", "package": null, "version": null}, {"name": "base_googleAds__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_googleAds__accounts", "model.sado_analytics_services.base_googleAds__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaigns.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    A.account_name,\n    A.currency_code,\n    C.campaign_id,\n    C.campaign_name,\n    C.advertising_channel,\n    C.bidding_stategy,\n    C.budget,\n    C.budget_period,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_googleAds__accounts` A\n    LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`base_googleAds__campaigns` C\n    ON A.account_id = C.account_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__shopping_product_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__shopping_product_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__shopping_product_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__shopping_product_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__shopping_product_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__shopping_product_stats"], "alias": "stg_googleads__shopping_product_stats", "checksum": {"name": "sha256", "checksum": "d3d02c99fde51ea57c8d98bbb0bb987e66bc7bb4f91f89449e5f1ce225c33f90"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__shopping_product_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__shopping_product_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "dim__inventory_classes", "sql_on": "${stg_googleads__shopping_product_stats.item_id} =  regexp_extract(${dim__inventory_classes.class_code},r'[A-Z]{3}\\d{5}')"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"date": {"name": "date", "description": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.M\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_id": {"name": "item_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.S\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions": {"type": "sum", "label": "Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_from_interactions_rate": {"name": "conversions_from_interactions_rate", "description": "Conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.L\u01b0\u1ee3ng chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c.", "meta": {"metrics": {"m_conversions_from_interactions_rate": {"type": "sum", "label": "Conversions From Interactions Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.Gi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions_value": {"type": "sum", "label": "Conversions Value", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.Chi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "The cost of ad interactions divided by conversions.Chi ph\u00ed qu\u1ea3ng c\u00e1o chia cho s\u1ed1 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cost_per_conversion": {"type": "average", "label": "Cost Per Conversion", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cross_device_conversions": {"name": "cross_device_conversions", "description": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.Chuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cross_device_conversions": {"type": "sum", "label": "Cross Device Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.S\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__shopping_product_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__shopping_product_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "dim__inventory_classes", "sql_on": "${stg_googleads__shopping_product_stats.item_id} =  regexp_extract(${dim__inventory_classes.class_code},r'[A-Z]{3}\\d{5}')"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__shopping_product_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__shopping_product_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__shopping_product_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "dim__inventory_classes", "sql_on": "${stg_googleads__shopping_product_stats.item_id} =  regexp_extract(${dim__inventory_classes.class_code},r'[A-Z]{3}\\d{5}')"}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1732268180.9794974, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__shopping_product_stats`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['ggads','fact','view']\n) }}\n\nSELECT\n    segments_date AS date,\n    ad_group_id,\n    campaign_id,\n    upper(segments_product_item_id) item_id,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_impressions) impressions,\nFROM\n    {{ source('googleads','shopping_product_stats')}}\n    {{ dbt_utils.group_by(4) }}", "language": "sql", "refs": [], "sources": [["googleads", "shopping_product_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.googleads.shopping_product_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__shopping_product_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    segments_date AS date,\n    ad_group_id,\n    campaign_id,\n    upper(segments_product_item_id) item_id,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_impressions) impressions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_ShoppingProductStats_1322374205`\n    group by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__ad_group_cross_device_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__ad_group_cross_device_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__ad_group_cross_device_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__ad_group_cross_device_stats"], "alias": "stg_googleads__ad_group_cross_device_stats", "checksum": {"name": "sha256", "checksum": "85853528f4f3275e79d7af152e81e9393745e64093fa0b6ae98967e34a9b4fc6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.M\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.Ph\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "top_impression_percentage": {"name": "top_impression_percentage", "description": "The percent of your ad impressions that are shown anywhere above the organic search results.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_top_impression_share": {"name": "search_top_impression_share", "description": "The impressions you've received in the top location (anywhere above the organic search results) compared to the estimated number of impressions you were eligible to receive in the top location.T\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb t\u1ea1i khu v\u1ef1c \u0111\u1ea7u (tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm) tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec7n th\u1ecb khu v\u1ef1c \u0111\u1ea7u.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p100_rate": {"name": "video_quartile_p100_rate", "description": "Percentage of impressions where the viewer watched all of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem to\u00e0n b\u1ed9 video qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p75_rate": {"name": "video_quartile_p75_rate", "description": "Percentage of impressions where the viewer watched 75% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 75% video qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p50_rate": {"name": "video_quartile_p50_rate", "description": "Percentage of impressions where the viewer watched 50% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 50% video qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p25_rate": {"name": "video_quartile_p25_rate", "description": "Percentage of impressions where the viewer watched 25% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 25% video qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "absolute_top_impression_percentage": {"name": "absolute_top_impression_percentage", "description": "The percent of your ad impressions that are shown as the very first ad above the organic search results.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb th\u1ee9 t\u1ef1 \u0111\u1ea7u ti\u00ean trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_impression_share": {"name": "content_impression_share", "description": "The impressions you've received on the Display Network divided by the estimated number of impressions you were eligible to receive.T\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o qua Display Network tr\u00ean s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_rank_lost_impression_share": {"name": "content_rank_lost_impression_share", "description": "The estimated percentage of impressions on the Display Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb tr\u00ean Display Network b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cross_device_conversions": {"name": "cross_device_conversions", "description": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.Chuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagements": {"name": "engagements", "description": "The number of engagements. An engagement occurs when a viewer expands your Lightbox ad.S\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. V\u1edbi qu\u1ea3ng c\u00e1o display s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng m\u1edf r\u1ed9ng qu\u1ea3ng c\u00e1o (Lightbox)", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "relative_ctr": {"name": "relative_ctr", "description": "Your clickthrough rate (Ctr) divided by the average clickthrough rate of all advertisers on the websites that show your ads.T\u1ec9 l\u1ec7 nh\u1ea5p t\u01b0\u01a1ng \u0111\u1ed1i, t\u00ednh d\u1ef1a tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p trung b\u00ecnh c\u1ee7a c\u00e1c nh\u00e0 qu\u1ea3ng c\u00e1o kh\u00e1c tr\u00ean trang m\u00e0 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_absolute_top_impression_share": {"name": "search_absolute_top_impression_share", "description": "The percentage of the customer's Shopping or Search ad impressions that are shown in the most prominent Shopping position.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o t\u00ecm ki\u1ebfm ho\u1eb7c mua s\u1eafm \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb v\u1ecb tr\u00ed t\u1ed1t nh\u1ea5t.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_budget_lost_absolute_top_impression_share": {"name": "search_budget_lost_absolute_top_impression_share", "description": "The number estimating how often your ad wasn't the very first ad above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb t\u1ea1i v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ng\u00e2n s\u00e1ch th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_budget_lost_top_impression_share": {"name": "search_budget_lost_top_impression_share", "description": "The number estimating how often your ad didn't show anywhere above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb do ng\u00e2n s\u00e1ch th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_impression_share": {"name": "search_impression_share", "description": "The impressions you've received on the Search Network divided by the estimated number of impressions you were eligible to receive.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_absolute_top_impression_share": {"name": "search_rank_lost_absolute_top_impression_share", "description": "The number estimating how often your ad wasn't the very first ad above the organic search results due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_impression_share": {"name": "search_rank_lost_impression_share", "description": "The estimated percentage of impressions on the Search Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t tr\u00ean k\u00eanh t\u00ecm ki\u1ebfm do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_rank_lost_top_impression_share": {"name": "search_rank_lost_top_impression_share", "description": "The number estimating how often your ad didn't show anywhere above the organic search results due to poor Ad Rank\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_views": {"name": "video_views", "description": "The number of times your video ads were viewed.S\u1ed1 l\u01b0\u1ee3t qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c xem.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__ad_group_cross_device_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["ggads", "fact", "view"]}, "created_at": 1732268180.9855175, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__ad_group_cross_device_stats`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['ggads','fact','view']\n) }}\n\nSELECT\n    stats.ad_group_id,\n    stats.segments_date AS date,\n    stats.campaign_id,\n    stats.segments_ad_network_type AS network_type,\n    stats.metrics_top_impression_percentage AS top_impression_percentage,\n    stats.metrics_search_top_impression_share AS search_top_impression_share,\n    stats.metrics_video_quartile_p100_rate AS video_quartile_p100_rate,\n    stats.metrics_video_quartile_p75_rate AS video_quartile_p75_rate,\n    stats.metrics_video_quartile_p50_rate AS video_quartile_p50_rate,\n    stats.metrics_video_quartile_p25_rate AS video_quartile_p25_rate,\n    stats.metrics_absolute_top_impression_percentage AS absolute_top_impression_percentage,\n    stats.metrics_content_impression_share AS content_impression_share,\n    stats.metrics_content_rank_lost_impression_share AS content_rank_lost_impression_share,\n    stats.metrics_cross_device_conversions AS cross_device_conversions,\n    stats.metrics_engagements AS engagements,\n    stats.metrics_relative_ctr AS relative_ctr,\n    stats.metrics_search_absolute_top_impression_share AS search_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_absolute_top_impression_share AS search_budget_lost_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_top_impression_share AS search_budget_lost_top_impression_share,\n    stats.metrics_search_impression_share AS search_impression_share,\n    stats.metrics_search_rank_lost_absolute_top_impression_share AS search_rank_lost_absolute_top_impression_share,\n    stats.metrics_search_rank_lost_impression_share AS search_rank_lost_impression_share,\n    stats.metrics_search_rank_lost_top_impression_share AS search_rank_lost_top_impression_share,\n    stats.metrics_video_views AS video_views,\nFROM\n    {{ source(\n        'googleads',\n        'ad_group_cross_device_stats'\n    ) }}\n    stats", "language": "sql", "refs": [], "sources": [["googleads", "ad_group_cross_device_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.ad_group_cross_device_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__ad_group_cross_device_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    stats.ad_group_id,\n    stats.segments_date AS date,\n    stats.campaign_id,\n    stats.segments_ad_network_type AS network_type,\n    stats.metrics_top_impression_percentage AS top_impression_percentage,\n    stats.metrics_search_top_impression_share AS search_top_impression_share,\n    stats.metrics_video_quartile_p100_rate AS video_quartile_p100_rate,\n    stats.metrics_video_quartile_p75_rate AS video_quartile_p75_rate,\n    stats.metrics_video_quartile_p50_rate AS video_quartile_p50_rate,\n    stats.metrics_video_quartile_p25_rate AS video_quartile_p25_rate,\n    stats.metrics_absolute_top_impression_percentage AS absolute_top_impression_percentage,\n    stats.metrics_content_impression_share AS content_impression_share,\n    stats.metrics_content_rank_lost_impression_share AS content_rank_lost_impression_share,\n    stats.metrics_cross_device_conversions AS cross_device_conversions,\n    stats.metrics_engagements AS engagements,\n    stats.metrics_relative_ctr AS relative_ctr,\n    stats.metrics_search_absolute_top_impression_share AS search_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_absolute_top_impression_share AS search_budget_lost_absolute_top_impression_share,\n    stats.metrics_search_budget_lost_top_impression_share AS search_budget_lost_top_impression_share,\n    stats.metrics_search_impression_share AS search_impression_share,\n    stats.metrics_search_rank_lost_absolute_top_impression_share AS search_rank_lost_absolute_top_impression_share,\n    stats.metrics_search_rank_lost_impression_share AS search_rank_lost_impression_share,\n    stats.metrics_search_rank_lost_top_impression_share AS search_rank_lost_top_impression_share,\n    stats.metrics_video_views AS video_views,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCrossDeviceStats_1322374205`\n    stats", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__search_query_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__search_query_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__search_query_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__search_query_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__search_query_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__search_query_stats"], "alias": "stg_googleads__search_query_stats", "checksum": {"name": "sha256", "checksum": "f005536991137de50f16bafa457cb3a07ef0b52289d1cd9c806f602e45db167e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__search_query_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__search_query_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"date": {"name": "date", "description": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.M\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "search_term": {"name": "search_term", "description": "The search term.C\u1ee5m t\u1eeb t\u00ecm ki\u1ebfm.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.Ph\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "match_type": {"name": "match_type", "description": "The match type of the keyword.Ph\u01b0\u01a1ng ph\u00e1p so kh\u1edbp t\u1eeb kho\u00e1", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_status": {"name": "view_status", "description": "Indicates whether the search term is currently one of your targeted or excluded keywords.C\u1ee5m t\u1eeb t\u00ecm ki\u1ebfm thu\u1ed9c nh\u00f3m t\u1eeb kho\u00e1 m\u1ee5c ti\u00eau hay lo\u1ea1i t\u1eeb", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "absolute_top_impression_percentage": {"name": "absolute_top_impression_percentage", "description": "The percent of your ad impressions that are shown as the very first ad above the organic search results.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb th\u1ee9 t\u1ef1 \u0111\u1ea7u ti\u00ean trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"metrics": {"m_absolute_top_impression_percentage": {"type": "average", "label": "Absolute Top Impression Percentage", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "all_conversions": {"name": "all_conversions", "description": "The total number of conversions.To\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i (bao g\u1ed3m c\u1ea3 nh\u1eefng chuy\u1ec3n \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c gom trong nh\u00f3m qu\u1ea3ng c\u00e1o)", "meta": {"metrics": {"m_all_conversions": {"type": "sum", "label": "All Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "all_conversions_from_interactions_rate": {"name": "all_conversions_from_interactions_rate", "description": "All conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.To\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c.", "meta": {"metrics": {"m_all_conversions_from_interactions_rate": {"type": "sum", "label": "All Conversions From Interactions Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "all_conversions_value": {"name": "all_conversions_value", "description": "The total value of all conversions.T\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_all_conversions_value": {"type": "sum", "label": "All Conversions Value", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.S\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions": {"type": "sum", "label": "Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_from_interactions_rate": {"name": "conversions_from_interactions_rate", "description": "Conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.L\u01b0\u1ee3ng chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c.", "meta": {"metrics": {"m_conversions_from_interactions_rate": {"type": "sum", "label": "Conversions From Interactions Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.Gi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions_value": {"type": "sum", "label": "Conversions Value", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.Chi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost_per_all_conversions": {"name": "cost_per_all_conversions", "description": "The cost of ad interactions divided by all conversions.Chi ph\u00ed qu\u1ea3ng c\u00e1o chia cho to\u00e0n b\u1ed9 s\u1ed1 chuy\u1ec3n \u0111\u1ed5i (bao g\u1ed3m c\u1ea3 chuy\u1ec3n \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c gom trong nh\u00f3m)", "meta": {"metrics": {"m_cost_per_all_conversions": {"type": "average", "label": "Cost Per All Conversions", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "The cost of ad interactions divided by conversions.Chi ph\u00ed qu\u1ea3ng c\u00e1o chia cho s\u1ed1 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cost_per_conversion": {"type": "average", "label": "Cost Per Conversion", "group_label": "GG Ads metrics"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cross_device_conversions": {"name": "cross_device_conversions", "description": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.Chuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_cross_device_conversions": {"type": "sum", "label": "Cross Device Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagements": {"name": "engagements", "description": "The number of engagements. An engagement occurs when a viewer expands your Lightbox ad.S\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. V\u1edbi qu\u1ea3ng c\u00e1o display s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng m\u1edf r\u1ed9ng qu\u1ea3ng c\u00e1o (Lightbox)", "meta": {"metrics": {"m_engagements": {"type": "sum", "label": "Engagements", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.S\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.S\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"m_interactions": {"type": "sum", "label": "Interactions", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "top_impression_percentage": {"name": "top_impression_percentage", "description": "The percent of your ad impressions that are shown anywhere above the organic search results.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm.", "meta": {"metrics": {"m_top_impression_percentage": {"type": "average", "label": "Top Impression Percentage", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_per_all_conversions": {"name": "value_per_all_conversions", "description": "The value of all conversions divided by the number of all conversions.T\u1ed5ng gi\u00e1 tr\u1ecb to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i chia cho to\u00e0n b\u1ed9 s\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_value_per_all_conversions": {"type": "average", "label": "Value Per All Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_per_conversion": {"name": "value_per_conversion", "description": "The value of conversions divided by the number of conversions.Gi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i tr\u00ean m\u1ed7i l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_value_per_conversion": {"type": "average", "label": "Value Per Conversion", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p100_rate": {"name": "video_quartile_p100_rate", "description": "Percentage of impressions where the viewer watched all of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem to\u00e0n b\u1ed9 video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p100_rate": {"type": "average", "label": "Video Quartile P100 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p25_rate": {"name": "video_quartile_p25_rate", "description": "Percentage of impressions where the viewer watched 25% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 25% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p25_rate": {"type": "average", "label": "Video Quartile P25 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p50_rate": {"name": "video_quartile_p50_rate", "description": "Percentage of impressions where the viewer watched 50% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 50% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p50_rate": {"type": "average", "label": "Video Quartile P50 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_quartile_p75_rate": {"name": "video_quartile_p75_rate", "description": "Percentage of impressions where the viewer watched 75% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 75% video qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_video_quartile_p75_rate": {"type": "average", "label": "Video Quartile P75 Rate", "group_label": "GG Ads metrics", "format": "percent"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "video_views": {"name": "video_views", "description": "The number of times your video ads were viewed.S\u1ed1 l\u01b0\u1ee3t qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c xem.", "meta": {"metrics": {"m_video_views": {"type": "sum", "label": "Video Views", "group_label": "GG Ads metrics", "compact": "thousands", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"metrics": {"m_view_through_conversions": {"type": "sum", "label": "View Through Conversions", "group_label": "GG Ads metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__search_query_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__search_query_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__search_query_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__search_query_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__search_query_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1732268180.8931143, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__search_query_stats`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['ggads','fact','view']\n) }}\n\nSELECT\n    segments_date AS DATE,\n    ad_group_id,\n    campaign_id,\n    search_term_view_search_term AS search_term,\n    segments_ad_network_type AS network_type,\n    segments_search_term_match_type AS match_type,\n    search_term_view_status AS view_status,\n    AVG(metrics_absolute_top_impression_percentage) absolute_top_impression_percentage,\n    SUM(metrics_all_conversions) all_conversions,\n    AVG(metrics_all_conversions_from_interactions_rate) all_conversions_from_interactions_rate,\n    SUM(metrics_all_conversions_value) all_conversions_value,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_all_conversions) cost_per_all_conversions,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_engagements) engagements,\n    SUM(metrics_impressions) impressions,\n    SUM(metrics_interactions) interactions,\n    AVG(metrics_top_impression_percentage) top_impression_percentage,\n    SUM(metrics_value_per_all_conversions) value_per_all_conversions,\n    SUM(metrics_value_per_conversion) value_per_conversion,\n    AVG(metrics_video_quartile_p100_rate) video_quartile_p100_rate,\n    AVG(metrics_video_quartile_p25_rate) video_quartile_p25_rate,\n    AVG(metrics_video_quartile_p50_rate) video_quartile_p50_rate,\n    AVG(metrics_video_quartile_p75_rate) video_quartile_p75_rate,\n    SUM(metrics_video_views) video_views,\n    SUM(metrics_view_through_conversions) view_through_conversions,\nFROM\n    {{ source(\n        'googleads',\n        'search_query_stats'\n    ) }}\nWHERE\n    1 = 1 {{ dbt_utils.group_by(7) }}", "language": "sql", "refs": [], "sources": [["googleads", "search_query_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.googleads.search_query_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__search_query_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    segments_date AS DATE,\n    ad_group_id,\n    campaign_id,\n    search_term_view_search_term AS search_term,\n    segments_ad_network_type AS network_type,\n    segments_search_term_match_type AS match_type,\n    search_term_view_status AS view_status,\n    AVG(metrics_absolute_top_impression_percentage) absolute_top_impression_percentage,\n    SUM(metrics_all_conversions) all_conversions,\n    AVG(metrics_all_conversions_from_interactions_rate) all_conversions_from_interactions_rate,\n    SUM(metrics_all_conversions_value) all_conversions_value,\n    SUM(metrics_clicks) clicks,\n    SUM(metrics_conversions) conversions,\n    AVG(metrics_conversions_from_interactions_rate) conversions_from_interactions_rate,\n    SUM(metrics_conversions_value) conversions_value,\n    SUM(\n        metrics_cost_micros / 1e6\n    ) cost,\n    AVG(metrics_cost_per_all_conversions) cost_per_all_conversions,\n    AVG(metrics_cost_per_conversion) cost_per_conversion,\n    SUM(metrics_cross_device_conversions) cross_device_conversions,\n    SUM(metrics_engagements) engagements,\n    SUM(metrics_impressions) impressions,\n    SUM(metrics_interactions) interactions,\n    AVG(metrics_top_impression_percentage) top_impression_percentage,\n    SUM(metrics_value_per_all_conversions) value_per_all_conversions,\n    SUM(metrics_value_per_conversion) value_per_conversion,\n    AVG(metrics_video_quartile_p100_rate) video_quartile_p100_rate,\n    AVG(metrics_video_quartile_p25_rate) video_quartile_p25_rate,\n    AVG(metrics_video_quartile_p50_rate) video_quartile_p50_rate,\n    AVG(metrics_video_quartile_p75_rate) video_quartile_p75_rate,\n    SUM(metrics_video_views) video_views,\n    SUM(metrics_view_through_conversions) view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_SearchQueryStats_1322374205`\nWHERE\n    1 = 1 group by 1,2,3,4,5,6,7", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__keyword_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__keyword_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__keyword_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__keyword_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__keyword_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__keyword_stats"], "alias": "stg_googleads__keyword_stats", "checksum": {"name": "sha256", "checksum": "3467175718da0ad1baa7fcc7c2187863d4ec5db6c5ab8e656ec385e6be661b9c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__keyword_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__keyword_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"date": {"name": "date", "description": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_group_id": {"name": "ad_group_id", "description": "The ID of the ad group.M\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "device": {"name": "device", "description": "Device to which metrics apply.Thi\u1ebft b\u1ecb", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.V\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "network_type": {"name": "network_type", "description": "Ad network type.Ph\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "match_type": {"name": "match_type", "description": "The match type of the keyword.Ph\u01b0\u01a1ng ph\u00e1p so kh\u1edbp t\u1eeb kho\u00e1", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "keyword": {"name": "keyword", "description": "T\u1eeb kho\u00e1 t\u00ecm ki\u1ebfm.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The number of clicks.S\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)", "meta": {"metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "GG Ads Metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions": {"type": "sum", "label": "Conversions", "group_label": "GG Ads Metrics", "round": 1}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.Gi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"m_conversions_value": {"type": "sum", "label": "Conversions Value", "group_label": "GG Ads Metrics", "compact": "millions"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cost": {"name": "cost", "description": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.Chi ph\u00ed qu\u1ea3ng c\u00e1o.", "meta": {"metrics": {"m_cost": {"type": "sum", "label": "Cost", "group_label": "GG Ads Metrics", "compact": "millions"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "Count of how often your ad has appeared on a search results page or website on the Google Network.S\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network.", "meta": {"metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "GG Ads Metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "interactions": {"name": "interactions", "description": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.S\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video.", "meta": {"metrics": {"m_interactions": {"type": "sum", "label": "Interactions", "group_label": "GG Ads Metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "view_through_conversions": {"name": "view_through_conversions", "description": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)", "meta": {"metrics": {"m_view_through_conversions": {"type": "sum", "label": "View Through Conversions", "group_label": "GG Ads Metrics", "compact": "thousands"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__keyword_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__keyword_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__keyword_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__ad_groups", "sql_on": "${stg_googleads__keyword_stats.ad_group_id} =  ${stg_googleads__ad_groups.ad_group_id}", "fields": ["ad_group_id", "ad_group_name", "ad_group_type"]}, {"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__keyword_stats.campaign_id} =  ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "campaign_name", "advertising_channel", "bidding_stategy"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1732268180.9082937, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__keyword_stats`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','fact','view']\n)}}\nSELECT\n    stats.segments_date AS date,\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_device AS device,\n    stats.segments_slot AS slot,\n    stats.segments_ad_network_type AS network_type,\n    keyword.ad_group_criterion_keyword_match_type AS match_type,\n    keyword.ad_group_criterion_keyword_text as keyword,\n    SUM(\n        stats.metrics_clicks\n    ) AS clicks,\n    SUM(\n        stats.metrics_conversions\n    ) AS conversions,\n    SUM(\n        stats.metrics_conversions_value\n    ) AS conversions_value,\n    SUM(\n        stats.metrics_cost_micros / 1e6\n    ) AS cost,\n    SUM(\n        stats.metrics_impressions\n    ) AS impressions,\n    SUM(\n        stats.metrics_interactions\n    ) AS interactions,\n    SUM(\n        stats.metrics_view_through_conversions\n    ) AS view_through_conversions,\nFROM\n    {{ source(\n        'googleads',\n        'keyword_basic_stats'\n    ) }}\n    stats\n    LEFT JOIN {{ source(\n        'googleads',\n        'keyword'\n    ) }}\n    keyword\n    ON stats.ad_group_criterion_criterion_id = keyword.ad_group_criterion_criterion_id\n    AND stats.ad_group_id = keyword.ad_group_id\nWHERE 1=1\n    and keyword._LATEST_DATE = keyword._DATA_DATE\n    {{dbt_utils.group_by(8)}}", "language": "sql", "refs": [], "sources": [["googleads", "keyword_basic_stats"], ["googleads", "keyword"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.googleads.keyword_basic_stats", "source.sado_analytics_services.googleads.keyword"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__keyword_stats.sql", "compiled": true, "compiled_code": "\nSELECT\n    stats.segments_date AS date,\n    stats.ad_group_id,\n    stats.campaign_id,\n    stats.segments_device AS device,\n    stats.segments_slot AS slot,\n    stats.segments_ad_network_type AS network_type,\n    keyword.ad_group_criterion_keyword_match_type AS match_type,\n    keyword.ad_group_criterion_keyword_text as keyword,\n    SUM(\n        stats.metrics_clicks\n    ) AS clicks,\n    SUM(\n        stats.metrics_conversions\n    ) AS conversions,\n    SUM(\n        stats.metrics_conversions_value\n    ) AS conversions_value,\n    SUM(\n        stats.metrics_cost_micros / 1e6\n    ) AS cost,\n    SUM(\n        stats.metrics_impressions\n    ) AS impressions,\n    SUM(\n        stats.metrics_interactions\n    ) AS interactions,\n    SUM(\n        stats.metrics_view_through_conversions\n    ) AS view_through_conversions,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_KeywordBasicStats_1322374205`\n    stats\n    LEFT JOIN `agile-scheme-394814`.`GoogleAds`.`ads_Keyword_1322374205`\n    keyword\n    ON stats.ad_group_criterion_criterion_id = keyword.ad_group_criterion_criterion_id\n    AND stats.ad_group_id = keyword.ad_group_id\nWHERE 1=1\n    and keyword._LATEST_DATE = keyword._DATA_DATE\n    group by 1,2,3,4,5,6,7,8", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_googleads__campaign_conversion_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_googleads__campaign_conversion_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/stg_googleads__campaign_conversion_stats.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaign_conversion_stats.sql", "unique_id": "model.sado_analytics_services.stg_googleads__campaign_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "stg_googleads__campaign_conversion_stats"], "alias": "stg_googleads__campaign_conversion_stats", "checksum": {"name": "sha256", "checksum": "5c5942fd9e18dd522fc2896525310b403cd62e0e3e6f99d13f1b1e2edf514dc1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["ggads", "fact", "view"], "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_conversion_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_conversion_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["ggads", "fact", "view"], "description": "", "columns": {"campaign_id": {"name": "campaign_id", "description": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversion_name": {"name": "conversion_name", "description": "Conversion name.T\u00ean s\u1ef1 ki\u1ec7n chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversion_attribution_type": {"name": "conversion_attribution_type", "description": "Conversion attribution event type.Lo\u1ea1i s\u1ef1 ki\u1ec7n chuy\u1ec3n \u0111\u1ed5i.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slot": {"name": "slot", "description": "Position of the ad.V\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o.", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions": {"name": "conversions", "description": "The number of conversions.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"ads_purchase": {"type": "sum", "label": "#Web Purchases", "group_label": "GG Ads metrics", "sql": "IF(${conversion_name} in ('website_purchase','web_purchase'), ${conversions}, NULL)"}, "ads_atc": {"type": "sum", "label": "#Add to cart", "group_label": "GG Ads metrics", "sql": "IF(${conversion_name} in ('add_to_cart','web_add_to_cart'), ${conversions}, NULL)"}, "ads_contacts": {"type": "sum", "label": "#Contacts intent", "group_label": "GG Ads metrics", "sql": "IF(${conversion_name} in ('website_message','website_call','web_message','web_call'), ${conversions}, NULL)"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversions_value": {"name": "conversions_value", "description": "The total value of conversions.Gi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i.", "meta": {"metrics": {"ads_purchase_value": {"type": "sum", "label": "Web Purchases Value", "group_label": "GG Ads metrics", "sql": "IF(${conversion_name} in ('website_purchase','web_purchase'), ${conversions_value}, NULL)"}}, "dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_conversion_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_conversion_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/googleAds/stg_googleads__campaign_conversion_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_googleads__campaigns", "sql_on": "${stg_googleads__campaign_conversion_stats.campaign_id} = ${stg_googleads__campaigns.campaign_id}", "fields": ["campaign_id", "campaign_name", "advertising_channel", "bidding_stategy"]}, {"join": "calendar", "sql_on": "${calendar.date} = ${stg_googleads__campaign_conversion_stats.date}", "fields": ["date", "period", "year_month", "month_name"]}]}, "tags": ["ggads", "fact", "view"]}, "created_at": 1732268180.878527, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_conversion_stats`", "raw_code": "{{ config(\n    materialized='view',\n    tags=['ggads','fact','view']\n)}}\n\nSELECT\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_conversion_action_name AS conversion_name,\n    stats.segments_conversion_attribution_event_type AS conversion_attribution_type,\n    stats.segments_slot AS slot,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\nFROM\n    {{ source(\n        'googleads',\n        'campaign_conversion_stats'\n    ) }}\n    stats", "language": "sql", "refs": [], "sources": [["googleads", "campaign_conversion_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.campaign_conversion_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaign_conversion_stats.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    stats.campaign_id,\n    stats.segments_date AS date,\n    stats.segments_conversion_action_name AS conversion_name,\n    stats.segments_conversion_attribution_event_type AS conversion_attribution_type,\n    stats.segments_slot AS slot,\n    stats.metrics_conversions AS conversions,\n    stats.metrics_conversions_value AS conversions_value,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_CampaignConversionStats_1322374205`\n    stats", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_googleAds__campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_googleAds__campaigns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/base/base_googleAds__campaigns.sql", "original_file_path": "models/staging/googleAds/base/base_googleAds__campaigns.sql", "unique_id": "model.sado_analytics_services.base_googleAds__campaigns", "fqn": ["sado_analytics_services", "staging", "googleAds", "base", "base_googleAds__campaigns"], "alias": "base_googleAds__campaigns", "checksum": {"name": "sha256", "checksum": "7f8cd70afbe318a0ed0b7fff3137ee13e21de425f2c878744946c1fda8b97f5c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268177.9416711, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__campaigns`", "raw_code": "SELECT\n    DISTINCT campaign_id,\n    customer_id AS account_id,\n    campaign_advertising_channel_type AS advertising_channel,\n    (\n        FIRST_VALUE(campaign_bidding_strategy_type) over w1\n    ) AS bidding_stategy,\n    (\n        FIRST_VALUE(campaign_budget_period) over w1\n    ) as budget_period,\n    (\n        FIRST_VALUE(campaign_budget_amount_micros) over w1 / 1e6\n    ) AS budget,\n    FIRST_VALUE(campaign_name) over w1 AS campaign_name\nFROM\n    {{ source(\n        'googleads',\n        'campaign'\n    ) }}\n    window w1 as (\n        PARTITION BY campaign_id\n        ORDER BY _DATA_DATE desc, _LATEST_DATE desc rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING\n    )", "language": "sql", "refs": [], "sources": [["googleads", "campaign"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.campaign"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/base/base_googleAds__campaigns.sql", "compiled": true, "compiled_code": "SELECT\n    DISTINCT campaign_id,\n    customer_id AS account_id,\n    campaign_advertising_channel_type AS advertising_channel,\n    (\n        FIRST_VALUE(campaign_bidding_strategy_type) over w1\n    ) AS bidding_stategy,\n    (\n        FIRST_VALUE(campaign_budget_period) over w1\n    ) as budget_period,\n    (\n        FIRST_VALUE(campaign_budget_amount_micros) over w1 / 1e6\n    ) AS budget,\n    FIRST_VALUE(campaign_name) over w1 AS campaign_name\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_Campaign_1322374205`\n    window w1 as (\n        PARTITION BY campaign_id\n        ORDER BY _DATA_DATE desc, _LATEST_DATE desc rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_googleAds__accounts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_googleAds__accounts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/base/base_googleAds__accounts.sql", "original_file_path": "models/staging/googleAds/base/base_googleAds__accounts.sql", "unique_id": "model.sado_analytics_services.base_googleAds__accounts", "fqn": ["sado_analytics_services", "staging", "googleAds", "base", "base_googleAds__accounts"], "alias": "base_googleAds__accounts", "checksum": {"name": "sha256", "checksum": "8d0281ea855f8b5ec2646889b3d33e075877bc585b00ae53ba6f3ae551ff44e2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268177.9476755, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__accounts`", "raw_code": "SELECT\n    DISTINCT customer_id AS account_id,\n    FIRST_VALUE(customer_descriptive_name) over w1 AS account_name,\n    FIRST_VALUE(customer_currency_code) over w1 AS currency_code,\n    FIRST_VALUE(customer_manager) over w1 AS is_manager_account\nFROM\n    {{ source(\n        'googleads',\n        'customer'\n    ) }}\n    where _LATEST_DATE = _DATA_DATE\n    window w1 as ( PARTITION BY customer_id\n        ORDER BY\n        _DATA_DATE desc, _LATEST_DATE desc rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING)", "language": "sql", "refs": [], "sources": [["googleads", "customer"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.customer"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/base/base_googleAds__accounts.sql", "compiled": true, "compiled_code": "SELECT\n    DISTINCT customer_id AS account_id,\n    FIRST_VALUE(customer_descriptive_name) over w1 AS account_name,\n    FIRST_VALUE(customer_currency_code) over w1 AS currency_code,\n    FIRST_VALUE(customer_manager) over w1 AS is_manager_account\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_Customer_1322374205`\n    where _LATEST_DATE = _DATA_DATE\n    window w1 as ( PARTITION BY customer_id\n        ORDER BY\n        _DATA_DATE desc, _LATEST_DATE desc rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_googleAds__adgroups": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_googleAds__adgroups", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/base/base_googleAds__adgroups.sql", "original_file_path": "models/staging/googleAds/base/base_googleAds__adgroups.sql", "unique_id": "model.sado_analytics_services.base_googleAds__adgroups", "fqn": ["sado_analytics_services", "staging", "googleAds", "base", "base_googleAds__adgroups"], "alias": "base_googleAds__adgroups", "checksum": {"name": "sha256", "checksum": "8fb0adc7015ec54645c24fd468dcae0277c760574a2205351f06a0e96d5cd55b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268177.9535224, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__adgroups`", "raw_code": "SELECT\n        DISTINCT ad_group_id,\n        campaign_id,\n        customer_id AS account_id,\n        ad_group_type,\n        FIRST_VALUE(ad_group_name) over(\n            PARTITION BY ad_group_id,\n            campaign_id\n            ORDER BY _DATA_DATE desc, _LATEST_DATE DESC\n        ) AS ad_group_name,\n    FROM\n        {{ source(\n            'googleads',\n            'ad_group'\n        ) }}", "language": "sql", "refs": [], "sources": [["googleads", "ad_group"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.ad_group"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/base/base_googleAds__adgroups.sql", "compiled": true, "compiled_code": "SELECT\n        DISTINCT ad_group_id,\n        campaign_id,\n        customer_id AS account_id,\n        ad_group_type,\n        FIRST_VALUE(ad_group_name) over(\n            PARTITION BY ad_group_id,\n            campaign_id\n            ORDER BY _DATA_DATE desc, _LATEST_DATE DESC\n        ) AS ad_group_name,\n    FROM\n        `agile-scheme-394814`.`GoogleAds`.`ads_AdGroup_1322374205`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_googleAds__criterions": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_googleAds__criterions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/googleAds/base/base_googleAds__criterions.sql", "original_file_path": "models/staging/googleAds/base/base_googleAds__criterions.sql", "unique_id": "model.sado_analytics_services.base_googleAds__criterions", "fqn": ["sado_analytics_services", "staging", "googleAds", "base", "base_googleAds__criterions"], "alias": "base_googleAds__criterions", "checksum": {"name": "sha256", "checksum": "2ea6e4b8bb81709d834516165f5eba9e5f7dccdab426c71c203246856cca565d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268177.9593885, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_googleAds__criterions`", "raw_code": "SELECT\n    ad_group_criterion_criterion_id AS criterion_id,\n    ad_group_id,\n    ad_group_criterion_display_name AS criterion_name,\n    ad_group_criterion_negative AS is_negative,\n    ad_group_criterion_type AS criterion_type,\nFROM\n    {{ source(\n        'googleads',\n        'ad_group_criterion'\n    ) }}\nWHERE\n    _LATEST_DATE = _DATA_DATE", "language": "sql", "refs": [], "sources": [["googleads", "ad_group_criterion"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.googleads.ad_group_criterion"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/base/base_googleAds__criterions.sql", "compiled": true, "compiled_code": "SELECT\n    ad_group_criterion_criterion_id AS criterion_id,\n    ad_group_id,\n    ad_group_criterion_display_name AS criterion_name,\n    ad_group_criterion_negative AS is_negative,\n    ad_group_criterion_type AS criterion_type,\nFROM\n    `agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCriterion_1322374205`\nWHERE\n    _LATEST_DATE = _DATA_DATE", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__customers.sql", "original_file_path": "models/staging/pancake/stg_pancake__customers.sql", "unique_id": "model.sado_analytics_services.stg_pancake__customers", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__customers"], "alias": "stg_pancake__customers", "checksum": {"name": "sha256", "checksum": "e9a1eabe5fc1dc8d4e7c929dc458f9f408e6129bf2020f7b265e158a318092f4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_name": {"name": "customer_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inserted_at": {"name": "inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_numbers": {"name": "phone_numbers", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city": {"name": "city", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_facebook_id": {"name": "customer_facebook_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__customers.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.002489, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__customers`", "raw_code": "SELECT\n    customer_id,\n    customer_name,\n    gender,\n    inserted_at,\n    phone_numbers,\n    city,\n    customer_facebook_id,\nFROM\n    {{ ref(\"base_pancake__customers\") }}", "language": "sql", "refs": [{"name": "base_pancake__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_pancake__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__customers.sql", "compiled": true, "compiled_code": "SELECT\n    customer_id,\n    customer_name,\n    gender,\n    inserted_at,\n    phone_numbers,\n    city,\n    customer_facebook_id,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_pancake__customers`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__orders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__orders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__orders.sql", "original_file_path": "models/staging/pancake/stg_pancake__orders.sql", "unique_id": "model.sado_analytics_services.stg_pancake__orders", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__orders"], "alias": "stg_pancake__orders", "checksum": {"name": "sha256", "checksum": "1b010db536e1594d5b15217d48a580c81260e862f14c790f026cd41e7b0f018e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seller_id": {"name": "seller_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id": {"name": "order_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_id": {"name": "shop_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "commnue_name": {"name": "commnue_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "commune_id": {"name": "commune_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "district_id": {"name": "district_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "district_name": {"name": "district_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "full_address": {"name": "full_address", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province_id": {"name": "province_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province_name": {"name": "province_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_number": {"name": "phone_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inserted_at": {"name": "inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_id": {"name": "conversation_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_price_after_sub_discount": {"name": "total_price_after_sub_discount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_price": {"name": "total_price", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "seller_assigned_at": {"name": "seller_assigned_at", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "p_utm_campaign": {"name": "p_utm_campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "p_utm_medium": {"name": "p_utm_medium", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "p_utm_source": {"name": "p_utm_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "p_utm_term": {"name": "p_utm_term", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "p_utm_content": {"name": "p_utm_content", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__orders.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.0311038, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__orders`", "raw_code": "{% set pancake_order_statuses = {\n    \"0\":\"M\u1edbi\",\n    \"17\":\"Ch\u1edd x\u00e1c nh\u1eadn\",\n    \"11\":\"Ch\u1edd h\u00e0ng\",\n    \"12\":\"Ch\u1edd in\",\n    \"13\":\"\u0110\u00e3 in\",\n    \"20\":\"\u0110\u00e3 \u0111\u1eb7t h\u00e0ng\",\n    \"1\":\"\u0110\u00e3 x\u00e1c nh\u1eadn\",\n    \"8\":\"\u0110ang \u0111\u00f3ng h\u00e0ng\",\n    \"9\":\"Ch\u1edd chuy\u1ec3n h\u00e0ng\",\n    \"2\":\"\u0110\u00e3 g\u1eedi h\u00e0ng\",\n    \"3\":\"\u0110\u00e3 nh\u1eadn\",\n    \"16\":\"\u0110\u00e3 thu ti\u1ec1n\",\n    \"4\":\"\u0110ang tr\u1ea3 h\u00e0ng\",\n    \"15\":\"Ho\u00e0n 1 ph\u1ea7n\",\n    \"5\":\"\u0110\u00e3 ho\u00e0n\",\n    \"6\":\"\u0110\u00e3 h\u1ee7y\",\n    \"7\":\"\u0110\u00e3 x\u00f3a\",\n    \"10\":\"\u0110\u01a1n Webcake\",\n    \"21\":\"\u0110\u01a1n Storecake\",\n    }\n%}\n\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'pos_orders'), partition_by = 'id,shop_id', order_by = \"_batched_at desc\",) }}\n)\n\nselect \nsource.page_id,\nsource.id as order_id,\nsource.shop_id,\ncase source.status\n{%for key, value in pancake_order_statuses.items() %}\nwhen {{key}} then '{{value}}'\n{%endfor%}\nend as status,\nsource.shipping_address.*,\nsource.bill_phone_number as phone_number,\nsource.assigning_seller_id as seller_id,\ndatetime_add(datetime(source.inserted_at), interval 7 hour) inserted_at,\ndatetime_add(datetime(source.updated_at), interval 7 hour) updated_at,\nsource.customer.customer_id as customer_id,\nsource.conversation_id,\nsource.total_price_after_sub_discount,\nsource.total_price,\nsource.time_assign_seller as seller_assigned_at,\nsource.p_utm_campaign,\nsource.p_utm_medium,\nsource.p_utm_source,\nsource.p_utm_term,\nsource.p_utm_content,\nfrom source", "language": "sql", "refs": [], "sources": [["pancake", "pos_orders"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.pos_orders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__orders.sql", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_pos_orders__*` original\n        group by id,shop_id\n    )\n)\n\nselect \nsource.page_id,\nsource.id as order_id,\nsource.shop_id,\ncase source.status\n\nwhen 0 then 'M\u1edbi'\n\nwhen 17 then 'Ch\u1edd x\u00e1c nh\u1eadn'\n\nwhen 11 then 'Ch\u1edd h\u00e0ng'\n\nwhen 12 then 'Ch\u1edd in'\n\nwhen 13 then '\u0110\u00e3 in'\n\nwhen 20 then '\u0110\u00e3 \u0111\u1eb7t h\u00e0ng'\n\nwhen 1 then '\u0110\u00e3 x\u00e1c nh\u1eadn'\n\nwhen 8 then '\u0110ang \u0111\u00f3ng h\u00e0ng'\n\nwhen 9 then 'Ch\u1edd chuy\u1ec3n h\u00e0ng'\n\nwhen 2 then '\u0110\u00e3 g\u1eedi h\u00e0ng'\n\nwhen 3 then '\u0110\u00e3 nh\u1eadn'\n\nwhen 16 then '\u0110\u00e3 thu ti\u1ec1n'\n\nwhen 4 then '\u0110ang tr\u1ea3 h\u00e0ng'\n\nwhen 15 then 'Ho\u00e0n 1 ph\u1ea7n'\n\nwhen 5 then '\u0110\u00e3 ho\u00e0n'\n\nwhen 6 then '\u0110\u00e3 h\u1ee7y'\n\nwhen 7 then '\u0110\u00e3 x\u00f3a'\n\nwhen 10 then '\u0110\u01a1n Webcake'\n\nwhen 21 then '\u0110\u01a1n Storecake'\n\nend as status,\nsource.shipping_address.*,\nsource.bill_phone_number as phone_number,\nsource.assigning_seller_id as seller_id,\ndatetime_add(datetime(source.inserted_at), interval 7 hour) inserted_at,\ndatetime_add(datetime(source.updated_at), interval 7 hour) updated_at,\nsource.customer.customer_id as customer_id,\nsource.conversation_id,\nsource.total_price_after_sub_discount,\nsource.total_price,\nsource.time_assign_seller as seller_assigned_at,\nsource.p_utm_campaign,\nsource.p_utm_medium,\nsource.p_utm_source,\nsource.p_utm_term,\nsource.p_utm_content,\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__posts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__posts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__posts.sql", "original_file_path": "models/staging/pancake/stg_pancake__posts.sql", "unique_id": "model.sado_analytics_services.stg_pancake__posts", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__posts"], "alias": "stg_pancake__posts", "checksum": {"name": "sha256", "checksum": "ec33728ca02c810d95232de9f805fdb7c0e7d1b10f3574814b4a429b9f32fdf1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"post_title": {"name": "post_title", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inserted_at": {"name": "inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "like_count": {"name": "like_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reaction_count": {"name": "reaction_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment_count": {"name": "comment_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_number_count": {"name": "phone_number_count", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__posts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.0337672, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__posts`", "raw_code": "SELECT\n    regexp_extract(message,r'^(.*\\n.*)') post_title,\n    admin_creator.id AS user_id,\n    admin_creator.name AS user_name,\n    updated_at,\n    inserted_at,\n    page_id,\n    post_id,\n    like_count,\n    reaction_count,\n    comment_count,\n    phone_number_count,\nFROM\n    {{ ref(\"base_pancake__posts\") }}", "language": "sql", "refs": [{"name": "base_pancake__posts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_pancake__posts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__posts.sql", "compiled": true, "compiled_code": "SELECT\n    regexp_extract(message,r'^(.*\\n.*)') post_title,\n    admin_creator.id AS user_id,\n    admin_creator.name AS user_name,\n    updated_at,\n    inserted_at,\n    page_id,\n    post_id,\n    like_count,\n    reaction_count,\n    comment_count,\n    phone_number_count,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_pancake__posts`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__tags": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__tags", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__tags.sql", "original_file_path": "models/staging/pancake/stg_pancake__tags.sql", "unique_id": "model.sado_analytics_services.stg_pancake__tags", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__tags"], "alias": "stg_pancake__tags", "checksum": {"name": "sha256", "checksum": "3c32c28732d7bf6c8161226868381845524d88f6b6df67c1dd3fda7516b37d24"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimensions", "pancake"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimensions", "pancake"], "description": "", "columns": {"tag_id": {"name": "tag_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tag_value": {"name": "tag_value", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__tags.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimensions", "pancake"]}, "created_at": 1732268181.016094, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__tags`", "raw_code": "{{\n  config(\n    tags=['view', 'dimensions','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'tags'), partition_by = 'id', order_by = \"_batched_at desc\",) }}\n)\n\nSELECT\ndistinct\n    source.id AS tag_id,\n    source.text AS tag_value,\n    ref.category\nFROM\n    source\n    left join {{ref(\"stg_gsheet__pancake_tags\")}} ref on source.text = ref.tag_value", "language": "sql", "refs": [{"name": "stg_gsheet__pancake_tags", "package": null, "version": null}], "sources": [["pancake", "tags"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.tags", "model.sado_analytics_services.stg_gsheet__pancake_tags"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__tags.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_tags__*` original\n        group by id\n    )\n)\n\nSELECT\ndistinct\n    source.id AS tag_id,\n    source.text AS tag_value,\n    ref.category\nFROM\n    source\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__pancake_tags` ref on source.text = ref.tag_value", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__page_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__page_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__page_stats.sql", "original_file_path": "models/staging/pancake/stg_pancake__page_stats.sql", "unique_id": "model.sado_analytics_services.stg_pancake__page_stats", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__page_stats"], "alias": "stg_pancake__page_stats", "checksum": {"name": "sha256", "checksum": "88eef72814b8cbd6845077e5bd65fe32992125c18bc631f16ef93c6c24104010"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "fact", "pancake"], "meta": {"joins": [{"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__page_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__page_stats.hour})", "fields": ["date", "period", "period_code"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "fact", "pancake"], "description": "Th\u1ed1ng k\u00ea d\u1eef li\u1ec7u theo page theo gi\u1edd", "columns": {"customer_comment_count": {"name": "customer_comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_customer_comment": {"type": "sum", "label": "No. customer comments", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_inbox_count": {"name": "customer_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_customer_inbox": {"type": "sum", "label": "No. inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour": {"name": "hour", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_hour": {"type": "number", "sql": "extract(hour from ${TABLE}.hour)", "label": "Hour"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbox_interactive_count": {"name": "inbox_interactive_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_inbox_interactive": {"type": "sum", "label": "No. interactive inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_customer_count": {"name": "new_customer_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_new_customer": {"type": "sum", "label": "No. new customers", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_inbox_count": {"name": "new_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_new_inbox": {"type": "sum", "label": "No. new inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_comment_count": {"name": "page_comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_page_comment": {"type": "sum", "label": "No. page comments", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_inbox_count": {"name": "page_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_page_inbox": {"type": "sum", "label": "No. page inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_number_count": {"name": "phone_number_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_phone": {"type": "sum", "label": "No. phones", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "today_uniq_website_referral": {"name": "today_uniq_website_referral", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique_website_ref": {"type": "sum", "label": "No. unique website referrals", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "today_website_guest_referral": {"name": "today_website_guest_referral", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_website_ref": {"type": "sum", "label": "No. website referrals", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "uniq_phone_number_count": {"name": "uniq_phone_number_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique_phone": {"type": "sum", "label": "No. unique phones", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__page_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__page_stats.hour})", "fields": ["date", "period", "period_code"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__page_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__page_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__page_stats.hour})", "fields": ["date", "period", "period_code"]}]}, "tags": ["view", "fact", "pancake"]}, "created_at": 1732268180.9957, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__page_stats`", "raw_code": "{{\n  config(\n    tags=['view', 'fact','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'page_stats'), partition_by = 'hour,page_id', order_by = \"_batched_at desc\",) }}\n)\nSELECT\n    source.customer_comment_count,\n    source.customer_inbox_count,\n    source.hour,\n    source.inbox_interactive_count,\n    source.new_customer_count,\n    source.new_inbox_count,\n    source.page_comment_count,\n    source.page_inbox_count,\n    source.phone_number_count,\n    source.today_uniq_website_referral,\n    source.today_website_guest_referral,\n    source.uniq_phone_number_count,\n    source.page_id,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "page_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.page_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__page_stats.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_page_stats__*` original\n        group by hour,page_id\n    )\n)\nSELECT\n    source.customer_comment_count,\n    source.customer_inbox_count,\n    source.hour,\n    source.inbox_interactive_count,\n    source.new_customer_count,\n    source.new_inbox_count,\n    source.page_comment_count,\n    source.page_inbox_count,\n    source.phone_number_count,\n    source.today_uniq_website_referral,\n    source.today_website_guest_referral,\n    source.uniq_phone_number_count,\n    source.page_id,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__pages": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__pages", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__pages.sql", "original_file_path": "models/staging/pancake/stg_pancake__pages.sql", "unique_id": "model.sado_analytics_services.stg_pancake__pages", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__pages"], "alias": "stg_pancake__pages", "checksum": {"name": "sha256", "checksum": "577164b72efeeb19a67cf9872899fb821f4f45a2988f756892fb5e7ec2d880db"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "dimensions", "pancake"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "dimensions", "pancake"], "description": "", "columns": {"avatar_url": {"name": "avatar_url", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "business": {"name": "business", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "connected": {"name": "connected", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_global_id_crawl": {"name": "last_global_id_crawl", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_name": {"name": "page_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "need_fix_webhook": {"name": "need_fix_webhook", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_content_sync_group_id": {"name": "page_content_sync_group_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role_in_page": {"name": "role_in_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shop_id": {"name": "shop_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "special_feature": {"name": "special_feature", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timezone": {"name": "timezone", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__pages.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "dimensions", "pancake"]}, "created_at": 1732268181.007429, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__pages`", "raw_code": "{{\n  config(\n    tags=['view', 'dimensions','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'pages'), partition_by = 'id', order_by = \"_batched_at desc\",) }}\n)\nSELECT\n    source.avatar_url,\n    source.business,\n    source.connected,\n    source.id AS page_id,\n    source.last_global_id_crawl,\n    source.name AS page_name,\n    source.need_fix_webhook,\n    source.page_content_sync_group_id,\n    source.role_in_page,\n    source.shop_id,\n    source.special_feature,\n    source.timezone,\n    source.username,\n    source.status,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "pages"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.pages"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__pages.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_pages__*` original\n        group by id\n    )\n)\nSELECT\n    source.avatar_url,\n    source.business,\n    source.connected,\n    source.id AS page_id,\n    source.last_global_id_crawl,\n    source.name AS page_name,\n    source.need_fix_webhook,\n    source.page_content_sync_group_id,\n    source.role_in_page,\n    source.shop_id,\n    source.special_feature,\n    source.timezone,\n    source.username,\n    source.status,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__conversations": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__conversations", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__conversations.sql", "original_file_path": "models/staging/pancake/stg_pancake__conversations.sql", "unique_id": "model.sado_analytics_services.stg_pancake__conversations", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__conversations"], "alias": "stg_pancake__conversations", "checksum": {"name": "sha256", "checksum": "ceb4991961b005199335275a519728da11984d219973b1ec9fc47f7438c1da3d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "fact", "pancake"], "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${stg_pancake__conversations.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__conversations.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${stg_pancake__conversations.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__conversations.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__conversations.inserted_at})", "fields": ["date", "period", "period_code"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "fact", "pancake"], "description": "", "columns": {"inserted_at": {"name": "inserted_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_conversation_type": {"type": "string", "sql": "case when ${stg_pancake__customers.inserted_at} < ${TABLE}.inserted_at then 'Kh\u00e1ch m\u1edbi' else 'Kh\u00e1ch c\u0169' end", "label": "Conversation type"}}}, "data_type": "datetime", "constraints": [], "quote": null, "tags": []}, "conversation_id": {"name": "conversation_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_conversations": {"type": "count_distinct", "label": "No. Conversations", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "chat_id": {"name": "chat_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_customer_engaged": {"type": "count_distinct", "label": "No. Engaged Customers", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "post_id": {"name": "post_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "tag_id": {"name": "tag_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "message_count": {"name": "message_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_messages": {"type": "sum", "label": "No. Messages", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "snippet": {"name": "snippet", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": "datetime", "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_inserted_at": {"name": "ad_inserted_at", "description": "", "meta": {}, "data_type": "datetime", "constraints": [], "quote": true, "tags": []}, "ad_post_id": {"name": "ad_post_id", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "tag_histories": {"name": "tag_histories", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "record", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${stg_pancake__conversations.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__conversations.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${stg_pancake__conversations.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__conversations.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__conversations.inserted_at})", "fields": ["date", "period", "period_code"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__conversations.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "stg_pancake__customers", "sql_on": "${stg_pancake__conversations.customer_id} = ${stg_pancake__customers.customer_id}", "fields": ["customer_id", "city", "gender", "inserted_at"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__conversations.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__posts", "sql_on": "${stg_pancake__posts.post_id} = ${stg_pancake__conversations.post_id}", "fields": ["post_id", "post_title"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__conversations.user_id}", "fields": ["user_id", "user_name"]}, {"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__conversations.inserted_at})", "fields": ["date", "period", "period_code"]}]}, "tags": ["view", "fact", "pancake"]}, "created_at": 1732268181.0234299, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__conversations`", "raw_code": "{{\n  config(\n    tags=['view', 'fact','pancake']\n    )\n}}\n\nSELECT\n    conversations.inserted_at,\n    {{dbt_utils.generate_surrogate_key(['conversation_id','customer_id'])}} as conversation_id,\n    conversations.conversation_id as chat_id,\n    conversations.customer_id,\n    conversations.user_id,\n    conversations.page_id,\n    conversations.post_id,\n    conversations.tag_id,\n    conversations.message_count,\n    conversations.snippet,\n    conversations.type,\n    coalesce(conversations.updated_at, conversations.inserted_at) as updated_at,\n    conversations.ad_id,\n    conversations.ad_inserted_at,\n    conversations.ad_post_id,\n    conversations.tag_histories\nFROM\n    {{ ref(\"base_pancake__conversations\") }}\n    conversations", "language": "sql", "refs": [{"name": "base_pancake__conversations", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.sado_analytics_services.base_pancake__conversations"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__conversations.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    conversations.inserted_at,\n    to_hex(md5(cast(coalesce(cast(conversation_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as conversation_id,\n    conversations.conversation_id as chat_id,\n    conversations.customer_id,\n    conversations.user_id,\n    conversations.page_id,\n    conversations.post_id,\n    conversations.tag_id,\n    conversations.message_count,\n    conversations.snippet,\n    conversations.type,\n    coalesce(conversations.updated_at, conversations.inserted_at) as updated_at,\n    conversations.ad_id,\n    conversations.ad_inserted_at,\n    conversations.ad_post_id,\n    conversations.tag_histories\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_pancake__conversations`\n    conversations", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__user_stats": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__user_stats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__user_stats.sql", "original_file_path": "models/staging/pancake/stg_pancake__user_stats.sql", "unique_id": "model.sado_analytics_services.stg_pancake__user_stats", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__user_stats"], "alias": "stg_pancake__user_stats", "checksum": {"name": "sha256", "checksum": "96403b592ee114d070b965ba2b2abbd946e756d48d5b78624daacec35c2f8f3e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "fact", "pancake"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__user_stats.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__user_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__user_stats.user_id}", "fields": ["user_id", "user_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "fact", "pancake"], "description": "Th\u1ed1ng k\u00ea d\u1eef li\u1ec7u nh\u00e2n vi\u00ean theo page theo gi\u1edd", "columns": {"average_response_time": {"name": "average_response_time", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "additional_dimensions": {"d_average_response_time": {"type": "number", "sql": "case when ${d_hour} >= 7 and ${d_hour} <= 23 then ${TABLE}.average_response_time else 0 end", "hidden": true}}, "metrics": {"m_avg_response_time": {"type": "average", "round": 1, "label": "Avg response time (hour)", "group_label": "Pancake metrics", "sql": "${d_average_response_time}/3600"}, "m_med_response_time": {"type": "median", "round": 1, "label": "Median of response time (min)", "group_label": "Pancake metrics", "sql": "${d_average_response_time}/60"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comment_count": {"name": "comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_comment": {"type": "sum", "round": 2, "label": "No. comments", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour": {"name": "hour", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_hour": {"type": "number", "sql": "extract(hour from ${TABLE}.hour)", "label": "Hour"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour_in_integer": {"name": "hour_in_integer", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbox_count": {"name": "inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_inbox": {"type": "sum", "round": 2, "label": "No. inboxes", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_count": {"name": "order_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_order": {"type": "sum", "round": 0, "label": "No. orders", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_number_count": {"name": "phone_number_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_phone": {"type": "sum", "label": "No. phones", "group_label": "Pancake metrics", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "private_reply_count": {"name": "private_reply_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_private_reply": {"type": "sum", "round": 0, "label": "No. private replies", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_comment_count": {"name": "unique_comment_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique_comment": {"type": "sum", "round": 0, "label": "No. unique comments", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "unique_inbox_count": {"name": "unique_inbox_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_unique inbox": {"type": "sum", "round": 0, "label": "No. unique inboxes", "group_label": "Pancake metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__user_stats.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__user_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__user_stats.user_id}", "fields": ["user_id", "user_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__user_stats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__user_stats.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__user_stats.page_id}", "fields": ["page_id", "page_name"]}, {"join": "stg_pancake__users", "sql_on": "${stg_pancake__users.user_id} = ${stg_pancake__user_stats.user_id}", "fields": ["user_id", "user_name"]}]}, "tags": ["view", "fact", "pancake"]}, "created_at": 1732268181.0009525, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__user_stats`", "raw_code": "{{\n  config(\n    tags=['view', 'fact','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'user_stats'), partition_by = 'page_id,user_id,hour', order_by = \"_batched_at desc\",) }}\n)\nSELECT\nsource.hour,\nsource.page_id,\nsource.user_id,\nsource.average_response_time,\nsource.comment_count,\nsource.hour_in_integer,\nsource.inbox_count,\nsource.order_count,\nsource.phone_number_count,\nsource.private_reply_count,\nsource.unique_comment_count,\nsource.unique_inbox_count,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "user_stats"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.user_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__user_stats.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_user_stats__*` original\n        group by page_id,user_id,hour\n    )\n)\nSELECT\nsource.hour,\nsource.page_id,\nsource.user_id,\nsource.average_response_time,\nsource.comment_count,\nsource.hour_in_integer,\nsource.inbox_count,\nsource.order_count,\nsource.phone_number_count,\nsource.private_reply_count,\nsource.unique_comment_count,\nsource.unique_inbox_count,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__customer_engagements": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__customer_engagements", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__customer_engagements.sql", "original_file_path": "models/staging/pancake/stg_pancake__customer_engagements.sql", "unique_id": "model.sado_analytics_services.stg_pancake__customer_engagements", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__customer_engagements"], "alias": "stg_pancake__customer_engagements", "checksum": {"name": "sha256", "checksum": "2e66d6e68f0a52107d83c4466573107bc7fffd97c95cc16339f140cc47756cff"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "fact", "pancake"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__customer_engagements.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__customer_engagements.page_id}", "fields": ["page_id", "page_name"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "fact", "pancake"], "description": "Th\u1ed1ng k\u00ea t\u01b0\u01a1ng t\u00e1c v\u1edbi kh\u00e1ch h\u00e0ng theo page theo gi\u1edd", "columns": {"comment": {"name": "comment", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_comments": {"type": "sum", "label": "No. comments", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hour": {"name": "hour", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}, "additional_dimensions": {"d_hour": {"type": "number", "sql": "extract(hour from ${TABLE}.hour)", "label": "Hour"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inbox": {"name": "inbox", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_inbox": {"type": "sum", "label": "No. inbox", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_customer": {"name": "new_customer", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_new_customer": {"type": "sum", "label": "No. new customer", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "new_customer_from_inbox": {"name": "new_customer_from_inbox", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_new_customer_from_inbox": {"type": "sum", "label": "No. new customer from inbox", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "old_order_count": {"name": "old_order_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_old_order_count": {"type": "sum", "label": "No. old order", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_count": {"name": "order_count", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_order_count": {"type": "sum", "label": "No. orders", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_engagements": {"type": "sum", "label": "No. engagements", "group_label": "Pancake metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__customer_engagements.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__customer_engagements.page_id}", "fields": ["page_id", "page_name"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__customer_engagements.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_pancake__customer_engagements.hour})", "fields": ["date", "period", "period_code"]}, {"join": "stg_pancake__pages", "sql_on": "${stg_pancake__pages.page_id} = ${stg_pancake__customer_engagements.page_id}", "fields": ["page_id", "page_name"]}]}, "tags": ["view", "fact", "pancake"]}, "created_at": 1732268181.0145435, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__customer_engagements`", "raw_code": "{{\n  config(\n    tags=['view', 'fact','pancake']\n  )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'pancake',\n            'customer_engagements'\n        ),\n        partition_by = 'hour,page_id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\nSELECT\n    source.comment,\n    source.hour,\n    source.inbox,\n    source.new_customer,\n    source.new_customer_from_inbox,\n    source.old_order_count,\n    source.order_count,\n    source.total,\n    source.page_id,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "customer_engagements"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.customer_engagements"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__customer_engagements.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_customer_engagements__*` original\n        group by hour,page_id\n    )\n)\nSELECT\n    source.comment,\n    source.hour,\n    source.inbox,\n    source.new_customer,\n    source.new_customer_from_inbox,\n    source.old_order_count,\n    source.order_count,\n    source.total,\n    source.page_id,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_pancake__users": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_pancake__users", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/stg_pancake__users.sql", "original_file_path": "models/staging/pancake/stg_pancake__users.sql", "unique_id": "model.sado_analytics_services.stg_pancake__users", "fqn": ["sado_analytics_services", "staging", "pancake", "stg_pancake__users"], "alias": "stg_pancake__users", "checksum": {"name": "sha256", "checksum": "29e298789e5f3f209b2c16179cdeb810906b42fa8a0f6dc39bf2293b869e864f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_name": {"name": "user_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_email": {"name": "user_email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/pancake/stg_pancake__users.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.0319867, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_pancake__users`", "raw_code": "with source as (\n    {{ dbt_utils.deduplicate(\n    relation=source('pancake', 'users'),\n    partition_by='id',\n    order_by=\"_batched_at desc\",\n   )\n}}\n)\nselect \nsource.id as user_id, \nsource.name as user_name,\nsource.email as user_email\nfrom source", "language": "sql", "refs": [], "sources": [["pancake", "users"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/stg_pancake__users.sql", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_users__*` original\n        group by id\n    )\n)\nselect \nsource.id as user_id, \nsource.name as user_name,\nsource.email as user_email\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_pancake__conversations": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_pancake__conversations", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/base/base_pancake__conversations.sql", "original_file_path": "models/staging/pancake/base/base_pancake__conversations.sql", "unique_id": "model.sado_analytics_services.base_pancake__conversations", "fqn": ["sado_analytics_services", "staging", "pancake", "base", "base_pancake__conversations"], "alias": "base_pancake__conversations", "checksum": {"name": "sha256", "checksum": "3c6a6d77bb4bbfc71d699d1574d71db653ef2e1c11b51987ea69959204d565e2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["pancake", "hourly", "incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "inserted_at", "data_type": "datetime", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["pancake", "hourly", "incremental"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "partition_by": {"field": "inserted_at", "data_type": "datetime", "granularity": "day"}, "on_schema_change": "sync_all_columns", "tags": ["pancake", "hourly", "incremental"]}, "created_at": 1732268178.0342324, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_pancake__conversations`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    incremental_strategy = 'insert_overwrite',\n    partition_by = {\n        \"field\": \"inserted_at\",\n        \"data_type\": \"datetime\",\n        \"granularity\": \"day\"\n    },\n    on_schema_change = 'sync_all_columns',\n    tags = ['pancake','hourly','incremental']\n    )\n}}\n\n\nWITH source AS (\n    select * from \n    {{source('pancake', 'conversations')}}\n    where 1=1\n    {% if is_incremental() %}\n    and date(date_add(datetime(inserted_at), INTERVAL 7 HOUR)) in (\n        select \n        date(date_add(datetime(inserted_at), INTERVAL 7 HOUR)) \n        from {{source('pancake', 'conversations')}}\n      where parse_date('%Y%m%d', _TABLE_SUFFIX) >= date_sub(CURRENT_DATE(), interval 3 day)\n    )\n    {% endif %}\n),\n\ndeduplicate as (\n    {{ dbt_utils.deduplicate(relation = 'source', partition_by = 'id', order_by = \"_batched_at desc\",) }}\n)\n\nSELECT\n    source.id AS conversation_id,\n    date_add(datetime(source.inserted_at), INTERVAL 7 HOUR) AS inserted_at,\n    source.type,\n    customers.fb_id AS customer_fb_id,\n    customers.id AS customer_id,\n    source.last_sent_by.admin_id AS user_id,\n    source.last_sent_by.admin_name AS user_name,\n    source.last_sent_by.name AS page_name,\n    source.message_count,\n    source.post_id,\n    source.page_id,\n    date_add(\n        source.updated_at,\n        INTERVAL 7 HOUR\n    ) AS updated_at,\n    tags.id AS tag_id,\n    tags.text AS tag_value,\n    source.snippet,\n    ads.ad_id,\n    ads.post_id as ad_post_id,\n    ads.inserted_at AS ad_inserted_at,\n    source.tag_histories\nFROM\n    deduplicate as source\n    LEFT JOIN unnest(tags) tags\n    LEFT JOIN unnest(customers) customers\n    LEFT JOIN unnest(ads) ads\nWHERE\n    (\n        source.last_sent_by.name\n    ) LIKE '%5S%'", "language": "sql", "refs": [], "sources": [["pancake", "conversations"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.conversations"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/base/base_pancake__conversations.sql", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n    select * from \n    `agile-scheme-394814`.`Pancake`.`p_conversations__*`\n    where 1=1\n    \n    and date(date_add(datetime(inserted_at), INTERVAL 7 HOUR)) in (\n        select \n        date(date_add(datetime(inserted_at), INTERVAL 7 HOUR)) \n        from `agile-scheme-394814`.`Pancake`.`p_conversations__*`\n      where parse_date('%Y%m%d', _TABLE_SUFFIX) >= date_sub(CURRENT_DATE(), interval 3 day)\n    )\n    \n),\n\ndeduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by id\n    )\n)\n\nSELECT\n    source.id AS conversation_id,\n    date_add(datetime(source.inserted_at), INTERVAL 7 HOUR) AS inserted_at,\n    source.type,\n    customers.fb_id AS customer_fb_id,\n    customers.id AS customer_id,\n    source.last_sent_by.admin_id AS user_id,\n    source.last_sent_by.admin_name AS user_name,\n    source.last_sent_by.name AS page_name,\n    source.message_count,\n    source.post_id,\n    source.page_id,\n    date_add(\n        source.updated_at,\n        INTERVAL 7 HOUR\n    ) AS updated_at,\n    tags.id AS tag_id,\n    tags.text AS tag_value,\n    source.snippet,\n    ads.ad_id,\n    ads.post_id as ad_post_id,\n    ads.inserted_at AS ad_inserted_at,\n    source.tag_histories\nFROM\n    deduplicate as source\n    LEFT JOIN unnest(tags) tags\n    LEFT JOIN unnest(customers) customers\n    LEFT JOIN unnest(ads) ads\nWHERE\n    (\n        source.last_sent_by.name\n    ) LIKE '%5S%'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_pancake__posts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_pancake__posts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/base/base_pancake__posts.sql", "original_file_path": "models/staging/pancake/base/base_pancake__posts.sql", "unique_id": "model.sado_analytics_services.base_pancake__posts", "fqn": ["sado_analytics_services", "staging", "pancake", "base", "base_pancake__posts"], "alias": "base_pancake__posts", "checksum": {"name": "sha256", "checksum": "ddfc5e8687205663b418a85721d5696d35f25cdd86f08c9a2465f5434afed2dd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268178.0426056, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_pancake__posts`", "raw_code": "WITH source AS (\n    {{ dbt_utils.deduplicate(relation = source('pancake', 'posts'), partition_by = 'id,page_id', order_by = \"_batched_at desc\",) }}\n)\nSELECT\nsource.is_dynamic_linked,\nsource.reactions,\nsource.like_count,\nsource.message,\nsource.delete_comment,\nsource.privacy,\nsource.rating_point,\nsource.type,\nsource.is_removed,\nsource.story_tags,\nsource.comment_count,\nsource.live_video_ended_time,\nsource.id as post_id,\nsource.admin_creator,\nsource.link,\ndate_add(source.inserted_at, interval 7 hour) inserted_at,\nsource.has_running_rules,\nsource.page_id,\nsource.recommendation_type,\nsource.sub_type,\ndate_add(source.updated_at, interval 7 hour) updated_at,\nsource.edit_history,\nsource.dynamic_post_id,\nsource.from,\nsource.is_mention,\nsource.reaction_count,\nsource.live_video_status,\nsource.story,\nsource.share_last_cursor,\nsource.phone_number_count,\nsource.status_type,\nsource.product_id,\nsource.is_visitor_post,\nsource.comments_mirroring_domain,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "posts"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.posts"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/base/base_pancake__posts.sql", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_posts__*` original\n        group by id,page_id\n    )\n)\nSELECT\nsource.is_dynamic_linked,\nsource.reactions,\nsource.like_count,\nsource.message,\nsource.delete_comment,\nsource.privacy,\nsource.rating_point,\nsource.type,\nsource.is_removed,\nsource.story_tags,\nsource.comment_count,\nsource.live_video_ended_time,\nsource.id as post_id,\nsource.admin_creator,\nsource.link,\ndate_add(source.inserted_at, interval 7 hour) inserted_at,\nsource.has_running_rules,\nsource.page_id,\nsource.recommendation_type,\nsource.sub_type,\ndate_add(source.updated_at, interval 7 hour) updated_at,\nsource.edit_history,\nsource.dynamic_post_id,\nsource.from,\nsource.is_mention,\nsource.reaction_count,\nsource.live_video_status,\nsource.story,\nsource.share_last_cursor,\nsource.phone_number_count,\nsource.status_type,\nsource.product_id,\nsource.is_visitor_post,\nsource.comments_mirroring_domain,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_pancake__customers": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_pancake__customers", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/pancake/base/base_pancake__customers.sql", "original_file_path": "models/staging/pancake/base/base_pancake__customers.sql", "unique_id": "model.sado_analytics_services.base_pancake__customers", "fqn": ["sado_analytics_services", "staging", "pancake", "base", "base_pancake__customers"], "alias": "base_pancake__customers", "checksum": {"name": "sha256", "checksum": "b8e9f0ba46b59ae362962bc7b66dec85175735c885228ded801142c2d934380c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268178.0491302, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_pancake__customers`", "raw_code": "WITH source AS (\n    {{ \n        dbt_utils.deduplicate(\n            relation = source('pancake', 'customers'), \n            partition_by = 'id, psid', \n            order_by = \"_batched_at desc\",) \n            }}\n)\nSELECT\n    source.id AS customer_id,\n    source.name AS customer_name,\n    source.gender,\n    date_add(\n        source.inserted_at,\n        INTERVAL 7 HOUR\n    ) inserted_at,\n    source.phone_numbers,\n    source.lives_in AS city,\n    source.psid AS customer_facebook_id,\n    source.recent_orders,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["pancake", "customers"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.pancake.customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/pancake/base/base_pancake__customers.sql", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Pancake`.`p_customers__*` original\n        group by id, psid\n    )\n)\nSELECT\n    source.id AS customer_id,\n    source.name AS customer_name,\n    source.gender,\n    date_add(\n        source.inserted_at,\n        INTERVAL 7 HOUR\n    ) inserted_at,\n    source.phone_numbers,\n    source.lives_in AS city,\n    source.psid AS customer_facebook_id,\n    source.recent_orders,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__manufacture_plan": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__manufacture_plan", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__manufacture_plan.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__manufacture_plan.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__manufacture_plan", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__manufacture_plan"], "alias": "stg_gsheet__manufacture_plan", "checksum": {"name": "sha256", "checksum": "f0e8f9022b320ad8ea4d037cafe4a7190b670a7b752a01b682bf2cb37ad682cb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"product_code": {"name": "product_code", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "vendor": {"name": "vendor", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "expected_deliver_date": {"name": "expected_deliver_date", "description": "", "meta": {}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "expected_deliver_amount": {"name": "expected_deliver_amount", "description": "", "meta": {}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "po_code": {"name": "po_code", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "plan_month": {"name": "plan_month", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/stg_gsheet__manufacture_plan.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.0655575, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__manufacture_plan`", "raw_code": "with source as (\n    {{\n        dbt_utils.deduplicate(\n        relation = source(\n            'gSheet',\n            'manufacture_plan'\n        ),\n        partition_by = \"json_value(data,'$.product_code'),json_value(data,'$.vendor'),json_value(data,'$.month'),json_value(data,'$.year')\",\n        order_by = \"_batched_at desc\",\n    )\n    }}\n\n)\n\n\nselect \n    json_value(data,'$.product_code') as product_code,\n    json_value(data,'$.original_code') as original_code,\n    nullif(json_value(data,'$.vendor'),'') as vendor,\n    coalesce(\n        SAFE.parse_date('%a %b %d %Y  00:00:00 GMT+0700 (Indochina Time)',json_value(data,\"$.expected_deliver_date\")),\n        SAFE.parse_date('%d/%m %Y',regexp_extract(json_value(data,\"$.expected_deliver_date\"), r'(\\d{2}/\\d{2})' )||\" \"|| json_value(data,'$.year') )\n     ) as expected_deliver_date,\n    safe_cast(json_value(data,\"$.expected_volumn\") as float64) expected_deliver_amount,\n    nullif(json_value(data,'$.po_code'),'') as po_code,\n    json_value(data,'$.year')||json_value(data,'$.month') as plan_month,\nfrom source", "language": "sql", "refs": [], "sources": [["gSheet", "manufacture_plan"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.gSheet.manufacture_plan"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__manufacture_plan.sql", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`GSheet`.`_ext_manufacture_plan__*` original\n        group by json_value(data,'$.product_code'),json_value(data,'$.vendor'),json_value(data,'$.month'),json_value(data,'$.year')\n    )\n\n)\n\n\nselect \n    json_value(data,'$.product_code') as product_code,\n    json_value(data,'$.original_code') as original_code,\n    nullif(json_value(data,'$.vendor'),'') as vendor,\n    coalesce(\n        SAFE.parse_date('%a %b %d %Y  00:00:00 GMT+0700 (Indochina Time)',json_value(data,\"$.expected_deliver_date\")),\n        SAFE.parse_date('%d/%m %Y',regexp_extract(json_value(data,\"$.expected_deliver_date\"), r'(\\d{2}/\\d{2})' )||\" \"|| json_value(data,'$.year') )\n     ) as expected_deliver_date,\n    safe_cast(json_value(data,\"$.expected_volumn\") as float64) expected_deliver_amount,\n    nullif(json_value(data,'$.po_code'),'') as po_code,\n    json_value(data,'$.year')||json_value(data,'$.month') as plan_month,\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__cs_calls": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__cs_calls", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__cs_calls.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__cs_calls.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__cs_calls", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__cs_calls"], "alias": "stg_gsheet__cs_calls", "checksum": {"name": "sha256", "checksum": "b59d3530b19deea5ccc80fed5e58b119392c1c36e46cbbd4b84919af325112b2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268178.0622683, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__cs_calls`", "raw_code": "with source as (\n  {{dbt_utils.deduplicate(\n    relation= source('gSheet', 'cs_calls'),\n    partition_by = \"json_value(data,'$.customer_phone'),json_value(data,'$.call_month')\",\n    order_by = \"_batched_at desc\"\n    )\n  }}\n),\n\nraw_ as (\nselect\n  json_value(data, '$.asm') as asm,\n  json_value(data, '$.branch_name') as branch_name,\n  parse_date('%Y-T%m',json_value(data, '$.call_month')) as call_month,\n  json_value(data, '$.customer_dob') as customer_dob,\n  json_value(data, '$.customer_gender') as customer_gender,\n  json_value(data, '$.customer_name') as customer_name,\n  regexp_replace(json_value(data, '$.customer_phone'),r'\\D',\"\") as customer_phone,\n  json_value(data, '$.customer_total_purchasing_value') as customer_total_purchasing_value,\n  json_value(data, '$.call_status') as call_status,\nfrom source\nwhere nullif(json_value(data, '$.branch_name'),'') is not null\n)\n\nselect * except(customer_phone),\ncase \n        when \n            length(customer_phone) = 9 and regexp_contains(customer_phone,r'^[1-9]') \n            then concat('0',customer_phone) \n        else \n            regexp_replace(customer_phone,r'^(84|840)','0')\n        end as customer_phone,\nfrom raw_\nwhere customer_phone is not null", "language": "sql", "refs": [], "sources": [["gSheet", "cs_calls"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.gSheet.cs_calls"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__cs_calls.sql", "compiled": true, "compiled_code": "with source as (\n  select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`GSheet`.`_ext_cscalls__*` original\n        group by json_value(data,'$.customer_phone'),json_value(data,'$.call_month')\n    )\n),\n\nraw_ as (\nselect\n  json_value(data, '$.asm') as asm,\n  json_value(data, '$.branch_name') as branch_name,\n  parse_date('%Y-T%m',json_value(data, '$.call_month')) as call_month,\n  json_value(data, '$.customer_dob') as customer_dob,\n  json_value(data, '$.customer_gender') as customer_gender,\n  json_value(data, '$.customer_name') as customer_name,\n  regexp_replace(json_value(data, '$.customer_phone'),r'\\D',\"\") as customer_phone,\n  json_value(data, '$.customer_total_purchasing_value') as customer_total_purchasing_value,\n  json_value(data, '$.call_status') as call_status,\nfrom source\nwhere nullif(json_value(data, '$.branch_name'),'') is not null\n)\n\nselect * except(customer_phone),\ncase \n        when \n            length(customer_phone) = 9 and regexp_contains(customer_phone,r'^[1-9]') \n            then concat('0',customer_phone) \n        else \n            regexp_replace(customer_phone,r'^(84|840)','0')\n        end as customer_phone,\nfrom raw_\nwhere customer_phone is not null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__facebook_budget": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__facebook_budget", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__facebook_budget.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__facebook_budget.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__facebook_budget", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__facebook_budget"], "alias": "stg_gsheet__facebook_budget", "checksum": {"name": "sha256", "checksum": "1bfa12d94754cbac9393f3e703e79aa112119d4b0f404f64b93c72eeccb6891d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["dimension", "table", "ignore"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["dimension", "table", "ignore"], "description": "", "columns": {"branch": {"name": "branch", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "budget_month": {"name": "budget_month", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "milestones": {"name": "milestones", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["dimension", "table", "ignore"]}, "created_at": 1732268181.049057, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__facebook_budget`", "raw_code": "{{ config(\n    materialized = 'table',\n    tags = ['dimension','table', 'ignore']\n) }}\n\n{%- set relation = source(\n    'gSheet',\n    'facebook_budget'\n) -%}\n{% set all_columns = adapter.get_columns_in_relation(relation) %}\n{% set targets ={ \"budget\" :\"ng\u00e2n s\u00e1ch\",\n\"sales_target\" :\"doanh s\u1ed1\",\n\"traffic_target\" :\"l\u01b0\u1ee3t kh\u00e1ch\",\n\"aov\" :'gttb/kh' } %}\n\nWITH source AS (\n\n    SELECT\n        *\n    EXCEPT(`ASM - Showroom`)\n    FROM\n        {{ source(\n            'gSheet',\n            'facebook_budget'\n        ) }}\n    WHERE\n        MONTH >= '2023-11-01' \n    qualify ROW_NUMBER() over (\n            PARTITION BY showroom,\n            MONTH\n            ORDER BY\n                _batched_at DESC\n        ) = 1\n),\nformated AS (\n    SELECT\n        CASE\n            WHEN source.showroom = '5S H\u1ea3i D\u01b0\u01a1ng' THEN '5S H\u1ea3i D\u01b0\u01a1ng 1'\n            WHEN source.showroom = '5S Th\u00e1i Nguy\u00ean 1' THEN '5S Th\u00e1i Nguy\u00ean'\n            WHEN source.showroom = '5S GO' THEN '5S Go Th\u00e1i B\u00ecnh'\n            WHEN source.showroom = '5S H\u00e0 T\u0129nh 1' THEN '5S H\u00e0 T\u0129nh'\n            WHEN source.showroom = '5S Th\u00e1i B\u00ecnh 1' THEN '5S Th\u00e1i b\u00ecnh 1'\n            ELSE source.showroom\n        END AS branch,\n        source.month AS budget_month,\n        {# source.target, #}\n        ARRAY_AGG(\n            STRUCT(\n                milestones.start,\n                milestones.end,\n                milestones.value,\n                regexp_extract(milestones.key,r'^(.*) -') AS milestone_name,\n                CASE\n                    LOWER(regexp_extract(milestones.key, r'- ([^()]+)$')) \n                    {% for key,value in targets.items() -%}\n                        WHEN '{{ value }}' THEN '{{ key }}'\n                    {% endfor -%}\n                END AS budget_type\n            )\n        ) AS milestones\n    FROM\n        source,\n        unnest(milestones) milestones \n        {{ dbt_utils.group_by(2) }}\n)\nSELECT\n    formated.*,\n    {# branch.branch_id, #}\n    {# branch.local_page, #}\n    {# branch.region_page #}\n    {# asm.new_ads_page as page,\n    asm.new_ads_pic AS pic,\n    #}\nFROM\n    formated {# LEFT JOIN {{ ref('dim__offline_stores') }} #}\n    {# branch #}\n    {# ON lower(formated.branch) = lower(branch.branch_name) #}", "language": "sql", "refs": [], "sources": [["gSheet", "facebook_budget"], ["gSheet", "facebook_budget"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.group_by"], "nodes": ["source.sado_analytics_services.gSheet.facebook_budget"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__facebook_budget.sql", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n    SELECT\n        *\n    EXCEPT(`ASM - Showroom`)\n    FROM\n        `agile-scheme-394814`.`GSheet`.`_ext_facebook_budget__*`\n    WHERE\n        MONTH >= '2023-11-01' \n    qualify ROW_NUMBER() over (\n            PARTITION BY showroom,\n            MONTH\n            ORDER BY\n                _batched_at DESC\n        ) = 1\n),\nformated AS (\n    SELECT\n        CASE\n            WHEN source.showroom = '5S H\u1ea3i D\u01b0\u01a1ng' THEN '5S H\u1ea3i D\u01b0\u01a1ng 1'\n            WHEN source.showroom = '5S Th\u00e1i Nguy\u00ean 1' THEN '5S Th\u00e1i Nguy\u00ean'\n            WHEN source.showroom = '5S GO' THEN '5S Go Th\u00e1i B\u00ecnh'\n            WHEN source.showroom = '5S H\u00e0 T\u0129nh 1' THEN '5S H\u00e0 T\u0129nh'\n            WHEN source.showroom = '5S Th\u00e1i B\u00ecnh 1' THEN '5S Th\u00e1i b\u00ecnh 1'\n            ELSE source.showroom\n        END AS branch,\n        source.month AS budget_month,\n        \n        ARRAY_AGG(\n            STRUCT(\n                milestones.start,\n                milestones.end,\n                milestones.value,\n                regexp_extract(milestones.key,r'^(.*) -') AS milestone_name,\n                CASE\n                    LOWER(regexp_extract(milestones.key, r'- ([^()]+)$')) \n                    WHEN 'ng\u00e2n s\u00e1ch' THEN 'budget'\n                    WHEN 'doanh s\u1ed1' THEN 'sales_target'\n                    WHEN 'l\u01b0\u1ee3t kh\u00e1ch' THEN 'traffic_target'\n                    WHEN 'gttb/kh' THEN 'aov'\n                    END AS budget_type\n            )\n        ) AS milestones\n    FROM\n        source,\n        unnest(milestones) milestones \n        group by 1,2\n)\nSELECT\n    formated.*,\n    \n    \n    \n    \nFROM\n    formated \n    \n    ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__construction": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__construction", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__construction.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__construction.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__construction", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__construction"], "alias": "stg_gsheet__construction", "checksum": {"name": "sha256", "checksum": "a631a51414f97fd8289d959c314b64b73ee84c331fd1fe161df7c85097efa7d3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"branch_name": {"name": "branch_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "asm": {"name": "asm", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "province": {"name": "province", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "review_start_date": {"name": "review_start_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "actual_start_contruction_date": {"name": "actual_start_contruction_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "paper_works": {"name": "paper_works", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "record", "constraints": [], "quote": true, "tags": []}, "procedure": {"name": "procedure", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "record", "constraints": [], "quote": true, "tags": []}, "setup_cost": {"name": "setup_cost", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "record", "constraints": [], "quote": true, "tags": []}, "project_id": {"name": "project_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/stg_gsheet__construction.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.0526354, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__construction`", "raw_code": "{%set timezone = 'Asia/Saigon'%}\n\n{% set paper_work_steps = {\n    \"constructing\":\"X\u00e2y d\u1ef1ng\",\n    \"electricity\":\"H\u1ec7 th\u1ed1ng \u0111i\u1ec7n/\u0110H\",\n    \"signboard\":\"Bi\u1ec3n b\u1ea3ng\",\n    \"interior\":\"N\u1ed9i th\u1ea5t\",\n    \"others\":\"Kh\u00e1c\",\n} %}\n\n\n{% set procedure_steps = {\n    \"site_review\":\"Kh\u1ea3o s\u00e1t m\u1eb7t b\u1eb1ng\",\n    \"construction_estimate\":\"D\u1ef1 to\u00e1n & PA Thi c\u00f4ng\",\n    \"start_construction\":\"B\u1eaft \u0111\u1ea7u thi c\u00f4ng\",\n    \"facility_transfer\":\"B\u00e0n giao\",\n    \"preliminary_acceptance_review\":\"Nghi\u1ec7m thu l\u1ea7n 1\",\n    \"defect_fix\":\"S\u1eeda ch\u1eefa l\u1ed7i (n\u1ebfu c\u00f3)\",\n    \"final_acceptance_review\":\"Nghi\u1ec7m thu cu\u1ed1i\",\n    \"post_transfer_review\":\"Feedback sau b\u00e0n giao\",\n} %}\n\nwith source as (\n    {{dbt_utils.deduplicate(\n        relation = source('gSheet','constructing'),\n        partition_by = \"json_value(data,'$.row_number')\",\n        order_by = \"_batched_at desc\"\n    )}}\n)\n\nSELECT\n    {{dbt_utils.generate_surrogate_key(\n        [\n            \"nullif(json_value(data,'$.row_number'),'')\" , \n            \"nullif(json_value(data,'$.branch_name'),'')\"\n            ]\n        )}} as project_id,\n\n    nullif(json_value(data,'$.branch_name'),'') as branch_name,\n    nullif(json_value(data,'$.asm'),'') as asm,\n    nullif(json_value(data,'$.created_at'),'') as created_at,\n    nullif(json_value(data,'$.province'),'') as province,\n    \"Thi c\u00f4ng\" as construction_type,\n\n    date(timestamp(nullif(json_value(data,'$.bd_info.review_start_date'),\"\")),'{{timezone}}') as review_start_date,\n    date(timestamp(nullif(json_value(data,'$.bd_info.actual_start_contruction_date'),\"\")),'{{timezone}}') as actual_start_contruction_date,\n\n    {# date(nullif(json_value(data,'$.bd_info.actual_start_contruction_date'),''),'{{timezone}}') as actual_start_contruction_date, #}\n    array(\n       select as struct\n       case {% for k,v in paper_work_steps.items() %}\n        when json_value(paper_works,'$.key') = '{{k}}' then '{{v}}'\n       {%endfor%} end as type,\n        date(timestamp(nullif(json_value(paper_works,'$.value.deadline'),\"\")),'{{timezone}}') as deadline,\n        date(timestamp(nullif(json_value(paper_works,'$.value.finish_date'),\"\")),'{{timezone}}') as finish_date,\n        json_value(paper_works,'$.value.step_flag') as step_flag,\n    from unnest({{var(\"json_transform_schema\")}}.json_transform(json_extract(data,'$.paper_works'))) as paper_works) as paper_works,\n    array(\n       select as struct\n       case {% for k,v in procedure_steps.items() %}\n        when json_value(procedure,'$.key') = '{{k}}' then '{{v}}'\n       {%endfor%} end as type,\n        date(timestamp(nullif(json_value(procedure,'$.value.deadline'),\"\")),'{{timezone}}') as deadline,\n        date(timestamp(nullif(json_value(procedure,'$.value.finish_date'),\"\")),'{{timezone}}') as finish_date,\n        json_value(procedure,'$.value.step_flag') as step_flag,\n        safe_cast(json_value(procedure,'$.value.step_num') as int64) as step_num,\n    from unnest({{var(\"json_transform_schema\")}}.json_transform(json_extract(data,'$.procedure'))) as procedure\n    where json_value(procedure,'$.key') not in ('review_notes','constructing_notes')\n    ) as procedure,\n    array(\n        select as struct\n            case {% for k,v in paper_work_steps.items() %}\n            when json_value(value_type,'$.key') = '{{k}}' then '{{v}}'\n            {%endfor%} else json_value(value_type,'$.key') end as cost_category,\n            sum(case when json_value(setup_cost,'$.key') ='actual' then safe_cast(json_value(value_type,'$.value') as int64) end)  as actual,\n            sum(case when json_value(setup_cost,'$.key') ='estimate' then safe_cast(json_value(value_type,'$.value') as int64) end) as estimate\n    from unnest({{var(\"json_transform_schema\")}}.json_transform(json_extract(data,'$.setup_cost'))) as setup_cost,\n    unnest({{var(\"json_transform_schema\")}}.json_transform(json_extract(setup_cost,'$.value'))) as value_type\n    where json_value(setup_cost,'$.key') not in ('description','flag','total_invest_ment')\n    group by case {% for k,v in paper_work_steps.items() %}\n            when json_value(value_type,'$.key') = '{{k}}' then '{{v}}'\n            {%endfor%} else json_value(value_type,'$.key') end\n    ) as setup_cost,\n\nFROM\n    {{ source('gSheet','constructing') }}\nWHERE\n    nullif(json_value(data,'$.row_num'),'') is not null", "language": "sql", "refs": [], "sources": [["gSheet", "constructing"], ["gSheet", "constructing"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate", "macro.dbt_utils.generate_surrogate_key"], "nodes": ["source.sado_analytics_services.gSheet.constructing"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__construction.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`GSheet`.`_ext_constructing_procedure` original\n        group by json_value(data,'$.row_number')\n    )\n)\n\nSELECT\n    to_hex(md5(cast(coalesce(cast(nullif(json_value(data,'$.row_number'),'') as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(nullif(json_value(data,'$.branch_name'),'') as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as project_id,\n\n    nullif(json_value(data,'$.branch_name'),'') as branch_name,\n    nullif(json_value(data,'$.asm'),'') as asm,\n    nullif(json_value(data,'$.created_at'),'') as created_at,\n    nullif(json_value(data,'$.province'),'') as province,\n    \"Thi c\u00f4ng\" as construction_type,\n\n    date(timestamp(nullif(json_value(data,'$.bd_info.review_start_date'),\"\")),'Asia/Saigon') as review_start_date,\n    date(timestamp(nullif(json_value(data,'$.bd_info.actual_start_contruction_date'),\"\")),'Asia/Saigon') as actual_start_contruction_date,\n\n    \n    array(\n       select as struct\n       case \n        when json_value(paper_works,'$.key') = 'constructing' then 'X\u00e2y d\u1ef1ng'\n       \n        when json_value(paper_works,'$.key') = 'electricity' then 'H\u1ec7 th\u1ed1ng \u0111i\u1ec7n/\u0110H'\n       \n        when json_value(paper_works,'$.key') = 'signboard' then 'Bi\u1ec3n b\u1ea3ng'\n       \n        when json_value(paper_works,'$.key') = 'interior' then 'N\u1ed9i th\u1ea5t'\n       \n        when json_value(paper_works,'$.key') = 'others' then 'Kh\u00e1c'\n        end as type,\n        date(timestamp(nullif(json_value(paper_works,'$.value.deadline'),\"\")),'Asia/Saigon') as deadline,\n        date(timestamp(nullif(json_value(paper_works,'$.value.finish_date'),\"\")),'Asia/Saigon') as finish_date,\n        json_value(paper_works,'$.value.step_flag') as step_flag,\n    from unnest(analytics.json_transform(json_extract(data,'$.paper_works'))) as paper_works) as paper_works,\n    array(\n       select as struct\n       case \n        when json_value(procedure,'$.key') = 'site_review' then 'Kh\u1ea3o s\u00e1t m\u1eb7t b\u1eb1ng'\n       \n        when json_value(procedure,'$.key') = 'construction_estimate' then 'D\u1ef1 to\u00e1n & PA Thi c\u00f4ng'\n       \n        when json_value(procedure,'$.key') = 'start_construction' then 'B\u1eaft \u0111\u1ea7u thi c\u00f4ng'\n       \n        when json_value(procedure,'$.key') = 'facility_transfer' then 'B\u00e0n giao'\n       \n        when json_value(procedure,'$.key') = 'preliminary_acceptance_review' then 'Nghi\u1ec7m thu l\u1ea7n 1'\n       \n        when json_value(procedure,'$.key') = 'defect_fix' then 'S\u1eeda ch\u1eefa l\u1ed7i (n\u1ebfu c\u00f3)'\n       \n        when json_value(procedure,'$.key') = 'final_acceptance_review' then 'Nghi\u1ec7m thu cu\u1ed1i'\n       \n        when json_value(procedure,'$.key') = 'post_transfer_review' then 'Feedback sau b\u00e0n giao'\n        end as type,\n        date(timestamp(nullif(json_value(procedure,'$.value.deadline'),\"\")),'Asia/Saigon') as deadline,\n        date(timestamp(nullif(json_value(procedure,'$.value.finish_date'),\"\")),'Asia/Saigon') as finish_date,\n        json_value(procedure,'$.value.step_flag') as step_flag,\n        safe_cast(json_value(procedure,'$.value.step_num') as int64) as step_num,\n    from unnest(analytics.json_transform(json_extract(data,'$.procedure'))) as procedure\n    where json_value(procedure,'$.key') not in ('review_notes','constructing_notes')\n    ) as procedure,\n    array(\n        select as struct\n            case \n            when json_value(value_type,'$.key') = 'constructing' then 'X\u00e2y d\u1ef1ng'\n            \n            when json_value(value_type,'$.key') = 'electricity' then 'H\u1ec7 th\u1ed1ng \u0111i\u1ec7n/\u0110H'\n            \n            when json_value(value_type,'$.key') = 'signboard' then 'Bi\u1ec3n b\u1ea3ng'\n            \n            when json_value(value_type,'$.key') = 'interior' then 'N\u1ed9i th\u1ea5t'\n            \n            when json_value(value_type,'$.key') = 'others' then 'Kh\u00e1c'\n             else json_value(value_type,'$.key') end as cost_category,\n            sum(case when json_value(setup_cost,'$.key') ='actual' then safe_cast(json_value(value_type,'$.value') as int64) end)  as actual,\n            sum(case when json_value(setup_cost,'$.key') ='estimate' then safe_cast(json_value(value_type,'$.value') as int64) end) as estimate\n    from unnest(analytics.json_transform(json_extract(data,'$.setup_cost'))) as setup_cost,\n    unnest(analytics.json_transform(json_extract(setup_cost,'$.value'))) as value_type\n    where json_value(setup_cost,'$.key') not in ('description','flag','total_invest_ment')\n    group by case \n            when json_value(value_type,'$.key') = 'constructing' then 'X\u00e2y d\u1ef1ng'\n            \n            when json_value(value_type,'$.key') = 'electricity' then 'H\u1ec7 th\u1ed1ng \u0111i\u1ec7n/\u0110H'\n            \n            when json_value(value_type,'$.key') = 'signboard' then 'Bi\u1ec3n b\u1ea3ng'\n            \n            when json_value(value_type,'$.key') = 'interior' then 'N\u1ed9i th\u1ea5t'\n            \n            when json_value(value_type,'$.key') = 'others' then 'Kh\u00e1c'\n             else json_value(value_type,'$.key') end\n    ) as setup_cost,\n\nFROM\n    `agile-scheme-394814`.`GSheet`.`_ext_constructing_procedure`\nWHERE\n    nullif(json_value(data,'$.row_num'),'') is not null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__contents": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__contents", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__contents.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__contents.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__contents", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__contents"], "alias": "stg_gsheet__contents", "checksum": {"name": "sha256", "checksum": "c6378f783f47000b8646b39ca03524e44021e287c8a95a6c95041acb4b236b36"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"event_name": {"name": "event_name", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "content_angle": {"name": "content_angle", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "promotion": {"name": "promotion", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "product": {"name": "product", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "headline": {"name": "headline", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "body": {"name": "body", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "pic": {"name": "pic", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "media_type": {"name": "media_type", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "approval_status": {"name": "approval_status", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "sheet_name": {"name": "sheet_name", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "content_code": {"name": "content_code", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": true, "tags": []}, "content_month": {"name": "content_month", "description": "", "meta": {}, "data_type": "date", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/stg_gsheet__contents.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.0731556, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__contents`", "raw_code": "with source as (\nselect \n    *, \n    parse_date('%Y%m%d',_TABLE_SUFFIX) as content_month\nfrom {{ source('gSheet', 'content') }}\nwhere approval_status = 'Posted'\n)\n\n{{dbt_utils.deduplicate(\n    relation='source',\n    partition_by='content_code',\n    order_by='_batched_at desc',\n)}}", "language": "sql", "refs": [], "sources": [["gSheet", "content"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.gSheet.content"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__contents.sql", "compiled": true, "compiled_code": "with source as (\nselect \n    *, \n    parse_date('%Y%m%d',_TABLE_SUFFIX) as content_month\nfrom `agile-scheme-394814`.`GSheet`.`_ext_content__*`\nwhere approval_status = 'Posted'\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by content_code\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__traffic": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__traffic", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__traffic.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__traffic.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__traffic", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__traffic"], "alias": "stg_gsheet__traffic", "checksum": {"name": "sha256", "checksum": "f7eae955907fec977e447d240bdc3bed10050ce6a70c41a4c51773460ce4458a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_name": {"name": "employee_name", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "traffic": {"name": "traffic", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_traffic": {"type": "sum", "label": "Total Traffic"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "working_hour": {"name": "working_hour", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_working_hour": {"type": "sum", "label": "Total Working Hour"}, "m_traffic_per_working_hour": {"type": "number", "label": "Traffic per Working Hour", "sql": "safe_divide(${m_total_traffic} , ${m_total_working_hour})", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/stg_gsheet__traffic.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.0560756, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__traffic`", "raw_code": "with source as (\n    select\n        safe.parse_date('%d/%m/%Y',json_value(data, '$.date')) as date,\n        json_value(data, '$.branch_name') as branch_name,\n        json_value(data, '$.employee_name') as employee_name,\n        safe_cast(replace(json_value(data,'$.traffic'),',','.') as float64) as traffic,\n        safe_cast(replace(json_value(data,'$.traffic'),',','.') as float64) as working_hour,\n        _batched_at \n    from {{ source('gSheet', 'traffic') }}\n    where nullif(json_value(data, '$.traffic'),'undefined') is not null\n        and nullif(json_value(data, '$.date'),'') is not null\n        )\n\n{{dbt_utils.deduplicate(\n    relation='source',\n    partition_by='date, branch_name, employee_name',\n    order_by='_batched_at desc'\n)}}", "language": "sql", "refs": [], "sources": [["gSheet", "traffic"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.gSheet.traffic"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__traffic.sql", "compiled": true, "compiled_code": "with source as (\n    select\n        safe.parse_date('%d/%m/%Y',json_value(data, '$.date')) as date,\n        json_value(data, '$.branch_name') as branch_name,\n        json_value(data, '$.employee_name') as employee_name,\n        safe_cast(replace(json_value(data,'$.traffic'),',','.') as float64) as traffic,\n        safe_cast(replace(json_value(data,'$.traffic'),',','.') as float64) as working_hour,\n        _batched_at \n    from `agile-scheme-394814`.`GSheet`.`_ext_traffic__*`\n    where nullif(json_value(data, '$.traffic'),'undefined') is not null\n        and nullif(json_value(data, '$.date'),'') is not null\n        )\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by date, branch_name, employee_name\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__maintainance": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__maintainance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__maintainance.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__maintainance.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__maintainance", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__maintainance"], "alias": "stg_gsheet__maintainance", "checksum": {"name": "sha256", "checksum": "7c1f92ceeb063f8d2acdaa2f7e51c615fbe4f21af568de47659f329ab002a793"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["table", "fact", "daily", "dimension"], "meta": {"joins": [{"join": "dim__branches", "sql_on": "${stg_gsheet__maintainance.branch_code} = ${dim__branches.branch_code}", "always": true}, {"join": "calendar", "sql_on": "${stg_gsheet__maintainance.created_at} = ${calendar.date}"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "daily", "dimension"], "description": "", "columns": {"created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}, "metrics": {"m_num_request": {"type": "count", "label": "Number of Requests", "round": 0}, "m_approved_request": {"type": "count", "label": "Number of Approved Requests", "filters": [{"maintainance_approval": "true"}]}, "m_rejected_request": {"type": "count", "label": "Number of Rejected Requests", "filters": [{"maintainance_approval": "!true"}]}, "m_finished_request": {"type": "count", "label": "Number of finished Requests", "filters": [{"actual_finish_date": "!null"}]}, "m_on_going_request": {"type": "count", "label": "Number of On Going Requests", "filters": [{"status": "null"}, {"maintainance_approval": "true"}]}, "m_meet_deadline_requests": {"type": "count", "label": "Number of Requests Meet Deadline", "filters": [{"status": "\u0110\u00fang Deadline"}, {"maintainance_approval": "true"}]}, "m_late_deadline_requests": {"type": "count", "label": "Number of Requests Late Deadline", "filters": [{"status": "Tr\u1ec5 Deadline"}, {"maintainance_approval": "true"}]}, "m_meet_deadline_rate": {"type": "number", "label": "Meet Deadline Rate", "format": "percent", "round": 2, "sql": "safe_divide(${m_meet_deadline_requests},${m_approved_request})"}, "m_late_deadline_rate": {"type": "number", "label": "Late Deadline Rate", "format": "percent", "round": 2, "sql": "safe_divide(${m_late_deadline_requests},${m_approved_request})"}}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "branch_code": {"name": "branch_code", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_branch_name": {"type": "string", "sql": "coalesce(${dim__branches.branch_name},${TABLE}.branch_code)", "label": "Branch Name"}}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "request_category": {"name": "request_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "request_sub_category": {"name": "request_sub_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "description": {"name": "description", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "related_documents": {"name": "related_documents", "description": "", "meta": {"dimension": {"type": "string", "urls": [{"name": "H\u00ecnh \u1ea3nh/Video", "url": "${TABLE}.related_documents"}]}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "priority": {"name": "priority", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "maintainance_approval": {"name": "maintainance_approval", "description": "", "meta": {"dimension": {"type": "boolean", "hidden": true}}, "data_type": "boolean", "constraints": [], "quote": true, "tags": []}, "execution_plan": {"name": "execution_plan", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "estimated_cost": {"name": "estimated_cost", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_estimated_cost": {"type": "sum", "label": "Estimated Cost", "compact": "thousands", "round": 0}}}, "data_type": "int64", "constraints": [], "quote": true, "tags": []}, "pic": {"name": "pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "duration": {"name": "duration", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "deadline": {"name": "deadline", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "actual_finish_date": {"name": "actual_finish_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "status": {"name": "status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "actual_cost": {"name": "actual_cost", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_actual_cost": {"type": "sum", "label": "Actual Cost", "compact": "thousands", "round": 0, "filters": [{"maintainance_approval": "true"}]}, "m_avg_cost": {"type": "average", "label": "Avg Cost", "compact": "thousands", "round": 0, "filters": [{"maintainance_approval": "true"}]}, "m_pct_over": {"type": "number", "label": "Over Estimated Rate", "format": "percent", "round": 2, "sql": "safe_divide(${m_actual_cost},${m_estimated_cost})"}}}, "data_type": "int64", "constraints": [], "quote": true, "tags": []}, "acceptance_date": {"name": "acceptance_date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "acceptance_state": {"name": "acceptance_state", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "requester_type": {"name": "requester_type", "description": "", "meta": {"dimension": {"type": "string", "label": "Nh\u00f3m y\u00eau c\u1ea7u"}}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "duration_to_finish": {"name": "duration_to_finish", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_days_to_finish": {"type": "average", "label": "Avg Days to Finish", "round": 0, "filters": [{"maintainance_approval": "true"}, {"status": ["\u0110\u00fang Deadline", "Tr\u1ec5 Deadline"]}]}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "dim__branches", "sql_on": "${stg_gsheet__maintainance.branch_code} = ${dim__branches.branch_code}", "always": true}, {"join": "calendar", "sql_on": "${stg_gsheet__maintainance.created_at} = ${calendar.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/stg_gsheet__maintainance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "meta": {"joins": [{"join": "dim__branches", "sql_on": "${stg_gsheet__maintainance.branch_code} = ${dim__branches.branch_code}", "always": true}, {"join": "calendar", "sql_on": "${stg_gsheet__maintainance.created_at} = ${calendar.date}"}]}, "tags": ["table", "fact", "daily", "dimension"]}, "created_at": 1732268181.0914633, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__maintainance`", "raw_code": "{{\n  config(\n    materialized = 'table',\n    tags = ['table', 'fact','daily','dimension']\n    )\n}}\n\n{%set default_duration = 7%}\n\nSELECT\n    date(created_at) created_at,\n    branch_code,\n    requested_category AS request_category,\n    request_sub_category,\n    description,\n    related_documents,\n    priority,\n    maintainance_approval,\n    execution_plan,\n    safe_cast(replace(estimated_cost,\",\",\"\") AS int64) AS estimated_cost,\n    pic,\n    coalesce(DURATION, {{default_duration}}) as duration,\n    coalesce(deadline, DATE_ADD(created_at, INTERVAL {{default_duration}} DAY)) AS deadline,\n    actual_finish_date,\n    case \n        when  actual_finish_date is null then \"\u0110ang th\u1ef1c hi\u1ec7n\"\n        when coalesce(actual_finish_date, CURRENT_DATE()) > deadline then \"Tr\u1ec5 Deadline\" \n        when actual_finish_date <= deadline then \"\u0110\u00fang Deadline\"\n    end as status,\n    safe_cast(replace(actual_cost,\",\",\"\") AS int64) AS actual_cost,\n    acceptance_date,\n    acceptance_state,\n    requester_type,\n    date_diff(actual_finish_date,created_at,day) as duration_to_finish,\nFROM\n    {{ source('gSheet','maintainance_sheet') }}\nWHERE\n    created_at >= '2024-01-01'", "language": "sql", "refs": [], "sources": [["gSheet", "maintainance_sheet"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.gSheet.maintainance_sheet"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__maintainance.sql", "compiled": true, "compiled_code": "\n\n\n\nSELECT\n    date(created_at) created_at,\n    branch_code,\n    requested_category AS request_category,\n    request_sub_category,\n    description,\n    related_documents,\n    priority,\n    maintainance_approval,\n    execution_plan,\n    safe_cast(replace(estimated_cost,\",\",\"\") AS int64) AS estimated_cost,\n    pic,\n    coalesce(DURATION, 7) as duration,\n    coalesce(deadline, DATE_ADD(created_at, INTERVAL 7 DAY)) AS deadline,\n    actual_finish_date,\n    case \n        when  actual_finish_date is null then \"\u0110ang th\u1ef1c hi\u1ec7n\"\n        when coalesce(actual_finish_date, CURRENT_DATE()) > deadline then \"Tr\u1ec5 Deadline\" \n        when actual_finish_date <= deadline then \"\u0110\u00fang Deadline\"\n    end as status,\n    safe_cast(replace(actual_cost,\",\",\"\") AS int64) AS actual_cost,\n    acceptance_date,\n    acceptance_state,\n    requester_type,\n    date_diff(actual_finish_date,created_at,day) as duration_to_finish,\nFROM\n    `agile-scheme-394814`.`GSheet`.`_ext_maintainance_sheet`\nWHERE\n    created_at >= '2024-01-01'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__pancake_tags": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__pancake_tags", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__pancake_tags.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__pancake_tags.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__pancake_tags", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__pancake_tags"], "alias": "stg_gsheet__pancake_tags", "checksum": {"name": "sha256", "checksum": "10949e5d145989a1695087123e391d534dbe51e07bada147dfc0beac28d78cd6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["gsheet", "dimension", "table", "pancake"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["gsheet", "dimension", "table", "pancake"], "description": "", "columns": {"tag_value": {"name": "tag_value", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["gsheet", "dimension", "table", "pancake"]}, "created_at": 1732268181.0497427, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__pancake_tags`", "raw_code": "{{ config(\n    materialized = 'table',\n    tags = ['gsheet','dimension','table', 'pancake']\n) }}\n\nSELECT\n    tag_value, category\nFROM\n    {{ source(\n        'gSheet',\n        \"_ext_pancake_tags\"\n    ) }}", "language": "sql", "refs": [], "sources": [["gSheet", "_ext_pancake_tags"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.gSheet._ext_pancake_tags"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__pancake_tags.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    tag_value, category\nFROM\n    `agile-scheme-394814`.`GSheet`.`_ext_pancake_tags`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_gsheet__asms": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__asms", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/gSheet/stg_gsheet__asms.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__asms.sql", "unique_id": "model.sado_analytics_services.stg_gsheet__asms", "fqn": ["sado_analytics_services", "staging", "gSheet", "stg_gsheet__asms"], "alias": "stg_gsheet__asms", "checksum": {"name": "sha256", "checksum": "ccee217e4f3caadea6cb2a9343272994484245fd859418c3a9909847338adf08"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["gsheet", "dimension", "table"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["gsheet", "dimension", "table"], "description": "", "columns": {"asm_name": {"name": "asm_name", "description": "The name of the Area Sales Manager", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "store_name": {"name": "store_name", "description": "The name of the store. The data is cleaned in this model to ensure consistency in the store names.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "The 'phone' column represents the phone number of the ASM", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "The email column contains the email addresses associated with ASM", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "local_page": {"name": "local_page", "description": "The local_page column contains the name for the local pages of each store.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "region_page": {"name": "region_page", "description": "The region_page column contains the name for the regional pages associated with each store. These pages provide information about the stores in a specific region, including regional promotions and events.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "pic": {"name": "pic", "description": "The 'pic' column represents the person in charge of advertising each store.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "opening_day": {"name": "opening_day", "description": "The 'opening_day' column represents the date when the store was opened. It is a date type column formatted as YYYY-MM-DD.", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "close_date": {"name": "close_date", "description": "The 'close_date' column represents the date when the store was closed. It is a date type column formatted as YYYY-MM-DD. If the store is still open, this field will be null.", "meta": {"dimension": {"type": "date"}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "region": {"name": "region", "description": "The 'region' column represents the geographical region where the store is located.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "The 'province' column represents the specific province within the region where the store is located.", "meta": {"dimension": {"type": "string"}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "region_code": {"name": "region_code", "description": "The 'region_code' column represents the unique code assigned to each region.", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "province_code": {"name": "province_code", "description": "The 'province_code' column represents the unique code assigned to each province. ", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "branch_code": {"name": "branch_code", "description": "The 'branch_code' column represents the unique code assigned to each store branch. This code is used for internal tracking and referencing purposes.", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/gSheet/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["gsheet", "dimension", "table"]}, "created_at": 1732268181.0476494, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__asms`", "raw_code": "{{ config(\n    materialized = 'table',\n    tags = ['gsheet','dimension','table']\n) }}\n\nSELECT\n    asm AS asm_name,\n    CASE\n        WHEN store_name = '5S Th\u00e1i B\u00ecnh 1' THEN '5S Th\u00e1i b\u00ecnh 1'\n        WHEN store_name LIKE '5S Thanh Ho\u00e1%' THEN REGEXP_REPLACE(\n            store_name,\n            'Thanh Ho\u00e1',\n            'Thanh H\u00f3a'\n        )\n        ELSE store_name\n    END AS store_name,\n    * except(store_name,asm)\nFROM\n    {{ source(\n        'gSheet',\n        'asm_list'\n    ) }}\nWHERE\n    asm <> \"ASM\"", "language": "sql", "refs": [], "sources": [["gSheet", "asm_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.gSheet.asm_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__asms.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    asm AS asm_name,\n    CASE\n        WHEN store_name = '5S Th\u00e1i B\u00ecnh 1' THEN '5S Th\u00e1i b\u00ecnh 1'\n        WHEN store_name LIKE '5S Thanh Ho\u00e1%' THEN REGEXP_REPLACE(\n            store_name,\n            'Thanh Ho\u00e1',\n            'Thanh H\u00f3a'\n        )\n        ELSE store_name\n    END AS store_name,\n    * except(store_name,asm)\nFROM\n    `agile-scheme-394814`.`GSheet`.`_ext_asm_list_2`\nWHERE\n    asm <> \"ASM\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__regioninsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__regioninsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__regioninsights.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__regioninsights.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__regioninsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__regioninsights"], "alias": "stg_facebookads__regioninsights", "checksum": {"name": "sha256", "checksum": "48be49f0fd19833a87647d919254cf1349b57b92ee59b11de22d93b5474d5d44"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adset_id": {"name": "adset_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region": {"name": "region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__regioninsights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.1046128, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__regioninsights`", "raw_code": "WITH source AS (\n    SELECT\n        safe_cast(account_id as string) account_id,\n        safe_cast(campaign_id as string) campaign_id,\n        date_start ,\n        region,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value\n    FROM\n        {{ ref('base_facebookAds__regionInsights') }}\n)\nSELECT\n    *\nFROM\n    source\n\nunion all \nselect \n    account_id ,\n    campaign_id,\n    date_start ,\n    region,\n    clicks,\n    impressions,\n    reach,\n    spend,\n        \n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n\nfrom {{ ref( \"stg_fb__region_demographic\") }}", "language": "sql", "refs": [{"name": "base_facebookAds__regionInsights", "package": null, "version": null}, {"name": "stg_fb__region_demographic", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_facebookAds__regionInsights", "model.fb.stg_fb__region_demographic"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__regioninsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        safe_cast(account_id as string) account_id,\n        safe_cast(campaign_id as string) campaign_id,\n        date_start ,\n        region,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__regionInsights`\n)\nSELECT\n    *\nFROM\n    source\n\nunion all \nselect \n    account_id ,\n    campaign_id,\n    date_start ,\n    region,\n    clicks,\n    impressions,\n    reach,\n    spend,\n        \n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_fb__region_demographic`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg__ad_product_categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg__ad_product_categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg__ad_product_categories.sql", "original_file_path": "models/staging/facebookAds/stg__ad_product_categories.sql", "unique_id": "model.sado_analytics_services.stg__ad_product_categories", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg__ad_product_categories"], "alias": "stg__ad_product_categories", "checksum": {"name": "sha256", "checksum": "1c28abe8defa4465b4865f9e8e3d3dc5dd3c33fbc203ce3827bab4eb7cdbae2e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"season": {"name": "season", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sub_category_name": {"name": "sub_category_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name": {"name": "category_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_group_code": {"name": "product_group_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_group": {"name": "product_group", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg__ad_product_categories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.1024425, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg__ad_product_categories`", "raw_code": "{{\n  config(\n    materialized = 'view',\n    )\n}}\n\nselect * from {{ ref('product_categories') }}", "language": "sql", "refs": [{"name": "product_categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["seed.sado_analytics_services.product_categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg__ad_product_categories.sql", "compiled": true, "compiled_code": "\n\nselect * from `agile-scheme-394814`.`dbt_prod`.`product_categories`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__accountinsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__accountinsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__accountinsights.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__accountinsights.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__accountinsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__accountinsights"], "alias": "stg_facebookads__accountinsights", "checksum": {"name": "sha256", "checksum": "f6849fe5551eb5d4166232e19d16df87860958756cfedd4bb997530f23fadab5"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__accountinsights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.1062558, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__accountinsights`", "raw_code": "WITH source AS (\n    SELECT\n        safe_cast(account_id as string) account_id,\n        date_start,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value,\n    FROM\n        {{ ref('base_facebookAds__accountInsights') }}\n)\nSELECT\n    *\nFROM\n    source\n\nunion all\nselect \n    account_id,\n    date_start,\n    clicks,\n    impressions,\n    reach,\n    spend,\n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n\nfrom {{ ref(\"stg_fb__account_insights\") }}\nwhere 1=1 \n{% if is_incremental() %}\n  and date_start >= date_add(current_date, INTERVAL -7 DAY)\n{% else %}\n  and date_start >= '2024-07-01'\n{% endif %}", "language": "sql", "refs": [{"name": "base_facebookAds__accountInsights", "package": null, "version": null}, {"name": "stg_fb__account_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.base_facebookAds__accountInsights", "model.fb.stg_fb__account_insights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__accountinsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        safe_cast(account_id as string) account_id,\n        date_start,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__accountInsights`\n)\nSELECT\n    *\nFROM\n    source\n\nunion all\nselect \n    account_id,\n    date_start,\n    clicks,\n    impressions,\n    reach,\n    spend,\n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_fb__account_insights`\nwhere 1=1 \n\n  and date_start >= '2024-07-01'\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__creatives": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__creatives", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__creatives.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__creatives.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__creatives", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__creatives"], "alias": "stg_facebookads__creatives", "checksum": {"name": "sha256", "checksum": "73a2aa1c8aba205a74cce0b4d348cf42bc5dcb15f3304019b1126afec68a4808"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"name": {"name": "name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "title": {"name": "title", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "body": {"name": "body", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_to_action_type": {"name": "call_to_action_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "thumbnailurl": {"name": "thumbnailurl", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__creatives.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.0983849, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__creatives`", "raw_code": "SELECT\n    COALESCE(\n        thumbnail_url,\n        image_url\n    ) as thumbnailUrl,\n    name,\n    regexp_extract (\n        body,\n        r\"^(.*)\\n\"\n    ) title,\n    body,\n    call_to_action_type,\nFROM\n    {{ ref('base_facebookAds__creatives') }}", "language": "sql", "refs": [{"name": "base_facebookAds__creatives", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_facebookAds__creatives"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__creatives.sql", "compiled": true, "compiled_code": "SELECT\n    COALESCE(\n        thumbnail_url,\n        image_url\n    ) as thumbnailUrl,\n    name,\n    regexp_extract (\n        body,\n        r\"^(.*)\\n\"\n    ) title,\n    body,\n    call_to_action_type,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__creatives`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__campaigns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__campaigns.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__campaigns.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__campaigns", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__campaigns"], "alias": "stg_facebookads__campaigns", "checksum": {"name": "sha256", "checksum": "338081a59354e90b16e4922febf0f9684065f566ec1101a17ee49504bd997ba7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["fb", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fb", "dimension", "view"], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_name": {"name": "account_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_start_date": {"name": "campaign_start_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_stop_date": {"name": "campaign_stop_date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "media_type": {"name": "media_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adset_name": {"name": "adset_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_name": {"name": "ad_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "convention_version_number": {"name": "convention_version_number", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "channel": {"name": "channel", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_location": {"name": "ad_location", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_location_layer": {"name": "ad_location_layer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_category": {"name": "campaign_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_name": {"name": "event_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_edge": {"name": "content_edge", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_pic": {"name": "ad_pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "audience_type": {"name": "audience_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "target_method": {"name": "target_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "original_audience_name": {"name": "original_audience_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "audience_demographic": {"name": "audience_demographic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "audience_region": {"name": "audience_region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "audience_source_name": {"name": "audience_source_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_code": {"name": "content_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__campaigns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["fb", "dimension", "view"]}, "created_at": 1732268181.1101208, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__campaigns`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fb','dimension','view']\n) }}\n\n{% set products_mapping ={ \"ABZ\" :[\"\u00e1o blazer\"],\n\"ACN\" :[\"\u00e1o ch\u1ed1ng n\u1eafng\",\"\u00e1o cn\"],\n\"AGB\" :[\"\u00e1o gi\u00f3 b\u1ed9\"],\n\"AGN\" :[\"\u00e1o gi\u1eef nhi\u1ec7t\"],\n\"AKB\" :[\"bomber\",\"akb\"],\n\"AKC\" :[\"\u00e1o phao\",\"phao\",\"akc\"],\n\"AKD\" :[\"\u00e1o kho\u00e1c da\"],\n\"AKG\" :[\"\u00e1o gi\u00f3\",\"akg\"],\n\"ALO\" :[\"\u00e1o len\"],\n\"ANB\" :[\"\u00e1o n\u1ec9 b\u1ed9\"],\n\"ANO\" :[\"\u00e1o n\u1ec9\",\"ani\",\"ano\"],\n\"APB\" :[\"\u00e1o b\u1ed9 polo\"],\n\"APC\" :[\"polo\",\"apc\"],\n\"APD\" :[\"polo d\u00e0i tay\"],\n\"APO\" :[\"\u00e1o thun\",\"thun n\u1ec9\"],\n\"ATS\" :[\"t-shirt\",\"tshirt\",\"shirt\",\"ats\"],\n\"ATT\" :[\"tanktop\",\"\u00e1o ba l\u1ed7\",\"abl\",\"att\"],\n\"AVB\" :[\"\u00e1o vest\",\"b\u1ed9 \u0111\u1ed3\"],\n\"BNI\" :[\"b\u1ed9 n\u1ec9\",\"bni\"],\n\"PKN\" :[\"ph\u1ee5 ki\u1ec7n\",\"s\u1ecbp\"],\n\"QBD\" :[\"jeans\",\"qbd\"],\n\"QDT\" :[\"qu\u1ea7n gi\u00f3 \",\"qdt\"],\n\"QGB\" :[\"qu\u1ea7n gi\u00f3 b\u1ed9\"],\n\"QKD\" :[\"kaki d\u00e0i\",\"qkd\"],\n\"QNB\" :[\"qu\u1ea7n n\u1ec9 b\u1ed9\"],\n\"QNI\" :[\"qu\u1ea7n n\u1ec9\",\"qni\"],\n\"QSC\" :[\"short casual\",\"qsc\"],\n\"QSG\" :[\"short gi\u00f3\",\"qsg\"],\n\"QSK\" :[\"short kk\",\"qsk\"],\n\"QST\" :[\"short tt\",\"short th\u1ec3 thao\",\"b\u1ed9 th\u1ec3 thao\",\"qst\",\"qsa\",\"short \u00e2u\"],\n\"QVE\" :[\"qu\u1ea7n vest\"],\n\"SMC\" :[\"smc\",\"s\u01a1 mi c\u1ed9c\"],\n\"SMD\" :[\"smd\",\"s\u01a1 mi d\u00e0i\"],} %}\n{% set compiled_products ={ \"thu \u0111\u00f4ng\" :[\"th h\u00e0ng \u0111\u00f4ng\",\"thu \u0111\u00f4ng\",\"\u0111\u00f4ng sang\",\"\u0111\u00f4ng th\"],\n\"xu\u00e2n h\u00e8\" :[\"th h\u00e0ng h\u00e8\",\"h\u00e8 th\"],\n\"quanh n\u0103m\" :[\"th quanh n\u0103m\",\"quanh n\u0103m th\"],} %}\n\n\n\n\nWITH \ncampaign_names as (\n    select \n    _batched_at, \n    safe_cast(account_id as string) account_id ,\n    safe_cast(campaign_id as string) campaign_id,\n    safe_cast(adset_id as string) adset_id ,\n    safe_cast(ad_id as string) ad_id ,\n    campaign_name, adset_name, ad_name\n    from {{ source(\"facebookAds\",\"p_AdsInsights__*\") }}\n    where date_start < '2024-07-01'\n    union all\n    select \n    cast(null as timestamp) as _batched_at, account_id, campaign_id, adset_id, ad_id, campaign_name, adset_name, ad_name\n    from {{ ref(\"dim_fb__campaigns\") }}\n),\ncurrent_campaign_name AS (\n\n    SELECT\n        DISTINCT account_id,\n        {# FIRST_VALUE (account_name) over  ad_window AS account_name, #}\n        FIRST_VALUE (campaign_name) over campaign_window AS campaign_name,\n        FIRST_VALUE (adset_name) over adset_window AS adset_name,\n        FIRST_VALUE (ad_name) over ad_window AS ad_name,\n        {# MIN(date_start) over campaign_window AS campaign_start_date, #}\n        {# MAX(date_start) over campaign_window AS campaign_stop_date, #}\n        campaign_id,\n        adset_id,\n        ad_id,\n        {{ dbt_utils.generate_surrogate_key(['account_id','campaign_id','adset_id','ad_id']) }} AS ad_key,\n    FROM\n        campaign_names\n        window campaign_window AS (\n            PARTITION BY campaign_id\n            ORDER BY\n                _batched_at DESC rows BETWEEN unbounded preceding\n                AND unbounded following\n        ),\n        adset_window AS (\n            PARTITION BY campaign_id,\n            adset_id\n            ORDER BY\n                _batched_at DESC rows BETWEEN unbounded preceding\n                AND unbounded following\n        ),\n        ad_window AS (\n            PARTITION BY campaign_id,\n            adset_id,\n            ad_id\n            ORDER BY\n                _batched_at DESC rows BETWEEN unbounded preceding\n                AND unbounded following\n        ) \n        {# account_window as (partition by account_id order by _batched_at desc), #}\n        {# campaign_window as (partition by campaign_id) #}\n),\nconvention_version AS (\n    SELECT\n        *,\n        CASE\n            WHEN campaign_name LIKE '5S%' THEN 'B2406'\n            ELSE '2406'\n        END AS convention_version_number\n    FROM\n        current_campaign_name\n),\nnew_naming_convention AS (\n    SELECT\n        *,\n        {{ parse_naming_convention(\n            campaign_col = \"campaign_name\",\n            adset_col = \"adset_name\",\n            ad_col = \"ad_name\"\n        ) }}\n    FROM\n        convention_version\n    WHERE\n        convention_version.convention_version_number = '2406'\n\n),\nold_naming_convention AS (\n    SELECT\n        *,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){4}(.*?)_(?:.*?)$\") AS big_campaign,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){4}(.*?_.*?)_(?:.*?)$\") AS content_group,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){1}(.*?)_(?:.*?)$\") AS pic,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){6}(.*?)_(?:.*?)$\") AS promoted_productline,\n        regexp_extract (\n            campaign_name,\n            r\"^(.*?)_\"\n        ) AS page,\n        regexp_extract (LOWER(campaign_name), r\"(?:.*?_){7}(.*?)_(?:.*?)\") AS media_type,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){2}(.*?)_(?:.*?)$\") AS funnel,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){3}(.*?)_(?:.*?)$\") AS ad_type,\n    FROM\n        convention_version\n    WHERE\n        convention_version.convention_version_number = 'B2406'\n        ),\n    renaming_old_convention AS (\n            SELECT\n                o.account_id,\n                {# account_name, #}\n                o.campaign_name,\n                o.adset_name,\n                o.ad_name,\n                {# campaign_start_date, #}\n                {# campaign_stop_date, #}\n                o.campaign_id,\n                o.adset_id,\n                o.ad_id,\n                o.ad_key,\n                o.convention_version_number,\n                'fb' AS channel,\n                '5s' AS brand_name,\n                o.page AS ad_location,\n                CASE\n                    WHEN o.page IN (\n                        \"5SFTHA\",\n                        \"5SFTIE\",\n                        \"5SFTUN\",\n                        \"5SFTRA\",\n                        \"5SFT\",\n                        \"5SFG\",\n                        \"5SF\",\n                        \"5SFTUY\"\n                    ) THEN \"PIC Region\"\n                    ELSE \"Store\"\n                END AS ad_location_layer,\n                o.ad_type AS campaign_category,\n                o.big_campaign AS event_name,\n                CASE\n                {% for k, v in products_mapping.items() -%}\n                    WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"{{v|join('|')}}\") THEN 'sp {{k|lower()}}'\n                {% endfor -%}\n                {% for k, v in compiled_products.items() -%}\n                    WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"{{v|join('|')}}\") THEN 'th {{k|lower()}}'\n                {% endfor -%}END AS content_edge,\n                o.pic AS ad_pic,\n                CAST(NULL AS STRING) AS audience_type,\n                CAST(NULL AS STRING) AS target_method,\n                CAST(NULL AS STRING) AS original_audience_name,\n                CAST(NULL AS STRING) AS audience_demographic,\n                CAST(NULL AS STRING) AS audience_region,\n                o.funnel AS audience_source_name,\n                o.media_type,\n                o.content_group AS content_code\n            FROM\n                old_naming_convention o\n        )\n\n        SELECT\n            *\n        FROM\n            new_naming_convention\n        UNION ALL\n        SELECT\n            *\n        FROM\n            renaming_old_convention", "language": "sql", "refs": [{"name": "dim_fb__campaigns", "package": null, "version": null}], "sources": [["facebookAds", "p_AdsInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.generate_surrogate_key", "macro.sado_analytics_services.parse_naming_convention"], "nodes": ["source.sado_analytics_services.facebookAds.p_AdsInsights__*", "model.fb.dim_fb__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__campaigns.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH \ncampaign_names as (\n    select \n    _batched_at, \n    safe_cast(account_id as string) account_id ,\n    safe_cast(campaign_id as string) campaign_id,\n    safe_cast(adset_id as string) adset_id ,\n    safe_cast(ad_id as string) ad_id ,\n    campaign_name, adset_name, ad_name\n    from `agile-scheme-394814`.`Facebook`.`p_AdsInsights__*`\n    where date_start < '2024-07-01'\n    union all\n    select \n    cast(null as timestamp) as _batched_at, account_id, campaign_id, adset_id, ad_id, campaign_name, adset_name, ad_name\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`dim_fb__campaigns`\n),\ncurrent_campaign_name AS (\n\n    SELECT\n        DISTINCT account_id,\n        \n        FIRST_VALUE (campaign_name) over campaign_window AS campaign_name,\n        FIRST_VALUE (adset_name) over adset_window AS adset_name,\n        FIRST_VALUE (ad_name) over ad_window AS ad_name,\n        \n        \n        campaign_id,\n        adset_id,\n        ad_id,\n        to_hex(md5(cast(coalesce(cast(account_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(adset_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ad_id as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS ad_key,\n    FROM\n        campaign_names\n        window campaign_window AS (\n            PARTITION BY campaign_id\n            ORDER BY\n                _batched_at DESC rows BETWEEN unbounded preceding\n                AND unbounded following\n        ),\n        adset_window AS (\n            PARTITION BY campaign_id,\n            adset_id\n            ORDER BY\n                _batched_at DESC rows BETWEEN unbounded preceding\n                AND unbounded following\n        ),\n        ad_window AS (\n            PARTITION BY campaign_id,\n            adset_id,\n            ad_id\n            ORDER BY\n                _batched_at DESC rows BETWEEN unbounded preceding\n                AND unbounded following\n        ) \n        \n        \n),\nconvention_version AS (\n    SELECT\n        *,\n        CASE\n            WHEN campaign_name LIKE '5S%' THEN 'B2406'\n            ELSE '2406'\n        END AS convention_version_number\n    FROM\n        current_campaign_name\n),\nnew_naming_convention AS (\n    SELECT\n        *,\n        \n    \n    SPLIT(campaign_name,\"_\") [safe_offset(0)] AS channel,\n    SPLIT(campaign_name,\"_\") [safe_offset(1)] AS brand_name,\n    UPPER(SPLIT(campaign_name,\"_\") [safe_offset(2)]) AS ad_location,\n    CASE\n        length(SPLIT(campaign_name, \"_\") [safe_offset(2)])\n        WHEN 2 THEN \"Country\"\n        WHEN 3 THEN \"Province\"\n        WHEN 4 THEN \"Economic Region\"\n        WHEN 5 THEN \"Store\"\n    END AS ad_location_layer,\n    SPLIT(campaign_name,\"_\") [safe_offset(3)] AS campaign_category,\n    SPLIT(REGEXP_EXTRACT(campaign_name,r\"{(.*)}\"), \"_\") [safe_offset(0)] AS event_name,\n    REGEXP_REPLACE(REGEXP_EXTRACT(REGEXP_EXTRACT(campaign_name,r\"{(.*)}\"), r\"_(.*)\"),r\"_\",\" \") AS content_edge,\n    REGEXP_EXTRACT(campaign_name, r\"(?:.*)_(.*)$\") AS ad_pic,\n    \n    \n    SPLIT(adset_name ,\"_\") [safe_offset(0)] AS audience_type,\n    CASE LEFT(adset_name , 3)\n    WHEN 'lal' THEN 'Lookalike'\n    WHEN 'int' THEN 'Interest'\n    WHEN 'ret' THEN 'Retargeting'\n    WHEN 'mas' THEN 'Mass'\n    ELSE 'Unknown' END AS target_method,\n    SPLIT(adset_name ,\"_\") [safe_offset(1)] AS original_audience_name,\n    SPLIT(SPLIT(adset_name , \"_\") [safe_offset(1)], \"-\") [safe_offset(0)] AS audience_demographic,\n    SPLIT(SPLIT(adset_name , \"_\") [safe_offset(1)], \"-\") [safe_offset(1)] AS audience_region,\n    SPLIT(SPLIT(adset_name , \"_\") [safe_offset(1)], \"-\") [safe_offset(2)] AS audience_source_name,\n    \n    \n    case\n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'crs' then 'Carousel'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'vid' then 'Video'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'sgm' then 'Single Image'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'clt' then 'Collection'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'rls' then 'Reels'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'mix' then 'Mixed'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'str' then 'Story'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'pcr' then 'Product Catalog + Carousel'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'pcl' then 'Product Catalog + Collection'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'pcm' then 'Product Catalog + Mixed'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'liv' then 'Live Stream'\n    \n    when SPLIT(ad_name,\"_\") [safe_offset(0)] = 'txt' then 'Text'\n    end AS media_type,\n    regexp_extract(ad_name,r\"_(\\w+)\") AS content_code,\n    \n\n    FROM\n        convention_version\n    WHERE\n        convention_version.convention_version_number = '2406'\n\n),\nold_naming_convention AS (\n    SELECT\n        *,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){4}(.*?)_(?:.*?)$\") AS big_campaign,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){4}(.*?_.*?)_(?:.*?)$\") AS content_group,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){1}(.*?)_(?:.*?)$\") AS pic,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){6}(.*?)_(?:.*?)$\") AS promoted_productline,\n        regexp_extract (\n            campaign_name,\n            r\"^(.*?)_\"\n        ) AS page,\n        regexp_extract (LOWER(campaign_name), r\"(?:.*?_){7}(.*?)_(?:.*?)\") AS media_type,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){2}(.*?)_(?:.*?)$\") AS funnel,\n        regexp_extract (LOWER(campaign_name), r\"^(?:.*?_){3}(.*?)_(?:.*?)$\") AS ad_type,\n    FROM\n        convention_version\n    WHERE\n        convention_version.convention_version_number = 'B2406'\n        ),\n    renaming_old_convention AS (\n            SELECT\n                o.account_id,\n                \n                o.campaign_name,\n                o.adset_name,\n                o.ad_name,\n                \n                \n                o.campaign_id,\n                o.adset_id,\n                o.ad_id,\n                o.ad_key,\n                o.convention_version_number,\n                'fb' AS channel,\n                '5s' AS brand_name,\n                o.page AS ad_location,\n                CASE\n                    WHEN o.page IN (\n                        \"5SFTHA\",\n                        \"5SFTIE\",\n                        \"5SFTUN\",\n                        \"5SFTRA\",\n                        \"5SFT\",\n                        \"5SFG\",\n                        \"5SF\",\n                        \"5SFTUY\"\n                    ) THEN \"PIC Region\"\n                    ELSE \"Store\"\n                END AS ad_location_layer,\n                o.ad_type AS campaign_category,\n                o.big_campaign AS event_name,\n                CASE\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o blazer\") THEN 'sp abz'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o ch\u1ed1ng n\u1eafng|\u00e1o cn\") THEN 'sp acn'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o gi\u00f3 b\u1ed9\") THEN 'sp agb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o gi\u1eef nhi\u1ec7t\") THEN 'sp agn'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"bomber|akb\") THEN 'sp akb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o phao|phao|akc\") THEN 'sp akc'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o kho\u00e1c da\") THEN 'sp akd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o gi\u00f3|akg\") THEN 'sp akg'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o len\") THEN 'sp alo'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o n\u1ec9 b\u1ed9\") THEN 'sp anb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o n\u1ec9|ani|ano\") THEN 'sp ano'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o b\u1ed9 polo\") THEN 'sp apb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"polo|apc\") THEN 'sp apc'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"polo d\u00e0i tay\") THEN 'sp apd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o thun|thun n\u1ec9\") THEN 'sp apo'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"t-shirt|tshirt|shirt|ats\") THEN 'sp ats'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"tanktop|\u00e1o ba l\u1ed7|abl|att\") THEN 'sp att'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"\u00e1o vest|b\u1ed9 \u0111\u1ed3\") THEN 'sp avb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"b\u1ed9 n\u1ec9|bni\") THEN 'sp bni'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"ph\u1ee5 ki\u1ec7n|s\u1ecbp\") THEN 'sp pkn'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"jeans|qbd\") THEN 'sp qbd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n gi\u00f3 |qdt\") THEN 'sp qdt'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n gi\u00f3 b\u1ed9\") THEN 'sp qgb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"kaki d\u00e0i|qkd\") THEN 'sp qkd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n n\u1ec9 b\u1ed9\") THEN 'sp qnb'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n n\u1ec9|qni\") THEN 'sp qni'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"short casual|qsc\") THEN 'sp qsc'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"short gi\u00f3|qsg\") THEN 'sp qsg'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"short kk|qsk\") THEN 'sp qsk'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"short tt|short th\u1ec3 thao|b\u1ed9 th\u1ec3 thao|qst|qsa|short \u00e2u\") THEN 'sp qst'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"qu\u1ea7n vest\") THEN 'sp qve'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"smc|s\u01a1 mi c\u1ed9c\") THEN 'sp smc'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"smd|s\u01a1 mi d\u00e0i\") THEN 'sp smd'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"th h\u00e0ng \u0111\u00f4ng|thu \u0111\u00f4ng|\u0111\u00f4ng sang|\u0111\u00f4ng th\") THEN 'th thu \u0111\u00f4ng'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"th h\u00e0ng h\u00e8|h\u00e8 th\") THEN 'th xu\u00e2n h\u00e8'\n                WHEN regexp_contains(CONCAT(o.promoted_productline, o.content_group), r\"th quanh n\u0103m|quanh n\u0103m th\") THEN 'th quanh n\u0103m'\n                END AS content_edge,\n                o.pic AS ad_pic,\n                CAST(NULL AS STRING) AS audience_type,\n                CAST(NULL AS STRING) AS target_method,\n                CAST(NULL AS STRING) AS original_audience_name,\n                CAST(NULL AS STRING) AS audience_demographic,\n                CAST(NULL AS STRING) AS audience_region,\n                o.funnel AS audience_source_name,\n                o.media_type,\n                o.content_group AS content_code\n            FROM\n                old_naming_convention o\n        )\n\n        SELECT\n            *\n        FROM\n            new_naming_convention\n        UNION ALL\n        SELECT\n            *\n        FROM\n            renaming_old_convention", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__audienceinsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__audienceinsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__audienceinsights.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__audienceinsights.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__audienceinsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__audienceinsights"], "alias": "stg_facebookads__audienceinsights", "checksum": {"name": "sha256", "checksum": "0beee66b73e3ebc63496c35bb3060500813287554cba140abc5f70dca68eefc1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adset_id": {"name": "adset_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "age": {"name": "age", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__audienceinsights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.112051, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__audienceinsights`", "raw_code": "WITH source AS (\n    SELECT\n        safe_cast(account_id as string) account_id,\n        safe_cast(campaign_id as string) campaign_id ,\n        date_start ,\n        age,\n        gender,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value\n    FROM\n        {{ ref('base_facebookAds__audienceInsights') }}\n)\nSELECT\n    *\nFROM\n    source\n\n\nunion all\n\nselect \n    account_id ,\n    campaign_id ,\n    date_start ,\n    age,\n    gender,\n    clicks,\n    impressions,\n    reach,\n    spend,\n\n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n    \nfrom {{ ref(\"stg_fb__age_gender_demographic\") }}", "language": "sql", "refs": [{"name": "base_facebookAds__audienceInsights", "package": null, "version": null}, {"name": "stg_fb__age_gender_demographic", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_facebookAds__audienceInsights", "model.fb.stg_fb__age_gender_demographic"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__audienceinsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        safe_cast(account_id as string) account_id,\n        safe_cast(campaign_id as string) campaign_id ,\n        date_start ,\n        age,\n        gender,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`base_facebookAds__audienceInsights`\n)\nSELECT\n    *\nFROM\n    source\n\n\nunion all\n\nselect \n    account_id ,\n    campaign_id ,\n    date_start ,\n    age,\n    gender,\n    clicks,\n    impressions,\n    reach,\n    spend,\n\n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n    \nfrom `agile-scheme-394814`.`dbt_prod`.`stg_fb__age_gender_demographic`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_facebookads__adsinsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__adsinsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__adsinsights.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__adsinsights.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__adsinsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__adsinsights"], "alias": "stg_facebookads__adsinsights", "checksum": {"name": "sha256", "checksum": "9e8c5fc9d4ec42b80459ff35514fbba70256b735881fc50eed72981173d4510c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "fact"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "fact"], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adset_id": {"name": "adset_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase": {"name": "meta_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase_value": {"name": "meta_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_key": {"name": "ad_key", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__adsinsights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "fact"]}, "created_at": 1732268181.1004055, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__adsinsights`", "raw_code": "{{\n  config(\n    materialized = 'incremental',\n    partition_by = {\"field\": \"date_start\", \"data_type\": \"date\", \"granularity\": \"day\"},\n    incremental_strategy = 'insert_overwrite',\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'hourly','fact']\n    )\n}}\n\n\nWITH source AS (\n\n    select * from {{source(\n            'facebookAds',\n            'p_AdsInsights__*'\n        )}}\n          where 1=1\n          and date_start <'2024-07-01'\n        {% if is_incremental() %}\n          and date_start >= date_add(current_date, INTERVAL -7 DAY)\n        {% endif %}\n    \n),\ndeduplicate as ({{ dbt_utils.deduplicate(\n        relation = \"source\",\n        partition_by = 'account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start',\n        order_by = \"_batched_at desc\",\n    ) }})\nSELECT\n        safe_cast(account_id as string) account_id ,\n        safe_cast(campaign_id as string) campaign_id,\n        safe_cast(adset_id as string) adset_id ,\n        safe_cast(ad_id as string) ad_id ,\n        {{dbt_utils.generate_surrogate_key(['account_id','campaign_id','adset_id','ad_id'])}} as ad_key,\n        date_start ,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value\n    FROM\n        deduplicate\n\nunion all\nselect \n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    {{dbt_utils.generate_surrogate_key(['account_id','campaign_id','adset_id','ad_id'])}} as ad_key,\n    date_start,\n    clicks,\n    impressions,\n    reach,\n    spend,\n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n\nfrom {{ ref(\"stg_fb__ad_insights\") }}\nwhere 1=1 \n{% if is_incremental() %}\n  and date_start >= date_add(current_date, INTERVAL -7 DAY)\n{% else %}\n  and date_start >= '2024-07-01'\n{% endif %}", "language": "sql", "refs": [{"name": "stg_fb__ad_insights", "package": null, "version": null}], "sources": [["facebookAds", "p_AdsInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.dbt_utils.deduplicate", "macro.dbt_utils.generate_surrogate_key"], "nodes": ["source.sado_analytics_services.facebookAds.p_AdsInsights__*", "model.fb.stg_fb__ad_insights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/stg_facebookads__adsinsights.sql", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n    select * from `agile-scheme-394814`.`Facebook`.`p_AdsInsights__*`\n          where 1=1\n          and date_start <'2024-07-01'\n        \n          and date_start >= date_add(current_date, INTERVAL -7 DAY)\n        \n    \n),\ndeduplicate as (select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start\n    ))\nSELECT\n        safe_cast(account_id as string) account_id ,\n        safe_cast(campaign_id as string) campaign_id,\n        safe_cast(adset_id as string) adset_id ,\n        safe_cast(ad_id as string) ad_id ,\n        to_hex(md5(cast(coalesce(cast(account_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(adset_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ad_id as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as ad_key,\n        date_start ,\n        clicks,\n        impressions,\n        reach,\n        spend,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'link_click'\n        ) AS link_click,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'post_engagement'\n        ) AS post_engagement,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.messaging_conversation_started_7d'\n        ) AS messaging_conversation_started_7d,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offline_conversion.purchase'\n        ) AS offline_conversion_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'offsite_conversion.fb_pixel_purchase'\n        ) AS pixel_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'onsite_conversion.purchase'\n        ) AS meta_purchase_value,\n        (\n            SELECT\n                actions.value\n            FROM\n                unnest (actions) actions\n            WHERE\n                actions.action_type = 'purchase'\n        ) AS purchase,\n        (\n            SELECT\n                action_values.value\n            FROM\n                unnest (action_values) action_values\n            WHERE\n                action_values.action_type = 'purchase'\n        ) AS purchase_value\n    FROM\n        deduplicate\n\nunion all\nselect \n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    to_hex(md5(cast(coalesce(cast(account_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(adset_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ad_id as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as ad_key,\n    date_start,\n    clicks,\n    impressions,\n    reach,\n    spend,\n    no__link_click,\n    no__post_engagement,\n    no__onsite_conversion__messaging_conversation_started_7d,\n\n    no__offline_conversion__purchase,\n    offline_conversion__purchase__value,\n\n    no__offsite_conversion__fb_pixel_purchase,\n    offsite_conversion__fb_pixel_purchase__value,\n\n    no__onsite_conversion__purchase,\n    onsite_conversion__purchase__value,\n\n    no__purchase,\n    purchase__value,\n\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_insights`\nwhere 1=1 \n\n  and date_start >= date_add(current_date, INTERVAL -7 DAY)\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_facebookAds__creatives": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__creatives", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__creatives.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__creatives.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__creatives", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__creatives"], "alias": "base_facebookAds__creatives", "checksum": {"name": "sha256", "checksum": "781b6356917991b696110352eaf9f826fc065ceed628cbbe28f14982f23c288f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268178.2018113, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__creatives`", "raw_code": "WITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'facebookAds',\n            'p_CreativesInsights__*'\n        ),\n        partition_by = 'account_id,\n            ad_id,\n            id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\nSELECT\n    account_id,\n    ad_id,\n    body,\n    image_url,\n    thumbnail_url,\n    call_to_action_type,\n    title,\n    name,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["facebookAds", "p_CreativesInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.facebookAds.p_CreativesInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/base/base_facebookAds__creatives.sql", "compiled": true, "compiled_code": "WITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook`.`p_CreativesInsights__*` original\n        group by account_id,\n            ad_id,\n            id\n    )\n)\nSELECT\n    account_id,\n    ad_id,\n    body,\n    image_url,\n    thumbnail_url,\n    call_to_action_type,\n    title,\n    name,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_facebookAds__accountInsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__accountInsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__accountInsights.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__accountInsights.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__accountInsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__accountInsights"], "alias": "base_facebookAds__accountInsights", "checksum": {"name": "sha256", "checksum": "f4aaa900c9e0594c4ccfa23998506525ba1ffb88e012125b1e4d3109c6c3c5de"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268178.2082343, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__accountInsights`", "raw_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            date_start\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_AccountInsights__*'\n        ) }}\n    where date_start <'2024-07-01'\n),\n\ndeduplicate AS (\n    {{ dbt_utils.deduplicate(\n        relation = \"source\",\n        partition_by = 'account_id',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\nSELECT\n    account_id,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["facebookAds", "p_AccountInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.facebookAds.p_AccountInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/base/base_facebookAds__accountInsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *,\n        ROW_NUMBER() over (\n            PARTITION BY account_id,\n            date_start\n            ORDER BY\n                _batched_at DESC\n        ) AS rn_,\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_AccountInsights__*`\n    where date_start <'2024-07-01'\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by account_id\n    )\n)\nSELECT\n    account_id,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source\nWHERE\n    rn_ = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_facebookAds__regionInsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__regionInsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__regionInsights.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__regionInsights.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__regionInsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__regionInsights"], "alias": "base_facebookAds__regionInsights", "checksum": {"name": "sha256", "checksum": "e0b2c6483ae5d53c179b3f8701e8bb9a5af17ac3f7b4f59837dde70579b08646"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268178.214845, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__regionInsights`", "raw_code": "WITH source AS (\n    SELECT\n        *\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_RegionInsights__*'\n        ) }}\n    WHERE\n        date_start < '2024-07-01'\n),\ndeduplicate AS (\n    {{ dbt_utils.deduplicate(\n        relation = \"source\",\n        partition_by = 'account_id, campaign_id, adset_id, ad_id, date_start, region',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    region,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["facebookAds", "p_RegionInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.facebookAds.p_RegionInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/base/base_facebookAds__regionInsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_RegionInsights__*`\n    WHERE\n        date_start < '2024-07-01'\n),\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by account_id, campaign_id, adset_id, ad_id, date_start, region\n    )\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    region,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.base_facebookAds__audienceInsights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__audienceInsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__audienceInsights.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__audienceInsights.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__audienceInsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__audienceInsights"], "alias": "base_facebookAds__audienceInsights", "checksum": {"name": "sha256", "checksum": "da46082babdbef749bda6ad4000a9e86ad75c9f64721495dab803bce954b3cc6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268178.2281823, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__audienceInsights`", "raw_code": "WITH source AS (\n    SELECT\n        *\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_AudienceInsights__*'\n        ) }}\n    WHERE\n        date_start < '2024-07-01'\n),\ndeduplicate AS (\n    {{ dbt_utils.deduplicate(\n        relation = \"source\",\n        partition_by = 'account_id, campaign_id, adset_id, ad_id, date_start, age, gender',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    age,\n    gender,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["facebookAds", "p_AudienceInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.facebookAds.p_AudienceInsights__*"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/facebookAds/base/base_facebookAds__audienceInsights.sql", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT\n        *\n    FROM\n        `agile-scheme-394814`.`Facebook`.`p_AudienceInsights__*`\n    WHERE\n        date_start < '2024-07-01'\n),\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by account_id, campaign_id, adset_id, ad_id, date_start, age, gender\n    )\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    age,\n    gender,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_tiktokads__adgroups": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_tiktokads__adgroups", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/tiktokAds/stg_tiktokads__adgroups.sql", "original_file_path": "models/staging/tiktokAds/stg_tiktokads__adgroups.sql", "unique_id": "model.sado_analytics_services.stg_tiktokads__adgroups", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "stg_tiktokads__adgroups"], "alias": "stg_tiktokads__adgroups", "checksum": {"name": "sha256", "checksum": "16e603c06348543c5b44638d7b923d3f451baa348325f4c0e1658092aa9b275a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "tiktok"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "tiktok"], "description": "The model represents ad groups data from TikTok. It includes various fields related to ad groups. The data is extracted from the Tiktok API", "columns": {"actions": {"name": "actions", "description": "A JSON array containing the actions associated with the ad group. Actions can include things like clicks, impressions, conversions, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "adgroup_app_profile_page_state": {"name": "adgroup_app_profile_page_state", "description": "A string indicating the state of the ad group's app profile page. This could be active, inactive, paused, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "adgroup_id": {"name": "adgroup_id", "description": "A unique string identifier for the ad group. This is used to uniquely identify each ad group within the TikTok Ads platform.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "adgroup_name": {"name": "adgroup_name", "description": "The name of the ad group. This is a string value that represents the name assigned to the ad group within the TikTok Ads platform.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "advertiser_id": {"name": "advertiser_id", "description": "The unique identifier of the advertiser. This is a string value that represents the unique ID assigned to the advertiser within the TikTok Ads platform.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "age_groups": {"name": "age_groups", "description": "The age groups targeted by the ad group. This is a JSON array that contains the age groups that the ad group is targeting. Each age group is represented as a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "app_download_url": {"name": "app_download_url", "description": "The URL where the application associated with the ad can be downloaded.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "app_id": {"name": "app_id", "description": "The unique identifier of the application associated with the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "app_type": {"name": "app_type", "description": "The type of the application associated with the ad. This could be a category or platform type.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "attribution_event_count": {"name": "attribution_event_count", "description": "This column represents the count of attribution events associated with the ad group. It is extracted from the 'attribution_event_count' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "audience_ids": {"name": "audience_ids", "description": "This column contains a JSON array of audience IDs targeted by the ad group. These IDs are extracted from the 'audience_ids' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "auto_targeting_enabled": {"name": "auto_targeting_enabled", "description": "This column is a boolean flag indicating whether auto-targeting is enabled for the ad group. It is extracted from the 'auto_targeting_enabled' field in the source data and cast to a boolean value.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "bid_display_mode": {"name": "bid_display_mode", "description": "The 'bid_display_mode' column represents the mode of display for the bid in the TikTok Ads platform. It is a string data type.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "bid_price": {"name": "bid_price", "description": "The 'bid_price' column represents the price of the bid for the ad group in the TikTok Ads platform. It is a float data type, allowing for decimal values.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "bid_type": {"name": "bid_type", "description": "The 'bid_type' column represents the type of bid for the ad group in the TikTok Ads platform. It is a string data type, indicating the specific bidding strategy used.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "billing_event": {"name": "billing_event", "description": "The billing_event column represents the event that triggers the billing process for the ad. It is a string data type.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "brand_safety_partner": {"name": "brand_safety_partner", "description": "The brand_safety_partner column represents the partner responsible for ensuring the brand's safety in the ad campaign. It is a string data type.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "brand_safety_type": {"name": "brand_safety_type", "description": "The brand_safety_type column represents the type of brand safety measures implemented in the ad campaign. It is a string data type.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "budget": {"name": "budget", "description": "The budget column represents the allocated budget for the ad group. It is a floating point number that indicates the amount of money set aside for the ad group's advertising efforts.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "budget_mode": {"name": "budget_mode", "description": "The budget_mode column is a string that indicates the mode of the budget. It specifies how the budget is distributed over time. For example, it could be 'daily' indicating the budget is distributed daily, or 'lifetime' indicating the budget is for the entire duration of the ad group.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The campaign_id column is a string that uniquely identifies the campaign that the ad group belongs to. This ID is used to link the ad group to its parent campaign.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "The name of the advertising campaign associated with the ad group.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "catalog_id": {"name": "catalog_id", "description": "The unique identifier of the catalog associated with the ad group. Catalogs are collections of items that can be used in ads.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "category_exclusion_ids": {"name": "category_exclusion_ids", "description": "A JSON array of unique identifiers for categories that are excluded from the ad group. These categories represent types of content that the advertiser does not want their ads to appear alongside.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "category_id": {"name": "category_id", "description": "The unique identifier for the category of the ad group. This is a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "click_attribution_window": {"name": "click_attribution_window", "description": "The time window for attributing clicks to the ad group. This is a string value that represents a time duration.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "comment_disabled": {"name": "comment_disabled", "description": "A boolean flag indicating whether comments are disabled for the ad group. If true, comments are disabled; if false, comments are enabled.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "contextual_tag_ids": {"name": "contextual_tag_ids", "description": "This column contains JSON data of the IDs of the contextual tags associated with the ad group. Contextual tags are used to categorize the content of the ad group for better targeting and ad placement.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "conversion_bid_price": {"name": "conversion_bid_price", "description": "This column represents the bid price for conversions. It is the maximum amount that the advertiser is willing to pay for a conversion. The data type of this column is FLOAT64, which means it can contain decimal values.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "conversion_window": {"name": "conversion_window", "description": "This column represents the conversion window for the ad group. The conversion window is the period of time after an ad interaction during which a conversion, such as a purchase, is recorded.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "create_time": {"name": "create_time", "description": "The datetime when the ad group was created. It is extracted from the 'create_time' field in the source data.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "DATETIME", "constraints": [], "quote": null, "tags": []}, "creative_material_mode": {"name": "creative_material_mode", "description": "The mode of the creative material used in the ad group. It is extracted from the 'creative_material_mode' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "dayparting": {"name": "dayparting", "description": "The specific times of the day when the ad group is scheduled to run. It is extracted from the 'dayparting' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "deep_bid_type": {"name": "deep_bid_type", "description": "The 'deep_bid_type' column represents the type of deep bid used in the ad group. It is a string value that can provide insights into the bidding strategy used for the ad group.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "deep_cpa_bid": {"name": "deep_cpa_bid", "description": "The 'deep_cpa_bid' column represents the Cost Per Action (CPA) bid for the ad group. It is a float64 value that indicates the amount the advertiser is willing to pay for each action (like a click or conversion) that is taken on their ad.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "delivery_mode": {"name": "delivery_mode", "description": "The 'delivery_mode' column represents the mode of delivery for the ad group. It is a string value that can provide insights into how the ads are being delivered to the target audience.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "device_model_ids": {"name": "device_model_ids", "description": "This column contains JSON data of the device model IDs targeted by the ad group. Each ID represents a specific model of a device.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "device_price_ranges": {"name": "device_price_ranges", "description": "This column contains JSON data of the device price ranges targeted by the ad group. Each range represents a specific price category of devices.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "excluded_audience_ids": {"name": "excluded_audience_ids", "description": "This column contains JSON data of the audience IDs that are excluded from the ad group. Each ID represents a specific audience group that is not targeted by the ad group.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "excluded_custom_actions": {"name": "excluded_custom_actions", "description": "This column contains a JSON array of custom actions that are excluded from the ad group. Custom actions can be any specific user interactions that the advertiser wants to track, such as app installs, page views, or purchases.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "feed_type": {"name": "feed_type", "description": "This column contains a string that indicates the type of feed for the ad group. The feed type can be used to categorize the ad group based on the type of content it contains or the way it is delivered to users.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "frequency": {"name": "frequency", "description": "This column contains a string that indicates the frequency of the ad group. The frequency can be used to control how often the ads in the ad group are shown to users.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "frequency_schedule": {"name": "frequency_schedule", "description": "The 'frequency_schedule' column represents the schedule of frequency for the ad group. It is a string type column.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "The 'gender' column represents the target gender for the ad group. It is a string type column.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "identity_authorized_bc_id": {"name": "identity_authorized_bc_id", "description": "The 'identity_authorized_bc_id' column represents the authorized business center ID associated with the ad group. It is a string type column.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "identity_id": {"name": "identity_id", "description": "The unique identifier for the identity associated with the ad group. This is a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "identity_type": {"name": "identity_type", "description": "The type of identity associated with the ad group. This could be a user, a device, or another type of entity. This is a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "included_custom_actions": {"name": "included_custom_actions", "description": "A JSON array of custom actions that are included in the ad group. These actions could be things like clicks, views, or other types of engagement.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "interest_category_ids": {"name": "interest_category_ids", "description": "This column contains JSON data of the IDs of the interest categories targeted by the ad group. Interest categories are predefined groupings of users based on their interests and behaviors.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "interest_keyword_ids": {"name": "interest_keyword_ids", "description": "This column contains JSON data of the IDs of the interest keywords targeted by the ad group. Interest keywords are specific words or phrases that users might be interested in, and are used to target ads more precisely.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "inventory_filter_enabled": {"name": "inventory_filter_enabled", "description": "This column is a boolean value indicating whether the inventory filter is enabled for the ad group. When enabled, the ad group's ads will only be shown in the specified inventory types.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "ios14_quota_type": {"name": "ios14_quota_type", "description": "This column represents the type of quota set for iOS 14 users in the ad group. The value is a string.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "is_hfss": {"name": "is_hfss", "description": "This boolean column indicates whether the ad group is classified as High in Fat, Salt or Sugar (HFSS). If the value is true, the ad group is HFSS, otherwise it is not.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "is_new_structure": {"name": "is_new_structure", "description": "This boolean column indicates whether the ad group is using a new structure. If the value is true, the ad group is using a new structure, otherwise it is using an old structure.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "is_smart_performance_campaign": {"name": "is_smart_performance_campaign", "description": "A boolean field indicating whether the ad group is part of a smart performance campaign. If true, the ad group is part of a smart performance campaign.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "isp_ids": {"name": "isp_ids", "description": "A JSON array containing the IDs of the Internet Service Providers (ISPs) targeted by the ad group. Each ID corresponds to a specific ISP.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "keywords": {"name": "keywords", "description": "A string field containing the keywords associated with the ad group. These keywords are used to match the ad group with relevant user searches or content.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "languages": {"name": "languages", "description": "This column contains a JSON array of languages associated with the ad group. Each language is represented by a unique identifier.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "location_ids": {"name": "location_ids", "description": "This column contains a JSON array of location identifiers associated with the ad group. Each location is represented by a unique identifier.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "modify_time": {"name": "modify_time", "description": "This column contains the date and time when the ad group was last modified. The time is represented in the DATETIME format.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "DATETIME", "constraints": [], "quote": null, "tags": []}, "network_types": {"name": "network_types", "description": "A JSON array containing the types of networks where the adgroup's ads are displayed. This can include various types such as 'WIFI', '4G', '3G', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "next_day_retention": {"name": "next_day_retention", "description": "A string value representing the next day retention rate for the adgroup. This is a measure of how many users return to the app the day after installing it.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "operating_systems": {"name": "operating_systems", "description": "A JSON array containing the operating systems on which the adgroup's ads are displayed. This can include various systems such as 'iOS', 'Android', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "operation_status": {"name": "operation_status", "description": "The operation_status column represents the current status of the operation being performed on the adgroup. This could include statuses such as 'active', 'paused', 'deleted', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "optimization_event": {"name": "optimization_event", "description": "The optimization_event column represents the event that the adgroup is optimized for. This could include events such as 'click', 'conversion', 'impression', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "optimization_goal": {"name": "optimization_goal", "description": "The optimization_goal column represents the goal that the adgroup is trying to achieve through optimization. This could include goals such as 'reach', 'engagement', 'conversion', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "pacing": {"name": "pacing", "description": "The 'pacing' column represents the pacing of the ad group. It indicates how the ad group's budget is spent over time. This could be evenly distributed throughout the day or accelerated to spend as quickly as possible.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "pixel_id": {"name": "pixel_id", "description": "The 'pixel_id' column represents the unique identifier of the pixel associated with the ad group. Pixels are used to track user behavior on a website, which can be used for retargeting and conversion tracking.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "placement_type": {"name": "placement_type", "description": "The 'placement_type' column represents the type of placement for the ad group. This could be in the form of a news feed, story, in-article, etc. It indicates where the ad will be displayed.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "placements": {"name": "placements", "description": "A JSON array that contains the placements of the ad. This refers to where the ad will be shown on the platform.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "product_source": {"name": "product_source", "description": "A string that indicates the source of the product being advertised. This could be a specific store, website, or other source.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "promotion_type": {"name": "promotion_type", "description": "A string that indicates the type of promotion being used for the ad. This could include things like discounts, special offers, or other types of promotions.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "purchased_impression": {"name": "purchased_impression", "description": "This column represents the number of impressions that were purchased for the ad group. An impression is counted each time an ad is shown.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "purchased_reach": {"name": "purchased_reach", "description": "This column represents the total number of unique users who have seen the ad. It is a measure of the size of the audience that was reached by the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "rf_estimated_cpr": {"name": "rf_estimated_cpr", "description": "This column represents the estimated cost per reach. It is a measure of how much it costs to reach one unique user with the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "rf_estimated_frequency": {"name": "rf_estimated_frequency", "description": "This column represents the estimated frequency of the reach and frequency purchased type. It is a string type field.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "rf_purchased_type": {"name": "rf_purchased_type", "description": "This column represents the type of reach and frequency purchased. It is a string type field.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "schedule_end_time": {"name": "schedule_end_time", "description": "This column represents the end time of the ad schedule. It is a datetime type field.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "DATETIME", "constraints": [], "quote": null, "tags": []}, "schedule_infos": {"name": "schedule_infos", "description": "This column contains information about the schedule of the ad group. It includes details such as the start and end times, and the days of the week when the ad group is active.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "schedule_start_time": {"name": "schedule_start_time", "description": "This column represents the start time of the ad group's schedule. It is stored as a datetime value.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "DATETIME", "constraints": [], "quote": null, "tags": []}, "schedule_type": {"name": "schedule_type", "description": "This column indicates the type of schedule for the ad group. It could be a fixed schedule or a flexible one, depending on the advertiser's strategy.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "scheduled_budget": {"name": "scheduled_budget", "description": "The 'scheduled_budget' column represents the budget that has been scheduled for a particular ad group. The data type of this column is FLOAT64, which means it can contain floating point numbers.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "search_result_enabled": {"name": "search_result_enabled", "description": "The 'search_result_enabled' column is a boolean column that indicates whether the search result is enabled or not for a particular ad group. If the value is true, it means the search result is enabled, and if the value is false, it means the search result is not enabled.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "secondary_optimization_event": {"name": "secondary_optimization_event", "description": "The 'secondary_optimization_event' column represents the secondary event that is used for optimization. This is a string column and can contain various types of events that are used for optimization.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "secondary_status": {"name": "secondary_status", "description": "The secondary status of the ad group. This field provides additional information about the status of the ad group.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "share_disabled": {"name": "share_disabled", "description": "A boolean field indicating whether sharing is disabled for the ad group. If true, sharing is disabled.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "shopping_ads_type": {"name": "shopping_ads_type", "description": "The type of shopping ads used in the ad group. This field specifies the format of the shopping ads.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "skip_learning_phase": {"name": "skip_learning_phase", "description": "A boolean field indicating whether the learning phase of the ad group is skipped. If set to true, the ad group will not go through the learning phase and will start delivering ads immediately.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "smart_audience_enabled": {"name": "smart_audience_enabled", "description": "A string field that indicates whether the smart audience feature is enabled for the ad group. This feature allows the ad group to target users based on their behavior and interests.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "smart_interest_behavior_enabled": {"name": "smart_interest_behavior_enabled", "description": "A string field that indicates whether the smart interest behavior feature is enabled for the ad group. This feature allows the ad group to target users based on their interests and behaviors.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "spending_power": {"name": "spending_power", "description": "This column represents the spending power of the ad group. It is a string value that indicates the financial capacity of the ad group to spend on advertising.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "statistic_type": {"name": "statistic_type", "description": "This column represents the type of statistics used for the ad group. It is a string value that indicates the statistical method or approach used for analyzing the ad group's performance.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "store_authorized_bc_id": {"name": "store_authorized_bc_id", "description": "This column represents the ID of the authorized business center for the store. It is a string value that serves as a unique identifier for the business center that is authorized to manage the store.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "store_id": {"name": "store_id", "description": "The unique identifier of the store associated with the ad group. This is a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "video_download_disabled": {"name": "video_download_disabled", "description": "A boolean flag indicating whether the video download feature is disabled for the ad group. If true, users cannot download videos from the ad group.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "view_attribution_window": {"name": "view_attribution_window", "description": "The time window for attributing views to the ad group. This is a string value representing a time duration.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "zipcode_ids": {"name": "zipcode_ids", "description": "This column contains the JSON array of the IDs of the zip codes targeted by the ad group.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/tiktokAds/stg_tiktokads__adgroups.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "tiktok"]}, "created_at": 1732268181.1625493, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__adgroups`", "raw_code": "{{ config(\n    tags = ['view','tiktok']\n) }}\n\n\nWITH source AS (\n\n    SELECT\n        json_extract_array(data,'$.actions') AS actions,\n        json_value(data,'$.adgroup_app_profile_page_state') AS adgroup_app_profile_page_state,\n        json_value(data,'$.adgroup_id') AS adgroup_id,\n        json_value(data,'$.adgroup_name') AS adgroup_name,\n        json_value(data,'$.advertiser_id') AS advertiser_id,\n        json_extract_array(data,'$.age_groups') AS age_groups,\n        json_value(data,'$.app_download_url') AS app_download_url,\n        json_value(data,'$.app_id') AS app_id,\n        json_value(data,'$.app_type') AS app_type,\n        json_value(data,'$.attribution_event_count') AS attribution_event_count,\n        json_extract_array(data,'$.audience_ids') AS audience_ids,\n        safe_cast(json_value(data,'$.auto_targeting_enabled') as bool) AS auto_targeting_enabled,\n        json_value(data,'$.bid_display_mode') AS bid_display_mode,\n        safe_cast(json_value(data,'$.bid_price') as float64) AS bid_price,\n        json_value(data,'$.bid_type') AS bid_type,\n        json_value(data,'$.billing_event') AS billing_event,\n        json_value(data,'$.brand_safety_partner') AS brand_safety_partner,\n        json_value(data,'$.brand_safety_type') AS brand_safety_type,\n        safe_cast(json_value(data,'$.budget') as float64) AS budget,\n        json_value(data,'$.budget_mode') AS budget_mode,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.catalog_id') AS catalog_id,\n        json_extract_array(data,'$.category_exclusion_ids') AS category_exclusion_ids,\n        json_value(data,'$.category_id') AS category_id,\n        json_value(data,'$.click_attribution_window') AS click_attribution_window,\n        safe_cast(json_value(data,'$.comment_disabled') as bool) AS comment_disabled,\n        json_extract_array(data,'$.contextual_tag_ids') AS contextual_tag_ids,\n        safe_cast(json_value(data,'$.conversion_bid_price') as float64) AS conversion_bid_price,\n        json_value(data,'$.conversion_window') AS conversion_window,\n        datetime(json_value(data,'$.create_time')) AS create_time,\n        json_value(data,'$.creative_material_mode') AS creative_material_mode,\n        json_value(data,'$.dayparting') AS dayparting,\n        json_value(data,'$.deep_bid_type') AS deep_bid_type,\n        safe_cast(json_value(data,'$.deep_cpa_bid') as float64) AS deep_cpa_bid,\n        json_value(data,'$.delivery_mode') AS delivery_mode,\n        json_extract_array(data,'$.device_model_ids') AS device_model_ids,\n        json_extract_array(data,'$.device_price_ranges') AS device_price_ranges,\n        json_extract_array(data,'$.excluded_audience_ids') AS excluded_audience_ids,\n        json_extract_array(data,'$.excluded_custom_actions') AS excluded_custom_actions,\n        json_value(data,'$.feed_type') AS feed_type,\n        json_value(data,'$.frequency') AS frequency,\n        json_value(data,'$.frequency_schedule') AS frequency_schedule,\n        json_value(data,'$.gender') gender,\n        json_value(data,'$.identity_authorized_bc_id') AS identity_authorized_bc_id,\n        json_value(data,'$.identity_id') AS identity_id,\n        json_value(data,'$.identity_type') AS identity_type,\n        json_extract_array(data,'$.included_custom_actions') AS included_custom_actions,\n        json_extract_array(data,'$.interest_category_ids') AS interest_category_ids,\n        json_extract_array(data,'$.interest_keyword_ids') AS interest_keyword_ids,\n        safe_cast(json_value(data,'$.inventory_filter_enabled') as bool) AS inventory_filter_enabled,\n        json_value(data,'$.ios14_quota_type') AS ios14_quota_type,\n        safe_cast(json_value(data,'$.is_hfss') as bool) AS is_hfss,\n        safe_cast(json_value(data,'$.is_new_structure') as bool) AS is_new_structure,\n        safe_cast(json_value(data,'$.is_smart_performance_campaign') as bool) AS is_smart_performance_campaign,\n        json_extract_array(data,'$.isp_ids') AS isp_ids,\n        json_value(data,'$.keywords') AS keywords,\n        json_extract_array(data,'$.languages') AS languages,\n        json_extract_array(data,'$.location_ids') AS location_ids,\n        datetime(json_value(data,'$.modify_time')) AS modify_time,\n        json_extract_array(data,'$.network_types') AS network_types,\n        json_value(data,'$.next_day_retention') AS next_day_retention,\n        json_extract_array(data,'$.operating_systems') AS operating_systems,\n        json_value(data,'$.operation_status') AS operation_status,\n        json_value(data,'$.optimization_event') AS optimization_event,\n        json_value(data,'$.optimization_goal') AS optimization_goal,\n        json_value(data,'$.pacing') AS pacing,\n        json_value(data,'$.pixel_id') AS pixel_id,\n        json_value(data,'$.placement_type') AS placement_type,\n        json_extract_array(data,'$.placements') AS placements,\n        json_value(data,'$.product_source') AS product_source,\n        json_value(data,'$.promotion_type') AS promotion_type,\n        json_value(data,'$.purchased_impression') AS purchased_impression,\n        json_value(data,'$.purchased_reach') AS purchased_reach,\n        json_value(data,'$.rf_estimated_cpr') AS rf_estimated_cpr,\n        json_value(data,'$.rf_estimated_frequency') AS rf_estimated_frequency,\n        json_value(data,'$.rf_purchased_type') AS rf_purchased_type,\n        datetime(json_value(data,'$.schedule_end_time')) AS schedule_end_time,\n        json_value(data,'$.schedule_infos') AS schedule_infos,\n        datetime(json_value(data,'$.schedule_start_time')) AS schedule_start_time,\n        json_value(data,'$.schedule_type') AS schedule_type,\n        safe_cast(json_value(data,'$.scheduled_budget') as float64) AS scheduled_budget,\n        safe_cast(json_value(data,'$.search_result_enabled') as bool) AS search_result_enabled,\n        json_value(data,'$.secondary_optimization_event') AS secondary_optimization_event,\n        json_value(data,'$.secondary_status') AS secondary_status,\n        safe_cast(json_value(data,'$.share_disabled') as bool) AS share_disabled,\n        json_value(data,'$.shopping_ads_type') AS shopping_ads_type,\n        safe_cast(json_value(data,'$.skip_learning_phase') as bool) AS skip_learning_phase,\n        json_value(data,'$.smart_audience_enabled') AS smart_audience_enabled,\n        json_value(data,'$.smart_interest_behavior_enabled') AS smart_interest_behavior_enabled,\n        json_value(data,'$.spending_power') AS spending_power,\n        json_value(data,'$.statistic_type') AS statistic_type,\n        json_value(data,'$.store_authorized_bc_id') AS store_authorized_bc_id,\n        json_value(data,'$.store_id') AS store_id,\n        safe_cast(json_value(data,'$.video_download_disabled') as bool) AS video_download_disabled,\n        json_value(data,'$.view_attribution_window') AS view_attribution_window,\n        json_extract_array(data,'$.zipcode_ids') AS zipcode_ids,\n    FROM\n        {{ source('tiktok','adgroup') }}\n) \n\n{{ dbt_utils.deduplicate(\n    relation = \"source\",\n    partition_by = \"advertiser_id, campaign_id, adgroup_id\",\n    order_by = \"modify_time desc\"\n) }}", "language": "sql", "refs": [], "sources": [["tiktok", "adgroup"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.tiktok.adgroup"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/tiktokAds/stg_tiktokads__adgroups.sql", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n    SELECT\n        json_extract_array(data,'$.actions') AS actions,\n        json_value(data,'$.adgroup_app_profile_page_state') AS adgroup_app_profile_page_state,\n        json_value(data,'$.adgroup_id') AS adgroup_id,\n        json_value(data,'$.adgroup_name') AS adgroup_name,\n        json_value(data,'$.advertiser_id') AS advertiser_id,\n        json_extract_array(data,'$.age_groups') AS age_groups,\n        json_value(data,'$.app_download_url') AS app_download_url,\n        json_value(data,'$.app_id') AS app_id,\n        json_value(data,'$.app_type') AS app_type,\n        json_value(data,'$.attribution_event_count') AS attribution_event_count,\n        json_extract_array(data,'$.audience_ids') AS audience_ids,\n        safe_cast(json_value(data,'$.auto_targeting_enabled') as bool) AS auto_targeting_enabled,\n        json_value(data,'$.bid_display_mode') AS bid_display_mode,\n        safe_cast(json_value(data,'$.bid_price') as float64) AS bid_price,\n        json_value(data,'$.bid_type') AS bid_type,\n        json_value(data,'$.billing_event') AS billing_event,\n        json_value(data,'$.brand_safety_partner') AS brand_safety_partner,\n        json_value(data,'$.brand_safety_type') AS brand_safety_type,\n        safe_cast(json_value(data,'$.budget') as float64) AS budget,\n        json_value(data,'$.budget_mode') AS budget_mode,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.catalog_id') AS catalog_id,\n        json_extract_array(data,'$.category_exclusion_ids') AS category_exclusion_ids,\n        json_value(data,'$.category_id') AS category_id,\n        json_value(data,'$.click_attribution_window') AS click_attribution_window,\n        safe_cast(json_value(data,'$.comment_disabled') as bool) AS comment_disabled,\n        json_extract_array(data,'$.contextual_tag_ids') AS contextual_tag_ids,\n        safe_cast(json_value(data,'$.conversion_bid_price') as float64) AS conversion_bid_price,\n        json_value(data,'$.conversion_window') AS conversion_window,\n        datetime(json_value(data,'$.create_time')) AS create_time,\n        json_value(data,'$.creative_material_mode') AS creative_material_mode,\n        json_value(data,'$.dayparting') AS dayparting,\n        json_value(data,'$.deep_bid_type') AS deep_bid_type,\n        safe_cast(json_value(data,'$.deep_cpa_bid') as float64) AS deep_cpa_bid,\n        json_value(data,'$.delivery_mode') AS delivery_mode,\n        json_extract_array(data,'$.device_model_ids') AS device_model_ids,\n        json_extract_array(data,'$.device_price_ranges') AS device_price_ranges,\n        json_extract_array(data,'$.excluded_audience_ids') AS excluded_audience_ids,\n        json_extract_array(data,'$.excluded_custom_actions') AS excluded_custom_actions,\n        json_value(data,'$.feed_type') AS feed_type,\n        json_value(data,'$.frequency') AS frequency,\n        json_value(data,'$.frequency_schedule') AS frequency_schedule,\n        json_value(data,'$.gender') gender,\n        json_value(data,'$.identity_authorized_bc_id') AS identity_authorized_bc_id,\n        json_value(data,'$.identity_id') AS identity_id,\n        json_value(data,'$.identity_type') AS identity_type,\n        json_extract_array(data,'$.included_custom_actions') AS included_custom_actions,\n        json_extract_array(data,'$.interest_category_ids') AS interest_category_ids,\n        json_extract_array(data,'$.interest_keyword_ids') AS interest_keyword_ids,\n        safe_cast(json_value(data,'$.inventory_filter_enabled') as bool) AS inventory_filter_enabled,\n        json_value(data,'$.ios14_quota_type') AS ios14_quota_type,\n        safe_cast(json_value(data,'$.is_hfss') as bool) AS is_hfss,\n        safe_cast(json_value(data,'$.is_new_structure') as bool) AS is_new_structure,\n        safe_cast(json_value(data,'$.is_smart_performance_campaign') as bool) AS is_smart_performance_campaign,\n        json_extract_array(data,'$.isp_ids') AS isp_ids,\n        json_value(data,'$.keywords') AS keywords,\n        json_extract_array(data,'$.languages') AS languages,\n        json_extract_array(data,'$.location_ids') AS location_ids,\n        datetime(json_value(data,'$.modify_time')) AS modify_time,\n        json_extract_array(data,'$.network_types') AS network_types,\n        json_value(data,'$.next_day_retention') AS next_day_retention,\n        json_extract_array(data,'$.operating_systems') AS operating_systems,\n        json_value(data,'$.operation_status') AS operation_status,\n        json_value(data,'$.optimization_event') AS optimization_event,\n        json_value(data,'$.optimization_goal') AS optimization_goal,\n        json_value(data,'$.pacing') AS pacing,\n        json_value(data,'$.pixel_id') AS pixel_id,\n        json_value(data,'$.placement_type') AS placement_type,\n        json_extract_array(data,'$.placements') AS placements,\n        json_value(data,'$.product_source') AS product_source,\n        json_value(data,'$.promotion_type') AS promotion_type,\n        json_value(data,'$.purchased_impression') AS purchased_impression,\n        json_value(data,'$.purchased_reach') AS purchased_reach,\n        json_value(data,'$.rf_estimated_cpr') AS rf_estimated_cpr,\n        json_value(data,'$.rf_estimated_frequency') AS rf_estimated_frequency,\n        json_value(data,'$.rf_purchased_type') AS rf_purchased_type,\n        datetime(json_value(data,'$.schedule_end_time')) AS schedule_end_time,\n        json_value(data,'$.schedule_infos') AS schedule_infos,\n        datetime(json_value(data,'$.schedule_start_time')) AS schedule_start_time,\n        json_value(data,'$.schedule_type') AS schedule_type,\n        safe_cast(json_value(data,'$.scheduled_budget') as float64) AS scheduled_budget,\n        safe_cast(json_value(data,'$.search_result_enabled') as bool) AS search_result_enabled,\n        json_value(data,'$.secondary_optimization_event') AS secondary_optimization_event,\n        json_value(data,'$.secondary_status') AS secondary_status,\n        safe_cast(json_value(data,'$.share_disabled') as bool) AS share_disabled,\n        json_value(data,'$.shopping_ads_type') AS shopping_ads_type,\n        safe_cast(json_value(data,'$.skip_learning_phase') as bool) AS skip_learning_phase,\n        json_value(data,'$.smart_audience_enabled') AS smart_audience_enabled,\n        json_value(data,'$.smart_interest_behavior_enabled') AS smart_interest_behavior_enabled,\n        json_value(data,'$.spending_power') AS spending_power,\n        json_value(data,'$.statistic_type') AS statistic_type,\n        json_value(data,'$.store_authorized_bc_id') AS store_authorized_bc_id,\n        json_value(data,'$.store_id') AS store_id,\n        safe_cast(json_value(data,'$.video_download_disabled') as bool) AS video_download_disabled,\n        json_value(data,'$.view_attribution_window') AS view_attribution_window,\n        json_extract_array(data,'$.zipcode_ids') AS zipcode_ids,\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_adgroup__*`\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modify_time desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by advertiser_id, campaign_id, adgroup_id\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_tiktokads__age_gender_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_tiktokads__age_gender_insights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/tiktokAds/stg_tiktokads__age_gender_insights.sql", "original_file_path": "models/staging/tiktokAds/stg_tiktokads__age_gender_insights.sql", "unique_id": "model.sado_analytics_services.stg_tiktokads__age_gender_insights", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "stg_tiktokads__age_gender_insights"], "alias": "stg_tiktokads__age_gender_insights", "checksum": {"name": "sha256", "checksum": "dc0df038a0db00a1dab2c56d0e27508f520410a57d5505b28d3941dacbd7ffb9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "tiktok"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "tiktok"], "description": "The model provides insights into TikTok ads based on age and gender. ", "columns": {"ad_id": {"name": "ad_id", "description": "The unique identifier for each ad. This is a string value that is unique for each ad and is used to track the performance of individual ads.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "age": {"name": "age", "description": "The age group that the ad was shown to. This is a string value that represents the age group of the audience that the ad was shown to. It is used to understand the demographic reach of the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "The gender that the ad was shown to. This is a string value that represents the gender of the audience that the ad was shown to. It is used to understand the demographic reach of the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "adgroup_id": {"name": "adgroup_id", "description": "The unique identifier for the ad group. This is a string value.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "adgroup_name": {"name": "adgroup_name", "description": "The name of the ad group. This is a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "advertiser_id": {"name": "advertiser_id", "description": "The unique identifier for the advertiser. This is a string value.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "advertiser_name": {"name": "advertiser_name", "description": "The name of the advertiser. This is a string value that represents the name of the advertiser who is running the ad campaign.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The unique identifier for the ad campaign. This is a string value that uniquely identifies each ad campaign.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "The name of the ad campaign. This is a string value that represents the name of the ad campaign.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "placement_type": {"name": "placement_type", "description": "The 'placement_type' column represents the type of placement where the ad was displayed. This could be in the user's feed, in the search results, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "objective_type": {"name": "objective_type", "description": "The 'objective_type' column represents the objective of the ad campaign. This could be brand awareness, lead generation, conversions, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "average_video_play": {"name": "average_video_play", "description": "The 'average_video_play' column represents the average duration for which the ad video was played by the users. This is measured in seconds.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The 'clicks' column represents the total number of times users have clicked on the ad. This metric is crucial for understanding user engagement and the effectiveness of the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "comments": {"name": "comments", "description": "The 'comments' column indicates the total number of comments made by users on the ad. This can be used to gauge user interaction and sentiment towards the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "conversion": {"name": "conversion", "description": "The 'conversion' column represents the total number of successful conversions that have occurred as a result of users clicking on the ad. This is a key performance indicator for the ad's success in driving desired user actions.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "conversion_rate": {"name": "conversion_rate", "description": "The conversion rate column represents the percentage of users who have completed a desired action (conversion) after clicking on the ad. It is calculated by dividing the number of conversions by the total number of clicks and multiplying the result by 100.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "The cost per conversion column represents the average amount spent on an ad campaign for each conversion achieved. It is calculated by dividing the total cost of the campaign by the number of conversions.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_result": {"name": "cost_per_result", "description": "The cost per result column represents the average amount spent for each successful result achieved. The definition of a 'result' depends on the objective of the ad campaign, it could be a click, a conversion, or any other defined action.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cpc": {"name": "cpc", "description": "The 'cpc' column represents the Cost Per Click. It is the amount of money spent for each click in your TikTok advertising campaign. This is calculated by dividing the total cost of your clicks by the total number of clicks. This column is of FLOAT64 data type.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cpm": {"name": "cpm", "description": "The 'cpm' column represents the Cost Per Mille (Cost Per Thousand Impressions). It is the amount spent on an ad campaign, divided by Impressions, multiplied by 1000. This is a common metric used by the advertising industry to gauge the cost effectiveness and efficiency of an advertising campaign. This column is of FLOAT64 data type.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "ctr": {"name": "ctr", "description": "The 'ctr' column represents the Click Through Rate. It is the ratio of users who click on a specific link to the number of total users who view the ad, email, or page. It is commonly used to measure the success of an online advertising campaign. This column is of FLOAT64 data type.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "follows": {"name": "follows", "description": "The 'follows' column represents the total number of new followers gained as a result of the ad. It is a floating point number that is derived from the 'metrics.follows' field in the original JSON data.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "The 'impressions' column represents the total number of times the ad was shown. It is a floating point number that is derived from the 'metrics.impressions' field in the original JSON data.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "likes": {"name": "likes", "description": "The 'likes' column represents the total number of likes received by the ad. It is a floating point number that is derived from the 'metrics.likes' field in the original JSON data.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "profile_visits": {"name": "profile_visits", "description": "The 'profile_visits' column represents the number of times users have visited the profile page of the advertiser after seeing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "real_time_conversion": {"name": "real_time_conversion", "description": "The 'real_time_conversion' column indicates the number of conversions that have occurred in real-time after users have interacted with the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "result": {"name": "result", "description": "The 'result' column represents the total number of desired actions that were achieved by the ad. This could include actions such as clicks, likes, shares, etc.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "result_rate": {"name": "result_rate", "description": "The result rate column represents the ratio of results to impressions. It is calculated by dividing the number of results by the number of impressions and multiplying by 100. This metric is useful for understanding the effectiveness of an ad in achieving its objective.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "shares": {"name": "shares", "description": "The shares column represents the total number of times the ad was shared by users. This metric is useful for understanding the virality of an ad, as a higher number of shares typically indicates that the ad content resonated with the audience.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "The spend column represents the total amount of money spent on the ad campaign. This metric is useful for understanding the cost of the ad campaign and can be used to calculate other metrics such as cost per result or cost per conversion.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "video_views_p100": {"name": "video_views_p100", "description": "This column represents the number of times a video has been viewed to 100% of its length. It is a measure of complete engagement with the video content.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "video_views_p25": {"name": "video_views_p25", "description": "This column represents the number of times a video has been viewed to 25% of its length. It provides an insight into the initial engagement of the audience with the video content.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "video_views_p50": {"name": "video_views_p50", "description": "This column represents the number of times a video has been viewed to 50% of its length. It indicates the mid-level engagement of the audience with the video content.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "video_views_p75": {"name": "video_views_p75", "description": "This column represents the number of times a video has been viewed up to 75% of its length.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "video_watched_2s": {"name": "video_watched_2s", "description": "This column represents the number of times a video has been watched for at least 2 seconds.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "video_watched_6s": {"name": "video_watched_6s", "description": "This column represents the number of times a video has been watched for at least 6 seconds.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "The 'date' column represents the date when the ad metrics were recorded. It is derived from the 'stat_time_day' column in the source data, which is converted to a date format.", "meta": {"dimension": {"type": "date"}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/tiktokAds/stg_tiktokads__age_gender_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "tiktok"]}, "created_at": 1732268181.1793816, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__age_gender_insights`", "raw_code": "{{ config(\n    tags = ['view','tiktok']\n) }}\n\n{% set dimensions = [\"ad_id\", \"age\", \"gender\", \"stat_time_day\"] %}\n{% set metrics ={ \"string\" :[\"adgroup_id\", \"adgroup_name\", \"advertiser_id\", \"advertiser_name\",\"campaign_id\", \"campaign_name\",\"placement_type\",\"objective_type\",],\n\"float64\" :[\"average_video_play\", \"clicks\", \"comments\", \"conversion\", \"conversion_rate\", \"cost_per_conversion\", \"cost_per_result\", \"cpc\", \"cpm\", \"ctr\", \"follows\", \"impressions\", \"likes\", \"profile_visits\", \"real_time_conversion\", \"result\", \"result_rate\", \"shares\", \"spend\", \"video_views_p100\", \"video_views_p25\", \"video_views_p50\", \"video_views_p75\", \"video_watched_2s\", \"video_watched_6s\"] } %}\nWITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'tiktok',\n            'ad_age_gender'\n        ),\n        partition_by = \"JSON_VALUE(data, '$.dimensions.ad_id'),JSON_VALUE(data, '$.dimensions.stat_time_day'), JSON_VALUE(data, '$.dimensions.age'), JSON_VALUE(data, '$.dimensions.gender')\",\n        order_by = '_batched_at desc'\n    ) }}\n),\nunnested_keys AS (\n    SELECT\n        {% for dimension in dimensions -%}\n            json_value(\n                DATA,\n                '$.dimensions.{{dimension}}'\n            ) AS {{ dimension }},\n        {%- endfor %}\n\n        {%- for type,\n            metric_group in metrics.items() -%}\n            {%- for metric in metric_group -%}\n                safe_cast(json_value(DATA, '$.metrics.{{metric}}') AS {{ type }}) AS {{ metric }},\n            {% endfor %}\n        {%- endfor %}\n    FROM\n        source\n)\nSELECT\n    *\nEXCEPT(stat_time_day),\n    DATE(stat_time_day) AS date\nFROM\n    unnested_keys", "language": "sql", "refs": [], "sources": [["tiktok", "ad_age_gender"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.tiktok.ad_age_gender"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/tiktokAds/stg_tiktokads__age_gender_insights.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Tiktok`.`p_ad_age_gender_report__*` original\n        group by JSON_VALUE(data, '$.dimensions.ad_id'),JSON_VALUE(data, '$.dimensions.stat_time_day'), JSON_VALUE(data, '$.dimensions.age'), JSON_VALUE(data, '$.dimensions.gender')\n    )\n),\nunnested_keys AS (\n    SELECT\n        json_value(\n                DATA,\n                '$.dimensions.ad_id'\n            ) AS ad_id,json_value(\n                DATA,\n                '$.dimensions.age'\n            ) AS age,json_value(\n                DATA,\n                '$.dimensions.gender'\n            ) AS gender,json_value(\n                DATA,\n                '$.dimensions.stat_time_day'\n            ) AS stat_time_day,safe_cast(json_value(DATA, '$.metrics.adgroup_id') AS string) AS adgroup_id,\n            safe_cast(json_value(DATA, '$.metrics.adgroup_name') AS string) AS adgroup_name,\n            safe_cast(json_value(DATA, '$.metrics.advertiser_id') AS string) AS advertiser_id,\n            safe_cast(json_value(DATA, '$.metrics.advertiser_name') AS string) AS advertiser_name,\n            safe_cast(json_value(DATA, '$.metrics.campaign_id') AS string) AS campaign_id,\n            safe_cast(json_value(DATA, '$.metrics.campaign_name') AS string) AS campaign_name,\n            safe_cast(json_value(DATA, '$.metrics.placement_type') AS string) AS placement_type,\n            safe_cast(json_value(DATA, '$.metrics.objective_type') AS string) AS objective_type,\n            safe_cast(json_value(DATA, '$.metrics.average_video_play') AS float64) AS average_video_play,\n            safe_cast(json_value(DATA, '$.metrics.clicks') AS float64) AS clicks,\n            safe_cast(json_value(DATA, '$.metrics.comments') AS float64) AS comments,\n            safe_cast(json_value(DATA, '$.metrics.conversion') AS float64) AS conversion,\n            safe_cast(json_value(DATA, '$.metrics.conversion_rate') AS float64) AS conversion_rate,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_conversion') AS float64) AS cost_per_conversion,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_result') AS float64) AS cost_per_result,\n            safe_cast(json_value(DATA, '$.metrics.cpc') AS float64) AS cpc,\n            safe_cast(json_value(DATA, '$.metrics.cpm') AS float64) AS cpm,\n            safe_cast(json_value(DATA, '$.metrics.ctr') AS float64) AS ctr,\n            safe_cast(json_value(DATA, '$.metrics.follows') AS float64) AS follows,\n            safe_cast(json_value(DATA, '$.metrics.impressions') AS float64) AS impressions,\n            safe_cast(json_value(DATA, '$.metrics.likes') AS float64) AS likes,\n            safe_cast(json_value(DATA, '$.metrics.profile_visits') AS float64) AS profile_visits,\n            safe_cast(json_value(DATA, '$.metrics.real_time_conversion') AS float64) AS real_time_conversion,\n            safe_cast(json_value(DATA, '$.metrics.result') AS float64) AS result,\n            safe_cast(json_value(DATA, '$.metrics.result_rate') AS float64) AS result_rate,\n            safe_cast(json_value(DATA, '$.metrics.shares') AS float64) AS shares,\n            safe_cast(json_value(DATA, '$.metrics.spend') AS float64) AS spend,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p100') AS float64) AS video_views_p100,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p25') AS float64) AS video_views_p25,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p50') AS float64) AS video_views_p50,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p75') AS float64) AS video_views_p75,\n            safe_cast(json_value(DATA, '$.metrics.video_watched_2s') AS float64) AS video_watched_2s,\n            safe_cast(json_value(DATA, '$.metrics.video_watched_6s') AS float64) AS video_watched_6s,\n            \n    FROM\n        source\n)\nSELECT\n    *\nEXCEPT(stat_time_day),\n    DATE(stat_time_day) AS date\nFROM\n    unnested_keys", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_tiktokads__ads": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_tiktokads__ads", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/tiktokAds/stg_tiktokads__ads.sql", "original_file_path": "models/staging/tiktokAds/stg_tiktokads__ads.sql", "unique_id": "model.sado_analytics_services.stg_tiktokads__ads", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "stg_tiktokads__ads"], "alias": "stg_tiktokads__ads", "checksum": {"name": "sha256", "checksum": "7196ba91ae5fa340c907fecb257b15b8c25490d741042f8137ebf9fe75fd682f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "tiktok"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "tiktok"], "description": "The model that extracts data from the Tiktok Ads API. It contains information about the ads.", "columns": {"ad_format": {"name": "ad_format", "description": "The format of the ad. This is a string value that describes the type of ad being displayed. Examples could include 'video', 'image', 'carousel', etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "The unique identifier for the ad. This is a string value that is unique to each ad and is used to track and identify the ad in the system.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "ad_name": {"name": "ad_name", "description": "The name of the ad. This is a string value that is used to identify the ad in a more human-readable format. This could be a name given by the advertiser for easy identification.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "ad_text": {"name": "ad_text", "description": "The 'ad_text' column contains the main text content of the advertisement. This is typically a brief description or tagline associated with the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "ad_texts": {"name": "ad_texts", "description": "The 'ad_texts' column contains additional text content related to the advertisement. This could include supplementary information, additional taglines, or alternative versions of the main ad text.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "adgroup_id": {"name": "adgroup_id", "description": "The 'adgroup_id' column contains the unique identifier for the ad group to which the advertisement belongs. This is used to group related ads together for tracking and analysis purposes.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "adgroup_name": {"name": "adgroup_name", "description": "The name of the ad group. This is a string value that represents the name of the group that the ad belongs to.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "advertiser_id": {"name": "advertiser_id", "description": "The unique identifier of the advertiser. This is a string value that uniquely identifies the advertiser who is running the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "app_name": {"name": "app_name", "description": "The name of the app. This is a string value that represents the name of the app where the ad is being displayed.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "avatar_icon_web_uri": {"name": "avatar_icon_web_uri", "description": "The URI of the avatar icon associated with the ad. This is typically a URL where the avatar image can be found.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "brand_safety_postbid_partner": {"name": "brand_safety_postbid_partner", "description": "The partner involved in ensuring brand safety after the ad bid has been won. This is typically a third-party company that ensures the ad content is safe and appropriate for the brand.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "brand_safety_vast_url": {"name": "brand_safety_vast_url", "description": "The URL of the VAST (Video Ad Serving Template) associated with brand safety. This URL is used to track and manage the delivery of video content for the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "call_to_action": {"name": "call_to_action", "description": "The 'call_to_action' column represents the specific action that the advertiser wants the user to take. This could be a prompt to visit a website, download an app, or any other action that aligns with the advertiser's marketing goals.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "call_to_action_id": {"name": "call_to_action_id", "description": "The 'call_to_action_id' column is a unique identifier for the specific call to action associated with the ad. This ID can be used to track the performance of different calls to action across multiple ads.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The 'campaign_id' column is a unique identifier for the advertising campaign that the ad is a part of. This ID can be used to group together all ads that are part of the same campaign for analysis and reporting purposes.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "The name of the advertising campaign associated with the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "card_id": {"name": "card_id", "description": "The unique identifier for the card element within the ad. This can be used to track specific components of an ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "carousel_image_labels": {"name": "carousel_image_labels", "description": "Labels associated with images in a carousel ad format. This can be used to categorize or describe the content of the images.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "click_tracking_url": {"name": "click_tracking_url", "description": "The URL used for tracking the clicks on the ad. This is a string field.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "create_time": {"name": "create_time", "description": "The timestamp when the ad was created. This is a datetime field.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "DATETIME", "constraints": [], "quote": null, "tags": []}, "creative_authorized": {"name": "creative_authorized", "description": "A boolean field indicating whether the creative content of the ad is authorized or not. True means authorized, False means not authorized.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "creative_type": {"name": "creative_type", "description": "The 'creative_type' column represents the type of creative used in the ad. This could be a video, image, carousel, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "deeplink": {"name": "deeplink", "description": "The 'deeplink' column contains the URL that takes users directly to a specific destination within the app, bypassing the app's homepage or other intervening steps. It is used to improve user experience by taking users directly to the relevant content.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "deeplink_type": {"name": "deeplink_type", "description": "The 'deeplink_type' column indicates the type of deeplink used. This could be a standard deeplink, deferred deeplink, or contextual deeplink.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "display_name": {"name": "display_name", "description": "The display name of the ad. This is the name that is shown to the users on the platform.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "identity_id": {"name": "identity_id", "description": "The unique identifier for the identity associated with the ad. This could be the user or the advertiser who created the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "identity_type": {"name": "identity_type", "description": "The type of identity associated with the ad. This could be a user, an advertiser, or any other entity that can be associated with an ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "image_ids": {"name": "image_ids", "description": "A JSON array containing the IDs of the images associated with the ad. These IDs can be used to retrieve the images from the image database.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "impression_tracking_url": {"name": "impression_tracking_url", "description": "The URL used to track impressions for the ad. An impression is counted each time the ad is displayed.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "is_aco": {"name": "is_aco", "description": "A boolean value indicating whether the ad is part of an Automatic Content Optimization (ACO) campaign. If true, the ad is part of an ACO campaign; if false, it is not.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "is_new_structure": {"name": "is_new_structure", "description": "A boolean field indicating whether the ad follows a new structure or not. True if the ad follows a new structure, false otherwise.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "landing_page_url": {"name": "landing_page_url", "description": "A string field representing the URL of the landing page where users are directed after clicking on the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "landing_page_urls": {"name": "landing_page_urls", "description": "A string field representing multiple URLs of the landing pages where users can be directed after clicking on the ad. The URLs are separated by commas.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "modify_time": {"name": "modify_time", "description": "The 'modify_time' column represents the date and time when the ad was last modified. It is of DATETIME type.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "DATETIME", "constraints": [], "quote": null, "tags": []}, "music_id": {"name": "music_id", "description": "The 'music_id' column is a unique identifier for the music associated with the ad. It is of STRING type.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "operation_status": {"name": "operation_status", "description": "The 'operation_status' column indicates the current operational status of the ad. It is of STRING type.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "optimization_event": {"name": "optimization_event", "description": "The 'optimization_event' column represents the event that the ad is optimized for. This could be a click, view, or other user interaction.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "The 'page_id' column represents the unique identifier of the page where the ad is displayed. This is used for tracking and analytics purposes.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "playable_url": {"name": "playable_url", "description": "The 'playable_url' column represents the URL of the playable ad. This is the URL that users are directed to when they interact with the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "profile_image_url": {"name": "profile_image_url", "description": "The URL of the profile image associated with the ad. This is typically the image of the advertiser or the brand.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "secondary_status": {"name": "secondary_status", "description": "The secondary status of the ad. This can provide additional information about the ad's current state, such as whether it's active, paused, or deleted.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "tracking_pixel_id": {"name": "tracking_pixel_id", "description": "The ID of the tracking pixel associated with the ad. This is used for tracking user interactions with the ad, such as clicks and conversions.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "vast_moat_enabled": {"name": "vast_moat_enabled", "description": "A boolean field indicating whether the VAST (Video Ad Serving Template) Moat is enabled for the ad. This is used for tracking and reporting on video ad performance.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "video_id": {"name": "video_id", "description": "A unique identifier for the video associated with the ad. This is used to link the ad with its corresponding video content.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "viewability_postbid_partner": {"name": "viewability_postbid_partner", "description": "The partner involved in the post-bid viewability of the ad. This is used to track and optimize the viewability of the ad after the bidding process.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "viewability_vast_url": {"name": "viewability_vast_url", "description": "This column contains the URL for the VAST (Video Ad Serving Template) related to viewability tracking. VAST is a specification released by the Interactive Advertising Bureau (IAB) that allows ad servers to use a single ad response format across multiple publishers/platforms. The URL stored in this column is used to track the viewability of the video ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/tiktokAds/stg_tiktokads__ads.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "tiktok"]}, "created_at": 1732268181.2725601, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__ads`", "raw_code": "{{ config(\n    tags = ['view','tiktok']\n) }}\n\nWITH source AS (\n    SELECT\n        json_value(data,'$.ad_format') AS ad_format,\n        json_value(data,'$.ad_id') AS ad_id,\n        json_value(data,'$.ad_name') AS ad_name,\n        json_value(data,'$.ad_text') AS ad_text,\n        json_value(data,'$.ad_texts') AS ad_texts,\n        json_value(data,'$.adgroup_id') AS adgroup_id,\n        json_value(data,'$.adgroup_name') AS adgroup_name,\n        json_value(data,'$.advertiser_id') AS advertiser_id,\n        json_value(data,'$.app_name') AS app_name,\n        json_value(data,'$.avatar_icon_web_uri') AS avatar_icon_web_uri,\n        json_value(data,'$.brand_safety_postbid_partner') AS brand_safety_postbid_partner,\n        json_value(data,'$.brand_safety_vast_url') AS brand_safety_vast_url,\n        json_value(data,'$.call_to_action') AS call_to_action,\n        json_value(data,'$.call_to_action_id') AS call_to_action_id,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.card_id') AS card_id,\n        json_value(data,'$.carousel_image_labels') AS carousel_image_labels,\n        json_value(data,'$.click_tracking_url') AS click_tracking_url,\n        datetime(json_value(data,'$.create_time')) AS create_time,\n        safe_cast(json_value(data,'$.creative_authorized') as bool) AS creative_authorized,\n        json_value(data,'$.creative_type') AS creative_type,\n        json_value(data,'$.deeplink') AS deeplink,\n        json_value(data,'$.deeplink_type') AS deeplink_type,\n        json_value(data,'$.display_name') AS display_name,\n        json_value(data,'$.identity_id') AS identity_id,\n        json_value(data,'$.identity_type') AS identity_type,\n        json_extract_array(data,'$.image_ids') AS image_ids,\n        json_value(data,'$.impression_tracking_url') AS impression_tracking_url,\n        safe_cast(json_value(data,'$.is_aco') as bool) AS is_aco,\n        safe_cast(json_value(data,'$.is_new_structure') as bool) AS is_new_structure,\n        json_value(data,'$.landing_page_url') AS landing_page_url,\n        json_value(data,'$.landing_page_urls') AS landing_page_urls,\n        datetime(json_value(data,'$.modify_time')) AS modify_time,\n        json_value(data,'$.music_id') AS music_id,\n        json_value(data,'$.operation_status') AS operation_status,\n        json_value(data,'$.optimization_event') AS optimization_event,\n        json_value(data,'$.page_id') AS page_id,\n        json_value(data,'$.playable_url') AS playable_url,\n        json_value(data,'$.profile_image_url') AS profile_image_url,\n        json_value(data,'$.secondary_status') AS secondary_status,\n        json_value(data,'$.tracking_pixel_id') AS tracking_pixel_id,\n        safe_cast(json_value(data,'$.vast_moat_enabled') as bool) AS vast_moat_enabled,\n        json_value(data,'$.video_id') AS video_id,\n        json_value(data,'$.viewability_postbid_partner') AS viewability_postbid_partner,\n        json_value(data,'$.viewability_vast_url') AS viewability_vast_url,\n    FROM\n        {{ source('tiktok','ad') }}\n) \n\n{{ dbt_utils.deduplicate(\n    relation = \"source\",\n    partition_by = \"advertiser_id, campaign_id, adgroup_id,ad_id\",\n    order_by = \"modify_time desc\"\n) }}", "language": "sql", "refs": [], "sources": [["tiktok", "ad"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.tiktok.ad"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/tiktokAds/stg_tiktokads__ads.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    SELECT\n        json_value(data,'$.ad_format') AS ad_format,\n        json_value(data,'$.ad_id') AS ad_id,\n        json_value(data,'$.ad_name') AS ad_name,\n        json_value(data,'$.ad_text') AS ad_text,\n        json_value(data,'$.ad_texts') AS ad_texts,\n        json_value(data,'$.adgroup_id') AS adgroup_id,\n        json_value(data,'$.adgroup_name') AS adgroup_name,\n        json_value(data,'$.advertiser_id') AS advertiser_id,\n        json_value(data,'$.app_name') AS app_name,\n        json_value(data,'$.avatar_icon_web_uri') AS avatar_icon_web_uri,\n        json_value(data,'$.brand_safety_postbid_partner') AS brand_safety_postbid_partner,\n        json_value(data,'$.brand_safety_vast_url') AS brand_safety_vast_url,\n        json_value(data,'$.call_to_action') AS call_to_action,\n        json_value(data,'$.call_to_action_id') AS call_to_action_id,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.card_id') AS card_id,\n        json_value(data,'$.carousel_image_labels') AS carousel_image_labels,\n        json_value(data,'$.click_tracking_url') AS click_tracking_url,\n        datetime(json_value(data,'$.create_time')) AS create_time,\n        safe_cast(json_value(data,'$.creative_authorized') as bool) AS creative_authorized,\n        json_value(data,'$.creative_type') AS creative_type,\n        json_value(data,'$.deeplink') AS deeplink,\n        json_value(data,'$.deeplink_type') AS deeplink_type,\n        json_value(data,'$.display_name') AS display_name,\n        json_value(data,'$.identity_id') AS identity_id,\n        json_value(data,'$.identity_type') AS identity_type,\n        json_extract_array(data,'$.image_ids') AS image_ids,\n        json_value(data,'$.impression_tracking_url') AS impression_tracking_url,\n        safe_cast(json_value(data,'$.is_aco') as bool) AS is_aco,\n        safe_cast(json_value(data,'$.is_new_structure') as bool) AS is_new_structure,\n        json_value(data,'$.landing_page_url') AS landing_page_url,\n        json_value(data,'$.landing_page_urls') AS landing_page_urls,\n        datetime(json_value(data,'$.modify_time')) AS modify_time,\n        json_value(data,'$.music_id') AS music_id,\n        json_value(data,'$.operation_status') AS operation_status,\n        json_value(data,'$.optimization_event') AS optimization_event,\n        json_value(data,'$.page_id') AS page_id,\n        json_value(data,'$.playable_url') AS playable_url,\n        json_value(data,'$.profile_image_url') AS profile_image_url,\n        json_value(data,'$.secondary_status') AS secondary_status,\n        json_value(data,'$.tracking_pixel_id') AS tracking_pixel_id,\n        safe_cast(json_value(data,'$.vast_moat_enabled') as bool) AS vast_moat_enabled,\n        json_value(data,'$.video_id') AS video_id,\n        json_value(data,'$.viewability_postbid_partner') AS viewability_postbid_partner,\n        json_value(data,'$.viewability_vast_url') AS viewability_vast_url,\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_ad__*`\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modify_time desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by advertiser_id, campaign_id, adgroup_id,ad_id\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_tiktokads__campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_tiktokads__campaigns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/tiktokAds/stg_tiktokads__campaigns.sql", "original_file_path": "models/staging/tiktokAds/stg_tiktokads__campaigns.sql", "unique_id": "model.sado_analytics_services.stg_tiktokads__campaigns", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "stg_tiktokads__campaigns"], "alias": "stg_tiktokads__campaigns", "checksum": {"name": "sha256", "checksum": "5693c79192e7f084602403681585630368679e397e9ec360220cad260e234ee7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "tiktok"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "tiktok"], "description": "The model extracts data from the Tiktok Ads API. It contains information about the campaigns run by advertisers.", "columns": {"advertiser_id": {"name": "advertiser_id", "description": "The unique identifier for the advertiser. This is a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "The unique identifier for the campaign. This is a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "The name of the campaign. This is a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_type": {"name": "campaign_type", "description": "The 'campaign_type' column represents the type of the campaign. It is a string value that can provide information about the nature of the campaign, such as whether it is a brand awareness campaign, a lead generation campaign, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "objective": {"name": "objective", "description": "The 'objective' column represents the main goal or purpose of the campaign. It is a string value that can provide information about what the campaign aims to achieve, such as increasing brand awareness, generating leads, driving website traffic, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "objective_type": {"name": "objective_type", "description": "The 'objective_type' column represents the specific type of the campaign objective. It is a string value that can provide more detailed information about the campaign's goal, such as whether it is aimed at increasing website conversions, app installs, video views, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "operation_status": {"name": "operation_status", "description": "This column represents the current operational status of the campaign. It is a string value that can take on various statuses such as 'active', 'paused', 'deleted', etc. This field is crucial for understanding the current state of a campaign.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "secondary_status": {"name": "secondary_status", "description": "This column represents the secondary status of the campaign. It is a string value that provides additional information about the campaign's status. This could include statuses like 'under review', 'disapproved', 'limited by budget', etc. This field provides more granular insights into the campaign's status.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "app_promotion_type": {"name": "app_promotion_type", "description": "This column represents the type of app promotion for the campaign. It is a string value that can take on various types such as 'install', 're-engagement', 'conversion', etc. This field is important for understanding the goal of the campaign in terms of app promotion.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "budget": {"name": "budget", "description": "The budget column represents the allocated budget for a specific campaign. It is an integer value.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "budget_mode": {"name": "budget_mode", "description": "The budget_mode column indicates the mode of the budget for a campaign. It is a string value that can take on values such as 'daily' or 'lifetime', indicating whether the budget is allocated daily or for the lifetime of the campaign.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "budget_optimize_on": {"name": "budget_optimize_on", "description": "The budget_optimize_on column represents the parameter on which the budget is optimized. It is a string value that can take on values such as 'clicks', 'impressions', or 'conversions', indicating what the budget is optimized for.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "deep_bid_type": {"name": "deep_bid_type", "description": "The 'deep_bid_type' column represents the type of deep bid used in the campaign. It is a string value extracted from the JSON data.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "is_advanced_dedicated_campaign": {"name": "is_advanced_dedicated_campaign", "description": "The 'is_advanced_dedicated_campaign' column is a boolean value indicating whether the campaign is an advanced dedicated campaign or not. It is extracted from the JSON data and cast to a boolean value.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "is_new_structure": {"name": "is_new_structure", "description": "The 'is_new_structure' column is a boolean value indicating whether the campaign uses a new structure or not. It is extracted from the JSON data and cast to a boolean value.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "is_search_campaign": {"name": "is_search_campaign", "description": "A boolean flag indicating whether the campaign is a search campaign. If true, the campaign is a search campaign, otherwise it is not.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "is_smart_performance_campaign": {"name": "is_smart_performance_campaign", "description": "A boolean flag indicating whether the campaign is a smart performance campaign. If true, the campaign is a smart performance campaign, otherwise it is not.", "meta": {"dimension": {"type": "boolean"}}, "data_type": "BOOLEAN", "constraints": [], "quote": null, "tags": []}, "roas_bid": {"name": "roas_bid", "description": "A float value representing the Return on Ad Spend (ROAS) bid for the campaign. This is the amount of money the advertiser is willing to spend to achieve a return on their ad spend.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "create_time": {"name": "create_time", "description": "The timestamp when the campaign was created. It is extracted from the source data using the datetime function to convert the string into a datetime format.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "DATETIME", "constraints": [], "quote": null, "tags": []}, "modify_time": {"name": "modify_time", "description": "The timestamp when the campaign was last modified. It is extracted from the source data using the datetime function to convert the string into a datetime format.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "DATETIME", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/tiktokAds/stg_tiktokads__campaigns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "tiktok"]}, "created_at": 1732268181.258198, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__campaigns`", "raw_code": "{{ config(\n    tags = ['view','tiktok']\n) }}\n\n\nWITH source AS (\n\n    SELECT\n        json_value(DATA,'$.advertiser_id') AS advertiser_id,\n        json_value(DATA,'$.campaign_id') AS campaign_id,\n        json_value(DATA,'$.campaign_name') AS campaign_name,\n        json_value(DATA,'$.campaign_type') AS campaign_type,\n        json_value(DATA,'$.objective') AS objective,\n        json_value(DATA,'$.objective_type') AS objective_type,\n        json_value(DATA,'$.operation_status') AS operation_status,\n        json_value(DATA,'$.secondary_status') AS secondary_status,\n        json_value(DATA,'$.app_promotion_type') AS app_promotion_type,\n        safe_cast(json_value(DATA, '$.budget') AS int64) AS budget,\n        json_value(DATA,'$.budget_mode') AS budget_mode,\n        json_value(DATA,'$.budget_optimize_on') AS budget_optimize_on,\n        json_value(DATA,'$.deep_bid_type') AS deep_bid_type,\n        safe_cast(json_value(DATA,'$.is_advanced_dedicated_campaign') AS bool) AS is_advanced_dedicated_campaign,\n        safe_cast(json_value(DATA, '$.is_new_structure') AS bool) AS is_new_structure,\n        safe_cast(json_value(DATA, '$.is_search_campaign') AS bool) AS is_search_campaign,\n        safe_cast(json_value(DATA,'$.is_smart_performance_campaign') AS bool) AS is_smart_performance_campaign,\n        safe_cast(json_value(DATA, '$.roas_bid') AS float64) AS roas_bid,\n        datetime(json_value(DATA, '$.create_time')) AS create_time,\n        datetime(json_value(DATA, '$.modify_time')) AS modify_time,\n    FROM\n        {{ source(\n            'tiktok',\n            'campaign'\n        ) }}\n) \n\n{{ dbt_utils.deduplicate(\n    relation = \"source\",\n    partition_by = \"advertiser_id, campaign_id\",\n    order_by = \"modify_time desc\"\n) }}", "language": "sql", "refs": [], "sources": [["tiktok", "campaign"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.tiktok.campaign"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/tiktokAds/stg_tiktokads__campaigns.sql", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n    SELECT\n        json_value(DATA,'$.advertiser_id') AS advertiser_id,\n        json_value(DATA,'$.campaign_id') AS campaign_id,\n        json_value(DATA,'$.campaign_name') AS campaign_name,\n        json_value(DATA,'$.campaign_type') AS campaign_type,\n        json_value(DATA,'$.objective') AS objective,\n        json_value(DATA,'$.objective_type') AS objective_type,\n        json_value(DATA,'$.operation_status') AS operation_status,\n        json_value(DATA,'$.secondary_status') AS secondary_status,\n        json_value(DATA,'$.app_promotion_type') AS app_promotion_type,\n        safe_cast(json_value(DATA, '$.budget') AS int64) AS budget,\n        json_value(DATA,'$.budget_mode') AS budget_mode,\n        json_value(DATA,'$.budget_optimize_on') AS budget_optimize_on,\n        json_value(DATA,'$.deep_bid_type') AS deep_bid_type,\n        safe_cast(json_value(DATA,'$.is_advanced_dedicated_campaign') AS bool) AS is_advanced_dedicated_campaign,\n        safe_cast(json_value(DATA, '$.is_new_structure') AS bool) AS is_new_structure,\n        safe_cast(json_value(DATA, '$.is_search_campaign') AS bool) AS is_search_campaign,\n        safe_cast(json_value(DATA,'$.is_smart_performance_campaign') AS bool) AS is_smart_performance_campaign,\n        safe_cast(json_value(DATA, '$.roas_bid') AS float64) AS roas_bid,\n        datetime(json_value(DATA, '$.create_time')) AS create_time,\n        datetime(json_value(DATA, '$.modify_time')) AS modify_time,\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_campaign__*`\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by modify_time desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by advertiser_id, campaign_id\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_tiktokads__ad_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_tiktokads__ad_insights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/tiktokAds/stg_tiktokads__ad_insights.sql", "original_file_path": "models/staging/tiktokAds/stg_tiktokads__ad_insights.sql", "unique_id": "model.sado_analytics_services.stg_tiktokads__ad_insights", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "stg_tiktokads__ad_insights"], "alias": "stg_tiktokads__ad_insights", "checksum": {"name": "sha256", "checksum": "cc391de0a5d58e97d7708b39396024d394279793cceb979211ddfc324964f33f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "tiktok"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "tiktok"], "description": "The model is a daily snapshot of TikTok ad performance. The data is sourced from the TikTok API. This model is useful for analyzing ad performance over time, understanding the effectiveness of different ad groups and campaigns, and optimizing ad spend.", "columns": {"ad_id": {"name": "ad_id", "description": "The unique identifier for each ad.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "adgroup_id": {"name": "adgroup_id", "description": "The unique identifier for the ad group. This is a string value.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "adgroup_name": {"name": "adgroup_name", "description": "The name of the ad group. This is a string value.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "advertiser_id": {"name": "advertiser_id", "description": "The unique identifier for the advertiser. This is a string value.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "advertiser_name": {"name": "advertiser_name", "description": "The name of the advertiser for the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "This column represents the unique identifier for the ad campaign.", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "campaign_name": {"name": "campaign_name", "description": "The name of the advertising campaign associated with the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "placement_type": {"name": "placement_type", "description": "The type of placement where the ad was displayed. This can include various platforms or sections within a platform where the ad was shown.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "objective_type": {"name": "objective_type", "description": "The 'objective_type' column indicates the objective or goal of the ad campaign. This could be brand awareness, lead generation, conversion, etc.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "add_to_wishlist": {"name": "add_to_wishlist", "description": "The number of times users added the product to their wishlist through the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "add_to_wishlist_rate": {"name": "add_to_wishlist_rate", "description": "The rate at which users added the product to their wishlist after viewing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "app_event_add_to_cart": {"name": "app_event_add_to_cart", "description": "The number of times the 'add to cart' event was triggered in the app due to the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "app_event_add_to_cart_rate": {"name": "app_event_add_to_cart_rate", "description": "The rate at which the 'add to cart' event was triggered in the app due to the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "average_video_play": {"name": "average_video_play", "description": "This column represents the average duration of video play for the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "average_video_play_per_user": {"name": "average_video_play_per_user", "description": "This column represents the average duration of video play per user for the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "checkout": {"name": "checkout", "description": "The number of times a user has proceeded to checkout after viewing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "checkout_rate": {"name": "checkout_rate", "description": "The rate at which users proceed to checkout after viewing the ad, calculated as the number of checkouts divided by the number of ad views.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The 'clicks' column represents the total number of times users have clicked on the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "comments": {"name": "comments", "description": "The 'comments' column indicates the total number of comments made by users on the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "complete_payment": {"name": "complete_payment", "description": "The 'complete_payment' column shows the total number of completed payments made by users after clicking on the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "complete_payment_rate": {"name": "complete_payment_rate", "description": "The rate at which users complete payments after interacting with the ad. It is calculated by dividing the number of users who completed payments by the total number of users who interacted with the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "conversion": {"name": "conversion", "description": "The total number of conversions that occurred as a result of users interacting with the ad. A conversion is defined as a user completing a desired action such as making a purchase, signing up for a newsletter, or filling out a form.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "conversion_rate": {"name": "conversion_rate", "description": "The rate at which conversions occur after users interact with the ad. It is calculated by dividing the total number of conversions by the total number of users who interacted with the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_1000_reached": {"name": "cost_per_1000_reached", "description": "This column represents the cost incurred for every 1000 people reached by the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_add_to_wishlist": {"name": "cost_per_add_to_wishlist", "description": "This column represents the cost incurred for every instance of a user adding a product to their wishlist as a result of the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_app_event_add_to_cart": {"name": "cost_per_app_event_add_to_cart", "description": "This column represents the cost incurred for every instance of a user adding a product to their cart within the app as a result of the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_checkout": {"name": "cost_per_checkout", "description": "This column represents the cost incurred per checkout action on the ad. It is calculated by dividing the total ad spend by the number of checkouts. The value is represented as a float.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_complete_payment": {"name": "cost_per_complete_payment", "description": "This column represents the cost incurred per complete payment action on the ad. It is calculated by dividing the total ad spend by the number of complete payments. The value is represented as a float.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "This column represents the cost incurred per conversion action on the ad. It is calculated by dividing the total ad spend by the number of conversions. The value is represented as a float.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_cta_purchase": {"name": "cost_per_cta_purchase", "description": "This column represents the cost per call-to-action (CTA) purchase. It is calculated by dividing the total cost by the number of CTA purchases. The value is represented as a string.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_cta_registration": {"name": "cost_per_cta_registration", "description": "This column represents the cost per call-to-action (CTA) registration. It is calculated by dividing the total cost by the number of CTA registrations. The value is represented as a string.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_download_start": {"name": "cost_per_download_start", "description": "This column represents the cost per download start. It is calculated by dividing the total cost by the number of download starts. The value is represented as a string.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_initiate_checkout": {"name": "cost_per_initiate_checkout", "description": "This column represents the cost incurred per initiate checkout action. It is calculated by dividing the total cost by the number of initiate checkout actions.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_on_web_add_to_wishlist": {"name": "cost_per_on_web_add_to_wishlist", "description": "This column represents the cost incurred per 'add to wishlist' action on the web. It is calculated by dividing the total cost by the number of 'add to wishlist' actions on the web.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_page_event_search": {"name": "cost_per_page_event_search", "description": "This column represents the cost incurred per page event search action. It is calculated by dividing the total cost by the number of page event search actions.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_product_details_page_browse": {"name": "cost_per_product_details_page_browse", "description": "This column represents the cost incurred per product details page browse event. It is calculated by dividing the total cost by the number of product details page browse events.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_purchase": {"name": "cost_per_purchase", "description": "This column represents the cost incurred per purchase event. It is calculated by dividing the total cost by the number of purchase events.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_registration": {"name": "cost_per_registration", "description": "This column represents the cost incurred per registration event. It is calculated by dividing the total cost by the number of registration events.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_result": {"name": "cost_per_result", "description": "This column represents the cost per result. It is calculated by dividing the total cost by the total number of results. The result could be any action that the advertiser has defined as a goal, such as a click, a conversion, or an app install.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_secondary_goal_result": {"name": "cost_per_secondary_goal_result", "description": "This column represents the cost per secondary goal result. It is calculated by dividing the total cost by the total number of secondary goal results. The secondary goal result could be any action that the advertiser has defined as a secondary goal, such as a view, a like, or a share.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_total_add_to_wishlist": {"name": "cost_per_total_add_to_wishlist", "description": "This column represents the cost per total add to wishlist. It is calculated by dividing the total cost by the total number of 'add to wishlist' actions. This metric is particularly useful for e-commerce advertisers who want to measure the cost effectiveness of their campaigns in terms of wishlist additions.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_total_app_event_add_to_cart": {"name": "cost_per_total_app_event_add_to_cart", "description": "This column represents the total cost incurred for each 'add to cart' event in the app. It is calculated by dividing the total cost by the total number of 'add to cart' events in the app.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_total_checkout": {"name": "cost_per_total_checkout", "description": "This column represents the total cost incurred for each checkout event. It is calculated by dividing the total cost by the total number of checkout events.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_total_purchase": {"name": "cost_per_total_purchase", "description": "This column represents the total cost incurred for each purchase event. It is calculated by dividing the total cost by the total number of purchase events.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_total_registration": {"name": "cost_per_total_registration", "description": "This column represents the cost per total registration. It is calculated by dividing the total cost by the total number of registrations. The value is represented as a string.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_total_view_content": {"name": "cost_per_total_view_content", "description": "This column represents the cost per total view content. It is calculated by dividing the total cost by the total number of content views. The value is represented as a string.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_user_registration": {"name": "cost_per_user_registration", "description": "This column represents the cost per user registration. It is calculated by dividing the total cost by the total number of user registrations. The value is represented as a string.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_view_content": {"name": "cost_per_view_content", "description": "This column represents the cost incurred per view of the content. It is calculated by dividing the total cost by the number of content views. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_vta_conversion": {"name": "cost_per_vta_conversion", "description": "This column represents the cost incurred per view-through attribution (VTA) conversion. VTA conversion refers to the number of conversions that occurred after a user viewed an ad, without necessarily clicking on it. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_vta_purchase": {"name": "cost_per_vta_purchase", "description": "This column represents the cost incurred per view-through attribution (VTA) purchase. VTA purchase refers to the number of purchases that occurred after a user viewed an ad, without necessarily clicking on it. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_vta_registration": {"name": "cost_per_vta_registration", "description": "This column represents the cost per View Through Attribution (VTA) registration. VTA is a type of attribution model that gives credit to the last viewed ad impression before a conversion (in this case, a registration). The cost is calculated by dividing the total ad spend by the number of VTA registrations.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cost_per_web_event_add_to_cart": {"name": "cost_per_web_event_add_to_cart", "description": "This column represents the cost per 'add to cart' event on the web platform. It is calculated by dividing the total ad spend by the number of 'add to cart' events on the web platform. This metric helps in understanding the cost effectiveness of the ad campaign in driving potential customers to add products to their cart on the web platform.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cpc": {"name": "cpc", "description": "This column represents the Cost Per Click (CPC). It is a common performance metric in digital advertising that measures the cost an advertiser pays for each click on their ad. It is calculated by dividing the total ad spend by the total number of clicks. This metric helps in understanding the cost effectiveness of the ad campaign in driving user engagement.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cpm": {"name": "cpm", "description": "The cost per 1000 impressions. This metric gives the cost of reaching 1000 people through the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cta_app_install": {"name": "cta_app_install", "description": "The number of times users clicked the 'Install' call-to-action button on the ad. This metric is useful for tracking the effectiveness of app promotion ads.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cta_conversion": {"name": "cta_conversion", "description": "The number of conversions that occurred as a result of users clicking the call-to-action button on the ad. This metric is useful for tracking the effectiveness of conversion-focused ads.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cta_purchase": {"name": "cta_purchase", "description": "This column represents the number of times the 'purchase' call-to-action (CTA) was clicked in the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cta_registration": {"name": "cta_registration", "description": "This column represents the number of times the 'registration' call-to-action (CTA) was clicked in the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "ctr": {"name": "ctr", "description": "This column represents the Click-Through Rate (CTR) for the ad. It is calculated as the number of clicks that the ad receives divided by the number of times the ad is shown (impressions), expressed as a percentage.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "download_start": {"name": "download_start", "description": "This column represents the number of times a download of the advertised application was initiated.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "download_start_rate": {"name": "download_start_rate", "description": "This column represents the rate at which downloads of the advertised application were initiated. It is calculated by dividing the number of download starts by the total number of impressions.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "dpa_target_audience_type": {"name": "dpa_target_audience_type", "description": "This column represents the type of target audience for the Dynamic Product Ads (DPA). The value can indicate whether the ad was targeted towards new users, existing users, or a custom audience.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "engaged_view": {"name": "engaged_view", "description": "This column represents the number of times a user engaged with the ad. An engagement is counted when a user interacts with the ad in any way, such as clicking the link, liking the ad, sharing it, etc.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "engaged_view_15s": {"name": "engaged_view_15s", "description": "This column represents the number of times a user engaged with the ad for at least 15 seconds. This includes actions such as watching the ad video for 15 seconds or more, clicking and exploring the ad content for 15 seconds or more, etc.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "follows": {"name": "follows", "description": "This column represents the number of times a user followed the advertiser after viewing the ad. This is a key metric for advertisers looking to grow their follower base on TikTok.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "The total number of times the ad was shown to users.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "initiate_checkout": {"name": "initiate_checkout", "description": "The total number of times users initiated the checkout process for a product after viewing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "initiate_checkout_rate": {"name": "initiate_checkout_rate", "description": "The rate at which users initiated the checkout process after viewing the ad. It is calculated by dividing the number of checkouts initiated by the total number of impressions.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "likes": {"name": "likes", "description": "The 'likes' column represents the total number of likes received by the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "on_web_add_to_wishlist": {"name": "on_web_add_to_wishlist", "description": "The 'on_web_add_to_wishlist' column represents the number of times users added the product to their wishlist on the web platform after viewing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "on_web_add_to_wishlist_per_click": {"name": "on_web_add_to_wishlist_per_click", "description": "This column represents the number of 'add to wishlist' actions that occurred on the web per click.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "page_event_search": {"name": "page_event_search", "description": "This column represents the number of search events that occurred on the page.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "page_event_search_rate": {"name": "page_event_search_rate", "description": "This column represents the rate of search events that occurred on the page.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "product_details_page_browse": {"name": "product_details_page_browse", "description": "The number of times users browsed the product details page after seeing the ad. This metric helps in understanding user engagement with the product after viewing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "product_details_page_browse_rate": {"name": "product_details_page_browse_rate", "description": "The rate at which users browsed the product details page after seeing the ad. It is calculated as the number of product details page browses divided by the total number of ad views. This rate helps in understanding the effectiveness of the ad in driving user engagement with the product.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "profile_visits": {"name": "profile_visits", "description": "The 'profile_visits' column represents the number of times a user has visited the profile of the advertiser on TikTok.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "purchase": {"name": "purchase", "description": "The 'purchase' column indicates the total number of purchases made by users after viewing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "purchase_rate": {"name": "purchase_rate", "description": "The 'purchase_rate' column represents the rate of purchases made by users after viewing the ad. It is calculated by dividing the number of purchases by the total number of ad views.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "The total number of unique users who have seen any content related to the ad campaign.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "real_time_conversion": {"name": "real_time_conversion", "description": "The number of conversions that occurred in real-time as a result of the ad campaign. A conversion is defined as a desired action taken by a user, such as making a purchase, signing up for a newsletter, or filling out a form.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "real_time_conversion_rate": {"name": "real_time_conversion_rate", "description": "The rate at which real-time conversions occur. It is calculated by dividing the number of real-time conversions by the total number of unique users who have seen the ad, and then multiplying the result by 100 to get a percentage.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "real_time_cost_per_conversion": {"name": "real_time_cost_per_conversion", "description": "This column represents the real-time cost per conversion. It is calculated by dividing the total cost by the number of conversions. The value is in the currency of the ad account.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "real_time_cost_per_result": {"name": "real_time_cost_per_result", "description": "This column represents the real-time cost per result. It is calculated by dividing the total cost by the number of results. The value is in the currency of the ad account.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "real_time_result": {"name": "real_time_result", "description": "This column represents the real-time results. It is the number of times the desired action was taken after a user clicked on the ad. This could include actions such as likes, shares, comments, or any other defined campaign objective.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "real_time_result_rate": {"name": "real_time_result_rate", "description": "This column represents the rate of real-time results achieved from the ad campaign. It is calculated by dividing the number of real-time results by the total number of impressions. The value is represented as a FLOAT64 data type.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "registration": {"name": "registration", "description": "This column represents the total number of user registrations achieved from the ad campaign. It is represented as a FLOAT64 data type.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "registration_rate": {"name": "registration_rate", "description": "This column represents the rate of user registrations achieved from the ad campaign. It is calculated by dividing the number of user registrations by the total number of impressions. The value is represented as a FLOAT64 data type.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "result": {"name": "result", "description": "The 'result' column represents the total number of results achieved by the ad. This could include any action that the ad was designed to achieve, such as clicks, conversions, or views.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "result_rate": {"name": "result_rate", "description": "The 'result_rate' column represents the rate of results achieved per impression. It is calculated by dividing the total number of results by the total number of impressions, giving an indication of the ad's effectiveness.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "sales_lead": {"name": "sales_lead", "description": "The 'sales_lead' column represents the total number of sales leads generated by the ad. A sales lead is a prospective consumer of a product or service, created when an individual or business shows interest and provides contact information.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "secondary_goal_result": {"name": "secondary_goal_result", "description": "This column represents the secondary goal result of the ad. It is the outcome of the secondary objective set for the ad campaign.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "secondary_goal_result_rate": {"name": "secondary_goal_result_rate", "description": "This column represents the rate of the secondary goal result. It is calculated by dividing the number of secondary goal results by the total number of impressions or clicks.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "shares": {"name": "shares", "description": "This column represents the number of times the ad was shared by users. It is a measure of the ad's virality and user engagement.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "skan_sales_lead": {"name": "skan_sales_lead", "description": "The column 'skan_sales_lead' represents the number of sales leads generated through the SKAdNetwork, which is Apple's privacy-friendly ad network.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "skan_total_sales_lead": {"name": "skan_total_sales_lead", "description": "The column 'skan_total_sales_lead' represents the total number of sales leads generated through the SKAdNetwork over a certain period of time.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "skan_total_sales_lead_value": {"name": "skan_total_sales_lead_value", "description": "The column 'skan_total_sales_lead_value' represents the total value of the sales leads generated through the SKAdNetwork over a certain period of time.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "The total amount of money spent on the ad campaign.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_active_pay_roas": {"name": "total_active_pay_roas", "description": "The total return on ad spend (ROAS) for all active payments. This is calculated by dividing the total revenue generated by the ad campaign by the total amount spent on the campaign.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_add_to_wishlist": {"name": "total_add_to_wishlist", "description": "The total number of times users added the advertised product to their wishlist.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_add_to_wishlist_value": {"name": "total_add_to_wishlist_value", "description": "This column represents the total value of all items added to the wishlist. It is calculated by summing up the value of each item added to the wishlist.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_app_event_add_to_cart": {"name": "total_app_event_add_to_cart", "description": "This column represents the total number of 'add to cart' events that occurred within the app. It is calculated by counting the number of times users added items to their cart in the app.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_app_event_add_to_cart_value": {"name": "total_app_event_add_to_cart_value", "description": "This column represents the total value of all 'add to cart' events that occurred within the app. It is calculated by summing up the value of each item added to the cart in the app.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_checkout": {"name": "total_checkout", "description": "This column represents the total number of checkouts that have occurred. It is calculated by summing up all the individual checkouts that have taken place.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_checkout_value": {"name": "total_checkout_value", "description": "This column represents the total value of all checkouts. It is calculated by summing up the value of all individual checkouts.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_complete_payment_rate": {"name": "total_complete_payment_rate", "description": "This column represents the rate of completed payments. It is calculated by dividing the number of completed payments by the total number of checkouts.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_download_start_value": {"name": "total_download_start_value", "description": "This column represents the total value generated from the start of downloads. It is calculated by summing up the value of all initiated downloads.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_initiate_checkout_value": {"name": "total_initiate_checkout_value", "description": "This column represents the total value generated from the initiation of checkouts. It is calculated by summing up the value of all initiated checkouts.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_on_web_add_to_wishlist_value": {"name": "total_on_web_add_to_wishlist_value", "description": "This column represents the total value generated from adding items to the wishlist on the web. It is calculated by summing up the value of all items added to the wishlist on the web.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_page_event_search_value": {"name": "total_page_event_search_value", "description": "This column represents the total value generated from page event searches. It is calculated by summing up the value of all page event searches.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_product_details_page_browse_value": {"name": "total_product_details_page_browse_value", "description": "This column represents the total value generated from browsing the product details page. It is calculated by summing up the value of all product details page browses.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_purchase": {"name": "total_purchase", "description": "This column represents the total number of purchases made. It is calculated by summing up all the purchases.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_purchase_value": {"name": "total_purchase_value", "description": "The total value of all purchases made through the ad. This is calculated by summing the value of all individual purchases.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_registration": {"name": "total_registration", "description": "The total number of registrations or sign-ups that have occurred as a result of the ad. This is calculated by counting the number of unique users who have registered after clicking on the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_sales_lead": {"name": "total_sales_lead", "description": "The total number of potential sales opportunities generated by the ad. This is calculated by counting the number of users who have shown interest in the product or service by performing actions like filling out a form, subscribing to a newsletter, or adding a product to their cart.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_sales_lead_value": {"name": "total_sales_lead_value", "description": "This column represents the total value of sales leads generated from the ad campaign. It is calculated by summing up the value of all sales leads.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_user_registration_value": {"name": "total_user_registration_value", "description": "This column represents the total value of user registrations generated from the ad campaign. It is calculated by summing up the value of all user registrations.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_view_content": {"name": "total_view_content", "description": "This column represents the total number of content views generated from the ad campaign. It is calculated by summing up the number of all content views.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_view_content_value": {"name": "total_view_content_value", "description": "This column represents the total value of the content viewed by users. It is calculated by summing up the value of all content viewed by users.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "total_web_event_add_to_cart_value": {"name": "total_web_event_add_to_cart_value", "description": "This column represents the total value of the 'add to cart' events on the web. It is calculated by summing up the value of all 'add to cart' events that occurred on the web.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "user_registration": {"name": "user_registration", "description": "This column represents the number of users who have registered. It is calculated by counting the number of unique users who have completed the registration process.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "user_registration_rate": {"name": "user_registration_rate", "description": "The rate at which users register on the platform after viewing the ad. It is calculated by dividing the number of users who registered after viewing the ad by the total number of users who viewed the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_checkout": {"name": "value_per_checkout", "description": "The average value generated per checkout after viewing the ad. It is calculated by dividing the total value generated from checkouts by the total number of checkouts after viewing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_complete_payment": {"name": "value_per_complete_payment", "description": "The average value generated per completed payment after viewing the ad. It is calculated by dividing the total value generated from completed payments by the total number of completed payments after viewing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_download_start": {"name": "value_per_download_start", "description": "This column represents the value per download start. It is calculated by dividing the total value generated from all downloads by the total number of downloads started. This metric helps in understanding the average value generated from each download start.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_initiate_checkout": {"name": "value_per_initiate_checkout", "description": "This column represents the value per initiate checkout. It is calculated by dividing the total value generated from all checkouts by the total number of checkouts initiated. This metric helps in understanding the average value generated from each checkout initiation.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_on_web_add_to_wishlist": {"name": "value_per_on_web_add_to_wishlist", "description": "This column represents the value per add to wishlist on web. It is calculated by dividing the total value generated from all wishlist additions on the web by the total number of wishlist additions on the web. This metric helps in understanding the average value generated from each wishlist addition on the web.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_page_event_search": {"name": "value_per_page_event_search", "description": "This column represents the value per page event search. It is calculated by dividing the total value generated from page event searches by the total number of page event searches.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_product_details_page_browse": {"name": "value_per_product_details_page_browse", "description": "This column represents the value per product details page browse. It is calculated by dividing the total value generated from product details page browses by the total number of product details page browses.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_total_add_to_wishlist": {"name": "value_per_total_add_to_wishlist", "description": "This column represents the value per total add to wishlist. It is calculated by dividing the total value generated from adding items to the wishlist by the total number of items added to the wishlist.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_total_app_event_add_to_cart": {"name": "value_per_total_app_event_add_to_cart", "description": "This column represents the total value per app event add to cart. It is calculated by dividing the total value of all app events add to cart by the total number of such events. This metric is useful for understanding the average value generated by each app event add to cart.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_total_purchase": {"name": "value_per_total_purchase", "description": "This column represents the total value per purchase. It is calculated by dividing the total value of all purchases by the total number of purchases. This metric is useful for understanding the average value generated by each purchase.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_total_view_content": {"name": "value_per_total_view_content", "description": "This column represents the total value per content view. It is calculated by dividing the total value of all content views by the total number of content views. This metric is useful for understanding the average value generated by each content view.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_user_registration": {"name": "value_per_user_registration", "description": "This column represents the value per user registration. It is calculated by dividing the total value generated from all registered users by the total number of registered users. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "value_per_web_event_add_to_cart": {"name": "value_per_web_event_add_to_cart", "description": "This column represents the value per 'add to cart' event on the web. It is calculated by dividing the total value generated from all 'add to cart' events on the web by the total number of such events. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "video_play_actions": {"name": "video_play_actions", "description": "This column represents the total number of video play actions. It counts the number of times users played the video in the ad. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "video_views_p100": {"name": "video_views_p100", "description": "This column represents the percentage of video views that reached 100% of the video length. It is a measure of how engaging the video content is, with a higher percentage indicating that more viewers watched the entire video.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "video_views_p25": {"name": "video_views_p25", "description": "This column represents the percentage of video views that reached at least 25% of the video length. It is a measure of initial engagement with the video content, with a higher percentage indicating that more viewers watched at least a quarter of the video.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "video_views_p50": {"name": "video_views_p50", "description": "This column represents the percentage of video views that reached at least 50% of the video length. It is a measure of mid-point engagement with the video content, with a higher percentage indicating that more viewers watched at least half of the video.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "video_views_p75": {"name": "video_views_p75", "description": "This column represents the number of times a video was viewed up to 75% of its length.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "video_watched_2s": {"name": "video_watched_2s", "description": "This column represents the number of times a video was watched for at least 2 seconds.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "video_watched_6s": {"name": "video_watched_6s", "description": "This column represents the number of times a video was watched for at least 6 seconds.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "view_content": {"name": "view_content", "description": "This column represents the number of times a user viewed the content of the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "view_content_rate": {"name": "view_content_rate", "description": "This column represents the rate at which users viewed the content of the ad. It is calculated by dividing the number of content views by the total number of impressions.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "vta_app_install": {"name": "vta_app_install", "description": "This column represents the number of times the app was installed via the ad. It is part of the view-through attribution (VTA) metrics, which measure the number of users who viewed the ad and then later completed the desired action (in this case, installing the app).", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "vta_conversion": {"name": "vta_conversion", "description": "This column represents the number of View-Through Attribution (VTA) conversions. VTA is a way to measure a user's conversion based on the view of an ad, without clicking on it.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "vta_purchase": {"name": "vta_purchase", "description": "This column represents the number of View-Through Attribution (VTA) purchases. It measures the number of purchases made by users who viewed the ad but did not necessarily click on it.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "vta_registration": {"name": "vta_registration", "description": "This column represents the number of View-Through Attribution (VTA) registrations. It measures the number of registrations made by users who viewed the ad but did not necessarily click on it.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "web_event_add_to_cart": {"name": "web_event_add_to_cart", "description": "This column represents the number of times a user added a product to their cart on the website after viewing the ad.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "web_event_add_to_cart_rate": {"name": "web_event_add_to_cart_rate", "description": "This column represents the rate at which users added a product to their cart on the website after viewing the ad. It is calculated by dividing the number of 'add to cart' events by the total number of ad views.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "This column represents the date on which the ad data was recorded. It is in the format YYYY-MM-DD.", "meta": {"dimension": {"type": "date"}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/tiktokAds/stg_tiktokads__ad_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "tiktok"]}, "created_at": 1732268181.2365508, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__ad_insights`", "raw_code": "{{ config(\n    tags = ['view','tiktok']\n) }}\n\n{% set dimensions = [\"ad_id\",\"stat_time_day\"] %}\n{% set metrics ={ \"string\" :[\"adgroup_id\", \"adgroup_name\", \"advertiser_id\", \"advertiser_name\",\"campaign_id\", \"campaign_name\",\"placement_type\",\"objective_type\",],\n\"float64\" :[\"add_to_wishlist\", \"add_to_wishlist_rate\", \"app_event_add_to_cart\", \"app_event_add_to_cart_rate\", \"average_video_play\", \"average_video_play_per_user\", \"checkout\", \"checkout_rate\", \"clicks\", \"comments\", \"complete_payment\", \"complete_payment_rate\", \"conversion\", \"conversion_rate\", \"cost_per_1000_reached\", \"cost_per_add_to_wishlist\", \"cost_per_app_event_add_to_cart\", \"cost_per_checkout\", \"cost_per_complete_payment\", \"cost_per_conversion\", \"cost_per_cta_purchase\", \"cost_per_cta_registration\", \"cost_per_download_start\", \"cost_per_initiate_checkout\", \"cost_per_on_web_add_to_wishlist\", \"cost_per_page_event_search\", \"cost_per_product_details_page_browse\", \"cost_per_purchase\", \"cost_per_registration\", \"cost_per_result\", \"cost_per_secondary_goal_result\", \"cost_per_total_add_to_wishlist\", \"cost_per_total_app_event_add_to_cart\", \"cost_per_total_checkout\", \"cost_per_total_purchase\", \"cost_per_total_registration\", \"cost_per_total_view_content\", \"cost_per_user_registration\", \"cost_per_view_content\", \"cost_per_vta_conversion\", \"cost_per_vta_purchase\", \"cost_per_vta_registration\", \"cost_per_web_event_add_to_cart\", \"cpc\", \"cpm\", \"cta_app_install\", \"cta_conversion\", \"cta_purchase\", \"cta_registration\", \"ctr\", \"download_start\", \"download_start_rate\", \"dpa_target_audience_type\", \"engaged_view\", \"engaged_view_15s\", \"follows\", \"impressions\", \"initiate_checkout\", \"initiate_checkout_rate\", \"likes\", \"on_web_add_to_wishlist\", \"on_web_add_to_wishlist_per_click\", \"page_event_search\", \"page_event_search_rate\", \"product_details_page_browse\", \"product_details_page_browse_rate\", \"profile_visits\", \"purchase\", \"purchase_rate\", \"reach\", \"real_time_conversion\", \"real_time_conversion_rate\", \"real_time_cost_per_conversion\", \"real_time_cost_per_result\", \"real_time_result\", \"real_time_result_rate\", \"registration\", \"registration_rate\", \"result\", \"result_rate\", \"sales_lead\", \"secondary_goal_result\", \"secondary_goal_result_rate\", \"shares\", \"skan_sales_lead\", \"skan_total_sales_lead\", \"skan_total_sales_lead_value\", \"spend\", \"total_active_pay_roas\", \"total_add_to_wishlist\", \"total_add_to_wishlist_value\", \"total_app_event_add_to_cart\", \"total_app_event_add_to_cart_value\", \"total_checkout\", \"total_checkout_value\", \"total_complete_payment_rate\", \"total_download_start_value\", \"total_initiate_checkout_value\", \"total_on_web_add_to_wishlist_value\", \"total_page_event_search_value\", \"total_product_details_page_browse_value\", \"total_purchase\", \"total_purchase_value\", \"total_registration\", \"total_sales_lead\", \"total_sales_lead_value\", \"total_user_registration_value\", \"total_view_content\", \"total_view_content_value\", \"total_web_event_add_to_cart_value\", \"user_registration\", \"user_registration_rate\", \"value_per_checkout\", \"value_per_complete_payment\", \"value_per_download_start\", \"value_per_initiate_checkout\", \"value_per_on_web_add_to_wishlist\", \"value_per_page_event_search\", \"value_per_product_details_page_browse\", \"value_per_total_add_to_wishlist\", \"value_per_total_app_event_add_to_cart\", \"value_per_total_purchase\", \"value_per_total_view_content\", \"value_per_user_registration\", \"value_per_web_event_add_to_cart\", \"video_play_actions\", \"video_views_p100\", \"video_views_p25\", \"video_views_p50\", \"video_views_p75\", \"video_watched_2s\", \"video_watched_6s\", \"view_content\", \"view_content_rate\", \"vta_app_install\", \"vta_conversion\", \"vta_purchase\", \"vta_registration\", \"web_event_add_to_cart\", \"web_event_add_to_cart_rate\",\"onsite_shopping_roas\",\n        \"onsite_shopping\",\n        \"cost_per_onsite_shopping\",\n        \"onsite_shopping_rate\",\n        \"value_per_onsite_shopping\",\n        \"total_onsite_shopping_value\",\n        \"onsite_initiate_checkout_count\",\n        \"cost_per_onsite_initiate_checkout_count\",\n        \"onsite_initiate_checkout_count_rate\",\n        \"value_per_onsite_initiate_checkout_count\",\n        \"total_onsite_initiate_checkout_count_value\",\n        \"onsite_on_web_detail\",\n        \"cost_per_onsite_on_web_detail\",\n        \"onsite_on_web_detail_rate\",\n        \"value_per_onsite_on_web_detail\",\n        \"total_onsite_on_web_detail_value\",\n        \"onsite_on_web_cart\",\n        \"cost_per_onsite_on_web_cart\",\n        \"onsite_on_web_cart_rate\",\n        \"value_per_onsite_on_web_cart\",\n        \"total_onsite_on_web_cart_value\",] } %}\nWITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'tiktok',\n            'ad_report_daily'\n        ),\n        partition_by = \"JSON_VALUE(data, '$.dimensions.ad_id'),JSON_VALUE(data, '$.dimensions.stat_time_day')\",\n        order_by = '_batched_at desc'\n    ) }}\n),\nunnested_keys AS (\n    SELECT\n        {% for dimension in dimensions -%}\n            json_value(\n                DATA,\n                '$.dimensions.{{dimension}}'\n            ) AS {{ dimension }},\n        {%- endfor %}\n        {%- for type,metric_group in metrics.items() -%}\n            {%- for metric in metric_group -%}\n            safe_cast(json_value(DATA, '$.metrics.{{metric}}') AS {{ type }}) AS {{ metric }},\n            {% endfor %}\n        {%- endfor %}\n    FROM\n        source\n)\nSELECT\n    *\nEXCEPT(stat_time_day),\n    DATE(stat_time_day) AS date\nFROM\n    unnested_keys", "language": "sql", "refs": [], "sources": [["tiktok", "ad_report_daily"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.tiktok.ad_report_daily"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/tiktokAds/stg_tiktokads__ad_insights.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Tiktok`.`p_ad_report_daily__*` original\n        group by JSON_VALUE(data, '$.dimensions.ad_id'),JSON_VALUE(data, '$.dimensions.stat_time_day')\n    )\n),\nunnested_keys AS (\n    SELECT\n        json_value(\n                DATA,\n                '$.dimensions.ad_id'\n            ) AS ad_id,json_value(\n                DATA,\n                '$.dimensions.stat_time_day'\n            ) AS stat_time_day,safe_cast(json_value(DATA, '$.metrics.adgroup_id') AS string) AS adgroup_id,\n            safe_cast(json_value(DATA, '$.metrics.adgroup_name') AS string) AS adgroup_name,\n            safe_cast(json_value(DATA, '$.metrics.advertiser_id') AS string) AS advertiser_id,\n            safe_cast(json_value(DATA, '$.metrics.advertiser_name') AS string) AS advertiser_name,\n            safe_cast(json_value(DATA, '$.metrics.campaign_id') AS string) AS campaign_id,\n            safe_cast(json_value(DATA, '$.metrics.campaign_name') AS string) AS campaign_name,\n            safe_cast(json_value(DATA, '$.metrics.placement_type') AS string) AS placement_type,\n            safe_cast(json_value(DATA, '$.metrics.objective_type') AS string) AS objective_type,\n            safe_cast(json_value(DATA, '$.metrics.add_to_wishlist') AS float64) AS add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.add_to_wishlist_rate') AS float64) AS add_to_wishlist_rate,\n            safe_cast(json_value(DATA, '$.metrics.app_event_add_to_cart') AS float64) AS app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.app_event_add_to_cart_rate') AS float64) AS app_event_add_to_cart_rate,\n            safe_cast(json_value(DATA, '$.metrics.average_video_play') AS float64) AS average_video_play,\n            safe_cast(json_value(DATA, '$.metrics.average_video_play_per_user') AS float64) AS average_video_play_per_user,\n            safe_cast(json_value(DATA, '$.metrics.checkout') AS float64) AS checkout,\n            safe_cast(json_value(DATA, '$.metrics.checkout_rate') AS float64) AS checkout_rate,\n            safe_cast(json_value(DATA, '$.metrics.clicks') AS float64) AS clicks,\n            safe_cast(json_value(DATA, '$.metrics.comments') AS float64) AS comments,\n            safe_cast(json_value(DATA, '$.metrics.complete_payment') AS float64) AS complete_payment,\n            safe_cast(json_value(DATA, '$.metrics.complete_payment_rate') AS float64) AS complete_payment_rate,\n            safe_cast(json_value(DATA, '$.metrics.conversion') AS float64) AS conversion,\n            safe_cast(json_value(DATA, '$.metrics.conversion_rate') AS float64) AS conversion_rate,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_1000_reached') AS float64) AS cost_per_1000_reached,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_add_to_wishlist') AS float64) AS cost_per_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_app_event_add_to_cart') AS float64) AS cost_per_app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_checkout') AS float64) AS cost_per_checkout,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_complete_payment') AS float64) AS cost_per_complete_payment,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_conversion') AS float64) AS cost_per_conversion,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_cta_purchase') AS float64) AS cost_per_cta_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_cta_registration') AS float64) AS cost_per_cta_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_download_start') AS float64) AS cost_per_download_start,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_initiate_checkout') AS float64) AS cost_per_initiate_checkout,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_on_web_add_to_wishlist') AS float64) AS cost_per_on_web_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_page_event_search') AS float64) AS cost_per_page_event_search,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_product_details_page_browse') AS float64) AS cost_per_product_details_page_browse,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_purchase') AS float64) AS cost_per_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_registration') AS float64) AS cost_per_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_result') AS float64) AS cost_per_result,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_secondary_goal_result') AS float64) AS cost_per_secondary_goal_result,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_add_to_wishlist') AS float64) AS cost_per_total_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_app_event_add_to_cart') AS float64) AS cost_per_total_app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_checkout') AS float64) AS cost_per_total_checkout,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_purchase') AS float64) AS cost_per_total_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_registration') AS float64) AS cost_per_total_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_total_view_content') AS float64) AS cost_per_total_view_content,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_user_registration') AS float64) AS cost_per_user_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_view_content') AS float64) AS cost_per_view_content,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_vta_conversion') AS float64) AS cost_per_vta_conversion,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_vta_purchase') AS float64) AS cost_per_vta_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_vta_registration') AS float64) AS cost_per_vta_registration,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_web_event_add_to_cart') AS float64) AS cost_per_web_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.cpc') AS float64) AS cpc,\n            safe_cast(json_value(DATA, '$.metrics.cpm') AS float64) AS cpm,\n            safe_cast(json_value(DATA, '$.metrics.cta_app_install') AS float64) AS cta_app_install,\n            safe_cast(json_value(DATA, '$.metrics.cta_conversion') AS float64) AS cta_conversion,\n            safe_cast(json_value(DATA, '$.metrics.cta_purchase') AS float64) AS cta_purchase,\n            safe_cast(json_value(DATA, '$.metrics.cta_registration') AS float64) AS cta_registration,\n            safe_cast(json_value(DATA, '$.metrics.ctr') AS float64) AS ctr,\n            safe_cast(json_value(DATA, '$.metrics.download_start') AS float64) AS download_start,\n            safe_cast(json_value(DATA, '$.metrics.download_start_rate') AS float64) AS download_start_rate,\n            safe_cast(json_value(DATA, '$.metrics.dpa_target_audience_type') AS float64) AS dpa_target_audience_type,\n            safe_cast(json_value(DATA, '$.metrics.engaged_view') AS float64) AS engaged_view,\n            safe_cast(json_value(DATA, '$.metrics.engaged_view_15s') AS float64) AS engaged_view_15s,\n            safe_cast(json_value(DATA, '$.metrics.follows') AS float64) AS follows,\n            safe_cast(json_value(DATA, '$.metrics.impressions') AS float64) AS impressions,\n            safe_cast(json_value(DATA, '$.metrics.initiate_checkout') AS float64) AS initiate_checkout,\n            safe_cast(json_value(DATA, '$.metrics.initiate_checkout_rate') AS float64) AS initiate_checkout_rate,\n            safe_cast(json_value(DATA, '$.metrics.likes') AS float64) AS likes,\n            safe_cast(json_value(DATA, '$.metrics.on_web_add_to_wishlist') AS float64) AS on_web_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.on_web_add_to_wishlist_per_click') AS float64) AS on_web_add_to_wishlist_per_click,\n            safe_cast(json_value(DATA, '$.metrics.page_event_search') AS float64) AS page_event_search,\n            safe_cast(json_value(DATA, '$.metrics.page_event_search_rate') AS float64) AS page_event_search_rate,\n            safe_cast(json_value(DATA, '$.metrics.product_details_page_browse') AS float64) AS product_details_page_browse,\n            safe_cast(json_value(DATA, '$.metrics.product_details_page_browse_rate') AS float64) AS product_details_page_browse_rate,\n            safe_cast(json_value(DATA, '$.metrics.profile_visits') AS float64) AS profile_visits,\n            safe_cast(json_value(DATA, '$.metrics.purchase') AS float64) AS purchase,\n            safe_cast(json_value(DATA, '$.metrics.purchase_rate') AS float64) AS purchase_rate,\n            safe_cast(json_value(DATA, '$.metrics.reach') AS float64) AS reach,\n            safe_cast(json_value(DATA, '$.metrics.real_time_conversion') AS float64) AS real_time_conversion,\n            safe_cast(json_value(DATA, '$.metrics.real_time_conversion_rate') AS float64) AS real_time_conversion_rate,\n            safe_cast(json_value(DATA, '$.metrics.real_time_cost_per_conversion') AS float64) AS real_time_cost_per_conversion,\n            safe_cast(json_value(DATA, '$.metrics.real_time_cost_per_result') AS float64) AS real_time_cost_per_result,\n            safe_cast(json_value(DATA, '$.metrics.real_time_result') AS float64) AS real_time_result,\n            safe_cast(json_value(DATA, '$.metrics.real_time_result_rate') AS float64) AS real_time_result_rate,\n            safe_cast(json_value(DATA, '$.metrics.registration') AS float64) AS registration,\n            safe_cast(json_value(DATA, '$.metrics.registration_rate') AS float64) AS registration_rate,\n            safe_cast(json_value(DATA, '$.metrics.result') AS float64) AS result,\n            safe_cast(json_value(DATA, '$.metrics.result_rate') AS float64) AS result_rate,\n            safe_cast(json_value(DATA, '$.metrics.sales_lead') AS float64) AS sales_lead,\n            safe_cast(json_value(DATA, '$.metrics.secondary_goal_result') AS float64) AS secondary_goal_result,\n            safe_cast(json_value(DATA, '$.metrics.secondary_goal_result_rate') AS float64) AS secondary_goal_result_rate,\n            safe_cast(json_value(DATA, '$.metrics.shares') AS float64) AS shares,\n            safe_cast(json_value(DATA, '$.metrics.skan_sales_lead') AS float64) AS skan_sales_lead,\n            safe_cast(json_value(DATA, '$.metrics.skan_total_sales_lead') AS float64) AS skan_total_sales_lead,\n            safe_cast(json_value(DATA, '$.metrics.skan_total_sales_lead_value') AS float64) AS skan_total_sales_lead_value,\n            safe_cast(json_value(DATA, '$.metrics.spend') AS float64) AS spend,\n            safe_cast(json_value(DATA, '$.metrics.total_active_pay_roas') AS float64) AS total_active_pay_roas,\n            safe_cast(json_value(DATA, '$.metrics.total_add_to_wishlist') AS float64) AS total_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.total_add_to_wishlist_value') AS float64) AS total_add_to_wishlist_value,\n            safe_cast(json_value(DATA, '$.metrics.total_app_event_add_to_cart') AS float64) AS total_app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.total_app_event_add_to_cart_value') AS float64) AS total_app_event_add_to_cart_value,\n            safe_cast(json_value(DATA, '$.metrics.total_checkout') AS float64) AS total_checkout,\n            safe_cast(json_value(DATA, '$.metrics.total_checkout_value') AS float64) AS total_checkout_value,\n            safe_cast(json_value(DATA, '$.metrics.total_complete_payment_rate') AS float64) AS total_complete_payment_rate,\n            safe_cast(json_value(DATA, '$.metrics.total_download_start_value') AS float64) AS total_download_start_value,\n            safe_cast(json_value(DATA, '$.metrics.total_initiate_checkout_value') AS float64) AS total_initiate_checkout_value,\n            safe_cast(json_value(DATA, '$.metrics.total_on_web_add_to_wishlist_value') AS float64) AS total_on_web_add_to_wishlist_value,\n            safe_cast(json_value(DATA, '$.metrics.total_page_event_search_value') AS float64) AS total_page_event_search_value,\n            safe_cast(json_value(DATA, '$.metrics.total_product_details_page_browse_value') AS float64) AS total_product_details_page_browse_value,\n            safe_cast(json_value(DATA, '$.metrics.total_purchase') AS float64) AS total_purchase,\n            safe_cast(json_value(DATA, '$.metrics.total_purchase_value') AS float64) AS total_purchase_value,\n            safe_cast(json_value(DATA, '$.metrics.total_registration') AS float64) AS total_registration,\n            safe_cast(json_value(DATA, '$.metrics.total_sales_lead') AS float64) AS total_sales_lead,\n            safe_cast(json_value(DATA, '$.metrics.total_sales_lead_value') AS float64) AS total_sales_lead_value,\n            safe_cast(json_value(DATA, '$.metrics.total_user_registration_value') AS float64) AS total_user_registration_value,\n            safe_cast(json_value(DATA, '$.metrics.total_view_content') AS float64) AS total_view_content,\n            safe_cast(json_value(DATA, '$.metrics.total_view_content_value') AS float64) AS total_view_content_value,\n            safe_cast(json_value(DATA, '$.metrics.total_web_event_add_to_cart_value') AS float64) AS total_web_event_add_to_cart_value,\n            safe_cast(json_value(DATA, '$.metrics.user_registration') AS float64) AS user_registration,\n            safe_cast(json_value(DATA, '$.metrics.user_registration_rate') AS float64) AS user_registration_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_checkout') AS float64) AS value_per_checkout,\n            safe_cast(json_value(DATA, '$.metrics.value_per_complete_payment') AS float64) AS value_per_complete_payment,\n            safe_cast(json_value(DATA, '$.metrics.value_per_download_start') AS float64) AS value_per_download_start,\n            safe_cast(json_value(DATA, '$.metrics.value_per_initiate_checkout') AS float64) AS value_per_initiate_checkout,\n            safe_cast(json_value(DATA, '$.metrics.value_per_on_web_add_to_wishlist') AS float64) AS value_per_on_web_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.value_per_page_event_search') AS float64) AS value_per_page_event_search,\n            safe_cast(json_value(DATA, '$.metrics.value_per_product_details_page_browse') AS float64) AS value_per_product_details_page_browse,\n            safe_cast(json_value(DATA, '$.metrics.value_per_total_add_to_wishlist') AS float64) AS value_per_total_add_to_wishlist,\n            safe_cast(json_value(DATA, '$.metrics.value_per_total_app_event_add_to_cart') AS float64) AS value_per_total_app_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.value_per_total_purchase') AS float64) AS value_per_total_purchase,\n            safe_cast(json_value(DATA, '$.metrics.value_per_total_view_content') AS float64) AS value_per_total_view_content,\n            safe_cast(json_value(DATA, '$.metrics.value_per_user_registration') AS float64) AS value_per_user_registration,\n            safe_cast(json_value(DATA, '$.metrics.value_per_web_event_add_to_cart') AS float64) AS value_per_web_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.video_play_actions') AS float64) AS video_play_actions,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p100') AS float64) AS video_views_p100,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p25') AS float64) AS video_views_p25,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p50') AS float64) AS video_views_p50,\n            safe_cast(json_value(DATA, '$.metrics.video_views_p75') AS float64) AS video_views_p75,\n            safe_cast(json_value(DATA, '$.metrics.video_watched_2s') AS float64) AS video_watched_2s,\n            safe_cast(json_value(DATA, '$.metrics.video_watched_6s') AS float64) AS video_watched_6s,\n            safe_cast(json_value(DATA, '$.metrics.view_content') AS float64) AS view_content,\n            safe_cast(json_value(DATA, '$.metrics.view_content_rate') AS float64) AS view_content_rate,\n            safe_cast(json_value(DATA, '$.metrics.vta_app_install') AS float64) AS vta_app_install,\n            safe_cast(json_value(DATA, '$.metrics.vta_conversion') AS float64) AS vta_conversion,\n            safe_cast(json_value(DATA, '$.metrics.vta_purchase') AS float64) AS vta_purchase,\n            safe_cast(json_value(DATA, '$.metrics.vta_registration') AS float64) AS vta_registration,\n            safe_cast(json_value(DATA, '$.metrics.web_event_add_to_cart') AS float64) AS web_event_add_to_cart,\n            safe_cast(json_value(DATA, '$.metrics.web_event_add_to_cart_rate') AS float64) AS web_event_add_to_cart_rate,\n            safe_cast(json_value(DATA, '$.metrics.onsite_shopping_roas') AS float64) AS onsite_shopping_roas,\n            safe_cast(json_value(DATA, '$.metrics.onsite_shopping') AS float64) AS onsite_shopping,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_onsite_shopping') AS float64) AS cost_per_onsite_shopping,\n            safe_cast(json_value(DATA, '$.metrics.onsite_shopping_rate') AS float64) AS onsite_shopping_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_onsite_shopping') AS float64) AS value_per_onsite_shopping,\n            safe_cast(json_value(DATA, '$.metrics.total_onsite_shopping_value') AS float64) AS total_onsite_shopping_value,\n            safe_cast(json_value(DATA, '$.metrics.onsite_initiate_checkout_count') AS float64) AS onsite_initiate_checkout_count,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_onsite_initiate_checkout_count') AS float64) AS cost_per_onsite_initiate_checkout_count,\n            safe_cast(json_value(DATA, '$.metrics.onsite_initiate_checkout_count_rate') AS float64) AS onsite_initiate_checkout_count_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_onsite_initiate_checkout_count') AS float64) AS value_per_onsite_initiate_checkout_count,\n            safe_cast(json_value(DATA, '$.metrics.total_onsite_initiate_checkout_count_value') AS float64) AS total_onsite_initiate_checkout_count_value,\n            safe_cast(json_value(DATA, '$.metrics.onsite_on_web_detail') AS float64) AS onsite_on_web_detail,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_onsite_on_web_detail') AS float64) AS cost_per_onsite_on_web_detail,\n            safe_cast(json_value(DATA, '$.metrics.onsite_on_web_detail_rate') AS float64) AS onsite_on_web_detail_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_onsite_on_web_detail') AS float64) AS value_per_onsite_on_web_detail,\n            safe_cast(json_value(DATA, '$.metrics.total_onsite_on_web_detail_value') AS float64) AS total_onsite_on_web_detail_value,\n            safe_cast(json_value(DATA, '$.metrics.onsite_on_web_cart') AS float64) AS onsite_on_web_cart,\n            safe_cast(json_value(DATA, '$.metrics.cost_per_onsite_on_web_cart') AS float64) AS cost_per_onsite_on_web_cart,\n            safe_cast(json_value(DATA, '$.metrics.onsite_on_web_cart_rate') AS float64) AS onsite_on_web_cart_rate,\n            safe_cast(json_value(DATA, '$.metrics.value_per_onsite_on_web_cart') AS float64) AS value_per_onsite_on_web_cart,\n            safe_cast(json_value(DATA, '$.metrics.total_onsite_on_web_cart_value') AS float64) AS total_onsite_on_web_cart_value,\n            \n    FROM\n        source\n)\nSELECT\n    *\nEXCEPT(stat_time_day),\n    DATE(stat_time_day) AS date\nFROM\n    unnested_keys", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_tiktokads__video_insight": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_tiktokads__video_insight", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/tiktokAds/stg_tiktokads__video_insight.sql", "original_file_path": "models/staging/tiktokAds/stg_tiktokads__video_insight.sql", "unique_id": "model.sado_analytics_services.stg_tiktokads__video_insight", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "stg_tiktokads__video_insight"], "alias": "stg_tiktokads__video_insight", "checksum": {"name": "sha256", "checksum": "550794f22f0965f2cd2d08cc416fc475645aa029093915a482e704192c78d3ea"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "tiktok"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "tiktok"], "description": "The model that extracts data from the Tiktok API. It contains information about video insights from TikTok ads.", "columns": {"country_code": {"name": "country_code", "description": "This is a JSON column that contains the country code associated with the ad. The data is extracted from the 'info.country_code' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "create_time": {"name": "create_time", "description": "This is a STRING column that contains the time when the ad was created. The data is extracted from the 'info.create_time' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "currency": {"name": "currency", "description": "This is a STRING column that contains the currency used for the ad. The data is extracted from the 'info.currency' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "identity": {"name": "identity", "description": "This column represents the unique identifier of the ad campaign. It is extracted from the 'identity' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "material_id": {"name": "material_id", "description": "This column represents the unique identifier of the ad material. It is extracted from the 'material_id' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "material_name": {"name": "material_name", "description": "This column represents the name of the ad material. It is extracted from the 'material_name' field in the source data.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "placement": {"name": "placement", "description": "A JSON array that contains the placement information of the ad. This can include details such as the platform (e.g., TikTok, Vigo Video), the location (e.g., feed, detail page), and the device (e.g., mobile, tablet).", "meta": {"dimension": {"type": "string"}}, "data_type": "JSON", "constraints": [], "quote": null, "tags": []}, "video_material_source": {"name": "video_material_source", "description": "A string that indicates the source of the video material used in the ad. This can be a URL or a reference to a file stored in a specific location.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "A float64 value that represents the number of clicks the ad received. This metric is used to measure the engagement of the ad.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "conversion": {"name": "conversion", "description": "The 'conversion' column represents the total number of conversions that have occurred. A conversion is defined as a user completing a desired action after clicking on an ad, such as making a purchase or signing up for a newsletter. This column is of FLOAT64 data type.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "conversion_rate_v2": {"name": "conversion_rate_v2", "description": "The 'conversion_rate_v2' column represents the conversion rate of the ad. It is calculated by dividing the number of conversions by the total number of clicks and multiplying by 100 to get a percentage. This column is of FLOAT64 data type.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "The 'cost_per_conversion' column represents the average cost per conversion. It is calculated by dividing the total ad spend by the number of conversions. This column is of FLOAT64 data type.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cpc": {"name": "cpc", "description": "The 'cpc' column represents the Cost Per Click. It is the amount of money spent for each click in your pay-per-click (PPC) marketing campaigns. This is calculated by dividing the total cost of your clicks by the total number of clicks. The data type of this column is FLOAT64.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cpm": {"name": "cpm", "description": "The 'cpm' column stands for Cost Per Mille, also known as Cost Per Thousand Impressions. This metric tells you how much it costs to receive 1,000 impressions on one advertisement. The data type of this column is FLOAT64.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "ctr": {"name": "ctr", "description": "The 'ctr' column represents the Click Through Rate. It is the ratio of users who click on a specific link to the number of total users who view a page, email, or advertisement. It is commonly used to measure the success of an online advertising campaign. The data type of this column is FLOAT64.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "The 'impressions' column represents the total number of times the ad was shown to users. It is extracted from the 'metrics' section of the source data and is cast to FLOAT64 data type.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "organic_video_views": {"name": "organic_video_views", "description": "The 'organic_video_views' column indicates the number of times the video ad was viewed organically, i.e., not through paid promotions. This data is also extracted from the 'metrics' section of the source data and is cast to FLOAT64 data type.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "The 'spend' column represents the total amount of money spent on the ad campaign. This is also extracted from the 'metrics' section of the source data and is cast to FLOAT64 data type.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "This is a timestamp column that indicates when the data was batched for processing. It is used to order the data and select the most recent record for each material_id in the final output of the model.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "TIMESTAMP", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/tiktokAds/stg_tiktokads__video_insight.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "tiktok"]}, "created_at": 1732268181.1232004, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__video_insight`", "raw_code": "{{ config(\n    tags = ['view','tiktok']\n) }}\n\nWITH source AS (\n    SELECT\n        json_extract_array(data, '$.info.country_code') AS country_code,\n        json_value(data, '$.info.create_time') AS create_time,\n        json_value(data, '$.info.currency') AS currency,\n        json_value(data, '$.info.identity') AS identity,\n        json_value(data, '$.info.material_id') AS material_id,\n        json_value(data, '$.info.material_name') AS material_name,\n        json_extract_array(data, '$.info.placement') AS placement,\n        json_value(data, '$.info.video_material_source') AS video_material_source,\n        safe_cast(json_value(data, '$.metrics.clicks') as float64) AS clicks,\n        safe_cast(json_value(data, '$.metrics.conversion') as float64) AS conversion,\n        safe_cast(json_value(data, '$.metrics.conversion_rate_v2') as float64) AS conversion_rate_v2,\n        safe_cast(json_value(data, '$.metrics.cost_per_conversion') as float64) AS cost_per_conversion,\n        safe_cast(json_value(data, '$.metrics.cpc') as float64) AS cpc,\n        safe_cast(json_value(data, '$.metrics.cpm') as float64) AS cpm,\n        safe_cast(json_value(data, '$.metrics.ctr') as float64) AS ctr,\n        safe_cast(json_value(data, '$.metrics.impressions') as float64) AS impressions,\n        safe_cast(json_value(data, '$.metrics.organic_video_views') as float64) AS organic_video_views,\n        safe_cast(json_value(data, '$.metrics.spend') as float64) AS spend,\n        _batched_at,\n    FROM\n        {{ source('tiktok','video_insight') }}\n) \n\n{{ dbt_utils.deduplicate(\n    relation = \"source\",\n    partition_by = \"material_id\",\n    order_by = \"_batched_at desc\"\n) }}", "language": "sql", "refs": [], "sources": [["tiktok", "video_insight"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.tiktok.video_insight"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/tiktokAds/stg_tiktokads__video_insight.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    SELECT\n        json_extract_array(data, '$.info.country_code') AS country_code,\n        json_value(data, '$.info.create_time') AS create_time,\n        json_value(data, '$.info.currency') AS currency,\n        json_value(data, '$.info.identity') AS identity,\n        json_value(data, '$.info.material_id') AS material_id,\n        json_value(data, '$.info.material_name') AS material_name,\n        json_extract_array(data, '$.info.placement') AS placement,\n        json_value(data, '$.info.video_material_source') AS video_material_source,\n        safe_cast(json_value(data, '$.metrics.clicks') as float64) AS clicks,\n        safe_cast(json_value(data, '$.metrics.conversion') as float64) AS conversion,\n        safe_cast(json_value(data, '$.metrics.conversion_rate_v2') as float64) AS conversion_rate_v2,\n        safe_cast(json_value(data, '$.metrics.cost_per_conversion') as float64) AS cost_per_conversion,\n        safe_cast(json_value(data, '$.metrics.cpc') as float64) AS cpc,\n        safe_cast(json_value(data, '$.metrics.cpm') as float64) AS cpm,\n        safe_cast(json_value(data, '$.metrics.ctr') as float64) AS ctr,\n        safe_cast(json_value(data, '$.metrics.impressions') as float64) AS impressions,\n        safe_cast(json_value(data, '$.metrics.organic_video_views') as float64) AS organic_video_views,\n        safe_cast(json_value(data, '$.metrics.spend') as float64) AS spend,\n        _batched_at,\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_video_insight__*`\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by material_id\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_tiktokads__creative_report": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_tiktokads__creative_report", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/tiktokAds/stg_tiktokads__creative_report.sql", "original_file_path": "models/staging/tiktokAds/stg_tiktokads__creative_report.sql", "unique_id": "model.sado_analytics_services.stg_tiktokads__creative_report", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "stg_tiktokads__creative_report"], "alias": "stg_tiktokads__creative_report", "checksum": {"name": "sha256", "checksum": "938c7635ecc5fa2421031cad3eaff39f1c9520e02030a696fb88367e26532c59"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["view", "tiktok"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["view", "tiktok"], "description": "The model is a staging model that extracts data from the Tiktok creative report. It includes metrics related to ad creative performance", "columns": {"image_id": {"name": "image_id", "description": "The unique identifier for the image used in the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "material_id": {"name": "material_id", "description": "The unique identifier for the material or content used in the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "page_id": {"name": "page_id", "description": "The unique identifier for the page where the ad is displayed.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "video_id": {"name": "video_id", "description": "The unique identifier for the video content associated with the ad.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "add_to_wishlist": {"name": "add_to_wishlist", "description": "The total number of times users have added the product to their wishlist after viewing the ad.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "add_to_wishlist_rate": {"name": "add_to_wishlist_rate", "description": "The rate at which users add the product to their wishlist after viewing the ad, calculated as the number of 'add to wishlist' actions divided by the total number of ad views.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "app_event_add_to_cart": {"name": "app_event_add_to_cart", "description": "This column represents the total number of 'add to cart' events that occurred within the app.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "app_event_add_to_cart_rate": {"name": "app_event_add_to_cart_rate", "description": "This column represents the rate of 'add to cart' events that occurred within the app. It is calculated by dividing the total number of 'add to cart' events by the total number of app events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "average_video_play": {"name": "average_video_play", "description": "This column represents the average duration of video plays. It is calculated by dividing the total duration of all video plays by the total number of video plays.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "checkout": {"name": "checkout", "description": "The 'checkout' column represents the total number of checkouts that have occurred. This is an integer value that is extracted from the 'metrics.checkout' field in the source data.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "checkout_rate": {"name": "checkout_rate", "description": "The 'checkout_rate' column represents the rate of checkouts. This is a floating point value that is calculated as the number of checkouts divided by the total number of sessions. It is extracted from the 'metrics.checkout_rate' field in the source data.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "The 'clicks' column represents the total number of clicks that have occurred. This is an integer value that is extracted from the 'metrics.clicks' field in the source data.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "complete_payment": {"name": "complete_payment", "description": "This column represents the total number of completed payments. It is derived from the 'complete_payment' metric in the source data.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "complete_payment_rate": {"name": "complete_payment_rate", "description": "This column represents the rate of completed payments. It is calculated by dividing the number of completed payments by the total number of transactions. It is derived from the 'complete_payment_rate' metric in the source data.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "conversion": {"name": "conversion", "description": "This column represents the total number of conversions. A conversion is defined as a completed action that is beneficial to the business, such as a purchase or a sign-up. It is derived from the 'conversion' metric in the source data.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "conversion_rate": {"name": "conversion_rate", "description": "The conversion rate is the percentage of users who take a desired action. The archetypical example of conversion rate is the percentage of website visitors who buy something on the site.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_add_to_wishlist": {"name": "cost_per_add_to_wishlist", "description": "This is the average amount of money spent for each add to wishlist action. It is calculated by dividing the total amount spent by the number of adds to wishlist.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_app_event_add_to_cart": {"name": "cost_per_app_event_add_to_cart", "description": "This is the average amount of money spent for each add to cart event in the app. It is calculated by dividing the total amount spent by the number of add to cart events in the app.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_checkout": {"name": "cost_per_checkout", "description": "This column represents the average cost incurred for each checkout event. It is calculated by dividing the total ad spend by the number of checkout events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_complete_payment": {"name": "cost_per_complete_payment", "description": "This column represents the average cost incurred for each complete payment event. It is calculated by dividing the total ad spend by the number of complete payment events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "This column represents the average cost incurred for each conversion event. It is calculated by dividing the total ad spend by the number of conversion events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_download_start": {"name": "cost_per_download_start", "description": "This column represents the cost incurred per download start. It is calculated by dividing the total cost by the number of download starts. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_initiate_checkout": {"name": "cost_per_initiate_checkout", "description": "This column represents the cost incurred per initiation of checkout. It is calculated by dividing the total cost by the number of initiated checkouts. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_page_event_search": {"name": "cost_per_page_event_search", "description": "This column represents the cost incurred per page event search. It is calculated by dividing the total cost by the number of page event searches. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_product_details_page_browse": {"name": "cost_per_product_details_page_browse", "description": "This column represents the cost incurred per product details page browse event. It is calculated by dividing the total cost by the number of product details page browse events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_purchase": {"name": "cost_per_purchase", "description": "This column represents the cost incurred per purchase event. It is calculated by dividing the total cost by the number of purchase events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_registration": {"name": "cost_per_registration", "description": "This column represents the cost incurred per registration event. It is calculated by dividing the total cost by the number of registration events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_total_add_to_wishlist": {"name": "cost_per_total_add_to_wishlist", "description": "This column represents the total cost incurred per 'add to wishlist' event. It is calculated by dividing the total spend by the total number of 'add to wishlist' events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_total_app_event_add_to_cart": {"name": "cost_per_total_app_event_add_to_cart", "description": "This column represents the total cost incurred per 'add to cart' event in the app. It is calculated by dividing the total spend by the total number of 'add to cart' events in the app.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_total_checkout": {"name": "cost_per_total_checkout", "description": "This column represents the total cost incurred per checkout event. It is calculated by dividing the total spend by the total number of checkout events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_total_purchase": {"name": "cost_per_total_purchase", "description": "This column represents the total cost per purchase made. It is calculated by dividing the total cost by the total number of purchases. This metric is useful for understanding the efficiency of the advertising spend in terms of generating purchases.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_total_registration": {"name": "cost_per_total_registration", "description": "This column represents the total cost per user registration. It is calculated by dividing the total cost by the total number of user registrations. This metric is useful for understanding the efficiency of the advertising spend in terms of generating user registrations.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_total_view_content": {"name": "cost_per_total_view_content", "description": "This column represents the total cost per content view. It is calculated by dividing the total cost by the total number of content views. This metric is useful for understanding the efficiency of the advertising spend in terms of generating content views.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_user_registration": {"name": "cost_per_user_registration", "description": "This column represents the cost incurred per user registration. It is calculated by dividing the total cost by the number of user registrations. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_view_content": {"name": "cost_per_view_content", "description": "This column represents the cost incurred per content view. It is calculated by dividing the total cost by the number of content views. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cost_per_web_event_add_to_cart": {"name": "cost_per_web_event_add_to_cart", "description": "This column represents the cost incurred per 'add to cart' event on the web. It is calculated by dividing the total cost by the number of 'add to cart' events on the web. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cpc": {"name": "cpc", "description": "The 'cpc' column represents the Cost Per Click. It is the amount spent for each click on the ad.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "cpm": {"name": "cpm", "description": "The 'cpm' column represents the Cost Per Mille (thousand impressions). It is the amount spent for every thousand impressions the ad receives.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "ctr": {"name": "ctr", "description": "The 'ctr' column represents the Click Through Rate. It is the ratio of users who click on the ad to the number of total users who viewed the ad.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "download_start_rate": {"name": "download_start_rate", "description": "The download_start_rate column represents the rate at which users start downloading the advertised app or content. It is calculated by dividing the number of download starts by the total number of impressions. The value is represented as a float.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "The impressions column represents the total number of times the ad was shown to users. Each time an ad is displayed on a user's screen, it counts as one impression. The value is represented as an integer.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "initiate_checkout": {"name": "initiate_checkout", "description": "The initiate_checkout column represents the total number of times users initiated the checkout process after viewing the ad. This includes instances where the user may not have completed the purchase. The value is represented as an integer.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "initiate_checkout_rate": {"name": "initiate_checkout_rate", "description": "This column represents the rate at which users initiate the checkout process after viewing an ad. It is calculated by dividing the number of users who initiate checkout by the total number of users who viewed the ad. The value is represented as a float.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "page_event_search": {"name": "page_event_search", "description": "This column represents the total number of search events that occurred on the page after an ad was viewed. A search event is defined as a user performing a search action on the page. The value is represented as an integer.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "page_event_search_rate": {"name": "page_event_search_rate", "description": "This column represents the rate at which search events occur on the page after an ad is viewed. It is calculated by dividing the number of search events by the total number of users who viewed the ad. The value is represented as a float.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "product_details_page_browse": {"name": "product_details_page_browse", "description": "This column represents the total number of times users have browsed the product details page.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "product_details_page_browse_rate": {"name": "product_details_page_browse_rate", "description": "This column represents the rate at which users browse the product details page. It is calculated by dividing the number of product details page browses by the total number of page views.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "purchase": {"name": "purchase", "description": "This column represents the total number of purchases made by users.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "purchase_rate": {"name": "purchase_rate", "description": "The purchase_rate column represents the rate at which purchases are made. It is calculated by dividing the number of purchases by the total number of impressions. The value is represented as a float.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "registration": {"name": "registration", "description": "The registration column represents the total number of registrations. It is an integer value that counts the number of users who have registered.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "registration_rate": {"name": "registration_rate", "description": "The registration_rate column represents the rate at which registrations are made. It is calculated by dividing the number of registrations by the total number of impressions. The value is represented as a float.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "sales_lead": {"name": "sales_lead", "description": "The 'sales_lead' column represents the number of potential customers who have shown interest in the product or service.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "The 'spend' column indicates the total amount of money spent on advertising.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_add_to_wishlist": {"name": "total_add_to_wishlist", "description": "The 'total_add_to_wishlist' column shows the total number of times users have added the product to their wishlist.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_add_to_wishlist_value": {"name": "total_add_to_wishlist_value", "description": "This column represents the total value of all items added to the wishlist. It is calculated by summing up the value of each item added to the wishlist.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_app_event_add_to_cart": {"name": "total_app_event_add_to_cart", "description": "This column represents the total number of 'add to cart' events that occurred within the app. It is calculated by counting the number of times users added items to their cart in the app.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_app_event_add_to_cart_value": {"name": "total_app_event_add_to_cart_value", "description": "This column represents the total value of all 'add to cart' events that occurred within the app. It is calculated by summing up the value of each item added to the cart in the app.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_checkout": {"name": "total_checkout", "description": "The total number of checkouts initiated by users for the given ad campaign. This includes both completed and abandoned checkouts.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_checkout_value": {"name": "total_checkout_value", "description": "The total monetary value associated with the checkouts initiated by users for the given ad campaign. This value is calculated based on the product prices at the time of checkout.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_complete_payment_rate": {"name": "total_complete_payment_rate", "description": "The rate at which users complete the payment process after initiating a checkout for the given ad campaign. This is calculated as the ratio of completed payments to total checkouts initiated.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_download_start_value": {"name": "total_download_start_value", "description": "This column represents the total value generated from the start of downloads. It is calculated by summing up the value of all initiated downloads.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_initiate_checkout_value": {"name": "total_initiate_checkout_value", "description": "This column represents the total value generated from the initiation of checkouts. It is calculated by summing up the value of all initiated checkouts.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_page_event_search_value": {"name": "total_page_event_search_value", "description": "This column represents the total value generated from page event searches. It is calculated by summing up the value of all page event searches.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_product_details_page_browse_value": {"name": "total_product_details_page_browse_value", "description": "The total value associated with the browsing of product details pages. This is calculated by summing up the value of all individual browsing actions on product details pages.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_purchase": {"name": "total_purchase", "description": "The total number of purchases made. This is calculated by summing up all individual purchase actions.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_purchase_value": {"name": "total_purchase_value", "description": "The total value associated with all purchases. This is calculated by summing up the value of all individual purchase actions.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_registration": {"name": "total_registration", "description": "This column represents the total number of user registrations. It is derived from the 'metrics.total_registration' field in the source data.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_sales_lead": {"name": "total_sales_lead", "description": "This column represents the total number of sales leads. It is derived from the 'metrics.total_sales_lead' field in the source data.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_sales_lead_value": {"name": "total_sales_lead_value", "description": "This column represents the total value of sales leads. It is derived from the 'metrics.total_sales_lead_value' field in the source data.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_user_registration_value": {"name": "total_user_registration_value", "description": "This column represents the total value associated with user registrations. It is calculated by summing up the value of all user registrations.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_view_content": {"name": "total_view_content", "description": "This column represents the total count of content views. It is calculated by summing up the number of times content was viewed.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "total_view_content_value": {"name": "total_view_content_value", "description": "This column represents the total value associated with content views. It is calculated by summing up the value of all content views.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "total_web_event_add_to_cart_value": {"name": "total_web_event_add_to_cart_value", "description": "This column represents the total value of all web events where a product was added to the cart. It is calculated by summing up the value of all individual 'add to cart' events on the web platform.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "user_registration": {"name": "user_registration", "description": "This column represents the total number of user registrations. It is calculated by counting the number of unique users who have registered on the platform.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "user_registration_rate": {"name": "user_registration_rate", "description": "This column represents the rate of user registrations. It is calculated by dividing the total number of user registrations by the total number of users who visited the platform.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_checkout": {"name": "value_per_checkout", "description": "This column represents the average value generated per checkout event. It is calculated by dividing the total value generated by the number of checkout events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_complete_payment": {"name": "value_per_complete_payment", "description": "This column represents the average value generated per completed payment event. It is calculated by dividing the total value generated by the number of completed payment events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_download_start": {"name": "value_per_download_start", "description": "This column represents the average value generated per download start event. It is calculated by dividing the total value generated by the number of download start events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_initiate_checkout": {"name": "value_per_initiate_checkout", "description": "This column represents the average value generated per initiated checkout event. It is calculated by dividing the total value generated from all initiated checkouts by the total number of initiated checkouts.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_page_event_search": {"name": "value_per_page_event_search", "description": "This column represents the average value generated per page event search. It is calculated by dividing the total value generated from all page event searches by the total number of page event searches.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_product_details_page_browse": {"name": "value_per_product_details_page_browse", "description": "This column represents the average value generated per product details page browse event. It is calculated by dividing the total value generated from all product details page browses by the total number of product details page browses.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_total_add_to_wishlist": {"name": "value_per_total_add_to_wishlist", "description": "This column represents the total value per 'add to wishlist' event. It is calculated by dividing the total value of all 'add to wishlist' events by the total number of such events. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_total_app_event_add_to_cart": {"name": "value_per_total_app_event_add_to_cart", "description": "This column represents the total value per 'add to cart' event in the app. It is calculated by dividing the total value of all 'add to cart' events in the app by the total number of such events. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_total_purchase": {"name": "value_per_total_purchase", "description": "This column represents the total value per purchase. It is calculated by dividing the total value of all purchases by the total number of purchases. The value is represented as a floating point number.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_total_view_content": {"name": "value_per_total_view_content", "description": "This column represents the value per total view content. It is calculated by dividing the total value generated from all content views by the total number of content views. This metric helps in understanding the value generated per content view.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_user_registration": {"name": "value_per_user_registration", "description": "This column represents the value per user registration. It is calculated by dividing the total value generated from all user registrations by the total number of user registrations. This metric helps in understanding the value generated per user registration.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "value_per_web_event_add_to_cart": {"name": "value_per_web_event_add_to_cart", "description": "This column represents the value per web event add to cart. It is calculated by dividing the total value generated from all add to cart events on the web by the total number of add to cart events on the web. This metric helps in understanding the value generated per add to cart event on the web.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "video_play_actions": {"name": "video_play_actions", "description": "The 'video_play_actions' column represents the total number of times a video was played in the ad.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "video_views_p100": {"name": "video_views_p100", "description": "The 'video_views_p100' column represents the total number of times a video was viewed completely (100%) in the ad.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "video_views_p25": {"name": "video_views_p25", "description": "The 'video_views_p25' column represents the total number of times a video was viewed at least 25% in the ad.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "video_views_p50": {"name": "video_views_p50", "description": "This column represents the number of times a video has been viewed at least 50% of its total duration.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "video_views_p75": {"name": "video_views_p75", "description": "This column represents the number of times a video has been viewed at least 75% of its total duration.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "video_watched_2s": {"name": "video_watched_2s", "description": "This column represents the number of times a video has been watched for at least 2 seconds.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "video_watched_6s": {"name": "video_watched_6s", "description": "This column represents the number of times a video was watched for at least 6 seconds.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "view_content": {"name": "view_content", "description": "This column represents the total number of content views.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "view_content_rate": {"name": "view_content_rate", "description": "This column represents the rate of content views, calculated as the number of content views divided by the total number of impressions.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "web_event_add_to_cart": {"name": "web_event_add_to_cart", "description": "This column represents the total number of 'add to cart' events that occurred on the web platform for a specific ad.", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "web_event_add_to_cart_rate": {"name": "web_event_add_to_cart_rate", "description": "This column represents the rate of 'add to cart' events that occurred on the web platform for a specific ad. It is calculated by dividing the number of 'add to cart' events by the total number of events.", "meta": {"dimension": {"type": "number"}}, "data_type": "FLOAT64", "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "This column represents the timestamp at which the data was batched and loaded into the database.", "meta": {"dimension": {"type": "timestamp"}}, "data_type": "TIMESTAMP", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/tiktokAds/stg_tiktokads__creative_report.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["view", "tiktok"]}, "created_at": 1732268181.2528427, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__creative_report`", "raw_code": "{{ config(\n    tags = ['view','tiktok']\n) }}\n\nWITH source AS (\n    SELECT\n        json_value(data, '$.info.image_id') AS image_id,\n        json_value(data, '$.info.material_id') AS material_id,\n        json_value(data, '$.info.page_id') AS page_id,\n        json_value(data, '$.info.video_id') AS video_id,\n        SAFE_CAST(json_value(data, '$.metrics.add_to_wishlist') AS INT64) AS add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.add_to_wishlist_rate') AS FLOAT64) AS add_to_wishlist_rate,\n        SAFE_CAST(json_value(data, '$.metrics.app_event_add_to_cart') AS INT64) AS app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.app_event_add_to_cart_rate') AS FLOAT64) AS app_event_add_to_cart_rate,\n        SAFE_CAST(json_value(data, '$.metrics.average_video_play') AS FLOAT64) AS average_video_play,\n        SAFE_CAST(json_value(data, '$.metrics.checkout') AS INT64) AS checkout,\n        SAFE_CAST(json_value(data, '$.metrics.checkout_rate') AS FLOAT64) AS checkout_rate,\n        SAFE_CAST(json_value(data, '$.metrics.clicks') AS INT64) AS clicks,\n        SAFE_CAST(json_value(data, '$.metrics.complete_payment') AS INT64) AS complete_payment,\n        SAFE_CAST(json_value(data, '$.metrics.complete_payment_rate') AS FLOAT64) AS complete_payment_rate,\n        SAFE_CAST(json_value(data, '$.metrics.conversion') AS INT64) AS conversion,\n        SAFE_CAST(json_value(data, '$.metrics.conversion_rate') AS FLOAT64) AS conversion_rate,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_add_to_wishlist') AS FLOAT64) AS cost_per_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_app_event_add_to_cart') AS FLOAT64) AS cost_per_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_checkout') AS FLOAT64) AS cost_per_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_complete_payment') AS FLOAT64) AS cost_per_complete_payment,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_conversion') AS FLOAT64) AS cost_per_conversion,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_download_start') AS FLOAT64) AS cost_per_download_start,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_initiate_checkout') AS FLOAT64) AS cost_per_initiate_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_page_event_search') AS FLOAT64) AS cost_per_page_event_search,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_product_details_page_browse') AS FLOAT64) AS cost_per_product_details_page_browse,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_purchase') AS FLOAT64) AS cost_per_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_registration') AS FLOAT64) AS cost_per_registration,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_add_to_wishlist') AS FLOAT64) AS cost_per_total_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_app_event_add_to_cart') AS FLOAT64) AS cost_per_total_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_checkout') AS FLOAT64) AS cost_per_total_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_purchase') AS FLOAT64) AS cost_per_total_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_registration') AS FLOAT64) AS cost_per_total_registration,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_view_content') AS FLOAT64) AS cost_per_total_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_user_registration') AS FLOAT64) AS cost_per_user_registration,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_view_content') AS FLOAT64) AS cost_per_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_web_event_add_to_cart') AS FLOAT64) AS cost_per_web_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.cpc') AS FLOAT64) AS cpc,\n        SAFE_CAST(json_value(data, '$.metrics.cpm') AS FLOAT64) AS cpm,\n        SAFE_CAST(json_value(data, '$.metrics.ctr') AS FLOAT64) AS ctr,\n        SAFE_CAST(json_value(data, '$.metrics.download_start_rate') AS FLOAT64) AS download_start_rate,\n        SAFE_CAST(json_value(data, '$.metrics.impressions') AS INT64) AS impressions,\n        SAFE_CAST(json_value(data, '$.metrics.initiate_checkout') AS INT64) AS initiate_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.initiate_checkout_rate') AS FLOAT64) AS initiate_checkout_rate,\n        SAFE_CAST(json_value(data, '$.metrics.page_event_search') AS INT64) AS page_event_search,\n        SAFE_CAST(json_value(data, '$.metrics.page_event_search_rate') AS FLOAT64) AS page_event_search_rate,\n        SAFE_CAST(json_value(data, '$.metrics.product_details_page_browse') AS INT64) AS product_details_page_browse,\n        SAFE_CAST(json_value(data, '$.metrics.product_details_page_browse_rate') AS FLOAT64) AS product_details_page_browse_rate,\n        SAFE_CAST(json_value(data, '$.metrics.purchase') AS INT64) AS purchase,\n        SAFE_CAST(json_value(data, '$.metrics.purchase_rate') AS FLOAT64) AS purchase_rate,\n        SAFE_CAST(json_value(data, '$.metrics.registration') AS INT64) AS registration,\n        SAFE_CAST(json_value(data, '$.metrics.registration_rate') AS FLOAT64) AS registration_rate,\n        SAFE_CAST(json_value(data, '$.metrics.sales_lead') AS INT64) AS sales_lead,\n        SAFE_CAST(json_value(data, '$.metrics.spend') AS FLOAT64) AS spend,\n        SAFE_CAST(json_value(data, '$.metrics.total_add_to_wishlist') AS INT64) AS total_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.total_add_to_wishlist_value') AS FLOAT64) AS total_add_to_wishlist_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_app_event_add_to_cart') AS INT64) AS total_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.total_app_event_add_to_cart_value') AS FLOAT64) AS total_app_event_add_to_cart_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_checkout') AS INT64) AS total_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.total_checkout_value') AS FLOAT64) AS total_checkout_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_complete_payment_rate') AS FLOAT64) AS total_complete_payment_rate,\n        SAFE_CAST(json_value(data, '$.metrics.total_download_start_value') AS FLOAT64) AS total_download_start_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_initiate_checkout_value') AS FLOAT64) AS total_initiate_checkout_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_page_event_search_value') AS FLOAT64) AS total_page_event_search_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_product_details_page_browse_value') AS FLOAT64) AS total_product_details_page_browse_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_purchase') AS INT64) AS total_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.total_purchase_value') AS FLOAT64) AS total_purchase_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_registration') AS INT64) AS total_registration,\n        SAFE_CAST(json_value(data, '$.metrics.total_sales_lead') AS INT64) AS total_sales_lead,\n        SAFE_CAST(json_value(data, '$.metrics.total_sales_lead_value') AS FLOAT64) AS total_sales_lead_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_user_registration_value') AS FLOAT64) AS total_user_registration_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_view_content') AS INT64) AS total_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.total_view_content_value') AS FLOAT64) AS total_view_content_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_web_event_add_to_cart_value') AS FLOAT64) AS total_web_event_add_to_cart_value,\n        SAFE_CAST(json_value(data, '$.metrics.user_registration') AS INT64) AS user_registration,\n        SAFE_CAST(json_value(data, '$.metrics.user_registration_rate') AS FLOAT64) AS user_registration_rate,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_checkout') AS FLOAT64) AS value_per_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_complete_payment') AS FLOAT64) AS value_per_complete_payment,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_download_start') AS FLOAT64) AS value_per_download_start,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_initiate_checkout') AS FLOAT64) AS value_per_initiate_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_page_event_search') AS FLOAT64) AS value_per_page_event_search,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_product_details_page_browse') AS FLOAT64) AS value_per_product_details_page_browse,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_add_to_wishlist') AS FLOAT64) AS value_per_total_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_app_event_add_to_cart') AS FLOAT64) AS value_per_total_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_purchase') AS FLOAT64) AS value_per_total_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_view_content') AS FLOAT64) AS value_per_total_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_user_registration') AS FLOAT64) AS value_per_user_registration,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_web_event_add_to_cart') AS FLOAT64) AS value_per_web_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.video_play_actions') AS INT64) AS video_play_actions,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p100') AS INT64) AS video_views_p100,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p25') AS INT64) AS video_views_p25,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p50') AS INT64) AS video_views_p50,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p75') AS INT64) AS video_views_p75,\n        SAFE_CAST(json_value(data, '$.metrics.video_watched_2s') AS INT64) AS video_watched_2s,\n        SAFE_CAST(json_value(data, '$.metrics.video_watched_6s') AS INT64) AS video_watched_6s,\n        SAFE_CAST(json_value(data, '$.metrics.view_content') AS INT64) AS view_content,\n        SAFE_CAST(json_value(data, '$.metrics.view_content_rate') AS FLOAT64) AS view_content_rate,\n        SAFE_CAST(json_value(data, '$.metrics.web_event_add_to_cart') AS INT64) AS web_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.web_event_add_to_cart_rate') AS FLOAT64) AS web_event_add_to_cart_rate,\n        _batched_at\n    FROM\n        {{source('tiktok','creative_report')}}\n\n) \n\n{{ dbt_utils.deduplicate(\n    relation = \"source\",\n    partition_by = \"material_id\",\n    order_by = \"_batched_at desc\"\n) }}", "language": "sql", "refs": [], "sources": [["tiktok", "creative_report"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.tiktok.creative_report"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/tiktokAds/stg_tiktokads__creative_report.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    SELECT\n        json_value(data, '$.info.image_id') AS image_id,\n        json_value(data, '$.info.material_id') AS material_id,\n        json_value(data, '$.info.page_id') AS page_id,\n        json_value(data, '$.info.video_id') AS video_id,\n        SAFE_CAST(json_value(data, '$.metrics.add_to_wishlist') AS INT64) AS add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.add_to_wishlist_rate') AS FLOAT64) AS add_to_wishlist_rate,\n        SAFE_CAST(json_value(data, '$.metrics.app_event_add_to_cart') AS INT64) AS app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.app_event_add_to_cart_rate') AS FLOAT64) AS app_event_add_to_cart_rate,\n        SAFE_CAST(json_value(data, '$.metrics.average_video_play') AS FLOAT64) AS average_video_play,\n        SAFE_CAST(json_value(data, '$.metrics.checkout') AS INT64) AS checkout,\n        SAFE_CAST(json_value(data, '$.metrics.checkout_rate') AS FLOAT64) AS checkout_rate,\n        SAFE_CAST(json_value(data, '$.metrics.clicks') AS INT64) AS clicks,\n        SAFE_CAST(json_value(data, '$.metrics.complete_payment') AS INT64) AS complete_payment,\n        SAFE_CAST(json_value(data, '$.metrics.complete_payment_rate') AS FLOAT64) AS complete_payment_rate,\n        SAFE_CAST(json_value(data, '$.metrics.conversion') AS INT64) AS conversion,\n        SAFE_CAST(json_value(data, '$.metrics.conversion_rate') AS FLOAT64) AS conversion_rate,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_add_to_wishlist') AS FLOAT64) AS cost_per_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_app_event_add_to_cart') AS FLOAT64) AS cost_per_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_checkout') AS FLOAT64) AS cost_per_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_complete_payment') AS FLOAT64) AS cost_per_complete_payment,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_conversion') AS FLOAT64) AS cost_per_conversion,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_download_start') AS FLOAT64) AS cost_per_download_start,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_initiate_checkout') AS FLOAT64) AS cost_per_initiate_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_page_event_search') AS FLOAT64) AS cost_per_page_event_search,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_product_details_page_browse') AS FLOAT64) AS cost_per_product_details_page_browse,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_purchase') AS FLOAT64) AS cost_per_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_registration') AS FLOAT64) AS cost_per_registration,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_add_to_wishlist') AS FLOAT64) AS cost_per_total_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_app_event_add_to_cart') AS FLOAT64) AS cost_per_total_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_checkout') AS FLOAT64) AS cost_per_total_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_purchase') AS FLOAT64) AS cost_per_total_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_registration') AS FLOAT64) AS cost_per_total_registration,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_total_view_content') AS FLOAT64) AS cost_per_total_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_user_registration') AS FLOAT64) AS cost_per_user_registration,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_view_content') AS FLOAT64) AS cost_per_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.cost_per_web_event_add_to_cart') AS FLOAT64) AS cost_per_web_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.cpc') AS FLOAT64) AS cpc,\n        SAFE_CAST(json_value(data, '$.metrics.cpm') AS FLOAT64) AS cpm,\n        SAFE_CAST(json_value(data, '$.metrics.ctr') AS FLOAT64) AS ctr,\n        SAFE_CAST(json_value(data, '$.metrics.download_start_rate') AS FLOAT64) AS download_start_rate,\n        SAFE_CAST(json_value(data, '$.metrics.impressions') AS INT64) AS impressions,\n        SAFE_CAST(json_value(data, '$.metrics.initiate_checkout') AS INT64) AS initiate_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.initiate_checkout_rate') AS FLOAT64) AS initiate_checkout_rate,\n        SAFE_CAST(json_value(data, '$.metrics.page_event_search') AS INT64) AS page_event_search,\n        SAFE_CAST(json_value(data, '$.metrics.page_event_search_rate') AS FLOAT64) AS page_event_search_rate,\n        SAFE_CAST(json_value(data, '$.metrics.product_details_page_browse') AS INT64) AS product_details_page_browse,\n        SAFE_CAST(json_value(data, '$.metrics.product_details_page_browse_rate') AS FLOAT64) AS product_details_page_browse_rate,\n        SAFE_CAST(json_value(data, '$.metrics.purchase') AS INT64) AS purchase,\n        SAFE_CAST(json_value(data, '$.metrics.purchase_rate') AS FLOAT64) AS purchase_rate,\n        SAFE_CAST(json_value(data, '$.metrics.registration') AS INT64) AS registration,\n        SAFE_CAST(json_value(data, '$.metrics.registration_rate') AS FLOAT64) AS registration_rate,\n        SAFE_CAST(json_value(data, '$.metrics.sales_lead') AS INT64) AS sales_lead,\n        SAFE_CAST(json_value(data, '$.metrics.spend') AS FLOAT64) AS spend,\n        SAFE_CAST(json_value(data, '$.metrics.total_add_to_wishlist') AS INT64) AS total_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.total_add_to_wishlist_value') AS FLOAT64) AS total_add_to_wishlist_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_app_event_add_to_cart') AS INT64) AS total_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.total_app_event_add_to_cart_value') AS FLOAT64) AS total_app_event_add_to_cart_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_checkout') AS INT64) AS total_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.total_checkout_value') AS FLOAT64) AS total_checkout_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_complete_payment_rate') AS FLOAT64) AS total_complete_payment_rate,\n        SAFE_CAST(json_value(data, '$.metrics.total_download_start_value') AS FLOAT64) AS total_download_start_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_initiate_checkout_value') AS FLOAT64) AS total_initiate_checkout_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_page_event_search_value') AS FLOAT64) AS total_page_event_search_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_product_details_page_browse_value') AS FLOAT64) AS total_product_details_page_browse_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_purchase') AS INT64) AS total_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.total_purchase_value') AS FLOAT64) AS total_purchase_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_registration') AS INT64) AS total_registration,\n        SAFE_CAST(json_value(data, '$.metrics.total_sales_lead') AS INT64) AS total_sales_lead,\n        SAFE_CAST(json_value(data, '$.metrics.total_sales_lead_value') AS FLOAT64) AS total_sales_lead_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_user_registration_value') AS FLOAT64) AS total_user_registration_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_view_content') AS INT64) AS total_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.total_view_content_value') AS FLOAT64) AS total_view_content_value,\n        SAFE_CAST(json_value(data, '$.metrics.total_web_event_add_to_cart_value') AS FLOAT64) AS total_web_event_add_to_cart_value,\n        SAFE_CAST(json_value(data, '$.metrics.user_registration') AS INT64) AS user_registration,\n        SAFE_CAST(json_value(data, '$.metrics.user_registration_rate') AS FLOAT64) AS user_registration_rate,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_checkout') AS FLOAT64) AS value_per_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_complete_payment') AS FLOAT64) AS value_per_complete_payment,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_download_start') AS FLOAT64) AS value_per_download_start,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_initiate_checkout') AS FLOAT64) AS value_per_initiate_checkout,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_page_event_search') AS FLOAT64) AS value_per_page_event_search,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_product_details_page_browse') AS FLOAT64) AS value_per_product_details_page_browse,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_add_to_wishlist') AS FLOAT64) AS value_per_total_add_to_wishlist,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_app_event_add_to_cart') AS FLOAT64) AS value_per_total_app_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_purchase') AS FLOAT64) AS value_per_total_purchase,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_total_view_content') AS FLOAT64) AS value_per_total_view_content,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_user_registration') AS FLOAT64) AS value_per_user_registration,\n        SAFE_CAST(json_value(data, '$.metrics.value_per_web_event_add_to_cart') AS FLOAT64) AS value_per_web_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.video_play_actions') AS INT64) AS video_play_actions,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p100') AS INT64) AS video_views_p100,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p25') AS INT64) AS video_views_p25,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p50') AS INT64) AS video_views_p50,\n        SAFE_CAST(json_value(data, '$.metrics.video_views_p75') AS INT64) AS video_views_p75,\n        SAFE_CAST(json_value(data, '$.metrics.video_watched_2s') AS INT64) AS video_watched_2s,\n        SAFE_CAST(json_value(data, '$.metrics.video_watched_6s') AS INT64) AS video_watched_6s,\n        SAFE_CAST(json_value(data, '$.metrics.view_content') AS INT64) AS view_content,\n        SAFE_CAST(json_value(data, '$.metrics.view_content_rate') AS FLOAT64) AS view_content_rate,\n        SAFE_CAST(json_value(data, '$.metrics.web_event_add_to_cart') AS INT64) AS web_event_add_to_cart,\n        SAFE_CAST(json_value(data, '$.metrics.web_event_add_to_cart_rate') AS FLOAT64) AS web_event_add_to_cart_rate,\n        _batched_at\n    FROM\n        `agile-scheme-394814`.`Tiktok`.`p_creative_report__*`\n\n) \n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by material_id\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_5sfashion__orders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_5sfashion__orders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/stg_5sfashion__orders.sql", "original_file_path": "models/staging/5sfashion/stg_5sfashion__orders.sql", "unique_id": "model.sado_analytics_services.stg_5sfashion__orders", "fqn": ["sado_analytics_services", "staging", "5sfashion", "stg_5sfashion__orders"], "alias": "stg_5sfashion__orders", "checksum": {"name": "sha256", "checksum": "5e7f407a447181262b4070d416ef5e4ca8a10a2af3a4674c0da207ad21c254fa"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"order_id": {"name": "order_id", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "order_code": {"name": "order_code", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "token": {"name": "token", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": true, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": true, "tags": []}, "total_price": {"name": "total_price", "description": "", "meta": {}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "total_ship": {"name": "total_ship", "description": "", "meta": {}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "total": {"name": "total", "description": "", "meta": {}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "customer_phone": {"name": "customer_phone", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "customer_name": {"name": "customer_name", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "customer_email": {"name": "customer_email", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "location_id": {"name": "location_id", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/5sfashion/stg_5sfashion__orders.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.283805, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__orders`", "raw_code": "with base_orders as (\n    {{\n        dbt_utils.deduplicate(\n            relation = source('web', 'orders'),\n            partition_by = 'id',\n            order_by = '_batched_at desc'\n        )\n    }}\n\n),\n\nbase_order_shippings as (\n    {{\n        dbt_utils.deduplicate(\n            relation = source('web', 'order_shipings'),\n            partition_by = 'id',\n            order_by = '_batched_at desc'\n        )\n    }}\n)\n\n\nselect \n-- orders\njson_value(o.data,'$.id') as order_id,\njson_value(o.data,'$.code') as order_code,\njson_value(o.data,'$.token') as token,\ntimestamp(json_value(o.data,'$.created_at')) as created_at,\ntimestamp(json_value(o.data,'$.updated_at')) as updated_at,\nsafe_cast(json_value(o.data,'$.total_price') as float64) as total_price,\nsafe_cast(json_value(o.data,'$.total_ship') as float64) as total_ship,\nsafe_cast(json_value(o.data,'$.total') as float64) as total,\n\n--order shipings\nnullif(json_value(os.data,'$.phone'),\"\") as customer_phone,\njson_value(os.data,'$.name') as customer_name,\nnullif(json_value(os.data,'$.email'),\"0\") as customer_email,\n{{dbt_utils.generate_surrogate_key([\"json_value(os.data,'$.province_id')\",\"json_value(os.data,'$.district_id')\",\"json_value(os.data,'$.ward_id')\"])}} as location_id,\n\nfrom base_orders o\nleft join base_order_shippings os on json_value(o.data,'$.id') = json_value(os.data,'$.order_id')", "language": "sql", "refs": [], "sources": [["web", "orders"], ["web", "order_shipings"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate", "macro.dbt_utils.generate_surrogate_key"], "nodes": ["source.sado_analytics_services.web.orders", "source.sado_analytics_services.web.order_shipings"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/stg_5sfashion__orders.sql", "compiled": true, "compiled_code": "with base_orders as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`WebsiteDB`.`p_websitev2__orders` original\n        group by id\n    )\n\n),\n\nbase_order_shippings as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`WebsiteDB`.`p_websitev2__order_shipings` original\n        group by id\n    )\n)\n\n\nselect \n-- orders\njson_value(o.data,'$.id') as order_id,\njson_value(o.data,'$.code') as order_code,\njson_value(o.data,'$.token') as token,\ntimestamp(json_value(o.data,'$.created_at')) as created_at,\ntimestamp(json_value(o.data,'$.updated_at')) as updated_at,\nsafe_cast(json_value(o.data,'$.total_price') as float64) as total_price,\nsafe_cast(json_value(o.data,'$.total_ship') as float64) as total_ship,\nsafe_cast(json_value(o.data,'$.total') as float64) as total,\n\n--order shipings\nnullif(json_value(os.data,'$.phone'),\"\") as customer_phone,\njson_value(os.data,'$.name') as customer_name,\nnullif(json_value(os.data,'$.email'),\"0\") as customer_email,\nto_hex(md5(cast(coalesce(cast(json_value(os.data,'$.province_id') as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(json_value(os.data,'$.district_id') as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(json_value(os.data,'$.ward_id') as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as location_id,\n\nfrom base_orders o\nleft join base_order_shippings os on json_value(o.data,'$.id') = json_value(os.data,'$.order_id')", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_sp__orders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_sp__orders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/shopee/stg_sp__orders.sql", "original_file_path": "models/staging/shopee/stg_sp__orders.sql", "unique_id": "model.sado_analytics_services.stg_sp__orders", "fqn": ["sado_analytics_services", "staging", "shopee", "stg_sp__orders"], "alias": "stg_sp__orders", "checksum": {"name": "sha256", "checksum": "af10248df12809ea11320d066ae8a59032e5a57dbdab5d914a7e053ef1e31e43"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"cancel_by": {"name": "cancel_by", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "cancel_reason": {"name": "cancel_reason", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "create_time": {"name": "create_time", "description": "", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": true, "tags": []}, "update_time": {"name": "update_time", "description": "", "meta": {}, "data_type": "timestamp", "constraints": [], "quote": true, "tags": []}, "total_amount": {"name": "total_amount", "description": "", "meta": {}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "order_sn": {"name": "order_sn", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "order_status": {"name": "order_status", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "item_list": {"name": "item_list", "description": "", "meta": {}, "data_type": "json", "constraints": [], "quote": true, "tags": []}, "package_list": {"name": "package_list", "description": "", "meta": {}, "data_type": "json", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/shopee/stg_sp__orders.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.2964754, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_sp__orders`", "raw_code": "{%set statuses = {\n    \"SHIPPED\": ['READY_TO_SHIP','PROCESSED','RETRY_SHIP','SHIPPED'],\n    \"CANCELLED\": ['CANCELLED','IN_CANCEL'],\n    \"TO_RETURN\":[\"TO_RETURN\"],\n    \"COMPLETED\":[\"COMPLETED\"],\n    \"UNPAID\":[\"UNPAID\"],\n    \"TO_CONFIRM_RECEIVE\":[\"TO_CONFIRM_RECEIVE\"],\n}%}\n\n{%set reasons= {\n    \"Need to Change Delivery Address\":'Thay \u0111\u1ed5i \u0111\u1ecba ch\u1ec9 giao h\u00e0ng',\n    \"Don't Want to Buy Anymore\":'Kh\u00f4ng c\u00f2n nhu c\u1ea7u',\n    \"Modify existing order (colour, size, address, voucher, etc.)\":'Thay \u0111\u1ed5i th\u00f4ng tin \u0111\u01a1n h\u00e0ng \u0111\u00e3 c\u00f3',\n    \"Need to Modify Order\":\"C\u1ea7n thay \u0111\u1ed5i th\u00f4ng tin \u0111\u01a1n h\u00e0ng\",\n    \"Need to input / Change Voucher Code\":\"Th\u00eam/\u0111\u1ed5i m\u00e3 khuy\u1ebfn m\u1ea1i\",\n    \"Others\":\"Kh\u00e1c\",\n    \"Others / change of mind\":\"Kh\u00e1c/ \u0110\u1ed5i \u00fd\",\n    \"Unpaid Order\":\"Ch\u01b0a thanh to\u00e1n\",\n    \"Failed Delivery\":\"Giao th\u1ea5t b\u1ea1i\",\n    \"Payment Procedure too Troublesome\":\"L\u1ed7i thanh to\u00e1n\",\n    \"Need to change delivery address\":\"Thay \u0111\u1ed5i \u0111\u1ecba ch\u1ec9 giao h\u00e0ng\",\n    \"Found Cheaper Elsewhere\":\"T\u00ecm th\u1ea5y s\u1ea3n ph\u1ea9m gi\u00e1 th\u1ea5p h\u01a1n\",\n    \"Other\":\"Kh\u00e1c\",\n    \"Seller is not responsive to my inquiries\":\"Ng\u01b0\u1eddi b\u00e1n kh\u00f4ng ph\u1ea3n h\u1ed3i\",\n    \"Unsuccessful / Rejected Payment\":\"Thanh to\u00e1n kh\u00f4ng th\u00e0nh c\u00f4ng/b\u1ecb t\u1eeb ch\u1ed1i\",\n    \"Seller did not Ship\":\"Ng\u01b0\u1eddi b\u00e1n kh\u00f4ng giao h\u00e0ng\"\n}%}\n\n\nwith source as (\n    {{\n        dbt_utils.deduplicate(\n            relation = source('shopee', 'order_list'), \n            partition_by = 'json_value(data,\"$.order_sn\")', \n            order_by = '_batched_at desc'\n            )\n            }}\n)\n\nselect \ncase \n    when nullif(json_value(o.data,'$.cancel_by'),\"\") =\"buyer\" then \"Ng\u01b0\u1eddi d\u00f9ng\" \n    when nullif(json_value(o.data,'$.cancel_by'),\"\") =\"system\" then \"H\u1ec7 th\u1ed1ng\" \n    end as cancel_by,\ncase {% for k,v in reasons.items()-%}\n    when nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"{{k}}\" then \"{{v}}\"\n{% endfor -%} end as cancel_reason,\ndate_add(timestamp_seconds(safe_cast(json_value(o.data,'$.create_time') as int64)),interval 7 hour) as create_time,\ndate_add(timestamp_seconds(safe_cast(json_value(o.data,'$.update_time') as int64)), interval 7 hour) as update_time,\nsafe_cast(json_value(o.data,'$.total_amount') as float64) as total_amount,\njson_value(o.data,'$.order_sn') as order_sn,\ncase  {% for k,v in statuses.items()-%}\n    when json_value(o.data,'$.order_status') in (\"{{v|join('\",\"')}}\") then \"{{k}}\"\n{% endfor -%} end as order_status,\njson_value(o.data,'$.payment_method') as payment_method,\njson_extract_array(o.data,'$.item_list') item_list,\njson_extract_array(o.data,'$.package_list') package_list,\nfrom source o", "language": "sql", "refs": [], "sources": [["shopee", "order_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.shopee.order_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/shopee/stg_sp__orders.sql", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`SHOPEE`.`order_list` original\n        group by json_value(data,\"$.order_sn\")\n    )\n)\n\nselect \ncase \n    when nullif(json_value(o.data,'$.cancel_by'),\"\") =\"buyer\" then \"Ng\u01b0\u1eddi d\u00f9ng\" \n    when nullif(json_value(o.data,'$.cancel_by'),\"\") =\"system\" then \"H\u1ec7 th\u1ed1ng\" \n    end as cancel_by,\ncase when nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Need to Change Delivery Address\" then \"Thay \u0111\u1ed5i \u0111\u1ecba ch\u1ec9 giao h\u00e0ng\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Don't Want to Buy Anymore\" then \"Kh\u00f4ng c\u00f2n nhu c\u1ea7u\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Modify existing order (colour, size, address, voucher, etc.)\" then \"Thay \u0111\u1ed5i th\u00f4ng tin \u0111\u01a1n h\u00e0ng \u0111\u00e3 c\u00f3\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Need to Modify Order\" then \"C\u1ea7n thay \u0111\u1ed5i th\u00f4ng tin \u0111\u01a1n h\u00e0ng\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Need to input / Change Voucher Code\" then \"Th\u00eam/\u0111\u1ed5i m\u00e3 khuy\u1ebfn m\u1ea1i\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Others\" then \"Kh\u00e1c\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Others / change of mind\" then \"Kh\u00e1c/ \u0110\u1ed5i \u00fd\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Unpaid Order\" then \"Ch\u01b0a thanh to\u00e1n\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Failed Delivery\" then \"Giao th\u1ea5t b\u1ea1i\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Payment Procedure too Troublesome\" then \"L\u1ed7i thanh to\u00e1n\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Need to change delivery address\" then \"Thay \u0111\u1ed5i \u0111\u1ecba ch\u1ec9 giao h\u00e0ng\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Found Cheaper Elsewhere\" then \"T\u00ecm th\u1ea5y s\u1ea3n ph\u1ea9m gi\u00e1 th\u1ea5p h\u01a1n\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Other\" then \"Kh\u00e1c\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Seller is not responsive to my inquiries\" then \"Ng\u01b0\u1eddi b\u00e1n kh\u00f4ng ph\u1ea3n h\u1ed3i\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Unsuccessful / Rejected Payment\" then \"Thanh to\u00e1n kh\u00f4ng th\u00e0nh c\u00f4ng/b\u1ecb t\u1eeb ch\u1ed1i\"\nwhen nullif(json_value(o.data,'$.cancel_reason'),\"\") = \"Seller did not Ship\" then \"Ng\u01b0\u1eddi b\u00e1n kh\u00f4ng giao h\u00e0ng\"\nend as cancel_reason,\ndate_add(timestamp_seconds(safe_cast(json_value(o.data,'$.create_time') as int64)),interval 7 hour) as create_time,\ndate_add(timestamp_seconds(safe_cast(json_value(o.data,'$.update_time') as int64)), interval 7 hour) as update_time,\nsafe_cast(json_value(o.data,'$.total_amount') as float64) as total_amount,\njson_value(o.data,'$.order_sn') as order_sn,\ncase  when json_value(o.data,'$.order_status') in (\"READY_TO_SHIP\",\"PROCESSED\",\"RETRY_SHIP\",\"SHIPPED\") then \"SHIPPED\"\nwhen json_value(o.data,'$.order_status') in (\"CANCELLED\",\"IN_CANCEL\") then \"CANCELLED\"\nwhen json_value(o.data,'$.order_status') in (\"TO_RETURN\") then \"TO_RETURN\"\nwhen json_value(o.data,'$.order_status') in (\"COMPLETED\") then \"COMPLETED\"\nwhen json_value(o.data,'$.order_status') in (\"UNPAID\") then \"UNPAID\"\nwhen json_value(o.data,'$.order_status') in (\"TO_CONFIRM_RECEIVE\") then \"TO_CONFIRM_RECEIVE\"\nend as order_status,\njson_value(o.data,'$.payment_method') as payment_method,\njson_extract_array(o.data,'$.item_list') item_list,\njson_extract_array(o.data,'$.package_list') package_list,\nfrom source o", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_sp__items": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_sp__items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/shopee/stg_sp__items.sql", "original_file_path": "models/staging/shopee/stg_sp__items.sql", "unique_id": "model.sado_analytics_services.stg_sp__items", "fqn": ["sado_analytics_services", "staging", "shopee", "stg_sp__items"], "alias": "stg_sp__items", "checksum": {"name": "sha256", "checksum": "6c0752ccaea47bee45e28fd990ca2391128cc839357f329d4c366c87f3aa0c9e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"item_id": {"name": "item_id", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "item_name": {"name": "item_name", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "item_sku": {"name": "item_sku", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "item_status": {"name": "item_status", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "category_id": {"name": "category_id", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "brand_id": {"name": "brand_id", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}, "brand_name": {"name": "brand_name", "description": "", "meta": {}, "data_type": "string", "constraints": [], "quote": true, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/shopee/stg_sp__items.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.2928307, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_sp__items`", "raw_code": "with source as (\n    {{\n        dbt_utils.deduplicate(\n            relation = source('shopee', 'item_list'), \n            partition_by = 'json_value(data,\"$.item_id\")', \n            order_by = '_batched_at desc'\n            )\n            }}\n)\n\nselect \njson_value(o.data,'$.item_id') as item_id,\njson_value(o.data,'$.item_name') as item_name,\njson_value(o.data,'$.item_sku') as item_sku,\njson_value(o.data,'$.item_status') as item_status,\njson_value(o.data,'$.category_id') as category_id,\njson_value(o.data,'$.brand.brand_id') as brand_id,\njson_value(o.data,'$.brand.original_brand_name') as brand_name,\n\nfrom source o", "language": "sql", "refs": [], "sources": [["shopee", "item_list"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.shopee.item_list"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/shopee/stg_sp__items.sql", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`SHOPEE`.`item_list` original\n        group by json_value(data,\"$.item_id\")\n    )\n)\n\nselect \njson_value(o.data,'$.item_id') as item_id,\njson_value(o.data,'$.item_name') as item_name,\njson_value(o.data,'$.item_sku') as item_sku,\njson_value(o.data,'$.item_status') as item_status,\njson_value(o.data,'$.category_id') as category_id,\njson_value(o.data,'$.brand.brand_id') as brand_id,\njson_value(o.data,'$.brand.original_brand_name') as brand_name,\n\nfrom source o", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_sp__daily_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_sp__daily_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/shopee/stg_sp__daily_performance.sql", "original_file_path": "models/staging/shopee/stg_sp__daily_performance.sql", "unique_id": "model.sado_analytics_services.stg_sp__daily_performance", "fqn": ["sado_analytics_services", "staging", "shopee", "stg_sp__daily_performance"], "alias": "stg_sp__daily_performance", "checksum": {"name": "sha256", "checksum": "63ac9bc4f3a85e5687b9e71f50fa5c8b6181dee2ed3329d687fe9433854fbeb1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["fact", "shopee"], "meta": {"joins": [{"join": "calendar", "sql_on": "${stg_sp__daily_performance.date} = ${calendar.date}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "shopee"], "description": "The  model is a comprehensive daily snapshot of advertising performance metrics, crucial for evaluating campaign effectiveness and making data-driven decisions", "columns": {"date": {"name": "date", "description": "the date on which the data was collected", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "impression": {"name": "impression", "description": "The number of times an advertisement was displayed on the platform. It is a floating point number that provides a measure of the reach of the advertisement. A higher number of impressions indicates that the advertisement was displayed to a larger audience.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_cpm": {"type": "number", "label": "CPM", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_impressions}) * 1000", "compact": "thousands", "round": 1}, "m_ctr": {"type": "number", "label": "CTR", "group_label": "Ads", "sql": "safe_divide(${m_clicks},${m_impressions})", "round": 2, "format": "percent"}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "clicks": {"name": "clicks", "description": "The number of times users clicked on the advertisement. It is a floating point number that provides a measure of user engagement with the advertisement. A higher number of clicks indicates that the advertisement was more engaging or appealing to the audience.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_cpc": {"type": "number", "label": "CPC", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_clicks})", "compact": "thousands", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "expense": {"name": "expense", "description": "The total amount of money spent on advertising for a given day. It is measured in the currency of the ad account. This is a key metric to track as it directly impacts the marketing budget and can be used to calculate return on ad spend (ROAS).", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_spend": {"type": "sum", "label": "Spend", "group_label": "Ads", "compact": "thousands", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_order": {"name": "broad_order", "description": "The total number of orders that were attributed to the ads on a broad level for a given day. This includes both direct orders (where the ad directly led to a purchase) and indirect orders (where the ad played a role in the purchase decision but was not the last interaction). This metric is important for understanding the overall impact of the advertising efforts.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_broad_orders": {"type": "sum", "label": "Broad Orders", "group_label": "Ads"}, "m_broad_cvr": {"type": "number", "label": "Broad Conversion rate", "group_label": "Ads", "sql": "safe_divide(${m_broad_orders},${m_clicks})", "format": "percent", "round": 2}, "m_cost_per_broad_order": {"type": "number", "label": "Cost per Broad Order", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_broad_orders})", "round": 2, "compact": "thousands"}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_gmv": {"name": "broad_gmv", "description": "This column represents the Gross Merchandise Value (GMV) attributed to the ads on a broad level for a given day. GMV is the total value of the merchandise sold through the platform. This includes both direct and indirect sales resulting from the ads. This metric is crucial for understanding the total revenue generated from the advertising efforts.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_broad_gmv": {"type": "sum", "label": "Broad GMV", "group_label": "Ads", "compact": "millions", "round": 1}, "m_broad_roas": {"type": "number", "sql": "safe_divide(${m_broad_gmv},${m_spend})", "label": "Broad ROAS", "group_label": "Ads", "round": 2}, "m_broad_gmv_per_order": {"type": "number", "sql": "safe_divide(${m_broad_gmv},${m_broad_orders})", "label": "Broad GMV per Order", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_broad_gmv_per_item": {"type": "number", "sql": "safe_divide(${m_broad_gmv},${m_broad_items_sold})", "label": "Broad GMV per Item", "group_label": "Ads", "compact": "thousands", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_item_sold": {"name": "broad_item_sold", "description": "This column represents the total number of items sold through broad match type in our advertising campaigns. Broad match type allows your ad to show whenever someone searches for that phrase, similar phrases, singular or plural forms, misspellings, synonyms, stemmings (such as floor and flooring), related searches, and other relevant variations.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_broad_items_sold": {"type": "sum", "label": "Broad Items Sold", "group_label": "Ads"}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_roas": {"name": "broad_roas", "description": "This column represents the Return on Advertising Spend (ROAS) for the broad match type in our advertising campaigns. ROAS is a marketing metric that measures the efficacy of a digital advertising campaign. ROAS helps online businesses measure which ad campaigns are working and how they can improve future advertising efforts.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_order": {"name": "direct_order", "description": "This column represents the total number of direct orders received. Direct orders are those where customers directly purchase from our website without any third-party involvement or without coming from any advertising campaigns. This metric helps us understand the effectiveness of our direct marketing efforts.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_direct_orders": {"type": "sum", "label": "Direct Orders", "group_label": "Ads"}, "m_direct_cvr": {"type": "number", "label": "Direct Conversion Rate", "group_label": "Ads", "sql": "safe_divide(${m_direct_orders},${m_clicks})", "format": "percent", "round": 2}, "m_indirect_orders": {"type": "number", "label": "Indirect Orders", "sql": "${m_broad_orders} - ${m_direct_orders}", "group_label": "Ads"}, "m_indirect_cvr": {"type": "number", "label": "Indirect Conversion Rate", "sql": "safe_divide(${m_indirect_orders},${m_clicks})", "group_label": "Ads", "format": "percent", "round": 2}, "m_cost_per_direct_order": {"type": "number", "label": "Cost per Direct Order", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_direct_orders})", "compact": "thousands", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_gmv": {"name": "direct_gmv", "description": "This column represents the Gross Merchandise Value (GMV) generated directly from the ads. It is a measure of the total value of all items sold through the ad campaign. This value is important for understanding the direct financial impact of the ad campaign.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_direct_gmv": {"type": "sum", "label": "Direct GMV", "group_label": "Ads", "compact": "millions", "round": 1}, "m_indirect_gmv": {"type": "number", "label": "Indirect GMV", "sql": "${m_broad_gmv} - ${m_direct_gmv}", "group_label": "Ads", "compact": "millions", "round": 1}, "m_direct_roas": {"type": "number", "sql": "safe_divide(${m_direct_gmv},${m_spend})", "label": "Direct ROAS", "group_label": "Ads", "round": 2}, "m_direct_gmv_per_order": {"type": "number", "sql": "safe_divide(${m_direct_gmv},${m_direct_orders})", "label": "Direct GMV per Order", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_indirect_gmv_per_order": {"type": "number", "sql": "safe_divide(${m_indirect_gmv},${m_indirect_orders})", "label": "Indirect GMV per Order", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_direct_gmv_per_item": {"type": "number", "sql": "safe_divide(${m_direct_gmv},${m_direct_items_sold})", "label": "Direct GMV per Item", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_indrect_gmv_per_item": {"type": "number", "sql": "safe_divide(${m_indirect_gmv},${m_indirect_items_sold})", "label": "Indirect GMV per Item", "group_label": "Ads", "compact": "thousands", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_item_sold": {"name": "direct_item_sold", "description": "This column indicates the number of items sold directly as a result of the ad campaign. It provides insight into the effectiveness of the ad in driving direct sales.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_direct_items_sold": {"type": "sum", "label": "Direct Items Sold", "group_label": "Ads"}, "m_indirect_items_sold": {"type": "number", "label": "Indirect Items Sold", "sql": "${m_broad_items_sold} - ${m_direct_items_sold}", "group_label": "Ads"}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_roas": {"name": "direct_roas", "description": "This column stands for Return on Ad Spend (ROAS) from direct sales. It is calculated by dividing the revenue generated from direct sales by the cost of the ad campaign. This metric helps in understanding the profitability of the ad campaign.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_conversions": {"name": "broad_conversions", "description": "This column represents the total number of broad conversions. Broad conversions are when a user interacts with an ad and then completes a desired action, such as making a purchase or signing up for a newsletter. This metric is important for understanding the overall effectiveness of our advertising efforts.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_broad_conversions": {"type": "sum", "label": "Broad Conversions", "group_label": "Ads", "compact": "thousands", "round": 2}, "m_cost_per_broad_conversion": {"type": "number", "label": "Cost per Broad Conversion", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_broad_conversions})", "compact": "thousands", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_conversions": {"name": "direct_conversions", "description": "This column represents the total number of direct conversions. Direct conversions are when a user clicks on an ad and then immediately completes a desired action. This metric is crucial for understanding the immediate impact of our ads on user behavior.", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_direct_conversions": {"type": "sum", "label": "Direct Conversions", "group_label": "Ads", "round": 1}, "m_indirect_conversions": {"type": "number", "label": "Indirect Conversions", "sql": "${m_broad_conversions} - ${m_direct_conversions}", "group_label": "Ads", "round": 1}, "m_cost_per_direct_conversion": {"type": "number", "label": "Cost per Direct Conversion", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_direct_conversions})", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "This column represents the average cost per conversion. This is calculated by dividing the total advertising expense by the total number of conversions (both broad and direct). This metric is key for understanding the cost-effectiveness of our advertising campaigns and helps us optimize our advertising budget.", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${stg_sp__daily_performance.date} = ${calendar.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/shopee/stg_sp__daily_performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${stg_sp__daily_performance.date} = ${calendar.date}"}]}, "tags": ["fact", "shopee"]}, "created_at": 1732268181.3360028, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_sp__daily_performance`", "raw_code": "{{\n  config(\n    tags=['fact', 'shopee'],\n    )\n}}\nWITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source('shopee','ad_daily_performance'),\n        partition_by = 'json_value(data, \"$.date\")',\n        order_by = '_batched_at desc'\n    ) }}\n)\nSELECT\n    parse_date('%d-%m-%Y',json_value(s.data,'$.date')) as date,\n    safe_cast(json_value(s.data,'$.impression') as float64) as impression,\n    safe_cast(json_value(s.data,'$.clicks') as float64) as clicks,\n    safe_cast(json_value(s.data,'$.expense') as float64) as expense,\n    safe_cast(json_value(s.data,'$.broad_order') as float64) as broad_order,\n    safe_cast(json_value(s.data,'$.broad_gmv') as float64) as broad_gmv,\n    safe_cast(json_value(s.data,'$.broad_item_sold') as float64) as broad_item_sold,\n    safe_cast(json_value(s.data,'$.broad_roas') as float64) as broad_roas,\n    safe_cast(json_value(s.data,'$.direct_order') as float64) as direct_order,\n    safe_cast(json_value(s.data,'$.direct_gmv') as float64) as direct_gmv,\n    safe_cast(json_value(s.data,'$.direct_item_sold') as float64) as direct_item_sold,\n    safe_cast(json_value(s.data,'$.direct_roas') as float64) as direct_roas,\n    safe_cast(json_value(s.data,'$.broad_conversions') as float64) as broad_conversions,\n    safe_cast(json_value(s.data,'$.direct_conversions') as float64) as direct_conversions,\n    safe_cast(json_value(s.data,'$.cost_per_conversion') as float64) as cost_per_conversion,\nFROM\n    source s", "language": "sql", "refs": [], "sources": [["shopee", "ad_daily_performance"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.shopee.ad_daily_performance"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/shopee/stg_sp__daily_performance.sql", "compiled": true, "compiled_code": "\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`SHOPEE`.`ad_daily_performance` original\n        group by json_value(data, \"$.date\")\n    )\n)\nSELECT\n    parse_date('%d-%m-%Y',json_value(s.data,'$.date')) as date,\n    safe_cast(json_value(s.data,'$.impression') as float64) as impression,\n    safe_cast(json_value(s.data,'$.clicks') as float64) as clicks,\n    safe_cast(json_value(s.data,'$.expense') as float64) as expense,\n    safe_cast(json_value(s.data,'$.broad_order') as float64) as broad_order,\n    safe_cast(json_value(s.data,'$.broad_gmv') as float64) as broad_gmv,\n    safe_cast(json_value(s.data,'$.broad_item_sold') as float64) as broad_item_sold,\n    safe_cast(json_value(s.data,'$.broad_roas') as float64) as broad_roas,\n    safe_cast(json_value(s.data,'$.direct_order') as float64) as direct_order,\n    safe_cast(json_value(s.data,'$.direct_gmv') as float64) as direct_gmv,\n    safe_cast(json_value(s.data,'$.direct_item_sold') as float64) as direct_item_sold,\n    safe_cast(json_value(s.data,'$.direct_roas') as float64) as direct_roas,\n    safe_cast(json_value(s.data,'$.broad_conversions') as float64) as broad_conversions,\n    safe_cast(json_value(s.data,'$.direct_conversions') as float64) as direct_conversions,\n    safe_cast(json_value(s.data,'$.cost_per_conversion') as float64) as cost_per_conversion,\nFROM\n    source s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.stg_sp__hourly_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_sp__hourly_performance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/shopee/stg_sp__hourly_performance.sql", "original_file_path": "models/staging/shopee/stg_sp__hourly_performance.sql", "unique_id": "model.sado_analytics_services.stg_sp__hourly_performance", "fqn": ["sado_analytics_services", "staging", "shopee", "stg_sp__hourly_performance"], "alias": "stg_sp__hourly_performance", "checksum": {"name": "sha256", "checksum": "b0024bfbeac43eeb50c431a3767109457e2884ab3edb467d604ce336bd187a41"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["fact", "shopee"], "meta": {"joins": [{"join": "calendar", "sql_on": "${stg_sp__hourly_performance.date} = ${calendar.date}"}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "shopee"], "description": "", "columns": {"date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "date", "constraints": [], "quote": true, "tags": []}, "impression": {"name": "impression", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_cpm": {"type": "number", "label": "CPM", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_impressions}) * 1000", "compact": "thousands", "round": 1}, "m_ctr": {"type": "number", "label": "CTR", "group_label": "Ads", "sql": "safe_divide(${m_clicks},${m_impressions})", "round": 2, "format": "percent"}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_cpc": {"type": "number", "label": "CPC", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_clicks})", "compact": "thousands", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "expense": {"name": "expense", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_spend": {"type": "sum", "label": "Spend", "group_label": "Shopee Ads", "compact": "thousands", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_order": {"name": "broad_order", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_broad_orders": {"type": "sum", "label": "Broad Orders", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_cost_per_broad_order": {"type": "number", "label": "Cost per Order", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_broad_orders})", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_gmv": {"name": "broad_gmv", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_broad_gmv": {"type": "sum", "label": "Broad GMV", "group_label": "Ads", "compact": "millions", "round": 1}, "m_broad_roas": {"type": "number", "sql": "safe_divide(${m_broad_gmv},${m_spend})", "label": "Broad ROAS", "group_label": "Ads", "round": 2}, "m_broad_gmv_per_order": {"type": "number", "sql": "safe_divide(${m_broad_gmv},${m_broad_orders})", "label": "Broad GMV per Order", "group_label": "Ads", "round": 2}, "m_broad_gmv_per_item": {"type": "number", "sql": "safe_divide(${m_broad_gmv},${m_broad_item_sold})", "label": "Broad GMV per Item", "group_label": "Ads", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_item_sold": {"name": "broad_item_sold", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_broad_item_sold": {"type": "sum", "label": "Broad Item Sold", "group_label": "Shopee Ads", "compact": "thousands", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_roas": {"name": "broad_roas", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_order": {"name": "direct_order", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_direct_orders": {"type": "sum", "label": "Direct Orders", "group_label": "Ads", "compact": "thousands", "round": 1}, "m_cost_per_direct_order": {"type": "number", "label": "Cost per Order", "group_label": "Ads", "sql": "safe_divide(${m_spend},${m_direct_orders})", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_gmv": {"name": "direct_gmv", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_direct_gmv": {"type": "sum", "label": "Direct GMV", "group_label": "Ads", "compact": "millions", "round": 1}, "m_direct_roas": {"type": "number", "sql": "safe_divide(${m_direct_gmv},${m_spend})", "label": "Direct ROAS", "group_label": "Ads", "round": 2}, "m_direct_gmv_per_order": {"type": "number", "sql": "safe_divide(${m_direct_gmv},${m_direct_orders})", "label": "Direct GMV per Order", "group_label": "Ads", "round": 2}, "m_direct_gmv_per_item": {"type": "number", "sql": "safe_divide(${m_direct_gmv},${m_direct_item_sold})", "label": "Direct GMV per Item", "group_label": "Ads", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_item_sold": {"name": "direct_item_sold", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_direct_item_sold": {"type": "sum", "label": "Direct Item Sold", "group_label": "Shopee Ads", "compact": "thousands", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_roas": {"name": "direct_roas", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "broad_conversions": {"name": "broad_conversions", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_broad_conversions": {"type": "sum", "label": "Broad Conversions", "group_label": "Shopee Ads", "compact": "thousands", "round": 1}, "m_cost_per_broad_conversion": {"type": "number", "label": "Cost per Broad Conversion", "group_label": "Shopee Ads", "sql": "safe_divide(${m_spend},${m_broad_conversions})", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "direct_conversions": {"name": "direct_conversions", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_direct_conversions": {"type": "sum", "label": "Direct Conversions", "group_label": "Shopee Ads", "compact": "thousands", "round": 1}, "m_cost_per_direct_conversion": {"type": "number", "label": "Cost per Direct Conversion", "group_label": "Shopee Ads", "sql": "safe_divide(${m_spend},${m_direct_conversions})", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "cost_per_conversion": {"name": "cost_per_conversion", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": true, "tags": []}, "hour": {"name": "hour", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": "int64", "constraints": [], "quote": true, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${stg_sp__hourly_performance.date} = ${calendar.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/shopee/stg_sp__hourly_performance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "meta": {"joins": [{"join": "calendar", "sql_on": "${stg_sp__hourly_performance.date} = ${calendar.date}"}]}, "tags": ["fact", "shopee"]}, "created_at": 1732268181.3438325, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_sp__hourly_performance`", "raw_code": "{{\n  config(\n    tags=['fact', 'shopee'],\n    )\n}}\n\nWITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source('shopee','ad_hourly_performance'),\n        partition_by = 'json_value(data, \"$.date\"), json_value(data, \"$.hour\")',\n        order_by = '_batched_at desc'\n    ) }}\n)\nSELECT\n    parse_date('%d-%m-%Y',json_value(s.data,'$.date')) as date,\n    safe_cast(json_value(s.data,'$.impression') as float64) as impression,\n    safe_cast(json_value(s.data,'$.clicks') as float64) as clicks,\n    safe_cast(json_value(s.data,'$.expense') as float64) as expense,\n    safe_cast(json_value(s.data,'$.broad_order') as float64) as broad_order,\n    safe_cast(json_value(s.data,'$.broad_gmv') as float64) as broad_gmv,\n    safe_cast(json_value(s.data,'$.broad_item_sold') as float64) as broad_item_sold,\n    safe_cast(json_value(s.data,'$.broad_roas') as float64) as broad_roas,\n    safe_cast(json_value(s.data,'$.direct_order') as float64) as direct_order,\n    safe_cast(json_value(s.data,'$.direct_gmv') as float64) as direct_gmv,\n    safe_cast(json_value(s.data,'$.direct_item_sold') as float64) as direct_item_sold,\n    safe_cast(json_value(s.data,'$.direct_roas') as float64) as direct_roas,\n    safe_cast(json_value(s.data,'$.broad_conversions') as float64) as broad_conversions,\n    safe_cast(json_value(s.data,'$.direct_conversions') as float64) as direct_conversions,\n    safe_cast(json_value(s.data,'$.cost_per_conversion') as float64) as cost_per_conversion,\n    safe_cast(json_value(s.data, '$.hour') as int64) as hour,\nFROM\n    source s", "language": "sql", "refs": [], "sources": [["shopee", "ad_hourly_performance"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.sado_analytics_services.shopee.ad_hourly_performance"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/shopee/stg_sp__hourly_performance.sql", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`SHOPEE`.`ad_hourly_performance` original\n        group by json_value(data, \"$.date\"), json_value(data, \"$.hour\")\n    )\n)\nSELECT\n    parse_date('%d-%m-%Y',json_value(s.data,'$.date')) as date,\n    safe_cast(json_value(s.data,'$.impression') as float64) as impression,\n    safe_cast(json_value(s.data,'$.clicks') as float64) as clicks,\n    safe_cast(json_value(s.data,'$.expense') as float64) as expense,\n    safe_cast(json_value(s.data,'$.broad_order') as float64) as broad_order,\n    safe_cast(json_value(s.data,'$.broad_gmv') as float64) as broad_gmv,\n    safe_cast(json_value(s.data,'$.broad_item_sold') as float64) as broad_item_sold,\n    safe_cast(json_value(s.data,'$.broad_roas') as float64) as broad_roas,\n    safe_cast(json_value(s.data,'$.direct_order') as float64) as direct_order,\n    safe_cast(json_value(s.data,'$.direct_gmv') as float64) as direct_gmv,\n    safe_cast(json_value(s.data,'$.direct_item_sold') as float64) as direct_item_sold,\n    safe_cast(json_value(s.data,'$.direct_roas') as float64) as direct_roas,\n    safe_cast(json_value(s.data,'$.broad_conversions') as float64) as broad_conversions,\n    safe_cast(json_value(s.data,'$.direct_conversions') as float64) as direct_conversions,\n    safe_cast(json_value(s.data,'$.cost_per_conversion') as float64) as cost_per_conversion,\n    safe_cast(json_value(s.data, '$.hour') as int64) as hour,\nFROM\n    source s", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.facebook_dashboard": {"database": "agile-scheme-394814", "schema": "dbt_prod_core", "name": "facebook_dashboard", "resource_type": "model", "package_name": "sado_analytics_services", "path": "core/dashboards/facebook_dashboard.sql", "original_file_path": "models/core/dashboards/facebook_dashboard.sql", "unique_id": "model.sado_analytics_services.facebook_dashboard", "fqn": ["sado_analytics_services", "core", "dashboards", "facebook_dashboard"], "alias": "facebook_dashboard", "checksum": {"name": "sha256", "checksum": "38f2bfc361cb977f2c615bad60cb834605b966a6dc7418702ccbd3766dac9743"}, "config": {"enabled": true, "alias": null, "schema": "core", "database": null, "tags": ["incremental", "fact", "dashboard"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${facebook_dashboard.date}", "always": true}, {"join": "dim__location_groups", "sql_on": "(${dim__location_groups.local_page_code} = ${facebook_dashboard.local_page_code})", "always": true}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "dashboard"], "description": "This model combines Facebook performance data, budget data, and offline sales data to provide a comprehensive dashboard for analyzing marketing performance.", "columns": {"impressions": {"name": "impressions", "description": "hi\u1ec3n th\u1ecb", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_impressions": {"type": "sum", "label": "Impressions", "group_label": "Ads metrics", "compact": "millions", "round": 1}, "m_cost_per_mile": {"type": "number", "label": "CPM", "group_label": "Ads metrics", "sql": "safe_divide(${m_spend}*1000,${m_impressions})", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "chi ti\u00eau FB", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_spend": {"type": "sum", "label": "Ads Spend", "group_label": "Ads metrics", "compact": "millions", "round": 1}, "m_ads_cost_conv": {"type": "number", "sql": "safe_divide(${m_spend},${m_ads_purchase})", "label": "Ads Cost/Conv", "group_label": "Ads metrics", "compact": "thousands", "round": 1}, "m_ads_cost_revenue": {"type": "number", "sql": "safe_divide(${m_spend},${m_payment_val})", "label": "Ads Cost/Revenue", "group_label": "Ads metrics", "format": "percent", "round": 2}, "m_ads_roas": {"type": "number", "sql": "safe_divide(${m_payment_val},${m_spend})", "label": "Ads ROAS", "group_label": "Ads metrics", "round": 2}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "l\u01b0\u1ee3ng clicks", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_clicks": {"type": "sum", "label": "Clicks", "group_label": "Ads metrics", "compact": "thousands", "round": 1}, "m_cost_per_click": {"type": "number", "label": "CPC", "group_label": "Ads metrics", "sql": "safe_divide(${m_spend},${m_clicks})", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "l\u01b0\u1ee3ng ti\u1ebfp c\u1eadn", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_link_click": {"type": "sum", "label": "Link click", "group_label": "Ads metrics", "compact": "thousands", "round": 1}, "m_cost_per_link_click": {"type": "number", "label": "Cost per linh clicks", "group_label": "Ads metrics", "sql": "safe_divide(${m_spend},${m_link_click})", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_post_engagement": {"type": "sum", "label": "Post engagement", "group_label": "Ads metrics", "compact": "thousands", "round": 1}, "m_cost_per_post_engagement": {"type": "number", "label": "Cost per post engagement", "group_label": "Ads metrics", "sql": "safe_divide(${m_spend},${m_post_engagement})", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_offline_cv": {"type": "sum", "label": "Offline CV", "group_label": "Ads metrics", "compact": "thousands", "round": 1}, "m_ads_purchase": {"type": "number", "sql": "coalesce( ${m_offline_cv} ,0 ) + coalesce( ${m_online_cv} ,0 ) + coalesce( ${m_mess_cv} ,0 )", "label": "#Ads Purchase", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_offline_cv_value": {"type": "sum", "label": "Offline CV Value", "group_label": "Ads metrics", "compact": "millions", "round": 1}, "m_ads_purchase_value": {"type": "number", "sql": "coalesce(${m_offline_cv_value},0)+coalesce(${m_online_cv_value},0)+coalesce(${m_mess_cv_value},0)", "label": "Ads Purchase Value", "group_label": "Ads metrics", "compact": "millions", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_online_cv": {"type": "sum", "label": "Online CV", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_online_cv_value": {"type": "sum", "label": "Online CV Value", "group_label": "Ads metrics", "compact": "millions", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "meta_purchase": {"name": "meta_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_mess_cv": {"type": "sum", "label": "Mess CV", "group_label": "Ads metrics", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "meta_purchase_value": {"name": "meta_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_mess_cv_value": {"type": "sum", "label": "Mess CV Value", "group_label": "Ads metrics", "compact": "millions", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "_results_message": {"name": "_results_message", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_messages": {"type": "sum", "label": "Messages", "group_label": "Ads metrics", "compact": "thousands", "round": 1}, "m_cost_per_message": {"type": "number", "label": "Cost per message", "group_label": "Ads metrics", "sql": "safe_divide(${m_spend},${m_messages})", "compact": "thousands", "round": 1}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "val_transaction_id": {"name": "val_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng giao d\u1ecbch", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_transactions": {"type": "sum", "label": "No. Transactions", "group_label": "Sales metrics", "compact": "thousands", "round": 1}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "num_invoice_transaction_id": {"name": "num_invoice_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng invoice", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_invoices": {"type": "sum", "label": "No. Invoices", "group_label": "Sales metrics", "round": 0}, "m_aov": {"type": "number", "label": "AOV", "group_label": "Sales metrics", "sql": "safe_divide(${m_invoice_val},${m_num_invoices})", "compact": "thousands", "round": 0}, "m_ads_cost_invoice": {"type": "number", "sql": "safe_divide(${m_spend},${m_num_invoices})", "label": "Ads Cost/Invoice", "group_label": "Sales metrics", "compact": "thousands", "round": 0}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "num_return_transaction_id": {"name": "num_return_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng tr\u1ea3", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_returns": {"type": "sum", "label": "No. Returns", "group_label": "Sales metrics", "round": 0}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "val_total": {"name": "val_total", "description": "gi\u00e1 tr\u1ecb giao d\u1ecbch", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_transaction_val": {"type": "sum", "label": "Transaction Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_invoice_total": {"name": "num_invoice_total", "description": "gi\u00e1 tr\u1ecb b\u00e1n", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_invoice_val": {"type": "sum", "label": "Invoice Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_return_total": {"name": "num_return_total", "description": "gi\u00e1 tr\u1ecb tr\u1ea3", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_return_val": {"type": "sum", "label": "Return Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}, "m_return_rate": {"type": "number", "label": "% Value Returned", "group_label": "Sales metrics", "sql": "safe_divide(${m_return_val},${m_invoice_val})", "format": "percent", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "val_total_payment": {"name": "val_total_payment", "description": "doanh thu thu\u1ea7n", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_payment_val": {"type": "sum", "label": "Payment", "group_label": "Sales metrics", "compact": "millions", "round": 1}, "m_run_rate": {"label": "Sales Run rate", "group_label": "Sales metrics", "type": "number", "sql": "safe_divide(${m_payment_val},${m_sales_target})", "format": "percent", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_invoice_total_payment": {"name": "num_invoice_total_payment", "description": "doanh thu thu\u1ea7n b\u00e1n h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_return_total_payment": {"name": "num_return_total_payment", "description": "doanh thu thu\u1ea7n tr\u1ea3 h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "daily_budget": {"name": "daily_budget", "description": "ng\u00e2n sach/ng\u00e0y", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_ads_budget": {"type": "sum", "label": "Budget", "group_label": "Budget", "compact": "millions", "round": 1}, "m_ads_budget_run_rate": {"type": "number", "sql": "safe_divide(${m_spend},${m_ads_budget})", "label": "% Ads Budget", "group_label": "Ads metrics", "format": "percent", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "daily_sales_target": {"name": "daily_sales_target", "description": "target sales/ng\u00e0y", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_sales_target": {"type": "sum", "label": "Sales target", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "daily_traffic_target": {"name": "daily_traffic_target", "description": "target traffic/ng\u00e0y", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_traffic_target": {"type": "sum", "label": "Traffic target", "group_label": "Budget", "round": 0}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "ng\u00e0y giao d\u1ecbch", "meta": {"dimension": {"type": "date", "hidden": true}, "metrics": {"m_num_pages_days": {"type": "count_distinct", "sql": "concat(${TABLE}.date,${TABLE}.local_page_code)", "label": "No. Pages Days", "group_label": "Misc", "filters": [{"spend": ">0"}]}, "m_num_days": {"type": "count_distinct", "label": "No. Days", "group_label": "Misc"}}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "num_stores": {"name": "num_stores", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_stores_day": {"type": "sum", "label": "No. Stores Days", "group_label": "Misc"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "local_page_code": {"name": "local_page_code", "description": "M\u00e3 local page", "meta": {"dimension": {"type": "string"}, "metrics": {"m_num_pages": {"type": "count_distinct", "label": "No. Pages", "group_label": "Misc"}}, "additional_dimensions": {"d_opening": {"type": "string", "label": "is_opening", "sql": "case when date_diff( ${calendar.date},${dim__location_groups.opening_day},day) <10 then \"CH khai tr\u01b0\u01a1ng\" else '\u0110\u00e3 khai tr\u01b0\u01a1ng' end"}}}, "data_type": "string", "constraints": [], "quote": null, "tags": []}, "ad_pic": {"name": "ad_pic", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "additional_dimensions": {"d_pic": {"type": "string", "sql": "case \nwhen ${TABLE}.local_page_code ='5SFTHA' or regexp_contains(lower(${TABLE}.ad_pic),r'thang|th\u1eafng')  then 'Th\u1eafng'\nwhen ${TABLE}.local_page_code ='5SFTIE' or regexp_contains(lower(${TABLE}.ad_pic),r'tien|ti\u1ebfn') then 'Ti\u1ebfn'\nwhen ${TABLE}.local_page_code ='5SFTUN' or regexp_contains(lower(${TABLE}.ad_pic),r'tung|t\u00f9ng')  then 'T\u00f9ng'\nwhen ${TABLE}.local_page_code = '5SFTRA' or regexp_contains(lower(${TABLE}.ad_pic),r'trang|ht') then 'Trang'\nwhen ${TABLE}.local_page_code = '5SFTUY' or  regexp_contains(lower(${TABLE}.ad_pic),r'tuyen|tuy\u1ec1n') then 'Tuy\u1ec1n'\nelse ${TABLE}.ad_pic end", "label": "PIC"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${facebook_dashboard.date}", "always": true}, {"join": "dim__location_groups", "sql_on": "(${dim__location_groups.local_page_code} = ${facebook_dashboard.local_page_code})", "always": true}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/core/dashboards/facebook_dashboard.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "core", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${facebook_dashboard.date}", "always": true}, {"join": "dim__location_groups", "sql_on": "(${dim__location_groups.local_page_code} = ${facebook_dashboard.local_page_code})", "always": true}]}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["incremental", "fact", "dashboard"]}, "created_at": 1732268181.4209557, "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`facebook_dashboard`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'fact','dashboard']\n) }}\n\n{% set metrics = [\"impressions\",\"spend\",\"clicks\",\"reach\",\"link_click\",\"post_engagement\",\"offline_conversion_purchase\",\"offline_conversion_purchase_value\",\"pixel_purchase\",\"pixel_purchase_value\",\"meta_purchase\",\"meta_purchase_value\"] %}\n{% set targets = [\"budget\", \"sales_target\", \"traffic_target\"] %}\n{% set rev_calcols ={ \"transaction_id\" :\"count(distinct \",\n\"total\" :\"sum(\",\n\"total_payment\" :\"sum(\" } %}\n{% set rev_types = [\"invoice\", \"return\"] %}\n\nwith offline_performance as (\n  SELECT\n  asm.local_page_code, \n  asm.fb_ads_pic AS pic,\n  DATE(r.transaction_date) transaction_date,\n    {%- for col,cal in rev_calcols.items() %}\n      {{ cal }} {{ col }}{{ \")\" }} AS val_{{ col }},\n      {%- for type in rev_types %}\n        {{ cal }}\n        CASE\n          WHEN transaction_type = '{{type}}' THEN {{ col }}\n        END {{ \")\" }} AS num_{{ type }}_{{ col }},\n      {% endfor -%}\n    {% endfor -%}\n    COUNT(\n      DISTINCT r.branch_id\n    ) AS num_stores,\n  FROM\n    {{ ref(\"fct__transactions\") }} r\n    INNER JOIN {{ ref(\"dim__branches\") }} asm\n    ON r.branch_id = asm.branch_id\n  WHERE\n  {%- if is_incremental() %}\n    date(r.transaction_date) >= date_add(current_date, interval -7 day)\n  {% else %}\n    r.transaction_date >= '2023-11-01'\n  {% endif -%}\n    AND r.branch_id NOT IN (1000087891)\n    and asm.asm_name is not null\n    and asm.channel = 'Offline'\n  {{dbt_utils.group_by(3)}} \n),\n\nfacebook_budget AS (\n  SELECT\n    budget.local_page_code,\n    budget.date,\n    budget.fb_ads_pic,\n    {%- for target in targets %}\n      SUM(daily_{{ target }}) AS daily_{{ target }},\n    {% endfor -%}\n  FROM\n    {{ ref(\"facebook_budget\") }}\n    budget\n  WHERE\n    budget.date <= CURRENT_DATE()\n    {%- if is_incremental() %}\n    and budget.date >= date_add(current_date, interval -7 day)\n    {% else %}\n    and budget.date >= '2023-11-01'\n  {% endif -%}\n  {{dbt_utils.group_by(3)}}\n),\nfacebook_performance as (\n  SELECT\n    cp.ad_group_location,\n    cp.ad_pic,\n    fb.date_start,\n    {% for metric in metrics %}\n      SUM(fb.{{ metric }}) AS {{ metric }},\n    {% endfor %}\n  FROM\n    {{ ref(\"stg_facebookads__adsinsights\") }} fb\n    left join {{ref(\"dim__campaigns\")}} cp on fb.ad_key = cp.ad_key\n  WHERE \n  {% if is_incremental() %}\n    date_start >= date_add(current_date, interval -7 day)\n  {% else %}\n    date_start >= '2023-11-01'\n  {% endif %}\n  {# and cp.ad_group_location = 'Store' #}\n  and fb.account_id not in (\n    -- wookids\n    \"311864311227191\",\"622771789982135\",\"3744530109108893\",\n    -- ecom\n    \"521606912204785\",\"151869866811869\",\n    -- HR\n    \"572603800939181\",\n    -- branding\n    \"836481701438037\",\n    -- web\n    \"382523215230249\"\n    )\n  {{dbt_utils.group_by(3)}}\n)\n\nselect f.* except(date_start,ad_group_location,ad_pic),\n  o.* except(transaction_date,local_page_code,pic),\n  b.* except(date,local_page_code,fb_ads_pic),\n  coalesce(f.date_start, o.transaction_date,b.date) as date,\n  coalesce(f.ad_group_location, o.local_page_code, b.local_page_code) as local_page_code,\n  coalesce(o.pic,f.ad_pic, b.fb_ads_pic) as ad_pic\nfrom facebook_performance f\nfull outer join  offline_performance o \non f.date_start = o.transaction_date \nand f.ad_group_location = o.local_page_code\nand f.ad_pic = o.pic\nfull outer join facebook_budget b\non coalesce(o.transaction_date,f.date_start) = b.date\nand coalesce(o.local_page_code,f.ad_group_location) = b.local_page_code\nand coalesce(o.pic,f.ad_pic) = b.fb_ads_pic", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}, {"name": "dim__branches", "package": null, "version": null}, {"name": "facebook_budget", "package": null, "version": null}, {"name": "stg_facebookads__adsinsights", "package": null, "version": null}, {"name": "dim__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.fct__transactions", "model.sado_analytics_services.dim__branches", "model.sado_analytics_services.facebook_budget", "model.sado_analytics_services.stg_facebookads__adsinsights", "model.sado_analytics_services.dim__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/dashboards/facebook_dashboard.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith offline_performance as (\n  SELECT\n  asm.local_page_code, \n  asm.fb_ads_pic AS pic,\n  DATE(r.transaction_date) transaction_date,\n      count(distinct  transaction_id) AS val_transaction_id,\n        count(distinct \n        CASE\n          WHEN transaction_type = 'invoice' THEN transaction_id\n        END ) AS num_invoice_transaction_id,\n      \n        count(distinct \n        CASE\n          WHEN transaction_type = 'return' THEN transaction_id\n        END ) AS num_return_transaction_id,\n      \n      sum( total) AS val_total,\n        sum(\n        CASE\n          WHEN transaction_type = 'invoice' THEN total\n        END ) AS num_invoice_total,\n      \n        sum(\n        CASE\n          WHEN transaction_type = 'return' THEN total\n        END ) AS num_return_total,\n      \n      sum( total_payment) AS val_total_payment,\n        sum(\n        CASE\n          WHEN transaction_type = 'invoice' THEN total_payment\n        END ) AS num_invoice_total_payment,\n      \n        sum(\n        CASE\n          WHEN transaction_type = 'return' THEN total_payment\n        END ) AS num_return_total_payment,\n      COUNT(\n      DISTINCT r.branch_id\n    ) AS num_stores,\n  FROM\n    `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` r\n    INNER JOIN `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` asm\n    ON r.branch_id = asm.branch_id\n  WHERE\n    date(r.transaction_date) >= date_add(current_date, interval -7 day)\n  AND r.branch_id NOT IN (1000087891)\n    and asm.asm_name is not null\n    and asm.channel = 'Offline'\n  group by 1,2,3 \n),\n\nfacebook_budget AS (\n  SELECT\n    budget.local_page_code,\n    budget.date,\n    budget.fb_ads_pic,\n      SUM(daily_budget) AS daily_budget,\n    \n      SUM(daily_sales_target) AS daily_sales_target,\n    \n      SUM(daily_traffic_target) AS daily_traffic_target,\n    FROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`facebook_budget`\n    budget\n  WHERE\n    budget.date <= CURRENT_DATE()\n    and budget.date >= date_add(current_date, interval -7 day)\n    group by 1,2,3\n),\nfacebook_performance as (\n  SELECT\n    cp.ad_group_location,\n    cp.ad_pic,\n    fb.date_start,\n    \n      SUM(fb.impressions) AS impressions,\n    \n      SUM(fb.spend) AS spend,\n    \n      SUM(fb.clicks) AS clicks,\n    \n      SUM(fb.reach) AS reach,\n    \n      SUM(fb.link_click) AS link_click,\n    \n      SUM(fb.post_engagement) AS post_engagement,\n    \n      SUM(fb.offline_conversion_purchase) AS offline_conversion_purchase,\n    \n      SUM(fb.offline_conversion_purchase_value) AS offline_conversion_purchase_value,\n    \n      SUM(fb.pixel_purchase) AS pixel_purchase,\n    \n      SUM(fb.pixel_purchase_value) AS pixel_purchase_value,\n    \n      SUM(fb.meta_purchase) AS meta_purchase,\n    \n      SUM(fb.meta_purchase_value) AS meta_purchase_value,\n    \n  FROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_facebookads__adsinsights` fb\n    left join `agile-scheme-394814`.`dbt_prod_marketing`.`dim__campaigns` cp on fb.ad_key = cp.ad_key\n  WHERE \n  \n    date_start >= date_add(current_date, interval -7 day)\n  \n  \n  and fb.account_id not in (\n    -- wookids\n    \"311864311227191\",\"622771789982135\",\"3744530109108893\",\n    -- ecom\n    \"521606912204785\",\"151869866811869\",\n    -- HR\n    \"572603800939181\",\n    -- branding\n    \"836481701438037\",\n    -- web\n    \"382523215230249\"\n    )\n  group by 1,2,3\n)\n\nselect f.* except(date_start,ad_group_location,ad_pic),\n  o.* except(transaction_date,local_page_code,pic),\n  b.* except(date,local_page_code,fb_ads_pic),\n  coalesce(f.date_start, o.transaction_date,b.date) as date,\n  coalesce(f.ad_group_location, o.local_page_code, b.local_page_code) as local_page_code,\n  coalesce(o.pic,f.ad_pic, b.fb_ads_pic) as ad_pic\nfrom facebook_performance f\nfull outer join  offline_performance o \non f.date_start = o.transaction_date \nand f.ad_group_location = o.local_page_code\nand f.ad_pic = o.pic\nfull outer join facebook_budget b\non coalesce(o.transaction_date,f.date_start) = b.date\nand coalesce(o.local_page_code,f.ad_group_location) = b.local_page_code\nand coalesce(o.pic,f.ad_pic) = b.fb_ads_pic", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.sales_forecast": {"database": "agile-scheme-394814", "schema": "dbt_prod_core", "name": "sales_forecast", "resource_type": "model", "package_name": "sado_analytics_services", "path": "core/dashboards/sales_forecast.sql", "original_file_path": "models/core/dashboards/sales_forecast.sql", "unique_id": "model.sado_analytics_services.sales_forecast", "fqn": ["sado_analytics_services", "core", "dashboards", "sales_forecast"], "alias": "sales_forecast", "checksum": {"name": "sha256", "checksum": "a44194258be70c1166cdadf020e2dc953f64f06566fed4964d67c89bf6173332"}, "config": {"enabled": true, "alias": null, "schema": "core", "database": null, "tags": ["table", "dimension", "forecast", "dashboard", "hourly"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${sales_forecast.date}"}]}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["date"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "dimension", "forecast", "dashboard", "hourly"], "description": "The sales_forecast model combines revenue metrics and forecast data to provide a comprehensive view of past and future sales, including the number of invoices, number of stores, daily average order value, and forecasted values.", "columns": {"date": {"name": "date", "description": "sales date or forecasted value date", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "date", "constraints": [], "quote": null, "tags": []}, "num_invoices": {"name": "num_invoices", "description": "No. invoices (actual value for occured dates, forecasted values for upcoming dates)", "meta": {"metrics": {"m_num_invoices": {"type": "sum", "label": "No.Invoices", "round": 0, "group_label": "Forecast metrics"}, "m_revenue": {"type": "number", "label": "Revenue", "sql": "${m_num_invoices} * ${m_daily_aov}", "round": 2, "compact": "millions", "group_label": "Forecast metrics"}, "m_error": {"type": "number", "label": "Estimated Errors", "round": 0, "group_label": "Forecast metrics", "sql": "case when ${m_num_invoices} > ${m_mean_upper_estimated} then ${m_num_invoices} - ${m_mean_upper_estimated}  when ${m_num_invoices} < ${m_mean_lower_estimated} then ${m_mean_lower_estimated} - ${m_num_invoices} else 0 end"}, "m_error_rate": {"type": "number", "label": "Estimated Errors Rate", "round": 0, "group_label": "Forecast metrics", "format": "percent", "sql": "safe_divide(${m_error},${m_num_invoices})"}, "m_forecast_error": {"type": "number", "label": "Forecast Errors", "round": 0, "group_label": "Forecast metrics", "sql": "abs(${m_forecasted_value} - ${m_num_invoices})"}, "m_forecast_error_rate": {"type": "number", "label": "Forecast Errors Rate", "round": 1, "group_label": "Forecast metrics", "format": "percent", "sql": "safe_divide(${m_forecast_error},${m_num_invoices})"}}, "dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "mean_estimated": {"name": "mean_estimated", "description": "avg of estimated values for no.invoices", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_mean_estimated": {"type": "sum", "label": "Mean Estimated", "round": 0, "group_label": "Forecast metrics"}, "m_revenue_estimated": {"type": "number", "label": "Revenue Estimated", "sql": "${m_mean_estimated} * ${m_daily_aov}", "round": 2, "compact": "millions", "group_label": "Forecast metrics"}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "mean_lower_estimated": {"name": "mean_lower_estimated", "description": "lower bound of estimation", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_mean_lower_estimated": {"type": "sum", "label": "Mean Lower Estimated", "round": 0, "group_label": "Forecast metrics"}, "m_revenue_lower_estimated": {"type": "number", "label": "Revenue Lower Estimated", "sql": "${m_mean_lower_estimated} * ${m_daily_aov}", "round": 2, "compact": "millions", "group_label": "Forecast metrics"}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "mean_upper_estimated": {"name": "mean_upper_estimated", "description": "upper bound of estimation", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_mean_upper_estimated": {"type": "sum", "label": "Mean Upper Estimated", "round": 0, "group_label": "Forecast metrics"}, "m_revenue_upper_estimated": {"type": "number", "label": "Revenue Upper Estimated", "sql": "${m_mean_upper_estimated} * ${m_daily_aov}", "round": 2, "compact": "millions", "group_label": "Forecast metrics"}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "forecasted_value": {"name": "forecasted_value", "description": "forecasted values", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_forecasted_value": {"type": "sum", "label": "Forecasted Value", "round": 0, "group_label": "Forecast metrics"}, "m_revenue_forecasted": {"type": "number", "label": "Revenue Forecasted", "sql": "${m_forecasted_value} * ${m_daily_aov}", "round": 2, "compact": "millions", "group_label": "Forecast metrics"}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_stores": {"name": "num_stores", "description": "no.stores operating", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_stores": {"type": "sum", "label": "Operating days", "round": 0, "group_label": "Forecast metrics"}}}, "data_type": "numeric", "constraints": [], "quote": null, "tags": []}, "daily_aov": {"name": "daily_aov", "description": "daily aov for occured dates, 30 days rolling avg for upcomming dates", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_daily_aov": {"type": "average", "label": "Avg AOV", "round": 1, "compact": "thousands", "group_label": "Forecast metrics"}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "retained_pct": {"name": "retained_pct", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_retained_pct": {"type": "average", "label": "Avg Retained pct", "round": 0, "group_label": "Forecast metrics", "format": "percent"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${sales_forecast.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/core/dashboards/sales_forecast.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "core", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${sales_forecast.date}"}]}, "unique_key": ["date"], "tags": ["table", "dimension", "forecast", "dashboard", "hourly"]}, "created_at": 1732268181.3573036, "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`sales_forecast`", "raw_code": "{{ config(\n  materialized = 'table',\n  unique_key = ['date'],\n  tags = ['table', 'dimension', 'forecast','dashboard','hourly']\n) }}\n\nWITH revenue_metrics AS (\n    SELECT\n        DATE,\n        SUM(num_invoice_transaction_id) AS num_invoices,\n        SUM(num_stores) AS num_stores,\n        safe_divide(SUM(num_invoice_total), SUM(num_invoice_transaction_id)) AS daily_aov,\n        safe_divide(sum(val_total_payment),sum(num_invoice_total)) as retained_pct,\n    FROM\n        {{ ref('sales_dashboard') }} s \n        left join {{ ref('dim__branches') }} b on s.branch_id = b.branch_id\n    WHERE\n        DATE >= '2024-01-01'\n        and date < current_date()\n        and b.asm_name is not null\n    GROUP BY\n        1\n),\nforecast AS (\n    SELECT\n        forecast_date,\n        date_in_future,\n        mean_estimated,\n        mean_upper_estimated,\n        mean_lower_estimated,\n        forecasted_value\n    FROM\n        {{ ref('stg_forecaster__forecast') }}\n    WHERE\n        forecast_date >= '2024-01-01'\n),\ndaily_forecasted_values AS (\n    SELECT\n        r.date,\n        r.num_invoices,\n        r.num_stores,\n        r.daily_aov,\n        f.mean_estimated,\n        f.mean_lower_estimated,\n        f.mean_upper_estimated,\n        f.forecasted_value,\n        r.retained_pct,\n    FROM\n        revenue_metrics r\n        LEFT JOIN forecast f\n        ON r.date = f.forecast_date\n        AND r.date = f.date_in_future\n),\nfureture_values AS (\n    SELECT\n        *\n    FROM\n        daily_forecasted_values\n    UNION ALL\n    SELECT\n        date_in_future,\n        forecasted_value,\n        CAST(\n            NULL AS numeric\n        ) AS num_stores,\n        CAST(\n            NULL AS numeric\n        ) AS daily_aov,\n        mean_estimated,\n        mean_lower_estimated,\n        mean_upper_estimated,\n        forecasted_value,\n        CAST(\n            NULL AS numeric\n        ) AS retained_pct,\n    FROM\n        forecast\n    WHERE\n        date_in_future >= CURRENT_DATE()\n        AND forecast_date = CURRENT_DATE()\n)\n\nselect \n* except(num_stores,daily_aov,retained_pct),\ncoalesce(\n    num_stores,\n    first_value(num_stores ignore nulls) over(order by date desc rows between current row and 10 following)\n) num_stores,\ncoalesce(daily_aov,\navg(daily_aov) over (order by unix_date(date) desc range between current row and 7 following )\n) daily_aov,\ncoalesce(retained_pct,\navg(retained_pct) over (order by unix_date(date) desc range between current row and 7 following )\n) retained_pct,\n\nfrom fureture_values", "language": "sql", "refs": [{"name": "sales_dashboard", "package": null, "version": null}, {"name": "dim__branches", "package": null, "version": null}, {"name": "stg_forecaster__forecast", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.sales_dashboard", "model.sado_analytics_services.dim__branches", "model.sado_analytics_services.stg_forecaster__forecast"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/dashboards/sales_forecast.sql", "compiled": true, "compiled_code": "\n\nWITH revenue_metrics AS (\n    SELECT\n        DATE,\n        SUM(num_invoice_transaction_id) AS num_invoices,\n        SUM(num_stores) AS num_stores,\n        safe_divide(SUM(num_invoice_total), SUM(num_invoice_transaction_id)) AS daily_aov,\n        safe_divide(sum(val_total_payment),sum(num_invoice_total)) as retained_pct,\n    FROM\n        `agile-scheme-394814`.`dbt_prod_core`.`sales_dashboard` s \n        left join `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b on s.branch_id = b.branch_id\n    WHERE\n        DATE >= '2024-01-01'\n        and date < current_date()\n        and b.asm_name is not null\n    GROUP BY\n        1\n),\nforecast AS (\n    SELECT\n        forecast_date,\n        date_in_future,\n        mean_estimated,\n        mean_upper_estimated,\n        mean_lower_estimated,\n        forecasted_value\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_forecaster__forecast`\n    WHERE\n        forecast_date >= '2024-01-01'\n),\ndaily_forecasted_values AS (\n    SELECT\n        r.date,\n        r.num_invoices,\n        r.num_stores,\n        r.daily_aov,\n        f.mean_estimated,\n        f.mean_lower_estimated,\n        f.mean_upper_estimated,\n        f.forecasted_value,\n        r.retained_pct,\n    FROM\n        revenue_metrics r\n        LEFT JOIN forecast f\n        ON r.date = f.forecast_date\n        AND r.date = f.date_in_future\n),\nfureture_values AS (\n    SELECT\n        *\n    FROM\n        daily_forecasted_values\n    UNION ALL\n    SELECT\n        date_in_future,\n        forecasted_value,\n        CAST(\n            NULL AS numeric\n        ) AS num_stores,\n        CAST(\n            NULL AS numeric\n        ) AS daily_aov,\n        mean_estimated,\n        mean_lower_estimated,\n        mean_upper_estimated,\n        forecasted_value,\n        CAST(\n            NULL AS numeric\n        ) AS retained_pct,\n    FROM\n        forecast\n    WHERE\n        date_in_future >= CURRENT_DATE()\n        AND forecast_date = CURRENT_DATE()\n)\n\nselect \n* except(num_stores,daily_aov,retained_pct),\ncoalesce(\n    num_stores,\n    first_value(num_stores ignore nulls) over(order by date desc rows between current row and 10 following)\n) num_stores,\ncoalesce(daily_aov,\navg(daily_aov) over (order by unix_date(date) desc range between current row and 7 following )\n) daily_aov,\ncoalesce(retained_pct,\navg(retained_pct) over (order by unix_date(date) desc range between current row and 7 following )\n) retained_pct,\n\nfrom fureture_values", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.sales_dashboard": {"database": "agile-scheme-394814", "schema": "dbt_prod_core", "name": "sales_dashboard", "resource_type": "model", "package_name": "sado_analytics_services", "path": "core/dashboards/sales_dashboard.sql", "original_file_path": "models/core/dashboards/sales_dashboard.sql", "unique_id": "model.sado_analytics_services.sales_dashboard", "fqn": ["sado_analytics_services", "core", "dashboards", "sales_dashboard"], "alias": "sales_dashboard", "checksum": {"name": "sha256", "checksum": "42330455bc08c61602049d7ca7ff10858f815ce8e747c482b21d0f81dc401a12"}, "config": {"enabled": true, "alias": null, "schema": "core", "database": null, "tags": ["incremental", "fact", "dashboard"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${sales_dashboard.date}"}, {"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${sales_dashboard.branch_id}"}, {"join": "fct__working_days", "sql_on": "${fct__working_days.branch_id} = ${sales_dashboard.branch_id}\nAND ${fct__working_days.date} = ${sales_dashboard.date}"}]}, "group": null, "materialized": "table", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["date", "branch_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "dashboard"], "description": "The sales_dashboard model combines offline sales performance data with budget data to provide a comprehensive view of branch-level sales performance.", "columns": {"val_transaction_id": {"name": "val_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng giao d\u1ecbch", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_transactions": {"type": "sum", "label": "No. Transactions", "group_label": "Sales metrics", "round": 0}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "num_invoice_transaction_id": {"name": "num_invoice_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng invoice", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_invoices": {"type": "sum", "label": "No. Invoices", "group_label": "Sales metrics", "round": 0}, "m_num_invoices_psd": {"type": "number", "label": "No. Invoices PSD", "group_label": "Sales metrics", "sql": "safe_divide(${m_num_invoices},${m_num_stores})", "round": 2}, "m_aov": {"type": "number", "sql": "safe_divide(${m_invoice_val},${m_num_invoices})", "label": "AOV", "group_label": "Sales metrics", "compact": "thousands", "round": 1}, "m_revenue_per_customer": {"type": "number", "sql": "safe_divide(${m_invoice_val},${m_num_customers})", "label": "Revenue per Customer", "group_label": "Sales metrics", "compact": "thousands", "round": 1}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "num_return_transaction_id": {"name": "num_return_transaction_id", "description": "s\u1ed1 l\u01b0\u1ee3ng tr\u1ea3", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_returns": {"type": "sum", "label": "No. Returns", "group_label": "Sales metrics", "round": 0}, "m_return_rate": {"type": "number", "sql": "safe_divide(${m_num_returns},${m_num_transactions})", "label": "Return Rate", "group_label": "Sales metrics", "format": "percent", "round": 1}}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}, "val_total": {"name": "val_total", "description": "gi\u00e1 tr\u1ecb giao d\u1ecbch", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_transaction_val": {"type": "sum", "label": "Transaction Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_invoice_total": {"name": "num_invoice_total", "description": "gi\u00e1 tr\u1ecb b\u00e1n", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_invoice_val": {"type": "sum", "label": "Invoice Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_return_total": {"name": "num_return_total", "description": "gi\u00e1 tr\u1ecb tr\u1ea3", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_return_val": {"type": "sum", "label": "Return Value", "group_label": "Sales metrics", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "val_total_payment": {"name": "val_total_payment", "description": "doanh thu thu\u1ea7n", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_payment_val": {"type": "sum", "label": "Payment", "group_label": "Sales metrics", "compact": "millions", "round": 1}, "m_run_rate": {"label": "Sales Run rate", "group_label": "Sales metrics", "type": "number", "sql": "safe_divide(${m_payment_val},${m_sales_target})", "format": "percent", "round": 2}, "m_payment_psd": {"label": "Revenue PSD", "group_label": "Sales metrics", "type": "number", "sql": "safe_divide(${m_payment_val},${m_num_stores})", "compact": "millions", "round": 2}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_invoice_total_payment": {"name": "num_invoice_total_payment", "description": "doanh thu thu\u1ea7n b\u00e1n h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "num_return_total_payment": {"name": "num_return_total_payment", "description": "doanh thu thu\u1ea7n tr\u1ea3 h\u00e0ng", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "daily_budget": {"name": "daily_budget", "description": "ng\u00e2n sach/ng\u00e0y", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_ads_budget": {"type": "sum", "label": "Budget", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "daily_sales_target": {"name": "daily_sales_target", "description": "target sales/ng\u00e0y", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_sales_target": {"type": "sum", "label": "Sales target", "group_label": "Budget", "compact": "millions", "round": 1}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "daily_traffic_target": {"name": "daily_traffic_target", "description": "target traffic/ng\u00e0y", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_traffic_target": {"type": "sum", "label": "Traffic target", "group_label": "Budget", "round": 0}}}, "data_type": "float64", "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Ng\u00e0y", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "M\u00e3 CH", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_operating_days": {"type": "count_distinct", "sql": "${TABLE}.date||${TABLE}.branch_id", "label": "No. Operating Days", "group_label": "Misc", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_stores": {"name": "num_stores", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_stores": {"type": "sum", "label": "No. Days with Revenue", "group_label": "Misc", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_traffic": {"name": "total_traffic", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_traffic": {"type": "sum", "label": "Total Traffic", "group_label": "Traffic", "round": 0}, "m_traffic_run_rate": {"type": "number", "sql": "safe_divide(${m_total_traffic},${m_traffic_target})", "format": "percent", "label": "Traffic Run rate", "group_label": "Traffic", "round": 2}, "m_traffic_psd": {"label": "Traffic PSD", "group_label": "Sales metrics", "type": "number", "sql": "safe_divide(${m_total_traffic},${m_num_stores})", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_working_hour": {"name": "total_working_hour", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_total_working_hour": {"type": "sum", "label": "Total Working Hour", "group_label": "Traffic", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "val_customer_id": {"name": "val_customer_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_invoice_customer_id": {"name": "num_invoice_customer_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_customers": {"type": "sum", "label": "No. Customers Purchased", "group_label": "Sales metrics", "round": 0}, "m_conversion_rate": {"type": "number", "sql": "safe_divide(${m_num_customers},${m_total_traffic})", "format": "percent", "label": "Conversion Rate", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_return_customer_id": {"name": "num_return_customer_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "promotion": {"name": "promotion", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${sales_dashboard.date}"}, {"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${sales_dashboard.branch_id}"}, {"join": "fct__working_days", "sql_on": "${fct__working_days.branch_id} = ${sales_dashboard.branch_id}\nAND ${fct__working_days.date} = ${sales_dashboard.date}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/core/dashboards/sales_dashboard.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "core", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${sales_dashboard.date}"}, {"join": "dim__branches", "sql_on": "${dim__branches.branch_id} = ${sales_dashboard.branch_id}"}, {"join": "fct__working_days", "sql_on": "${fct__working_days.branch_id} = ${sales_dashboard.branch_id}\nAND ${fct__working_days.date} = ${sales_dashboard.date}"}]}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": ["date", "branch_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "fact", "dashboard"]}, "created_at": 1732268181.3863976, "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`sales_dashboard`", "raw_code": "{{ config(\n  materialized = 'table',\n  partition_by ={ 'field': 'date',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'merge',\n  unique_key = ['date','branch_id'],\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'fact','dashboard']\n) }}\n\n{% set targets = [\"budget\", \"sales_target\", \"traffic_target\"] %}\n{% set rev_calcols ={ \"transaction_id\" :\"count(distinct \",\n\"customer_id\":\"count(distinct \",\n\"total\" :\"sum(\",\n\"total_payment\" :\"sum(\" } %}\n{% set rev_types = [\"invoice\", \"return\"] %}\n\nWITH offline_performance AS (\n  SELECT\n    {{ dbt_utils.generate_surrogate_key(['r.branch_id', 'date(r.transaction_date)']) }} AS branch_working_day_id,\n    {% for col,\n      cal in rev_calcols.items() %}\n      {{ cal + \" \" + col + \")\" }} AS {{ \"val_\" + col }},\n      {% for type in rev_types -%}\n        {{ cal }}\n        CASE\n          WHEN transaction_type = '{{type}}' THEN {{ col }}\n        END {{ \")\" }} AS {{ \"num_\" + type + \"_\" + col }},\n      {% endfor %}\n    {% endfor %}\n    COUNT(DISTINCT r.branch_id) AS num_stores,\n  FROM\n    {{ ref(\"fct__transactions\") }} r\n  WHERE 1=1\n    {% if is_incremental() %}\n      and DATE(r.transaction_date) >= date_add(CURRENT_DATE,INTERVAL -7 DAY) \n      {# r.transaction_date >='2024-02-01' #}\n    {% else %}\n      and r.transaction_date >= '2023-01-01'\n    {% endif %}\n    AND r.branch_id NOT IN (1000087891) \n    {# and asm.asm_name is not null #}\n    {# and asm.channel = 'Offline' #}\nGROUP BY 1\n),\n\nbudget AS (\n  SELECT\n    {# budget.branch_id,budget.date,#}\n    {{ dbt_utils.generate_surrogate_key(['branch_id', 'date']) }} AS branch_working_day_id,\n    {% for target in targets %}\n      SUM({{'daily_'+target }}) AS  {{ 'daily_'+target }},\n    {% endfor %}\n  FROM\n    {{ ref(\"facebook_budget\") }} budget\n  WHERE\n    budget.date <= CURRENT_DATE()\n  {% if is_incremental() %}\n  AND budget.date >= date_add(CURRENT_DATE,INTERVAL -7 DAY) \n  {% endif %}\n  GROUP BY\n    1\n),\noperating_days AS (\n  SELECT\n    *\n  FROM\n    {{ ref(\"int__working_days\") }}\n  WHERE\n    1 = 1\n  {% if is_incremental() %}\n  AND DATE(DATE) >= date_add(CURRENT_DATE,INTERVAL -7 DAY)\n  {% else %}\n    AND DATE >= '2023-01-01'\n  {% endif %}\n),\n_traffic AS (\n  SELECT\n    branch_name,\n    DATE,\n    SUM(traffic) AS total_traffic,\n    SUM(working_hour) AS total_working_hour,\n    from {{ ref('stg_gsheet__traffic') }}\n    group by 1,2\n)\n\nSELECT\n  o.* EXCEPT(branch_working_day_id),\n  b.* EXCEPT(branch_working_day_id),\n  t.* except(branch_name, date),\n  ops.date,\n  ops.branch_id,\n  ops.promotion,\nFROM operating_days ops\nleft outer join offline_performance o on ops.branch_working_day_id = o.branch_working_day_id\nleft outer join budget b on ops.branch_working_day_id = b.branch_working_day_id\nleft outer join _traffic t on ops.branch_name = t.branch_name and ops.date = t.date\n\n\n{# offline_performance o full\n  OUTER JOIN budget b\n  ON o.branch_id = b.branch_id\n  AND o.transaction_date = b.date full\n  OUTER JOIN operating_days C\n  ON COALESCE(\n    o.branch_id,\n    b.branch_id\n  ) = C.branch_id\n  AND COALESCE(\n    o.transaction_date,\n    b.date\n  ) = C.date #}", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}, {"name": "facebook_budget", "package": null, "version": null}, {"name": "int__working_days", "package": null, "version": null}, {"name": "stg_gsheet__traffic", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.fct__transactions", "model.sado_analytics_services.facebook_budget", "model.sado_analytics_services.int__working_days", "model.sado_analytics_services.stg_gsheet__traffic"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/dashboards/sales_dashboard.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nWITH  __dbt__cte__int__working_days as (\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    p.promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel in ('Offline','Popup')\nand c.date <= current_date()\nAND b.branch_id NOT IN (1000087891)\nand b.asm_name is not null\n), offline_performance AS (\n  SELECT\n    to_hex(md5(cast(coalesce(cast(r.branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date(r.transaction_date) as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS branch_working_day_id,\n    \n      count(distinct  transaction_id) AS val_transaction_id,\n      count(distinct \n        CASE\n          WHEN transaction_type = 'invoice' THEN transaction_id\n        END ) AS num_invoice_transaction_id,\n      count(distinct \n        CASE\n          WHEN transaction_type = 'return' THEN transaction_id\n        END ) AS num_return_transaction_id,\n      \n    \n      count(distinct  customer_id) AS val_customer_id,\n      count(distinct \n        CASE\n          WHEN transaction_type = 'invoice' THEN customer_id\n        END ) AS num_invoice_customer_id,\n      count(distinct \n        CASE\n          WHEN transaction_type = 'return' THEN customer_id\n        END ) AS num_return_customer_id,\n      \n    \n      sum( total) AS val_total,\n      sum(\n        CASE\n          WHEN transaction_type = 'invoice' THEN total\n        END ) AS num_invoice_total,\n      sum(\n        CASE\n          WHEN transaction_type = 'return' THEN total\n        END ) AS num_return_total,\n      \n    \n      sum( total_payment) AS val_total_payment,\n      sum(\n        CASE\n          WHEN transaction_type = 'invoice' THEN total_payment\n        END ) AS num_invoice_total_payment,\n      sum(\n        CASE\n          WHEN transaction_type = 'return' THEN total_payment\n        END ) AS num_return_total_payment,\n      \n    \n    COUNT(DISTINCT r.branch_id) AS num_stores,\n  FROM\n    `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` r\n  WHERE 1=1\n    \n      and r.transaction_date >= '2023-01-01'\n    \n    AND r.branch_id NOT IN (1000087891) \n    \n    \nGROUP BY 1\n),\n\nbudget AS (\n  SELECT\n    \n    to_hex(md5(cast(coalesce(cast(branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS branch_working_day_id,\n    \n      SUM(daily_budget) AS  daily_budget,\n    \n      SUM(daily_sales_target) AS  daily_sales_target,\n    \n      SUM(daily_traffic_target) AS  daily_traffic_target,\n    \n  FROM\n    `agile-scheme-394814`.`dbt_prod_marketing`.`facebook_budget` budget\n  WHERE\n    budget.date <= CURRENT_DATE()\n  \n  GROUP BY\n    1\n),\noperating_days AS (\n  SELECT\n    *\n  FROM\n    __dbt__cte__int__working_days\n  WHERE\n    1 = 1\n  \n    AND DATE >= '2023-01-01'\n  \n),\n_traffic AS (\n  SELECT\n    branch_name,\n    DATE,\n    SUM(traffic) AS total_traffic,\n    SUM(working_hour) AS total_working_hour,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__traffic`\n    group by 1,2\n)\n\nSELECT\n  o.* EXCEPT(branch_working_day_id),\n  b.* EXCEPT(branch_working_day_id),\n  t.* except(branch_name, date),\n  ops.date,\n  ops.branch_id,\n  ops.promotion,\nFROM operating_days ops\nleft outer join offline_performance o on ops.branch_working_day_id = o.branch_working_day_id\nleft outer join budget b on ops.branch_working_day_id = b.branch_working_day_id\nleft outer join _traffic t on ops.branch_name = t.branch_name and ops.date = t.date\n\n\n", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sado_analytics_services.int__working_days", "sql": " __dbt__cte__int__working_days as (\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    p.promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel in ('Offline','Popup')\nand c.date <= current_date()\nAND b.branch_id NOT IN (1000087891)\nand b.asm_name is not null\n)"}], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.sms_dashboard": {"database": "agile-scheme-394814", "schema": "dbt_prod_core", "name": "sms_dashboard", "resource_type": "model", "package_name": "sado_analytics_services", "path": "core/dashboards/sms_dashboard.sql", "original_file_path": "models/core/dashboards/sms_dashboard.sql", "unique_id": "model.sado_analytics_services.sms_dashboard", "fqn": ["sado_analytics_services", "core", "dashboards", "sms_dashboard"], "alias": "sms_dashboard", "checksum": {"name": "sha256", "checksum": "6eb395eb51098f3d644adbdcd55c611bc928674a413c93870582ae23ff376469"}, "config": {"enabled": true, "alias": null, "schema": "core", "database": null, "tags": ["incremental", "fact", "dashboard", "daily"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${sms_dashboard.sent_time}"}, {"join": "dim__sms_campaigns", "sql_on": "${dim__sms_campaigns.sms_id} = ${sms_dashboard.sms_id}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "sent_time", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "dashboard", "daily"], "description": "", "columns": {"segment": {"name": "segment", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign": {"name": "campaign", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "previous_segment": {"name": "previous_segment", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_sent": {"name": "sms_sent", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_sms_sent": {"type": "sum", "label": "No. SMS sent", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_sent": {"name": "customer_sent", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_customer_sent": {"type": "sum", "label": "No. customer sent", "round": 0}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_cost": {"name": "sms_cost", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_sms_cost": {"type": "sum", "label": "SMS Cost", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total": {"name": "total", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_sms_revenue": {"type": "sum", "label": "SMS Revenue", "compact": "millions", "round": 1}, "m_sms_roi": {"type": "number", "label": "SMS ROI", "sql": "safe_divide(${m_sms_revenue},${m_sms_cost})", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_customer_converted": {"name": "num_customer_converted", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_customer_converted": {"type": "sum", "label": "No. Customer converted", "round": 0}, "m_customer_conversion_rate": {"type": "number", "label": "Customer conversion rate", "sql": "safe_divide(${m_customer_converted},${m_customer_sent})", "format": "percent", "round": 2}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sent_time": {"name": "sent_time", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sms_id": {"name": "sms_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": "int64", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${sms_dashboard.sent_time}"}, {"join": "dim__sms_campaigns", "sql_on": "${dim__sms_campaigns.sms_id} = ${sms_dashboard.sms_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/core/dashboards/sms_dashboard.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "core", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = ${sms_dashboard.sent_time}"}, {"join": "dim__sms_campaigns", "sql_on": "${dim__sms_campaigns.sms_id} = ${sms_dashboard.sms_id}"}]}, "partition_by": {"field": "sent_time", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["incremental", "fact", "dashboard", "daily"]}, "created_at": 1732268181.3988085, "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`sms_dashboard`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'sent_time',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'fact','dashboard','daily']\n) }}\n\n\nWITH customer_data as (\n    select \n        c.contact_number, \n        c.customer_id, \n        rfm.segment, \n        rfm.previous_segment, \n        rfm.start_of_month,\n        rfm.first_purchase,\n    from {{ ref('stg_kiotviet__customers') }} c\n    left join {{ ref('rfm_movement') }} rfm \n    on c.customer_id = rfm.customer_id\n    where c.contact_number is not null\n    {% if is_incremental() -%}\n      and rfm.start_of_month >= date_trunc(current_date, month)\n    {% endif -%}\n),\n\nsms_sent_data AS (\n\n    SELECT\n        {# DATE_TRUNC(DATE(sent_time), MONTH) sent_month, #}\n        DATE(sent_time) sent_time,\n        sms.campaign,\n        sms.sms_id,\n        coalesce(c.segment,'Cold Data') segment,\n        case \n            when (c.previous_segment = 'First-time Purchaser' and date(c.first_purchase) >= DATE(sent_time)) or c.first_purchase is null then 'Cold Data' \n        else c.previous_segment end previous_segment,\n        COUNT(DISTINCT sent_id) AS sms_sent,\n        COUNT(DISTINCT case when sent_status = 'Th\u00e0nh c\u00f4ng' then phone end) AS customer_sent,\n        {# count(distinct case when sent_result = 1 then phone end) as customer_received, #}\n        SUM(case when sent_status = 'Th\u00e0nh c\u00f4ng' then sms_cost end) sms_cost,\n    FROM\n        {{ ref(\"stg_esms__sent_data\") }} sms\n    left join customer_data c \n    on sms.phone = c.contact_number \n    and DATE_TRUNC(DATE(sent_time), MONTH) = c.start_of_month\n    WHERE\n        sms.sent_time IS NOT NULL\n            {# AND sms.campaign LIKE 'QC%' #}\n        AND sent_status in ('Th\u00e0nh c\u00f4ng','Ch\u1edd g\u1eedi')\n        and (audience not in ('TUYEN DUNG','THONG BAO DON HANG') or audience is null)\n        {% if is_incremental() -%}\n        and sms.sent_time >= date_trunc(current_date, month)\n        {% endif -%}\n    {{dbt_utils.group_by(5)}}\n),\n\nsms_revenue as (\n    select \n        {# date_trunc(date(sent_time),month) sent_month, #}\n        date(sent_time) sent_time,\n        r.campaign,\n        r.sms_id,\n        coalesce(c.segment,'Cold Data') segment,\n        case when c.previous_segment = 'First-time Purchaser' and date(c.first_purchase) >= DATE(sent_time) then 'Cold Data' else c.previous_segment end previous_segment,\n        sum(total) total,\n        count(distinct r.customer_id) as num_customer_converted,\n    from {{ ref('fct__sms_revenue') }} r \n    left join customer_data c \n    on r.customer_id = c.customer_id \n    and date_trunc(date(sent_time),month) = c.start_of_month\n    {% if is_incremental() -%}\n        where r.sent_time >= date_trunc(current_date, month)\n    {% endif -%}\n    {{dbt_utils.group_by(5)}}\n)\n\nselect \n    ss.*, \n    sr.total, \n    sr.num_customer_converted\nfrom sms_sent_data ss \nleft join sms_revenue sr \non ss.sent_time = sr.sent_time \nand ss.segment = sr.segment \nand ss.previous_segment = sr.previous_segment\nand ss.sms_id = sr.sms_id", "language": "sql", "refs": [{"name": "stg_kiotviet__customers", "package": null, "version": null}, {"name": "rfm_movement", "package": null, "version": null}, {"name": "stg_esms__sent_data", "package": null, "version": null}, {"name": "fct__sms_revenue", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_kiotviet__customers", "model.sado_analytics_services.rfm_movement", "model.sado_analytics_services.stg_esms__sent_data", "model.sado_analytics_services.fct__sms_revenue"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/dashboards/sms_dashboard.sql", "compiled": true, "compiled_code": "\n\n\nWITH customer_data as (\n    select \n        c.contact_number, \n        c.customer_id, \n        rfm.segment, \n        rfm.previous_segment, \n        rfm.start_of_month,\n        rfm.first_purchase,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers` c\n    left join `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement` rfm \n    on c.customer_id = rfm.customer_id\n    where c.contact_number is not null\n    and rfm.start_of_month >= date_trunc(current_date, month)\n    ),\n\nsms_sent_data AS (\n\n    SELECT\n        \n        DATE(sent_time) sent_time,\n        sms.campaign,\n        sms.sms_id,\n        coalesce(c.segment,'Cold Data') segment,\n        case \n            when (c.previous_segment = 'First-time Purchaser' and date(c.first_purchase) >= DATE(sent_time)) or c.first_purchase is null then 'Cold Data' \n        else c.previous_segment end previous_segment,\n        COUNT(DISTINCT sent_id) AS sms_sent,\n        COUNT(DISTINCT case when sent_status = 'Th\u00e0nh c\u00f4ng' then phone end) AS customer_sent,\n        \n        SUM(case when sent_status = 'Th\u00e0nh c\u00f4ng' then sms_cost end) sms_cost,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data` sms\n    left join customer_data c \n    on sms.phone = c.contact_number \n    and DATE_TRUNC(DATE(sent_time), MONTH) = c.start_of_month\n    WHERE\n        sms.sent_time IS NOT NULL\n            \n        AND sent_status in ('Th\u00e0nh c\u00f4ng','Ch\u1edd g\u1eedi')\n        and (audience not in ('TUYEN DUNG','THONG BAO DON HANG') or audience is null)\n        and sms.sent_time >= date_trunc(current_date, month)\n        group by 1,2,3,4,5\n),\n\nsms_revenue as (\n    select \n        \n        date(sent_time) sent_time,\n        r.campaign,\n        r.sms_id,\n        coalesce(c.segment,'Cold Data') segment,\n        case when c.previous_segment = 'First-time Purchaser' and date(c.first_purchase) >= DATE(sent_time) then 'Cold Data' else c.previous_segment end previous_segment,\n        sum(total) total,\n        count(distinct r.customer_id) as num_customer_converted,\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`fct__sms_revenue` r \n    left join customer_data c \n    on r.customer_id = c.customer_id \n    and date_trunc(date(sent_time),month) = c.start_of_month\n    where r.sent_time >= date_trunc(current_date, month)\n    group by 1,2,3,4,5\n)\n\nselect \n    ss.*, \n    sr.total, \n    sr.num_customer_converted\nfrom sms_sent_data ss \nleft join sms_revenue sr \non ss.sent_time = sr.sent_time \nand ss.segment = sr.segment \nand ss.previous_segment = sr.previous_segment\nand ss.sms_id = sr.sms_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.cohort_analysis": {"database": "agile-scheme-394814", "schema": "dbt_prod_core", "name": "cohort_analysis", "resource_type": "model", "package_name": "sado_analytics_services", "path": "core/analysis/cohort_analysis.sql", "original_file_path": "models/core/analysis/cohort_analysis.sql", "unique_id": "model.sado_analytics_services.cohort_analysis", "fqn": ["sado_analytics_services", "core", "analysis", "cohort_analysis"], "alias": "cohort_analysis", "checksum": {"name": "sha256", "checksum": "e26c43d79101c33b33c652e93fd231280f3889c3367679e1bf91c3cc80fc1911"}, "config": {"enabled": true, "alias": null, "schema": "core", "database": null, "tags": ["incremental", "dashboard", "fact", "daily"], "meta": {"joins": [{"join": "calendar", "alias": "purchase_month", "sql_on": "${purchase_month.date} = ${cohort_analysis.transaction_month}"}, {"join": "calendar", "alias": "cohort_month", "sql_on": "${cohort_month.date} = ${cohort_analysis.first_purchase_month}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["customer_id", "transaction_month"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_month", "data_type": "date", "granularity": "month"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "dashboard", "fact", "daily"], "description": "The model is a powerful tool for understanding customer behavior over time. It provides a detailed view of each customer's journey, from their first purchase to their most recent transaction. The model also tracks the customer's current and previous segments, providing insights into their purchasing patterns and how they have evolved. This information can be used to identify trends, predict future behavior, and inform strategic decisions.", "columns": {"customer_id": {"name": "customer_id", "description": "The unique identifier for each customer", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_customers": {"type": "count_distinct", "label": "Number of Customers", "group_label": "Customers", "round": 1, "compact": "thousands"}}}, "data_type": "BIGNUMERIC", "constraints": [], "quote": null, "tags": []}, "transaction_month": {"name": "transaction_month", "description": "The month in which a transaction occurred", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "first_purchase_month": {"name": "first_purchase_month", "description": "The month in which a customer made their first purchase", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": "DATE", "constraints": [], "quote": null, "tags": []}, "cohort_age": {"name": "cohort_age", "description": "This column represents the age of the cohort in months", "meta": {"dimension": {"type": "number"}}, "data_type": "INT64", "constraints": [], "quote": null, "tags": []}, "segment": {"name": "segment", "description": "This column represents the current segment of the customer. The segment is determined based on the RFM (Recency, Frequency, Monetary) analysis of the customer's transaction history.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "previous_segment": {"name": "previous_segment", "description": "This column represents the previous segment of the customer before the current month. It is used to track the movement of customers between different segments.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "cohort_age_group": {"name": "cohort_age_group", "description": "This column categorizes the age of the cohort into different groups. The age of the cohort is calculated as the difference in months between the transaction date and the first purchase date.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "alias": "purchase_month", "sql_on": "${purchase_month.date} = ${cohort_analysis.transaction_month}"}, {"join": "calendar", "alias": "cohort_month", "sql_on": "${cohort_month.date} = ${cohort_analysis.first_purchase_month}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/core/analysis/cohort_analysis.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "core", "meta": {"joins": [{"join": "calendar", "alias": "purchase_month", "sql_on": "${purchase_month.date} = ${cohort_analysis.transaction_month}"}, {"join": "calendar", "alias": "cohort_month", "sql_on": "${cohort_month.date} = ${cohort_analysis.first_purchase_month}"}]}, "on_schema_change": "sync_all_columns", "partition_by": {"field": "transaction_month", "data_type": "date", "granularity": "month"}, "incremental_strategy": "insert_overwrite", "tags": ["incremental", "dashboard", "fact", "daily"], "unique_key": ["customer_id", "transaction_month"]}, "created_at": 1732268181.4315083, "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`cohort_analysis`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    on_schema_change = 'sync_all_columns',\n    partition_by = {'field': 'transaction_month', 'data_type': 'date', 'granularity': 'month'},\n    incremental_strategy = 'insert_overwrite',\n    tags = ['incremental','dashboard','fact','daily'],\n    unique_key = ['customer_id','transaction_month']\n) }}\n\n{% set cohort_age_ranges ={ \"0. T0\" :\"0 and 0\",\n                            \"1. 1-3m\" :\"1 and 3\",\n                            \"2. 4-6m\" :\"4 and 6\",\n                            \"3. 7-9m\" :\"7 and 9\",\n                            \"4. 10-12m\" :\"10 and 12\",\n                            \"5. 1-1.5y\": \"13 and 18\",\n                            \"6. 1.5-2y\": \"19 and 24\",\n                            \"7. 2-3y\": \"25 and 36\",\n                            } %}\nWITH joined_tables AS (\n    SELECT\n        t.customer_id,\n        DATE_TRUNC(t.transaction_date,MONTH) transaction_month,\n        DATE_TRUNC(r.first_purchase,MONTH) first_purchase_month,\n        date_diff(t.transaction_date,r.first_purchase,MONTH) AS cohort_age,\n        r.segment,\n        r.previous_segment\n    FROM\n        {{ ref(\"fct__transactions\") }} t\n        LEFT JOIN {{ ref(\"rfm_movement\") }} r\n        ON t.customer_id = r.customer_id\n        AND r.start_of_month = DATE_TRUNC(CURRENT_DATE, MONTH)\n        where t.transaction_type = 'invoice'\n        and t.transaction_code not like 'HDD_%'\n        {% if is_incremental() %}\n        AND t.transaction_date >= date_trunc(current_date,month)\n        {% endif %}\n)\n{# , #}\n\n{# create_age_group as ( #}\n    SELECT\n    *,\n    CASE\n    {% for group,condition in cohort_age_ranges.items() %}\n        WHEN cohort_age BETWEEN {{ condition }} THEN '{{group}}'\n    {% endfor %}\n        ELSE '8. 3y+'\n    END AS cohort_age_group\nFROM\n    joined_tables\n    {{dbt_utils.group_by(7)}}\n{# )\nselect \n    first_purchase_month,\n    transaction_month,\n    segment, \n    previous_segment, \n    cohort_age, \n    cohort_age_group,\n    count(distinct customer_id) as num_customers,\n    count(customer_id) as num_transactions\nfrom create_age_group\n{{dbt_utils.group_by(6)}} #}", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}, {"name": "rfm_movement", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.fct__transactions", "model.sado_analytics_services.rfm_movement"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/analysis/cohort_analysis.sql", "compiled": true, "compiled_code": "\n\n\nWITH joined_tables AS (\n    SELECT\n        t.customer_id,\n        DATE_TRUNC(t.transaction_date,MONTH) transaction_month,\n        DATE_TRUNC(r.first_purchase,MONTH) first_purchase_month,\n        date_diff(t.transaction_date,r.first_purchase,MONTH) AS cohort_age,\n        r.segment,\n        r.previous_segment\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions` t\n        LEFT JOIN `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement` r\n        ON t.customer_id = r.customer_id\n        AND r.start_of_month = DATE_TRUNC(CURRENT_DATE, MONTH)\n        where t.transaction_type = 'invoice'\n        and t.transaction_code not like 'HDD_%'\n        \n        AND t.transaction_date >= date_trunc(current_date,month)\n        \n)\n\n\n\n    SELECT\n    *,\n    CASE\n    \n        WHEN cohort_age BETWEEN 0 and 0 THEN '0. T0'\n    \n        WHEN cohort_age BETWEEN 1 and 3 THEN '1. 1-3m'\n    \n        WHEN cohort_age BETWEEN 4 and 6 THEN '2. 4-6m'\n    \n        WHEN cohort_age BETWEEN 7 and 9 THEN '3. 7-9m'\n    \n        WHEN cohort_age BETWEEN 10 and 12 THEN '4. 10-12m'\n    \n        WHEN cohort_age BETWEEN 13 and 18 THEN '5. 1-1.5y'\n    \n        WHEN cohort_age BETWEEN 19 and 24 THEN '6. 1.5-2y'\n    \n        WHEN cohort_age BETWEEN 25 and 36 THEN '7. 2-3y'\n    \n        ELSE '8. 3y+'\n    END AS cohort_age_group\nFROM\n    joined_tables\n    group by 1,2,3,4,5,6,7\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_kiotviet__inventory_change": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_kiotviet__inventory_change", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/int_kiotviet__inventory_change.sql", "original_file_path": "models/intermediate/int_kiotviet__inventory_change.sql", "unique_id": "model.sado_analytics_services.int_kiotviet__inventory_change", "fqn": ["sado_analytics_services", "intermediate", "int_kiotviet__inventory_change"], "alias": "int_kiotviet__inventory_change", "checksum": {"name": "sha256", "checksum": "4962ac56f9d60fb790f626f01d7fa3e6496403b65f561497f5cc720e041d115a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["fact", "kiotviet", "inventory"], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fact", "kiotviet", "inventory"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "docs": {"show": false}, "tags": ["fact", "kiotviet", "inventory"]}, "created_at": 1732268178.434431, "relation_name": null, "raw_code": "{{\n  config(\n    tags = [\"fact\",\"kiotviet\",\"inventory\"]\n    )\n}}\n\nwith cal_ending_inventory as (\nSELECT\n    distinct \n    product_id,\n    branch_id,\n    DATE(_batched_at) AS inventory_date,\n    LAST_VALUE(on_hand) over w1 AS ending_inventory,\n    max(case when on_hand > 0 then DATE(_batched_at) end) over w2 as last_inventory_date\nFROM\n    {{ ref(\"stg_kiotviet__inventories\") }}\n    window w1 AS (\n        PARTITION BY product_id,\n        branch_id,\n        DATE(_batched_at)\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    ),\n    w2 as (\n        PARTITION BY product_id,\n        branch_id\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    )\n),\ncal_last_inventory_date as (\nselect * except(last_inventory_date),\n    coalesce(max(case when inventory_date > last_inventory_date and ending_inventory = 0 then inventory_date end ) over (PARTITION BY product_id,branch_id),last_inventory_date) last_inventory_date ,\n    lead(inventory_date) over (PARTITION BY product_id,branch_id ORDER BY inventory_date) as next_inventory_date,\nfrom cal_ending_inventory\n)\n\nselect inv.* , w.date\nfrom cal_last_inventory_date inv\nleft join {{ ref(\"int__working_days\") }} w\non inv.branch_id = w.branch_id \nand ((inv.inventory_date <= w.date and inv.next_inventory_date > w.date) \n     or (inv.last_inventory_date <= w.date and w.date< current_date() and ending_inventory >0 and inv.next_inventory_date is null)\n     or (inv.last_inventory_date = w.date and inv.next_inventory_date is null and ending_inventory =0)\n    )\n    \nwhere inventory_date <= last_inventory_date", "language": "sql", "refs": [{"name": "stg_kiotviet__inventories", "package": null, "version": null}, {"name": "int__working_days", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_kiotviet__inventories", "model.sado_analytics_services.int__working_days"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/int_kiotviet__inventory_change.sql", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__int__working_days as (\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    p.promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel in ('Offline','Popup')\nand c.date <= current_date()\nAND b.branch_id NOT IN (1000087891)\nand b.asm_name is not null\n), cal_ending_inventory as (\nSELECT\n    distinct \n    product_id,\n    branch_id,\n    DATE(_batched_at) AS inventory_date,\n    LAST_VALUE(on_hand) over w1 AS ending_inventory,\n    max(case when on_hand > 0 then DATE(_batched_at) end) over w2 as last_inventory_date\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__inventories`\n    window w1 AS (\n        PARTITION BY product_id,\n        branch_id,\n        DATE(_batched_at)\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    ),\n    w2 as (\n        PARTITION BY product_id,\n        branch_id\n        ORDER BY\n            _batched_at rows BETWEEN unbounded preceding\n            AND unbounded following\n    )\n),\ncal_last_inventory_date as (\nselect * except(last_inventory_date),\n    coalesce(max(case when inventory_date > last_inventory_date and ending_inventory = 0 then inventory_date end ) over (PARTITION BY product_id,branch_id),last_inventory_date) last_inventory_date ,\n    lead(inventory_date) over (PARTITION BY product_id,branch_id ORDER BY inventory_date) as next_inventory_date,\nfrom cal_ending_inventory\n)\n\nselect inv.* , w.date\nfrom cal_last_inventory_date inv\nleft join __dbt__cte__int__working_days w\non inv.branch_id = w.branch_id \nand ((inv.inventory_date <= w.date and inv.next_inventory_date > w.date) \n     or (inv.last_inventory_date <= w.date and w.date< current_date() and ending_inventory >0 and inv.next_inventory_date is null)\n     or (inv.last_inventory_date = w.date and inv.next_inventory_date is null and ending_inventory =0)\n    )\n    \nwhere inventory_date <= last_inventory_date", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sado_analytics_services.int__working_days", "sql": " __dbt__cte__int__working_days as (\nselect\n    to_hex(md5(cast(coalesce(cast(b.branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    p.promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel in ('Offline','Popup')\nand c.date <= current_date()\nAND b.branch_id NOT IN (1000087891)\nand b.asm_name is not null\n)"}], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_customer_id_converter": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_customer_id_converter", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/int_customer_id_converter.sql", "original_file_path": "models/intermediate/int_customer_id_converter.sql", "unique_id": "model.sado_analytics_services.int_customer_id_converter", "fqn": ["sado_analytics_services", "intermediate", "int_customer_id_converter"], "alias": "int_customer_id_converter", "checksum": {"name": "sha256", "checksum": "ba4f3bd4efe1532af92911a5f0fb07f6564ab15acc653482fbc8981795ea4e39"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "docs": {"show": false}}, "created_at": 1732268178.4409728, "relation_name": null, "raw_code": "SELECT\n        kiotviet_customer_id,\n        nhanhvn_customer_id\n    FROM\n        {{ ref(\"fct__customers\") }}\n    WHERE\n        kiotviet_customer_id IS NOT NULL\n        AND nhanhvn_customer_id IS NOT NULL", "language": "sql", "refs": [{"name": "fct__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.fct__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/int_customer_id_converter.sql", "compiled": true, "compiled_code": "SELECT\n        kiotviet_customer_id,\n        nhanhvn_customer_id\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n    WHERE\n        kiotviet_customer_id IS NOT NULL\n        AND nhanhvn_customer_id IS NOT NULL", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_pancake__ad_post_id": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_pancake__ad_post_id", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/marketing/int_pancake__ad_post_id.sql", "original_file_path": "models/intermediate/marketing/int_pancake__ad_post_id.sql", "unique_id": "model.sado_analytics_services.int_pancake__ad_post_id", "fqn": ["sado_analytics_services", "intermediate", "marketing", "int_pancake__ad_post_id"], "alias": "int_pancake__ad_post_id", "checksum": {"name": "sha256", "checksum": "df7c205ccd5cb12ffe7d50736ec2a096dfa03ef4d7077a3e63644e93846efad6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "docs": {"show": false}}, "created_at": 1732268178.44667, "relation_name": null, "raw_code": "select\n    split(ad_post_id,'_')[offset(0)] as ad_page_id,\n    ad_id, \n    {# {{dbt_utils.dbt_utils.generate_surrogate_key('ad_post_id', 'ad_id')}} as ad_post_id_surrogate_key #}\nfrom {{ ref(\"base_pancake__conversations\") }}\nwhere ad_id is not null\nand ad_post_id is not null\ngroup by 1,2", "language": "sql", "refs": [{"name": "base_pancake__conversations", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.base_pancake__conversations"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/marketing/int_pancake__ad_post_id.sql", "compiled": true, "compiled_code": "select\n    split(ad_post_id,'_')[offset(0)] as ad_page_id,\n    ad_id, \n    \nfrom `agile-scheme-394814`.`dbt_prod`.`base_pancake__conversations`\nwhere ad_id is not null\nand ad_post_id is not null\ngroup by 1,2", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_kiotviet__returns": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_kiotviet__returns", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/sales/int_kiotviet__returns.sql", "original_file_path": "models/intermediate/sales/int_kiotviet__returns.sql", "unique_id": "model.sado_analytics_services.int_kiotviet__returns", "fqn": ["sado_analytics_services", "intermediate", "sales", "int_kiotviet__returns"], "alias": "int_kiotviet__returns", "checksum": {"name": "sha256", "checksum": "d7518ed2fd6781e576798dbf800fff0269e042a5379580d2f032178cfcd558ef"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "fact", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["transaction_source_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "fact", "nhanhvn"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "docs": {"show": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["transaction_source_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "fact", "nhanhvn"]}, "created_at": 1732268178.4524, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_kiotviet__returns`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['transaction_source_id'],\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'hourly','fact','nhanhvn']\n) }}\n\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    DATE(returns.transaction_date) transaction_date,\n    returns.reference_transaction_id,\n    returns.branch_id,\n    returns.customer_id,\n    returns.employee_id,\n    (- returns.total) AS total,\n    returns.total_payment,\n    returns.return_discount,\n    CAST(NULL AS float64) discount_ratio,\n    returns.return_fee,\n    returns.transaction_type,\n    DATE(\n        COALESCE(\n            returns.modified_date,\n            returns.transaction_date\n        )\n    ) AS modified_date,\n    'kiotviet' AS source,\nFROM\n    {{ ref('stg_kiotviet__returns') }}\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n\n{% if is_incremental() %}\n{# and date(returns.modified_date) >= date_add(DATE(_dbt_max_partition), INTERVAL -1 DAY) #}\nAND date(returns.transaction_date )in (\n    select \n    distinct DATE(transaction_date) \n    from {{ ref('stg_kiotviet__returns') }} \n    where DATE(modified_date)  >= date_add(current_date, INTERVAL -1 DAY)\n)\n{% endif %}", "language": "sql", "refs": [{"name": "stg_kiotviet__returns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_kiotviet__returns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/sales/int_kiotviet__returns.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    DATE(returns.transaction_date) transaction_date,\n    returns.reference_transaction_id,\n    returns.branch_id,\n    returns.customer_id,\n    returns.employee_id,\n    (- returns.total) AS total,\n    returns.total_payment,\n    returns.return_discount,\n    CAST(NULL AS float64) discount_ratio,\n    returns.return_fee,\n    returns.transaction_type,\n    DATE(\n        COALESCE(\n            returns.modified_date,\n            returns.transaction_date\n        )\n    ) AS modified_date,\n    'kiotviet' AS source,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n\n\n\nAND date(returns.transaction_date )in (\n    select \n    distinct DATE(transaction_date) \n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returns` \n    where DATE(modified_date)  >= date_add(current_date, INTERVAL -1 DAY)\n)\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_nhanhvn__bills_reference_orders": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_nhanhvn__bills_reference_orders", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/sales/int_nhanhvn__bills_reference_orders.sql", "original_file_path": "models/intermediate/sales/int_nhanhvn__bills_reference_orders.sql", "unique_id": "model.sado_analytics_services.int_nhanhvn__bills_reference_orders", "fqn": ["sado_analytics_services", "intermediate", "sales", "int_nhanhvn__bills_reference_orders"], "alias": "int_nhanhvn__bills_reference_orders", "checksum": {"name": "sha256", "checksum": "62fc2f4cdf6dc58edfd9efdf5a0d9e783a463c1f554f6839772eab5dcbff1c59"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "docs": {"show": false}}, "created_at": 1732268178.4599838, "relation_name": null, "raw_code": "select\nbills.bill_id,\nbills.bill_date,\nbills.created_date,\nbills.bill_type,\nbills.bill_mode,\nbills.related_bill_id,\ncoalesce(bills.order_id, bills2.order_id) order_id,\nbills.depot_id,\nbills.customer_id,\ncoalesce(bills.created_by_id,bills.sale_id) created_by_id,\nproducts.product_id,\nproducts.discount,\nproducts.price,\nproducts.quantity,\nproducts.vat,\nfrom {{ref('stg_nhanhvn__bills')}} bills, unnest(products) products\nleft join {{ref('stg_nhanhvn__bills')}} bills2 on bills.related_bill_id = bills2.bill_id", "language": "sql", "refs": [{"name": "stg_nhanhvn__bills", "package": null, "version": null}, {"name": "stg_nhanhvn__bills", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg_nhanhvn__bills"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/sales/int_nhanhvn__bills_reference_orders.sql", "compiled": true, "compiled_code": "select\nbills.bill_id,\nbills.bill_date,\nbills.created_date,\nbills.bill_type,\nbills.bill_mode,\nbills.related_bill_id,\ncoalesce(bills.order_id, bills2.order_id) order_id,\nbills.depot_id,\nbills.customer_id,\ncoalesce(bills.created_by_id,bills.sale_id) created_by_id,\nproducts.product_id,\nproducts.discount,\nproducts.price,\nproducts.quantity,\nproducts.vat,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__bills` bills, unnest(products) products\nleft join `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__bills` bills2 on bills.related_bill_id = bills2.bill_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_kiotviet__revenue_items": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_kiotviet__revenue_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/sales/int_kiotviet__revenue_items.sql", "original_file_path": "models/intermediate/sales/int_kiotviet__revenue_items.sql", "unique_id": "model.sado_analytics_services.int_kiotviet__revenue_items", "fqn": ["sado_analytics_services", "intermediate", "sales", "int_kiotviet__revenue_items"], "alias": "int_kiotviet__revenue_items", "checksum": {"name": "sha256", "checksum": "b65da1f9f1c08551dc9afa19e0211ab797766a0b78d0f024afea17b75208ef7a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "fact", "kiotviet", "hourly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["product_id", "price"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "kiotviet", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "docs": {"show": false}, "tags": ["incremental", "fact", "kiotviet", "hourly"], "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["product_id", "price"], "on_schema_change": "sync_all_columns"}, "created_at": 1732268178.4658678, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_kiotviet__revenue_items`", "raw_code": "{{ config(\n    tags = ['incremental', 'fact','kiotviet','hourly'],\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['product_id','price'],\n    on_schema_change = 'sync_all_columns'\n) }}\n\nSELECT\n    date(invoices.transaction_date) transaction_date,\n    invoices.transaction_code,\n    invoices.branch_id,\n    invoices.customer_id,\n    invoices.product_id,\n    invoices.product_code,\n    invoices.price,\n    invoices.transaction_type,\n    {# invoices.modified_date, #}\n    'kiotviet' as source,\n    sum(invoices.quantity) quantity,\n    avg(COALESCE(\n        invoices.discount_ratio,\n        safe_divide(invoices.discount * 100,invoices.price),0\n        )) discount_ratio,\n    avg(invoices.discount) discount,\n    sum(invoices.order_discount) order_discount,\n    sum(invoices.subtotal) subTotal,\nFROM\n    {{ ref('stg_kiotviet__invoicedetails') }} invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.quantity <> 0\n{% if is_incremental() %}\n    AND date(invoices.transaction_date) in (\n        select\n        distinct date(transaction_date) \n        from {{ ref('stg_kiotviet__invoicedetails') }}\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n    {# and date(coalesce(invoices.modified_date,invoices.transaction_date)) >= date_add(current_date, interval -3 day) #}\n{% endif %}\n{{dbt_utils.group_by(9)}}", "language": "sql", "refs": [{"name": "stg_kiotviet__invoicedetails", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoicedetails"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/sales/int_kiotviet__revenue_items.sql", "compiled": true, "compiled_code": "\n\nSELECT\n    date(invoices.transaction_date) transaction_date,\n    invoices.transaction_code,\n    invoices.branch_id,\n    invoices.customer_id,\n    invoices.product_id,\n    invoices.product_code,\n    invoices.price,\n    invoices.transaction_type,\n    \n    'kiotviet' as source,\n    sum(invoices.quantity) quantity,\n    avg(COALESCE(\n        invoices.discount_ratio,\n        safe_divide(invoices.discount * 100,invoices.price),0\n        )) discount_ratio,\n    avg(invoices.discount) discount,\n    sum(invoices.order_discount) order_discount,\n    sum(invoices.subtotal) subTotal,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails` invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    AND invoices.quantity <> 0\n\n    AND date(invoices.transaction_date) in (\n        select\n        distinct date(transaction_date) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoicedetails`\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n    \n\ngroup by 1,2,3,4,5,6,7,8,9", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_nhanhvn__ordersdetails": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_nhanhvn__ordersdetails", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/sales/int_nhanhvn__ordersdetails.sql", "original_file_path": "models/intermediate/sales/int_nhanhvn__ordersdetails.sql", "unique_id": "model.sado_analytics_services.int_nhanhvn__ordersdetails", "fqn": ["sado_analytics_services", "intermediate", "sales", "int_nhanhvn__ordersdetails"], "alias": "int_nhanhvn__ordersdetails", "checksum": {"name": "sha256", "checksum": "3b8b6ff124db25b1ac02edbf7db9acbc1840488eb10ce83717b1cdb74043c5cd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "fact", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["transaction_source_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "fact", "nhanhvn"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "docs": {"show": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["transaction_source_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "fact", "nhanhvn"]}, "created_at": 1732268178.4740856, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_nhanhvn__ordersdetails`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['transaction_source_id'],\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'hourly','fact','nhanhvn']\n) }}\n\n\nSELECT\n        order_id AS transaction_id,\n        shop_order_id AS transaction_code,\n        COALESCE(\n            delivery_date,\n            send_carrier_date,\n            DATE(created_date)\n        ) AS transaction_date,\n        return_from_order_id AS reference_transaction_id,\n        traffic_source_id AS branch_id,\n        COALESCE(\n            cic.kiotviet_customer_id,\n            customer_id\n        ) AS customer_id,\n        created_by_id AS employee_id,\n        receivables AS total,\n        (receivables + money_transfer - customer_ship_fee) AS total_payment,\n        order_discount AS discount,\n        safe_divide(\n            order_discount,\n            order_discount + receivables\n        ) AS discount_ratio,\n        return_fee,\n        CASE\n            order_type\n            WHEN 'Giao h\u00e0ng t\u1eadn nh\u00e0' THEN 'invoice'\n            WHEN 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng' THEN 'return'\n        END AS transaction_type,\n        COALESCE(\n            delivery_date,\n            send_carrier_date,\n            DATE(created_date)\n        ) AS modified_date,\n        'nhanhvn' AS source,\n    FROM\n        {{ ref(\"stg_nhanhvn__ordersdetails\") }} orders\n        LEFT JOIN {{ ref(\"int_customer_id_converter\") }} cic\n        ON orders.customer_id = cic.nhanhvn_customer_id\n    WHERE\n        1 = 1\n{% if is_incremental() %}\nand delivery_date in (\n    select \n    COALESCE(\n            delivery_date,\n            send_carrier_date,\n            DATE(created_date)\n        )\n    from {{ ref('stg_nhanhvn__ordersdetails') }}\n    where date(last_sync) >= date_add(CURRENT_DATE, INTERVAL -1 DAY)\n    {# and delivery_date is not null\n    AND order_status IN (\"Th\u00e0nh c\u00f4ng\")\n    AND order_type IS NOT NULL #}\n)\n{% endif %}\nAND order_status IN (\"Th\u00e0nh c\u00f4ng\")\nAND order_type IS NOT NULL", "language": "sql", "refs": [{"name": "stg_nhanhvn__ordersdetails", "package": null, "version": null}, {"name": "int_customer_id_converter", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_nhanhvn__ordersdetails", "model.sado_analytics_services.int_customer_id_converter"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/sales/int_nhanhvn__ordersdetails.sql", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__int_customer_id_converter as (\nSELECT\n        kiotviet_customer_id,\n        nhanhvn_customer_id\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n    WHERE\n        kiotviet_customer_id IS NOT NULL\n        AND nhanhvn_customer_id IS NOT NULL\n) SELECT\n        order_id AS transaction_id,\n        shop_order_id AS transaction_code,\n        COALESCE(\n            delivery_date,\n            send_carrier_date,\n            DATE(created_date)\n        ) AS transaction_date,\n        return_from_order_id AS reference_transaction_id,\n        traffic_source_id AS branch_id,\n        COALESCE(\n            cic.kiotviet_customer_id,\n            customer_id\n        ) AS customer_id,\n        created_by_id AS employee_id,\n        receivables AS total,\n        (receivables + money_transfer - customer_ship_fee) AS total_payment,\n        order_discount AS discount,\n        safe_divide(\n            order_discount,\n            order_discount + receivables\n        ) AS discount_ratio,\n        return_fee,\n        CASE\n            order_type\n            WHEN 'Giao h\u00e0ng t\u1eadn nh\u00e0' THEN 'invoice'\n            WHEN 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng' THEN 'return'\n        END AS transaction_type,\n        COALESCE(\n            delivery_date,\n            send_carrier_date,\n            DATE(created_date)\n        ) AS modified_date,\n        'nhanhvn' AS source,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails` orders\n        LEFT JOIN __dbt__cte__int_customer_id_converter cic\n        ON orders.customer_id = cic.nhanhvn_customer_id\n    WHERE\n        1 = 1\n\nand delivery_date in (\n    select \n    COALESCE(\n            delivery_date,\n            send_carrier_date,\n            DATE(created_date)\n        )\n    from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`\n    where date(last_sync) >= date_add(CURRENT_DATE, INTERVAL -1 DAY)\n    \n)\n\nAND order_status IN (\"Th\u00e0nh c\u00f4ng\")\nAND order_type IS NOT NULL", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sado_analytics_services.int_customer_id_converter", "sql": " __dbt__cte__int_customer_id_converter as (\nSELECT\n        kiotviet_customer_id,\n        nhanhvn_customer_id\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n    WHERE\n        kiotviet_customer_id IS NOT NULL\n        AND nhanhvn_customer_id IS NOT NULL\n)"}], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int__product_group": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int__product_group", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/sales/int__product_group.sql", "original_file_path": "models/intermediate/sales/int__product_group.sql", "unique_id": "model.sado_analytics_services.int__product_group", "fqn": ["sado_analytics_services", "intermediate", "sales", "int__product_group"], "alias": "int__product_group", "checksum": {"name": "sha256", "checksum": "e2b85fe14397344a0f0ec45843743b28bcea771d6bdd87c0e8a92ac15be2fbd7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "docs": {"show": false}}, "created_at": 1732268178.4820879, "relation_name": null, "raw_code": "select distinct \n    category_name,\n    lower(product_group_code) product_group_code,\n    product_group,\n    season,\n    from \n    {{ ref(\"stg__ad_product_categories\") }}", "language": "sql", "refs": [{"name": "stg__ad_product_categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.stg__ad_product_categories"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/sales/int__product_group.sql", "compiled": true, "compiled_code": "select distinct \n    category_name,\n    lower(product_group_code) product_group_code,\n    product_group,\n    season,\n    from \n    `agile-scheme-394814`.`dbt_prod`.`stg__ad_product_categories`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_kiotviet__return_items": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_kiotviet__return_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/sales/int_kiotviet__return_items.sql", "original_file_path": "models/intermediate/sales/int_kiotviet__return_items.sql", "unique_id": "model.sado_analytics_services.int_kiotviet__return_items", "fqn": ["sado_analytics_services", "intermediate", "sales", "int_kiotviet__return_items"], "alias": "int_kiotviet__return_items", "checksum": {"name": "sha256", "checksum": "7b615abda13e8efb1403f722486884e9e71f47054da287ef0fb20d4760c7f5b4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "fact", "kiotviet", "hourly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["product_id", "price", "branch_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "kiotviet", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "docs": {"show": false}, "tags": ["incremental", "fact", "kiotviet", "hourly"], "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["product_id", "price", "branch_id"], "on_schema_change": "sync_all_columns"}, "created_at": 1732268178.487703, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_kiotviet__return_items`", "raw_code": "{{ config(\n    tags = ['incremental', 'fact','kiotviet','hourly'],\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['product_id','price','branch_id'],\n    on_schema_change = 'sync_all_columns'\n) }}\n\nwith pre_order_discount as (\nSELECT\n    date(returns.transaction_date) transaction_date,\n    returns.transaction_code,\n    returns.branch_id,\n    returns.customer_id,\n    returns.product_id,\n    returns.product_code,\n    returns.price,\n    returns.transaction_type,\n    'kiotviet' as source,\n    -sum(returns.quantity) quantity, \n    CAST(NULL AS float64) AS discount_ratio,\n    CAST(NULL AS float64) AS discount,\n    -sum(returns.order_discount) as order_discount,\n    -sum(returns.price*returns.quantity) subtotal,\nFROM\n    {{ ref('stg_kiotviet__returndetails') }}\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n{% if is_incremental() %}\nAND date(returns.transaction_date) in (\n        select \n        date(transaction_date) \n        from {{ ref('stg_kiotviet__returndetails') }}\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n{% endif %}\n{{dbt_utils.group_by(9)}}\n)\n\nselect * except(order_discount),\nsafe_divide(subtotal*order_discount,sum(subtotal) over (partition by transaction_code )) as order_discount\nfrom pre_order_discount", "language": "sql", "refs": [{"name": "stg_kiotviet__returndetails", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.stg_kiotviet__returndetails"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/sales/int_kiotviet__return_items.sql", "compiled": true, "compiled_code": "\n\nwith pre_order_discount as (\nSELECT\n    date(returns.transaction_date) transaction_date,\n    returns.transaction_code,\n    returns.branch_id,\n    returns.customer_id,\n    returns.product_id,\n    returns.product_code,\n    returns.price,\n    returns.transaction_type,\n    'kiotviet' as source,\n    -sum(returns.quantity) quantity, \n    CAST(NULL AS float64) AS discount_ratio,\n    CAST(NULL AS float64) AS discount,\n    -sum(returns.order_discount) as order_discount,\n    -sum(returns.price*returns.quantity) subtotal,\nFROM\n    `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n\nAND date(returns.transaction_date) in (\n        select \n        date(transaction_date) \n        from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__returndetails`\n        where date(coalesce(modified_date,transaction_date)) >= date_add(current_date, interval -1 day)\n    )\n\ngroup by 1,2,3,4,5,6,7,8,9\n)\n\nselect * except(order_discount),\nsafe_divide(subtotal*order_discount,sum(subtotal) over (partition by transaction_code )) as order_discount\nfrom pre_order_discount", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int__working_days": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int__working_days", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/sales/int__working_days.sql", "original_file_path": "models/intermediate/sales/int__working_days.sql", "unique_id": "model.sado_analytics_services.int__working_days", "fqn": ["sado_analytics_services", "intermediate", "sales", "int__working_days"], "alias": "int__working_days", "checksum": {"name": "sha256", "checksum": "18039a34c2cb3d887c9c3edb1cd5cba1c32c506d6aaaa124d7be8e541e24dff6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "ephemeral", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "docs": {"show": false}}, "created_at": 1732268178.4960723, "relation_name": null, "raw_code": "select\n    {{dbt_utils.generate_surrogate_key(['b.branch_id', 'c.date'])}} as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    p.promotion,\nfrom {{ ref(\"dim__branches\") }} b\nleft join {{ ref(\"calendar\") }} c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join {{ ref(\"promotions\") }} p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel in ('Offline','Popup')\nand c.date <= current_date()\nAND b.branch_id NOT IN (1000087891)\nand b.asm_name is not null", "language": "sql", "refs": [{"name": "dim__branches", "package": null, "version": null}, {"name": "calendar", "package": null, "version": null}, {"name": "promotions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.calendar", "seed.sado_analytics_services.promotions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/sales/int__working_days.sql", "compiled": true, "compiled_code": "select\n    to_hex(md5(cast(coalesce(cast(b.branch_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(c.date as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as branch_working_day_id,\n    b.* except(phone,email,province_code, region_code, frontage, area_sqm),\n    c.* except(start_of_week,end_of_week),\n    p.promotion,\nfrom `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__branches` b\nleft join `agile-scheme-394814`.`dbt_prod`.`calendar` c on b.opening_day <= c.date and (b.close_date >= c.date or b.close_date is null)\nleft join `agile-scheme-394814`.`dbt_prod`.`promotions` p on c.date>=p.start and c.date<=p.end and p.location = b.model_type\nwhere b.opening_day is not null\nand b.channel in ('Offline','Popup')\nand c.date <= current_date()\nAND b.branch_id NOT IN (1000087891)\nand b.asm_name is not null", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_nhanhvn__revenue_items": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_nhanhvn__revenue_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/sales/int_nhanhvn__revenue_items.sql", "original_file_path": "models/intermediate/sales/int_nhanhvn__revenue_items.sql", "unique_id": "model.sado_analytics_services.int_nhanhvn__revenue_items", "fqn": ["sado_analytics_services", "intermediate", "sales", "int_nhanhvn__revenue_items"], "alias": "int_nhanhvn__revenue_items", "checksum": {"name": "sha256", "checksum": "42631441e467ef43a2088cb033eeb29294d0a6a803ff5bcfe1222af708a48a08"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "fact", "nhanhvn", "hourly"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["product_code", "price"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "nhanhvn", "hourly"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "docs": {"show": false}, "tags": ["incremental", "fact", "nhanhvn", "hourly"], "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["product_code", "price"], "on_schema_change": "sync_all_columns"}, "created_at": 1732268178.5044494, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_nhanhvn__revenue_items`", "raw_code": "{{ config(\n    tags = ['incremental', 'fact','nhanhvn','hourly'],\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['product_code','price'],\n    on_schema_change = 'sync_all_columns'\n) }}\n\nSELECT\n        delivery_date AS transaction_date,\n        cast(order_id as string) AS transaction_code,\n        traffic_source_id AS branch_id,\n        coalesce(cic.kiotviet_customer_id, s.customer_id) customer_id,\n        product_id,\n        product_code,\n        price AS price,\n        CASE\n            order_type\n            WHEN 'Giao h\u00e0ng t\u1eadn nh\u00e0' THEN 'invoice'\n            WHEN 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng' THEN 'return'\n        END AS transaction_type,\n        'nhanhvn' AS source,\n        sum(quantity) AS quantity,\n        safe_divide(sum(item_discount),sum(price*quantity)) as discount_ratio,\n        sum(item_discount) as discount,\n        {# sum(case when item_gross_amount= 0 then quantity end) as gift_qty, #}\n        sum(item_discount) as order_discount,\n        sum(item_gross_amount) as subtotal,\n        {# count(distinct order_id) as num_transaction_lines, #}\n        {# count(distinct product_code) as num_products, #}\n    FROM\n        {{ ref(\"orders_items\") }} s \n        left join {{ ref(\"int_customer_id_converter\") }} cic on s.customer_id = cic.nhanhvn_customer_id\n        where s.order_status IN (\"Th\u00e0nh c\u00f4ng\")\n        {% if is_incremental() %}\n          and delivery_date in (\n            select distinct delivery_date from {{ ref(\"orders_items\") }} \n            where date(last_sync) >= date_add(current_date, interval -1 day)\n            )\n        {% endif %}\n    {{dbt_utils.group_by(8)}}", "language": "sql", "refs": [{"name": "orders_items", "package": null, "version": null}, {"name": "int_customer_id_converter", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": ["model.sado_analytics_services.orders_items", "model.sado_analytics_services.int_customer_id_converter"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/sales/int_nhanhvn__revenue_items.sql", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__int_customer_id_converter as (\nSELECT\n        kiotviet_customer_id,\n        nhanhvn_customer_id\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n    WHERE\n        kiotviet_customer_id IS NOT NULL\n        AND nhanhvn_customer_id IS NOT NULL\n) SELECT\n        delivery_date AS transaction_date,\n        cast(order_id as string) AS transaction_code,\n        traffic_source_id AS branch_id,\n        coalesce(cic.kiotviet_customer_id, s.customer_id) customer_id,\n        product_id,\n        product_code,\n        price AS price,\n        CASE\n            order_type\n            WHEN 'Giao h\u00e0ng t\u1eadn nh\u00e0' THEN 'invoice'\n            WHEN 'Kh\u00e1ch tr\u1ea3 l\u1ea1i h\u00e0ng' THEN 'return'\n        END AS transaction_type,\n        'nhanhvn' AS source,\n        sum(quantity) AS quantity,\n        safe_divide(sum(item_discount),sum(price*quantity)) as discount_ratio,\n        sum(item_discount) as discount,\n        \n        sum(item_discount) as order_discount,\n        sum(item_gross_amount) as subtotal,\n        \n        \n    FROM\n        `agile-scheme-394814`.`dbt_prod_online_sales`.`orders_items` s \n        left join __dbt__cte__int_customer_id_converter cic on s.customer_id = cic.nhanhvn_customer_id\n        where s.order_status IN (\"Th\u00e0nh c\u00f4ng\")\n        \n          and delivery_date in (\n            select distinct delivery_date from `agile-scheme-394814`.`dbt_prod_online_sales`.`orders_items` \n            where date(last_sync) >= date_add(current_date, interval -1 day)\n            )\n        \n    group by 1,2,3,4,5,6,7,8", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.sado_analytics_services.int_customer_id_converter", "sql": " __dbt__cte__int_customer_id_converter as (\nSELECT\n        kiotviet_customer_id,\n        nhanhvn_customer_id\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n    WHERE\n        kiotviet_customer_id IS NOT NULL\n        AND nhanhvn_customer_id IS NOT NULL\n)"}], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.sado_analytics_services.int_kiotviet__invoices": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "int_kiotviet__invoices", "resource_type": "model", "package_name": "sado_analytics_services", "path": "intermediate/sales/int_kiotviet__invoices.sql", "original_file_path": "models/intermediate/sales/int_kiotviet__invoices.sql", "unique_id": "model.sado_analytics_services.int_kiotviet__invoices", "fqn": ["sado_analytics_services", "intermediate", "sales", "int_kiotviet__invoices"], "alias": "int_kiotviet__invoices", "checksum": {"name": "sha256", "checksum": "33bbc6eba748f39667293898c3127bf03afdd238b6d7a42e75b90205b564a855"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental", "hourly", "fact", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["transaction_source_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": false, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "hourly", "fact", "nhanhvn"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": false, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "docs": {"show": false}, "partition_by": {"field": "transaction_date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": ["transaction_source_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "hourly", "fact", "nhanhvn"]}, "created_at": 1732268178.5134673, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`int_kiotviet__invoices`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = ['transaction_source_id'],\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'hourly','fact','nhanhvn']\n) }}\n\nSELECT\n        invoices.transaction_id,\n        invoices.transaction_code,\n        DATE(invoices.transaction_date) transaction_date,\n        CAST(NULL AS int64) AS reference_transaction_id,\n        invoices.branch_id,\n        invoices.customer_id,\n        invoices.employee_id,\n        invoices.total,\n        invoices.total_payment,\n        invoices.discount,\n        invoices.discount_ratio,\n        CAST(NULL AS int64) AS return_fee,\n        invoices.transaction_type,\n        DATE(\n            COALESCE(\n                invoices.modified_date,\n                invoices.transaction_date\n            )\n        ) AS modified_date,\n        'kiotviet' AS source,\n    FROM\n        {{ ref('stg_kiotviet__invoices') }}\n        invoices\n    WHERE\n        invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n\n{% if is_incremental() %}\n\nAND date(invoices.transaction_date )in (\n    select \n    distinct DATE(transaction_date) \n    from {{ ref('stg_kiotviet__invoices') }} \n    where DATE(modified_date)  >= date_add(current_date, INTERVAL -1 DAY)\n)\n{%endif%}", "language": "sql", "refs": [{"name": "stg_kiotviet__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoices"]}, "compiled_path": "target/compiled/sado_analytics_services/models/intermediate/sales/int_kiotviet__invoices.sql", "compiled": true, "compiled_code": "\n\nSELECT\n        invoices.transaction_id,\n        invoices.transaction_code,\n        DATE(invoices.transaction_date) transaction_date,\n        CAST(NULL AS int64) AS reference_transaction_id,\n        invoices.branch_id,\n        invoices.customer_id,\n        invoices.employee_id,\n        invoices.total,\n        invoices.total_payment,\n        invoices.discount,\n        invoices.discount_ratio,\n        CAST(NULL AS int64) AS return_fee,\n        invoices.transaction_type,\n        DATE(\n            COALESCE(\n                invoices.modified_date,\n                invoices.transaction_date\n            )\n        ) AS modified_date,\n        'kiotviet' AS source,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n        invoices\n    WHERE\n        invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n\n\n\nAND date(invoices.transaction_date )in (\n    select \n    distinct DATE(transaction_date) \n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices` \n    where DATE(modified_date)  >= date_add(current_date, INTERVAL -1 DAY)\n)\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "snapshot.sado_analytics_services.stg_gsheet__cogs": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_gsheet__cogs", "resource_type": "snapshot", "package_name": "sado_analytics_services", "path": "stg_gsheet__cogs.sql", "original_file_path": "snapshots/stg_gsheet__cogs.sql", "unique_id": "snapshot.sado_analytics_services.stg_gsheet__cogs", "fqn": ["sado_analytics_services", "stg_gsheet__cogs", "stg_gsheet__cogs"], "alias": "stg_gsheet__cogs", "checksum": {"name": "sha256", "checksum": "c890342a5b4cfb91bd407b7ee5279c1db5fbcffda400b453b24a5ae108d54c20"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "snapshot", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "product_code", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "strategy": "check", "target_schema": "dbt_prod", "target_database": null, "updated_at": null, "check_cols": ["inventory_value_per_unit"], "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "dbt_prod", "strategy": "check", "unique_key": "product_code", "check_cols": ["inventory_value_per_unit"]}, "created_at": 1732268178.5508287, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_gsheet__cogs`", "raw_code": "\n\n    {{\n        config(\n          target_schema='dbt_'+target.name,\n          strategy='check',\n          unique_key='product_code',\n          check_cols=['inventory_value_per_unit'],\n        )\n    }}\n\n    select \n    product_code , \n    inventory_value_per_unit,\n    from {{ source('gSheet', 'cogs') }}\n    where regexp_extract(_FILE_NAME,r'cogs__(\\d{6})') = format_date('%Y%m',current_date)\n    \n\n", "language": "sql", "refs": [], "sources": [["gSheet", "cogs"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": ["source.sado_analytics_services.gSheet.cogs"]}, "compiled_path": null, "compiled": true, "compiled_code": "\n\n    \n\n    select \n    product_code , \n    inventory_value_per_unit,\n    from `agile-scheme-394814`.`GSheet`.`_ext_cogs_v2`\n    where regexp_extract(_FILE_NAME,r'cogs__(\\d{6})') = format_date('%Y%m',current_date)\n    \n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}}, "analysis.sado_analytics_services.sms_performance": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "sms_performance", "resource_type": "analysis", "package_name": "sado_analytics_services", "path": "analysis/sms_performance.sql", "original_file_path": "analyses/sms_performance.sql", "unique_id": "analysis.sado_analytics_services.sms_performance", "fqn": ["sado_analytics_services", "analysis", "sms_performance"], "alias": "sms_performance", "checksum": {"name": "sha256", "checksum": "6d228b222c98c2b386bd1f53a5ed635769674b93dd6d49806a0c0e2cc6a72525"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268178.5859227, "relation_name": null, "raw_code": "WITH rfm_ as (\n    select customer_id,start_of_month, segment,\n    coalesce(lag(segment) over (partition by customer_id order by start_of_month asc),'First-time Purchaser') prev_segment\n    from {{ ref('rfm_movement') }}\n    where start_of_month >='2022-12-01'\n),\n\nsms AS (\n\n    SELECT\n        DISTINCT s.phone,\n        C.customer_id,\n        DATE(\n            s.sent_time\n        ) sent_time,\n        r.segment,\n        r.prev_segment,\n        s.sms_cost,\n    FROM\n        {{ ref('stg_esms__sent_data') }}\n        s\n        LEFT JOIN {{ ref('stg_kiotviet__customers') }} C\n        ON s.phone = C.contact_number\n        LEFT JOIN rfm_ r\n        ON C.customer_id = r.customer_id\n        AND DATE_TRUNC(\n            s.sent_time,\n            MONTH\n        ) = r.start_of_month\n),\nrevenue AS (\n    SELECT\n        DATE(transaction_date) transaction_date,\n        customer_id,\n        COUNT(\n            DISTINCT transaction_id\n        ) AS num_invoice,\n        SUM(\n            total\n        ) AS total_invoice_value,\n    FROM\n        {{ ref('revenue') }}\n    WHERE\n        transaction_type = 'invoice'\n        and transaction_date>='2023-01-01'\n    GROUP BY\n        1,\n        2\n),\nperformance as (\n    SELECT\n        sms.*,\n        revenue.num_invoice,\n        revenue.total_invoice_value,\n        concat()\n        date_diff(\n            revenue.transaction_date,\n            sms.sent_time,\n            DAY\n        ) AS days_lag,\n    FROM\n        sms\n        LEFT JOIN revenue\n        ON sms.sent_time < revenue.transaction_date\n        AND sms.customer_id = revenue.customer_id\n        AND date_diff(\n            revenue.transaction_date,\n            sms.sent_time,\n            DAY\n        ) <= 7\n    \n)\nSELECT\n    prev_segment,\n    avg(days_lag) days_lag,\n    SUM(num_invoice) num_invoice,\n    SUM(total_invoice_value) total_invoice_value,\n    count(phone) as num_sent,\n    sum(sms_cost) sms_cost,\nFROM\n    performance\ngroup by 1", "language": "sql", "refs": [{"name": "rfm_movement", "package": null, "version": null}, {"name": "stg_esms__sent_data", "package": null, "version": null}, {"name": "stg_kiotviet__customers", "package": null, "version": null}, {"name": "revenue", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.rfm_movement", "model.sado_analytics_services.stg_esms__sent_data", "model.sado_analytics_services.stg_kiotviet__customers", "model.sado_analytics_services.revenue"]}, "compiled_path": "target/compiled/sado_analytics_services/analyses/sms_performance.sql", "compiled": true, "compiled_code": "WITH rfm_ as (\n    select customer_id,start_of_month, segment,\n    coalesce(lag(segment) over (partition by customer_id order by start_of_month asc),'First-time Purchaser') prev_segment\n    from `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\n    where start_of_month >='2022-12-01'\n),\n\nsms AS (\n\n    SELECT\n        DISTINCT s.phone,\n        C.customer_id,\n        DATE(\n            s.sent_time\n        ) sent_time,\n        r.segment,\n        r.prev_segment,\n        s.sms_cost,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`\n        s\n        LEFT JOIN `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__customers` C\n        ON s.phone = C.contact_number\n        LEFT JOIN rfm_ r\n        ON C.customer_id = r.customer_id\n        AND DATE_TRUNC(\n            s.sent_time,\n            MONTH\n        ) = r.start_of_month\n),\nrevenue AS (\n    SELECT\n        DATE(transaction_date) transaction_date,\n        customer_id,\n        COUNT(\n            DISTINCT transaction_id\n        ) AS num_invoice,\n        SUM(\n            total\n        ) AS total_invoice_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod_sales`.`revenue`\n    WHERE\n        transaction_type = 'invoice'\n        and transaction_date>='2023-01-01'\n    GROUP BY\n        1,\n        2\n),\nperformance as (\n    SELECT\n        sms.*,\n        revenue.num_invoice,\n        revenue.total_invoice_value,\n        concat()\n        date_diff(\n            revenue.transaction_date,\n            sms.sent_time,\n            DAY\n        ) AS days_lag,\n    FROM\n        sms\n        LEFT JOIN revenue\n        ON sms.sent_time < revenue.transaction_date\n        AND sms.customer_id = revenue.customer_id\n        AND date_diff(\n            revenue.transaction_date,\n            sms.sent_time,\n            DAY\n        ) <= 7\n    \n)\nSELECT\n    prev_segment,\n    avg(days_lag) days_lag,\n    SUM(num_invoice) num_invoice,\n    SUM(total_invoice_value) total_invoice_value,\n    count(phone) as num_sent,\n    sum(sms_cost) sms_cost,\nFROM\n    performance\ngroup by 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}}, "seed.sado_analytics_services.kiotviet__removed_branch": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "kiotviet__removed_branch", "resource_type": "seed", "package_name": "sado_analytics_services", "path": "kiotviet__removed_branch.csv", "original_file_path": "seeds/kiotviet__removed_branch.csv", "unique_id": "seed.sado_analytics_services.kiotviet__removed_branch", "fqn": ["sado_analytics_services", "kiotviet__removed_branch"], "alias": "kiotviet__removed_branch", "checksum": {"name": "sha256", "checksum": "37d25641ea0ab22eb9f33f502edd2e8c7fd5f2034326966adac76a13f10dcea4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268178.621634, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`kiotviet__removed_branch`", "raw_code": "", "root_path": "/home/runner/work/sado_analytics_services/sado_analytics_services", "depends_on": {"macros": []}}, "seed.sado_analytics_services.regions": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "regions", "resource_type": "seed", "package_name": "sado_analytics_services", "path": "regions.csv", "original_file_path": "seeds/regions.csv", "unique_id": "seed.sado_analytics_services.regions", "fqn": ["sado_analytics_services", "regions"], "alias": "regions", "checksum": {"name": "sha256", "checksum": "904815cec00f61c84faa5c638fc6fe387127ef64d0a3211febad76583689b7de"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268178.6245902, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`regions`", "raw_code": "", "root_path": "/home/runner/work/sado_analytics_services/sado_analytics_services", "depends_on": {"macros": []}}, "seed.sado_analytics_services.product_categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "product_categories", "resource_type": "seed", "package_name": "sado_analytics_services", "path": "product_categories.csv", "original_file_path": "seeds/product_categories.csv", "unique_id": "seed.sado_analytics_services.product_categories", "fqn": ["sado_analytics_services", "product_categories"], "alias": "product_categories", "checksum": {"name": "sha256", "checksum": "0ae62168b033889bafebe1c44ace64295436529b4dd29e77aaf954a6449edd05"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268178.627269, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`product_categories`", "raw_code": "", "root_path": "/home/runner/work/sado_analytics_services/sado_analytics_services", "depends_on": {"macros": []}}, "seed.sado_analytics_services.promotions": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "promotions", "resource_type": "seed", "package_name": "sado_analytics_services", "path": "promotions.csv", "original_file_path": "seeds/promotions.csv", "unique_id": "seed.sado_analytics_services.promotions", "fqn": ["sado_analytics_services", "promotions"], "alias": "promotions", "checksum": {"name": "sha256", "checksum": "5f63688253997e17fd63daa1c53551247a5ecd98d17229436f7b868923c5b283"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268178.6299086, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`promotions`", "raw_code": "", "root_path": "/home/runner/work/sado_analytics_services/sado_analytics_services", "depends_on": {"macros": []}}, "seed.sado_analytics_services.provinces": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "provinces", "resource_type": "seed", "package_name": "sado_analytics_services", "path": "provinces.csv", "original_file_path": "seeds/provinces.csv", "unique_id": "seed.sado_analytics_services.provinces", "fqn": ["sado_analytics_services", "provinces"], "alias": "provinces", "checksum": {"name": "sha256", "checksum": "e3f28378da871641864e3e3b1c43d2b675b8bb6fbc7006bf8add193eb2458054"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268178.632513, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`provinces`", "raw_code": "", "root_path": "/home/runner/work/sado_analytics_services/sado_analytics_services", "depends_on": {"macros": []}}, "model.ga4.dim_ga4__client_keys": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim_ga4__client_keys", "resource_type": "model", "package_name": "ga4", "path": "marts/core/dim_ga4__client_keys.sql", "original_file_path": "models/marts/core/dim_ga4__client_keys.sql", "unique_id": "model.ga4.dim_ga4__client_keys", "fqn": ["ga4", "marts", "core", "dim_ga4__client_keys"], "alias": "dim_ga4__client_keys", "checksum": {"name": "sha256", "checksum": "7e7c84839430736701b3ace02f35f07fffd4ef4e6acac1e0ed44a65b72aa75c1"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["client_key"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "last_seen_at", "data_type": "timestamp", "granularity": "day"}, "merge_update_columns": ["last_geo_continent", "last_geo_country", "last_geo_region", "last_geo_city", "last_geo_sub_continent", "last_geo_metro", "last_device_category", "last_device_mobile_brand_name", "last_device_mobile_model_name", "last_device_mobile_marketing_name", "last_device_mobile_os_hardware_model", "last_device_operating_system", "last_device_operating_system_version", "last_device_vendor_id", "last_device_advertising_id", "last_device_language", "last_device_is_limited_ad_tracking", "last_device_time_zone_offset_seconds", "last_device_browser", "last_device_browser_version", "last_device_web_info_browser", "last_device_web_info_browser_version", "last_device_web_info_hostname", "last_user_campaign", "last_user_medium", "last_user_source", "last_seen_at", "last_page_location", "last_page_hostname", "last_page_referrer"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Dimension table for user devices (client_key) which includes data from the first and last event produced. Unique on client_key", "columns": {"client_key": {"name": "client_key", "description": "Hashed combination of user_pseudo_id and stream_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/marts/core/core.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "merge", "unique_key": ["client_key"], "tags": ["incremental"], "partition_by": {"field": "last_seen_at", "data_type": "timestamp", "granularity": "day"}, "on_schema_change": "sync_all_columns", "merge_update_columns": ["last_geo_continent", "last_geo_country", "last_geo_region", "last_geo_city", "last_geo_sub_continent", "last_geo_metro", "last_device_category", "last_device_mobile_brand_name", "last_device_mobile_model_name", "last_device_mobile_marketing_name", "last_device_mobile_os_hardware_model", "last_device_operating_system", "last_device_operating_system_version", "last_device_vendor_id", "last_device_advertising_id", "last_device_language", "last_device_is_limited_ad_tracking", "last_device_time_zone_offset_seconds", "last_device_browser", "last_device_browser_version", "last_device_web_info_browser", "last_device_web_info_browser_version", "last_device_web_info_hostname", "last_user_campaign", "last_user_medium", "last_user_source", "last_seen_at", "last_page_location", "last_page_hostname", "last_page_referrer"], "schema": "marketing"}, "created_at": 1732268181.4568517, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__client_keys`", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'merge',\n        unique_key = ['client_key'],\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"last_seen_at\",\n            \"data_type\": \"timestamp\",\n            \"granularity\": \"day\"\n        },\n        on_schema_change = 'sync_all_columns',\n        merge_update_columns = [\n            'last_geo_continent',\n            'last_geo_country',\n            'last_geo_region',\n            'last_geo_city',\n            'last_geo_sub_continent',\n            'last_geo_metro',\n            'last_device_category',\n            'last_device_mobile_brand_name',\n            'last_device_mobile_model_name',\n            'last_device_mobile_marketing_name',\n            'last_device_mobile_os_hardware_model',\n            'last_device_operating_system',\n            'last_device_operating_system_version',\n            'last_device_vendor_id',\n            'last_device_advertising_id',\n            'last_device_language',\n            'last_device_is_limited_ad_tracking',\n            'last_device_time_zone_offset_seconds',\n            'last_device_browser',\n            'last_device_browser_version',\n            'last_device_web_info_browser',\n            'last_device_web_info_browser_version',\n            'last_device_web_info_hostname',\n            'last_user_campaign',\n            'last_user_medium',\n            'last_user_source',\n            'last_seen_at',\n            'last_page_location',\n            'last_page_hostname',\n            'last_page_referrer',\n        ],  \n    )\n}}\n\nwith include_first_last_events as (\n    select \n        *\n    from {{ref('stg_ga4__client_key_first_last_events')}}\n    {% if is_incremental() %}\n      where date(last_seen_at) >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n),\ninclude_first_last_page_views as (\n    select \n        include_first_last_events.*,\n        first_last_page_views.first_page_location,\n        first_last_page_views.first_page_hostname,\n        first_last_page_views.first_page_referrer,\n        first_last_page_views.last_page_location,\n        first_last_page_views.last_page_hostname,\n        first_last_page_views.last_page_referrer,\n    from include_first_last_events \n    left join {{ref('stg_ga4__client_key_first_last_pageviews')}} as first_last_page_views using (client_key)\n    {% if is_incremental() %}\n      where date(first_last_page_views.last_seen_at) >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n),\ninclude_user_properties as (\n\nselect p.*, \n\n{% if var('derived_user_properties', false) %}\n    dup.* except(last_updated,client_key),\n{% endif %}\n{% if var('user_properties', false) %}\n    up.* except(last_updated,client_key),\n{% endif %}\n\nfrom include_first_last_page_views p\n{% if var('derived_user_properties', false) %}\n-- If derived user properties have been assigned as variables, join them on the client_key\ninner join {{ref('stg_ga4__derived_user_properties')}} as dup using (client_key)\n{% endif %}\n{% if var('user_properties', false) %}\n-- If user properties have been assigned as variables, join them on the client_key\ninner join {{ref('stg_ga4__user_properties')}} as up using (client_key)\n{% endif %}\n\n)\n\nselect * from include_user_properties", "language": "sql", "refs": [{"name": "stg_ga4__client_key_first_last_events", "package": null, "version": null}, {"name": "stg_ga4__client_key_first_last_pageviews", "package": null, "version": null}, {"name": "stg_ga4__derived_user_properties", "package": null, "version": null}, {"name": "stg_ga4__user_properties", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__client_key_first_last_events", "model.ga4.stg_ga4__client_key_first_last_pageviews", "model.ga4.stg_ga4__derived_user_properties", "model.ga4.stg_ga4__user_properties"]}, "compiled_path": "target/compiled/ga4/models/marts/core/dim_ga4__client_keys.sql", "compiled": true, "compiled_code": "\n\nwith include_first_last_events as (\n    select \n        *\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_events`\n    \n      where date(last_seen_at) >= date_sub(current_date, interval 1 day)\n    \n),\ninclude_first_last_page_views as (\n    select \n        include_first_last_events.*,\n        first_last_page_views.first_page_location,\n        first_last_page_views.first_page_hostname,\n        first_last_page_views.first_page_referrer,\n        first_last_page_views.last_page_location,\n        first_last_page_views.last_page_hostname,\n        first_last_page_views.last_page_referrer,\n    from include_first_last_events \n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_pageviews` as first_last_page_views using (client_key)\n    \n      where date(first_last_page_views.last_seen_at) >= date_sub(current_date, interval 1 day)\n    \n),\ninclude_user_properties as (\n\nselect p.*, \n\n\n    dup.* except(last_updated,client_key),\n\n\n    up.* except(last_updated,client_key),\n\n\nfrom include_first_last_page_views p\n\n-- If derived user properties have been assigned as variables, join them on the client_key\ninner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__derived_user_properties` as dup using (client_key)\n\n\n-- If user properties have been assigned as variables, join them on the client_key\ninner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__user_properties` as up using (client_key)\n\n\n)\n\nselect * from include_user_properties", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.dim_ga4__sessions_daily": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim_ga4__sessions_daily", "resource_type": "model", "package_name": "ga4", "path": "marts/core/dim_ga4__sessions_daily.sql", "original_file_path": "models/marts/core/dim_ga4__sessions_daily.sql", "unique_id": "model.ga4.dim_ga4__sessions_daily", "fqn": ["ga4", "marts", "core", "dim_ga4__sessions_daily"], "alias": "dim_ga4__sessions_daily", "checksum": {"name": "sha256", "checksum": "126cd9735b14fb02548751724e0a37b53fa2ae7ffcedfeb82d3a37c3196d669c"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Incremental, partitioned dimension table for session partitions. Partitioned on session_partition_date for improved query optimization when filtering on date.  Contains context useful for filtering sessions such as acquisition source, medium, and campaign.  Each row represents a daily session partition (as opposed to a session).  Unique on session_partion_key\n", "columns": {"session_partition_key": {"name": "session_partition_key", "description": "Unique key assigned to session partitions which are daily partitions of a session. In GA4, sessions can span multiple days.  To improve query performance, it's easier to work with 'session partitions' which can be filtered/partitioned by date.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_key": {"name": "session_key", "description": "Unique key assigned to sessions. Sessions can span multiple dates/partitions. \n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_partition_date": {"name": "session_partition_date", "description": "Date associated with the session_partition_key. Used to partition the table. Filter on this column to optimize query cost and performance. \n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_source": {"name": "session_source", "description": "The source of the session based on the events contained within this particular session. For last non-direct source, see last_non_direct_source", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_non_direct_source": {"name": "last_non_direct_source", "description": "The last non-direct source attributed to this session based on a 30-day lookback window.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/marts/core/dim_ga4__sessions_daily.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "tags": ["incremental"], "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"], "schema": "marketing"}, "created_at": 1732268181.4747312, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions_daily`", "raw_code": "{% set partitions_to_replace = ['current_date'] %}\n{% for i in range(var('static_incremental_days')) %}\n    {% set partitions_to_replace = partitions_to_replace.append('date_sub(current_date, interval ' + (i+1)|string + ' day)') %}\n{% endfor %}\n{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"session_partition_date\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        partitions = partitions_to_replace\n    )\n}}\n\n\nwith event_dimensions as \n(\n    select \n        client_key,\n        session_key,\n        session_partition_key,\n        event_date_dt as session_partition_date,\n        event_timestamp,\n        page_path,\n        page_location,\n        page_hostname,\n        page_referrer,\n        geo_continent,\n        geo_country,\n        geo_region,\n        geo_city,\n        geo_sub_continent,\n        geo_metro,\n        stream_id,\n        platform,\n        device_category,\n        device_mobile_brand_name,\n        device_mobile_model_name,\n        device_mobile_marketing_name,\n        device_mobile_os_hardware_model,\n        device_operating_system,\n        device_operating_system_version,\n        device_vendor_id,\n        device_advertising_id,\n        device_language,\n        device_is_limited_ad_tracking,\n        device_time_zone_offset_seconds,\n        device_browser,\n        device_web_info_browser,\n        device_web_info_browser_version,\n        device_web_info_hostname,\n        user_campaign,\n        user_medium,\n        user_source,\n    from {{ref('stg_ga4__events')}}\n    where event_name != 'first_visit' \n    and event_name != 'session_start'\n    {% if is_incremental() %}\n            and event_date_dt in ({{ partitions_to_replace | join(',') }})\n    {% endif %}\n)\n,traffic_sources as (\n    select \n        session_partition_key,\n        session_source,\n        session_medium,\n        session_campaign,\n        session_content,\n        session_term,\n        session_default_channel_grouping,\n        session_source_category,\n        -- last non-direct traffic sources\n        last_non_direct_source,\n        last_non_direct_medium,\n        last_non_direct_campaign,\n        last_non_direct_content,\n        last_non_direct_term,\n        last_non_direct_default_channel_grouping,\n        last_non_direct_source_category\n    from {{ref('stg_ga4__sessions_traffic_sources_last_non_direct_daily')}}\n    where 1=1\n    {% if is_incremental() %}\n            and session_partition_date in ({{ partitions_to_replace | join(',') }})\n    {% endif %} \n)\n{% if var('derived_session_properties', false) %}\n,session_properties as (\n    select \n        * except (session_partition_date)\n    from {{ref('stg_ga4__derived_session_properties_daily')}}\n    where 1=1\n    {% if is_incremental() %}\n           and session_partition_date in ({{ partitions_to_replace | join(',') }})\n    {% endif %}     \n)\n{% endif %}\n,session_dimensions as \n(\n    select    \n        distinct -- Distinct call will, in effect, group by session_partition_key\n        stream_id\n        ,session_key\n        ,session_partition_key\n        ,session_partition_date\n        ,FIRST_VALUE(event_timestamp IGNORE NULLS) OVER (session_partition_window) AS session_partition_start_timestamp\n        ,FIRST_VALUE(page_path IGNORE NULLS) OVER (session_partition_window) AS landing_page_path\n        ,FIRST_VALUE(page_location IGNORE NULLS) OVER (session_partition_window) AS landing_page_location\n        ,FIRST_VALUE(page_hostname IGNORE NULLS) OVER (session_partition_window) AS landing_page_hostname\n        ,FIRST_VALUE(page_referrer IGNORE NULLS) OVER (session_partition_window) AS referrer\n        ,FIRST_VALUE(geo_continent IGNORE NULLS) OVER (session_partition_window) AS geo_continent\n        ,FIRST_VALUE(geo_country IGNORE NULLS) OVER (session_partition_window) AS geo_country\n        ,FIRST_VALUE(geo_region IGNORE NULLS) OVER (session_partition_window) AS geo_region\n        ,FIRST_VALUE(geo_city IGNORE NULLS) OVER (session_partition_window) AS geo_city\n        ,FIRST_VALUE(geo_sub_continent IGNORE NULLS) OVER (session_partition_window) AS geo_sub_continent\n        ,FIRST_VALUE(geo_metro IGNORE NULLS) OVER (session_partition_window) AS geo_metro\n        ,FIRST_VALUE(platform IGNORE NULLS) OVER (session_partition_window) AS platform\n        ,FIRST_VALUE(device_category IGNORE NULLS) OVER (session_partition_window) AS device_category\n        ,FIRST_VALUE(device_mobile_brand_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_brand_name\n        ,FIRST_VALUE(device_mobile_model_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_model_name\n        ,FIRST_VALUE(device_mobile_marketing_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_marketing_name\n        ,FIRST_VALUE(device_mobile_os_hardware_model IGNORE NULLS) OVER (session_partition_window) AS device_mobile_os_hardware_model\n        ,FIRST_VALUE(device_operating_system IGNORE NULLS) OVER (session_partition_window) AS device_operating_system\n        ,FIRST_VALUE(device_operating_system_version IGNORE NULLS) OVER (session_partition_window) AS device_operating_system_version\n        ,FIRST_VALUE(device_vendor_id IGNORE NULLS) OVER (session_partition_window) AS device_vendor_id\n        ,FIRST_VALUE(device_advertising_id IGNORE NULLS) OVER (session_partition_window) AS device_advertising_id\n        ,FIRST_VALUE(device_language IGNORE NULLS) OVER (session_partition_window) AS device_language\n        ,FIRST_VALUE(device_is_limited_ad_tracking IGNORE NULLS) OVER (session_partition_window) AS device_is_limited_ad_tracking\n        ,FIRST_VALUE(device_time_zone_offset_seconds IGNORE NULLS) OVER (session_partition_window) AS device_time_zone_offset_seconds\n        ,FIRST_VALUE(device_browser IGNORE NULLS) OVER (session_partition_window) AS device_browser\n        ,FIRST_VALUE(device_web_info_browser IGNORE NULLS) OVER (session_partition_window) AS device_web_info_browser\n        ,FIRST_VALUE(device_web_info_browser_version IGNORE NULLS) OVER (session_partition_window) AS device_web_info_browser_version\n        ,FIRST_VALUE(device_web_info_hostname IGNORE NULLS) OVER (session_partition_window) AS device_web_info_hostname\n        ,FIRST_VALUE(user_campaign IGNORE NULLS) OVER (session_partition_window) AS user_campaign\n        ,FIRST_VALUE(user_medium IGNORE NULLS) OVER (session_partition_window) AS user_medium\n        ,FIRST_VALUE(user_source IGNORE NULLS) OVER (session_partition_window) AS user_source\n        from event_dimensions\n    WINDOW session_partition_window AS (PARTITION BY session_partition_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n)\n,join_traffic_source as (\n    select \n        session_dimensions.*,\n        session_source,\n        session_medium,\n        session_campaign,\n        session_content,\n        session_term,\n        session_default_channel_grouping,\n        session_source_category,\n        -- last non-direct traffic sources\n        last_non_direct_source,\n        last_non_direct_medium,\n        last_non_direct_campaign,\n        last_non_direct_content,\n        last_non_direct_term,\n        last_non_direct_default_channel_grouping,\n        last_non_direct_source_category\n    from session_dimensions\n    left join traffic_sources sessions_traffic_sources using (session_partition_key)\n)\n,join_session_properties as (\n    select \n        * \n    from join_traffic_source\n    {% if var('derived_session_properties', false) %}\n    -- If derived session properties have been assigned as variables, join them on the session_partition_key\n    left join session_properties using (session_partition_key)\n    {% endif %}\n)\n\n-- Collapse \nselect distinct * from join_session_properties", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}, {"name": "stg_ga4__sessions_traffic_sources_last_non_direct_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__events", "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"]}, "compiled_path": "target/compiled/ga4/models/marts/core/dim_ga4__sessions_daily.sql", "compiled": true, "compiled_code": "\n\n    \n\n\n\n\nwith event_dimensions as \n(\n    select \n        client_key,\n        session_key,\n        session_partition_key,\n        event_date_dt as session_partition_date,\n        event_timestamp,\n        page_path,\n        page_location,\n        page_hostname,\n        page_referrer,\n        geo_continent,\n        geo_country,\n        geo_region,\n        geo_city,\n        geo_sub_continent,\n        geo_metro,\n        stream_id,\n        platform,\n        device_category,\n        device_mobile_brand_name,\n        device_mobile_model_name,\n        device_mobile_marketing_name,\n        device_mobile_os_hardware_model,\n        device_operating_system,\n        device_operating_system_version,\n        device_vendor_id,\n        device_advertising_id,\n        device_language,\n        device_is_limited_ad_tracking,\n        device_time_zone_offset_seconds,\n        device_browser,\n        device_web_info_browser,\n        device_web_info_browser_version,\n        device_web_info_hostname,\n        user_campaign,\n        user_medium,\n        user_source,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where event_name != 'first_visit' \n    and event_name != 'session_start'\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day))\n    \n)\n,traffic_sources as (\n    select \n        session_partition_key,\n        session_source,\n        session_medium,\n        session_campaign,\n        session_content,\n        session_term,\n        session_default_channel_grouping,\n        session_source_category,\n        -- last non-direct traffic sources\n        last_non_direct_source,\n        last_non_direct_medium,\n        last_non_direct_campaign,\n        last_non_direct_content,\n        last_non_direct_term,\n        last_non_direct_default_channel_grouping,\n        last_non_direct_source_category\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\n    where 1=1\n    \n            and session_partition_date in (current_date,date_sub(current_date, interval 1 day))\n     \n)\n\n,session_dimensions as \n(\n    select    \n        distinct -- Distinct call will, in effect, group by session_partition_key\n        stream_id\n        ,session_key\n        ,session_partition_key\n        ,session_partition_date\n        ,FIRST_VALUE(event_timestamp IGNORE NULLS) OVER (session_partition_window) AS session_partition_start_timestamp\n        ,FIRST_VALUE(page_path IGNORE NULLS) OVER (session_partition_window) AS landing_page_path\n        ,FIRST_VALUE(page_location IGNORE NULLS) OVER (session_partition_window) AS landing_page_location\n        ,FIRST_VALUE(page_hostname IGNORE NULLS) OVER (session_partition_window) AS landing_page_hostname\n        ,FIRST_VALUE(page_referrer IGNORE NULLS) OVER (session_partition_window) AS referrer\n        ,FIRST_VALUE(geo_continent IGNORE NULLS) OVER (session_partition_window) AS geo_continent\n        ,FIRST_VALUE(geo_country IGNORE NULLS) OVER (session_partition_window) AS geo_country\n        ,FIRST_VALUE(geo_region IGNORE NULLS) OVER (session_partition_window) AS geo_region\n        ,FIRST_VALUE(geo_city IGNORE NULLS) OVER (session_partition_window) AS geo_city\n        ,FIRST_VALUE(geo_sub_continent IGNORE NULLS) OVER (session_partition_window) AS geo_sub_continent\n        ,FIRST_VALUE(geo_metro IGNORE NULLS) OVER (session_partition_window) AS geo_metro\n        ,FIRST_VALUE(platform IGNORE NULLS) OVER (session_partition_window) AS platform\n        ,FIRST_VALUE(device_category IGNORE NULLS) OVER (session_partition_window) AS device_category\n        ,FIRST_VALUE(device_mobile_brand_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_brand_name\n        ,FIRST_VALUE(device_mobile_model_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_model_name\n        ,FIRST_VALUE(device_mobile_marketing_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_marketing_name\n        ,FIRST_VALUE(device_mobile_os_hardware_model IGNORE NULLS) OVER (session_partition_window) AS device_mobile_os_hardware_model\n        ,FIRST_VALUE(device_operating_system IGNORE NULLS) OVER (session_partition_window) AS device_operating_system\n        ,FIRST_VALUE(device_operating_system_version IGNORE NULLS) OVER (session_partition_window) AS device_operating_system_version\n        ,FIRST_VALUE(device_vendor_id IGNORE NULLS) OVER (session_partition_window) AS device_vendor_id\n        ,FIRST_VALUE(device_advertising_id IGNORE NULLS) OVER (session_partition_window) AS device_advertising_id\n        ,FIRST_VALUE(device_language IGNORE NULLS) OVER (session_partition_window) AS device_language\n        ,FIRST_VALUE(device_is_limited_ad_tracking IGNORE NULLS) OVER (session_partition_window) AS device_is_limited_ad_tracking\n        ,FIRST_VALUE(device_time_zone_offset_seconds IGNORE NULLS) OVER (session_partition_window) AS device_time_zone_offset_seconds\n        ,FIRST_VALUE(device_browser IGNORE NULLS) OVER (session_partition_window) AS device_browser\n        ,FIRST_VALUE(device_web_info_browser IGNORE NULLS) OVER (session_partition_window) AS device_web_info_browser\n        ,FIRST_VALUE(device_web_info_browser_version IGNORE NULLS) OVER (session_partition_window) AS device_web_info_browser_version\n        ,FIRST_VALUE(device_web_info_hostname IGNORE NULLS) OVER (session_partition_window) AS device_web_info_hostname\n        ,FIRST_VALUE(user_campaign IGNORE NULLS) OVER (session_partition_window) AS user_campaign\n        ,FIRST_VALUE(user_medium IGNORE NULLS) OVER (session_partition_window) AS user_medium\n        ,FIRST_VALUE(user_source IGNORE NULLS) OVER (session_partition_window) AS user_source\n        from event_dimensions\n    WINDOW session_partition_window AS (PARTITION BY session_partition_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n)\n,join_traffic_source as (\n    select \n        session_dimensions.*,\n        session_source,\n        session_medium,\n        session_campaign,\n        session_content,\n        session_term,\n        session_default_channel_grouping,\n        session_source_category,\n        -- last non-direct traffic sources\n        last_non_direct_source,\n        last_non_direct_medium,\n        last_non_direct_campaign,\n        last_non_direct_content,\n        last_non_direct_term,\n        last_non_direct_default_channel_grouping,\n        last_non_direct_source_category\n    from session_dimensions\n    left join traffic_sources sessions_traffic_sources using (session_partition_key)\n)\n,join_session_properties as (\n    select \n        * \n    from join_traffic_source\n    \n)\n\n-- Collapse \nselect distinct * from join_session_properties", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.fct_ga4__client_keys": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_ga4__client_keys", "resource_type": "model", "package_name": "ga4", "path": "marts/core/fct_ga4__client_keys.sql", "original_file_path": "models/marts/core/fct_ga4__client_keys.sql", "unique_id": "model.ga4.fct_ga4__client_keys", "fqn": ["ga4", "marts", "core", "fct_ga4__client_keys"], "alias": "fct_ga4__client_keys", "checksum": {"name": "sha256", "checksum": "3251e663183d3c580e0e38b8e39cb4adadf0955f1c90de935d2c051f326f5f70"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Fact table with aggregate metrics at the level of the user's device (as indicated by the client_key). Metrics are aggregated from fct_ga4__sessions.", "columns": {"client_key": {"name": "client_key", "description": "Hashed combination of user_pseudo_id and stream_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/marts/core/core.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.4575083, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__client_keys`", "raw_code": "select\n    client_key,\n    stream_id,\n    min(session_start_timestamp) as first_seen_timestamp,\n    max(session_start_timestamp) as last_seen_session_timestamp,\n    min(session_start_date) as first_seen_date,\n    max(session_start_date) as last_seen_date,\n    sum(count_pageviews) as count_pageviews,\n    sum(is_session_engaged) as count_engaged_sessions,\n    sum(sum_event_value_in_usd) as sum_event_value_in_usd,\n    sum(sum_engaged_time_msec) as sum_engaged_time_msec,\n    count(distinct session_key)  as count_sessions\n    {% if var('conversion_events', false) %}\n        {% for ce in var('conversion_events',[]) %}\n            , sum(count_{{ce}}) as count_{{ce}}\n        {% endfor %}\n    {% endif %}\nfrom {{ref('fct_ga4__sessions')}}\ngroup by 1, 2", "language": "sql", "refs": [{"name": "fct_ga4__sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.fct_ga4__sessions"]}, "compiled_path": "target/compiled/ga4/models/marts/core/fct_ga4__client_keys.sql", "compiled": true, "compiled_code": "select\n    client_key,\n    stream_id,\n    min(session_start_timestamp) as first_seen_timestamp,\n    max(session_start_timestamp) as last_seen_session_timestamp,\n    min(session_start_date) as first_seen_date,\n    max(session_start_date) as last_seen_date,\n    sum(count_pageviews) as count_pageviews,\n    sum(is_session_engaged) as count_engaged_sessions,\n    sum(sum_event_value_in_usd) as sum_event_value_in_usd,\n    sum(sum_engaged_time_msec) as sum_engaged_time_msec,\n    count(distinct session_key)  as count_sessions\n    \n        \n            , sum(count_purchase) as count_purchase\n        \n            , sum(count_message) as count_message\n        \n            , sum(count_call) as count_call\n        \n            , sum(count_generate_lead) as count_generate_lead\n        \n            , sum(count_store_visit) as count_store_visit\n        \n    \nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions`\ngroup by 1, 2", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.fct_ga4__sessions": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_ga4__sessions", "resource_type": "model", "package_name": "ga4", "path": "marts/core/fct_ga4__sessions.sql", "original_file_path": "models/marts/core/fct_ga4__sessions.sql", "unique_id": "model.ga4.fct_ga4__sessions", "fqn": ["ga4", "marts", "core", "fct_ga4__sessions"], "alias": "fct_ga4__sessions", "checksum": {"name": "sha256", "checksum": "ccc4072a53e8e70a2347d18e56bdb3a9328cbcf47bd56adbc0efda9b5d444d4b"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["session_key", "client_key"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_start_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Fact table containing metrics related to sessions. This model uses the daily partition metrics generated in fct_ga4__sessions_daily to calculate metrics for the session as a whole. Unique on session_key.\n", "columns": {"session_key": {"name": "session_key", "description": "Unique key assigned to sessions. Sessions can span multiple dates/partitions. \n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "User ID associated with the client. Will be set to null unless explicitly assigned in the GA4 implementation. This value can change mid-session so we take the 'max' value.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_start_date": {"name": "session_start_date", "description": "Date associated with the first session partition.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/marts/core/fct_ga4__sessions.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "unique_key": ["session_key", "client_key"], "tags": ["incremental"], "partition_by": {"field": "session_start_date", "data_type": "date", "granularity": "day"}, "on_schema_change": "sync_all_columns", "schema": "marketing"}, "created_at": 1732268181.471447, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions`", "raw_code": "-- Stay mindful of performance/cost when using this model. Making this model partitioned on date is not possible because there's no way to create a single record per session AND partition on date. \n-- depends_on: {{ ref('stg_ga4__sessions_first_last_pageviews') }}\n{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        unique_key = ['session_key','client_key'],\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"session_start_date\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        on_schema_change = 'sync_all_columns',\n    )\n}}\n\n   with aggregated as (\n    select\n    client_key,\n    session_key,\n    stream_id,\n    max(user_id) as user_id,\n    min(session_partition_min_timestamp) as session_start_timestamp,\n    min(session_partition_date) as session_start_date,\n    sum(session_partition_count_page_views) as count_pageviews,\n    sum(session_partition_sum_event_value_in_usd) as sum_event_value_in_usd,\n    max(session_partition_max_session_engaged) as is_session_engaged,\n    sum(session_partition_sum_engagement_time_msec) as sum_engaged_time_msec,\n    min(session_number) as session_number\n    {% if var('conversion_events', false) %}\n        {% for ce in var('conversion_events',[]) %}\n            , sum({{ce}}_count) as count_{{ce}}\n        {% endfor %}\n    {% endif %}\nfrom {{ref('fct_ga4__sessions_daily')}} s\n{% if is_incremental() %}\n  where session_partition_date >= date_sub(current_date, interval {{var('static_incremental_days',3)}} day)\n{% endif %}\ngroup by 1,2,3\n)\n\nselect \naggregated.* \nfrom aggregated\n{% if is_incremental() %}\n  inner join {{ ref(\"stg_ga4__sessions_first_last_pageviews\") }} pv \n  on pv.session_key = aggregated.session_key and pv.first_page_view_event_date = aggregated.session_start_date\n  where pv.first_page_view_event_date >= date_sub(current_date, interval {{var('static_incremental_days',3)}} day)\n{% endif %}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_first_last_pageviews", "package": null, "version": null}, {"name": "fct_ga4__sessions_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__sessions_first_last_pageviews", "model.ga4.fct_ga4__sessions_daily"]}, "compiled_path": "target/compiled/ga4/models/marts/core/fct_ga4__sessions.sql", "compiled": true, "compiled_code": "-- Stay mindful of performance/cost when using this model. Making this model partitioned on date is not possible because there's no way to create a single record per session AND partition on date. \n-- depends_on: `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews`\n\n\n   with aggregated as (\n    select\n    client_key,\n    session_key,\n    stream_id,\n    max(user_id) as user_id,\n    min(session_partition_min_timestamp) as session_start_timestamp,\n    min(session_partition_date) as session_start_date,\n    sum(session_partition_count_page_views) as count_pageviews,\n    sum(session_partition_sum_event_value_in_usd) as sum_event_value_in_usd,\n    max(session_partition_max_session_engaged) as is_session_engaged,\n    sum(session_partition_sum_engagement_time_msec) as sum_engaged_time_msec,\n    min(session_number) as session_number\n    \n        \n            , sum(purchase_count) as count_purchase\n        \n            , sum(message_count) as count_message\n        \n            , sum(call_count) as count_call\n        \n            , sum(generate_lead_count) as count_generate_lead\n        \n            , sum(store_visit_count) as count_store_visit\n        \n    \nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions_daily` s\n\n  where session_partition_date >= date_sub(current_date, interval 1 day)\n\ngroup by 1,2,3\n)\n\nselect \naggregated.* \nfrom aggregated\n\n  inner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews` pv \n  on pv.session_key = aggregated.session_key and pv.first_page_view_event_date = aggregated.session_start_date\n  where pv.first_page_view_event_date >= date_sub(current_date, interval 1 day)\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.fct_ga4__sessions_daily": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_ga4__sessions_daily", "resource_type": "model", "package_name": "ga4", "path": "marts/core/fct_ga4__sessions_daily.sql", "original_file_path": "models/marts/core/fct_ga4__sessions_daily.sql", "unique_id": "model.ga4.fct_ga4__sessions_daily", "fqn": ["ga4", "marts", "core", "fct_ga4__sessions_daily"], "alias": "fct_ga4__sessions_daily", "checksum": {"name": "sha256", "checksum": "8dbf609afdf9d954e52d4058f1e15eb882d9ab50e6d26e827a3709c08755a933"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["session_key", "session_partition_key"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Incremental fact table with metrics related to daily session partitions.\n", "columns": {"session_partition_key": {"name": "session_partition_key", "description": "Unique key assigned to session partitions which are daily partitions of a session. In GA4, sessions can span multiple days.  To improve query performance, it's easier to work with 'session partitions' which can be filtered/partitioned by date.\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_key": {"name": "session_key", "description": "Unique key assigned to sessions. Sessions can span multiple dates/partitions. \n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_partition_date": {"name": "session_partition_date", "description": "Date associated with the session_partition_key. Used to partition the table. Filter on this column to optimize query cost and performance.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/marts/core/fct_ga4__sessions_daily.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "tags": ["incremental"], "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "unique_key": ["session_key", "session_partition_key"], "on_schema_change": "sync_all_columns", "schema": "marketing"}, "created_at": 1732268181.4683316, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions_daily`", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"session_partition_date\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        unique_key = ['session_key','session_partition_key'],\n        on_schema_change = 'sync_all_columns'\n    )\n}}\n\n\nwith session_metrics as (\n    select \n        session_key,\n        session_partition_key,\n        client_key,\n        stream_id,\n        max(user_id) as user_id, -- user_id can be null at the start and end of a session and still be set in the middle\n        min(event_date_dt) as session_partition_date, -- Date of the session partition, does not represent the true session start date which, in GA4, can span multiple days\n        min(event_timestamp) as session_partition_min_timestamp,\n        countif(event_name = 'page_view') as session_partition_count_page_views,\n        sum(event_value_in_usd) as session_partition_sum_event_value_in_usd,\n        ifnull(max(session_engaged), 0) as session_partition_max_session_engaged,\n        sum(engagement_time_msec) as session_partition_sum_engagement_time_msec,\n        min(session_number) as session_number\n    from {{ref('stg_ga4__events')}} e\n    where session_key is not null\n    {% if is_incremental() %}\n            and event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n    group by 1,2,3,4\n)\n{% if var('conversion_events', false) == false %}\n    select * from session_metrics\n{% else %}\n    ,\n    session_conversions as (\n    select * from {{ref('stg_ga4__session_conversions_daily')}}\n    where 1=1\n    {% if is_incremental() %}\n            and session_partition_date >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day) \n    {% endif %}\n    ),\n    join_metrics_and_conversions as (\n        select \n            session_metrics.client_key,\n            session_metrics.stream_id,\n            session_metrics.user_id,\n            session_metrics.session_partition_min_timestamp,\n            session_metrics.session_partition_count_page_views,\n            session_metrics.session_partition_sum_event_value_in_usd,\n            session_metrics.session_partition_max_session_engaged,\n            session_metrics.session_partition_sum_engagement_time_msec,\n            session_metrics.session_number,\n            session_conversions.*\n        from session_metrics left join session_conversions using (session_partition_key)\n    )\n\n    select * from join_metrics_and_conversions\n{% endif %}", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}, {"name": "stg_ga4__session_conversions_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__events", "model.ga4.stg_ga4__session_conversions_daily"]}, "compiled_path": "target/compiled/ga4/models/marts/core/fct_ga4__sessions_daily.sql", "compiled": true, "compiled_code": "\n\n\nwith session_metrics as (\n    select \n        session_key,\n        session_partition_key,\n        client_key,\n        stream_id,\n        max(user_id) as user_id, -- user_id can be null at the start and end of a session and still be set in the middle\n        min(event_date_dt) as session_partition_date, -- Date of the session partition, does not represent the true session start date which, in GA4, can span multiple days\n        min(event_timestamp) as session_partition_min_timestamp,\n        countif(event_name = 'page_view') as session_partition_count_page_views,\n        sum(event_value_in_usd) as session_partition_sum_event_value_in_usd,\n        ifnull(max(session_engaged), 0) as session_partition_max_session_engaged,\n        sum(engagement_time_msec) as session_partition_sum_engagement_time_msec,\n        min(session_number) as session_number\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` e\n    where session_key is not null\n    \n            and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n    group by 1,2,3,4\n)\n\n    ,\n    session_conversions as (\n    select * from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__session_conversions_daily`\n    where 1=1\n    \n            and session_partition_date >= date_sub(current_date, interval 1 day) \n    \n    ),\n    join_metrics_and_conversions as (\n        select \n            session_metrics.client_key,\n            session_metrics.stream_id,\n            session_metrics.user_id,\n            session_metrics.session_partition_min_timestamp,\n            session_metrics.session_partition_count_page_views,\n            session_metrics.session_partition_sum_event_value_in_usd,\n            session_metrics.session_partition_max_session_engaged,\n            session_metrics.session_partition_sum_engagement_time_msec,\n            session_metrics.session_number,\n            session_conversions.*\n        from session_metrics left join session_conversions using (session_partition_key)\n    )\n\n    select * from join_metrics_and_conversions\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.dim_ga4__sessions": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim_ga4__sessions", "resource_type": "model", "package_name": "ga4", "path": "marts/core/dim_ga4__sessions.sql", "original_file_path": "models/marts/core/dim_ga4__sessions.sql", "unique_id": "model.ga4.dim_ga4__sessions", "fqn": ["ga4", "marts", "core", "dim_ga4__sessions"], "alias": "dim_ga4__sessions", "checksum": {"name": "sha256", "checksum": "235a0766f329c6d796ceea6747a8595f4741e55853d97637e5b1b49902d1424f"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["session_key"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "merge_exclude_columns": ["session_partition_date"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Dimension table for sessions containing context useful for filtering such as acquisition source, medium, and campaign. Each row represents a session. Unique on session_key", "columns": {"session_key": {"name": "session_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/marts/core/core.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "tags": ["incremental"], "on_schema_change": "sync_all_columns", "unique_key": ["session_key"], "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "merge_exclude_columns": ["session_partition_date"], "schema": "marketing"}, "created_at": 1732268181.4561918, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions`", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        tags = [\"incremental\"],\n        on_schema_change = 'sync_all_columns',\n        unique_key = ['session_key'],\n        partition_by={\n            \"field\": \"session_partition_date\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        merge_exclude_columns= [\n            'session_partition_date'\n        ]\n    )\n}}\n\n\n-- Dimension table for sessions based on the first event that isn't session_start or first_visit.\nwith session_first_event as \n(\n    select e.*\n    from {{ref('stg_ga4__events')}} e\n    inner join {{ref(\"stg_ga4__sessions_first_last_pageviews\")}} pv \n    on e.session_key = pv.session_key and e.event_date_dt = date(pv.first_page_view_event_date)\n    where e.event_name != 'first_visit' \n    and e.event_name != 'session_start'\n    {% if is_incremental() %}\n      and date(pv.first_page_view_event_time)  >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n    qualify row_number() over(partition by e.session_key order by event_timestamp) = 1\n),\n session_start_dims as (\n    select \n        session_key,\n        event_date_dt as session_partition_date,\n        event_timestamp as session_start_timestamp,\n        page_path as landing_page_path,\n        page_location as landing_page,\n        page_hostname as landing_page_hostname,\n        page_referrer as landing_page_referrer,\n        geo_continent,\n        geo_country,\n        geo_region,\n        geo_city,\n        geo_sub_continent,\n        geo_metro,\n        stream_id,\n        platform,\n        device_category,\n        device_mobile_brand_name,\n        device_mobile_model_name,\n        device_mobile_marketing_name,\n        device_mobile_os_hardware_model,\n        device_operating_system,\n        device_operating_system_version,\n        device_vendor_id,\n        device_advertising_id,\n        device_language,\n        device_is_limited_ad_tracking,\n        device_time_zone_offset_seconds,\n        device_browser,\n        device_web_info_browser,\n        device_web_info_browser_version,\n        device_web_info_hostname,\n        session_number,\n        session_number = 1 as is_first_session,\n        user_campaign,\n        user_medium,\n        user_source,\n    from session_first_event\n),\njoin_traffic_source as (\n    select \n        session_start_dims.*,\n        sessions_traffic_sources.session_source,\n        sessions_traffic_sources.session_medium,\n        sessions_traffic_sources.session_campaign,\n        sessions_traffic_sources.session_content,\n        sessions_traffic_sources.session_term,\n        sessions_traffic_sources.session_default_channel_grouping,\n        sessions_traffic_sources.session_source_category\n    from session_start_dims\n    left join {{ref('stg_ga4__sessions_traffic_sources')}} sessions_traffic_sources using (session_key)\n    {% if is_incremental() %}\n      where sessions_traffic_sources.session_partition_date >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n),\ninclude_session_properties as (\n    select \n        * \n    from join_traffic_source\n    {% if var('derived_session_properties', false) %}\n    -- If derived session properties have been assigned as variables, join them on the session_key\n    left join {{ref('stg_ga4__derived_session_properties')}} using (session_key)\n    {% endif %}\n)\n\nselect * from include_session_properties", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}, {"name": "stg_ga4__sessions_first_last_pageviews", "package": null, "version": null}, {"name": "stg_ga4__sessions_traffic_sources", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__events", "model.ga4.stg_ga4__sessions_first_last_pageviews", "model.ga4.stg_ga4__sessions_traffic_sources"]}, "compiled_path": "target/compiled/ga4/models/marts/core/dim_ga4__sessions.sql", "compiled": true, "compiled_code": "\n\n\n-- Dimension table for sessions based on the first event that isn't session_start or first_visit.\nwith session_first_event as \n(\n    select e.*\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` e\n    inner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews` pv \n    on e.session_key = pv.session_key and e.event_date_dt = date(pv.first_page_view_event_date)\n    where e.event_name != 'first_visit' \n    and e.event_name != 'session_start'\n    \n      and date(pv.first_page_view_event_time)  >= date_sub(current_date, interval 1 day)\n    \n    qualify row_number() over(partition by e.session_key order by event_timestamp) = 1\n),\n session_start_dims as (\n    select \n        session_key,\n        event_date_dt as session_partition_date,\n        event_timestamp as session_start_timestamp,\n        page_path as landing_page_path,\n        page_location as landing_page,\n        page_hostname as landing_page_hostname,\n        page_referrer as landing_page_referrer,\n        geo_continent,\n        geo_country,\n        geo_region,\n        geo_city,\n        geo_sub_continent,\n        geo_metro,\n        stream_id,\n        platform,\n        device_category,\n        device_mobile_brand_name,\n        device_mobile_model_name,\n        device_mobile_marketing_name,\n        device_mobile_os_hardware_model,\n        device_operating_system,\n        device_operating_system_version,\n        device_vendor_id,\n        device_advertising_id,\n        device_language,\n        device_is_limited_ad_tracking,\n        device_time_zone_offset_seconds,\n        device_browser,\n        device_web_info_browser,\n        device_web_info_browser_version,\n        device_web_info_hostname,\n        session_number,\n        session_number = 1 as is_first_session,\n        user_campaign,\n        user_medium,\n        user_source,\n    from session_first_event\n),\njoin_traffic_source as (\n    select \n        session_start_dims.*,\n        sessions_traffic_sources.session_source,\n        sessions_traffic_sources.session_medium,\n        sessions_traffic_sources.session_campaign,\n        sessions_traffic_sources.session_content,\n        sessions_traffic_sources.session_term,\n        sessions_traffic_sources.session_default_channel_grouping,\n        sessions_traffic_sources.session_source_category\n    from session_start_dims\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources` sessions_traffic_sources using (session_key)\n    \n      where sessions_traffic_sources.session_partition_date >= date_sub(current_date, interval 1 day)\n    \n),\ninclude_session_properties as (\n    select \n        * \n    from join_traffic_source\n    \n)\n\nselect * from include_session_properties", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.fct_ga4__pages": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_ga4__pages", "resource_type": "model", "package_name": "ga4", "path": "marts/core/fct_ga4__pages.sql", "original_file_path": "models/marts/core/fct_ga4__pages.sql", "unique_id": "model.ga4.fct_ga4__pages", "fqn": ["ga4", "marts", "core", "fct_ga4__pages"], "alias": "fct_ga4__pages", "checksum": {"name": "sha256", "checksum": "e02eb2969230d0cbbdc4facdcc2289570a23fc3e9ac9e80cb344a2473fbf3124"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["event_date_dt", "stream_id", "page_location"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "event_date_dt", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Incremental model with page metrics such as visits, users, new_users, entrances and exits as well as configurable conversion counts grouped by stream_id and page_location.", "columns": {"total_engagement_time_msec": {"name": "total_engagement_time_msec", "description": "The total engagement time for that page_location.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_engagement_time_denominator": {"name": "avg_engagement_time_denominator", "description": "Use avg_engagement_time_denominator to calculate the average engagement time, which is derived by dividing the sum of total engagement time by the product of the sum of the denominator and 1000 to get the average engagement time in seconds (average_engagement_time = sum(total_engagement_time_msec)/(sum(avg_engagement_time_denominator) *1000 )). The denominator excludes page_view events where no engagement time is recorded for the page_location within a session. However, it includes subsequent page_view events to a page_location that has previously recorded a page_view event in the same session, even if the subsequent event has no recorded engagement time.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/marts/core/fct_ga4__pages.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "unique_key": ["event_date_dt", "stream_id", "page_location"], "tags": ["incremental"], "partition_by": {"field": "event_date_dt", "data_type": "date", "granularity": "day"}, "on_schema_change": "sync_all_columns", "schema": "marketing"}, "created_at": 1732268181.4531488, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__pages`", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        unique_key = ['event_date_dt', 'stream_id' , 'page_location'],\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"event_date_dt\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        on_schema_change = 'sync_all_columns',\n    )\n}}\n\nwith page_view as (\n    select\n        event_date_dt,\n        stream_id,\n        page_location,  -- includes query string parameters not listed in query_parameter_exclusions variable\n        page_key,\n        page_engagement_key,\n        count(event_name) as page_views,\n        count(distinct client_key ) as distinct_client_keys,\n        sum( if(session_number = 1,1,0)) as new_client_keys,\n        sum(entrances) as entrances,\nfrom {{ref('stg_ga4__event_page_view')}}\n{% if is_incremental() %}\n        where event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3)}} day)\n{% endif %}\n    group by 1,2,3,4,5\n), page_engagement as (\n    select\n        page_view.event_date_dt,\n        page_view.stream_id,\n        page_view.page_location,\n        page_view.page_key,\n        sum(page_view.page_views) as page_views,  -- page_engagement_key references the page_referrer; need to re-aggregate metrics\n        sum(page_view.distinct_client_keys) as distinct_client_keys,\n        sum(page_view.new_client_keys) as new_client_keys,\n        sum(page_view.entrances) as entrances,\n        sum(page_engagement_time_msec) as total_engagement_time_msec,\n        sum( page_engagement_denominator) as avg_engagement_time_denominator\n    from {{ ref('stg_ga4__page_engaged_time') }}\n    right join page_view using (page_engagement_key)\n    group by 1,2,3,4\n), scroll as (\n    select\n        event_date_dt,\n        page_location, \n        count(event_name) as scroll_events\n    from {{ref('stg_ga4__event_scroll')}}\n    {% if is_incremental() %}\n            where event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3)}} day)\n    {% endif %}\n    group by 1,2\n)\n{% if var('conversion_events',false) %}\n,\njoin_conversions as (\n    select \n        *\n    from page_engagement\n    left join {{ ref('stg_ga4__page_conversions') }} using (page_key)\n)\nselect\n    join_conversions.*  except (page_key),\n    ifnull(scroll.scroll_events, 0) as scroll_events\nfrom join_conversions\nleft join scroll using (event_date_dt, page_location)\n{% else %}\nselect\n    page_engagement.* except (page_key),\n    ifnull(scroll.scroll_events, 0) as scroll_events\nfrom page_engagement\nleft join scroll using (event_date_dt, page_location)\n{% endif %}", "language": "sql", "refs": [{"name": "stg_ga4__event_page_view", "package": null, "version": null}, {"name": "stg_ga4__page_engaged_time", "package": null, "version": null}, {"name": "stg_ga4__event_scroll", "package": null, "version": null}, {"name": "stg_ga4__page_conversions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__event_page_view", "model.ga4.stg_ga4__page_engaged_time", "model.ga4.stg_ga4__event_scroll", "model.ga4.stg_ga4__page_conversions"]}, "compiled_path": "target/compiled/ga4/models/marts/core/fct_ga4__pages.sql", "compiled": true, "compiled_code": "\n\nwith page_view as (\n    select\n        event_date_dt,\n        stream_id,\n        page_location,  -- includes query string parameters not listed in query_parameter_exclusions variable\n        page_key,\n        page_engagement_key,\n        count(event_name) as page_views,\n        count(distinct client_key ) as distinct_client_keys,\n        sum( if(session_number = 1,1,0)) as new_client_keys,\n        sum(entrances) as entrances,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view`\n\n        where event_date_dt >= date_sub(current_date, interval 1 day)\n\n    group by 1,2,3,4,5\n), page_engagement as (\n    select\n        page_view.event_date_dt,\n        page_view.stream_id,\n        page_view.page_location,\n        page_view.page_key,\n        sum(page_view.page_views) as page_views,  -- page_engagement_key references the page_referrer; need to re-aggregate metrics\n        sum(page_view.distinct_client_keys) as distinct_client_keys,\n        sum(page_view.new_client_keys) as new_client_keys,\n        sum(page_view.entrances) as entrances,\n        sum(page_engagement_time_msec) as total_engagement_time_msec,\n        sum( page_engagement_denominator) as avg_engagement_time_denominator\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__page_engaged_time`\n    right join page_view using (page_engagement_key)\n    group by 1,2,3,4\n), scroll as (\n    select\n        event_date_dt,\n        page_location, \n        count(event_name) as scroll_events\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_scroll`\n    \n            where event_date_dt >= date_sub(current_date, interval 1 day)\n    \n    group by 1,2\n)\n\n,\njoin_conversions as (\n    select \n        *\n    from page_engagement\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__page_conversions` using (page_key)\n)\nselect\n    join_conversions.*  except (page_key),\n    ifnull(scroll.scroll_events, 0) as scroll_events\nfrom join_conversions\nleft join scroll using (event_date_dt, page_location)\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__client_key_first_last_events": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__client_key_first_last_events", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__client_key_first_last_events.sql", "original_file_path": "models/staging/stg_ga4__client_key_first_last_events.sql", "unique_id": "model.ga4.stg_ga4__client_key_first_last_events", "fqn": ["ga4", "staging", "stg_ga4__client_key_first_last_events"], "alias": "stg_ga4__client_key_first_last_events", "checksum": {"name": "sha256", "checksum": "a718bd056c26d1fcc8c738ff3a0916f15a2cabd50f3e9d589b38161f44a32dc2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["client_key"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "last_seen_at", "data_type": "timestamp", "granularity": "day"}, "merge_update_columns": ["last_geo_continent", "last_geo_country", "last_geo_region", "last_geo_city", "last_geo_sub_continent", "last_geo_metro", "last_device_category", "last_device_mobile_brand_name", "last_device_mobile_model_name", "last_device_mobile_marketing_name", "last_device_mobile_os_hardware_model", "last_device_operating_system", "last_device_operating_system_version", "last_device_vendor_id", "last_device_advertising_id", "last_device_language", "last_device_is_limited_ad_tracking", "last_device_time_zone_offset_seconds", "last_device_browser", "last_device_browser_version", "last_device_web_info_browser", "last_device_web_info_browser_version", "last_device_web_info_hostname", "last_user_campaign", "last_user_medium", "last_user_source", "last_seen_at"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Captures the first and last event completed by the user's device in order to pull in the first and last geo, device, and traffic source seen from the user", "columns": {"client_key": {"name": "client_key", "description": "Hashed combination of user_pseudo_id and stream_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__client_key_first_last_events.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "merge", "unique_key": ["client_key"], "tags": ["incremental"], "partition_by": {"field": "last_seen_at", "data_type": "timestamp", "granularity": "day"}, "merge_update_columns": ["last_geo_continent", "last_geo_country", "last_geo_region", "last_geo_city", "last_geo_sub_continent", "last_geo_metro", "last_device_category", "last_device_mobile_brand_name", "last_device_mobile_model_name", "last_device_mobile_marketing_name", "last_device_mobile_os_hardware_model", "last_device_operating_system", "last_device_operating_system_version", "last_device_vendor_id", "last_device_advertising_id", "last_device_language", "last_device_is_limited_ad_tracking", "last_device_time_zone_offset_seconds", "last_device_browser", "last_device_browser_version", "last_device_web_info_browser", "last_device_web_info_browser_version", "last_device_web_info_hostname", "last_user_campaign", "last_user_medium", "last_user_source", "last_seen_at"], "on_schema_change": "sync_all_columns"}, "created_at": 1732268181.5085614, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_events`", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'merge',\n        unique_key = ['client_key'],\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"last_seen_at\",\n            \"data_type\": \"timestamp\",\n            \"granularity\": \"day\"\n        },\n        merge_update_columns = [\n            'last_geo_continent',\n            'last_geo_country',\n            'last_geo_region',\n            'last_geo_city',\n            'last_geo_sub_continent',\n            'last_geo_metro',\n            'last_device_category',\n            'last_device_mobile_brand_name',\n            'last_device_mobile_model_name',\n            'last_device_mobile_marketing_name',\n            'last_device_mobile_os_hardware_model',\n            'last_device_operating_system',\n            'last_device_operating_system_version',\n            'last_device_vendor_id',\n            'last_device_advertising_id',\n            'last_device_language',\n            'last_device_is_limited_ad_tracking',\n            'last_device_time_zone_offset_seconds',\n            'last_device_browser',\n            'last_device_browser_version',\n            'last_device_web_info_browser',\n            'last_device_web_info_browser_version',\n            'last_device_web_info_hostname',\n            'last_user_campaign',\n            'last_user_medium',\n            'last_user_source',\n            'last_seen_at',\n        ],\n        on_schema_change = 'sync_all_columns',\n    )\n}}\n\nwith first_last_event as (\n    select\n        client_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_event,\n        LAST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_event,\n        stream_id\n    from {{ref('stg_ga4__events')}}\n    where client_key is not null --remove users with privacy settings enabled\n    {% if is_incremental() %}\n        and event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n),\nevents_by_client_key as (\n    select distinct\n        client_key,\n        first_event,\n        last_event,\n        stream_id\n    from first_last_event\n),\nevents_joined as (\n    select\n        events_by_client_key.*,\n        timestamp_micros(events_first.event_timestamp) as first_visit,\n        events_first.geo_continent as first_geo_continent,\n        events_first.geo_country as first_geo_country,\n        events_first.geo_region as first_geo_region,\n        events_first.geo_city as first_geo_city,\n        events_first.geo_sub_continent as first_geo_sub_continent,\n        events_first.geo_metro as first_geo_metro,\n        events_first.device_category as first_device_category,\n        events_first.device_mobile_brand_name as first_device_mobile_brand_name,\n        events_first.device_mobile_model_name as first_device_mobile_model_name,\n        events_first.device_mobile_marketing_name as first_device_mobile_marketing_name,\n        events_first.device_mobile_os_hardware_model as first_device_mobile_os_hardware_model,\n        events_first.device_operating_system as first_device_operating_system,\n        events_first.device_operating_system_version as first_device_operating_system_version,\n        events_first.device_vendor_id as first_device_vendor_id,\n        events_first.device_advertising_id as first_device_advertising_id,\n        events_first.device_language as first_device_language,\n        events_first.device_is_limited_ad_tracking as first_device_is_limited_ad_tracking,\n        events_first.device_time_zone_offset_seconds as first_device_time_zone_offset_seconds,\n        events_first.device_browser as first_device_browser,\n        events_first.device_browser_version as first_device_browser_version,\n        events_first.device_web_info_browser as first_device_web_info_browser,\n        events_first.device_web_info_browser_version as first_device_web_info_browser_version,\n        events_first.device_web_info_hostname as first_device_web_info_hostname,\n        events_first.user_campaign as first_user_campaign,\n        events_first.user_medium as first_user_medium,\n        events_first.user_source as first_user_source,\n        events_last.geo_continent as last_geo_continent,\n        events_last.geo_country as last_geo_country,\n        events_last.geo_region as last_geo_region,\n        events_last.geo_city as last_geo_city,\n        events_last.geo_sub_continent as last_geo_sub_continent,\n        events_last.geo_metro as last_geo_metro,\n        events_last.device_category as last_device_category,\n        events_last.device_mobile_brand_name as last_device_mobile_brand_name,\n        events_last.device_mobile_model_name as last_device_mobile_model_name,\n        events_last.device_mobile_marketing_name as last_device_mobile_marketing_name,\n        events_last.device_mobile_os_hardware_model as last_device_mobile_os_hardware_model,\n        events_last.device_operating_system as last_device_operating_system,\n        events_last.device_operating_system_version as last_device_operating_system_version,\n        events_last.device_vendor_id as last_device_vendor_id,\n        events_last.device_advertising_id as last_device_advertising_id,\n        events_last.device_language as last_device_language,\n        events_last.device_is_limited_ad_tracking as last_device_is_limited_ad_tracking,\n        events_last.device_time_zone_offset_seconds as last_device_time_zone_offset_seconds,\n        events_last.device_browser as last_device_browser,\n        events_last.device_browser_version as last_device_browser_version,\n        events_last.device_web_info_browser as last_device_web_info_browser,\n        events_last.device_web_info_browser_version as last_device_web_info_browser_version,\n        events_last.device_web_info_hostname as last_device_web_info_hostname,\n        events_last.user_campaign as last_user_campaign,\n        events_last.user_medium as last_user_medium,\n        events_last.user_source as last_user_source,\n        timestamp_micros(events_last.event_timestamp) as last_seen_at,\n    from events_by_client_key\n    left join {{ref('stg_ga4__events')}} events_first\n        on events_by_client_key.first_event = events_first.event_key\n    left join {{ref('stg_ga4__events')}} events_last\n        on events_by_client_key.last_event = events_last.event_key\n    where 1=1\n    {% if is_incremental() %}\n        and events_last.event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n        and events_first.event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n)\nselect * from events_joined", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}, {"name": "stg_ga4__events", "package": null, "version": null}, {"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__client_key_first_last_events.sql", "compiled": true, "compiled_code": "\n\nwith first_last_event as (\n    select\n        client_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_event,\n        LAST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_event,\n        stream_id\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where client_key is not null --remove users with privacy settings enabled\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\nevents_by_client_key as (\n    select distinct\n        client_key,\n        first_event,\n        last_event,\n        stream_id\n    from first_last_event\n),\nevents_joined as (\n    select\n        events_by_client_key.*,\n        timestamp_micros(events_first.event_timestamp) as first_visit,\n        events_first.geo_continent as first_geo_continent,\n        events_first.geo_country as first_geo_country,\n        events_first.geo_region as first_geo_region,\n        events_first.geo_city as first_geo_city,\n        events_first.geo_sub_continent as first_geo_sub_continent,\n        events_first.geo_metro as first_geo_metro,\n        events_first.device_category as first_device_category,\n        events_first.device_mobile_brand_name as first_device_mobile_brand_name,\n        events_first.device_mobile_model_name as first_device_mobile_model_name,\n        events_first.device_mobile_marketing_name as first_device_mobile_marketing_name,\n        events_first.device_mobile_os_hardware_model as first_device_mobile_os_hardware_model,\n        events_first.device_operating_system as first_device_operating_system,\n        events_first.device_operating_system_version as first_device_operating_system_version,\n        events_first.device_vendor_id as first_device_vendor_id,\n        events_first.device_advertising_id as first_device_advertising_id,\n        events_first.device_language as first_device_language,\n        events_first.device_is_limited_ad_tracking as first_device_is_limited_ad_tracking,\n        events_first.device_time_zone_offset_seconds as first_device_time_zone_offset_seconds,\n        events_first.device_browser as first_device_browser,\n        events_first.device_browser_version as first_device_browser_version,\n        events_first.device_web_info_browser as first_device_web_info_browser,\n        events_first.device_web_info_browser_version as first_device_web_info_browser_version,\n        events_first.device_web_info_hostname as first_device_web_info_hostname,\n        events_first.user_campaign as first_user_campaign,\n        events_first.user_medium as first_user_medium,\n        events_first.user_source as first_user_source,\n        events_last.geo_continent as last_geo_continent,\n        events_last.geo_country as last_geo_country,\n        events_last.geo_region as last_geo_region,\n        events_last.geo_city as last_geo_city,\n        events_last.geo_sub_continent as last_geo_sub_continent,\n        events_last.geo_metro as last_geo_metro,\n        events_last.device_category as last_device_category,\n        events_last.device_mobile_brand_name as last_device_mobile_brand_name,\n        events_last.device_mobile_model_name as last_device_mobile_model_name,\n        events_last.device_mobile_marketing_name as last_device_mobile_marketing_name,\n        events_last.device_mobile_os_hardware_model as last_device_mobile_os_hardware_model,\n        events_last.device_operating_system as last_device_operating_system,\n        events_last.device_operating_system_version as last_device_operating_system_version,\n        events_last.device_vendor_id as last_device_vendor_id,\n        events_last.device_advertising_id as last_device_advertising_id,\n        events_last.device_language as last_device_language,\n        events_last.device_is_limited_ad_tracking as last_device_is_limited_ad_tracking,\n        events_last.device_time_zone_offset_seconds as last_device_time_zone_offset_seconds,\n        events_last.device_browser as last_device_browser,\n        events_last.device_browser_version as last_device_browser_version,\n        events_last.device_web_info_browser as last_device_web_info_browser,\n        events_last.device_web_info_browser_version as last_device_web_info_browser_version,\n        events_last.device_web_info_hostname as last_device_web_info_hostname,\n        events_last.user_campaign as last_user_campaign,\n        events_last.user_medium as last_user_medium,\n        events_last.user_source as last_user_source,\n        timestamp_micros(events_last.event_timestamp) as last_seen_at,\n    from events_by_client_key\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` events_first\n        on events_by_client_key.first_event = events_first.event_key\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` events_last\n        on events_by_client_key.last_event = events_last.event_key\n    where 1=1\n    \n        and events_last.event_date_dt >= date_sub(current_date, interval 1 day)\n        and events_first.event_date_dt >= date_sub(current_date, interval 1 day)\n    \n)\nselect * from events_joined", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__sessions_traffic_sources": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__sessions_traffic_sources", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__sessions_traffic_sources.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources.sql", "unique_id": "model.ga4.stg_ga4__sessions_traffic_sources", "fqn": ["ga4", "staging", "stg_ga4__sessions_traffic_sources"], "alias": "stg_ga4__sessions_traffic_sources", "checksum": {"name": "sha256", "checksum": "0e3483c7f3c0fdc258694df14775d3de0ff9a535a24a62cff4e43967bf2311a0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["session_key"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "merge_exclude_columns": [], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Finds the first session source, medium and campaign and adds the default channel grouping information.  Uses the first non-null source value as the basis for selecting the event that will be used to assign source, medium, campaign, content, and term values.  The session_start and first_visit events are ignored for this purpose as they contain no acquisition data.  Aggregated by session_key.\n", "columns": {"session_key": {"name": "session_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_source": {"name": "session_source", "description": "First non-null source value of the session", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__sessions_traffic_sources.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "merge", "tags": ["incremental"], "on_schema_change": "sync_all_columns", "unique_key": ["session_key"], "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "merge_exclude_columns": []}, "created_at": 1732268181.5174615, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources`", "raw_code": "-- depends_on: {{ ref('stg_ga4__sessions_first_last_pageviews') }}\n\n{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'merge',\n        tags = [\"incremental\"],\n        on_schema_change = 'sync_all_columns',\n        unique_key = ['session_key'],\n        partition_by={\n            \"field\": \"session_partition_date\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        merge_exclude_columns = [\n\n        ]\n    )\n}}\n\nwith session_events as (\n    select\n        events.session_key\n        ,events.event_timestamp\n        ,events.event_source\n        ,events.event_medium\n        ,events.event_campaign\n        ,events.event_content\n        ,events.event_term\n        ,source_categories.source_category\n        ,events.event_date_dt\n    from {{ref('stg_ga4__events')}} events\n    left join {{ref('ga4_source_categories')}} source_categories on events.event_source = source_categories.source\n    {% if is_incremental() %}\n    inner join {{ref(\"stg_ga4__sessions_first_last_pageviews\")}} pv \n    on events.session_key = pv.session_key and events.event_date_dt = date(pv.first_page_view_event_date)    \n    {% endif %}\n    where events.session_key is not null\n    and event_name != 'session_start'\n    and event_name != 'first_visit'\n    {% if is_incremental() %}\n      and date(pv.first_page_view_event_time) >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n   ),\nset_default_channel_grouping as (\n    select\n        *\n        ,{{ga4.default_channel_grouping('event_source','event_medium','source_category', 'event_campaign')}} as default_channel_grouping\n    from session_events\n),\nsession_source as (\n    select\n        session_key\n        ,FIRST_VALUE( event_date_dt IGNORE NULLS) OVER (session_window) AS session_partition_date\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN event_source END) IGNORE NULLS) OVER (session_window), '(direct)') AS session_source\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_medium, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_medium\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(source_category, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_source_category\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_campaign, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_campaign\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_content, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_content\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_term, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_term\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(default_channel_grouping, 'Direct') END) IGNORE NULLS) OVER (session_window), 'Direct') AS session_default_channel_grouping\n    from set_default_channel_grouping\n    WINDOW session_window AS (PARTITION BY session_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n)\nselect distinct * \nfrom session_source", "language": "sql", "refs": [{"name": "stg_ga4__sessions_first_last_pageviews", "package": null, "version": null}, {"name": "stg_ga4__events", "package": null, "version": null}, {"name": "ga4_source_categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.ga4.default_channel_grouping"], "nodes": ["model.ga4.stg_ga4__sessions_first_last_pageviews", "model.ga4.stg_ga4__events", "seed.ga4.ga4_source_categories"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources.sql", "compiled": true, "compiled_code": "-- depends_on: `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews`\n\n\n\nwith session_events as (\n    select\n        events.session_key\n        ,events.event_timestamp\n        ,events.event_source\n        ,events.event_medium\n        ,events.event_campaign\n        ,events.event_content\n        ,events.event_term\n        ,source_categories.source_category\n        ,events.event_date_dt\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` events\n    left join `agile-scheme-394814`.`dbt_prod`.`ga4_source_categories` source_categories on events.event_source = source_categories.source\n    \n    inner join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews` pv \n    on events.session_key = pv.session_key and events.event_date_dt = date(pv.first_page_view_event_date)    \n    \n    where events.session_key is not null\n    and event_name != 'session_start'\n    and event_name != 'first_visit'\n    \n      and date(pv.first_page_view_event_time) >= date_sub(current_date, interval 1 day)\n    \n   ),\nset_default_channel_grouping as (\n    select\n        *\n        ,\ncase\n  -- Direct: Source exactly matches \"(direct)\" AND Medium is one of (\"(not set)\", \"(none)\")\n  when (\n      event_source is null\n        and event_medium is null\n    )\n    or (\n      event_source = '(direct)'\n      and (event_medium = '(none)' or event_medium = '(not set)')\n    )\n    then 'Direct'\n\n  -- Cross-network: Campaign Name contains \"cross-network\"\n  when REGEXP_CONTAINS(event_campaign, r\"cross-network\")\n    then 'Cross-network'\n\n  -- Paid Shopping:\n  --   (Source matches a list of shopping sites\n  --   OR\n  --   Campaign Name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$)\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when (\n      source_category = 'SOURCE_CATEGORY_SHOPPING'\n      or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    )\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Shopping'\n\n  -- Paid Search:\n  --   Source matches a list of search sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SEARCH'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Search'\n\n  -- Paid Social:\n  --   Source matches a regex list of social sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Social'\n\n  -- Paid Video:\n  --   Source matches a list of video sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Video'\n\n  -- Display:\n  --   Medium is one of (\"display\", \"banner\", \"expandable\", \"interstitial\", \"cpm\")\n  when event_medium in ('display', 'banner', 'expandable', 'interstitial', 'cpm')\n    then 'Display'\n\n  -- Paid Other:\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Other'\n\n  -- Organic Shopping:\n  --   Source matches a list of shopping sites\n  --   OR\n  --   Campaign name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$\n  when source_category = 'SOURCE_CATEGORY_SHOPPING'\n    or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    then 'Organic Shopping'\n\n  -- Organic Social:\n  --   Source matches a regex list of social sites\n  --   OR\n  --   Medium is one of (\"social\", \"social-network\", \"social-media\", \"sm\", \"social network\", \"social media\")\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    or event_medium in (\"social\",\"social-network\",\"social-media\",\"sm\",\"social network\",\"social media\")\n    then 'Organic Social'\n\n  -- Organic Video:\n  --   Source matches a list of video sites\n  --   OR\n  --   Medium matches regex ^(.*video.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    or REGEXP_CONTAINS(event_medium, r\"^(.*video.*)$\")\n    then 'Organic Video'\n\n  -- Organic Search:\n  --   Source matches a list of search sites\n  --   OR\n  --   Medium exactly matches organic\n  when source_category = 'SOURCE_CATEGORY_SEARCH' or event_medium = 'organic'\n    then 'Organic Search'\n\n  -- Referral:\n  --   Medium is one of (\"referral\", \"app\", or \"link\")\n  when event_medium in (\"referral\", \"app\", \"link\")\n    then 'Referral'\n\n  -- Email:\n  --   Source = email|e-mail|e_mail|e mail\n  --   OR\n  --   Medium = email|e-mail|e_mail|e mail\n  when REGEXP_CONTAINS(event_source, r\"email|e-mail|e_mail|e mail\")\n    or REGEXP_CONTAINS(event_medium, r\"email|e-mail|e_mail|e mail\")\n    then 'Email'\n\n  -- Affiliates:\n  --   Medium = affiliate\n  when event_medium = 'affiliate'\n    then 'Affiliates'\n\n  -- Audio:\n  --   Medium exactly matches audio\n  when event_medium = 'audio'\n    then 'Audio'\n\n  -- SMS:\n  --   Source exactly matches sms\n  --   OR\n  --   Medium exactly matches sms\n  when event_source = 'sms'\n    or event_medium = 'sms'\n    then 'SMS'\n\n  -- Mobile Push Notifications:\n  --   Medium ends with \"push\"\n  --   OR\n  --   Medium contains \"mobile\" or \"notification\"\n  --   OR\n  --   Source exactly matches \"firebase\"\n  when REGEXP_CONTAINS(event_medium, r\"push$\")\n    or REGEXP_CONTAINS(event_medium, r\"mobile|notification\")\n    or event_source = 'firebase'\n    then 'Mobile Push Notifications'\n\n  -- Unassigned is the value Analytics uses when there are no other channel rules that match the event data.\n  else 'Unassigned'\nend\n\n as default_channel_grouping\n    from session_events\n),\nsession_source as (\n    select\n        session_key\n        ,FIRST_VALUE( event_date_dt IGNORE NULLS) OVER (session_window) AS session_partition_date\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN event_source END) IGNORE NULLS) OVER (session_window), '(direct)') AS session_source\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_medium, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_medium\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(source_category, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_source_category\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_campaign, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_campaign\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_content, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_content\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_term, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_term\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(default_channel_grouping, 'Direct') END) IGNORE NULLS) OVER (session_window), 'Direct') AS session_default_channel_grouping\n    from set_default_channel_grouping\n    WINDOW session_window AS (PARTITION BY session_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n)\nselect distinct * \nfrom session_source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__sessions_first_last_pageviews": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__sessions_first_last_pageviews", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__sessions_first_last_pageviews.sql", "original_file_path": "models/staging/stg_ga4__sessions_first_last_pageviews.sql", "unique_id": "model.ga4.stg_ga4__sessions_first_last_pageviews", "fqn": ["ga4", "staging", "stg_ga4__sessions_first_last_pageviews"], "alias": "stg_ga4__sessions_first_last_pageviews", "checksum": {"name": "sha256", "checksum": "43ce7d643cb2d011b16325bd9ca20ceb7d711dc1456db1038b1b66e294300344"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["session_key"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "first_page_view_event_time", "data_type": "timestamp", "granularity": "day"}, "merge_exclude_columns": ["first_page_view_event_key", "first_page_view_event_time"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "", "columns": {"session_key": {"name": "session_key", "description": "", "meta": {}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_page_view_event_key": {"name": "first_page_view_event_key", "description": "", "meta": {}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "last_page_view_event_key": {"name": "last_page_view_event_key", "description": "", "meta": {}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "first_page_view_event_time": {"name": "first_page_view_event_time", "description": "", "meta": {}, "data_type": "TIMESTAMP", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__sessions_first_last_pageviews.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "merge", "unique_key": ["session_key"], "tags": ["incremental"], "partition_by": {"field": "first_page_view_event_time", "data_type": "timestamp", "granularity": "day"}, "on_schema_change": "sync_all_columns", "merge_exclude_columns": ["first_page_view_event_key", "first_page_view_event_time"]}, "created_at": 1732268181.4868085, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews`", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'merge',\n        unique_key = ['session_key'],\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"first_page_view_event_time\",\n            \"data_type\": \"timestamp\",\n            \"granularity\": \"day\"\n        },\n        on_schema_change = 'sync_all_columns',\n        merge_exclude_columns = [\n            'first_page_view_event_key',\n            'first_page_view_event_time'\n        ]\n    )\n}}\nwith page_views_first_last as (\n    select\n        session_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_key,\n        LAST_VALUE(event_key) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_page_view_event_key,\n        FIRST_VALUE(timestamp_micros(event_timestamp)) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_time,\n        FIRST_VALUE(event_date_dt) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_date,\n    from {{ref('stg_ga4__events')}}\n    where event_name = 'session_start'\n    {% if is_incremental() %}\n        and event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n),\npage_views_by_session_key as (\n    select distinct\n        session_key,\n        first_page_view_event_key,\n        last_page_view_event_key,\n        first_page_view_event_time,\n        first_page_view_event_date\n    from page_views_first_last\n)\n\nselect * from page_views_by_session_key", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_first_last_pageviews.sql", "compiled": true, "compiled_code": "\nwith page_views_first_last as (\n    select\n        session_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_key,\n        LAST_VALUE(event_key) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_page_view_event_key,\n        FIRST_VALUE(timestamp_micros(event_timestamp)) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_time,\n        FIRST_VALUE(event_date_dt) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_date,\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where event_name = 'session_start'\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\npage_views_by_session_key as (\n    select distinct\n        session_key,\n        first_page_view_event_key,\n        last_page_view_event_key,\n        first_page_view_event_time,\n        first_page_view_event_date\n    from page_views_first_last\n)\n\nselect * from page_views_by_session_key", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__events": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__events", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__events.sql", "original_file_path": "models/staging/stg_ga4__events.sql", "unique_id": "model.ga4.stg_ga4__events", "fqn": ["ga4", "staging", "stg_ga4__events"], "alias": "stg_ga4__events", "checksum": {"name": "sha256", "checksum": "dca793874fe6d315747a3077136c3e0c700041cb3e433925991a11a66c0186c6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Staging model that generates keys for users, sessions, and events. Also parses URLs to remove query string params as defined in project config.", "columns": {"client_key": {"name": "client_key", "description": "Surrogate key created from stream_id and user_pseudo_id. Provides a way to uniquely identify a user's device within a stream. Important when using the package to combine data across properties and streams.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_key": {"name": "event_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_path": {"name": "page_path", "description": "This field contains the page_location with the query string portion removed. Uses macro remove_query_string", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_engagement_key": {"name": "page_engagement_key", "description": "This field is used to assign engagement_time_msec to the correct page.  While the GA4 documentation claims that a user_engagement event that sets engagement_time_msec should fire when navigating to a new page,  the data shows that this is not always the case. When a user_engagement event does not fire, the engagement_time_msec parameter is assigned to the next page_view.  This engagement time should be credited to the previous page,  so for page_view events this field uses the session_key and page_referrer as the key while all other events use the session_key and page_location.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__events.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.4824963, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`", "raw_code": "-- This staging model contains key creation and window functions. Keeping window functions outside of the base incremental model ensures that the incremental updates don't artificially limit the window partition sizes (ex: if a session spans 2 days, but only 1 day is in the incremental update)\nwith base_events as (\n    select * from {{ ref('base_ga4__events')}}\n),\n-- Add key that captures a combination of stream_id and user_pseudo_id to uniquely identify a 'client' (aka. a device) within a single stream\ninclude_client_key as (\n    select *\n    , to_base64(md5(concat(user_pseudo_id, stream_id))) as client_key\n    from base_events\n),\n-- Add key for sessions. session_key will be null if client_key is null due to consent being denied. ga_session_id may be null during audience trigger events. \ninclude_session_key as (\n    select \n        *,\n        to_base64(md5(CONCAT(client_key, CAST(session_id as STRING)))) as session_key\n    from include_client_key\n),\n-- Add a key that combines session key and date. Useful when working with session table within date-partitioned tables\ninclude_session_partition_key as (\n    select \n        *,\n        CONCAT(session_key, CAST(event_date_dt as STRING)) as session_partition_key\n    from include_session_key\n),\n-- Add unique key for events\ninclude_event_key as (\n    select \n        *,\n        to_base64(md5(CONCAT(session_key, event_name, CAST(event_timestamp as STRING), to_json_string(event_params)))) as event_key -- Surrogate key for unique events.  \n    from include_session_partition_key\n),\ndetect_gclid as (\n    select\n        * except (event_source, event_medium, event_campaign),\n        case\n            when (page_location like '%gclid%' and event_source is null) then \"google\"\n            else event_source\n        end as event_source,\n        case\n            when (page_location like '%gclid%' and event_medium is null) then \"cpc\"\n            when (page_location like '%gclid%' and event_medium = 'organic') then \"cpc\"\n            else event_medium\n        end as event_medium,\n        case\n            when (page_location like '%gclid%' and event_campaign is null) then \"(cpc)\"\n            when (page_location like '%gclid%' and event_campaign = 'organic') then \"(cpc)\"\n            else event_campaign\n        end as event_campaign\n    from include_event_key\n),\n{% if var('query_parameter_extraction', none) != none %}\nextract_query_params as (\n    select\n        *,\n        {%- for param in var('query_parameter_extraction') -%}\n            {{ extract_query_parameter_value( 'page_location' , param ) }} as {{\"query_param_\"+param}}\n            {% if not loop.last %},{% endif %}\n        {%- endfor -%}\n    from detect_gclid\n),\n{% endif %}\nremove_query_params as (\n    select \n        * EXCEPT (page_location, page_referrer),\n        page_location as original_page_location,\n        page_referrer as original_page_referrer,\n        {{ extract_page_path('page_location') }} as page_path,\n        -- If there are query parameters to exclude, exclude them using regex\n        {% if var('query_parameter_exclusions',none) is not none %}\n        {{remove_query_parameters('page_location',var('query_parameter_exclusions'))}} as page_location,\n        {{remove_query_parameters('page_referrer',var('query_parameter_exclusions'))}} as page_referrer\n        {% else %}\n        page_location,\n        page_referrer\n        {% endif %}\n\n        {% if var('query_parameter_extraction', none) != none %}\n        from extract_query_params\n        {% else %}\n        from detect_gclid\n        {% endif %}\n),\nenrich_params as (\n    select \n        *,\n        {{extract_hostname_from_url('page_location')}} as page_hostname,\n        {{extract_query_string_from_url('page_location')}} as page_query_string,\n    from remove_query_params\n),\npage_key as (\n    select\n        *,\n        (concat( cast(event_date_dt as string), page_location )) as page_key,\n        case\n            when event_name = 'page_view' then to_base64(md5(concat(session_key, page_referrer)))\n            else to_base64(md5(concat(session_key, page_location)))\n        end as page_engagement_key\n    from enrich_params\n)\nselect * from page_key", "language": "sql", "refs": [{"name": "base_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.extract_query_parameter_value", "macro.ga4.extract_page_path", "macro.ga4.remove_query_parameters", "macro.ga4.extract_hostname_from_url", "macro.ga4.extract_query_string_from_url"], "nodes": ["model.ga4.base_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__events.sql", "compiled": true, "compiled_code": "-- This staging model contains key creation and window functions. Keeping window functions outside of the base incremental model ensures that the incremental updates don't artificially limit the window partition sizes (ex: if a session spans 2 days, but only 1 day is in the incremental update)\nwith base_events as (\n    select * from `agile-scheme-394814`.`dbt_prod`.`base_ga4__events`\n),\n-- Add key that captures a combination of stream_id and user_pseudo_id to uniquely identify a 'client' (aka. a device) within a single stream\ninclude_client_key as (\n    select *\n    , to_base64(md5(concat(user_pseudo_id, stream_id))) as client_key\n    from base_events\n),\n-- Add key for sessions. session_key will be null if client_key is null due to consent being denied. ga_session_id may be null during audience trigger events. \ninclude_session_key as (\n    select \n        *,\n        to_base64(md5(CONCAT(client_key, CAST(session_id as STRING)))) as session_key\n    from include_client_key\n),\n-- Add a key that combines session key and date. Useful when working with session table within date-partitioned tables\ninclude_session_partition_key as (\n    select \n        *,\n        CONCAT(session_key, CAST(event_date_dt as STRING)) as session_partition_key\n    from include_session_key\n),\n-- Add unique key for events\ninclude_event_key as (\n    select \n        *,\n        to_base64(md5(CONCAT(session_key, event_name, CAST(event_timestamp as STRING), to_json_string(event_params)))) as event_key -- Surrogate key for unique events.  \n    from include_session_partition_key\n),\ndetect_gclid as (\n    select\n        * except (event_source, event_medium, event_campaign),\n        case\n            when (page_location like '%gclid%' and event_source is null) then \"google\"\n            else event_source\n        end as event_source,\n        case\n            when (page_location like '%gclid%' and event_medium is null) then \"cpc\"\n            when (page_location like '%gclid%' and event_medium = 'organic') then \"cpc\"\n            else event_medium\n        end as event_medium,\n        case\n            when (page_location like '%gclid%' and event_campaign is null) then \"(cpc)\"\n            when (page_location like '%gclid%' and event_campaign = 'organic') then \"(cpc)\"\n            else event_campaign\n        end as event_campaign\n    from include_event_key\n),\n\nextract_query_params as (\n    select\n        *,\n    REGEXP_EXTRACT( page_location, r'gclid=([^&|\\?|#]*)'  )\n as query_param_gclid\n            ,\n    REGEXP_EXTRACT( page_location, r'fbclid=([^&|\\?|#]*)'  )\n as query_param_fbclid\n            ,\n    REGEXP_EXTRACT( page_location, r'keyword=([^&|\\?|#]*)'  )\n as query_param_keyword\n            from detect_gclid\n),\n\nremove_query_params as (\n    select \n        * EXCEPT (page_location, page_referrer),\n        page_location as original_page_location,\n        page_referrer as original_page_referrer,\n        \n   REGEXP_EXTRACT(page_location, '(?:\\\\w+:)?\\\\/\\\\/[^\\\\/]+([^?#]+)')\n as page_path,\n        -- If there are query parameters to exclude, exclude them using regex\n        \n        \nREGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(page_location, '(\\\\?|&)(gclid|fbclid|_ga)=[^&]*', '\\\\1'), '\\\\?&+', '?'), '&+', '&'), '\\\\?$|&$', '')\n as page_location,\n        \nREGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(page_referrer, '(\\\\?|&)(gclid|fbclid|_ga)=[^&]*', '\\\\1'), '\\\\?&+', '?'), '&+', '&'), '\\\\?$|&$', '')\n as page_referrer\n        \n\n        \n        from extract_query_params\n        \n),\nenrich_params as (\n    select \n        *,\n        \n    REGEXP_EXTRACT(page_location, '(?:http[s]?://)?(?:www\\\\.)?(.*?)(?:(?:/|:)(?:.)*|$)')\n as page_hostname,\n        \n    REGEXP_EXTRACT(page_location, '\\\\?(.+)')\n as page_query_string,\n    from remove_query_params\n),\npage_key as (\n    select\n        *,\n        (concat( cast(event_date_dt as string), page_location )) as page_key,\n        case\n            when event_name = 'page_view' then to_base64(md5(concat(session_key, page_referrer)))\n            else to_base64(md5(concat(session_key, page_location)))\n        end as page_engagement_key\n    from enrich_params\n)\nselect * from page_key", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_items": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_items", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__event_items.sql", "original_file_path": "models/staging/stg_ga4__event_items.sql", "unique_id": "model.ga4.stg_ga4__event_items", "fqn": ["ga4", "staging", "stg_ga4__event_items"], "alias": "stg_ga4__event_items", "checksum": {"name": "sha256", "checksum": "b3d7632c7af35840901560fc135f920f7b24455c87512d59f6d7453ceb49cc72"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "event_date_dt", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Flattens out the 'items' field for e-commerce events such as purchase and add_to_cart", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__event_items.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "tags": ["incremental"], "partition_by": {"field": "event_date_dt", "data_type": "date", "granularity": "day"}, "on_schema_change": "sync_all_columns"}, "created_at": 1732268181.480545, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_items`", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"event_date_dt\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        on_schema_change = 'sync_all_columns',\n    )\n}}\n\n\nwith items_with_params as (\n    select\n        event_key,\n        client_key,\n        session_key,\n        event_name,\n        event_date_dt,\n        stream_id,\n        {{ ga4.unnest_key('event_params', 'transaction_id') }},\n        {{ ga4.unnest_key('event_params', 'currency') }},\n        {{ ga4.unnest_key('event_params', 'value', 'int_value') }},\n        {{ ga4.unnest_key('event_params', 'tax', 'int_value') }},\n        {{ ga4.unnest_key('event_params', 'shipping', 'int_value') }},\n        {{ ga4.unnest_key('event_params', 'affiliation', 'int_value') }},\n        {{ ga4.unnest_key('event_params', 'coupon',) }},\n        {{ ga4.unnest_key('event_params', 'delivery_method', ) }},\n        {{ ga4.unnest_key('event_params', 'payment_type',) }},\n        i.item_id,\n        i.item_name,\n        i.item_brand,\n        i.item_variant,\n        i.item_category,\n        i.item_category2,\n        i.item_category3,\n        i.item_category4,\n        i.item_category5,\n        i.price_in_usd,\n        i.price,\n        i.quantity,\n        i.item_revenue_in_usd,\n        i.item_revenue,\n        i.item_refund_in_usd,\n        i.item_refund,\n        i.location_id,\n        i.item_list_id,\n        i.item_list_name,\n        i.item_list_index,\n        i.promotion_id,\n        i.promotion_name,\n        i.creative_name,\n        i.creative_slot\n    from {{ref('stg_ga4__events')}},\n        unnest(items) as i\n    where event_name in ('add_payment_info', 'add_shipping_info', 'add_to_cart','add_to_wishlist','begin_checkout' ,'purchase','refund', 'remove_from_cart','select_item', 'select_promotion','view_item_list','view_promotion', 'view_item')\n    {% if is_incremental() %}\n      and event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n)\n\nselect * from items_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key", "macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__event_items.sql", "compiled": true, "compiled_code": "\n\n\nwith items_with_params as (\n    select\n        event_key,\n        client_key,\n        session_key,\n        event_name,\n        event_date_dt,\n        stream_id,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'transaction_id') as \n    \n    transaction_id\n    ,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'currency') as \n    \n    currency\n    ,\n        (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    ,\n        (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'tax') as \n    \n    tax\n    ,\n        (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'shipping') as \n    \n    shipping\n    ,\n        (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'affiliation') as \n    \n    affiliation\n    ,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'coupon') as \n    \n    coupon\n    ,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'delivery_method') as \n    \n    delivery_method\n    ,\n        (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'payment_type') as \n    \n    payment_type\n    ,\n        i.item_id,\n        i.item_name,\n        i.item_brand,\n        i.item_variant,\n        i.item_category,\n        i.item_category2,\n        i.item_category3,\n        i.item_category4,\n        i.item_category5,\n        i.price_in_usd,\n        i.price,\n        i.quantity,\n        i.item_revenue_in_usd,\n        i.item_revenue,\n        i.item_refund_in_usd,\n        i.item_refund,\n        i.location_id,\n        i.item_list_id,\n        i.item_list_name,\n        i.item_list_index,\n        i.promotion_id,\n        i.promotion_name,\n        i.creative_name,\n        i.creative_slot\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`,\n        unnest(items) as i\n    where event_name in ('add_payment_info', 'add_shipping_info', 'add_to_cart','add_to_wishlist','begin_checkout' ,'purchase','refund', 'remove_from_cart','select_item', 'select_promotion','view_item_list','view_promotion', 'view_item')\n    \n      and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n)\n\nselect * from items_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__client_key_first_last_pageviews": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__client_key_first_last_pageviews", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__client_key_first_last_pageviews.sql", "original_file_path": "models/staging/stg_ga4__client_key_first_last_pageviews.sql", "unique_id": "model.ga4.stg_ga4__client_key_first_last_pageviews", "fqn": ["ga4", "staging", "stg_ga4__client_key_first_last_pageviews"], "alias": "stg_ga4__client_key_first_last_pageviews", "checksum": {"name": "sha256", "checksum": "f3de14bb14c2b0fb897b88e81724a2137285b5e018ab608b6104bae02c2b8137"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["client_key"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "last_seen_at", "data_type": "timestamp", "granularity": "day"}, "merge_update_columns": ["last_page_location", "last_page_hostname", "last_page_referrer", "last_seen_at"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Captures data related to the first and last page view that each user device has completed (by client_key).", "columns": {"client_key": {"name": "client_key", "description": "Hashed combination of user_pseudo_id and stream_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__client_key_first_last_pageviews.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "merge", "unique_key": ["client_key"], "tags": ["incremental"], "partition_by": {"field": "last_seen_at", "data_type": "timestamp", "granularity": "day"}, "merge_update_columns": ["last_page_location", "last_page_hostname", "last_page_referrer", "last_seen_at"], "on_schema_change": "sync_all_columns"}, "created_at": 1732268181.489811, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_pageviews`", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'merge',\n        unique_key = ['client_key'],\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"last_seen_at\",\n            \"data_type\": \"timestamp\",\n            \"granularity\": \"day\"\n        },\n        merge_update_columns = [\n            'last_page_location',\n            'last_page_hostname',\n            'last_page_referrer',\n            'last_seen_at',\n        ],\n        on_schema_change='sync_all_columns'\n    )\n}}\n\nwith page_views_first_last as (\n    select\n        client_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_key,\n        LAST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_page_view_event_key\n    from {{ref('stg_ga4__event_page_view')}}\n    where client_key is not null -- Remove users with privacy settings enabled\n    {% if is_incremental() %}\n        and event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n),\npage_views_by_client_key as (\n    select distinct\n        client_key,\n        first_page_view_event_key,\n        last_page_view_event_key\n    from page_views_first_last\n),\n\npage_views_joined as (\n    select\n        page_views_by_client_key.*,\n        first_page_view.page_location as first_page_location,\n        first_page_view.page_hostname as first_page_hostname,\n        first_page_view.page_referrer as first_page_referrer, \n        last_page_view.page_location as last_page_location,\n        last_page_view.page_hostname as last_page_hostname,\n        last_page_view.page_referrer as last_page_referrer,\n        timestamp_micros(last_page_view.event_timestamp) as last_seen_at,\n    from page_views_by_client_key\n    left join {{ref('stg_ga4__event_page_view')}} first_page_view\n        on page_views_by_client_key.first_page_view_event_key = first_page_view.event_key\n    left join {{ref('stg_ga4__event_page_view')}} last_page_view\n        on page_views_by_client_key.last_page_view_event_key = last_page_view.event_key\n        where 1=1\n    {% if is_incremental() %}\n        and first_page_view.event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n        and last_page_view.event_date_dt  >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n)\n\nselect * from page_views_joined", "language": "sql", "refs": [{"name": "stg_ga4__event_page_view", "package": null, "version": null}, {"name": "stg_ga4__event_page_view", "package": null, "version": null}, {"name": "stg_ga4__event_page_view", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__event_page_view"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__client_key_first_last_pageviews.sql", "compiled": true, "compiled_code": "\n\nwith page_views_first_last as (\n    select\n        client_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_key,\n        LAST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_page_view_event_key\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view`\n    where client_key is not null -- Remove users with privacy settings enabled\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\npage_views_by_client_key as (\n    select distinct\n        client_key,\n        first_page_view_event_key,\n        last_page_view_event_key\n    from page_views_first_last\n),\n\npage_views_joined as (\n    select\n        page_views_by_client_key.*,\n        first_page_view.page_location as first_page_location,\n        first_page_view.page_hostname as first_page_hostname,\n        first_page_view.page_referrer as first_page_referrer, \n        last_page_view.page_location as last_page_location,\n        last_page_view.page_hostname as last_page_hostname,\n        last_page_view.page_referrer as last_page_referrer,\n        timestamp_micros(last_page_view.event_timestamp) as last_seen_at,\n    from page_views_by_client_key\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view` first_page_view\n        on page_views_by_client_key.first_page_view_event_key = first_page_view.event_key\n    left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view` last_page_view\n        on page_views_by_client_key.last_page_view_event_key = last_page_view.event_key\n        where 1=1\n    \n        and first_page_view.event_date_dt >= date_sub(current_date, interval 1 day)\n        and last_page_view.event_date_dt  >= date_sub(current_date, interval 1 day)\n    \n)\n\nselect * from page_views_joined", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__sessions_traffic_sources_daily": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__sessions_traffic_sources_daily", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__sessions_traffic_sources_daily.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources_daily.sql", "unique_id": "model.ga4.stg_ga4__sessions_traffic_sources_daily", "fqn": ["ga4", "staging", "stg_ga4__sessions_traffic_sources_daily"], "alias": "stg_ga4__sessions_traffic_sources_daily", "checksum": {"name": "sha256", "checksum": "b1fb46d09471a190af58fb69757b5795589bf1312709c0e6287536cffcbfb803"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Incremental model that finds the acquisition source of each session day partition.  Uses the first non-null source value as the basis for selecting the event that will be used to assign source, medium, campaign, content, and term values.  The session_start and first_visit events are ignored for this purpose as they contain no acquisition data.  Aggregated by session_partition_key.\n", "columns": {"session_partition_key": {"name": "session_partition_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_source": {"name": "session_source", "description": "First non-null source value of the session", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__sessions_traffic_sources_daily.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "tags": ["incremental"], "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"]}, "created_at": 1732268181.5227408, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily`", "raw_code": "{% set partitions_to_replace = ['current_date'] %}\n{% for i in range(var('static_incremental_days')) %}\n    {% set partitions_to_replace = partitions_to_replace.append('date_sub(current_date, interval ' + (i+1)|string + ' day)') %}\n{% endfor %}\n{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"session_partition_date\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        partitions = partitions_to_replace\n    )\n}}\n\n\nwith session_events as (\n    select\n        client_key\n        ,session_partition_key\n        ,event_date_dt as session_partition_date\n        ,event_timestamp\n        ,events.event_source\n        ,event_medium\n        ,event_campaign\n        ,event_content\n        ,event_term\n        ,source_category\n    from {{ref('stg_ga4__events')}} events\n    left join {{ref('ga4_source_categories')}} source_categories on events.event_source = source_categories.source\n    where session_partition_key is not null\n    and event_name != 'session_start'\n    and event_name != 'first_visit'\n    {% if is_incremental() %}\n            and event_date_dt in ({{ partitions_to_replace | join(',') }})\n    {% endif %}\n\n   ),\nset_default_channel_grouping as (\n    select\n        *\n        ,{{ga4.default_channel_grouping('event_source','event_medium','source_category', 'event_campaign')}} as default_channel_grouping\n    from session_events\n),\nfirst_session_source as (\n    select\n        client_key\n        ,session_partition_key\n        ,session_partition_date\n        ,event_timestamp\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN event_source END) IGNORE NULLS) OVER (session_window), '(direct)') AS session_source\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_medium, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_medium\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(source_category, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_source_category\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_campaign, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_campaign\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_content, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_content\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_term, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_term\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(default_channel_grouping, 'Direct') END) IGNORE NULLS) OVER (session_window), 'Direct') AS session_default_channel_grouping\n    from set_default_channel_grouping\n    WINDOW session_window AS (PARTITION BY session_partition_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n),\nfind_non_direct_session_partition_key as (\n\n    select\n        *\n        ,if(session_source <> '(direct)', session_partition_key, null) as non_direct_session_partition_key --provide the session_partition_key only if source is not direct. Useful for last non-direct attribution modeling\n    from first_session_source\n)\n\nselect\n        client_key\n        ,session_partition_key\n        ,session_partition_date\n        ,session_source\n        ,session_medium\n        ,session_source_category\n        ,session_campaign\n        ,session_content\n        ,session_term\n        ,session_default_channel_grouping\n        ,non_direct_session_partition_key\n        ,min(event_timestamp) as session_partition_timestamp\nfrom find_non_direct_session_partition_key\ngroup by 1,2,3,4,5,6,7,8,9,10,11", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}, {"name": "ga4_source_categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.ga4.default_channel_grouping"], "nodes": ["model.ga4.stg_ga4__events", "seed.ga4.ga4_source_categories"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources_daily.sql", "compiled": true, "compiled_code": "\n\n    \n\n\n\n\nwith session_events as (\n    select\n        client_key\n        ,session_partition_key\n        ,event_date_dt as session_partition_date\n        ,event_timestamp\n        ,events.event_source\n        ,event_medium\n        ,event_campaign\n        ,event_content\n        ,event_term\n        ,source_category\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events` events\n    left join `agile-scheme-394814`.`dbt_prod`.`ga4_source_categories` source_categories on events.event_source = source_categories.source\n    where session_partition_key is not null\n    and event_name != 'session_start'\n    and event_name != 'first_visit'\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day))\n    \n\n   ),\nset_default_channel_grouping as (\n    select\n        *\n        ,\ncase\n  -- Direct: Source exactly matches \"(direct)\" AND Medium is one of (\"(not set)\", \"(none)\")\n  when (\n      event_source is null\n        and event_medium is null\n    )\n    or (\n      event_source = '(direct)'\n      and (event_medium = '(none)' or event_medium = '(not set)')\n    )\n    then 'Direct'\n\n  -- Cross-network: Campaign Name contains \"cross-network\"\n  when REGEXP_CONTAINS(event_campaign, r\"cross-network\")\n    then 'Cross-network'\n\n  -- Paid Shopping:\n  --   (Source matches a list of shopping sites\n  --   OR\n  --   Campaign Name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$)\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when (\n      source_category = 'SOURCE_CATEGORY_SHOPPING'\n      or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    )\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Shopping'\n\n  -- Paid Search:\n  --   Source matches a list of search sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SEARCH'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Search'\n\n  -- Paid Social:\n  --   Source matches a regex list of social sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Social'\n\n  -- Paid Video:\n  --   Source matches a list of video sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Video'\n\n  -- Display:\n  --   Medium is one of (\"display\", \"banner\", \"expandable\", \"interstitial\", \"cpm\")\n  when event_medium in ('display', 'banner', 'expandable', 'interstitial', 'cpm')\n    then 'Display'\n\n  -- Paid Other:\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Other'\n\n  -- Organic Shopping:\n  --   Source matches a list of shopping sites\n  --   OR\n  --   Campaign name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$\n  when source_category = 'SOURCE_CATEGORY_SHOPPING'\n    or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    then 'Organic Shopping'\n\n  -- Organic Social:\n  --   Source matches a regex list of social sites\n  --   OR\n  --   Medium is one of (\"social\", \"social-network\", \"social-media\", \"sm\", \"social network\", \"social media\")\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    or event_medium in (\"social\",\"social-network\",\"social-media\",\"sm\",\"social network\",\"social media\")\n    then 'Organic Social'\n\n  -- Organic Video:\n  --   Source matches a list of video sites\n  --   OR\n  --   Medium matches regex ^(.*video.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    or REGEXP_CONTAINS(event_medium, r\"^(.*video.*)$\")\n    then 'Organic Video'\n\n  -- Organic Search:\n  --   Source matches a list of search sites\n  --   OR\n  --   Medium exactly matches organic\n  when source_category = 'SOURCE_CATEGORY_SEARCH' or event_medium = 'organic'\n    then 'Organic Search'\n\n  -- Referral:\n  --   Medium is one of (\"referral\", \"app\", or \"link\")\n  when event_medium in (\"referral\", \"app\", \"link\")\n    then 'Referral'\n\n  -- Email:\n  --   Source = email|e-mail|e_mail|e mail\n  --   OR\n  --   Medium = email|e-mail|e_mail|e mail\n  when REGEXP_CONTAINS(event_source, r\"email|e-mail|e_mail|e mail\")\n    or REGEXP_CONTAINS(event_medium, r\"email|e-mail|e_mail|e mail\")\n    then 'Email'\n\n  -- Affiliates:\n  --   Medium = affiliate\n  when event_medium = 'affiliate'\n    then 'Affiliates'\n\n  -- Audio:\n  --   Medium exactly matches audio\n  when event_medium = 'audio'\n    then 'Audio'\n\n  -- SMS:\n  --   Source exactly matches sms\n  --   OR\n  --   Medium exactly matches sms\n  when event_source = 'sms'\n    or event_medium = 'sms'\n    then 'SMS'\n\n  -- Mobile Push Notifications:\n  --   Medium ends with \"push\"\n  --   OR\n  --   Medium contains \"mobile\" or \"notification\"\n  --   OR\n  --   Source exactly matches \"firebase\"\n  when REGEXP_CONTAINS(event_medium, r\"push$\")\n    or REGEXP_CONTAINS(event_medium, r\"mobile|notification\")\n    or event_source = 'firebase'\n    then 'Mobile Push Notifications'\n\n  -- Unassigned is the value Analytics uses when there are no other channel rules that match the event data.\n  else 'Unassigned'\nend\n\n as default_channel_grouping\n    from session_events\n),\nfirst_session_source as (\n    select\n        client_key\n        ,session_partition_key\n        ,session_partition_date\n        ,event_timestamp\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN event_source END) IGNORE NULLS) OVER (session_window), '(direct)') AS session_source\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_medium, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_medium\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(source_category, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_source_category\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_campaign, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_campaign\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_content, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_content\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_term, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_term\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(default_channel_grouping, 'Direct') END) IGNORE NULLS) OVER (session_window), 'Direct') AS session_default_channel_grouping\n    from set_default_channel_grouping\n    WINDOW session_window AS (PARTITION BY session_partition_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n),\nfind_non_direct_session_partition_key as (\n\n    select\n        *\n        ,if(session_source <> '(direct)', session_partition_key, null) as non_direct_session_partition_key --provide the session_partition_key only if source is not direct. Useful for last non-direct attribution modeling\n    from first_session_source\n)\n\nselect\n        client_key\n        ,session_partition_key\n        ,session_partition_date\n        ,session_source\n        ,session_medium\n        ,session_source_category\n        ,session_campaign\n        ,session_content\n        ,session_term\n        ,session_default_channel_grouping\n        ,non_direct_session_partition_key\n        ,min(event_timestamp) as session_partition_timestamp\nfrom find_non_direct_session_partition_key\ngroup by 1,2,3,4,5,6,7,8,9,10,11", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__page_engaged_time": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__page_engaged_time", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__page_engaged_time.sql", "original_file_path": "models/staging/stg_ga4__page_engaged_time.sql", "unique_id": "model.ga4.stg_ga4__page_engaged_time", "fqn": ["ga4", "staging", "stg_ga4__page_engaged_time"], "alias": "stg_ga4__page_engaged_time", "checksum": {"name": "sha256", "checksum": "93ae7a3d7f7db1c361246dbe2f416b3f72094d5a9f4276d487e202c3c3aefff6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "View that calculates the numerator and denominator for engagement time metrics.", "columns": {"page_engagement_time": {"name": "page_engagement_time", "description": "Total engagement time in a session for all page_view events to the same page_location.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "page_engagement_denominator": {"name": "page_engagement_denominator", "description": "The total number of page_views in a session to the same page_location except for pages with no page_engagement_time.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__page_engaged_time.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.5165865, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__page_engaged_time`", "raw_code": "with pek_time as (\nselect\n    page_engagement_key,\n    sum(engagement_time_msec) as page_engagement_time,\nfrom {{ ref('stg_ga4__events') }}\ngroup by 1\n),\nmatched_pv as ( -- need to replace the pek with one that uses page_location to match back to correct page_view\n    select\n        to_base64(md5(concat(session_key, page_location))) as page_engagement_key, \n    from {{ ref('stg_ga4__events') }}\n    where event_name = 'page_view'\n),\ndenominator as ( \n    select\n        page_engagement_key,\n        count(page_engagement_key) as page_engagement_denominator, --for sessions with multiple hits to the same page\n    from matched_pv\n    group by 1\n)\nselect\n    denominator.page_engagement_key,\n    case\n        when pek_time.page_engagement_time is null then null -- safe_divide in the numerator would return 0; we need null to prevent page views with no recorded engagement time from factoring in to later calculations\n        else safe_divide(pek_time.page_engagement_time , denominator.page_engagement_denominator) \n    end as page_engagement_time_msec, --technically the average engagement time for that page in that session\n    case \n        when pek_time.page_engagement_time is null then null -- remove page_views with no engagement time from the denominator\n        else denominator.page_engagement_denominator \n    end as page_engagement_denominator\nfrom denominator \nleft join pek_time using(page_engagement_key)", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}, {"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__page_engaged_time.sql", "compiled": true, "compiled_code": "with pek_time as (\nselect\n    page_engagement_key,\n    sum(engagement_time_msec) as page_engagement_time,\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\ngroup by 1\n),\nmatched_pv as ( -- need to replace the pek with one that uses page_location to match back to correct page_view\n    select\n        to_base64(md5(concat(session_key, page_location))) as page_engagement_key, \n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where event_name = 'page_view'\n),\ndenominator as ( \n    select\n        page_engagement_key,\n        count(page_engagement_key) as page_engagement_denominator, --for sessions with multiple hits to the same page\n    from matched_pv\n    group by 1\n)\nselect\n    denominator.page_engagement_key,\n    case\n        when pek_time.page_engagement_time is null then null -- safe_divide in the numerator would return 0; we need null to prevent page views with no recorded engagement time from factoring in to later calculations\n        else safe_divide(pek_time.page_engagement_time , denominator.page_engagement_denominator) \n    end as page_engagement_time_msec, --technically the average engagement time for that page in that session\n    case \n        when pek_time.page_engagement_time is null then null -- remove page_views with no engagement time from the denominator\n        else denominator.page_engagement_denominator \n    end as page_engagement_denominator\nfrom denominator \nleft join pek_time using(page_engagement_key)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__session_conversions_daily": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__session_conversions_daily", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__session_conversions_daily.sql", "original_file_path": "models/staging/stg_ga4__session_conversions_daily.sql", "unique_id": "model.ga4.stg_ga4__session_conversions_daily", "fqn": ["ga4", "staging", "stg_ga4__session_conversions_daily"], "alias": "stg_ga4__session_conversions_daily", "checksum": {"name": "sha256", "checksum": "4a925cf9272a3dd842e0d84df64fc52cb5a8492fc8d69f048d40f1d7e6affa5d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Incremental model that counts the number of events per day listed in the 'conversion_events' variable.  Aggregated and partitioned on session_start_date.  Only enabled when the conversion_events variable is set.\n", "columns": {"session_partition_key": {"name": "session_partition_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__session_conversions_daily.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "enabled": true, "incremental_strategy": "insert_overwrite", "tags": ["incremental"], "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"]}, "created_at": 1732268181.5055914, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__session_conversions_daily`", "raw_code": "{% set partitions_to_replace = ['current_date'] %}\n{% for i in range(var('static_incremental_days')) %}\n    {% set partitions_to_replace = partitions_to_replace.append('date_sub(current_date, interval ' + (i+1)|string + ' day)') %}\n{% endfor %}\n{{\n    config(\n        enabled= var('conversion_events', false) != false,\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"session_partition_date\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        partitions = partitions_to_replace\n    )\n}}\n\n\n\nwith event_counts as (\n    select \n        session_key,\n        session_partition_key,\n        min(event_date_dt) as session_partition_date -- The date of this session partition\n        {% for ce in var('conversion_events',[]) %}\n        , countif(event_name = '{{ce}}') as {{ce}}_count\n        {% endfor %}\n    from {{ref('stg_ga4__events')}}\n    where 1=1\n    {% if is_incremental() %}\n            and event_date_dt in ({{ partitions_to_replace | join(',') }})\n    {% endif %}\n    group by 1,2\n)\n\nselect * from event_counts", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__session_conversions_daily.sql", "compiled": true, "compiled_code": "\n\n    \n\n\n\n\n\nwith event_counts as (\n    select \n        session_key,\n        session_partition_key,\n        min(event_date_dt) as session_partition_date -- The date of this session partition\n        \n        , countif(event_name = 'purchase') as purchase_count\n        \n        , countif(event_name = 'message') as message_count\n        \n        , countif(event_name = 'call') as call_count\n        \n        , countif(event_name = 'generate_lead') as generate_lead_count\n        \n        , countif(event_name = 'store_visit') as store_visit_count\n        \n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where 1=1\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day))\n    \n    group by 1,2\n)\n\nselect * from event_counts", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__sessions_traffic_sources_last_non_direct_daily", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.sql", "unique_id": "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily", "fqn": ["ga4", "staging", "stg_ga4__sessions_traffic_sources_last_non_direct_daily"], "alias": "stg_ga4__sessions_traffic_sources_last_non_direct_daily", "checksum": {"name": "sha256", "checksum": "2ac7506fbeb4f965eff9e80c99629fd91648655547e0ef485905c8fd598c0717"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "This model associates the last non-direct traffic acquisition data with the current session.  It does this by scanning backwards 30 days from the session date (aka. the lookback window) and looks for the recent non-direct traffic source.  This model is incremental, partitioned on session_partition_date, and unique on session_partition_key.\n", "columns": {"session_partition_key": {"name": "session_partition_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_source": {"name": "session_source", "description": "First non-null source value of the session", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_non_direct_source": {"name": "last_non_direct_source", "description": "The the most recent non-direct traffic source within a 30-day lookback window.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_non_direct_default_channel_grouping": {"name": "last_non_direct_default_channel_grouping", "description": "The the most recent non-direct channel grouping within a 30-day lookback window.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "tags": ["incremental"], "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"]}, "created_at": 1732268181.4931653, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`", "raw_code": "{% set partitions_to_replace = ['current_date'] %}\n{% for i in range(var('static_incremental_days')) %}\n    {% set partitions_to_replace = partitions_to_replace.append('date_sub(current_date, interval ' + (i+1)|string + ' day)') %}\n{% endfor %}\n{{\n    config(\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"session_partition_date\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        partitions = partitions_to_replace\n    )\n}}\n\nwith last_non_direct_session_partition_key as (\n  select\n    client_key\n    ,session_partition_key\n    ,session_partition_date\n    ,session_source\n    ,session_medium\n    ,session_source_category\n    ,session_campaign\n    ,session_content\n    ,session_term\n    ,session_default_channel_grouping\n    ,non_direct_session_partition_key\n    ,CASE\n      WHEN non_direct_session_partition_key is null\n      THEN \n          last_value(non_direct_session_partition_key ignore nulls) over(\n          partition by client_key\n          order by\n              session_partition_timestamp range between {{var('session_attribution_lookback_window_days', 30 ) * 24 * 60 * 60 * 1000000 }} preceding\n              and current row -- lookback window \n          )\n      ELSE non_direct_session_partition_key\n    END as session_partition_key_last_non_direct,\n  from\n  {{ref('stg_ga4__sessions_traffic_sources_daily')}}\n  {% if is_incremental() %}\n      -- Add 30 to static_incremental_days to include the session attribution lookback window\n      where session_partition_date >= date_sub(current_date, interval ({{var('static_incremental_days',3) + var('session_attribution_lookback_window_days', 30 )}} ) day)\n  {% endif %}\n)\n,join_last_non_direct_session_source as (\n  select\n    last_non_direct_session_partition_key.client_key\n    ,last_non_direct_session_partition_key.session_partition_key\n    ,last_non_direct_session_partition_key.session_partition_date\n    ,last_non_direct_session_partition_key.session_source\n    ,last_non_direct_session_partition_key.session_medium\n    ,last_non_direct_session_partition_key.session_source_category\n    ,last_non_direct_session_partition_key.session_campaign\n    ,last_non_direct_session_partition_key.session_content\n    ,last_non_direct_session_partition_key.session_term\n    ,last_non_direct_session_partition_key.session_default_channel_grouping\n    ,last_non_direct_session_partition_key.session_partition_key_last_non_direct\n    ,coalesce(last_non_direct_source.session_source, '(direct)') as last_non_direct_source -- Value will be null if only direct sessions are within the lookback window\n    ,coalesce(last_non_direct_source.session_medium, '(none)') as last_non_direct_medium\n    ,coalesce(last_non_direct_source.session_source_category, '(none)') as last_non_direct_source_category\n    ,coalesce(last_non_direct_source.session_campaign, '(none)') as last_non_direct_campaign\n    ,coalesce(last_non_direct_source.session_content, '(none)') as last_non_direct_content\n    ,coalesce(last_non_direct_source.session_term, '(none)') as last_non_direct_term\n    ,coalesce(last_non_direct_source.session_default_channel_grouping, 'Direct') as last_non_direct_default_channel_grouping\n  from last_non_direct_session_partition_key\n  left join {{ref('stg_ga4__sessions_traffic_sources_daily')}} last_non_direct_source on\n    last_non_direct_session_partition_key.session_partition_key_last_non_direct = last_non_direct_source.session_partition_key\n  {% if is_incremental() %}\n      -- Only keep the records in the partitions we wish to replace (as opposed to the whole 30 day lookback window)\n      where last_non_direct_session_partition_key.session_partition_date in ({{ partitions_to_replace | join(',') }})\n  {% endif %}\n)\n\nselect * from join_last_non_direct_session_source", "language": "sql", "refs": [{"name": "stg_ga4__sessions_traffic_sources_daily", "package": null, "version": null}, {"name": "stg_ga4__sessions_traffic_sources_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": ["model.ga4.stg_ga4__sessions_traffic_sources_daily"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.sql", "compiled": true, "compiled_code": "\n\n    \n\n\n\nwith last_non_direct_session_partition_key as (\n  select\n    client_key\n    ,session_partition_key\n    ,session_partition_date\n    ,session_source\n    ,session_medium\n    ,session_source_category\n    ,session_campaign\n    ,session_content\n    ,session_term\n    ,session_default_channel_grouping\n    ,non_direct_session_partition_key\n    ,CASE\n      WHEN non_direct_session_partition_key is null\n      THEN \n          last_value(non_direct_session_partition_key ignore nulls) over(\n          partition by client_key\n          order by\n              session_partition_timestamp range between 2592000000000 preceding\n              and current row -- lookback window \n          )\n      ELSE non_direct_session_partition_key\n    END as session_partition_key_last_non_direct,\n  from\n  `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily`\n  \n      -- Add 30 to static_incremental_days to include the session attribution lookback window\n      where session_partition_date >= date_sub(current_date, interval (31 ) day)\n  \n)\n,join_last_non_direct_session_source as (\n  select\n    last_non_direct_session_partition_key.client_key\n    ,last_non_direct_session_partition_key.session_partition_key\n    ,last_non_direct_session_partition_key.session_partition_date\n    ,last_non_direct_session_partition_key.session_source\n    ,last_non_direct_session_partition_key.session_medium\n    ,last_non_direct_session_partition_key.session_source_category\n    ,last_non_direct_session_partition_key.session_campaign\n    ,last_non_direct_session_partition_key.session_content\n    ,last_non_direct_session_partition_key.session_term\n    ,last_non_direct_session_partition_key.session_default_channel_grouping\n    ,last_non_direct_session_partition_key.session_partition_key_last_non_direct\n    ,coalesce(last_non_direct_source.session_source, '(direct)') as last_non_direct_source -- Value will be null if only direct sessions are within the lookback window\n    ,coalesce(last_non_direct_source.session_medium, '(none)') as last_non_direct_medium\n    ,coalesce(last_non_direct_source.session_source_category, '(none)') as last_non_direct_source_category\n    ,coalesce(last_non_direct_source.session_campaign, '(none)') as last_non_direct_campaign\n    ,coalesce(last_non_direct_source.session_content, '(none)') as last_non_direct_content\n    ,coalesce(last_non_direct_source.session_term, '(none)') as last_non_direct_term\n    ,coalesce(last_non_direct_source.session_default_channel_grouping, 'Direct') as last_non_direct_default_channel_grouping\n  from last_non_direct_session_partition_key\n  left join `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily` last_non_direct_source on\n    last_non_direct_session_partition_key.session_partition_key_last_non_direct = last_non_direct_source.session_partition_key\n  \n      -- Only keep the records in the partitions we wish to replace (as opposed to the whole 30 day lookback window)\n      where last_non_direct_session_partition_key.session_partition_date in (current_date,date_sub(current_date, interval 1 day))\n  \n)\n\nselect * from join_last_non_direct_session_source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__page_conversions": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__page_conversions", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__page_conversions.sql", "original_file_path": "models/staging/stg_ga4__page_conversions.sql", "unique_id": "model.ga4.stg_ga4__page_conversions", "fqn": ["ga4", "staging", "stg_ga4__page_conversions"], "alias": "stg_ga4__page_conversions", "checksum": {"name": "sha256", "checksum": "982ee9c7c3ca4e1584222ef145ae1cfc65600e214315b82e723ed33838f68fe0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": true}, "created_at": 1732268178.9805994, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__page_conversions`", "raw_code": "{{ config(\n  enabled= var('conversion_events', false) != false\n) }}\n\nselect \n    page_key\n    {% for ce in var('conversion_events',[]) %}\n    , countif(event_name = '{{ce}}') as {{ce}}_count\n    {% endfor %}\nfrom {{ref('stg_ga4__events')}}\ngroup by 1", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__page_conversions.sql", "compiled": true, "compiled_code": "\n\nselect \n    page_key\n    \n    , countif(event_name = 'purchase') as purchase_count\n    \n    , countif(event_name = 'message') as message_count\n    \n    , countif(event_name = 'call') as call_count\n    \n    , countif(event_name = 'generate_lead') as generate_lead_count\n    \n    , countif(event_name = 'store_visit') as store_visit_count\n    \nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\ngroup by 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__derived_user_properties": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__derived_user_properties", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__derived_user_properties.sql", "original_file_path": "models/staging/stg_ga4__derived_user_properties.sql", "unique_id": "model.ga4.stg_ga4__derived_user_properties", "fqn": ["ga4", "staging", "stg_ga4__derived_user_properties"], "alias": "stg_ga4__derived_user_properties", "checksum": {"name": "sha256", "checksum": "d55e1ed84c53d6ff0c30b2d17882c98d207c882db01f163938065ce6564ade0b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["client_key"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "last_updated", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Optional model that will pull out the most recent instance of a particular event parameter for each device (client_key). Later used in the dim_ga4__client_key dimension table.", "columns": {"client_key": {"name": "client_key", "description": "Hashed combination of user_pseudo_id and stream_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__derived_user_properties.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "enabled": true, "incremental_strategy": "merge", "unique_key": ["client_key"], "tags": ["incremental"], "partition_by": {"field": "last_updated", "data_type": "timestamp", "granularity": "day"}, "on_schema_change": "sync_all_columns"}, "created_at": 1732268181.5373778, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__derived_user_properties`", "raw_code": "{{ \n    config(\n        enabled = true if var('derived_user_properties', false) else false,\n        materialized = \"incremental\",\n        incremental_strategy = 'merge',\n        unique_key = ['client_key'],\n        tags = [\"incremental\"],\n        partition_by={\n                \"field\": \"last_updated\",\n                \"data_type\": \"timestamp\",\n                \"granularity\": \"day\"\n            },\n        on_schema_change='sync_all_columns'\n) }}\n\n-- Remove null client_key (users with privacy enabled)\nwith events_from_valid_users as (\n    select * from {{ref('stg_ga4__events')}}\n    where client_key is not null\n    {% if is_incremental() %}\n        and event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n),\nunnest_user_properties as\n(\n    select \n        client_key,\n        event_timestamp\n        {% for up in var('derived_user_properties', []) %}\n            ,{{ ga4.unnest_key('event_params',  up.event_parameter ,  up.value_type ) }}\n        {% endfor %}\n    from events_from_valid_users\n)\n\nSELECT DISTINCT\n    client_key\n    {% for up in var('derived_user_properties', []) %}\n        , LAST_VALUE({{ up.event_parameter }} IGNORE NULLS) OVER (user_window) AS {{ up.user_property_name }}\n    {% endfor %}\n    , last_value(timestamp_micros(event_timestamp)) over (user_window) as last_updated,\nFROM unnest_user_properties\nWINDOW user_window AS (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__derived_user_properties.sql", "compiled": true, "compiled_code": "\n\n-- Remove null client_key (users with privacy enabled)\nwith events_from_valid_users as (\n    select * from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where client_key is not null\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\nunnest_user_properties as\n(\n    select \n        client_key,\n        event_timestamp\n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_location') as \n    \n    page_location\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'store') as \n    \n    store\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'location') as \n    \n    location\n    \n        \n    from events_from_valid_users\n)\n\nSELECT DISTINCT\n    client_key\n    \n        , LAST_VALUE(page_location IGNORE NULLS) OVER (user_window) AS most_recent_page_location\n    \n        , LAST_VALUE(store IGNORE NULLS) OVER (user_window) AS visited_branch\n    \n        , LAST_VALUE(location IGNORE NULLS) OVER (user_window) AS searched_branch\n    \n    , last_value(timestamp_micros(event_timestamp)) over (user_window) as last_updated,\nFROM unnest_user_properties\nWINDOW user_window AS (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_to_query_string_params": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_to_query_string_params", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__event_to_query_string_params.sql", "original_file_path": "models/staging/stg_ga4__event_to_query_string_params.sql", "unique_id": "model.ga4.stg_ga4__event_to_query_string_params", "fqn": ["ga4", "staging", "stg_ga4__event_to_query_string_params"], "alias": "stg_ga4__event_to_query_string_params", "checksum": {"name": "sha256", "checksum": "2dfb4ee3d78159862fc776de4cd878832af6355a6b3b26c084ab734b477e29ac"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "This model pivots the query string parameters contained within the event's page_location field to become rows. Each row is a single parameter/value combination contained in a single event's query string.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__event_to_query_string_params.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.515181, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_to_query_string_params`", "raw_code": "with event_and_query_string as \n(\n    select \n        event_key,\n        split(page_query_string, '&') as qs_split\n    from {{ref('stg_ga4__events')}}\n),\nflattened_qs as\n(\n    select \n        event_key, \n        params \n    from event_and_query_string, unnest(qs_split) as params\n),\nsplit_param_value as \n(\n    select \n        event_key, \n        split(params,'=')[SAFE_OFFSET(0)] as param, \n        NULLIF(split(params,'=')[SAFE_OFFSET(1)], '') as value \n    from flattened_qs\n)\n\nselect * from split_param_value", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__event_to_query_string_params.sql", "compiled": true, "compiled_code": "with event_and_query_string as \n(\n    select \n        event_key,\n        split(page_query_string, '&') as qs_split\n    from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n),\nflattened_qs as\n(\n    select \n        event_key, \n        params \n    from event_and_query_string, unnest(qs_split) as params\n),\nsplit_param_value as \n(\n    select \n        event_key, \n        split(params,'=')[SAFE_OFFSET(0)] as param, \n        NULLIF(split(params,'=')[SAFE_OFFSET(1)], '') as value \n    from flattened_qs\n)\n\nselect * from split_param_value", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__user_properties": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__user_properties", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__user_properties.sql", "original_file_path": "models/staging/stg_ga4__user_properties.sql", "unique_id": "model.ga4.stg_ga4__user_properties", "fqn": ["ga4", "staging", "stg_ga4__user_properties"], "alias": "stg_ga4__user_properties", "checksum": {"name": "sha256", "checksum": "91c202a3b82add0475eeef7d63e11001e02aa4cb2686ec80d40ea1c2f3f13c7e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["client_key"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "last_updated", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Contains unnested user_properties. Uses the user_properties dbt variable to determine which properties to unnest.", "columns": {"client_key": {"name": "client_key", "description": "Hashed combination of user_pseudo_id and stream_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__user_properties.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "enabled": true, "incremental_strategy": "merge", "unique_key": ["client_key"], "tags": ["incremental"], "partition_by": {"field": "last_updated", "data_type": "timestamp", "granularity": "day"}}, "created_at": 1732268181.4777367, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__user_properties`", "raw_code": "{{ \n    config(\n        enabled = true if var('user_properties', false) else false,\n        materialized = \"incremental\",\n        incremental_strategy = 'merge',\n        unique_key = ['client_key'],\n        tags = [\"incremental\"],\n        partition_by={\n                \"field\": \"last_updated\",\n                \"data_type\": \"timestamp\",\n                \"granularity\": \"day\"\n            },\n) }}\n\n-- Remove null client_key (users with privacy enabled)\nwith events_from_valid_users as (\n    select * from {{ref('stg_ga4__events')}}\n    where client_key is not null\n    {% if is_incremental() %}\n        and event_date_dt >= date_sub(current_date, interval {{var('static_incremental_days',3) | int}} day)\n    {% endif %}\n),\nunnest_user_properties as\n(\n    select \n        client_key,\n        event_timestamp\n        {% for up in var('user_properties', []) %}\n            ,{{ ga4.unnest_key('user_properties',  up.user_property_name ,  up.value_type ) }}\n        {% endfor %}\n    from events_from_valid_users\n)\n-- create 1 CTE per user property \n{% for up in var('user_properties', []) %}\n,non_null_{{up.user_property_name}} as\n(\n    select\n        client_key,\n        event_timestamp,\n        {{up.user_property_name}}\n    from unnest_user_properties\n    where\n        {{up.user_property_name}} is not null\n),\nlast_value_{{up.user_property_name}} as \n(\n    select\n        client_key,\n        LAST_VALUE({{ up.user_property_name }}) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS {{up.user_property_name}},\n        LAST_VALUE(event_timestamp) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_updated\n    from non_null_{{up.user_property_name}}\n),\nlast_value_{{up.user_property_name}}_grouped as \n(\n    select\n        client_key,\n        {{up.user_property_name}},\n        max(last_updated) as last_updated\n    from last_value_{{up.user_property_name}}\n    group by client_key, {{up.user_property_name}}\n)\n{% endfor %}\n,\nclient_keys as \n(\n    select distinct\n        client_key\n    from events_from_valid_users\n),\njoin_properties as \n(\n    select\n        client_key\n        {% for up in var('user_properties', []) %}\n        ,last_value_{{up.user_property_name}}_grouped.{{up.user_property_name}}\n        {% endfor %}\n        ,timestamp_micros(greatest(\n            {% for up in var('user_properties', []) %}\n            last_value_{{up.user_property_name}}_grouped.last_updated {{\",\" if not loop.last}}\n            {% endfor %}\n        )) as last_updated\n    from client_keys\n    {% for up in var('user_properties', []) %}\n    left join last_value_{{up.user_property_name}}_grouped using (client_key)\n    {% endfor %}\n)\n\n\nselect distinct * from join_properties", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__user_properties.sql", "compiled": true, "compiled_code": "\n\n-- Remove null client_key (users with privacy enabled)\nwith events_from_valid_users as (\n    select * from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n    where client_key is not null\n    \n        and event_date_dt >= date_sub(current_date, interval 1 day)\n    \n),\nunnest_user_properties as\n(\n    select \n        client_key,\n        event_timestamp\n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(user_properties) where key = 'phone') as \n    \n    phone\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(user_properties) where key = 'address') as \n    \n    address\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(user_properties) where key = 'email') as \n    \n    email\n    \n        \n            ,(select \n        \n            value.string_value    \n        \n    from unnest(user_properties) where key = 'name') as \n    \n    name\n    \n        \n    from events_from_valid_users\n)\n-- create 1 CTE per user property \n\n,non_null_phone as\n(\n    select\n        client_key,\n        event_timestamp,\n        phone\n    from unnest_user_properties\n    where\n        phone is not null\n),\nlast_value_phone as \n(\n    select\n        client_key,\n        LAST_VALUE(phone) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS phone,\n        LAST_VALUE(event_timestamp) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_updated\n    from non_null_phone\n),\nlast_value_phone_grouped as \n(\n    select\n        client_key,\n        phone,\n        max(last_updated) as last_updated\n    from last_value_phone\n    group by client_key, phone\n)\n\n,non_null_address as\n(\n    select\n        client_key,\n        event_timestamp,\n        address\n    from unnest_user_properties\n    where\n        address is not null\n),\nlast_value_address as \n(\n    select\n        client_key,\n        LAST_VALUE(address) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS address,\n        LAST_VALUE(event_timestamp) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_updated\n    from non_null_address\n),\nlast_value_address_grouped as \n(\n    select\n        client_key,\n        address,\n        max(last_updated) as last_updated\n    from last_value_address\n    group by client_key, address\n)\n\n,non_null_email as\n(\n    select\n        client_key,\n        event_timestamp,\n        email\n    from unnest_user_properties\n    where\n        email is not null\n),\nlast_value_email as \n(\n    select\n        client_key,\n        LAST_VALUE(email) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS email,\n        LAST_VALUE(event_timestamp) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_updated\n    from non_null_email\n),\nlast_value_email_grouped as \n(\n    select\n        client_key,\n        email,\n        max(last_updated) as last_updated\n    from last_value_email\n    group by client_key, email\n)\n\n,non_null_name as\n(\n    select\n        client_key,\n        event_timestamp,\n        name\n    from unnest_user_properties\n    where\n        name is not null\n),\nlast_value_name as \n(\n    select\n        client_key,\n        LAST_VALUE(name) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS name,\n        LAST_VALUE(event_timestamp) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_updated\n    from non_null_name\n),\nlast_value_name_grouped as \n(\n    select\n        client_key,\n        name,\n        max(last_updated) as last_updated\n    from last_value_name\n    group by client_key, name\n)\n\n,\nclient_keys as \n(\n    select distinct\n        client_key\n    from events_from_valid_users\n),\njoin_properties as \n(\n    select\n        client_key\n        \n        ,last_value_phone_grouped.phone\n        \n        ,last_value_address_grouped.address\n        \n        ,last_value_email_grouped.email\n        \n        ,last_value_name_grouped.name\n        \n        ,timestamp_micros(greatest(\n            \n            last_value_phone_grouped.last_updated ,\n            \n            last_value_address_grouped.last_updated ,\n            \n            last_value_email_grouped.last_updated ,\n            \n            last_value_name_grouped.last_updated \n            \n        )) as last_updated\n    from client_keys\n    \n    left join last_value_phone_grouped using (client_key)\n    \n    left join last_value_address_grouped using (client_key)\n    \n    left join last_value_email_grouped using (client_key)\n    \n    left join last_value_name_grouped using (client_key)\n    \n)\n\n\nselect distinct * from join_properties", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.base_ga4__events": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_ga4__events", "resource_type": "model", "package_name": "ga4", "path": "staging/base/base_ga4__events.sql", "original_file_path": "models/staging/base/base_ga4__events.sql", "unique_id": "model.ga4.base_ga4__events", "fqn": ["ga4", "staging", "base", "base_ga4__events"], "alias": "base_ga4__events", "checksum": {"name": "sha256", "checksum": "a168c007e0e1849176de37f682418f91259f99a473cb2e71ff58f36e6c486e0b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": false, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "cluster_by": ["event_name"], "partition_by": {"field": "event_date_dt", "data_type": "date"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"], "post-hook": [], "pre-hook": [{"sql": "{{ ga4.combine_property_data() }}", "transaction": true, "index": null}]}, "tags": [], "description": "Base events model that pulls all fields from raw data. Resulting table is partitioned on event_date_dt which  is useful in that BQ queries can be cached against this table, but not against wildcard searches from the original sharded tables.  This model handles some light transformation and renaming beyond the base events model.  Events are deduped by looking for duplicate event and event parameter payloads.  More documentation here: https://support.google.com/analytics/answer/7029846\n", "columns": {"event_date_dt": {"name": "event_date_dt", "description": "Date of the event converted to Date type. Time zone is the time zone configured in the GA4 property.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_timestamp": {"name": "event_timestamp", "description": "Timestamp (in microseconds) indicating when the event's batch was received (as opposed to when the event actually occurred).   Time zone is technically UTC, but in a practical sense it is set to the time zone configured in the GA4 property. \n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_campaign": {"name": "user_campaign", "description": "Contains the initial campaign name that brought the user to the property. This has been renamed from traffic_source.name. From Google's documentation: Name of the marketing campaign that first acquired the user. This field is not populated in intraday tables. Note: traffic_source attribution is based on cross-channel last click. The traffic_source values do not change if the user interacts with subsequent campaigns after installation. https://support.google.com/analytics/answer/7029846?hl=en#zippy=%2Ctraffic-source\n", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_medium": {"name": "user_medium", "description": "Contains the initial medium that brought the user to the property. This has been renamed from traffic_source.medium.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_source": {"name": "user_source", "description": "Contains the initial source that brought the user to the property. This has been renamed from traffic_source.source.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "session_id": {"name": "session_id", "description": "Unique identifier for the user's session. This is not guaranteed unique across users. Renamed from ga_session_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_campaign": {"name": "event_campaign", "description": "Contain's the campaign associated with the event (typically derived from utm_campaign)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_source": {"name": "event_source", "description": "Contain's the source associated with the event (typically derived from utm_source)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_medium": {"name": "event_medium", "description": "Contain's the campaign associated with the event (typically derived from utm_medium)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_content": {"name": "event_content", "description": "Contain's the campaign associated with the event (typically derived from utm_content)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "event_term": {"name": "event_term", "description": "Contain's the campaign associated with the event (typically derived from utm_term)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "stream_id": {"name": "stream_id", "description": "The numeric ID of the data stream from which the event originated.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "platform": {"name": "platform", "description": "The data stream platform (Web, IOS or Android) from which the event originated.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "privacy_info_analytics_storage": {"name": "privacy_info_analytics_storage", "description": "Whether Analytics storage is enabled for the user. Possible values are Yes, No, Unset", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "privacy_info_ads_storage": {"name": "privacy_info_ads_storage", "description": "Whether ad targeting is enabled for a user. Possible values are Yes, No, Unset", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/base/base_ga4__events.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "incremental_strategy": "insert_overwrite", "partition_by": {"field": "event_date_dt", "data_type": "date"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"], "cluster_by": ["event_name"], "pre-hook": ["{{ ga4.combine_property_data() }}"], "full_refresh": false}, "created_at": 1732268181.5458846, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_ga4__events`", "raw_code": "{% set partitions_to_replace = ['current_date'] %}\n{% for i in range(var('static_incremental_days')) %}\n    {% set partitions_to_replace = partitions_to_replace.append('date_sub(current_date, interval ' + (i+1)|string + ' day)') %}\n{% endfor %}\n\n{{\n    config(\n        pre_hook=\"{{ ga4.combine_property_data() }}\" if var('combined_dataset', false) else \"\",\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        partition_by={\n            \"field\": \"event_date_dt\",\n            \"data_type\": \"date\",\n        },\n        partitions = partitions_to_replace,\n        cluster_by=['event_name']\n    )\n}}\n\nwith source as (\n    select\n        {{ ga4.base_select_source() }}\n    from {{ source('ga4', 'events') }}\n    where cast(left(replace(_table_suffix, 'intraday_', ''), 8) as int64) >= {{var('start_date')}}\n    {% if is_incremental() %}\n        and parse_date('%Y%m%d', left(replace(_table_suffix, 'intraday_', ''), 8)) in ({{ partitions_to_replace | join(',') }})\n    {% endif %}\n),\nrenamed as (\n    select\n        {{ ga4.base_select_renamed() }}\n    from source\n)\n\nselect * from renamed\nqualify row_number() over(partition by event_date_dt, stream_id, user_pseudo_id, session_id, event_name, event_timestamp, to_json_string(ARRAY(SELECT params FROM UNNEST(event_params) AS params ORDER BY key))) = 1", "language": "sql", "refs": [], "sources": [["ga4", "events"]], "metrics": [], "depends_on": {"macros": ["macro.ga4.base_select_source", "macro.sado_analytics_services.source", "macro.dbt.is_incremental", "macro.ga4.base_select_renamed", "macro.ga4.combine_property_data"], "nodes": ["source.ga4.ga4.events"]}, "compiled_path": "target/compiled/ga4/models/staging/base/base_ga4__events.sql", "compiled": true, "compiled_code": "\n\n    \n\n\n\n\nwith source as (\n    select\n        \n    parse_date('%Y%m%d',event_date) as event_date_dt\n    , event_timestamp\n    , event_name\n    , event_params\n    , event_previous_timestamp\n    , event_value_in_usd\n    , event_bundle_sequence_id\n    , event_server_timestamp_offset\n    , user_id\n    , user_pseudo_id\n    , privacy_info\n    , user_properties\n    , user_first_touch_timestamp\n    , user_ltv\n    , device\n    , geo\n    , app_info\n    , traffic_source\n    , stream_id\n    , platform\n    , ecommerce.total_item_quantity\n    , ecommerce.purchase_revenue_in_usd\n    , ecommerce.purchase_revenue\n    , ecommerce.refund_value_in_usd\n    , ecommerce.refund_value\n    , ecommerce.shipping_value_in_usd\n    , ecommerce.shipping_value\n    , ecommerce.tax_value_in_usd\n    , ecommerce.tax_value\n    , ecommerce.unique_items\n    , ecommerce.transaction_id\n    , items\n\n    from `agile-scheme-394814`.`analytics`.`events_*`\n    where cast(left(replace(_table_suffix, 'intraday_', ''), 8) as int64) >= 20231001\n    \n        and parse_date('%Y%m%d', left(replace(_table_suffix, 'intraday_', ''), 8)) in (current_date,date_sub(current_date, interval 1 day))\n    \n),\nrenamed as (\n    select\n        \n    event_date_dt\n    , event_timestamp\n    , lower(replace(trim(event_name), \" \", \"_\")) as event_name -- Clean up all event names to be snake cased\n    , event_params\n    , event_previous_timestamp\n    , event_value_in_usd\n    , event_bundle_sequence_id\n    , event_server_timestamp_offset\n    , user_id\n    , user_pseudo_id\n    , privacy_info.analytics_storage as privacy_info_analytics_storage\n    , privacy_info.ads_storage as privacy_info_ads_storage\n    , privacy_info.uses_transient_token as privacy_info_uses_transient_token\n    , user_properties\n    , user_first_touch_timestamp\n    , user_ltv.revenue as user_ltv_revenue\n    , user_ltv.currency as user_ltv_currency\n    , device.category as device_category\n    , device.mobile_brand_name as device_mobile_brand_name\n    , device.mobile_model_name as device_mobile_model_name\n    , device.mobile_marketing_name as device_mobile_marketing_name\n    , device.mobile_os_hardware_model as device_mobile_os_hardware_model\n    , device.operating_system as device_operating_system\n    , device.operating_system_version as device_operating_system_version\n    , device.vendor_id as device_vendor_id\n    , device.advertising_id as device_advertising_id\n    , device.language as device_language\n    , device.is_limited_ad_tracking as device_is_limited_ad_tracking\n    , device.time_zone_offset_seconds as device_time_zone_offset_seconds\n    , device.browser as device_browser\n    , device.browser_version as device_browser_version\n    , device.web_info.browser as device_web_info_browser\n    , device.web_info.browser_version as device_web_info_browser_version\n    , device.web_info.hostname as device_web_info_hostname\n    , geo.continent as geo_continent\n    , geo.country as geo_country\n    , geo.region as geo_region\n    , geo.city as geo_city\n    , geo.sub_continent as geo_sub_continent\n    , geo.metro as geo_metro\n    , app_info.id as app_info_id\n    , app_info.version as app_info_version\n    , app_info.install_store as app_info_install_store\n    , app_info.firebase_app_id as app_info_firebase_app_id\n    , app_info.install_source as app_info_install_source\n    , traffic_source.name as user_campaign\n    , traffic_source.medium as user_medium\n    , traffic_source.source as user_source\n    , stream_id\n    , platform\n    , struct(\n        total_item_quantity\n        , purchase_revenue_in_usd\n        , purchase_revenue\n        , refund_value_in_usd\n        , refund_value\n        , shipping_value_in_usd\n        , shipping_value\n        , tax_value_in_usd\n        , tax_value\n        , unique_items\n        , transaction_id        \n    ) as ecommerce\n    , (select \n        array_agg(struct(\n            unnested_items.item_id\n            , unnested_items.item_name\n            , unnested_items.item_brand\n            , unnested_items.item_variant\n            , unnested_items.item_category\n            , unnested_items.item_category2\n            , unnested_items.item_category3\n            , unnested_items.item_category4\n            , unnested_items.item_category5\n            , unnested_items.price_in_usd\n            , unnested_items.price\n            , unnested_items.quantity\n            , unnested_items.item_revenue_in_usd\n            , unnested_items.item_revenue\n            , unnested_items.item_refund_in_usd\n            , unnested_items.item_refund\n            , unnested_items.coupon\n            , unnested_items.affiliation\n            , unnested_items.location_id\n            , unnested_items.item_list_id\n            , unnested_items.item_list_name\n            , unnested_items.item_list_index\n            , unnested_items.promotion_id\n            , unnested_items.promotion_name\n            , unnested_items.creative_name\n            , unnested_items.creative_slot\n            , unnested_items.item_params\n        )) from unnest(items) as unnested_items \n    ) items\n    , (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'ga_session_id') as \n    \n    session_id\n    \n    , (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_location') as \n    \n    page_location\n    \n    , (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'ga_session_number') as \n    \n    session_number\n    \n    , COALESCE(\n        (SELECT value.int_value FROM unnest(event_params) WHERE key = \"session_engaged\"),\n        (CASE WHEN (SELECT value.string_value FROM unnest(event_params) WHERE key = \"session_engaged\") = \"1\" THEN 1 END)\n    ) as session_engaged\n    , (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'engagement_time_msec') as \n    \n    engagement_time_msec\n    \n    , (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_title') as \n    \n    page_title\n    \n    , (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_referrer') as \n    \n    page_referrer\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'source') as \n    \n    event_source\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'medium') as \n    \n    event_medium\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'campaign') as \n    \n    event_campaign\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'content') as \n    \n    event_content\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'term') as \n    \n    event_term\n    \n    , CASE \n        WHEN event_name = 'page_view' THEN 1\n        ELSE 0\n    END AS is_page_view\n    , CASE \n        WHEN event_name = 'purchase' THEN 1\n        ELSE 0\n    END AS is_purchase\n\n    from source\n)\n\nselect * from renamed\nqualify row_number() over(partition by event_date_dt, stream_id, user_pseudo_id, session_id, event_name, event_timestamp, to_json_string(ARRAY(SELECT params FROM UNNEST(event_params) AS params ORDER BY key))) = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_page_view": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_page_view", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_page_view.sql", "original_file_path": "models/staging/events/stg_ga4__event_page_view.sql", "unique_id": "model.ga4.stg_ga4__event_page_view", "fqn": ["ga4", "staging", "events", "stg_ga4__event_page_view"], "alias": "stg_ga4__event_page_view", "checksum": {"name": "sha256", "checksum": "38859ed6afadb5fda98cca6b6756022781053b3f81a75ec98cc0408e8aabe746"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "GA4 events filtered to only show 'page_view' events. Pivots common event parameters into separate columns. Identifies the first and last pageview in the 'is_entrance' and 'is_exit' columns.", "columns": {"page_location": {"name": "page_location", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/events/stg_ga4__event_page_view.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.5479212, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view`", "raw_code": "with page_view_with_params as (\n   select * except(page_engagement_key),\n      {{ ga4.unnest_key('event_params', 'entrances',  'int_value') }},\n      {{ ga4.unnest_key('event_params', 'value', 'float_value') }},\n      case when split(split(page_location,'/')[safe_ordinal(4)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(4)],'?')[safe_ordinal(1)]) end as pagepath_level_1,\n      case when split(split(page_location,'/')[safe_ordinal(5)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(5)],'?')[safe_ordinal(1)]) end as pagepath_level_2,\n      case when split(split(page_location,'/')[safe_ordinal(6)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(6)],'?')[safe_ordinal(1)]) end as pagepath_level_3,\n      case when split(split(page_location,'/')[safe_ordinal(7)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(7)],'?')[safe_ordinal(1)]) end as pagepath_level_4,\n      to_base64(md5(concat(session_key, page_location))) as page_engagement_key\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"page_view_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"page_view_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}    \n where event_name = 'page_view'\n)\nselect *\nfrom page_view_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_page_view.sql", "compiled": true, "compiled_code": "with page_view_with_params as (\n   select * except(page_engagement_key),\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.float_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    ,\n      case when split(split(page_location,'/')[safe_ordinal(4)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(4)],'?')[safe_ordinal(1)]) end as pagepath_level_1,\n      case when split(split(page_location,'/')[safe_ordinal(5)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(5)],'?')[safe_ordinal(1)]) end as pagepath_level_2,\n      case when split(split(page_location,'/')[safe_ordinal(6)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(6)],'?')[safe_ordinal(1)]) end as pagepath_level_3,\n      case when split(split(page_location,'/')[safe_ordinal(7)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(7)],'?')[safe_ordinal(1)]) end as pagepath_level_4,\n      to_base64(md5(concat(session_key, page_location))) as page_engagement_key\n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'page_view'\n)\nselect *\nfrom page_view_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_file_download": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_file_download", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_file_download.sql", "original_file_path": "models/staging/events/stg_ga4__event_file_download.sql", "unique_id": "model.ga4.stg_ga4__event_file_download", "fqn": ["ga4", "staging", "events", "stg_ga4__event_file_download"], "alias": "stg_ga4__event_file_download", "checksum": {"name": "sha256", "checksum": "c590c9171f709e764cbb83a0b480104fdbf8c3c1658a4640cc27b8066fc0ecd0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268179.0731196, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_file_download`", "raw_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en&ref_topic=9756175\n \n with event_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'entrances',  'int_value') }},\n      {{ ga4.unnest_key('event_params', 'value', 'float_value') }},\n      {{ ga4.unnest_key('event_params', 'file_extension') }},\n      {{ ga4.unnest_key('event_params', 'file_name') }},\n      {{ ga4.unnest_key('event_params', 'link_classes') }},\n      {{ ga4.unnest_key('event_params', 'link_domain') }},\n      {{ ga4.unnest_key('event_params', 'link_id') }},\n      {{ ga4.unnest_key('event_params', 'link_text') }},\n      {{ ga4.unnest_key('event_params', 'link_url') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"file_download_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"file_download_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}    \n where event_name = 'file_download'\n)\n\nselect * from event_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_file_download.sql", "compiled": true, "compiled_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en&ref_topic=9756175\n \n with event_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.float_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'file_extension') as \n    \n    file_extension\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'file_name') as \n    \n    file_name\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_classes') as \n    \n    link_classes\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_domain') as \n    \n    link_domain\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_id') as \n    \n    link_id\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_text') as \n    \n    link_text\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_url') as \n    \n    link_url\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'file_download'\n)\n\nselect * from event_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_first_visit": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_first_visit", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_first_visit.sql", "original_file_path": "models/staging/events/stg_ga4__event_first_visit.sql", "unique_id": "model.ga4.stg_ga4__event_first_visit", "fqn": ["ga4", "staging", "events", "stg_ga4__event_first_visit"], "alias": "stg_ga4__event_first_visit", "checksum": {"name": "sha256", "checksum": "0ca2b50c68308c8651896a27f7916c4a0ca31a72d4e6fa3eb4eaacfc82296cd6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268179.085452, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_first_visit`", "raw_code": "-- TODO: Unclear why there are first_visit events firing when the ga_session_number is >1. This might cause confusion.\n\nwith first_visit_with_params as (\n select \n    *,\n    {{ ga4.unnest_key('event_params', 'page_location', 'string_value', 'landing_page') }} \n    {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n    {% endif %}\n      {% if var(\"first_visit_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"first_visit_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}    \n where event_name = 'first_visit'\n)\n\nselect * from first_visit_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_first_visit.sql", "compiled": true, "compiled_code": "-- TODO: Unclear why there are first_visit events firing when the ga_session_number is >1. This might cause confusion.\n\nwith first_visit_with_params as (\n select \n    *,\n    (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_location') as \n    \n    landing_page\n     \n    \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'first_visit'\n)\n\nselect * from first_visit_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_user_engagement": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_user_engagement", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_user_engagement.sql", "original_file_path": "models/staging/events/stg_ga4__event_user_engagement.sql", "unique_id": "model.ga4.stg_ga4__event_user_engagement", "fqn": ["ga4", "staging", "events", "stg_ga4__event_user_engagement"], "alias": "stg_ga4__event_user_engagement", "checksum": {"name": "sha256", "checksum": "b9698313ae2c9161c70de15cde9bf678a31d0ee9bbbc86e6e781a3abb677613d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268179.093794, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_user_engagement`", "raw_code": "-- Event defined as \"when the app is in the foreground or webpage is in focus for at least one second.\"\n \n with user_engagement_with_params as (\n   select *\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"user_engagement_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"user_engagement_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}    \n where event_name = 'user_engagement'\n)\n\nselect * from user_engagement_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_user_engagement.sql", "compiled": true, "compiled_code": "-- Event defined as \"when the app is in the foreground or webpage is in focus for at least one second.\"\n \n with user_engagement_with_params as (\n   select *\n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'user_engagement'\n)\n\nselect * from user_engagement_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_click": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_click", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_click.sql", "original_file_path": "models/staging/events/stg_ga4__event_click.sql", "unique_id": "model.ga4.stg_ga4__event_click", "fqn": ["ga4", "staging", "events", "stg_ga4__event_click"], "alias": "stg_ga4__event_click", "checksum": {"name": "sha256", "checksum": "9db1b306c73d6121662efdedb8e096e8aa7b367d0ea4d90cad396c572f7232b3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268179.1014974, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_click`", "raw_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en \n \n with click_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'entrances',  'int_value') }},\n      {{ ga4.unnest_key('event_params', 'outbound') }},\n      {{ ga4.unnest_key('event_params', 'link_classes') }},\n      {{ ga4.unnest_key('event_params', 'link_domain') }},\n      {{ ga4.unnest_key('event_params', 'link_url') }},\n      {{ ga4.unnest_key('event_params', 'click_element') }},\n      {{ ga4.unnest_key('event_params', 'link_id') }},\n      {{ ga4.unnest_key('event_params', 'click_region') }},\n      {{ ga4.unnest_key('event_params', 'click_tag_name') }},\n      {{ ga4.unnest_key('event_params', 'click_url') }},\n      {{ ga4.unnest_key('event_params', 'file_name') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"click_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"click_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'click'\n)\n\nselect * from click_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_click.sql", "compiled": true, "compiled_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en \n \n with click_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'outbound') as \n    \n    outbound\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_classes') as \n    \n    link_classes\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_domain') as \n    \n    link_domain\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_url') as \n    \n    link_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_element') as \n    \n    click_element\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_id') as \n    \n    link_id\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_region') as \n    \n    click_region\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_tag_name') as \n    \n    click_tag_name\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_url') as \n    \n    click_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'file_name') as \n    \n    file_name\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n where event_name = 'click'\n)\n\nselect * from click_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_video_start": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_video_start", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_video_start.sql", "original_file_path": "models/staging/events/stg_ga4__event_video_start.sql", "unique_id": "model.ga4.stg_ga4__event_video_start", "fqn": ["ga4", "staging", "events", "stg_ga4__event_video_start"], "alias": "stg_ga4__event_video_start", "checksum": {"name": "sha256", "checksum": "4631773d84933cc8f1b3bdc5beb3e126bc86142c6391be4d2f42b2da3e56fda8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268179.114361, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_video_start`", "raw_code": "-- Defined as when the video starts playing. For embedded YouTube videos that have JS API support enabled. Collected by default via enhanced measurement.\n-- More info: https://support.google.com/firebase/answer/9234069?hl=en\n \n with video_start_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'video_current_time', 'int_value') }},\n      {{ ga4.unnest_key('event_params', 'video_duration', 'int_value') }},\n      {{ ga4.unnest_key('event_params', 'video_percent', 'int_value') }},\n      {{ ga4.unnest_key('event_params', 'video_url') }},\n      {{ ga4.unnest_key('event_params', 'video_provider') }},\n      {{ ga4.unnest_key('event_params', 'vide_title') }},\n      {{ ga4.unnest_key('event_params', 'visible') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"video_start_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"video_start_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}    \n where event_name = 'video_start'\n)\n\nselect * from video_start_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_video_start.sql", "compiled": true, "compiled_code": "-- Defined as when the video starts playing. For embedded YouTube videos that have JS API support enabled. Collected by default via enhanced measurement.\n-- More info: https://support.google.com/firebase/answer/9234069?hl=en\n \n with video_start_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_current_time') as \n    \n    video_current_time\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_duration') as \n    \n    video_duration\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_percent') as \n    \n    video_percent\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_url') as \n    \n    video_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_provider') as \n    \n    video_provider\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'vide_title') as \n    \n    vide_title\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'visible') as \n    \n    visible\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'video_start'\n)\n\nselect * from video_start_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_video_complete": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_video_complete", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_video_complete.sql", "original_file_path": "models/staging/events/stg_ga4__event_video_complete.sql", "unique_id": "model.ga4.stg_ga4__event_video_complete", "fqn": ["ga4", "staging", "events", "stg_ga4__event_video_complete"], "alias": "stg_ga4__event_video_complete", "checksum": {"name": "sha256", "checksum": "2ae1d6f1fccb4d843e71954cd0dbcad303739b1a3abf72922de61b80a477cc4f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268179.1255279, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_video_complete`", "raw_code": "-- Defined as when the video ends. For embedded YouTube videos that have JS API support enabled. Collected by default via enhanced measurement.\n-- More info: https://support.google.com/firebase/answer/9234069?hl=en\n \n with video_complete_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'video_current_time', 'int_value') }},\n      {{ ga4.unnest_key('event_params', 'video_duration', 'int_value') }},\n      {{ ga4.unnest_key('event_params', 'video_percent', 'int_value') }},\n      {{ ga4.unnest_key('event_params', 'video_url') }},\n      {{ ga4.unnest_key('event_params', 'video_provider') }},\n      {{ ga4.unnest_key('event_params', 'vide_title') }},\n      {{ ga4.unnest_key('event_params', 'visible') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"video_complete_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"video_complete_custom_parameters\") )}}\n      {% endif %}\n from {{ ref('stg_ga4__events') }}    \n where event_name = 'video_complete'\n)\n\nselect * from video_complete_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_video_complete.sql", "compiled": true, "compiled_code": "-- Defined as when the video ends. For embedded YouTube videos that have JS API support enabled. Collected by default via enhanced measurement.\n-- More info: https://support.google.com/firebase/answer/9234069?hl=en\n \n with video_complete_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_current_time') as \n    \n    video_current_time\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_duration') as \n    \n    video_duration\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_percent') as \n    \n    video_percent\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_url') as \n    \n    video_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_provider') as \n    \n    video_provider\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'vide_title') as \n    \n    vide_title\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'visible') as \n    \n    visible\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'video_complete'\n)\n\nselect * from video_complete_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_session_start": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_session_start", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_session_start.sql", "original_file_path": "models/staging/events/stg_ga4__event_session_start.sql", "unique_id": "model.ga4.stg_ga4__event_session_start", "fqn": ["ga4", "staging", "events", "stg_ga4__event_session_start"], "alias": "stg_ga4__event_session_start", "checksum": {"name": "sha256", "checksum": "31f1778020194612473878328f1e30488a70789283163f88c866019d6da9e273"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Events filtered to only show 'session_start' event. Unnests common event parameters into separate columns.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/events/stg_ga4__event_session_start.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.5471702, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_session_start`", "raw_code": "with session_start_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'entrances',  'int_value') }},\n      {{ ga4.unnest_key('event_params', 'value', 'float_value') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"session_start_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"session_start_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}    \n where event_name = 'session_start'\n)\n\nselect * from session_start_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_session_start.sql", "compiled": true, "compiled_code": "with session_start_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.float_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'session_start'\n)\n\nselect * from session_start_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_scroll": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_scroll", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_scroll.sql", "original_file_path": "models/staging/events/stg_ga4__event_scroll.sql", "unique_id": "model.ga4.stg_ga4__event_scroll", "fqn": ["ga4", "staging", "events", "stg_ga4__event_scroll"], "alias": "stg_ga4__event_scroll", "checksum": {"name": "sha256", "checksum": "2009cd1b1898f7515475b6a94e1674869ce415fde36e7af5a4cf2b3a1ecbacf5"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Staging model containing only 'scroll' events.  Includes the 'percent_scrolled' parameter. GA4's default implementation will only track the 90% scroll threshold", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/events/stg_ga4__event_scroll.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.5465598, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_scroll`", "raw_code": "with scroll_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'percent_scrolled', 'int_value') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"scroll_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"scroll_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}    \n where event_name = 'scroll'\n)\n\nselect * from scroll_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_scroll.sql", "compiled": true, "compiled_code": "with scroll_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'percent_scrolled') as \n    \n    percent_scrolled\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`    \n where event_name = 'scroll'\n)\n\nselect * from scroll_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.ga4.stg_ga4__event_view_search_results": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_view_search_results", "resource_type": "model", "package_name": "ga4", "path": "staging/events/stg_ga4__event_view_search_results.sql", "original_file_path": "models/staging/events/stg_ga4__event_view_search_results.sql", "unique_id": "model.ga4.stg_ga4__event_view_search_results", "fqn": ["ga4", "staging", "events", "stg_ga4__event_view_search_results"], "alias": "stg_ga4__event_view_search_results", "checksum": {"name": "sha256", "checksum": "6525988ba2b15a612a0de457617408c72ffdf54156893e51972e363eaa89a3ec"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268179.1536698, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_view_search_results`", "raw_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en \n \n with event_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'entrances',  'int_value') }},\n      {{ ga4.unnest_key('event_params', 'search_term') }},\n      {{ ga4.unnest_key('event_params', 'unique_search_term') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"view_search_results_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"view_search_results_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'view_search_results'\n)\n\nselect * from event_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_view_search_results.sql", "compiled": true, "compiled_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en \n \n with event_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'search_term') as \n    \n    search_term\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'unique_search_term') as \n    \n    unique_search_term\n    \n      \n      \n from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n where event_name = 'view_search_results'\n)\n\nselect * from event_with_params", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "test.ga4.page_location_with_gclid_is_cpc": {"database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "page_location_with_gclid_is_cpc", "resource_type": "test", "package_name": "ga4", "path": "page_location_with_gclid_is_cpc.sql", "original_file_path": "tests/page_location_with_gclid_is_cpc.sql", "unique_id": "test.ga4.page_location_with_gclid_is_cpc", "fqn": ["ga4", "page_location_with_gclid_is_cpc"], "alias": "page_location_with_gclid_is_cpc", "checksum": {"name": "sha256", "checksum": "11614025e321741d5ab17236f8babe583c7ecd2dab5ec323bbaf05ae0ee6f075"}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "warn"}, "created_at": 1732268179.3743353, "relation_name": null, "raw_code": "-- Google has changed the combination of parameters that are used to identify a CPC source in the past.\n-- In order to detect new changes, this test checks that a page_location with a gclid is classified as cpc.\n\n{{config(\n    severity = 'warn'\n)}}\nselect\n    count(event_source) as sources\n    , count(event_medium) as mediums\nfrom {{ref('stg_ga4__events')}}\nwhere original_page_location like '%gclid%'\n    and event_source != 'google'\n    and event_medium != 'cpc'\nhaving sources > 0\n    or mediums > 0", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/tests/page_location_with_gclid_is_cpc.sql", "compiled": true, "compiled_code": "-- Google has changed the combination of parameters that are used to identify a CPC source in the past.\n-- In order to detect new changes, this test checks that a page_location with a gclid is classified as cpc.\n\n\nselect\n    count(event_source) as sources\n    , count(event_medium) as mediums\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\nwhere original_page_location like '%gclid%'\n    and event_source != 'google'\n    and event_medium != 'cpc'\nhaving sources > 0\n    or mediums > 0", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}}, "seed.ga4.ga4_source_categories": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "ga4_source_categories", "resource_type": "seed", "package_name": "ga4", "path": "ga4_source_categories.csv", "original_file_path": "seeds/ga4_source_categories.csv", "unique_id": "seed.ga4.ga4_source_categories", "fqn": ["ga4", "ga4_source_categories"], "alias": "ga4_source_categories", "checksum": {"name": "sha256", "checksum": "babd2ed0a505f208b7530d3d679beec49e7604fedf3254417dc1efe198f69758"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268179.3883898, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`ga4_source_categories`", "raw_code": "", "root_path": "/home/runner/work/sado_analytics_services/sado_analytics_services/dbt_packages/ga4", "depends_on": {"macros": []}}, "model.fb.fct_fb__video_view_time_by_city": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_fb__video_view_time_by_city", "resource_type": "model", "package_name": "fb", "path": "marts/fct_fb__video_view_time_by_city.sql", "original_file_path": "models/marts/fct_fb__video_view_time_by_city.sql", "unique_id": "model.fb.fct_fb__video_view_time_by_city", "fqn": ["fb", "marts", "fct_fb__video_view_time_by_city"], "alias": "fct_fb__video_view_time_by_city", "checksum": {"name": "sha256", "checksum": "fa3008817812e78b4f4e03f9193439dc4deb68379af41020dcfb83a802b3c3c5"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook video view time breakdown by city", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/marts/fct_fb__video_view_time_by_city.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.5708535, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_view_time_by_city`", "raw_code": "{{\n    config(\n    materialized = 'table',\n    )\n}}\n\n{% set metrics_by_cities = [\n    \"post_video_view_time_by_region_id\", \n]%}\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        {{ ref('stg_fb__post_insights') }} p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            '{{ metrics_by_cities | join(\"','\") }}'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\njson_value(m,\"$.key\") as city,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest({{var(\"json_transform_schema\")}}.json_transform(metric_value)) as m\n)\n\n{{dbt_utils.deduplicate(\n    relation = 'unnested_data',\n    partition_by = 'metric_id,metric_time,city',\n    order_by = 'metric_time desc'\n)}}", "language": "sql", "refs": [{"name": "stg_fb__post_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": ["model.fb.stg_fb__post_insights"]}, "compiled_path": "target/compiled/fb/models/marts/fct_fb__video_view_time_by_city.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'post_video_view_time_by_region_id'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\njson_value(m,\"$.key\") as city,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,city\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.dim_fb__campaigns": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim_fb__campaigns", "resource_type": "model", "package_name": "fb", "path": "marts/dim_fb__campaigns.sql", "original_file_path": "models/marts/dim_fb__campaigns.sql", "unique_id": "model.fb.dim_fb__campaigns", "fqn": ["fb", "marts", "dim_fb__campaigns"], "alias": "dim_fb__campaigns", "checksum": {"name": "sha256", "checksum": "f15844f3a0b810e5ae96c311dd97a7eba3dfa007fa4a12c99d8792c8c48fb25b"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook ad dimension table, including metadata of the ad", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/marts/dim_fb__campaigns.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.5702481, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_fb__campaigns`", "raw_code": "{% set partition_range = \"order by date_start desc rows between unbounded preceding and unbounded following\"%}\n\nWITH selected_fields AS (\n    SELECT\n        account_id,\n        campaign_id,\n        adset_id,\n        ad_id,\n        campaign_name,\n        adset_name,\n        ad_name,\n        date_start,\n        {{dbt_utils.generate_surrogate_key([\"account_id\",\"campaign_id\",\"adset_id\",\"ad_id\"])}} as ad_key,\n    FROM\n        {{ ref('stg_fb__ad_insights') }}\n        qualify row_number() over (partition by account_id,campaign_id,adset_id,ad_id order by date_start desc) = 1\n),\ncurrent_campaign_name as (\n    select distinct\n    * except(campaign_name),\n    first_value(campaign_name) over (partition by campaign_id {{partition_range}}) as campaign_name,\n    from selected_fields\n),\ncurrent_adset_name as (\n    select distinct\n    * except(adset_name),\n    first_value(adset_name) over (partition by campaign_id, adset_id {{partition_range}}) as adset_name,\n    from current_campaign_name\n),\ncurrent_ad_name as (\n    select distinct\n    * except(ad_name),\n    first_value(ad_name) over (partition by campaign_id, adset_id,ad_id {{partition_range}}) as ad_name,\n    from current_adset_name\n)\nselect a.* except(date_start), \nacc.account_name,\nfrom current_ad_name a\nleft join {{ref('stg_fb__ad_accounts')}} acc on a.account_id = acc.account_id", "language": "sql", "refs": [{"name": "stg_fb__ad_insights", "package": null, "version": null}, {"name": "stg_fb__ad_accounts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.fb.stg_fb__ad_insights", "model.fb.stg_fb__ad_accounts"]}, "compiled_path": "target/compiled/fb/models/marts/dim_fb__campaigns.sql", "compiled": true, "compiled_code": "\n\nWITH selected_fields AS (\n    SELECT\n        account_id,\n        campaign_id,\n        adset_id,\n        ad_id,\n        campaign_name,\n        adset_name,\n        ad_name,\n        date_start,\n        to_hex(md5(cast(coalesce(cast(account_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(adset_id as STRING), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ad_id as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) as ad_key,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_insights`\n        qualify row_number() over (partition by account_id,campaign_id,adset_id,ad_id order by date_start desc) = 1\n),\ncurrent_campaign_name as (\n    select distinct\n    * except(campaign_name),\n    first_value(campaign_name) over (partition by campaign_id order by date_start desc rows between unbounded preceding and unbounded following) as campaign_name,\n    from selected_fields\n),\ncurrent_adset_name as (\n    select distinct\n    * except(adset_name),\n    first_value(adset_name) over (partition by campaign_id, adset_id order by date_start desc rows between unbounded preceding and unbounded following) as adset_name,\n    from current_campaign_name\n),\ncurrent_ad_name as (\n    select distinct\n    * except(ad_name),\n    first_value(ad_name) over (partition by campaign_id, adset_id,ad_id order by date_start desc rows between unbounded preceding and unbounded following) as ad_name,\n    from current_adset_name\n)\nselect a.* except(date_start), \nacc.account_name,\nfrom current_ad_name a\nleft join `agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_accounts` acc on a.account_id = acc.account_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.fct_fb__page_impressions_by_city": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_fb__page_impressions_by_city", "resource_type": "model", "package_name": "fb", "path": "marts/fct_fb__page_impressions_by_city.sql", "original_file_path": "models/marts/fct_fb__page_impressions_by_city.sql", "unique_id": "model.fb.fct_fb__page_impressions_by_city", "fqn": ["fb", "marts", "fct_fb__page_impressions_by_city"], "alias": "fct_fb__page_impressions_by_city", "checksum": {"name": "sha256", "checksum": "7f5043a92c58ae410912c628978d226b27088fecb84cb3cbb02032850562e0a8"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook page impressions breakdown by city", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/marts/fct_fb__page_impressions_by_city.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.5696578, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_impressions_by_city`", "raw_code": "{{\n    config(\n    materialized = 'table',\n    )\n}}\n\n{% set metrics_by_cities = [\n    \"page_impressions_by_city_unique\", \n]%}\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        {{ ref('stg_fb__page_insights') }} p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            '{{ metrics_by_cities | join(\"','\") }}'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\njson_value(m,\"$.key\") as city,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest({{var(\"json_transform_schema\")}}.json_transform(metric_value)) as m\n)\n\n{{dbt_utils.deduplicate(\n    relation = 'unnested_data',\n    partition_by = 'metric_id,metric_time,city',\n    order_by = 'metric_time desc'\n)}}", "language": "sql", "refs": [{"name": "stg_fb__page_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": ["model.fb.stg_fb__page_insights"]}, "compiled_path": "target/compiled/fb/models/marts/fct_fb__page_impressions_by_city.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__page_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'page_impressions_by_city_unique'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\njson_value(m,\"$.key\") as city,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,city\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.fct_fb__video_retention": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_fb__video_retention", "resource_type": "model", "package_name": "fb", "path": "marts/fct_fb__video_retention.sql", "original_file_path": "models/marts/fct_fb__video_retention.sql", "unique_id": "model.fb.fct_fb__video_retention", "fqn": ["fb", "marts", "fct_fb__video_retention"], "alias": "fct_fb__video_retention", "checksum": {"name": "sha256", "checksum": "e5960851be9118bb58ff71c13b35d1f296369a1f0b5fa515b8d11c56658df0c7"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook video retention data from Facebook Insights API", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/marts/fct_fb__video_retention.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.5684118, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_retention`", "raw_code": "{{\n    config(\n    materialized = 'table',\n    )\n}}\n\n{% set video_retention_metrics = [\n   \"post_video_retention_graph\",\n\"post_video_retention_graph_autoplayed\",\n\"post_video_retention_graph_clicked_to_play\",\n]%}\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        {{ ref('stg_fb__post_insights') }} p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            '{{ video_retention_metrics | join(\"','\") }}'\n        )\n),\nunnested_data as (\nselect e.* except(metric_value),\n    safe_cast(json_value(m,\"$.key\") as int64) as second,\n    safe_cast(json_value(m,\"$.value\") as float64) as metric_value,\nfrom extracted_metric_value e, \nunnest({{var(\"json_transform_schema\")}}.json_transform(metric_value)) as m\n)\n\n{{dbt_utils.deduplicate(\n    relation = 'unnested_data',\n    partition_by = 'metric_id,metric_time,second',\n    order_by = 'metric_time desc'\n)}}", "language": "sql", "refs": [{"name": "stg_fb__post_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": ["model.fb.stg_fb__post_insights"]}, "compiled_path": "target/compiled/fb/models/marts/fct_fb__video_retention.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'post_video_retention_graph','post_video_retention_graph_autoplayed','post_video_retention_graph_clicked_to_play'\n        )\n),\nunnested_data as (\nselect e.* except(metric_value),\n    safe_cast(json_value(m,\"$.key\") as int64) as second,\n    safe_cast(json_value(m,\"$.value\") as float64) as metric_value,\nfrom extracted_metric_value e, \nunnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,second\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.fct_fb__post_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_fb__post_insights", "resource_type": "model", "package_name": "fb", "path": "marts/fct_fb__post_insights.sql", "original_file_path": "models/marts/fct_fb__post_insights.sql", "unique_id": "model.fb.fct_fb__post_insights", "fqn": ["fb", "marts", "fct_fb__post_insights"], "alias": "fct_fb__post_insights", "checksum": {"name": "sha256", "checksum": "4cf599b333c9ca95af738b64560c2bf26f8598937797880aadafbeb3299602c6"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook post insights. Include all supported metrics for a post.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/marts/fct_fb__post_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.5677886, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__post_insights`", "raw_code": "{{\n    config(\n    materialized = 'table',\n    )\n}}\n\n{%- set excluded_metrics = [ \n\"post_activity_by_action_type\",\n\"post_activity_by_action_type_unique\",\n\"post_clicks_by_type\",\n\"post_clicks_by_type_unique\",\n\"post_impressions_by_paid_non_paid\",\n\"post_impressions_by_story_type\",\n\"post_impressions_by_story_type_unique\",\n\"post_negative_feedback_by_type\",\n\"post_negative_feedback_by_type_unique\",\n\"post_reactions_by_type_total\",\n\"post_video_retention_graph\",\n\"post_video_retention_graph_autoplayed\",\n\"post_video_retention_graph_clicked_to_play\",\n\"post_video_view_time_by_age_bucket_and_gender\",\n\"post_video_view_time_by_country_id\",\n\"post_video_view_time_by_distribution_type\",\n\"post_video_view_time_by_region_id\",\n\"post_video_views_by_distribution_type\",\n    ] -%}\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        date_add(date(TIMESTAMP(json_value(metric_values, '$.end_time'))), interval 1 day) AS metric_time,\n        safe_cast(json_value(metric_values, '$.value') AS float64) AS metric_value,\n    FROM\n        {{ ref('stg_fb__post_insights') }} p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name NOT IN (\n            '{{ excluded_metrics | join(\"','\") }}'\n        )\n) \n{{ dbt_utils.deduplicate(\n    relation = 'extracted_metric_value',\n    partition_by = 'metric_id,metric_time',\n    order_by = 'metric_time desc'\n) }}", "language": "sql", "refs": [{"name": "stg_fb__post_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": ["model.fb.stg_fb__post_insights"]}, "compiled_path": "target/compiled/fb/models/marts/fct_fb__post_insights.sql", "compiled": true, "compiled_code": "WITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        date_add(date(TIMESTAMP(json_value(metric_values, '$.end_time'))), interval 1 day) AS metric_time,\n        safe_cast(json_value(metric_values, '$.value') AS float64) AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name NOT IN (\n            'post_activity_by_action_type','post_activity_by_action_type_unique','post_clicks_by_type','post_clicks_by_type_unique','post_impressions_by_paid_non_paid','post_impressions_by_story_type','post_impressions_by_story_type_unique','post_negative_feedback_by_type','post_negative_feedback_by_type_unique','post_reactions_by_type_total','post_video_retention_graph','post_video_retention_graph_autoplayed','post_video_retention_graph_clicked_to_play','post_video_view_time_by_age_bucket_and_gender','post_video_view_time_by_country_id','post_video_view_time_by_distribution_type','post_video_view_time_by_region_id','post_video_views_by_distribution_type'\n        )\n) \nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from extracted_metric_value original\n        group by metric_id,metric_time\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.dim_fb__posts": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim_fb__posts", "resource_type": "model", "package_name": "fb", "path": "marts/dim_fb__posts.sql", "original_file_path": "models/marts/dim_fb__posts.sql", "unique_id": "model.fb.dim_fb__posts", "fqn": ["fb", "marts", "dim_fb__posts"], "alias": "dim_fb__posts", "checksum": {"name": "sha256", "checksum": "28dc6446acef7a5165ecc049b5a74bd2d8cee793aa87b62d78f196d6caec51e4"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook post dimension table, including metadata of the post", "columns": {"tag_line": {"name": "tag_line", "description": "First line of the text content", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "main_body": {"name": "main_body", "description": "The first part of the text content before the first delimeter", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "first_footer": {"name": "first_footer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "second_footer": {"name": "second_footer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "content_id": {"name": "content_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/marts/dim_fb__posts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.5717885, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim_fb__posts`", "raw_code": "WITH extracted_fields AS (\n    SELECT\n        *\n    EXCEPT(body_content),\n        SPLIT(body_content,\"\\n\") [safe_offset(0)] AS tag_line,\n        SPLIT(body_content,\"-----------\") [safe_offset(0)] AS main_body,\n        SPLIT(body_content,\"-----------\") [safe_offset(2)] AS first_footer,\n        SPLIT(body_content,\"-----------\") [safe_offset(4)] AS second_footer,\n    FROM\n        {{ ref(\"stg_fb__page_posts\") }}\n)\nSELECT\n    *,\n    {{ dbt_utils.generate_surrogate_key(['tag_line']) }} AS content_id,\nFROM\n    extracted_fields", "language": "sql", "refs": [{"name": "stg_fb__page_posts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key"], "nodes": ["model.fb.stg_fb__page_posts"]}, "compiled_path": "target/compiled/fb/models/marts/dim_fb__posts.sql", "compiled": true, "compiled_code": "WITH extracted_fields AS (\n    SELECT\n        *\n    EXCEPT(body_content),\n        SPLIT(body_content,\"\\n\") [safe_offset(0)] AS tag_line,\n        SPLIT(body_content,\"-----------\") [safe_offset(0)] AS main_body,\n        SPLIT(body_content,\"-----------\") [safe_offset(2)] AS first_footer,\n        SPLIT(body_content,\"-----------\") [safe_offset(4)] AS second_footer,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__page_posts`\n)\nSELECT\n    *,\n    to_hex(md5(cast(coalesce(cast(tag_line as STRING), '_dbt_utils_surrogate_key_null_') as STRING))) AS content_id,\nFROM\n    extracted_fields", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.fct_fb__video_view_time_by_age_gender": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_fb__video_view_time_by_age_gender", "resource_type": "model", "package_name": "fb", "path": "marts/fct_fb__video_view_time_by_age_gender.sql", "original_file_path": "models/marts/fct_fb__video_view_time_by_age_gender.sql", "unique_id": "model.fb.fct_fb__video_view_time_by_age_gender", "fqn": ["fb", "marts", "fct_fb__video_view_time_by_age_gender"], "alias": "fct_fb__video_view_time_by_age_gender", "checksum": {"name": "sha256", "checksum": "fd3b6793fe1805c6a89576d24edfb93dcd2ebe28553d50dcdac740f8a1e159cd"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook video view time breakdown by age and gender", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/marts/fct_fb__video_view_time_by_age_gender.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.5729973, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__video_view_time_by_age_gender`", "raw_code": "{{\n    config(\n    materialized = 'table',\n    )\n}}\n\n{% set metrics_by_demographic_groups = [\n    \"post_video_view_time_by_age_bucket_and_gender\", \n]%}\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        {{ ref('stg_fb__post_insights') }} p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            '{{ metrics_by_demographic_groups | join(\"','\") }}'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\ncase split(json_value(m,\"$.key\"),\".\")[safe_offset(0)] \n    when \"F\" then \"Female\" \n    when 'M' then 'Male' \n    when 'U' then 'Unknown' \n    end as gender_group,\nsplit(json_value(m,\"$.key\"),\".\")[safe_offset(1)] as age_group,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest({{var(\"json_transform_schema\")}}.json_transform(metric_value)) as m\n)\n\n{{dbt_utils.deduplicate(\n    relation = 'unnested_data',\n    partition_by = 'metric_id,metric_time,gender_group,age_group',\n    order_by = 'metric_time desc'\n)}}", "language": "sql", "refs": [{"name": "stg_fb__post_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": ["model.fb.stg_fb__post_insights"]}, "compiled_path": "target/compiled/fb/models/marts/fct_fb__video_view_time_by_age_gender.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'post_video_view_time_by_age_bucket_and_gender'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\ncase split(json_value(m,\"$.key\"),\".\")[safe_offset(0)] \n    when \"F\" then \"Female\" \n    when 'M' then 'Male' \n    when 'U' then 'Unknown' \n    end as gender_group,\nsplit(json_value(m,\"$.key\"),\".\")[safe_offset(1)] as age_group,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,gender_group,age_group\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.fct_fb__page_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_fb__page_insights", "resource_type": "model", "package_name": "fb", "path": "marts/fct_fb__page_insights.sql", "original_file_path": "models/marts/fct_fb__page_insights.sql", "unique_id": "model.fb.fct_fb__page_insights", "fqn": ["fb", "marts", "fct_fb__page_insights"], "alias": "fct_fb__page_insights", "checksum": {"name": "sha256", "checksum": "d0243ba0c066c0eee0da13808f39d217690f375635e66a031cdc693d4aadca58"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook page insights", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/marts/fct_fb__page_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.5723917, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_insights`", "raw_code": "{{\n    config(\n    materialized = 'table',\n    )\n}}\n\n\n{%- set excluded_metrics = [ \n    \"page_actions_post_reactions_total\", \n    \"page_consumptions_by_consumption_type_unique\", \n    \"page_consumptions_by_consumption_type\", \n    \"page_cta_clicks_logged_in_total\", \n    \"page_cta_clicks_logged_in_unique\", \n    \"page_fan_adds_by_paid_non_paid_unique\", \n    \"page_fans_city\", \n    \"page_fans_country\", \n    \"page_fans_locale\"\n    \"page_fans_online\", \n    \"page_impressions_by_age_gender_unique\", \n    \"page_impressions_by_city_unique\", \n    \"page_impressions_by_country_unique\", \n    \"page_impressions_by_locale_unique\", \n    \"page_impressions_by_story_type_unique\", \n    \"page_impressions_by_story_type\", \n    \"page_impressions_viral_frequency_distribution\", \n    \"page_negative_feedback_by_type_unique\", \n    \"page_negative_feedback_by_type\", \n    \"page_video_views_by_paid_non_paid\", \n    \"page_video_views_by_uploaded_hosted\", \n    ] -%}\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        safe_cast(json_value(metric_values, '$.value') AS float64) AS metric_value,\n    FROM\n        {{ ref('stg_fb__page_insights') }} p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name NOT IN (\n            '{{ excluded_metrics | join(\"','\") }}'\n        )\n) \n{{ dbt_utils.deduplicate(\n    relation = 'extracted_metric_value',\n    partition_by = 'metric_id,metric_time',\n    order_by = 'metric_time desc'\n) }}", "language": "sql", "refs": [{"name": "stg_fb__page_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": ["model.fb.stg_fb__page_insights"]}, "compiled_path": "target/compiled/fb/models/marts/fct_fb__page_insights.sql", "compiled": true, "compiled_code": "WITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        safe_cast(json_value(metric_values, '$.value') AS float64) AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__page_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name NOT IN (\n            'page_actions_post_reactions_total','page_consumptions_by_consumption_type_unique','page_consumptions_by_consumption_type','page_cta_clicks_logged_in_total','page_cta_clicks_logged_in_unique','page_fan_adds_by_paid_non_paid_unique','page_fans_city','page_fans_country','page_fans_localepage_fans_online','page_impressions_by_age_gender_unique','page_impressions_by_city_unique','page_impressions_by_country_unique','page_impressions_by_locale_unique','page_impressions_by_story_type_unique','page_impressions_by_story_type','page_impressions_viral_frequency_distribution','page_negative_feedback_by_type_unique','page_negative_feedback_by_type','page_video_views_by_paid_non_paid','page_video_views_by_uploaded_hosted'\n        )\n) \nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from extracted_metric_value original\n        group by metric_id,metric_time\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.fct_fb__page_impressions_by_age_gender": {"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_fb__page_impressions_by_age_gender", "resource_type": "model", "package_name": "fb", "path": "marts/fct_fb__page_impressions_by_age_gender.sql", "original_file_path": "models/marts/fct_fb__page_impressions_by_age_gender.sql", "unique_id": "model.fb.fct_fb__page_impressions_by_age_gender", "fqn": ["fb", "marts", "fct_fb__page_impressions_by_age_gender"], "alias": "fct_fb__page_impressions_by_age_gender", "checksum": {"name": "sha256", "checksum": "663d1f0d771ea57d62fdbdf466d7e94ee6429acf9bc7a23f5f975d0e51c9d200"}, "config": {"enabled": true, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook page impressions breakdown by age and gender", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/marts/fct_fb__page_impressions_by_age_gender.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing"}, "created_at": 1732268181.5690231, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_fb__page_impressions_by_age_gender`", "raw_code": "{{\n    config(\n    materialized = 'table',\n    )\n}}\n\n{% set metrics_by_demographic_groups = [\n    \"page_impressions_by_age_gender_unique\", \n]%}\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        {{ ref('stg_fb__page_insights') }} p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            '{{ metrics_by_demographic_groups | join(\"','\") }}'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\ncase split(json_value(m,\"$.key\"),\".\")[safe_offset(0)] \nwhen \"F\" then \"Female\" \nwhen 'M' then 'Male' \nwhen 'U' then 'Unknown' \nend as gender_group,\nsplit(json_value(m,\"$.key\"),\".\")[safe_offset(1)] as age_group,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest({{var(\"json_transform_schema\")}}.json_transform(metric_value)) as m\n)\n\n{{dbt_utils.deduplicate(\n    relation = 'unnested_data',\n    partition_by = 'metric_id,metric_time,gender_group,age_group',\n    order_by = 'metric_time desc'\n)}}", "language": "sql", "refs": [{"name": "stg_fb__page_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": ["model.fb.stg_fb__page_insights"]}, "compiled_path": "target/compiled/fb/models/marts/fct_fb__page_impressions_by_age_gender.sql", "compiled": true, "compiled_code": "\n\n\n\nWITH extracted_metric_value AS (\n    SELECT\n        p.* EXCEPT(VALUES,last_sync_at),\n        TIMESTAMP(json_value(metric_values, '$.end_time')) AS metric_time,\n        json_extract(metric_values, '$.value') AS metric_value,\n    FROM\n        `agile-scheme-394814`.`dbt_prod`.`stg_fb__page_insights` p,\n        unnest(VALUES) AS metric_values\n    WHERE\n        metric_name IN (\n            'page_impressions_by_age_gender_unique'\n        )\n),\nunnested_data as (\n    select e.* except(metric_value),\ncase split(json_value(m,\"$.key\"),\".\")[safe_offset(0)] \nwhen \"F\" then \"Female\" \nwhen 'M' then 'Male' \nwhen 'U' then 'Unknown' \nend as gender_group,\nsplit(json_value(m,\"$.key\"),\".\")[safe_offset(1)] as age_group,\njson_value(m,\"$.value\") as metric_value,\nfrom extracted_metric_value e, unnest(analytics.json_transform(metric_value)) as m\n)\n\nselect unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by metric_time desc\n                limit 1\n            )[offset(0)] unique\n        from unnested_data original\n        group by metric_id,metric_time,gender_group,age_group\n    )", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.stg_fb__page_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_fb__page_insights", "resource_type": "model", "package_name": "fb", "path": "staging/stg_fb__page_insights.sql", "original_file_path": "models/staging/stg_fb__page_insights.sql", "unique_id": "model.fb.stg_fb__page_insights", "fqn": ["fb", "staging", "stg_fb__page_insights"], "alias": "stg_fb__page_insights", "checksum": {"name": "sha256", "checksum": "9c8f83be25529f1f6883fccf2eee987f7d171ca725127ad28989642ebbde1543"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/staging/stg_fb__page_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.574177, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__page_insights`", "raw_code": "with deduplicate as (\n    {{dbt_utils.deduplicate(\n        relation=source('fb','page_insights'),\n        partition_by = \"id\",\n        order_by=\"_batched_at desc\"\n    )}}\n)\nselect\n    json_value(data,'$.id') as metric_id,\n    split(json_value(data,'$.id'),\"/\")[safe_offset(0)] as page_id,\n    json_value(data,'$.name') as metric_name,\n    json_value(data,'$.period') as aggregate_period,\n    json_value(data,'$.title') as metric_title,\n    json_value(data,'$.description') as metric_description,\n    json_extract_array(data,'$.values') as values,\n    _batched_at as last_sync_at,\nfrom deduplicate", "language": "sql", "refs": [], "sources": [["fb", "page_insights"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.fb.fb.page_insights"]}, "compiled_path": "target/compiled/fb/models/staging/stg_fb__page_insights.sql", "compiled": true, "compiled_code": "with deduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_page_insights__*` original\n        group by id\n    )\n)\nselect\n    json_value(data,'$.id') as metric_id,\n    split(json_value(data,'$.id'),\"/\")[safe_offset(0)] as page_id,\n    json_value(data,'$.name') as metric_name,\n    json_value(data,'$.period') as aggregate_period,\n    json_value(data,'$.title') as metric_title,\n    json_value(data,'$.description') as metric_description,\n    json_extract_array(data,'$.values') as values,\n    _batched_at as last_sync_at,\nfrom deduplicate", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.stg_fb__page_posts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_fb__page_posts", "resource_type": "model", "package_name": "fb", "path": "staging/stg_fb__page_posts.sql", "original_file_path": "models/staging/stg_fb__page_posts.sql", "unique_id": "model.fb.stg_fb__page_posts", "fqn": ["fb", "staging", "stg_fb__page_posts"], "alias": "stg_fb__page_posts", "checksum": {"name": "sha256", "checksum": "495d175e20e4704cd9935c12f21fec64e52e914cd2779675379e8c09e7b32229"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/staging/stg_fb__page_posts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.5736005, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__page_posts`", "raw_code": "with deduplicate as (\n    {{dbt_utils.deduplicate(\n        relation=source('fb','page_posts'),\n        partition_by= \"json_value(data,'$.id')\",\n        order_by= \"_batched_at desc\"\n    )}}\n)\nselect \n  json_value(data,'$.id') as post_id,\n  split(json_value(data,'$.id'),'_')[safe_offset(0)] as page_id,\n  json_value(data,'$.message') as body_content,\n  timestamp(json_value(data,'$.created_time')) as created_time,\n  json_value(data,'$.permalink_url') as permalink_url,\n  from deduplicate", "language": "sql", "refs": [], "sources": [["fb", "page_posts"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.fb.fb.page_posts"]}, "compiled_path": "target/compiled/fb/models/staging/stg_fb__page_posts.sql", "compiled": true, "compiled_code": "with deduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_page_posts__*` original\n        group by json_value(data,'$.id')\n    )\n)\nselect \n  json_value(data,'$.id') as post_id,\n  split(json_value(data,'$.id'),'_')[safe_offset(0)] as page_id,\n  json_value(data,'$.message') as body_content,\n  timestamp(json_value(data,'$.created_time')) as created_time,\n  json_value(data,'$.permalink_url') as permalink_url,\n  from deduplicate", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.stg_fb__post_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_fb__post_insights", "resource_type": "model", "package_name": "fb", "path": "staging/stg_fb__post_insights.sql", "original_file_path": "models/staging/stg_fb__post_insights.sql", "unique_id": "model.fb.stg_fb__post_insights", "fqn": ["fb", "staging", "stg_fb__post_insights"], "alias": "stg_fb__post_insights", "checksum": {"name": "sha256", "checksum": "f39f599e9e713a057b6b4679558648f619cb8577b1d9d33269e2bd78c09a47af"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/staging/stg_fb__post_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.5815086, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__post_insights`", "raw_code": "with deduplicate as (\n    {{dbt_utils.deduplicate(\n        relation=source('fb','post_insights'),\n        partition_by = \"id\",\n        order_by=\"_batched_at desc\"\n    )}}\n)\nselect\n    json_value(data,'$.id') as metric_id,\n    split(json_value(data,'$.id'),\"/\")[safe_offset(0)] as post_id,\n    split(split(json_value(data,'$.id'),\"/\")[safe_offset(0)],\"_\")[safe_offset(0)] as page_id,\n    json_value(data,'$.name') as metric_name,\n    json_value(data,'$.period') as aggregate_period,\n    json_value(data,'$.title') as metric_title,\n    json_value(data,'$.description') as metric_description,\n    json_extract_array(data,'$.values') as values,\n    _batched_at as last_sync_at,\nfrom deduplicate", "language": "sql", "refs": [], "sources": [["fb", "post_insights"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.fb.fb.post_insights"]}, "compiled_path": "target/compiled/fb/models/staging/stg_fb__post_insights.sql", "compiled": true, "compiled_code": "with deduplicate as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_post_insights__*` original\n        group by id\n    )\n)\nselect\n    json_value(data,'$.id') as metric_id,\n    split(json_value(data,'$.id'),\"/\")[safe_offset(0)] as post_id,\n    split(split(json_value(data,'$.id'),\"/\")[safe_offset(0)],\"_\")[safe_offset(0)] as page_id,\n    json_value(data,'$.name') as metric_name,\n    json_value(data,'$.period') as aggregate_period,\n    json_value(data,'$.title') as metric_title,\n    json_value(data,'$.description') as metric_description,\n    json_extract_array(data,'$.values') as values,\n    _batched_at as last_sync_at,\nfrom deduplicate", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.stg_fb__ad_accounts": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_fb__ad_accounts", "resource_type": "model", "package_name": "fb", "path": "staging/stg_fb__ad_accounts.sql", "original_file_path": "models/staging/stg_fb__ad_accounts.sql", "unique_id": "model.fb.stg_fb__ad_accounts", "fqn": ["fb", "staging", "stg_fb__ad_accounts"], "alias": "stg_fb__ad_accounts", "checksum": {"name": "sha256", "checksum": "be41a22af54483cc385ce1bb0030a2f6a3f6e747e7736fa020eef30c2aa3844c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/staging/stg_fb__ad_accounts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.583246, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_accounts`", "raw_code": "with source as (\n    {{dbt_utils.deduplicate(relation = source('fb', 'ad_accounts'), partition_by= \"json_value(data,'$.id')\", order_by=\"_batched_at desc\")}}\n)\n\nselect \n    safe_cast(json_value(data,'$.account_status') as bool) as is_active,\n    json_value(data,'$.name') as account_name,\n    json_value(data,'$.id') as account_id,\n    regexp_extract(json_value(data,'$.id'),r'_(\\d+)') as id,\n    json_value(data,'$.owner') as bm_id,\n    json_value(data,'$.business_name') as business_name,\n    json_value(data,'$.currency') as currency,\n    safe_cast( json_value(data,'$.is_personal') as bool) as is_personal,\n    safe_cast(json_value(data,'$.age') as float64) as age,\n    safe_cast(json_value(data,'$.spend_cap') as float64) as spend_cap,\n    safe_cast(json_value(data,'$.amount_spent') as float64) as amount_spent,\n    json_value(data,'$.timezone_name') as timezone_name,\n    timestamp(json_value(data,'$.created_time')) as created_time,\nfrom source", "language": "sql", "refs": [], "sources": [["fb", "ad_accounts"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.fb.fb.ad_accounts"]}, "compiled_path": "target/compiled/fb/models/staging/stg_fb__ad_accounts.sql", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_ad_accounts__*` original\n        group by json_value(data,'$.id')\n    )\n)\n\nselect \n    safe_cast(json_value(data,'$.account_status') as bool) as is_active,\n    json_value(data,'$.name') as account_name,\n    json_value(data,'$.id') as account_id,\n    regexp_extract(json_value(data,'$.id'),r'_(\\d+)') as id,\n    json_value(data,'$.owner') as bm_id,\n    json_value(data,'$.business_name') as business_name,\n    json_value(data,'$.currency') as currency,\n    safe_cast( json_value(data,'$.is_personal') as bool) as is_personal,\n    safe_cast(json_value(data,'$.age') as float64) as age,\n    safe_cast(json_value(data,'$.spend_cap') as float64) as spend_cap,\n    safe_cast(json_value(data,'$.amount_spent') as float64) as amount_spent,\n    json_value(data,'$.timezone_name') as timezone_name,\n    timestamp(json_value(data,'$.created_time')) as created_time,\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.stg_fb__ad_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_fb__ad_insights", "resource_type": "model", "package_name": "fb", "path": "staging/stg_fb__ad_insights.sql", "original_file_path": "models/staging/stg_fb__ad_insights.sql", "unique_id": "model.fb.stg_fb__ad_insights", "fqn": ["fb", "staging", "stg_fb__ad_insights"], "alias": "stg_fb__ad_insights", "checksum": {"name": "sha256", "checksum": "0d9330f6b2bd0f67c146ea35f1116ae0fe863183682668e159b958ab10abd4bd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/staging/stg_fb__ad_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns"}, "created_at": 1732268181.582677, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__ad_insights`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date_start',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  on_schema_change = 'sync_all_columns',\n) }}\n\n\n{%- set default__date_fields = [\"date_start\",\"date_stop\"] -%}\n{%- set default__dimensions = [\"account_id\",\"account_name\",\"campaign_id\",\"campaign_name\",\"adset_name\",\"adset_id\",\"ad_id\",\"ad_name\"] -%}\n{%- set default__metrics = [\"clicks\",\"cpc\",\"cpm\",\"ctr\",\"impressions\",\"reach\",\"spend\"] -%}\n{%- set default__interactive_actions = [ \"page_engagement\", \"post_engagement\", \"link_click\" ] -%}\n{%- set default__ecommerce_actions = [ \"add_to_cart\", \"onsite_conversion.purchase\", \"offsite_conversion.fb_pixel_purchase\", \"offline_conversion.purchase\", \"purchase\", ] -%}\n\nWITH \nsource as (\n    select * \n    from {{source('fb','ad_insights')}}\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval {{var(\"lookback_period\",3)}} day)\n),\n\ndeduplicate AS (\n    {{ dbt_utils.deduplicate(\n        relation = 'source',\n        partition_by = \"json_value(data,'$.account_id'),json_value(data,'$.campaign_id'),json_value(data,'$.adset_id'),json_value(data,'$.ad_id'),json_value(data,'$.date_start')\",\n        order_by = \"_batched_at desc\"\n    ) }}\n) \n\nselect \n    {%- for f in default__date_fields %}\n        DATE(json_value(data, '$.{{f}}')) AS {{ f }},\n    {%- endfor %}\n\n    {%- for f in default__dimensions %}\n        json_value(data,'$.{{f}}') AS {{ f }},\n    {%- endfor %}\n\n    {%- for f in default__metrics %}\n        CAST(json_value(DATA, '$.{{f}}') AS float64) AS {{ f }},\n    {%- endfor %}\n\n    {%- if var(\"is_interactive_actions_enabled\",true) %}\n        {%- for m in default__interactive_actions %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"is_ecommerce_actions_enabled\",true) %}\n        {%- for m in default__ecommerce_actions %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.action_values')\",'action_type',m,'value','','value','float64')}} ,\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"additional_ad_ecommerce_actions\",none) is not none %}\n        {%- for m in var(\"additional_ad_ecommerce_actions\") %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.action_values')\",'action_type',m,'value','','value','float64')}} ,\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"additional_ad_interact_actions\",none) is not none %}\n        {%- for m in var(\"additional_ad_interact_actions\") %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n    \nfrom deduplicate", "language": "sql", "refs": [], "sources": [["fb", "ad_insights"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate", "macro.fb.unnest_json_key"], "nodes": ["source.fb.fb.ad_insights"]}, "compiled_path": "target/compiled/fb/models/staging/stg_fb__ad_insights.sql", "compiled": true, "compiled_code": "WITH \nsource as (\n    select * \n    from `agile-scheme-394814`.`Facebook_v2`.`p_ad_insights__*`\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval 3 day)\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by json_value(data,'$.account_id'),json_value(data,'$.campaign_id'),json_value(data,'$.adset_id'),json_value(data,'$.ad_id'),json_value(data,'$.date_start')\n    )\n) \n\nselect\n        DATE(json_value(data, '$.date_start')) AS date_start,\n        DATE(json_value(data, '$.date_stop')) AS date_stop,\n        json_value(data,'$.account_id') AS account_id,\n        json_value(data,'$.account_name') AS account_name,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.adset_name') AS adset_name,\n        json_value(data,'$.adset_id') AS adset_id,\n        json_value(data,'$.ad_id') AS ad_id,\n        json_value(data,'$.ad_name') AS ad_name,\n        CAST(json_value(DATA, '$.clicks') AS float64) AS clicks,\n        CAST(json_value(DATA, '$.cpc') AS float64) AS cpc,\n        CAST(json_value(DATA, '$.cpm') AS float64) AS cpm,\n        CAST(json_value(DATA, '$.ctr') AS float64) AS ctr,\n        CAST(json_value(DATA, '$.impressions') AS float64) AS impressions,\n        CAST(json_value(DATA, '$.reach') AS float64) AS reach,\n        CAST(json_value(DATA, '$.spend') AS float64) AS spend,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'page_engagement'\n        ) as\n        no__page_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'post_engagement'\n        ) as\n        no__post_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'link_click'\n        ) as\n        no__link_click ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        add_to_cart__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        no__add_to_cart ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        onsite_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        no__onsite_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        offsite_conversion__fb_pixel_purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        no__offsite_conversion__fb_pixel_purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        offline_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        no__offline_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        no__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.messaging_conversation_started_7d'\n        ) as\n        no__onsite_conversion__messaging_conversation_started_7d ,\n    \nfrom deduplicate", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.stg_fb__pages": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_fb__pages", "resource_type": "model", "package_name": "fb", "path": "staging/stg_fb__pages.sql", "original_file_path": "models/staging/stg_fb__pages.sql", "unique_id": "model.fb.stg_fb__pages", "fqn": ["fb", "staging", "stg_fb__pages"], "alias": "stg_fb__pages", "checksum": {"name": "sha256", "checksum": "48e00707893bf7421cf85e11d36646ed787954b326e16021de00d3684d03e290"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/staging/stg_fb__pages.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view"}, "created_at": 1732268181.5821002, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__pages`", "raw_code": "with source as (\n    {{dbt_utils.deduplicate(relation = source('fb', 'pages'), partition_by= \"json_value(data,'$.id')\", order_by=\"_batched_at desc\")}}\n)\n\nselect \n    json_value(data,'$.id') as page_id,\n    json_value(data,'$.name') as page_name,\n    json_value(data,'$.about') as page_about,\n    json_value(data,'$.category') as page_category,\n    json_value(data,'$.global_brand_page_name') as global_brand_page_name,\n    json_value(data,'$.has_transitioned_to_new_page_experience') as has_transitioned_to_new_page_experience,\n    json_value(data,'$.link') as page_link,\n    json_value(data,'$.phone') as page_phone,\n    json_value(data,'$.website') as page_website,\n    json_value(data,'$.store_code') as store_code,\n    json_value(data,'$.store_number') as store_number,\n    json_value(data,'$.single_line_address') as single_line_address,\n    json_value(data,'$.business.id') as bm_id,\n    json_value(data,'$.business.name') as bm_name,\nfrom source", "language": "sql", "refs": [], "sources": [["fb", "pages"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": ["source.fb.fb.pages"]}, "compiled_path": "target/compiled/fb/models/staging/stg_fb__pages.sql", "compiled": true, "compiled_code": "with source as (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from `agile-scheme-394814`.`Facebook_v2`.`p_pages__*` original\n        group by json_value(data,'$.id')\n    )\n)\n\nselect \n    json_value(data,'$.id') as page_id,\n    json_value(data,'$.name') as page_name,\n    json_value(data,'$.about') as page_about,\n    json_value(data,'$.category') as page_category,\n    json_value(data,'$.global_brand_page_name') as global_brand_page_name,\n    json_value(data,'$.has_transitioned_to_new_page_experience') as has_transitioned_to_new_page_experience,\n    json_value(data,'$.link') as page_link,\n    json_value(data,'$.phone') as page_phone,\n    json_value(data,'$.website') as page_website,\n    json_value(data,'$.store_code') as store_code,\n    json_value(data,'$.store_number') as store_number,\n    json_value(data,'$.single_line_address') as single_line_address,\n    json_value(data,'$.business.id') as bm_id,\n    json_value(data,'$.business.name') as bm_name,\nfrom source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.stg_fb__age_gender_demographic": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_fb__age_gender_demographic", "resource_type": "model", "package_name": "fb", "path": "staging/additional_aggregation/stg_fb__age_gender_demographic.sql", "original_file_path": "models/staging/additional_aggregation/stg_fb__age_gender_demographic.sql", "unique_id": "model.fb.stg_fb__age_gender_demographic", "fqn": ["fb", "staging", "additional_aggregation", "stg_fb__age_gender_demographic"], "alias": "stg_fb__age_gender_demographic", "checksum": {"name": "sha256", "checksum": "2da2bcd29ce160ee21c9e7ec24686585bf8fe669b7acf2c13cd7ed70fd4e5c67"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook ad insights aggregated at campaign level, breakdown by age and gender", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/staging/additional_aggregation/stg_fb__age_gender_demographic.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns"}, "created_at": 1732268181.5838404, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__age_gender_demographic`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date_start',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  on_schema_change = 'sync_all_columns',\n) }}\n\n\n{%- set default__date_fields = [\"date_start\",\"date_stop\"] -%}\n{%- set default__dimensions = [\"account_id\",\"account_name\",\"campaign_id\",\"campaign_name\",\"age\",\"gender\"] -%}\n{%- set default__metrics = [\"clicks\",\"cpc\",\"cpm\",\"ctr\",\"impressions\",\"reach\",\"spend\"] -%}\n{%- set default__interactive_actions = [ \"page_engagement\", \"post_engagement\", \"link_click\" ] -%}\n{%- set default__ecommerce_actions = [ \"add_to_cart\", \"onsite_conversion.purchase\", \"offsite_conversion.fb_pixel_purchase\", \"offline_conversion.purchase\", \"purchase\", ] -%}\n\nWITH \nsource as (\n    select * \n    from {{source('fb','age_gender_demographic')}}\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval {{var(\"lookback_period\",3)}} day)\n),\n\ndeduplicate AS (\n    {{ dbt_utils.deduplicate(\n        relation = 'source',\n        partition_by = \"json_value(data,'$.account_id'),json_value(data,'$.campaign_id'),json_value(data,'$.gender'),json_value(data,'$.age'),json_value(data,'$.date_start')\",\n        order_by = \"_batched_at desc\"\n    ) }}\n) \nSELECT\n    {%- for f in default__date_fields %}\n        DATE(json_value(data, '$.{{f}}')) AS {{ f }},\n    {%- endfor %}\n\n    {%- for f in default__dimensions %}\n        json_value(data,'$.{{f}}') AS {{ f }},\n    {%- endfor %}\n\n    {%- for f in default__metrics %}\n        CAST(json_value(DATA, '$.{{f}}') AS float64) AS {{ f }},\n    {%- endfor %}\n\n    {%- if var(\"is_interactive_actions_enabled\",true) %}\n        {%- for m in default__interactive_actions %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"is_ecommerce_actions_enabled\",true) %}\n        {%- for m in default__ecommerce_actions %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.action_values')\",'action_type',m,'value','','value','float64')}} ,\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"additional_ad_ecommerce_actions\",none) is not none %}\n        {%- for m in var(\"additional_ad_ecommerce_actions\") %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.action_values')\",'action_type',m,'value','','value','float64')}} ,\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"additional_ad_interact_actions\",none) is not none %}\n        {%- for m in var(\"additional_ad_interact_actions\") %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\nFROM\n    source", "language": "sql", "refs": [], "sources": [["fb", "age_gender_demographic"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate", "macro.fb.unnest_json_key"], "nodes": ["source.fb.fb.age_gender_demographic"]}, "compiled_path": "target/compiled/fb/models/staging/additional_aggregation/stg_fb__age_gender_demographic.sql", "compiled": true, "compiled_code": "WITH \nsource as (\n    select * \n    from `agile-scheme-394814`.`Facebook_v2`.`p_age_gender_demographic__*`\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval 3 day)\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by json_value(data,'$.account_id'),json_value(data,'$.campaign_id'),json_value(data,'$.gender'),json_value(data,'$.age'),json_value(data,'$.date_start')\n    )\n) \nSELECT\n        DATE(json_value(data, '$.date_start')) AS date_start,\n        DATE(json_value(data, '$.date_stop')) AS date_stop,\n        json_value(data,'$.account_id') AS account_id,\n        json_value(data,'$.account_name') AS account_name,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        json_value(data,'$.age') AS age,\n        json_value(data,'$.gender') AS gender,\n        CAST(json_value(DATA, '$.clicks') AS float64) AS clicks,\n        CAST(json_value(DATA, '$.cpc') AS float64) AS cpc,\n        CAST(json_value(DATA, '$.cpm') AS float64) AS cpm,\n        CAST(json_value(DATA, '$.ctr') AS float64) AS ctr,\n        CAST(json_value(DATA, '$.impressions') AS float64) AS impressions,\n        CAST(json_value(DATA, '$.reach') AS float64) AS reach,\n        CAST(json_value(DATA, '$.spend') AS float64) AS spend,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'page_engagement'\n        ) as\n        no__page_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'post_engagement'\n        ) as\n        no__post_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'link_click'\n        ) as\n        no__link_click ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        add_to_cart__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        no__add_to_cart ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        onsite_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        no__onsite_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        offsite_conversion__fb_pixel_purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        no__offsite_conversion__fb_pixel_purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        offline_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        no__offline_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        no__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.messaging_conversation_started_7d'\n        ) as\n        no__onsite_conversion__messaging_conversation_started_7d ,\n\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.stg_fb__region_demographic": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_fb__region_demographic", "resource_type": "model", "package_name": "fb", "path": "staging/additional_aggregation/stg_fb__region_demographic.sql", "original_file_path": "models/staging/additional_aggregation/stg_fb__region_demographic.sql", "unique_id": "model.fb.stg_fb__region_demographic", "fqn": ["fb", "staging", "additional_aggregation", "stg_fb__region_demographic"], "alias": "stg_fb__region_demographic", "checksum": {"name": "sha256", "checksum": "2de74c21929ed43f93f1b186e12dbbeac887fe0b3fd346393a87380b706de903"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook ad insights aggregated at campaign level, breakdown by region", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/staging/additional_aggregation/stg_fb__region_demographic.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns"}, "created_at": 1732268181.5849938, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__region_demographic`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date_start',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  on_schema_change = 'sync_all_columns',\n) }}\n\n\n{%- set default__date_fields = [\"date_start\",\"date_stop\"] -%}\n{%- set default__dimensions = [\"account_id\",\"account_name\",\"region\",\"campaign_id\",\"campaign_name\"] -%}\n{%- set default__metrics = [\"clicks\",\"cpc\",\"cpm\",\"ctr\",\"impressions\",\"reach\",\"spend\"] -%}\n{%- set default__interactive_actions = [ \"page_engagement\", \"post_engagement\", \"link_click\" ] -%}\n{%- set default__ecommerce_actions = [ \"add_to_cart\", \"onsite_conversion.purchase\", \"offsite_conversion.fb_pixel_purchase\", \"offline_conversion.purchase\", \"purchase\", ] -%}\n\nWITH \nsource as (\n    select * \n    from {{source('fb','region_demographic')}}\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval {{var(\"lookback_period\",3)}} day)\n),\n\ndeduplicate AS (\n    {{ dbt_utils.deduplicate(\n        relation = 'source',\n        partition_by = \"json_value(data,'$.account_id'),json_value(data,'$.region'),json_value(data,'$.campaign_id'),json_value(data,'$.date_start')\",\n        order_by = \"_batched_at desc\"\n    ) }}\n) \n\nselect \n    {%- for f in default__date_fields %}\n        DATE(json_value(data, '$.{{f}}')) AS {{ f }},\n    {%- endfor %}\n\n    {%- for f in default__dimensions %}\n        json_value(data,'$.{{f}}') AS {{ f }},\n    {%- endfor %}\n\n    {%- for f in default__metrics %}\n        CAST(json_value(DATA, '$.{{f}}') AS float64) AS {{ f }},\n    {%- endfor %}\n\n    {%- if var(\"is_interactive_actions_enabled\",true) %}\n        {%- for m in default__interactive_actions %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"is_ecommerce_actions_enabled\",true) %}\n        {%- for m in default__ecommerce_actions %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.action_values')\",'action_type',m,'value','','value','float64')}} ,\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"additional_ad_ecommerce_actions\",none) is not none %}\n        {%- for m in var(\"additional_ad_ecommerce_actions\") %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.action_values')\",'action_type',m,'value','','value','float64')}} ,\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"additional_ad_interact_actions\",none) is not none %}\n        {%- for m in var(\"additional_ad_interact_actions\") %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n    \nfrom deduplicate", "language": "sql", "refs": [], "sources": [["fb", "region_demographic"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate", "macro.fb.unnest_json_key"], "nodes": ["source.fb.fb.region_demographic"]}, "compiled_path": "target/compiled/fb/models/staging/additional_aggregation/stg_fb__region_demographic.sql", "compiled": true, "compiled_code": "WITH \nsource as (\n    select * \n    from `agile-scheme-394814`.`Facebook_v2`.`p_region_demographic__*`\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval 3 day)\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by json_value(data,'$.account_id'),json_value(data,'$.region'),json_value(data,'$.campaign_id'),json_value(data,'$.date_start')\n    )\n) \n\nselect\n        DATE(json_value(data, '$.date_start')) AS date_start,\n        DATE(json_value(data, '$.date_stop')) AS date_stop,\n        json_value(data,'$.account_id') AS account_id,\n        json_value(data,'$.account_name') AS account_name,\n        json_value(data,'$.region') AS region,\n        json_value(data,'$.campaign_id') AS campaign_id,\n        json_value(data,'$.campaign_name') AS campaign_name,\n        CAST(json_value(DATA, '$.clicks') AS float64) AS clicks,\n        CAST(json_value(DATA, '$.cpc') AS float64) AS cpc,\n        CAST(json_value(DATA, '$.cpm') AS float64) AS cpm,\n        CAST(json_value(DATA, '$.ctr') AS float64) AS ctr,\n        CAST(json_value(DATA, '$.impressions') AS float64) AS impressions,\n        CAST(json_value(DATA, '$.reach') AS float64) AS reach,\n        CAST(json_value(DATA, '$.spend') AS float64) AS spend,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'page_engagement'\n        ) as\n        no__page_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'post_engagement'\n        ) as\n        no__post_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'link_click'\n        ) as\n        no__link_click ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        add_to_cart__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        no__add_to_cart ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        onsite_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        no__onsite_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        offsite_conversion__fb_pixel_purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        no__offsite_conversion__fb_pixel_purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        offline_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        no__offline_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        no__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.messaging_conversation_started_7d'\n        ) as\n        no__onsite_conversion__messaging_conversation_started_7d ,\n    \nfrom deduplicate", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.fb.stg_fb__account_insights": {"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_fb__account_insights", "resource_type": "model", "package_name": "fb", "path": "staging/additional_aggregation/stg_fb__account_insights.sql", "original_file_path": "models/staging/additional_aggregation/stg_fb__account_insights.sql", "unique_id": "model.fb.stg_fb__account_insights", "fqn": ["fb", "staging", "additional_aggregation", "stg_fb__account_insights"], "alias": "stg_fb__account_insights", "checksum": {"name": "sha256", "checksum": "13e434a3913b01578ab9a1fc7e0c43eb9834c0332a2c3eaccb6d50c77a19cb65"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Facebook ad insights aggregated at account level", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "fb://models/staging/additional_aggregation/stg_fb__account_insights.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns"}, "created_at": 1732268181.5844157, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_fb__account_insights`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date_start',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  on_schema_change = 'sync_all_columns',\n) }}\n\n\n{%- set default__date_fields = [\"date_start\",\"date_stop\"] -%}\n{%- set default__dimensions = [\"account_id\",\"account_name\"] -%}\n{%- set default__metrics = [\"clicks\",\"cpc\",\"cpm\",\"ctr\",\"impressions\",\"reach\",\"spend\"] -%}\n{%- set default__interactive_actions = [ \"page_engagement\", \"post_engagement\", \"link_click\" ] -%}\n{%- set default__ecommerce_actions = [ \"add_to_cart\", \"onsite_conversion.purchase\", \"offsite_conversion.fb_pixel_purchase\", \"offline_conversion.purchase\", \"purchase\", ] -%}\n\nWITH \nsource as (\n    select * \n    from {{source('fb','account_insights')}}\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval {{var(\"lookback_period\",3)}} day)\n),\n\ndeduplicate AS (\n    {{ dbt_utils.deduplicate(\n        relation = 'source',\n        partition_by = \"json_value(data,'$.account_id'),json_value(data,'$.date_start')\",\n        order_by = \"_batched_at desc\"\n    ) }}\n) \nSELECT\n    {%- for f in default__date_fields %}\n        DATE(json_value(data, '$.{{f}}')) AS {{ f }},\n    {%- endfor %}\n\n    {%- for f in default__dimensions %}\n        json_value(data,'$.{{f}}') AS {{ f }},\n    {%- endfor %}\n\n    {%- for f in default__metrics %}\n        CAST(json_value(DATA, '$.{{f}}') AS float64) AS {{ f }},\n    {%- endfor %}\n\n    {%- if var(\"is_interactive_actions_enabled\",true) %}\n        {%- for m in default__interactive_actions %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"is_ecommerce_actions_enabled\",true) %}\n        {%- for m in default__ecommerce_actions %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.action_values')\",'action_type',m,'value','','value','float64')}} ,\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"additional_ad_ecommerce_actions\",none) is not none %}\n        {%- for m in var(\"additional_ad_ecommerce_actions\") %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.action_values')\",'action_type',m,'value','','value','float64')}} ,\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\n    {%- if var(\"additional_ad_interact_actions\",none) is not none %}\n        {%- for m in var(\"additional_ad_interact_actions\") %}\n            {{fb.unnest_json_key(\"json_extract_array(data,'$.actions')\",'action_type',m,'value','no','','float64')}} ,\n        {%- endfor %}\n    {%-endif%}\n\nFROM\n    source", "language": "sql", "refs": [], "sources": [["fb", "account_insights"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate", "macro.fb.unnest_json_key"], "nodes": ["source.fb.fb.account_insights"]}, "compiled_path": "target/compiled/fb/models/staging/additional_aggregation/stg_fb__account_insights.sql", "compiled": true, "compiled_code": "WITH \nsource as (\n    select * \n    from `agile-scheme-394814`.`Facebook_v2`.`p_account_insights__*`\n    where parse_date('%Y%m%d',_TABLE_SUFFIX) > date_sub(current_date, interval 3 day)\n),\n\ndeduplicate AS (\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by _batched_at desc\n                limit 1\n            )[offset(0)] unique\n        from source original\n        group by json_value(data,'$.account_id'),json_value(data,'$.date_start')\n    )\n) \nSELECT\n        DATE(json_value(data, '$.date_start')) AS date_start,\n        DATE(json_value(data, '$.date_stop')) AS date_stop,\n        json_value(data,'$.account_id') AS account_id,\n        json_value(data,'$.account_name') AS account_name,\n        CAST(json_value(DATA, '$.clicks') AS float64) AS clicks,\n        CAST(json_value(DATA, '$.cpc') AS float64) AS cpc,\n        CAST(json_value(DATA, '$.cpm') AS float64) AS cpm,\n        CAST(json_value(DATA, '$.ctr') AS float64) AS ctr,\n        CAST(json_value(DATA, '$.impressions') AS float64) AS impressions,\n        CAST(json_value(DATA, '$.reach') AS float64) AS reach,\n        CAST(json_value(DATA, '$.spend') AS float64) AS spend,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'page_engagement'\n        ) as\n        no__page_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'post_engagement'\n        ) as\n        no__post_engagement ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'link_click'\n        ) as\n        no__link_click ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        add_to_cart__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'add_to_cart'\n        ) as\n        no__add_to_cart ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        onsite_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.purchase'\n        ) as\n        no__onsite_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        offsite_conversion__fb_pixel_purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offsite_conversion.fb_pixel_purchase'\n        ) as\n        no__offsite_conversion__fb_pixel_purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        offline_conversion__purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'offline_conversion.purchase'\n        ) as\n        no__offline_conversion__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.action_values')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        purchase__value ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'purchase'\n        ) as\n        no__purchase ,\n            (\n    select \n        safe_cast(json_value(a.value) as float64)\n    from unnest(json_extract_array(data,'$.actions')) as a\n        where json_value(a.action_type) = 'onsite_conversion.messaging_conversation_started_7d'\n        ) as\n        no__onsite_conversion__messaging_conversation_started_7d ,\n\nFROM\n    source", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_performance_date_start__ad_key.086a5acd08": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["date_start", "ad_key"], "model": "{{ get_where_subquery(ref('facebook_performance')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_facebook_performance_date_start__ad_key", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_a050d0a6a1340cc7f253d7a716d2261e.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_performance_date_start__ad_key.086a5acd08", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "dbt_utils_unique_combination_of_columns_facebook_performance_date_start__ad_key"], "alias": "dbt_utils_unique_combination_o_a050d0a6a1340cc7f253d7a716d2261e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_a050d0a6a1340cc7f253d7a716d2261e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_a050d0a6a1340cc7f253d7a716d2261e"}, "created_at": 1732268179.8037403, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_a050d0a6a1340cc7f253d7a716d2261e\") }}", "language": "sql", "refs": [{"name": "facebook_performance", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.facebook_performance"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/facebook_performance.yml/dbt_utils_unique_combination_o_a050d0a6a1340cc7f253d7a716d2261e.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        date_start, ad_key\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance`\n    group by date_start, ad_key\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.facebook_performance", "attached_node": "model.sado_analytics_services.facebook_performance"}, "test.sado_analytics_services.unique_dim__location_groups_local_page_code.ec23d72d30": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "local_page_code", "model": "{{ get_where_subquery(ref('dim__location_groups')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_dim__location_groups_local_page_code", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_dim__location_groups_local_page_code.sql", "original_file_path": "models/marts/marketing/facebook/dim__location_groups.yml", "unique_id": "test.sado_analytics_services.unique_dim__location_groups_local_page_code.ec23d72d30", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "unique_dim__location_groups_local_page_code"], "alias": "unique_dim__location_groups_local_page_code", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268179.8416173, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim__location_groups", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.dim__location_groups"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__location_groups.yml/unique_dim__location_groups_local_page_code.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select local_page_code as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim__location_groups`\n  where local_page_code is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "local_page_code", "file_key_name": "models.dim__location_groups", "attached_node": "model.sado_analytics_services.dim__location_groups"}, "test.sado_analytics_services.not_null_dim__location_groups_local_page_code.04c63063c8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "local_page_code", "model": "{{ get_where_subquery(ref('dim__location_groups')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_dim__location_groups_local_page_code", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_dim__location_groups_local_page_code.sql", "original_file_path": "models/marts/marketing/facebook/dim__location_groups.yml", "unique_id": "test.sado_analytics_services.not_null_dim__location_groups_local_page_code.04c63063c8", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "not_null_dim__location_groups_local_page_code"], "alias": "not_null_dim__location_groups_local_page_code", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268179.8437955, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim__location_groups", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.dim__location_groups"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__location_groups.yml/not_null_dim__location_groups_local_page_code.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect local_page_code\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`dim__location_groups`\nwhere local_page_code is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "local_page_code", "file_key_name": "models.dim__location_groups", "attached_node": "model.sado_analytics_services.dim__location_groups"}, "test.sado_analytics_services.not_null_facebook_performance__by_regions_row_id.150c8e7afb": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "row_id", "model": "{{ get_where_subquery(ref('facebook_performance__by_regions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_facebook_performance__by_regions_row_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_facebook_performance__by_regions_row_id.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance__by_regions.yml", "unique_id": "test.sado_analytics_services.not_null_facebook_performance__by_regions_row_id.150c8e7afb", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "not_null_facebook_performance__by_regions_row_id"], "alias": "not_null_facebook_performance__by_regions_row_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268179.905115, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "facebook_performance__by_regions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "row_id", "file_key_name": "models.facebook_performance__by_regions", "attached_node": "model.sado_analytics_services.facebook_performance__by_regions"}, "test.sado_analytics_services.unique_facebook_performance__by_regions_row_id.0700b95982": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "row_id", "model": "{{ get_where_subquery(ref('facebook_performance__by_regions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_facebook_performance__by_regions_row_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_facebook_performance__by_regions_row_id.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance__by_regions.yml", "unique_id": "test.sado_analytics_services.unique_facebook_performance__by_regions_row_id.0700b95982", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "unique_facebook_performance__by_regions_row_id"], "alias": "unique_facebook_performance__by_regions_row_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268179.907332, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "facebook_performance__by_regions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "row_id", "file_key_name": "models.facebook_performance__by_regions", "attached_node": "model.sado_analytics_services.facebook_performance__by_regions"}, "test.sado_analytics_services.not_null_facebook_performance__by_audience_row_id.6dbacdaafb": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "row_id", "model": "{{ get_where_subquery(ref('facebook_performance__by_audience')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_facebook_performance__by_audience_row_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_facebook_performance__by_audience_row_id.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance__by_audience.yml", "unique_id": "test.sado_analytics_services.not_null_facebook_performance__by_audience_row_id.6dbacdaafb", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "not_null_facebook_performance__by_audience_row_id"], "alias": "not_null_facebook_performance__by_audience_row_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268179.9117706, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "facebook_performance__by_audience", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "row_id", "file_key_name": "models.facebook_performance__by_audience", "attached_node": "model.sado_analytics_services.facebook_performance__by_audience"}, "test.sado_analytics_services.unique_facebook_performance__by_audience_row_id.027825ed59": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "row_id", "model": "{{ get_where_subquery(ref('facebook_performance__by_audience')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_facebook_performance__by_audience_row_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_facebook_performance__by_audience_row_id.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance__by_audience.yml", "unique_id": "test.sado_analytics_services.unique_facebook_performance__by_audience_row_id.027825ed59", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "unique_facebook_performance__by_audience_row_id"], "alias": "unique_facebook_performance__by_audience_row_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268179.9141681, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "facebook_performance__by_audience", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "row_id", "file_key_name": "models.facebook_performance__by_audience", "attached_node": "model.sado_analytics_services.facebook_performance__by_audience"}, "test.sado_analytics_services.not_null_dim__campaigns_ad_key.aa80a608f1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "ad_key", "model": "{{ get_where_subquery(ref('dim__campaigns')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_dim__campaigns_ad_key", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_dim__campaigns_ad_key.sql", "original_file_path": "models/marts/marketing/facebook/dim__campaigns.yml", "unique_id": "test.sado_analytics_services.not_null_dim__campaigns_ad_key.aa80a608f1", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "not_null_dim__campaigns_ad_key"], "alias": "not_null_dim__campaigns_ad_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268179.9590883, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.dim__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__campaigns.yml/not_null_dim__campaigns_ad_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_key\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`dim__campaigns`\nwhere ad_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "ad_key", "file_key_name": "models.dim__campaigns", "attached_node": "model.sado_analytics_services.dim__campaigns"}, "test.sado_analytics_services.unique_dim__campaigns_ad_key.125cd75bbe": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "ad_key", "model": "{{ get_where_subquery(ref('dim__campaigns')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_dim__campaigns_ad_key", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_dim__campaigns_ad_key.sql", "original_file_path": "models/marts/marketing/facebook/dim__campaigns.yml", "unique_id": "test.sado_analytics_services.unique_dim__campaigns_ad_key.125cd75bbe", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "unique_dim__campaigns_ad_key"], "alias": "unique_dim__campaigns_ad_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268179.9612217, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.dim__campaigns"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/facebook/dim__campaigns.yml/unique_dim__campaigns_ad_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ad_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim__campaigns`\n  where ad_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "ad_key", "file_key_name": "models.dim__campaigns", "attached_node": "model.sado_analytics_services.dim__campaigns"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_fct__sms_revenue_customer_id__transaction_date.74e3b79b6b": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["customer_id", "transaction_date"], "model": "{{ get_where_subquery(ref('fct__sms_revenue')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_fct__sms_revenue_customer_id__transaction_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_9d2b99db07b61c252d0bae45b7b07546.sql", "original_file_path": "models/marts/marketing/sms/fct__sms_revenue.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_fct__sms_revenue_customer_id__transaction_date.74e3b79b6b", "fqn": ["sado_analytics_services", "marts", "marketing", "sms", "dbt_utils_unique_combination_of_columns_fct__sms_revenue_customer_id__transaction_date"], "alias": "dbt_utils_unique_combination_o_9d2b99db07b61c252d0bae45b7b07546", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_9d2b99db07b61c252d0bae45b7b07546", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_9d2b99db07b61c252d0bae45b7b07546"}, "created_at": 1732268179.9842737, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_9d2b99db07b61c252d0bae45b7b07546\") }}", "language": "sql", "refs": [{"name": "fct__sms_revenue", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__sms_revenue"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/sms/fct__sms_revenue.yml/dbt_utils_unique_combination_o_9d2b99db07b61c252d0bae45b7b07546.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, transaction_date\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`fct__sms_revenue`\n    group by customer_id, transaction_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.fct__sms_revenue", "attached_node": "model.sado_analytics_services.fct__sms_revenue"}, "test.sado_analytics_services.not_null_engagements_details_engagement_id.ba4b05a1b3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('engagements_details')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_engagements_details_engagement_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_engagements_details_engagement_id.sql", "original_file_path": "models/marts/marketing/contact_center/engagements_details.yml", "unique_id": "test.sado_analytics_services.not_null_engagements_details_engagement_id.ba4b05a1b3", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "not_null_engagements_details_engagement_id"], "alias": "not_null_engagements_details_engagement_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.2166126, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "engagements_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "engagement_id", "file_key_name": "models.engagements_details", "attached_node": "model.sado_analytics_services.engagements_details"}, "test.sado_analytics_services.unique_engagements_details_engagement_id.fa02ef7234": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "engagement_id", "model": "{{ get_where_subquery(ref('engagements_details')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_engagements_details_engagement_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_engagements_details_engagement_id.sql", "original_file_path": "models/marts/marketing/contact_center/engagements_details.yml", "unique_id": "test.sado_analytics_services.unique_engagements_details_engagement_id.fa02ef7234", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "unique_engagements_details_engagement_id"], "alias": "unique_engagements_details_engagement_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.218836, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "engagements_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "engagement_id", "file_key_name": "models.engagements_details", "attached_node": "model.sado_analytics_services.engagements_details"}, "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('pancake_performance__by__users')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_pancake_performance__by__users_user_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_pancake_performance__by__users_user_id.sql", "original_file_path": "models/marts/marketing/contact_center/pancake_performance__by__users.yml", "unique_id": "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "not_null_pancake_performance__by__users_user_id"], "alias": "not_null_pancake_performance__by__users_user_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.2333615, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "pancake_performance__by__users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.pancake_performance__by__users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/pancake_performance__by__users.yml/not_null_pancake_performance__by__users_user_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `agile-scheme-394814`.`dbt_prod_marketing`.`pancake_performance__by__users`\nwhere user_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "user_id", "file_key_name": "models.pancake_performance__by__users", "attached_node": "model.sado_analytics_services.pancake_performance__by__users"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["user_id", "hour"], "model": "{{ get_where_subquery(ref('pancake_performance__by__users')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31.sql", "original_file_path": "models/marts/marketing/contact_center/pancake_performance__by__users.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour"], "alias": "dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31"}, "created_at": 1732268180.235497, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31\") }}", "language": "sql", "refs": [{"name": "pancake_performance__by__users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.pancake_performance__by__users"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/marketing/contact_center/pancake_performance__by__users.yml/dbt_utils_unique_combination_o_d384e5d849783430288c1c8c2e96ec31.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        user_id, hour\n    from `agile-scheme-394814`.`dbt_prod_marketing`.`pancake_performance__by__users`\n    group by user_id, hour\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.pancake_performance__by__users", "attached_node": "model.sado_analytics_services.pancake_performance__by__users"}, "test.sado_analytics_services.not_null_tickets_ticket_id.6d0b33ca1c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('tickets')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_tickets_ticket_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_tickets_ticket_id.sql", "original_file_path": "models/marts/marketing/contact_center/tickets.yml", "unique_id": "test.sado_analytics_services.not_null_tickets_ticket_id.6d0b33ca1c", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "not_null_tickets_ticket_id"], "alias": "not_null_tickets_ticket_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.2526388, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "tickets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "ticket_id", "file_key_name": "models.tickets", "attached_node": "model.sado_analytics_services.tickets"}, "test.sado_analytics_services.unique_tickets_ticket_id.7bb6098968": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('tickets')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_tickets_ticket_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_tickets_ticket_id.sql", "original_file_path": "models/marts/marketing/contact_center/tickets.yml", "unique_id": "test.sado_analytics_services.unique_tickets_ticket_id.7bb6098968", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "unique_tickets_ticket_id"], "alias": "unique_tickets_ticket_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.254765, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "tickets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "ticket_id", "file_key_name": "models.tickets", "attached_node": "model.sado_analytics_services.tickets"}, "test.sado_analytics_services.unique_dim__inventory_classes_class_code.e12511cf37": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "class_code", "model": "{{ get_where_subquery(ref('dim__inventory_classes')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_dim__inventory_classes_class_code", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_dim__inventory_classes_class_code.sql", "original_file_path": "models/marts/dimensions/dim__inventory_classes.yml", "unique_id": "test.sado_analytics_services.unique_dim__inventory_classes_class_code.e12511cf37", "fqn": ["sado_analytics_services", "marts", "dimensions", "unique_dim__inventory_classes_class_code"], "alias": "unique_dim__inventory_classes_class_code", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.272334, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim__inventory_classes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.dim__inventory_classes"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/dimensions/dim__inventory_classes.yml/unique_dim__inventory_classes_class_code.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select class_code as unique_field\n  from `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_classes`\n  where class_code is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "class_code", "file_key_name": "models.dim__inventory_classes", "attached_node": "model.sado_analytics_services.dim__inventory_classes"}, "test.sado_analytics_services.unique_dim__offline_stores_branch_id.f6e48f9b5a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "branch_id", "model": "{{ get_where_subquery(ref('dim__offline_stores')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_dim__offline_stores_branch_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_dim__offline_stores_branch_id.sql", "original_file_path": "models/marts/dimensions/dim__offline_stores.yml", "unique_id": "test.sado_analytics_services.unique_dim__offline_stores_branch_id.f6e48f9b5a", "fqn": ["sado_analytics_services", "marts", "dimensions", "unique_dim__offline_stores_branch_id"], "alias": "unique_dim__offline_stores_branch_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.2928007, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim__offline_stores", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "branch_id", "file_key_name": "models.dim__offline_stores", "attached_node": "model.sado_analytics_services.dim__offline_stores"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_dim__inventory_items_extended_code__kiotviet_product_id__nhanhvn_product_id.ae3a5bfc21": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["extended_code", "kiotviet_product_id", "nhanhvn_product_id"], "model": "{{ get_where_subquery(ref('dim__inventory_items')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_dim__inventory_items_extended_code__kiotviet_product_id__nhanhvn_product_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_e12e6deac8b7477a4faa74ab073b7fba.sql", "original_file_path": "models/marts/dimensions/dim__inventory_items.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_dim__inventory_items_extended_code__kiotviet_product_id__nhanhvn_product_id.ae3a5bfc21", "fqn": ["sado_analytics_services", "marts", "dimensions", "dbt_utils_unique_combination_of_columns_dim__inventory_items_extended_code__kiotviet_product_id__nhanhvn_product_id"], "alias": "dbt_utils_unique_combination_o_e12e6deac8b7477a4faa74ab073b7fba", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_e12e6deac8b7477a4faa74ab073b7fba", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_e12e6deac8b7477a4faa74ab073b7fba"}, "created_at": 1732268180.3053157, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_e12e6deac8b7477a4faa74ab073b7fba\") }}", "language": "sql", "refs": [{"name": "dim__inventory_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.dim__inventory_items"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/dimensions/dim__inventory_items.yml/dbt_utils_unique_combination_o_e12e6deac8b7477a4faa74ab073b7fba.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        extended_code, kiotviet_product_id, nhanhvn_product_id\n    from `agile-scheme-394814`.`dbt_prod_dimensions`.`dim__inventory_items`\n    group by extended_code, kiotviet_product_id, nhanhvn_product_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.dim__inventory_items", "attached_node": "model.sado_analytics_services.dim__inventory_items"}, "test.sado_analytics_services.not_null_rfm_movement_first_purchase.597a31a8ff": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "first_purchase", "model": "{{ get_where_subquery(ref('rfm_movement')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_rfm_movement_first_purchase", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_rfm_movement_first_purchase.sql", "original_file_path": "models/marts/sales/rfm_movement.yml", "unique_id": "test.sado_analytics_services.not_null_rfm_movement_first_purchase.597a31a8ff", "fqn": ["sado_analytics_services", "marts", "sales", "not_null_rfm_movement_first_purchase"], "alias": "not_null_rfm_movement_first_purchase", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.334559, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "rfm_movement", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.rfm_movement"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/rfm_movement.yml/not_null_rfm_movement_first_purchase.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_purchase\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\nwhere first_purchase is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "first_purchase", "file_key_name": "models.rfm_movement", "attached_node": "model.sado_analytics_services.rfm_movement"}, "test.sado_analytics_services.not_null_rfm_movement_last_purchase.f325cc0b69": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "last_purchase", "model": "{{ get_where_subquery(ref('rfm_movement')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_rfm_movement_last_purchase", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_rfm_movement_last_purchase.sql", "original_file_path": "models/marts/sales/rfm_movement.yml", "unique_id": "test.sado_analytics_services.not_null_rfm_movement_last_purchase.f325cc0b69", "fqn": ["sado_analytics_services", "marts", "sales", "not_null_rfm_movement_last_purchase"], "alias": "not_null_rfm_movement_last_purchase", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.3367739, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "rfm_movement", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.rfm_movement"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/rfm_movement.yml/not_null_rfm_movement_last_purchase.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_purchase\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\nwhere last_purchase is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "last_purchase", "file_key_name": "models.rfm_movement", "attached_node": "model.sado_analytics_services.rfm_movement"}, "test.sado_analytics_services.not_null_rfm_movement_segment.ef3b4c6511": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "segment", "model": "{{ get_where_subquery(ref('rfm_movement')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_rfm_movement_segment", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_rfm_movement_segment.sql", "original_file_path": "models/marts/sales/rfm_movement.yml", "unique_id": "test.sado_analytics_services.not_null_rfm_movement_segment.ef3b4c6511", "fqn": ["sado_analytics_services", "marts", "sales", "not_null_rfm_movement_segment"], "alias": "not_null_rfm_movement_segment", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.3388867, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "rfm_movement", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.rfm_movement"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/rfm_movement.yml/not_null_rfm_movement_segment.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect segment\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\nwhere segment is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "segment", "file_key_name": "models.rfm_movement", "attached_node": "model.sado_analytics_services.rfm_movement"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_rfm_movement_customer_id__start_of_month.d9b269e396": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["customer_id", "start_of_month"], "model": "{{ get_where_subquery(ref('rfm_movement')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_rfm_movement_customer_id__start_of_month", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_0d5ce2730ec63a617369e47d43b3ef1a.sql", "original_file_path": "models/marts/sales/rfm_movement.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_rfm_movement_customer_id__start_of_month.d9b269e396", "fqn": ["sado_analytics_services", "marts", "sales", "dbt_utils_unique_combination_of_columns_rfm_movement_customer_id__start_of_month"], "alias": "dbt_utils_unique_combination_o_0d5ce2730ec63a617369e47d43b3ef1a", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_0d5ce2730ec63a617369e47d43b3ef1a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_0d5ce2730ec63a617369e47d43b3ef1a"}, "created_at": 1732268180.3409646, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_0d5ce2730ec63a617369e47d43b3ef1a\") }}", "language": "sql", "refs": [{"name": "rfm_movement", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.rfm_movement"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/rfm_movement.yml/dbt_utils_unique_combination_o_0d5ce2730ec63a617369e47d43b3ef1a.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, start_of_month\n    from `agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`\n    group by customer_id, start_of_month\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.rfm_movement", "attached_node": "model.sado_analytics_services.rfm_movement"}, "test.sado_analytics_services.not_null_fct__customers_attributes_registered_branch_id.2b83352f22": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "registered_branch_id", "model": "{{ get_where_subquery(ref('fct__customers_attributes')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_fct__customers_attributes_registered_branch_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_fct__customers_attributes_registered_branch_id.sql", "original_file_path": "models/marts/sales/fct__customers_attributes.yml", "unique_id": "test.sado_analytics_services.not_null_fct__customers_attributes_registered_branch_id.2b83352f22", "fqn": ["sado_analytics_services", "marts", "sales", "not_null_fct__customers_attributes_registered_branch_id"], "alias": "not_null_fct__customers_attributes_registered_branch_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.4016414, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct__customers_attributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__customers_attributes"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__customers_attributes.yml/not_null_fct__customers_attributes_registered_branch_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect registered_branch_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers_attributes`\nwhere registered_branch_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "registered_branch_id", "file_key_name": "models.fct__customers_attributes", "attached_node": "model.sado_analytics_services.fct__customers_attributes"}, "test.sado_analytics_services.not_null_fct__customers_attributes_last_purchase_branch_id.8b2ec2edef": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "last_purchase_branch_id", "model": "{{ get_where_subquery(ref('fct__customers_attributes')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_fct__customers_attributes_last_purchase_branch_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_fct__customers_attributes_last_purchase_branch_id.sql", "original_file_path": "models/marts/sales/fct__customers_attributes.yml", "unique_id": "test.sado_analytics_services.not_null_fct__customers_attributes_last_purchase_branch_id.8b2ec2edef", "fqn": ["sado_analytics_services", "marts", "sales", "not_null_fct__customers_attributes_last_purchase_branch_id"], "alias": "not_null_fct__customers_attributes_last_purchase_branch_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.4037614, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct__customers_attributes", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__customers_attributes"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__customers_attributes.yml/not_null_fct__customers_attributes_last_purchase_branch_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_purchase_branch_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers_attributes`\nwhere last_purchase_branch_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "last_purchase_branch_id", "file_key_name": "models.fct__customers_attributes", "attached_node": "model.sado_analytics_services.fct__customers_attributes"}, "test.sado_analytics_services.unique_revenue_transaction_id.716496c532": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "transaction_id", "model": "{{ get_where_subquery(ref('revenue')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_revenue_transaction_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_revenue_transaction_id.sql", "original_file_path": "models/marts/sales/revenue.yml", "unique_id": "test.sado_analytics_services.unique_revenue_transaction_id.716496c532", "fqn": ["sado_analytics_services", "marts", "sales", "unique_revenue_transaction_id"], "alias": "unique_revenue_transaction_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.4483886, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "revenue", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.revenue"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/revenue.yml/unique_revenue_transaction_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select transaction_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_sales`.`revenue`\n  where transaction_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "transaction_id", "file_key_name": "models.revenue", "attached_node": "model.sado_analytics_services.revenue"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_revenue_items_transaction_id__product_id__price.e8265edabd": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["transaction_id", "product_id", "price"], "model": "{{ get_where_subquery(ref('revenue_items')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_revenue_items_transaction_id__product_id__price", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_04ae3d1b0102c816ab41b074d0fc4a08.sql", "original_file_path": "models/marts/sales/revenue_items.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_revenue_items_transaction_id__product_id__price.e8265edabd", "fqn": ["sado_analytics_services", "marts", "sales", "dbt_utils_unique_combination_of_columns_revenue_items_transaction_id__product_id__price"], "alias": "dbt_utils_unique_combination_o_04ae3d1b0102c816ab41b074d0fc4a08", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_04ae3d1b0102c816ab41b074d0fc4a08", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_04ae3d1b0102c816ab41b074d0fc4a08"}, "created_at": 1732268180.46261, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_04ae3d1b0102c816ab41b074d0fc4a08\") }}", "language": "sql", "refs": [{"name": "revenue_items", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.revenue_items"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/revenue_items.yml/dbt_utils_unique_combination_o_04ae3d1b0102c816ab41b074d0fc4a08.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, product_id, price\n    from `agile-scheme-394814`.`dbt_prod_sales`.`revenue_items`\n    group by transaction_id, product_id, price\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.revenue_items", "attached_node": "model.sado_analytics_services.revenue_items"}, "test.sado_analytics_services.not_null_fct__customers_contact_number.7ec23edb3d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_number", "model": "{{ get_where_subquery(ref('fct__customers')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_fct__customers_contact_number", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_fct__customers_contact_number.sql", "original_file_path": "models/marts/sales/fct__customers.yml", "unique_id": "test.sado_analytics_services.not_null_fct__customers_contact_number.7ec23edb3d", "fqn": ["sado_analytics_services", "marts", "sales", "not_null_fct__customers_contact_number"], "alias": "not_null_fct__customers_contact_number", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.477193, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__customers.yml/not_null_fct__customers_contact_number.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_number\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\nwhere contact_number is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "contact_number", "file_key_name": "models.fct__customers", "attached_node": "model.sado_analytics_services.fct__customers"}, "test.sado_analytics_services.unique_fct__customers_contact_number.5bd80552c1": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_number", "model": "{{ get_where_subquery(ref('fct__customers')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_fct__customers_contact_number", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_fct__customers_contact_number.sql", "original_file_path": "models/marts/sales/fct__customers.yml", "unique_id": "test.sado_analytics_services.unique_fct__customers_contact_number.5bd80552c1", "fqn": ["sado_analytics_services", "marts", "sales", "unique_fct__customers_contact_number"], "alias": "unique_fct__customers_contact_number", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.4793048, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__customers.yml/unique_fct__customers_contact_number.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select contact_number as unique_field\n  from `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n  where contact_number is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "contact_number", "file_key_name": "models.fct__customers", "attached_node": "model.sado_analytics_services.fct__customers"}, "test.sado_analytics_services.not_null_fct__customers_universal_customer_id.e16d885fed": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "universal_customer_id", "model": "{{ get_where_subquery(ref('fct__customers')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_fct__customers_universal_customer_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_fct__customers_universal_customer_id.sql", "original_file_path": "models/marts/sales/fct__customers.yml", "unique_id": "test.sado_analytics_services.not_null_fct__customers_universal_customer_id.e16d885fed", "fqn": ["sado_analytics_services", "marts", "sales", "not_null_fct__customers_universal_customer_id"], "alias": "not_null_fct__customers_universal_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.4814436, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__customers.yml/not_null_fct__customers_universal_customer_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect universal_customer_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\nwhere universal_customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "universal_customer_id", "file_key_name": "models.fct__customers", "attached_node": "model.sado_analytics_services.fct__customers"}, "test.sado_analytics_services.unique_fct__customers_universal_customer_id.942475d339": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "universal_customer_id", "model": "{{ get_where_subquery(ref('fct__customers')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_fct__customers_universal_customer_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_fct__customers_universal_customer_id.sql", "original_file_path": "models/marts/sales/fct__customers.yml", "unique_id": "test.sado_analytics_services.unique_fct__customers_universal_customer_id.942475d339", "fqn": ["sado_analytics_services", "marts", "sales", "unique_fct__customers_universal_customer_id"], "alias": "unique_fct__customers_universal_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.4835312, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct__customers", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__customers"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__customers.yml/unique_fct__customers_universal_customer_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select universal_customer_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_sales`.`fct__customers`\n  where universal_customer_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "universal_customer_id", "file_key_name": "models.fct__customers", "attached_node": "model.sado_analytics_services.fct__customers"}, "test.sado_analytics_services.not_null_fct__transactions_transaction_id.fb8e6580ac": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "transaction_id", "model": "{{ get_where_subquery(ref('fct__transactions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_fct__transactions_transaction_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_fct__transactions_transaction_id.sql", "original_file_path": "models/marts/sales/fct__transactions.yml", "unique_id": "test.sado_analytics_services.not_null_fct__transactions_transaction_id.fb8e6580ac", "fqn": ["sado_analytics_services", "marts", "sales", "not_null_fct__transactions_transaction_id"], "alias": "not_null_fct__transactions_transaction_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.5050318, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__transactions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__transactions.yml/not_null_fct__transactions_transaction_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\nwhere transaction_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "transaction_id", "file_key_name": "models.fct__transactions", "attached_node": "model.sado_analytics_services.fct__transactions"}, "test.sado_analytics_services.not_null_fct__transactions_branch_id.eaaf3373a0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "branch_id", "model": "{{ get_where_subquery(ref('fct__transactions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_fct__transactions_branch_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_fct__transactions_branch_id.sql", "original_file_path": "models/marts/sales/fct__transactions.yml", "unique_id": "test.sado_analytics_services.not_null_fct__transactions_branch_id.eaaf3373a0", "fqn": ["sado_analytics_services", "marts", "sales", "not_null_fct__transactions_branch_id"], "alias": "not_null_fct__transactions_branch_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.5072029, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__transactions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__transactions.yml/not_null_fct__transactions_branch_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect branch_id\nfrom `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\nwhere branch_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "branch_id", "file_key_name": "models.fct__transactions", "attached_node": "model.sado_analytics_services.fct__transactions"}, "test.sado_analytics_services.accepted_values_fct__transactions_transaction_type__invoice__return.9c79d27315": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["invoice", "return"], "column_name": "transaction_type", "model": "{{ get_where_subquery(ref('fct__transactions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "accepted_values_fct__transactions_transaction_type__invoice__return", "resource_type": "test", "package_name": "sado_analytics_services", "path": "accepted_values_fct__transacti_c3db1e25821c734cc6271acd3c0efc94.sql", "original_file_path": "models/marts/sales/fct__transactions.yml", "unique_id": "test.sado_analytics_services.accepted_values_fct__transactions_transaction_type__invoice__return.9c79d27315", "fqn": ["sado_analytics_services", "marts", "sales", "accepted_values_fct__transactions_transaction_type__invoice__return"], "alias": "accepted_values_fct__transacti_c3db1e25821c734cc6271acd3c0efc94", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_fct__transacti_c3db1e25821c734cc6271acd3c0efc94", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_fct__transacti_c3db1e25821c734cc6271acd3c0efc94"}, "created_at": 1732268180.509515, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_fct__transacti_c3db1e25821c734cc6271acd3c0efc94\") }}", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__transactions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__transactions.yml/accepted_values_fct__transacti_c3db1e25821c734cc6271acd3c0efc94.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        transaction_type as value_field,\n        count(*) as n_records\n\n    from `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n    group by transaction_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'invoice','return'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "transaction_type", "file_key_name": "models.fct__transactions", "attached_node": "model.sado_analytics_services.fct__transactions"}, "test.sado_analytics_services.unique_fct__transactions_transaction_source_id.52bdef8734": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "transaction_source_id", "model": "{{ get_where_subquery(ref('fct__transactions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_fct__transactions_transaction_source_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_fct__transactions_transaction_source_id.sql", "original_file_path": "models/marts/sales/fct__transactions.yml", "unique_id": "test.sado_analytics_services.unique_fct__transactions_transaction_source_id.52bdef8734", "fqn": ["sado_analytics_services", "marts", "sales", "unique_fct__transactions_transaction_source_id"], "alias": "unique_fct__transactions_transaction_source_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.5179734, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.fct__transactions"]}, "compiled_path": "target/compiled/sado_analytics_services/models/marts/sales/fct__transactions.yml/unique_fct__transactions_transaction_source_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select transaction_source_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod_sales`.`fct__transactions`\n  where transaction_source_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "transaction_source_id", "file_key_name": "models.fct__transactions", "attached_node": "model.sado_analytics_services.fct__transactions"}, "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('calendar')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_calendar_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_calendar_date.sql", "original_file_path": "models/utilities/calendar.yml", "unique_id": "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d", "fqn": ["sado_analytics_services", "utilities", "not_null_calendar_date"], "alias": "not_null_calendar_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.5819683, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "calendar", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.calendar"]}, "compiled_path": "target/compiled/sado_analytics_services/models/utilities/calendar.yml/not_null_calendar_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `agile-scheme-394814`.`dbt_prod`.`calendar`\nwhere date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.calendar", "attached_node": "model.sado_analytics_services.calendar"}, "test.sado_analytics_services.unique_calendar_date.b4cbc0583a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('calendar')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_calendar_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_calendar_date.sql", "original_file_path": "models/utilities/calendar.yml", "unique_id": "test.sado_analytics_services.unique_calendar_date.b4cbc0583a", "fqn": ["sado_analytics_services", "utilities", "unique_calendar_date"], "alias": "unique_calendar_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.5840814, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "calendar", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.calendar"]}, "compiled_path": "target/compiled/sado_analytics_services/models/utilities/calendar.yml/unique_calendar_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select date as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`calendar`\n  where date is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.calendar", "attached_node": "model.sado_analytics_services.calendar"}, "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_value_id.ff7804063b": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "value_id", "model": "{{ get_where_subquery(ref('stg_caresoft__ticket_custom_fields')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__ticket_custom_fields_value_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__ticket_custom_fields_value_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_value_id.ff7804063b", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__ticket_custom_fields_value_id"], "alias": "unique_stg_caresoft__ticket_custom_fields_value_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6117952, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "value_id", "file_key_name": "models.stg_caresoft__ticket_custom_fields", "attached_node": "model.sado_analytics_services.stg_caresoft__ticket_custom_fields"}, "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_value_id.a076bcc09a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "value_id", "model": "{{ get_where_subquery(ref('stg_caresoft__ticket_custom_fields')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__ticket_custom_fields_value_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__ticket_custom_fields_value_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_value_id.a076bcc09a", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__ticket_custom_fields_value_id"], "alias": "not_null_stg_caresoft__ticket_custom_fields_value_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6139717, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "value_id", "file_key_name": "models.stg_caresoft__ticket_custom_fields", "attached_node": "model.sado_analytics_services.stg_caresoft__ticket_custom_fields"}, "test.sado_analytics_services.not_null_stg_caresoft__calls_id.2fb2499c5a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_caresoft__calls')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__calls_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__calls_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__calls_id.2fb2499c5a", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__calls_id"], "alias": "not_null_stg_caresoft__calls_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6231704, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.stg_caresoft__calls", "attached_node": "model.sado_analytics_services.stg_caresoft__calls"}, "test.sado_analytics_services.unique_stg_caresoft__calls_id.aede802cc2": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_caresoft__calls')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__calls_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__calls_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__calls_id.aede802cc2", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__calls_id"], "alias": "unique_stg_caresoft__calls_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6253479, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.stg_caresoft__calls", "attached_node": "model.sado_analytics_services.stg_caresoft__calls"}, "test.sado_analytics_services.not_null_stg_caresoft__calls_call_id.8d621fb840": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "call_id", "model": "{{ get_where_subquery(ref('stg_caresoft__calls')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__calls_call_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__calls_call_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__calls_call_id.8d621fb840", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__calls_call_id"], "alias": "not_null_stg_caresoft__calls_call_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6274219, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "call_id", "file_key_name": "models.stg_caresoft__calls", "attached_node": "model.sado_analytics_services.stg_caresoft__calls"}, "test.sado_analytics_services.unique_stg_caresoft__calls_call_id.62c4fd8e66": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "call_id", "model": "{{ get_where_subquery(ref('stg_caresoft__calls')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__calls_call_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__calls_call_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__calls_call_id.62c4fd8e66", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__calls_call_id"], "alias": "unique_stg_caresoft__calls_call_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6295037, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "call_id", "file_key_name": "models.stg_caresoft__calls", "attached_node": "model.sado_analytics_services.stg_caresoft__calls"}, "test.sado_analytics_services.not_null_stg_caresoft__contacts_contact_id.eb790c43e2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('stg_caresoft__contacts')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__contacts_contact_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__contacts_contact_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__contacts.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__contacts_contact_id.eb790c43e2", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__contacts_contact_id"], "alias": "not_null_stg_caresoft__contacts_contact_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6414208, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__contacts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "contact_id", "file_key_name": "models.stg_caresoft__contacts", "attached_node": "model.sado_analytics_services.stg_caresoft__contacts"}, "test.sado_analytics_services.unique_stg_caresoft__contacts_contact_id.9463562ba4": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "contact_id", "model": "{{ get_where_subquery(ref('stg_caresoft__contacts')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__contacts_contact_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__contacts_contact_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__contacts.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__contacts_contact_id.9463562ba4", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__contacts_contact_id"], "alias": "unique_stg_caresoft__contacts_contact_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.643507, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__contacts", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "contact_id", "file_key_name": "models.stg_caresoft__contacts", "attached_node": "model.sado_analytics_services.stg_caresoft__contacts"}, "test.sado_analytics_services.not_null_stg_caresoft__agents_id.718cd3c440": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_caresoft__agents')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__agents_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__agents_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__agents_id.718cd3c440", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__agents_id"], "alias": "not_null_stg_caresoft__agents_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6472893, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.stg_caresoft__agents", "attached_node": "model.sado_analytics_services.stg_caresoft__agents"}, "test.sado_analytics_services.unique_stg_caresoft__agents_id.1dc507e0f7": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_caresoft__agents')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__agents_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__agents_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__agents_id.1dc507e0f7", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__agents_id"], "alias": "unique_stg_caresoft__agents_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6494265, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.stg_caresoft__agents", "attached_node": "model.sado_analytics_services.stg_caresoft__agents"}, "test.sado_analytics_services.unique_stg_caresoft__agents_email.90f55cfcb1": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('stg_caresoft__agents')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__agents_email", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__agents_email.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__agents_email.90f55cfcb1", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__agents_email"], "alias": "unique_stg_caresoft__agents_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6515272, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "email", "file_key_name": "models.stg_caresoft__agents", "attached_node": "model.sado_analytics_services.stg_caresoft__agents"}, "test.sado_analytics_services.not_null_stg_caresoft__agents_email.360e1d9d56": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "email", "model": "{{ get_where_subquery(ref('stg_caresoft__agents')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__agents_email", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__agents_email.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__agents_email.360e1d9d56", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__agents_email"], "alias": "not_null_stg_caresoft__agents_email", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.65363, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "email", "file_key_name": "models.stg_caresoft__agents", "attached_node": "model.sado_analytics_services.stg_caresoft__agents"}, "test.sado_analytics_services.not_null_stg_caresoft__chats_conversation_id.f2a0e81461": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "conversation_id", "model": "{{ get_where_subquery(ref('stg_caresoft__chats')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__chats_conversation_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__chats_conversation_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__chats.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__chats_conversation_id.f2a0e81461", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__chats_conversation_id"], "alias": "not_null_stg_caresoft__chats_conversation_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6623876, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__chats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "conversation_id", "file_key_name": "models.stg_caresoft__chats", "attached_node": "model.sado_analytics_services.stg_caresoft__chats"}, "test.sado_analytics_services.unique_stg_caresoft__chats_conversation_id.0f9e5f32bb": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "conversation_id", "model": "{{ get_where_subquery(ref('stg_caresoft__chats')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__chats_conversation_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__chats_conversation_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__chats.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__chats_conversation_id.0f9e5f32bb", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__chats_conversation_id"], "alias": "unique_stg_caresoft__chats_conversation_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6645389, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__chats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "conversation_id", "file_key_name": "models.stg_caresoft__chats", "attached_node": "model.sado_analytics_services.stg_caresoft__chats"}, "test.sado_analytics_services.not_null_stg_caresoft__tickets_ticket_id.44b9236f2a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('stg_caresoft__tickets')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_caresoft__tickets_ticket_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_caresoft__tickets_ticket_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__tickets.yml", "unique_id": "test.sado_analytics_services.not_null_stg_caresoft__tickets_ticket_id.44b9236f2a", "fqn": ["sado_analytics_services", "staging", "caresoft", "not_null_stg_caresoft__tickets_ticket_id"], "alias": "not_null_stg_caresoft__tickets_ticket_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.6777756, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__tickets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "ticket_id", "file_key_name": "models.stg_caresoft__tickets", "attached_node": "model.sado_analytics_services.stg_caresoft__tickets"}, "test.sado_analytics_services.unique_stg_caresoft__tickets_ticket_id.d6716e1775": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "ticket_id", "model": "{{ get_where_subquery(ref('stg_caresoft__tickets')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_caresoft__tickets_ticket_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_caresoft__tickets_ticket_id.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__tickets.yml", "unique_id": "test.sado_analytics_services.unique_stg_caresoft__tickets_ticket_id.d6716e1775", "fqn": ["sado_analytics_services", "staging", "caresoft", "unique_stg_caresoft__tickets_ticket_id"], "alias": "unique_stg_caresoft__tickets_ticket_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.679898, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_caresoft__tickets", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "ticket_id", "file_key_name": "models.stg_caresoft__tickets", "attached_node": "model.sado_analytics_services.stg_caresoft__tickets"}, "test.sado_analytics_services.unique_stg_nhanhvn__ordersdetails_order_id.866b820324": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_nhanhvn__ordersdetails')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_nhanhvn__ordersdetails_order_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_nhanhvn__ordersdetails_order_id.sql", "original_file_path": "models/staging/nhanhvn/stg_nhanhvn__ordersdetails.yml", "unique_id": "test.sado_analytics_services.unique_stg_nhanhvn__ordersdetails_order_id.866b820324", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "unique_stg_nhanhvn__ordersdetails_order_id"], "alias": "unique_stg_nhanhvn__ordersdetails_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.7572076, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_nhanhvn__ordersdetails", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_nhanhvn__ordersdetails"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/nhanhvn/stg_nhanhvn__ordersdetails.yml/unique_stg_nhanhvn__ordersdetails_order_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_nhanhvn__ordersdetails`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "order_id", "file_key_name": "models.stg_nhanhvn__ordersdetails", "attached_node": "model.sado_analytics_services.stg_nhanhvn__ordersdetails"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_kiotviet__transfers_details_transfer_id__product_id.3f26bf0e47": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["transfer_id", "product_id"], "model": "{{ get_where_subquery(ref('stg_kiotviet__transfers_details')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_stg_kiotviet__transfers_details_transfer_id__product_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_89099a1cff6a59cba965f5e89acc130e.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__transfers_details.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_kiotviet__transfers_details_transfer_id__product_id.3f26bf0e47", "fqn": ["sado_analytics_services", "staging", "kiotViet", "dbt_utils_unique_combination_of_columns_stg_kiotviet__transfers_details_transfer_id__product_id"], "alias": "dbt_utils_unique_combination_o_89099a1cff6a59cba965f5e89acc130e", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_89099a1cff6a59cba965f5e89acc130e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_89099a1cff6a59cba965f5e89acc130e"}, "created_at": 1732268180.7931685, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_89099a1cff6a59cba965f5e89acc130e\") }}", "language": "sql", "refs": [{"name": "stg_kiotviet__transfers_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_kiotviet__transfers_details"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__transfers_details.yml/dbt_utils_unique_combination_o_89099a1cff6a59cba965f5e89acc130e.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transfer_id, product_id\n    from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__transfers_details`\n    group by transfer_id, product_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.stg_kiotviet__transfers_details", "attached_node": "model.sado_analytics_services.stg_kiotviet__transfers_details"}, "test.sado_analytics_services.unique_stg_kiotviet__products_product_id.487bb521de": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "product_id", "model": "{{ get_where_subquery(ref('stg_kiotviet__products')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_kiotviet__products_product_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_kiotviet__products_product_id.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__products.yml", "unique_id": "test.sado_analytics_services.unique_stg_kiotviet__products_product_id.487bb521de", "fqn": ["sado_analytics_services", "staging", "kiotViet", "unique_stg_kiotviet__products_product_id"], "alias": "unique_stg_kiotviet__products_product_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.837167, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_kiotviet__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_kiotviet__products"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__products.yml/unique_stg_kiotviet__products_product_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select product_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`\n  where product_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "product_id", "file_key_name": "models.stg_kiotviet__products", "attached_node": "model.sado_analytics_services.stg_kiotviet__products"}, "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "product_group", "model": "{{ get_where_subquery(ref('stg_kiotviet__products')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_kiotviet__products_product_group", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_kiotviet__products_product_group.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__products.yml", "unique_id": "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c", "fqn": ["sado_analytics_services", "staging", "kiotViet", "not_null_stg_kiotviet__products_product_group"], "alias": "not_null_stg_kiotviet__products_product_group", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.8396237, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_kiotviet__products", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_kiotviet__products"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__products.yml/not_null_stg_kiotviet__products_product_group.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_group\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__products`\nwhere product_group is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "product_group", "file_key_name": "models.stg_kiotviet__products", "attached_node": "model.sado_analytics_services.stg_kiotviet__products"}, "test.sado_analytics_services.unique_stg_kiotviet__invoices_transaction_id.a5024f2ad6": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "transaction_id", "model": "{{ get_where_subquery(ref('stg_kiotviet__invoices')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_kiotviet__invoices_transaction_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_kiotviet__invoices_transaction_id.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__invoices.yml", "unique_id": "test.sado_analytics_services.unique_stg_kiotviet__invoices_transaction_id.a5024f2ad6", "fqn": ["sado_analytics_services", "staging", "kiotViet", "unique_stg_kiotviet__invoices_transaction_id"], "alias": "unique_stg_kiotviet__invoices_transaction_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.8497653, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_kiotviet__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoices"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__invoices.yml/unique_stg_kiotviet__invoices_transaction_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select transaction_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\n  where transaction_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "transaction_id", "file_key_name": "models.stg_kiotviet__invoices", "attached_node": "model.sado_analytics_services.stg_kiotviet__invoices"}, "test.sado_analytics_services.not_null_stg_kiotviet__invoices_modified_date.ee9db5f44f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "modified_date", "model": "{{ get_where_subquery(ref('stg_kiotviet__invoices')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_kiotviet__invoices_modified_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_kiotviet__invoices_modified_date.sql", "original_file_path": "models/staging/kiotViet/stg_kiotviet__invoices.yml", "unique_id": "test.sado_analytics_services.not_null_stg_kiotviet__invoices_modified_date.ee9db5f44f", "fqn": ["sado_analytics_services", "staging", "kiotViet", "not_null_stg_kiotviet__invoices_modified_date"], "alias": "not_null_stg_kiotviet__invoices_modified_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.8520892, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_kiotviet__invoices", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_kiotviet__invoices"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/kiotViet/stg_kiotviet__invoices.yml/not_null_stg_kiotviet__invoices_modified_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect modified_date\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_kiotviet__invoices`\nwhere modified_date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "modified_date", "file_key_name": "models.stg_kiotviet__invoices", "attached_node": "model.sado_analytics_services.stg_kiotviet__invoices"}, "test.sado_analytics_services.not_null_stg_esms__sent_data_sent_id.47c6bc997c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "sent_id", "model": "{{ get_where_subquery(ref('stg_esms__sent_data')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_esms__sent_data_sent_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_esms__sent_data_sent_id.sql", "original_file_path": "models/staging/esms/stg_esms__sent_data.yml", "unique_id": "test.sado_analytics_services.not_null_stg_esms__sent_data_sent_id.47c6bc997c", "fqn": ["sado_analytics_services", "staging", "esms", "not_null_stg_esms__sent_data_sent_id"], "alias": "not_null_stg_esms__sent_data_sent_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.8584046, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_esms__sent_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_esms__sent_data"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/esms/stg_esms__sent_data.yml/not_null_stg_esms__sent_data_sent_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sent_id\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`\nwhere sent_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "sent_id", "file_key_name": "models.stg_esms__sent_data", "attached_node": "model.sado_analytics_services.stg_esms__sent_data"}, "test.sado_analytics_services.unique_stg_esms__sent_data_sent_id.7d9e07e2b4": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "sent_id", "model": "{{ get_where_subquery(ref('stg_esms__sent_data')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_esms__sent_data_sent_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_esms__sent_data_sent_id.sql", "original_file_path": "models/staging/esms/stg_esms__sent_data.yml", "unique_id": "test.sado_analytics_services.unique_stg_esms__sent_data_sent_id.7d9e07e2b4", "fqn": ["sado_analytics_services", "staging", "esms", "unique_stg_esms__sent_data_sent_id"], "alias": "unique_stg_esms__sent_data_sent_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.860519, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_esms__sent_data", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_esms__sent_data"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/esms/stg_esms__sent_data.yml/unique_stg_esms__sent_data_sent_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select sent_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_esms__sent_data`\n  where sent_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "sent_id", "file_key_name": "models.stg_esms__sent_data", "attached_node": "model.sado_analytics_services.stg_esms__sent_data"}, "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "row_id", "model": "{{ get_where_subquery(ref('stg_googleads__campaign_stats')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_googleads__campaign_stats_row_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_googleads__campaign_stats_row_id.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaign_stats.yml", "unique_id": "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d", "fqn": ["sado_analytics_services", "staging", "googleAds", "unique_stg_googleads__campaign_stats_row_id"], "alias": "unique_stg_googleads__campaign_stats_row_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.8995295, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_googleads__campaign_stats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_googleads__campaign_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaign_stats.yml/unique_stg_googleads__campaign_stats_row_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select row_id as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`\n  where row_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "row_id", "file_key_name": "models.stg_googleads__campaign_stats", "attached_node": "model.sado_analytics_services.stg_googleads__campaign_stats"}, "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('stg_googleads__campaign_stats')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_googleads__campaign_stats_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_googleads__campaign_stats_date.sql", "original_file_path": "models/staging/googleAds/stg_googleads__campaign_stats.yml", "unique_id": "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226", "fqn": ["sado_analytics_services", "staging", "googleAds", "not_null_stg_googleads__campaign_stats_date"], "alias": "not_null_stg_googleads__campaign_stats_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268180.9016502, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_googleads__campaign_stats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_googleads__campaign_stats"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/googleAds/stg_googleads__campaign_stats.yml/not_null_stg_googleads__campaign_stats_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_googleads__campaign_stats`\nwhere date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.stg_googleads__campaign_stats", "attached_node": "model.sado_analytics_services.stg_googleads__campaign_stats"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__manufacture_plan_plan_month__product_code__vendor.2222cb482c": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["plan_month", "product_code", "vendor"], "model": "{{ get_where_subquery(ref('stg_gsheet__manufacture_plan')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_stg_gsheet__manufacture_plan_plan_month__product_code__vendor", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_0782b3ab4d8960975f20a7db29a2482c.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__manufacture_plan.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__manufacture_plan_plan_month__product_code__vendor.2222cb482c", "fqn": ["sado_analytics_services", "staging", "gSheet", "dbt_utils_unique_combination_of_columns_stg_gsheet__manufacture_plan_plan_month__product_code__vendor"], "alias": "dbt_utils_unique_combination_o_0782b3ab4d8960975f20a7db29a2482c", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_0782b3ab4d8960975f20a7db29a2482c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_0782b3ab4d8960975f20a7db29a2482c"}, "created_at": 1732268181.0667562, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_0782b3ab4d8960975f20a7db29a2482c\") }}", "language": "sql", "refs": [{"name": "stg_gsheet__manufacture_plan", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_gsheet__manufacture_plan"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__manufacture_plan.yml/dbt_utils_unique_combination_o_0782b3ab4d8960975f20a7db29a2482c.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        plan_month, product_code, vendor\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__manufacture_plan`\n    group by plan_month, product_code, vendor\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.stg_gsheet__manufacture_plan", "attached_node": "model.sado_analytics_services.stg_gsheet__manufacture_plan"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__maintainance_branch_code__created_at__description.19787c00ce": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["branch_code", "created_at", "description"], "model": "{{ get_where_subquery(ref('stg_gsheet__maintainance')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_stg_gsheet__maintainance_branch_code__created_at__description", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_b5cf34b5e4bf764425a237a9b074c612.sql", "original_file_path": "models/staging/gSheet/stg_gsheet__maintainance.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__maintainance_branch_code__created_at__description.19787c00ce", "fqn": ["sado_analytics_services", "staging", "gSheet", "dbt_utils_unique_combination_of_columns_stg_gsheet__maintainance_branch_code__created_at__description"], "alias": "dbt_utils_unique_combination_o_b5cf34b5e4bf764425a237a9b074c612", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_b5cf34b5e4bf764425a237a9b074c612", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_b5cf34b5e4bf764425a237a9b074c612"}, "created_at": 1732268181.0926101, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_b5cf34b5e4bf764425a237a9b074c612\") }}", "language": "sql", "refs": [{"name": "stg_gsheet__maintainance", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_gsheet__maintainance"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/gSheet/stg_gsheet__maintainance.yml/dbt_utils_unique_combination_o_b5cf34b5e4bf764425a237a9b074c612.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        branch_code, created_at, description\n    from `agile-scheme-394814`.`dbt_prod`.`stg_gsheet__maintainance`\n    group by branch_code, created_at, description\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.stg_gsheet__maintainance", "attached_node": "model.sado_analytics_services.stg_gsheet__maintainance"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__age_gender_insights_ad_id__adgroup_id__campaign_id__date__age__gender.b054b6c435": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["ad_id", "adgroup_id", "campaign_id", "date", "age", "gender"], "model": "{{ get_where_subquery(ref('stg_tiktokads__age_gender_insights')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_stg_tiktokads__age_gender_insights_ad_id__adgroup_id__campaign_id__date__age__gender", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_1556206152eee3c2e2f49d6c676ea38d.sql", "original_file_path": "models/staging/tiktokAds/stg_tiktokads__age_gender_insights.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__age_gender_insights_ad_id__adgroup_id__campaign_id__date__age__gender.b054b6c435", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "dbt_utils_unique_combination_of_columns_stg_tiktokads__age_gender_insights_ad_id__adgroup_id__campaign_id__date__age__gender"], "alias": "dbt_utils_unique_combination_o_1556206152eee3c2e2f49d6c676ea38d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_1556206152eee3c2e2f49d6c676ea38d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_1556206152eee3c2e2f49d6c676ea38d"}, "created_at": 1732268181.1806166, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_1556206152eee3c2e2f49d6c676ea38d\") }}", "language": "sql", "refs": [{"name": "stg_tiktokads__age_gender_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_tiktokads__age_gender_insights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/tiktokAds/stg_tiktokads__age_gender_insights.yml/dbt_utils_unique_combination_o_1556206152eee3c2e2f49d6c676ea38d.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        ad_id, adgroup_id, campaign_id, date, age, gender\n    from `agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__age_gender_insights`\n    group by ad_id, adgroup_id, campaign_id, date, age, gender\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.stg_tiktokads__age_gender_insights", "attached_node": "model.sado_analytics_services.stg_tiktokads__age_gender_insights"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__ad_insights_ad_id__adgroup_id__campaign_id__date.31b24e06d5": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["ad_id", "adgroup_id", "campaign_id", "date"], "model": "{{ get_where_subquery(ref('stg_tiktokads__ad_insights')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_stg_tiktokads__ad_insights_ad_id__adgroup_id__campaign_id__date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_4ca70dd03df76487bcfd95e5006d8849.sql", "original_file_path": "models/staging/tiktokAds/stg_tiktokads__ad_insights.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__ad_insights_ad_id__adgroup_id__campaign_id__date.31b24e06d5", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "dbt_utils_unique_combination_of_columns_stg_tiktokads__ad_insights_ad_id__adgroup_id__campaign_id__date"], "alias": "dbt_utils_unique_combination_o_4ca70dd03df76487bcfd95e5006d8849", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_4ca70dd03df76487bcfd95e5006d8849", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_4ca70dd03df76487bcfd95e5006d8849"}, "created_at": 1732268181.237703, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_4ca70dd03df76487bcfd95e5006d8849\") }}", "language": "sql", "refs": [{"name": "stg_tiktokads__ad_insights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_tiktokads__ad_insights"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/tiktokAds/stg_tiktokads__ad_insights.yml/dbt_utils_unique_combination_o_4ca70dd03df76487bcfd95e5006d8849.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        ad_id, adgroup_id, campaign_id, date\n    from `agile-scheme-394814`.`dbt_prod`.`stg_tiktokads__ad_insights`\n    group by ad_id, adgroup_id, campaign_id, date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.stg_tiktokads__ad_insights", "attached_node": "model.sado_analytics_services.stg_tiktokads__ad_insights"}, "test.sado_analytics_services.unique_stg_5sfashion__orders__order_id_.cc1d908e3a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "`order_id`", "model": "{{ get_where_subquery(ref('stg_5sfashion__orders')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_5sfashion__orders__order_id_", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_stg_5sfashion__orders__order_id_.sql", "original_file_path": "models/staging/5sfashion/stg_5sfashion__orders.yml", "unique_id": "test.sado_analytics_services.unique_stg_5sfashion__orders__order_id_.cc1d908e3a", "fqn": ["sado_analytics_services", "staging", "5sfashion", "unique_stg_5sfashion__orders__order_id_"], "alias": "unique_stg_5sfashion__orders__order_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.2849288, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_5sfashion__orders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_5sfashion__orders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/stg_5sfashion__orders.yml/unique_stg_5sfashion__orders__order_id_.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select `order_id` as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__orders`\n  where `order_id` is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "`order_id`", "file_key_name": "models.stg_5sfashion__orders", "attached_node": "model.sado_analytics_services.stg_5sfashion__orders"}, "test.sado_analytics_services.not_null_stg_5sfashion__orders__order_id_.a11aa2146b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "`order_id`", "model": "{{ get_where_subquery(ref('stg_5sfashion__orders')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_5sfashion__orders__order_id_", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_stg_5sfashion__orders__order_id_.sql", "original_file_path": "models/staging/5sfashion/stg_5sfashion__orders.yml", "unique_id": "test.sado_analytics_services.not_null_stg_5sfashion__orders__order_id_.a11aa2146b", "fqn": ["sado_analytics_services", "staging", "5sfashion", "not_null_stg_5sfashion__orders__order_id_"], "alias": "not_null_stg_5sfashion__orders__order_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.2871792, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_5sfashion__orders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.stg_5sfashion__orders"]}, "compiled_path": "target/compiled/sado_analytics_services/models/staging/5sfashion/stg_5sfashion__orders.yml/not_null_stg_5sfashion__orders__order_id_.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect `order_id`\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__orders`\nwhere `order_id` is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "`order_id`", "file_key_name": "models.stg_5sfashion__orders", "attached_node": "model.sado_analytics_services.stg_5sfashion__orders"}, "test.sado_analytics_services.not_null_sales_forecast_date.c667cc5e3b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('sales_forecast')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_sales_forecast_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "not_null_sales_forecast_date.sql", "original_file_path": "models/core/dashboards/sales_forecast.yml", "unique_id": "test.sado_analytics_services.not_null_sales_forecast_date.c667cc5e3b", "fqn": ["sado_analytics_services", "core", "dashboards", "not_null_sales_forecast_date"], "alias": "not_null_sales_forecast_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.3584845, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "sales_forecast", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.sales_forecast"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/dashboards/sales_forecast.yml/not_null_sales_forecast_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `agile-scheme-394814`.`dbt_prod_core`.`sales_forecast`\nwhere date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.sales_forecast", "attached_node": "model.sado_analytics_services.sales_forecast"}, "test.sado_analytics_services.unique_sales_forecast_date.52db94e4c4": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('sales_forecast')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_sales_forecast_date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "unique_sales_forecast_date.sql", "original_file_path": "models/core/dashboards/sales_forecast.yml", "unique_id": "test.sado_analytics_services.unique_sales_forecast_date.52db94e4c4", "fqn": ["sado_analytics_services", "core", "dashboards", "unique_sales_forecast_date"], "alias": "unique_sales_forecast_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.3606749, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "sales_forecast", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.sales_forecast"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/dashboards/sales_forecast.yml/unique_sales_forecast_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select date as unique_field\n  from `agile-scheme-394814`.`dbt_prod_core`.`sales_forecast`\n  where date is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.sales_forecast", "attached_node": "model.sado_analytics_services.sales_forecast"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard__by_location_group_date__local_page_code__ad_pic.48c9fe0c1e": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["date", "local_page_code", "ad_pic"], "model": "{{ get_where_subquery(ref('facebook_dashboard__by_location_group')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_facebook_dashboard__by_location_group_date__local_page_code__ad_pic", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_c62e0e3587c615176bf20110822ad4ce.sql", "original_file_path": "models/core/dashboards/facebook_dashboard__by_location_group.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard__by_location_group_date__local_page_code__ad_pic.48c9fe0c1e", "fqn": ["sado_analytics_services", "core", "dashboards", "dbt_utils_unique_combination_of_columns_facebook_dashboard__by_location_group_date__local_page_code__ad_pic"], "alias": "dbt_utils_unique_combination_o_c62e0e3587c615176bf20110822ad4ce", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_unique_combination_o_c62e0e3587c615176bf20110822ad4ce", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_c62e0e3587c615176bf20110822ad4ce"}, "created_at": 1732268181.365589, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_c62e0e3587c615176bf20110822ad4ce\") }}", "language": "sql", "refs": [{"name": "facebook_dashboard__by_location_group", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.facebook_dashboard__by_location_group", "attached_node": "model.sado_analytics_services.facebook_dashboard__by_location_group"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sales_dashboard_branch_id__date.c916901df6": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["branch_id", "date"], "model": "{{ get_where_subquery(ref('sales_dashboard')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_sales_dashboard_branch_id__date", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_1132a98ea153a0b9ab13267a4339af7c.sql", "original_file_path": "models/core/dashboards/sales_dashboard.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sales_dashboard_branch_id__date.c916901df6", "fqn": ["sado_analytics_services", "core", "dashboards", "dbt_utils_unique_combination_of_columns_sales_dashboard_branch_id__date"], "alias": "dbt_utils_unique_combination_o_1132a98ea153a0b9ab13267a4339af7c", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_1132a98ea153a0b9ab13267a4339af7c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_1132a98ea153a0b9ab13267a4339af7c"}, "created_at": 1732268181.3875098, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_1132a98ea153a0b9ab13267a4339af7c\") }}", "language": "sql", "refs": [{"name": "sales_dashboard", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.sales_dashboard"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/dashboards/sales_dashboard.yml/dbt_utils_unique_combination_o_1132a98ea153a0b9ab13267a4339af7c.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        branch_id, date\n    from `agile-scheme-394814`.`dbt_prod_core`.`sales_dashboard`\n    group by branch_id, date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.sales_dashboard", "attached_node": "model.sado_analytics_services.sales_dashboard"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sms_dashboard_sent_time__segment__previous_segment__sms_id.7801047a52": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["sent_time", "segment", "previous_segment", "sms_id"], "model": "{{ get_where_subquery(ref('sms_dashboard')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_sms_dashboard_sent_time__segment__previous_segment__sms_id", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_6f3d09cd06e71fa9ab763d3c3f1dd038.sql", "original_file_path": "models/core/dashboards/sms_dashboard.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sms_dashboard_sent_time__segment__previous_segment__sms_id.7801047a52", "fqn": ["sado_analytics_services", "core", "dashboards", "dbt_utils_unique_combination_of_columns_sms_dashboard_sent_time__segment__previous_segment__sms_id"], "alias": "dbt_utils_unique_combination_o_6f3d09cd06e71fa9ab763d3c3f1dd038", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_6f3d09cd06e71fa9ab763d3c3f1dd038", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_6f3d09cd06e71fa9ab763d3c3f1dd038"}, "created_at": 1732268181.399935, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_6f3d09cd06e71fa9ab763d3c3f1dd038\") }}", "language": "sql", "refs": [{"name": "sms_dashboard", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.sms_dashboard"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/dashboards/sms_dashboard.yml/dbt_utils_unique_combination_o_6f3d09cd06e71fa9ab763d3c3f1dd038.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sent_time, segment, previous_segment, sms_id\n    from `agile-scheme-394814`.`dbt_prod_core`.`sms_dashboard`\n    group by sent_time, segment, previous_segment, sms_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.sms_dashboard", "attached_node": "model.sado_analytics_services.sms_dashboard"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard_date__local_page_code__ad_pic.0aed4662f1": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["date", "local_page_code", "ad_pic"], "model": "{{ get_where_subquery(ref('facebook_dashboard')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_facebook_dashboard_date__local_page_code__ad_pic", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_8c71bc0d2528a6b19c695c9cc747d96f.sql", "original_file_path": "models/core/dashboards/facebook_dashboard.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard_date__local_page_code__ad_pic.0aed4662f1", "fqn": ["sado_analytics_services", "core", "dashboards", "dbt_utils_unique_combination_of_columns_facebook_dashboard_date__local_page_code__ad_pic"], "alias": "dbt_utils_unique_combination_o_8c71bc0d2528a6b19c695c9cc747d96f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_8c71bc0d2528a6b19c695c9cc747d96f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_8c71bc0d2528a6b19c695c9cc747d96f"}, "created_at": 1732268181.4220831, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_8c71bc0d2528a6b19c695c9cc747d96f\") }}", "language": "sql", "refs": [{"name": "facebook_dashboard", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.facebook_dashboard"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/dashboards/facebook_dashboard.yml/dbt_utils_unique_combination_o_8c71bc0d2528a6b19c695c9cc747d96f.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        date, local_page_code, ad_pic\n    from `agile-scheme-394814`.`dbt_prod_core`.`facebook_dashboard`\n    group by date, local_page_code, ad_pic\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.facebook_dashboard", "attached_node": "model.sado_analytics_services.facebook_dashboard"}, "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_cohort_analysis_customer_id__transaction_month.384c841fc7": {"test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["customer_id", "transaction_month"], "model": "{{ get_where_subquery(ref('cohort_analysis')) }}"}, "namespace": "dbt_utils"}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "dbt_utils_unique_combination_of_columns_cohort_analysis_customer_id__transaction_month", "resource_type": "test", "package_name": "sado_analytics_services", "path": "dbt_utils_unique_combination_o_39661225b5af2ec14db3cacaf6950353.sql", "original_file_path": "models/core/analysis/cohort_analysis.yml", "unique_id": "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_cohort_analysis_customer_id__transaction_month.384c841fc7", "fqn": ["sado_analytics_services", "core", "analysis", "dbt_utils_unique_combination_of_columns_cohort_analysis_customer_id__transaction_month"], "alias": "dbt_utils_unique_combination_o_39661225b5af2ec14db3cacaf6950353", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_unique_combination_o_39661225b5af2ec14db3cacaf6950353", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_utils_unique_combination_o_39661225b5af2ec14db3cacaf6950353"}, "created_at": 1732268181.432605, "relation_name": null, "raw_code": "{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_unique_combination_o_39661225b5af2ec14db3cacaf6950353\") }}", "language": "sql", "refs": [{"name": "cohort_analysis", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_unique_combination_of_columns", "macro.dbt.get_where_subquery"], "nodes": ["model.sado_analytics_services.cohort_analysis"]}, "compiled_path": "target/compiled/sado_analytics_services/models/core/analysis/cohort_analysis.yml/dbt_utils_unique_combination_o_39661225b5af2ec14db3cacaf6950353.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, transaction_month\n    from `agile-scheme-394814`.`dbt_prod_core`.`cohort_analysis`\n    group by customer_id, transaction_month\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.cohort_analysis", "attached_node": "model.sado_analytics_services.cohort_analysis"}, "test.ga4.unique_fct_ga4__pages__event_date_dt_stream_id_page_location_.7db1d0597c": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "(event_date_dt || stream_id || page_location)", "model": "{{ get_where_subquery(ref('fct_ga4__pages')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_fct_ga4__pages__event_date_dt_stream_id_page_location_", "resource_type": "test", "package_name": "ga4", "path": "unique_fct_ga4__pages__event_date_dt_stream_id_page_location_.sql", "original_file_path": "models/marts/core/fct_ga4__pages.yml", "unique_id": "test.ga4.unique_fct_ga4__pages__event_date_dt_stream_id_page_location_.7db1d0597c", "fqn": ["ga4", "marts", "core", "unique_fct_ga4__pages__event_date_dt_stream_id_page_location_"], "alias": "unique_fct_ga4__pages__event_date_dt_stream_id_page_location_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.4542768, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_ga4__pages", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.fct_ga4__pages"]}, "compiled_path": "target/compiled/ga4/models/marts/core/fct_ga4__pages.yml/unique_fct_ga4__pages__event_date_dt_stream_id_page_location_.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select (event_date_dt || stream_id || page_location) as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__pages`\n  where (event_date_dt || stream_id || page_location) is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.fct_ga4__pages", "attached_node": "model.ga4.fct_ga4__pages"}, "test.ga4.unique_dim_ga4__sessions_session_key.5ade237063": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_key", "model": "{{ get_where_subquery(ref('dim_ga4__sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_dim_ga4__sessions_session_key", "resource_type": "test", "package_name": "ga4", "path": "unique_dim_ga4__sessions_session_key.sql", "original_file_path": "models/marts/core/core.yml", "unique_id": "test.ga4.unique_dim_ga4__sessions_session_key.5ade237063", "fqn": ["ga4", "marts", "core", "unique_dim_ga4__sessions_session_key"], "alias": "unique_dim_ga4__sessions_session_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.458594, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_ga4__sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.dim_ga4__sessions"]}, "compiled_path": "target/compiled/ga4/models/marts/core/core.yml/unique_dim_ga4__sessions_session_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_key", "file_key_name": "models.dim_ga4__sessions", "attached_node": "model.ga4.dim_ga4__sessions"}, "test.ga4.unique_dim_ga4__client_keys_client_key.971e8b17de": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "client_key", "model": "{{ get_where_subquery(ref('dim_ga4__client_keys')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_dim_ga4__client_keys_client_key", "resource_type": "test", "package_name": "ga4", "path": "unique_dim_ga4__client_keys_client_key.sql", "original_file_path": "models/marts/core/core.yml", "unique_id": "test.ga4.unique_dim_ga4__client_keys_client_key.971e8b17de", "fqn": ["ga4", "marts", "core", "unique_dim_ga4__client_keys_client_key"], "alias": "unique_dim_ga4__client_keys_client_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.460783, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_ga4__client_keys", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.dim_ga4__client_keys"]}, "compiled_path": "target/compiled/ga4/models/marts/core/core.yml/unique_dim_ga4__client_keys_client_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__client_keys`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_key", "file_key_name": "models.dim_ga4__client_keys", "attached_node": "model.ga4.dim_ga4__client_keys"}, "test.ga4.unique_fct_ga4__client_keys_client_key.47115ed1b5": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "client_key", "model": "{{ get_where_subquery(ref('fct_ga4__client_keys')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_fct_ga4__client_keys_client_key", "resource_type": "test", "package_name": "ga4", "path": "unique_fct_ga4__client_keys_client_key.sql", "original_file_path": "models/marts/core/core.yml", "unique_id": "test.ga4.unique_fct_ga4__client_keys_client_key.47115ed1b5", "fqn": ["ga4", "marts", "core", "unique_fct_ga4__client_keys_client_key"], "alias": "unique_fct_ga4__client_keys_client_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.462989, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_ga4__client_keys", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.fct_ga4__client_keys"]}, "compiled_path": "target/compiled/ga4/models/marts/core/core.yml/unique_fct_ga4__client_keys_client_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__client_keys`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_key", "file_key_name": "models.fct_ga4__client_keys", "attached_node": "model.ga4.fct_ga4__client_keys"}, "test.ga4.unique_fct_ga4__user_ids_md5_user_id_or_client_key_stream_id_.dcd4dac43e": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "md5(user_id_or_client_key || stream_id)", "model": "{{ get_where_subquery(ref('fct_ga4__user_ids')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_fct_ga4__user_ids_md5_user_id_or_client_key_stream_id_", "resource_type": "test", "package_name": "ga4", "path": "unique_fct_ga4__user_ids_md5_user_id_or_client_key_stream_id_.sql", "original_file_path": "models/marts/core/fct_ga4__user_ids.yml", "unique_id": "test.ga4.unique_fct_ga4__user_ids_md5_user_id_or_client_key_stream_id_.dcd4dac43e", "fqn": ["ga4", "marts", "core", "unique_fct_ga4__user_ids_md5_user_id_or_client_key_stream_id_"], "alias": "unique_fct_ga4__user_ids_md5_user_id_or_client_key_stream_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.4663188, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_ga4__user_ids", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.fct_ga4__user_ids", "attached_node": "model.ga4.fct_ga4__user_ids"}, "test.ga4.unique_fct_ga4__sessions_daily_session_partition_key.c7a2a3ef6c": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_partition_key", "model": "{{ get_where_subquery(ref('fct_ga4__sessions_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_fct_ga4__sessions_daily_session_partition_key", "resource_type": "test", "package_name": "ga4", "path": "unique_fct_ga4__sessions_daily_session_partition_key.sql", "original_file_path": "models/marts/core/fct_ga4__sessions_daily.yml", "unique_id": "test.ga4.unique_fct_ga4__sessions_daily_session_partition_key.c7a2a3ef6c", "fqn": ["ga4", "marts", "core", "unique_fct_ga4__sessions_daily_session_partition_key"], "alias": "unique_fct_ga4__sessions_daily_session_partition_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.469437, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_ga4__sessions_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.fct_ga4__sessions_daily"]}, "compiled_path": "target/compiled/ga4/models/marts/core/fct_ga4__sessions_daily.yml/unique_fct_ga4__sessions_daily_session_partition_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_partition_key", "file_key_name": "models.fct_ga4__sessions_daily", "attached_node": "model.ga4.fct_ga4__sessions_daily"}, "test.ga4.unique_fct_ga4__sessions_session_key.93f6a798f0": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_key", "model": "{{ get_where_subquery(ref('fct_ga4__sessions')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_fct_ga4__sessions_session_key", "resource_type": "test", "package_name": "ga4", "path": "unique_fct_ga4__sessions_session_key.sql", "original_file_path": "models/marts/core/fct_ga4__sessions.yml", "unique_id": "test.ga4.unique_fct_ga4__sessions_session_key.93f6a798f0", "fqn": ["ga4", "marts", "core", "unique_fct_ga4__sessions_session_key"], "alias": "unique_fct_ga4__sessions_session_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.4725854, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_ga4__sessions", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.fct_ga4__sessions"]}, "compiled_path": "target/compiled/ga4/models/marts/core/fct_ga4__sessions.yml/unique_fct_ga4__sessions_session_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__sessions`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_key", "file_key_name": "models.fct_ga4__sessions", "attached_node": "model.ga4.fct_ga4__sessions"}, "test.ga4.unique_dim_ga4__sessions_daily_session_partition_key.e40d884a13": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_partition_key", "model": "{{ get_where_subquery(ref('dim_ga4__sessions_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_dim_ga4__sessions_daily_session_partition_key", "resource_type": "test", "package_name": "ga4", "path": "unique_dim_ga4__sessions_daily_session_partition_key.sql", "original_file_path": "models/marts/core/dim_ga4__sessions_daily.yml", "unique_id": "test.ga4.unique_dim_ga4__sessions_daily_session_partition_key.e40d884a13", "fqn": ["ga4", "marts", "core", "unique_dim_ga4__sessions_daily_session_partition_key"], "alias": "unique_dim_ga4__sessions_daily_session_partition_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.4757974, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_ga4__sessions_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.dim_ga4__sessions_daily"]}, "compiled_path": "target/compiled/ga4/models/marts/core/dim_ga4__sessions_daily.yml/unique_dim_ga4__sessions_daily_session_partition_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod_marketing`.`dim_ga4__sessions_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_partition_key", "file_key_name": "models.dim_ga4__sessions_daily", "attached_node": "model.ga4.dim_ga4__sessions_daily"}, "test.ga4.unique_stg_ga4__user_properties_client_key.1ff0272413": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "client_key", "model": "{{ get_where_subquery(ref('stg_ga4__user_properties')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__user_properties_client_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__user_properties_client_key.sql", "original_file_path": "models/staging/stg_ga4__user_properties.yml", "unique_id": "test.ga4.unique_stg_ga4__user_properties_client_key.1ff0272413", "fqn": ["ga4", "staging", "unique_stg_ga4__user_properties_client_key"], "alias": "unique_stg_ga4__user_properties_client_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.47881, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__user_properties", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__user_properties"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__user_properties.yml/unique_stg_ga4__user_properties_client_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__user_properties`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_key", "file_key_name": "models.stg_ga4__user_properties", "attached_node": "model.ga4.stg_ga4__user_properties"}, "test.ga4.unique_stg_ga4__events_event_key.985cc306e5": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "event_key", "model": "{{ get_where_subquery(ref('stg_ga4__events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__events_event_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__events_event_key.sql", "original_file_path": "models/staging/stg_ga4__events.yml", "unique_id": "test.ga4.unique_stg_ga4__events_event_key.985cc306e5", "fqn": ["ga4", "staging", "unique_stg_ga4__events_event_key"], "alias": "unique_stg_ga4__events_event_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.4836044, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__events.yml/unique_stg_ga4__events_event_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select event_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__events`\n  where event_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "event_key", "file_key_name": "models.stg_ga4__events", "attached_node": "model.ga4.stg_ga4__events"}, "test.ga4.unique_stg_ga4__sessions_first_last_pageviews_session_key.8984455c5e": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_key", "model": "{{ get_where_subquery(ref('stg_ga4__sessions_first_last_pageviews')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__sessions_first_last_pageviews_session_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__sessions_first_last_pageviews_session_key.sql", "original_file_path": "models/staging/stg_ga4__sessions_first_last_pageviews.yml", "unique_id": "test.ga4.unique_stg_ga4__sessions_first_last_pageviews_session_key.8984455c5e", "fqn": ["ga4", "staging", "unique_stg_ga4__sessions_first_last_pageviews_session_key"], "alias": "unique_stg_ga4__sessions_first_last_pageviews_session_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.487891, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_first_last_pageviews", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__sessions_first_last_pageviews"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_first_last_pageviews.yml/unique_stg_ga4__sessions_first_last_pageviews_session_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_first_last_pageviews`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_key", "file_key_name": "models.stg_ga4__sessions_first_last_pageviews", "attached_node": "model.ga4.stg_ga4__sessions_first_last_pageviews"}, "test.ga4.unique_stg_ga4__client_key_first_last_pageviews_client_key.4cb23d702f": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "client_key", "model": "{{ get_where_subquery(ref('stg_ga4__client_key_first_last_pageviews')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__client_key_first_last_pageviews_client_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__client_key_first_last_pageviews_client_key.sql", "original_file_path": "models/staging/stg_ga4__client_key_first_last_pageviews.yml", "unique_id": "test.ga4.unique_stg_ga4__client_key_first_last_pageviews_client_key.4cb23d702f", "fqn": ["ga4", "staging", "unique_stg_ga4__client_key_first_last_pageviews_client_key"], "alias": "unique_stg_ga4__client_key_first_last_pageviews_client_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.490943, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__client_key_first_last_pageviews", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__client_key_first_last_pageviews"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__client_key_first_last_pageviews.yml/unique_stg_ga4__client_key_first_last_pageviews_client_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_pageviews`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_key", "file_key_name": "models.stg_ga4__client_key_first_last_pageviews", "attached_node": "model.ga4.stg_ga4__client_key_first_last_pageviews"}, "test.ga4.unique_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_partition_key.5383afcda4": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_partition_key", "model": "{{ get_where_subquery(ref('stg_ga4__sessions_traffic_sources_last_non_direct_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_partition_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__sessions_traff_7a6b2cd1d2af0381da2364d198967bd1.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.yml", "unique_id": "test.ga4.unique_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_partition_key.5383afcda4", "fqn": ["ga4", "staging", "unique_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_partition_key"], "alias": "unique_stg_ga4__sessions_traff_7a6b2cd1d2af0381da2364d198967bd1", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "unique_stg_ga4__sessions_traff_7a6b2cd1d2af0381da2364d198967bd1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "unique_stg_ga4__sessions_traff_7a6b2cd1d2af0381da2364d198967bd1"}, "created_at": 1732268181.4942613, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"unique_stg_ga4__sessions_traff_7a6b2cd1d2af0381da2364d198967bd1\") }}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_traffic_sources_last_non_direct_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.yml/unique_stg_ga4__sessions_traff_7a6b2cd1d2af0381da2364d198967bd1.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_partition_key", "file_key_name": "models.stg_ga4__sessions_traffic_sources_last_non_direct_daily", "attached_node": "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"}, "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_source.db8c720050": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "session_source", "model": "{{ get_where_subquery(ref('stg_ga4__sessions_traffic_sources_last_non_direct_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_source", "resource_type": "test", "package_name": "ga4", "path": "not_null_stg_ga4__sessions_tra_475837b528af8be9144831abb0320876.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.yml", "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_source.db8c720050", "fqn": ["ga4", "staging", "not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_source"], "alias": "not_null_stg_ga4__sessions_tra_475837b528af8be9144831abb0320876", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_stg_ga4__sessions_tra_475837b528af8be9144831abb0320876", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_stg_ga4__sessions_tra_475837b528af8be9144831abb0320876"}, "created_at": 1732268181.4964302, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_stg_ga4__sessions_tra_475837b528af8be9144831abb0320876\") }}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_traffic_sources_last_non_direct_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.yml/not_null_stg_ga4__sessions_tra_475837b528af8be9144831abb0320876.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_source\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\nwhere session_source is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_source", "file_key_name": "models.stg_ga4__sessions_traffic_sources_last_non_direct_daily", "attached_node": "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"}, "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_source.449fe23be6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "last_non_direct_source", "model": "{{ get_where_subquery(ref('stg_ga4__sessions_traffic_sources_last_non_direct_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_source", "resource_type": "test", "package_name": "ga4", "path": "not_null_stg_ga4__sessions_tra_dc0e1823eed8c1ed4defac230d65cebd.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.yml", "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_source.449fe23be6", "fqn": ["ga4", "staging", "not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_source"], "alias": "not_null_stg_ga4__sessions_tra_dc0e1823eed8c1ed4defac230d65cebd", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_stg_ga4__sessions_tra_dc0e1823eed8c1ed4defac230d65cebd", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_stg_ga4__sessions_tra_dc0e1823eed8c1ed4defac230d65cebd"}, "created_at": 1732268181.4985757, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_stg_ga4__sessions_tra_dc0e1823eed8c1ed4defac230d65cebd\") }}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_traffic_sources_last_non_direct_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.yml/not_null_stg_ga4__sessions_tra_dc0e1823eed8c1ed4defac230d65cebd.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_non_direct_source\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\nwhere last_non_direct_source is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "last_non_direct_source", "file_key_name": "models.stg_ga4__sessions_traffic_sources_last_non_direct_daily", "attached_node": "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"}, "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_default_channel_grouping.2483b5ae6b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "last_non_direct_default_channel_grouping", "model": "{{ get_where_subquery(ref('stg_ga4__sessions_traffic_sources_last_non_direct_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_default_channel_grouping", "resource_type": "test", "package_name": "ga4", "path": "not_null_stg_ga4__sessions_tra_5c241c15bf04672337e3e46c119965a9.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.yml", "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_default_channel_grouping.2483b5ae6b", "fqn": ["ga4", "staging", "not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_default_channel_grouping"], "alias": "not_null_stg_ga4__sessions_tra_5c241c15bf04672337e3e46c119965a9", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_stg_ga4__sessions_tra_5c241c15bf04672337e3e46c119965a9", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_stg_ga4__sessions_tra_5c241c15bf04672337e3e46c119965a9"}, "created_at": 1732268181.5007267, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_stg_ga4__sessions_tra_5c241c15bf04672337e3e46c119965a9\") }}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_traffic_sources_last_non_direct_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources_last_non_direct_daily.yml/not_null_stg_ga4__sessions_tra_5c241c15bf04672337e3e46c119965a9.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_non_direct_default_channel_grouping\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\nwhere last_non_direct_default_channel_grouping is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "last_non_direct_default_channel_grouping", "file_key_name": "models.stg_ga4__sessions_traffic_sources_last_non_direct_daily", "attached_node": "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"}, "test.ga4.unique_stg_ga4__derived_session_properties_daily_session_partition_key.03cee96a93": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_partition_key", "model": "{{ get_where_subquery(ref('stg_ga4__derived_session_properties_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__derived_session_properties_daily_session_partition_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__derived_sessio_08786da4e07cb8e13e01005086f64304.sql", "original_file_path": "models/staging/stg_ga4__derived_session_properties_daily.yml", "unique_id": "test.ga4.unique_stg_ga4__derived_session_properties_daily_session_partition_key.03cee96a93", "fqn": ["ga4", "staging", "unique_stg_ga4__derived_session_properties_daily_session_partition_key"], "alias": "unique_stg_ga4__derived_sessio_08786da4e07cb8e13e01005086f64304", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "unique_stg_ga4__derived_sessio_08786da4e07cb8e13e01005086f64304", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "unique_stg_ga4__derived_sessio_08786da4e07cb8e13e01005086f64304"}, "created_at": 1732268181.5036962, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"unique_stg_ga4__derived_sessio_08786da4e07cb8e13e01005086f64304\") }}", "language": "sql", "refs": [{"name": "stg_ga4__derived_session_properties_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "session_partition_key", "file_key_name": "models.stg_ga4__derived_session_properties_daily", "attached_node": "model.ga4.stg_ga4__derived_session_properties_daily"}, "test.ga4.unique_stg_ga4__session_conversions_daily_session_partition_key.03be265557": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_partition_key", "model": "{{ get_where_subquery(ref('stg_ga4__session_conversions_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__session_conversions_daily_session_partition_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__session_conversions_daily_session_partition_key.sql", "original_file_path": "models/staging/stg_ga4__session_conversions_daily.yml", "unique_id": "test.ga4.unique_stg_ga4__session_conversions_daily_session_partition_key.03be265557", "fqn": ["ga4", "staging", "unique_stg_ga4__session_conversions_daily_session_partition_key"], "alias": "unique_stg_ga4__session_conversions_daily_session_partition_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.506662, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__session_conversions_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__session_conversions_daily"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__session_conversions_daily.yml/unique_stg_ga4__session_conversions_daily_session_partition_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__session_conversions_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_partition_key", "file_key_name": "models.stg_ga4__session_conversions_daily", "attached_node": "model.ga4.stg_ga4__session_conversions_daily"}, "test.ga4.unique_stg_ga4__client_key_first_last_events_client_key.ed9b2aba25": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "client_key", "model": "{{ get_where_subquery(ref('stg_ga4__client_key_first_last_events')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__client_key_first_last_events_client_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__client_key_first_last_events_client_key.sql", "original_file_path": "models/staging/stg_ga4__client_key_first_last_events.yml", "unique_id": "test.ga4.unique_stg_ga4__client_key_first_last_events_client_key.ed9b2aba25", "fqn": ["ga4", "staging", "unique_stg_ga4__client_key_first_last_events_client_key"], "alias": "unique_stg_ga4__client_key_first_last_events_client_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.5097408, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__client_key_first_last_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__client_key_first_last_events"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__client_key_first_last_events.yml/unique_stg_ga4__client_key_first_last_events_client_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__client_key_first_last_events`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_key", "file_key_name": "models.stg_ga4__client_key_first_last_events", "attached_node": "model.ga4.stg_ga4__client_key_first_last_events"}, "test.ga4.unique_stg_ga4__sessions_traffic_sources_session_key.417549e35d": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_key", "model": "{{ get_where_subquery(ref('stg_ga4__sessions_traffic_sources')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__sessions_traffic_sources_session_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__sessions_traffic_sources_session_key.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources.yml", "unique_id": "test.ga4.unique_stg_ga4__sessions_traffic_sources_session_key.417549e35d", "fqn": ["ga4", "staging", "unique_stg_ga4__sessions_traffic_sources_session_key"], "alias": "unique_stg_ga4__sessions_traffic_sources_session_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.5185387, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_traffic_sources", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__sessions_traffic_sources"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources.yml/unique_stg_ga4__sessions_traffic_sources_session_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_key", "file_key_name": "models.stg_ga4__sessions_traffic_sources", "attached_node": "model.ga4.stg_ga4__sessions_traffic_sources"}, "test.ga4.not_null_stg_ga4__sessions_traffic_sources_session_source.49313fe211": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "session_source", "model": "{{ get_where_subquery(ref('stg_ga4__sessions_traffic_sources')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_ga4__sessions_traffic_sources_session_source", "resource_type": "test", "package_name": "ga4", "path": "not_null_stg_ga4__sessions_traffic_sources_session_source.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources.yml", "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_session_source.49313fe211", "fqn": ["ga4", "staging", "not_null_stg_ga4__sessions_traffic_sources_session_source"], "alias": "not_null_stg_ga4__sessions_traffic_sources_session_source", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.5207164, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_traffic_sources", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__sessions_traffic_sources"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources.yml/not_null_stg_ga4__sessions_traffic_sources_session_source.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_source\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources`\nwhere session_source is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_source", "file_key_name": "models.stg_ga4__sessions_traffic_sources", "attached_node": "model.ga4.stg_ga4__sessions_traffic_sources"}, "test.ga4.unique_stg_ga4__sessions_traffic_sources_daily_session_partition_key.0a63631827": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_partition_key", "model": "{{ get_where_subquery(ref('stg_ga4__sessions_traffic_sources_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__sessions_traffic_sources_daily_session_partition_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__sessions_traff_9abcdae796602e4bb4140e17dd769db5.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources_daily.yml", "unique_id": "test.ga4.unique_stg_ga4__sessions_traffic_sources_daily_session_partition_key.0a63631827", "fqn": ["ga4", "staging", "unique_stg_ga4__sessions_traffic_sources_daily_session_partition_key"], "alias": "unique_stg_ga4__sessions_traff_9abcdae796602e4bb4140e17dd769db5", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "unique_stg_ga4__sessions_traff_9abcdae796602e4bb4140e17dd769db5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "unique_stg_ga4__sessions_traff_9abcdae796602e4bb4140e17dd769db5"}, "created_at": 1732268181.523832, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"unique_stg_ga4__sessions_traff_9abcdae796602e4bb4140e17dd769db5\") }}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_traffic_sources_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__sessions_traffic_sources_daily"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources_daily.yml/unique_stg_ga4__sessions_traff_9abcdae796602e4bb4140e17dd769db5.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_partition_key", "file_key_name": "models.stg_ga4__sessions_traffic_sources_daily", "attached_node": "model.ga4.stg_ga4__sessions_traffic_sources_daily"}, "test.ga4.not_null_stg_ga4__sessions_traffic_sources_daily_session_source.5204b8a71d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "session_source", "model": "{{ get_where_subquery(ref('stg_ga4__sessions_traffic_sources_daily')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_ga4__sessions_traffic_sources_daily_session_source", "resource_type": "test", "package_name": "ga4", "path": "not_null_stg_ga4__sessions_traffic_sources_daily_session_source.sql", "original_file_path": "models/staging/stg_ga4__sessions_traffic_sources_daily.yml", "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_daily_session_source.5204b8a71d", "fqn": ["ga4", "staging", "not_null_stg_ga4__sessions_traffic_sources_daily_session_source"], "alias": "not_null_stg_ga4__sessions_traffic_sources_daily_session_source", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.526034, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__sessions_traffic_sources_daily", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__sessions_traffic_sources_daily"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__sessions_traffic_sources_daily.yml/not_null_stg_ga4__sessions_traffic_sources_daily_session_source.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_source\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__sessions_traffic_sources_daily`\nwhere session_source is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "session_source", "file_key_name": "models.stg_ga4__sessions_traffic_sources_daily", "attached_node": "model.ga4.stg_ga4__sessions_traffic_sources_daily"}, "test.ga4.unique_stg_ga4__derived_session_properties_session_key.64e97d9e4f": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "session_key", "model": "{{ get_where_subquery(ref('stg_ga4__derived_session_properties')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__derived_session_properties_session_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__derived_session_properties_session_key.sql", "original_file_path": "models/staging/stg_ga4__derived_session_properties.yml", "unique_id": "test.ga4.unique_stg_ga4__derived_session_properties_session_key.64e97d9e4f", "fqn": ["ga4", "staging", "unique_stg_ga4__derived_session_properties_session_key"], "alias": "unique_stg_ga4__derived_session_properties_session_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.5289593, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__derived_session_properties", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "session_key", "file_key_name": "models.stg_ga4__derived_session_properties", "attached_node": "model.ga4.stg_ga4__derived_session_properties"}, "test.ga4.not_null_stg_ga4__user_id_mapping_client_key.7c63d41e4c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "client_key", "model": "{{ get_where_subquery(ref('stg_ga4__user_id_mapping')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_ga4__user_id_mapping_client_key", "resource_type": "test", "package_name": "ga4", "path": "not_null_stg_ga4__user_id_mapping_client_key.sql", "original_file_path": "models/staging/stg_ga4__user_id_mapping.yml", "unique_id": "test.ga4.not_null_stg_ga4__user_id_mapping_client_key.7c63d41e4c", "fqn": ["ga4", "staging", "not_null_stg_ga4__user_id_mapping_client_key"], "alias": "not_null_stg_ga4__user_id_mapping_client_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.5319595, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__user_id_mapping", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "client_key", "file_key_name": "models.stg_ga4__user_id_mapping", "attached_node": "model.ga4.stg_ga4__user_id_mapping"}, "test.ga4.unique_stg_ga4__user_id_mapping_client_key.cae6196948": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "client_key", "model": "{{ get_where_subquery(ref('stg_ga4__user_id_mapping')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__user_id_mapping_client_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__user_id_mapping_client_key.sql", "original_file_path": "models/staging/stg_ga4__user_id_mapping.yml", "unique_id": "test.ga4.unique_stg_ga4__user_id_mapping_client_key.cae6196948", "fqn": ["ga4", "staging", "unique_stg_ga4__user_id_mapping_client_key"], "alias": "unique_stg_ga4__user_id_mapping_client_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.5346322, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__user_id_mapping", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "client_key", "file_key_name": "models.stg_ga4__user_id_mapping", "attached_node": "model.ga4.stg_ga4__user_id_mapping"}, "test.ga4.unique_stg_ga4__derived_user_properties_client_key.74573345b3": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "client_key", "model": "{{ get_where_subquery(ref('stg_ga4__derived_user_properties')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "unique_stg_ga4__derived_user_properties_client_key", "resource_type": "test", "package_name": "ga4", "path": "unique_stg_ga4__derived_user_properties_client_key.sql", "original_file_path": "models/staging/stg_ga4__derived_user_properties.yml", "unique_id": "test.ga4.unique_stg_ga4__derived_user_properties_client_key.74573345b3", "fqn": ["ga4", "staging", "unique_stg_ga4__derived_user_properties_client_key"], "alias": "unique_stg_ga4__derived_user_properties_client_key", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1732268181.5386786, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_ga4__derived_user_properties", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__derived_user_properties"]}, "compiled_path": "target/compiled/ga4/models/staging/stg_ga4__derived_user_properties.yml/unique_stg_ga4__derived_user_properties_client_key.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `agile-scheme-394814`.`dbt_prod`.`stg_ga4__derived_user_properties`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "client_key", "file_key_name": "models.stg_ga4__derived_user_properties", "attached_node": "model.ga4.stg_ga4__derived_user_properties"}, "test.ga4.not_null_stg_ga4__event_page_view_page_location.8b37318084": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "page_location", "model": "{{ get_where_subquery(ref('stg_ga4__event_page_view')) }}"}, "namespace": null}, "database": "agile-scheme-394814", "schema": "dbt_prod_dbt_test__audit", "name": "not_null_stg_ga4__event_page_view_page_location", "resource_type": "test", "package_name": "ga4", "path": "not_null_stg_ga4__event_page_view_page_location.sql", "original_file_path": "models/staging/events/stg_ga4__event_page_view.yml", "unique_id": "test.ga4.not_null_stg_ga4__event_page_view_page_location.8b37318084", "fqn": ["ga4", "staging", "events", "not_null_stg_ga4__event_page_view_page_location"], "alias": "not_null_stg_ga4__event_page_view_page_location", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "WARN", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"severity": "WARN"}, "created_at": 1732268181.5494206, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\") }}", "language": "sql", "refs": [{"name": "stg_ga4__event_page_view", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.ga4.stg_ga4__event_page_view"]}, "compiled_path": "target/compiled/ga4/models/staging/events/stg_ga4__event_page_view.yml/not_null_stg_ga4__event_page_view_page_location.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect page_location\nfrom `agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_page_view`\nwhere page_location is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "page_location", "file_key_name": "models.stg_ga4__event_page_view", "attached_node": "model.ga4.stg_ga4__event_page_view"}}, "sources": {"source.sado_analytics_services.misc.weather": {"database": "agile-scheme-394814", "schema": "Misc", "name": "weather", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/utilities/_misc__sources.yml", "original_file_path": "models/utilities/_misc__sources.yml", "unique_id": "source.sado_analytics_services.misc.weather", "fqn": ["sado_analytics_services", "utilities", "misc", "weather"], "source_name": "misc", "source_description": "misc data pulled from various sources for various purposes", "loader": "", "identifier": "p__weather__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Misc`.`p__weather__*`", "created_at": 1732268181.6046417}, "source.sado_analytics_services.misc.weather_hourly": {"database": "agile-scheme-394814", "schema": "Misc", "name": "weather_hourly", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/utilities/_misc__sources.yml", "original_file_path": "models/utilities/_misc__sources.yml", "unique_id": "source.sado_analytics_services.misc.weather_hourly", "fqn": ["sado_analytics_services", "utilities", "misc", "weather_hourly"], "source_name": "misc", "source_description": "misc data pulled from various sources for various purposes", "loader": "", "identifier": "p__weather_hourly__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Misc`.`p__weather_hourly__*`", "created_at": 1732268181.6048617}, "source.sado_analytics_services.caresoft.tickets": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "tickets", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.tickets", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "tickets"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_tickets_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_tickets_*`", "created_at": 1732268181.6050339}, "source.sado_analytics_services.caresoft.ticket_details": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "ticket_details", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.ticket_details", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "ticket_details"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_ticketDetails_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_ticketDetails_*`", "created_at": 1732268181.6052186}, "source.sado_analytics_services.caresoft.contacts": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "contacts", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.contacts", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "contacts"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_contacts_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_contacts_*`", "created_at": 1732268181.605388}, "source.sado_analytics_services.caresoft.contact_details": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "contact_details", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.contact_details", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "contact_details"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_contactDetails_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_contactDetails_*`", "created_at": 1732268181.6055489}, "source.sado_analytics_services.caresoft.calls": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "calls", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.calls", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "calls"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_calls_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 36, "period": "hour"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_calls_*`", "created_at": 1732268181.6057081}, "source.sado_analytics_services.caresoft.chats": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "chats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.chats", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "chats"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_chats__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_chats__*`", "created_at": 1732268181.6058662}, "source.sado_analytics_services.caresoft.chats_live": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "chats_live", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.chats_live", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "chats_live"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_chats_live__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_chats_live__*`", "created_at": 1732268181.6060214}, "source.sado_analytics_services.caresoft.chats_fb": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "chats_fb", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.chats_fb", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "chats_fb"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_chats_fb__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_chats_fb__*`", "created_at": 1732268181.606177}, "source.sado_analytics_services.caresoft.chats_zalo": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "chats_zalo", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.chats_zalo", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "chats_zalo"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_chats_zalo__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_chats_zalo__*`", "created_at": 1732268181.6063383}, "source.sado_analytics_services.caresoft.agents": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "agents", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.agents", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "agents"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_agents_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_agents_*`", "created_at": 1732268181.6064932}, "source.sado_analytics_services.caresoft.groups": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "groups", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.groups", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "groups"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_groups_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_groups_*`", "created_at": 1732268181.6066473}, "source.sado_analytics_services.caresoft.ticket_custom_fields": {"database": "agile-scheme-394814", "schema": "Caresoft", "name": "ticket_custom_fields", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/caresoft/_caresoft__sources.yml", "original_file_path": "models/staging/caresoft/_caresoft__sources.yml", "unique_id": "source.sado_analytics_services.caresoft.ticket_custom_fields", "fqn": ["sado_analytics_services", "staging", "caresoft", "caresoft", "ticket_custom_fields"], "source_name": "caresoft", "source_description": "Data pulled from caresoft contact center", "loader": "", "identifier": "p_ticketCustomFields_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Caresoft`.`p_ticketCustomFields_*`", "created_at": 1732268181.6067998}, "source.sado_analytics_services.forecaster.forecast": {"database": "agile-scheme-394814", "schema": "AutoForecaster", "name": "forecast", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/forecaster/_forecaster__sources.yml", "original_file_path": "models/staging/forecaster/_forecaster__sources.yml", "unique_id": "source.sado_analytics_services.forecaster.forecast", "fqn": ["sado_analytics_services", "staging", "forecaster", "forecaster", "forecast"], "source_name": "forecaster", "source_description": "Forecasting models daily results", "loader": "", "identifier": "forecast", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`AutoForecaster`.`forecast`", "created_at": 1732268181.6069555}, "source.sado_analytics_services.nhanhvn.p_bills": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_bills", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_bills", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_bills"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_bills_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_bills_*`", "created_at": 1732268181.607121}, "source.sado_analytics_services.nhanhvn.p_carriers": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_carriers", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_carriers", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_carriers"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_carriers_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_carriers_*`", "created_at": 1732268181.6072743}, "source.sado_analytics_services.nhanhvn.p_categories": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_categories", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_categories", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_categories"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_categories_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_categories_*`", "created_at": 1732268181.6074293}, "source.sado_analytics_services.nhanhvn.p_customers": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_customers", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_customers", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_customers"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_customers_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_customers_*`", "created_at": 1732268181.6075895}, "source.sado_analytics_services.nhanhvn.p_orders": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_orders", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_orders", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_orders"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_orders_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_orders_*`", "created_at": 1732268181.6077502}, "source.sado_analytics_services.nhanhvn.p_products": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_products", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_products", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_products"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_products_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_products_*`", "created_at": 1732268181.6079063}, "source.sado_analytics_services.nhanhvn.p_stores": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_stores", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_stores", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_stores"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_stores_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_stores_*`", "created_at": 1732268181.6080608}, "source.sado_analytics_services.nhanhvn.p_users": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_users", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_users", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_users"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_users_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_users_*`", "created_at": 1732268181.6082144}, "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_webhook_inventoryChange", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_webhook_inventoryChange"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_webhook_inventoryChange", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_webhook_inventoryChange`", "created_at": 1732268181.6083698}, "source.sado_analytics_services.nhanhvn.p_webhook_orderAdd": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_webhook_orderAdd", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_webhook_orderAdd", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_webhook_orderAdd"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_webhook_orderAdd", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_webhook_orderAdd`", "created_at": 1732268181.6085238}, "source.sado_analytics_services.nhanhvn.p_webhook_orderUpdate": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_webhook_orderUpdate", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_webhook_orderUpdate", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_webhook_orderUpdate"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_webhook_orderUpdate", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_webhook_orderUpdate`", "created_at": 1732268181.6086774}, "source.sado_analytics_services.nhanhvn.p_webhook_orderDelete": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_webhook_orderDelete", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_webhook_orderDelete", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_webhook_orderDelete"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_webhook_orderDelete", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_webhook_orderDelete`", "created_at": 1732268181.6088307}, "source.sado_analytics_services.nhanhvn.p_inventory": {"database": "agile-scheme-394814", "schema": "Nhanhvn", "name": "p_inventory", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "original_file_path": "models/staging/nhanhvn/_nhanhvn__sources.yml", "unique_id": "source.sado_analytics_services.nhanhvn.p_inventory", "fqn": ["sado_analytics_services", "staging", "nhanhvn", "nhanhvn", "p_inventory"], "source_name": "nhanhvn", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "p_inventory_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Nhanhvn`.`p_inventory_*`", "created_at": 1732268181.6089864}, "source.sado_analytics_services.kiotViet.p_products_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_products_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_products_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_products_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_products_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_products_list__*`", "created_at": 1732268181.6091442}, "source.sado_analytics_services.kiotViet.p_branches_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_branches_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_branches_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_branches_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_branches_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_branches_list__*`", "created_at": 1732268181.6093214}, "source.sado_analytics_services.kiotViet.p_orders_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_orders_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_orders_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_orders_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_orders_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_orders_list__*`", "created_at": 1732268181.609477}, "source.sado_analytics_services.kiotViet.p_pricebooks_branches": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_pricebooks_branches", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_pricebooks_branches", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_pricebooks_branches"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_pricebooks_branches__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_pricebooks_branches__*`", "created_at": 1732268181.6096313}, "source.sado_analytics_services.kiotViet.p_surcharges_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_surcharges_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_surcharges_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_surcharges_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_surcharges_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_surcharges_list__*`", "created_at": 1732268181.6097841}, "source.sado_analytics_services.kiotViet.p_pricebooks_users": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_pricebooks_users", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_pricebooks_users", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_pricebooks_users"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_pricebooks_users__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_pricebooks_users__*`", "created_at": 1732268181.6099389}, "source.sado_analytics_services.kiotViet.p_users_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_users_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_users_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_users_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_users_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_users_list__*`", "created_at": 1732268181.6100926}, "source.sado_analytics_services.kiotViet.p_categories_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_categories_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_categories_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_categories_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_categories_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_categories_list__*`", "created_at": 1732268181.6102493}, "source.sado_analytics_services.kiotViet.p_purchaseorders_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_purchaseorders_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_purchaseorders_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_purchaseorders_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_purchaseorders_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list__*`", "created_at": 1732268181.6104023}, "source.sado_analytics_services.kiotViet.p_purchaseorders_list2": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_purchaseorders_list2", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_purchaseorders_list2", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_purchaseorders_list2"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_purchaseorders_list2__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_purchaseorders_list2__*`", "created_at": 1732268181.6105547}, "source.sado_analytics_services.kiotViet.p_customersGroups_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_customersGroups_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_customersGroups_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_customersGroups_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_customersGroups_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_customersGroups_list__*`", "created_at": 1732268181.6107073}, "source.sado_analytics_services.kiotViet.p_pricebooks_customer_groups": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_pricebooks_customer_groups", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_pricebooks_customer_groups", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_pricebooks_customer_groups"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_pricebooks_customer_groups__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_pricebooks_customer_groups__*`", "created_at": 1732268181.610862}, "source.sado_analytics_services.kiotViet.p_invoices_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_invoices_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_invoices_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_invoices_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_invoices_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_invoices_list__*`", "created_at": 1732268181.6110153}, "source.sado_analytics_services.kiotViet.p_invoices_list2": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_invoices_list2", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_invoices_list2", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_invoices_list2"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_invoices_list2__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_invoices_list2__*`", "created_at": 1732268181.61117}, "source.sado_analytics_services.kiotViet.p_returns_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_returns_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_returns_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_returns_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_returns_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_returns_list__*`", "created_at": 1732268181.6113255}, "source.sado_analytics_services.kiotViet.p_returns_list2": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_returns_list2", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_returns_list2", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_returns_list2"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_returns_list2__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_returns_list2__*`", "created_at": 1732268181.6114812}, "source.sado_analytics_services.kiotViet.p_bankAccounts_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_bankAccounts_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_bankAccounts_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_bankAccounts_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_bankAccounts_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_bankAccounts_list__*`", "created_at": 1732268181.6116347}, "source.sado_analytics_services.kiotViet.p_saleschannels_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_saleschannels_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_saleschannels_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_saleschannels_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_saleschannels_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_saleschannels_list__*`", "created_at": 1732268181.6117857}, "source.sado_analytics_services.kiotViet.p_customers_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_customers_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_customers_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_customers_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_customers_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_customers_list__*`", "created_at": 1732268181.6119375}, "source.sado_analytics_services.kiotViet.p_locations_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_locations_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_locations_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_locations_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_locations_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_locations_list__*`", "created_at": 1732268181.6120887}, "source.sado_analytics_services.kiotViet.p_products_inventory": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_products_inventory", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_products_inventory", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_products_inventory"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_products_inventory__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_products_inventory__*`", "created_at": 1732268181.6122391}, "source.sado_analytics_services.kiotViet.p_pricebooks_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_pricebooks_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_pricebooks_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_pricebooks_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_pricebooks_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_pricebooks_list__*`", "created_at": 1732268181.6123898}, "source.sado_analytics_services.kiotViet.p_webhook_invoice_update": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_webhook_invoice_update", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_webhook_invoice_update", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_webhook_invoice_update"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_webhook_invoice_update", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_webhook_invoice_update`", "created_at": 1732268181.6125429}, "source.sado_analytics_services.kiotViet.p_webhook_inventory_update": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_webhook_inventory_update", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_webhook_inventory_update", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_webhook_inventory_update"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_webhook_inventory_update", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_webhook_inventory_update`", "created_at": 1732268181.612694}, "source.sado_analytics_services.kiotViet.p_webhook_customer_update": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_webhook_customer_update", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_webhook_customer_update", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_webhook_customer_update"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_webhook_customer_update", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_webhook_customer_update`", "created_at": 1732268181.6128469}, "source.sado_analytics_services.kiotViet.p_transfers_list": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "p_transfers_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.p_transfers_list", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "p_transfers_list"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_transfers_list__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_transfers_list__*`", "created_at": 1732268181.6129987}, "source.sado_analytics_services.kiotViet.webhook_product_delete": {"database": "agile-scheme-394814", "schema": "KiotViet", "name": "webhook_product_delete", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/kiotViet/_kiotViet__sources.yml", "original_file_path": "models/staging/kiotViet/_kiotViet__sources.yml", "unique_id": "source.sado_analytics_services.kiotViet.webhook_product_delete", "fqn": ["sado_analytics_services", "staging", "kiotViet", "kiotViet", "webhook_product_delete"], "source_name": "kiotViet", "source_description": "data pulled from kiotviet via API & Webhook", "loader": "", "identifier": "p_webhook_product_delete", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`KiotViet`.`p_webhook_product_delete`", "created_at": 1732268181.613151}, "source.sado_analytics_services.esms.sms_sent_data": {"database": "agile-scheme-394814", "schema": "Esms", "name": "sms_sent_data", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/esms/_esms__sources.yml", "original_file_path": "models/staging/esms/_esms__sources.yml", "unique_id": "source.sado_analytics_services.esms.sms_sent_data", "fqn": ["sado_analytics_services", "staging", "esms", "esms", "sms_sent_data"], "source_name": "esms", "source_description": "data pulled from esms via API", "loader": "", "identifier": "p__sms_sent_data_v2__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Esms`.`p__sms_sent_data_v2__*`", "created_at": 1732268181.6133268}, "source.sado_analytics_services.esms.sms_sent_data_history": {"database": "agile-scheme-394814", "schema": "Esms", "name": "sms_sent_data_history", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/esms/_esms__sources.yml", "original_file_path": "models/staging/esms/_esms__sources.yml", "unique_id": "source.sado_analytics_services.esms.sms_sent_data_history", "fqn": ["sado_analytics_services", "staging", "esms", "esms", "sms_sent_data_history"], "source_name": "esms", "source_description": "data pulled from esms via API", "loader": "", "identifier": "p__sms_sent_data_v1__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Esms`.`p__sms_sent_data_v1__*`", "created_at": 1732268181.6134808}, "source.sado_analytics_services.pagespeed.pagespeed": {"database": "agile-scheme-394814", "schema": "PageSpeedInsights", "name": "pagespeed", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pagespeed/_pagespeed__sources.yml", "original_file_path": "models/staging/pagespeed/_pagespeed__sources.yml", "unique_id": "source.sado_analytics_services.pagespeed.pagespeed", "fqn": ["sado_analytics_services", "staging", "pagespeed", "pagespeed", "pagespeed"], "source_name": "pagespeed", "source_description": "data pulled from nhanhvn via API & Webhook", "loader": "", "identifier": "PageSpeedInsights", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`PageSpeedInsights`.`PageSpeedInsights`", "created_at": 1732268181.6136353}, "source.sado_analytics_services.googleads.account_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "account_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.account_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "account_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AccountConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AccountConversionStats_1322374205`", "created_at": 1732268181.6137884}, "source.sado_analytics_services.googleads.keyword_cross_device_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_cross_device_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_cross_device_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordCrossDeviceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordCrossDeviceStats_1322374205`", "created_at": 1732268181.613939}, "source.sado_analytics_services.googleads.hourly_account_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_account_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_account_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_account_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyAccountStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyAccountStats_1322374205`", "created_at": 1732268181.6140902}, "source.sado_analytics_services.googleads.gender": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Gender_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Gender_1322374205`", "created_at": 1732268181.6142414}, "source.sado_analytics_services.googleads.ad_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdConversionStats_1322374205`", "created_at": 1732268181.614393}, "source.sado_analytics_services.googleads.search_query_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "search_query_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.search_query_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "search_query_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_SearchQueryConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_SearchQueryConversionStats_1322374205`", "created_at": 1732268181.6145437}, "source.sado_analytics_services.googleads.video_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_VideoNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_VideoNonClickStats_1322374205`", "created_at": 1732268181.6146939}, "source.sado_analytics_services.googleads.ad_group_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupConversionStats_1322374205`", "created_at": 1732268181.6148462}, "source.sado_analytics_services.googleads.hourly_campaign_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_campaign_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_campaign_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_campaign_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyCampaignStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyCampaignStats_1322374205`", "created_at": 1732268181.6150093}, "source.sado_analytics_services.googleads.campaign_cross_device_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_cross_device_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_cross_device_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignCrossDeviceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignCrossDeviceStats_1322374205`", "created_at": 1732268181.6151602}, "source.sado_analytics_services.googleads.gender_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GenderNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GenderNonClickStats_1322374205`", "created_at": 1732268181.6153133}, "source.sado_analytics_services.googleads.video": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Video_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Video_1322374205`", "created_at": 1732268181.6154659}, "source.sado_analytics_services.googleads.video_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_VideoBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_VideoBasicStats_1322374205`", "created_at": 1732268181.6156216}, "source.sado_analytics_services.googleads.campaign_audience_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudienceNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudienceNonClickStats_1322374205`", "created_at": 1732268181.6157746}, "source.sado_analytics_services.googleads.hourly_account_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_account_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_account_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_account_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyAccountConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyAccountConversionStats_1322374205`", "created_at": 1732268181.6159286}, "source.sado_analytics_services.googleads.video_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_VideoConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_VideoConversionStats_1322374205`", "created_at": 1732268181.6160817}, "source.sado_analytics_services.googleads.ad_group_audience": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudience_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudience_1322374205`", "created_at": 1732268181.6162388}, "source.sado_analytics_services.googleads.age_range_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRangeNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRangeNonClickStats_1322374205`", "created_at": 1732268181.6163952}, "source.sado_analytics_services.googleads.account_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "account_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.account_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "account_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AccountNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AccountNonClickStats_1322374205`", "created_at": 1732268181.6165483}, "source.sado_analytics_services.googleads.parental_status_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatusBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatusBasicStats_1322374205`", "created_at": 1732268181.6167}, "source.sado_analytics_services.googleads.ad_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdStats_1322374205`", "created_at": 1732268181.6168504}, "source.sado_analytics_services.googleads.hourly_ad_group_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_ad_group_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_ad_group_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_ad_group_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyAdGroupConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyAdGroupConversionStats_1322374205`", "created_at": 1732268181.6169999}, "source.sado_analytics_services.googleads.parental_status_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatusStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatusStats_1322374205`", "created_at": 1732268181.6171508}, "source.sado_analytics_services.googleads.bid_goal": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "bid_goal", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.bid_goal", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "bid_goal"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_BidGoal_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_BidGoal_1322374205`", "created_at": 1732268181.6173224}, "source.sado_analytics_services.googleads.ad_cross_device_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_cross_device_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_cross_device_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdCrossDeviceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdCrossDeviceStats_1322374205`", "created_at": 1732268181.6174853}, "source.sado_analytics_services.googleads.ad_group_ad_label": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_ad_label", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_ad_label", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_ad_label"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAdLabel_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAdLabel_1322374205`", "created_at": 1732268181.6176374}, "source.sado_analytics_services.googleads.ad_group_audience_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudienceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudienceConversionStats_1322374205`", "created_at": 1732268181.6178098}, "source.sado_analytics_services.googleads.search_query_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "search_query_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.search_query_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "search_query_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_SearchQueryStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_SearchQueryStats_1322374205`", "created_at": 1732268181.6179605}, "source.sado_analytics_services.googleads.ad_group_cross_device_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_cross_device_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_cross_device_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_cross_device_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupCrossDeviceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCrossDeviceConversionStats_1322374205`", "created_at": 1732268181.6181123}, "source.sado_analytics_services.googleads.budget": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "budget", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.budget", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "budget"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Budget_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Budget_1322374205`", "created_at": 1732268181.6182644}, "source.sado_analytics_services.googleads.bid_goal_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "bid_goal_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.bid_goal_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "bid_goal_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_BidGoalConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_BidGoalConversionStats_1322374205`", "created_at": 1732268181.6184158}, "source.sado_analytics_services.googleads.ad_group_cross_device_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_cross_device_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_cross_device_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_cross_device_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupCrossDeviceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCrossDeviceStats_1322374205`", "created_at": 1732268181.6185672}, "source.sado_analytics_services.googleads.age_range_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRangeStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRangeStats_1322374205`", "created_at": 1732268181.6187205}, "source.sado_analytics_services.googleads.campaign_audience": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudience_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudience_1322374205`", "created_at": 1732268181.6188731}, "source.sado_analytics_services.googleads.keyword_cross_device_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_cross_device_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_cross_device_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_cross_device_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordCrossDeviceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordCrossDeviceConversionStats_1322374205`", "created_at": 1732268181.619024}, "source.sado_analytics_services.googleads.campaign": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Campaign_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Campaign_1322374205`", "created_at": 1732268181.6191752}, "source.sado_analytics_services.googleads.ad_cross_device_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_cross_device_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_cross_device_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_cross_device_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdCrossDeviceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdCrossDeviceConversionStats_1322374205`", "created_at": 1732268181.6193275}, "source.sado_analytics_services.googleads.placement_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PlacementBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PlacementBasicStats_1322374205`", "created_at": 1732268181.6194787}, "source.sado_analytics_services.googleads.age_range_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRangeBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRangeBasicStats_1322374205`", "created_at": 1732268181.619631}, "source.sado_analytics_services.googleads.keyword_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordBasicStats_1322374205`", "created_at": 1732268181.6197832}, "source.sado_analytics_services.googleads.parental_status_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatusNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatusNonClickStats_1322374205`", "created_at": 1732268181.6199327}, "source.sado_analytics_services.googleads.gender_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GenderConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GenderConversionStats_1322374205`", "created_at": 1732268181.6200829}, "source.sado_analytics_services.googleads.placement_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PlacementStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PlacementStats_1322374205`", "created_at": 1732268181.6202335}, "source.sado_analytics_services.googleads.ad_group": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroup_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroup_1322374205`", "created_at": 1732268181.6203833}, "source.sado_analytics_services.googleads.ad_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdBasicStats_1322374205`", "created_at": 1732268181.6205335}, "source.sado_analytics_services.googleads.ad_group_audience_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudienceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudienceStats_1322374205`", "created_at": 1732268181.6206844}, "source.sado_analytics_services.googleads.placement_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PlacementConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PlacementConversionStats_1322374205`", "created_at": 1732268181.6208355}, "source.sado_analytics_services.googleads.ad_group_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupStats_1322374205`", "created_at": 1732268181.6209898}, "source.sado_analytics_services.googleads.campaign_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignConversionStats_1322374205`", "created_at": 1732268181.6211402}, "source.sado_analytics_services.googleads.budget_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "budget_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.budget_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "budget_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_BudgetStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_BudgetStats_1322374205`", "created_at": 1732268181.621333}, "source.sado_analytics_services.googleads.account_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "account_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.account_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "account_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AccountBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AccountBasicStats_1322374205`", "created_at": 1732268181.6214898}, "source.sado_analytics_services.googleads.customer": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "customer", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.customer", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "customer"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Customer_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Customer_1322374205`", "created_at": 1732268181.6216416}, "source.sado_analytics_services.googleads.campaign_label": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_label", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_label", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_label"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignLabel_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignLabel_1322374205`", "created_at": 1732268181.6217947}, "source.sado_analytics_services.googleads.age_range_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRangeConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRangeConversionStats_1322374205`", "created_at": 1732268181.6219451}, "source.sado_analytics_services.googleads.campaign_audience_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudienceBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudienceBasicStats_1322374205`", "created_at": 1732268181.6220949}, "source.sado_analytics_services.googleads.keyword_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordStats_1322374205`", "created_at": 1732268181.6222458}, "source.sado_analytics_services.googleads.hourly_ad_group_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_ad_group_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_ad_group_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_ad_group_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyAdGroupStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyAdGroupStats_1322374205`", "created_at": 1732268181.6223967}, "source.sado_analytics_services.googleads.placement": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Placement_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Placement_1322374205`", "created_at": 1732268181.6225479}, "source.sado_analytics_services.googleads.video_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "video_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.video_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "video_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_VideoStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_VideoStats_1322374205`", "created_at": 1732268181.6227014}, "source.sado_analytics_services.googleads.campaign_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignBasicStats_1322374205`", "created_at": 1732268181.6228771}, "source.sado_analytics_services.googleads.ad_group_label": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_label", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_label", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_label"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupLabel_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupLabel_1322374205`", "created_at": 1732268181.6230295}, "source.sado_analytics_services.googleads.parental_status_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatusConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatusConversionStats_1322374205`", "created_at": 1732268181.6231794}, "source.sado_analytics_services.googleads.campaign_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignStats_1322374205`", "created_at": 1732268181.6233416}, "source.sado_analytics_services.googleads.campaign_audience_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudienceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudienceConversionStats_1322374205`", "created_at": 1732268181.6234922}, "source.sado_analytics_services.googleads.campaign_criterion": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_criterion", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_criterion", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_criterion"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignCriterion_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignCriterion_1322374205`", "created_at": 1732268181.6236415}, "source.sado_analytics_services.googleads.hourly_bid_goal_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_bid_goal_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_bid_goal_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_bid_goal_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyBidGoalStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyBidGoalStats_1322374205`", "created_at": 1732268181.6237922}, "source.sado_analytics_services.googleads.click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ClickStats_1322374205`", "created_at": 1732268181.6239426}, "source.sado_analytics_services.googleads.campaign_audience_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_audience_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_audience_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_audience_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignAudienceStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignAudienceStats_1322374205`", "created_at": 1732268181.6240933}, "source.sado_analytics_services.googleads.parental_status": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "parental_status", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.parental_status", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "parental_status"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ParentalStatus_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ParentalStatus_1322374205`", "created_at": 1732268181.6242473}, "source.sado_analytics_services.googleads.geo_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "geo_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.geo_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "geo_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GeoStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GeoStats_1322374205`", "created_at": 1732268181.6244009}, "source.sado_analytics_services.googleads.ad_group_criterion_label": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_criterion_label", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_criterion_label", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_criterion_label"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupCriterionLabel_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCriterionLabel_1322374205`", "created_at": 1732268181.6245568}, "source.sado_analytics_services.googleads.age_range": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "age_range", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.age_range", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "age_range"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AgeRange_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AgeRange_1322374205`", "created_at": 1732268181.6247106}, "source.sado_analytics_services.googleads.geo_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "geo_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.geo_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "geo_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GeoConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GeoConversionStats_1322374205`", "created_at": 1732268181.6248612}, "source.sado_analytics_services.googleads.hourly_campaign_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "hourly_campaign_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.hourly_campaign_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "hourly_campaign_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_HourlyCampaignConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_HourlyCampaignConversionStats_1322374205`", "created_at": 1732268181.6250145}, "source.sado_analytics_services.googleads.keyword": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Keyword_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Keyword_1322374205`", "created_at": 1732268181.6251662}, "source.sado_analytics_services.googleads.campaign_cookie_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_cookie_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_cookie_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_cookie_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignCookieStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignCookieStats_1322374205`", "created_at": 1732268181.6253395}, "source.sado_analytics_services.googleads.ad_group_audience_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudienceBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudienceBasicStats_1322374205`", "created_at": 1732268181.6254916}, "source.sado_analytics_services.googleads.ad_group_criterion": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_criterion", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_criterion", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_criterion"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupCriterion_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupCriterion_1322374205`", "created_at": 1732268181.6256428}, "source.sado_analytics_services.googleads.paid_organic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "paid_organic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.paid_organic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "paid_organic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PaidOrganicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PaidOrganicStats_1322374205`", "created_at": 1732268181.6257963}, "source.sado_analytics_services.googleads.location_based_campaign_criterion": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "location_based_campaign_criterion", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.location_based_campaign_criterion", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "location_based_campaign_criterion"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_LocationBasedCampaignCriterion_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_LocationBasedCampaignCriterion_1322374205`", "created_at": 1732268181.6259491}, "source.sado_analytics_services.googleads.gender_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GenderStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GenderStats_1322374205`", "created_at": 1732268181.6261}, "source.sado_analytics_services.googleads.account_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "account_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.account_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "account_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AccountStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AccountStats_1322374205`", "created_at": 1732268181.626256}, "source.sado_analytics_services.googleads.shopping_product_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "shopping_product_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.shopping_product_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "shopping_product_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ShoppingProductConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ShoppingProductConversionStats_1322374205`", "created_at": 1732268181.6264093}, "source.sado_analytics_services.googleads.campaign_cross_device_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_cross_device_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_cross_device_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_cross_device_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignCrossDeviceConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignCrossDeviceConversionStats_1322374205`", "created_at": 1732268181.626561}, "source.sado_analytics_services.googleads.product_group_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "product_group_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.product_group_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "product_group_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ProductGroupStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ProductGroupStats_1322374205`", "created_at": 1732268181.626711}, "source.sado_analytics_services.googleads.gender_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "gender_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.gender_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "gender_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_GenderBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_GenderBasicStats_1322374205`", "created_at": 1732268181.6268628}, "source.sado_analytics_services.googleads.ad_group_bid_modifier": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_bid_modifier", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_bid_modifier", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_bid_modifier"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupBidModifier_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupBidModifier_1322374205`", "created_at": 1732268181.6270142}, "source.sado_analytics_services.googleads.campaign_location_target_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "campaign_location_target_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.campaign_location_target_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "campaign_location_target_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_CampaignLocationTargetStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_CampaignLocationTargetStats_1322374205`", "created_at": 1732268181.6271641}, "source.sado_analytics_services.googleads.ad_group_basic_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_basic_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_basic_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_basic_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupBasicStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupBasicStats_1322374205`", "created_at": 1732268181.627315}, "source.sado_analytics_services.googleads.keyword_conversion_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "keyword_conversion_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.keyword_conversion_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "keyword_conversion_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_KeywordConversionStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_KeywordConversionStats_1322374205`", "created_at": 1732268181.6274645}, "source.sado_analytics_services.googleads.shopping_product_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "shopping_product_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.shopping_product_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "shopping_product_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_ShoppingProductStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_ShoppingProductStats_1322374205`", "created_at": 1732268181.627615}, "source.sado_analytics_services.googleads.placement_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "placement_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.placement_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "placement_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_PlacementNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_PlacementNonClickStats_1322374205`", "created_at": 1732268181.6277652}, "source.sado_analytics_services.googleads.bid_goal_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "bid_goal_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.bid_goal_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "bid_goal_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_BidGoalStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_BidGoalStats_1322374205`", "created_at": 1732268181.6279144}, "source.sado_analytics_services.googleads.ad_group_audience_non_click_stats": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad_group_audience_non_click_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad_group_audience_non_click_stats", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad_group_audience_non_click_stats"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_AdGroupAudienceNonClickStats_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_AdGroupAudienceNonClickStats_1322374205`", "created_at": 1732268181.6280656}, "source.sado_analytics_services.googleads.ad": {"database": "agile-scheme-394814", "schema": "GoogleAds", "name": "ad", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/googleAds/_googleAds__sources.yml", "original_file_path": "models/staging/googleAds/_googleAds__sources.yml", "unique_id": "source.sado_analytics_services.googleads.ad", "fqn": ["sado_analytics_services", "staging", "googleAds", "googleads", "ad"], "source_name": "googleads", "source_description": "Google Ads data export", "loader": "", "identifier": "ads_Ad_1322374205", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GoogleAds`.`ads_Ad_1322374205`", "created_at": 1732268181.6282165}, "source.sado_analytics_services.pancake.users": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "users", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.users", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "users"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_users__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_users__*`", "created_at": 1732268181.6283703}, "source.sado_analytics_services.pancake.conversations": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "conversations", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.conversations", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "conversations"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_conversations__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_conversations__*`", "created_at": 1732268181.6285207}, "source.sado_analytics_services.pancake.customer_engagements": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "customer_engagements", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.customer_engagements", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "customer_engagements"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_customer_engagements__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_customer_engagements__*`", "created_at": 1732268181.6286707}, "source.sado_analytics_services.pancake.pages": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "pages", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.pages", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "pages"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_pages__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_pages__*`", "created_at": 1732268181.6288204}, "source.sado_analytics_services.pancake.user_stats": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "user_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.user_stats", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "user_stats"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_user_stats__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_user_stats__*`", "created_at": 1732268181.6289718}, "source.sado_analytics_services.pancake.posts": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "posts", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.posts", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "posts"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_posts__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_posts__*`", "created_at": 1732268181.6291342}, "source.sado_analytics_services.pancake.tags": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "tags", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.tags", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "tags"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_tags__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_tags__*`", "created_at": 1732268181.6293051}, "source.sado_analytics_services.pancake.page": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "page", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.page", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "page"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_page__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_page__*`", "created_at": 1732268181.6294591}, "source.sado_analytics_services.pancake.customers": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "customers", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.customers", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "customers"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_customers__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_customers__*`", "created_at": 1732268181.6296103}, "source.sado_analytics_services.pancake.page_stats": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "page_stats", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.page_stats", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "page_stats"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_page_stats__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_page_stats__*`", "created_at": 1732268181.6297612}, "source.sado_analytics_services.pancake.pos_orders": {"database": "agile-scheme-394814", "schema": "Pancake", "name": "pos_orders", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/pancake/_pancake__sources.yml", "original_file_path": "models/staging/pancake/_pancake__sources.yml", "unique_id": "source.sado_analytics_services.pancake.pos_orders", "fqn": ["sado_analytics_services", "staging", "pancake", "pancake", "pos_orders"], "source_name": "pancake", "source_description": "data pulled from Pancake", "loader": "", "identifier": "p_pos_orders__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Pancake`.`p_pos_orders__*`", "created_at": 1732268181.6299117}, "source.sado_analytics_services.gSheet.asm_list": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "asm_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.asm_list", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "asm_list"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_asm_list_2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_asm_list_2`", "created_at": 1732268181.6300654}, "source.sado_analytics_services.gSheet._ext_asm_list2": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "_ext_asm_list2", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet._ext_asm_list2", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "_ext_asm_list2"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_asm_list2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_asm_list2`", "created_at": 1732268181.630216}, "source.sado_analytics_services.gSheet.facebook_budget": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "facebook_budget", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.facebook_budget", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "facebook_budget"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_facebook_budget__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_facebook_budget__*`", "created_at": 1732268181.6303656}, "source.sado_analytics_services.gSheet._ext_pancake_tags": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "_ext_pancake_tags", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet._ext_pancake_tags", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "_ext_pancake_tags"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_pancake_tags", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_pancake_tags`", "created_at": 1732268181.6305168}, "source.sado_analytics_services.gSheet.content": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "content", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.content", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "content"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_content__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_content__*`", "created_at": 1732268181.6306791}, "source.sado_analytics_services.gSheet.maintainance_sheet": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "maintainance_sheet", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.maintainance_sheet", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "maintainance_sheet"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_maintainance_sheet", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_maintainance_sheet`", "created_at": 1732268181.63083}, "source.sado_analytics_services.gSheet.constructing": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "constructing", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.constructing", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "constructing"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_constructing_procedure", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_constructing_procedure`", "created_at": 1732268181.6309798}, "source.sado_analytics_services.gSheet.cs_calls": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "cs_calls", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.cs_calls", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "cs_calls"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_cscalls__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_cscalls__*`", "created_at": 1732268181.6311338}, "source.sado_analytics_services.gSheet.manufacture_plan": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "manufacture_plan", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.manufacture_plan", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "manufacture_plan"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_manufacture_plan__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_manufacture_plan__*`", "created_at": 1732268181.6312923}, "source.sado_analytics_services.gSheet.traffic": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "traffic", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.traffic", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "traffic"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_traffic__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_traffic__*`", "created_at": 1732268181.6314428}, "source.sado_analytics_services.gSheet.cogs": {"database": "agile-scheme-394814", "schema": "GSheet", "name": "cogs", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/gSheet/_gSheet__sources.yml", "original_file_path": "models/staging/gSheet/_gSheet__sources.yml", "unique_id": "source.sado_analytics_services.gSheet.cogs", "fqn": ["sado_analytics_services", "staging", "gSheet", "gSheet", "cogs"], "source_name": "gSheet", "source_description": "data pulled from google sheets, spreadsheets", "loader": "", "identifier": "_ext_cogs_v2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`GSheet`.`_ext_cogs_v2`", "created_at": 1732268181.6315932}, "source.sado_analytics_services.facebookAds.p_AdsInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_AdsInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_AdsInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_AdsInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_AdsInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_AdsInsights__*`", "created_at": 1732268181.631746}, "source.sado_analytics_services.facebookAds.p_AccountInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_AccountInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_AccountInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_AccountInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_AccountInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_AccountInsights__*`", "created_at": 1732268181.631896}, "source.sado_analytics_services.facebookAds.p_AudienceInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_AudienceInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_AudienceInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_AudienceInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_AudienceInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_AudienceInsights__*`", "created_at": 1732268181.632047}, "source.sado_analytics_services.facebookAds.p_RegionInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_RegionInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_RegionInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_RegionInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_RegionInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_RegionInsights__*`", "created_at": 1732268181.6321995}, "source.sado_analytics_services.facebookAds.p_CreativesInsights__*": {"database": "agile-scheme-394814", "schema": "Facebook", "name": "p_CreativesInsights__*", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/facebookAds/_facebookAds__sources.yml", "original_file_path": "models/staging/facebookAds/_facebookAds__sources.yml", "unique_id": "source.sado_analytics_services.facebookAds.p_CreativesInsights__*", "fqn": ["sado_analytics_services", "staging", "facebookAds", "facebookAds", "p_CreativesInsights__*"], "source_name": "facebookAds", "source_description": "data pulled from meta ads via FB graph API", "loader": "", "identifier": "p_CreativesInsights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_batched_at", "freshness": {"warn_after": {"count": 12, "period": "day"}, "error_after": {"count": 16, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook`.`p_CreativesInsights__*`", "created_at": 1732268181.6323516}, "source.sado_analytics_services.tiktok.campaign": {"database": "agile-scheme-394814", "schema": "Tiktok", "name": "campaign", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "original_file_path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "unique_id": "source.sado_analytics_services.tiktok.campaign", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "tiktok", "campaign"], "source_name": "tiktok", "source_description": "data from tiktok business manager", "loader": "", "identifier": "p_campaign__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Tiktok`.`p_campaign__*`", "created_at": 1732268181.6325078}, "source.sado_analytics_services.tiktok.adgroup": {"database": "agile-scheme-394814", "schema": "Tiktok", "name": "adgroup", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "original_file_path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "unique_id": "source.sado_analytics_services.tiktok.adgroup", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "tiktok", "adgroup"], "source_name": "tiktok", "source_description": "data from tiktok business manager", "loader": "", "identifier": "p_adgroup__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Tiktok`.`p_adgroup__*`", "created_at": 1732268181.6326604}, "source.sado_analytics_services.tiktok.ad": {"database": "agile-scheme-394814", "schema": "Tiktok", "name": "ad", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "original_file_path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "unique_id": "source.sado_analytics_services.tiktok.ad", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "tiktok", "ad"], "source_name": "tiktok", "source_description": "data from tiktok business manager", "loader": "", "identifier": "p_ad__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Tiktok`.`p_ad__*`", "created_at": 1732268181.632812}, "source.sado_analytics_services.tiktok.ad_age_gender": {"database": "agile-scheme-394814", "schema": "Tiktok", "name": "ad_age_gender", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "original_file_path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "unique_id": "source.sado_analytics_services.tiktok.ad_age_gender", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "tiktok", "ad_age_gender"], "source_name": "tiktok", "source_description": "data from tiktok business manager", "loader": "", "identifier": "p_ad_age_gender_report__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Tiktok`.`p_ad_age_gender_report__*`", "created_at": 1732268181.6329656}, "source.sado_analytics_services.tiktok.ad_report_daily": {"database": "agile-scheme-394814", "schema": "Tiktok", "name": "ad_report_daily", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "original_file_path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "unique_id": "source.sado_analytics_services.tiktok.ad_report_daily", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "tiktok", "ad_report_daily"], "source_name": "tiktok", "source_description": "data from tiktok business manager", "loader": "", "identifier": "p_ad_report_daily__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Tiktok`.`p_ad_report_daily__*`", "created_at": 1732268181.6331196}, "source.sado_analytics_services.tiktok.image_report": {"database": "agile-scheme-394814", "schema": "Tiktok", "name": "image_report", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "original_file_path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "unique_id": "source.sado_analytics_services.tiktok.image_report", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "tiktok", "image_report"], "source_name": "tiktok", "source_description": "data from tiktok business manager", "loader": "", "identifier": "p_image_report__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Tiktok`.`p_image_report__*`", "created_at": 1732268181.6332986}, "source.sado_analytics_services.tiktok.search_report": {"database": "agile-scheme-394814", "schema": "Tiktok", "name": "search_report", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "original_file_path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "unique_id": "source.sado_analytics_services.tiktok.search_report", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "tiktok", "search_report"], "source_name": "tiktok", "source_description": "data from tiktok business manager", "loader": "", "identifier": "p_search_report__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Tiktok`.`p_search_report__*`", "created_at": 1732268181.6334538}, "source.sado_analytics_services.tiktok.creative_report": {"database": "agile-scheme-394814", "schema": "Tiktok", "name": "creative_report", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "original_file_path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "unique_id": "source.sado_analytics_services.tiktok.creative_report", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "tiktok", "creative_report"], "source_name": "tiktok", "source_description": "data from tiktok business manager", "loader": "", "identifier": "p_creative_report__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Tiktok`.`p_creative_report__*`", "created_at": 1732268181.6336174}, "source.sado_analytics_services.tiktok.video_insight": {"database": "agile-scheme-394814", "schema": "Tiktok", "name": "video_insight", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "original_file_path": "models/staging/tiktokAds/_tiktok_ads__sources.yml", "unique_id": "source.sado_analytics_services.tiktok.video_insight", "fqn": ["sado_analytics_services", "staging", "tiktokAds", "tiktok", "video_insight"], "source_name": "tiktok", "source_description": "data from tiktok business manager", "loader": "", "identifier": "p_video_insight__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Tiktok`.`p_video_insight__*`", "created_at": 1732268181.63377}, "source.sado_analytics_services.web.orders": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "orders", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.web.orders", "fqn": ["sado_analytics_services", "staging", "5sfashion", "web", "orders"], "source_name": "web", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_websitev2__orders", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_websitev2__orders`", "created_at": 1732268181.6339264}, "source.sado_analytics_services.web.order_details": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "order_details", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.web.order_details", "fqn": ["sado_analytics_services", "staging", "5sfashion", "web", "order_details"], "source_name": "web", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_websitev2__order_details", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_websitev2__order_details`", "created_at": 1732268181.6340804}, "source.sado_analytics_services.web.categories": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "categories", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.web.categories", "fqn": ["sado_analytics_services", "staging", "5sfashion", "web", "categories"], "source_name": "web", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_websitev2__categories", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_websitev2__categories`", "created_at": 1732268181.6342337}, "source.sado_analytics_services.web.order_shipings": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "order_shipings", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.web.order_shipings", "fqn": ["sado_analytics_services", "staging", "5sfashion", "web", "order_shipings"], "source_name": "web", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_websitev2__order_shipings", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_websitev2__order_shipings`", "created_at": 1732268181.6343844}, "source.sado_analytics_services.web.products": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "products", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.web.products", "fqn": ["sado_analytics_services", "staging", "5sfashion", "web", "products"], "source_name": "web", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_websitev2__products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_websitev2__products`", "created_at": 1732268181.6345348}, "source.sado_analytics_services.web.product_details": {"database": "agile-scheme-394814", "schema": "WebsiteDB", "name": "product_details", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/5sfashion/_5sfashion__sources.yml", "original_file_path": "models/staging/5sfashion/_5sfashion__sources.yml", "unique_id": "source.sado_analytics_services.web.product_details", "fqn": ["sado_analytics_services", "staging", "5sfashion", "web", "product_details"], "source_name": "web", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_websitev2__product_details", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`WebsiteDB`.`p_websitev2__product_details`", "created_at": 1732268181.6346881}, "source.sado_analytics_services.shopee.order_list": {"database": "agile-scheme-394814", "schema": "SHOPEE", "name": "order_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/shopee/_shopee__sources.yml", "original_file_path": "models/staging/shopee/_shopee__sources.yml", "unique_id": "source.sado_analytics_services.shopee.order_list", "fqn": ["sado_analytics_services", "staging", "shopee", "shopee", "order_list"], "source_name": "shopee", "source_description": "data pulled from Shopee", "loader": "", "identifier": "order_list", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`SHOPEE`.`order_list`", "created_at": 1732268181.6348417}, "source.sado_analytics_services.shopee.item_list": {"database": "agile-scheme-394814", "schema": "SHOPEE", "name": "item_list", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/shopee/_shopee__sources.yml", "original_file_path": "models/staging/shopee/_shopee__sources.yml", "unique_id": "source.sado_analytics_services.shopee.item_list", "fqn": ["sado_analytics_services", "staging", "shopee", "shopee", "item_list"], "source_name": "shopee", "source_description": "data pulled from Shopee", "loader": "", "identifier": "item_list", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`SHOPEE`.`item_list`", "created_at": 1732268181.6349907}, "source.sado_analytics_services.shopee.ad_daily_performance": {"database": "agile-scheme-394814", "schema": "SHOPEE", "name": "ad_daily_performance", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/shopee/_shopee__sources.yml", "original_file_path": "models/staging/shopee/_shopee__sources.yml", "unique_id": "source.sado_analytics_services.shopee.ad_daily_performance", "fqn": ["sado_analytics_services", "staging", "shopee", "shopee", "ad_daily_performance"], "source_name": "shopee", "source_description": "data pulled from Shopee", "loader": "", "identifier": "ad_daily_performance", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`SHOPEE`.`ad_daily_performance`", "created_at": 1732268181.6351473}, "source.sado_analytics_services.shopee.ad_hourly_performance": {"database": "agile-scheme-394814", "schema": "SHOPEE", "name": "ad_hourly_performance", "resource_type": "source", "package_name": "sado_analytics_services", "path": "models/staging/shopee/_shopee__sources.yml", "original_file_path": "models/staging/shopee/_shopee__sources.yml", "unique_id": "source.sado_analytics_services.shopee.ad_hourly_performance", "fqn": ["sado_analytics_services", "staging", "shopee", "shopee", "ad_hourly_performance"], "source_name": "shopee", "source_description": "data pulled from Shopee", "loader": "", "identifier": "ad_hourly_performance", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`SHOPEE`.`ad_hourly_performance`", "created_at": 1732268181.6352975}, "source.ga4.ga4.events": {"database": "agile-scheme-394814", "schema": "analytics", "name": "events", "resource_type": "source", "package_name": "ga4", "path": "models/staging/src_ga4.yml", "original_file_path": "models/staging/src_ga4.yml", "unique_id": "source.ga4.ga4.events", "fqn": ["ga4", "staging", "ga4", "events"], "source_name": "ga4", "source_description": "", "loader": "", "identifier": "events_*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Main events table exported by GA4. Sharded by date.", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`analytics`.`events_*`", "created_at": 1732268181.635469}, "source.fb.fb.ad_accounts": {"database": "agile-scheme-394814", "schema": "Facebook_v2", "name": "ad_accounts", "resource_type": "source", "package_name": "fb", "path": "models/staging/_fb__sources.yml", "original_file_path": "models/staging/_fb__sources.yml", "unique_id": "source.fb.fb.ad_accounts", "fqn": ["fb", "staging", "fb", "ad_accounts"], "source_name": "fb", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_ad_accounts__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook_v2`.`p_ad_accounts__*`", "created_at": 1732268181.6356375}, "source.fb.fb.pages": {"database": "agile-scheme-394814", "schema": "Facebook_v2", "name": "pages", "resource_type": "source", "package_name": "fb", "path": "models/staging/_fb__sources.yml", "original_file_path": "models/staging/_fb__sources.yml", "unique_id": "source.fb.fb.pages", "fqn": ["fb", "staging", "fb", "pages"], "source_name": "fb", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_pages__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook_v2`.`p_pages__*`", "created_at": 1732268181.6358037}, "source.fb.fb.ad_insights": {"database": "agile-scheme-394814", "schema": "Facebook_v2", "name": "ad_insights", "resource_type": "source", "package_name": "fb", "path": "models/staging/_fb__sources.yml", "original_file_path": "models/staging/_fb__sources.yml", "unique_id": "source.fb.fb.ad_insights", "fqn": ["fb", "staging", "fb", "ad_insights"], "source_name": "fb", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_ad_insights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook_v2`.`p_ad_insights__*`", "created_at": 1732268181.63597}, "source.fb.fb.region_demographic": {"database": "agile-scheme-394814", "schema": "Facebook_v2", "name": "region_demographic", "resource_type": "source", "package_name": "fb", "path": "models/staging/_fb__sources.yml", "original_file_path": "models/staging/_fb__sources.yml", "unique_id": "source.fb.fb.region_demographic", "fqn": ["fb", "staging", "fb", "region_demographic"], "source_name": "fb", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_region_demographic__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook_v2`.`p_region_demographic__*`", "created_at": 1732268181.636134}, "source.fb.fb.age_gender_demographic": {"database": "agile-scheme-394814", "schema": "Facebook_v2", "name": "age_gender_demographic", "resource_type": "source", "package_name": "fb", "path": "models/staging/_fb__sources.yml", "original_file_path": "models/staging/_fb__sources.yml", "unique_id": "source.fb.fb.age_gender_demographic", "fqn": ["fb", "staging", "fb", "age_gender_demographic"], "source_name": "fb", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_age_gender_demographic__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook_v2`.`p_age_gender_demographic__*`", "created_at": 1732268181.6363058}, "source.fb.fb.account_insights": {"database": "agile-scheme-394814", "schema": "Facebook_v2", "name": "account_insights", "resource_type": "source", "package_name": "fb", "path": "models/staging/_fb__sources.yml", "original_file_path": "models/staging/_fb__sources.yml", "unique_id": "source.fb.fb.account_insights", "fqn": ["fb", "staging", "fb", "account_insights"], "source_name": "fb", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_account_insights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook_v2`.`p_account_insights__*`", "created_at": 1732268181.6364725}, "source.fb.fb.page_insights": {"database": "agile-scheme-394814", "schema": "Facebook_v2", "name": "page_insights", "resource_type": "source", "package_name": "fb", "path": "models/staging/_fb__sources.yml", "original_file_path": "models/staging/_fb__sources.yml", "unique_id": "source.fb.fb.page_insights", "fqn": ["fb", "staging", "fb", "page_insights"], "source_name": "fb", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_page_insights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook_v2`.`p_page_insights__*`", "created_at": 1732268181.6366382}, "source.fb.fb.post_insights": {"database": "agile-scheme-394814", "schema": "Facebook_v2", "name": "post_insights", "resource_type": "source", "package_name": "fb", "path": "models/staging/_fb__sources.yml", "original_file_path": "models/staging/_fb__sources.yml", "unique_id": "source.fb.fb.post_insights", "fqn": ["fb", "staging", "fb", "post_insights"], "source_name": "fb", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_post_insights__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook_v2`.`p_post_insights__*`", "created_at": 1732268181.6368039}, "source.fb.fb.page_posts": {"database": "agile-scheme-394814", "schema": "Facebook_v2", "name": "page_posts", "resource_type": "source", "package_name": "fb", "path": "models/staging/_fb__sources.yml", "original_file_path": "models/staging/_fb__sources.yml", "unique_id": "source.fb.fb.page_posts", "fqn": ["fb", "staging", "fb", "page_posts"], "source_name": "fb", "source_description": "data pulled from 5S fashion web database", "loader": "", "identifier": "p_page_posts__*", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`agile-scheme-394814`.`Facebook_v2`.`p_page_posts__*`", "created_at": 1732268181.6369686}}, "macros": {"macro.sado_analytics_services.source": {"name": "source", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/source_overide.sql", "original_file_path": "macros/source_overide.sql", "unique_id": "macro.sado_analytics_services.source", "macro_sql": "{% macro source(\n        source_name,\n        table_name\n    ) %}\n    {% set original_source = builtins.source(\n        source_name,\n        table_name\n    ) %}\n    {% if (not 'ignore' in config.get('tags') and config.get('materialized') in ['table','view']) and target.name != 'prod'%}\n        {% set limit_result %}\n                (\n                    SELECT\n                        *\n                    FROM\n                        {{ original_source }}\n                    LIMIT\n                        1000\n                )\n        {% endset %}\n        {% do return(limit_result) %}\n    {% else %}\n        {% do return(original_source) %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.sado_analytics_services.source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.245397, "supported_languages": null}, "macro.sado_analytics_services.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/union_relations_overide.sql", "original_file_path": "macros/union_relations_overide.sql", "unique_id": "macro.sado_analytics_services.union_relations", "macro_sql": "{% macro union_relations(\n        relations,\n        exclude,\n        include\n    ) %}\n    {% if target.name != 'prod' %}\n        {% set overide_union %}\n        {% for relation in relations %}\n        SELECT\n            {% if include is defined %}\n                {{ include | join(',') }}\n            {% else %}\n                * {% if exclude is defined %}\n                EXCEPT\n                    (\n                        {{ exclude | join(',') }}\n                    )\n                {% endif %}\n            {% endif %}\n        FROM\n            {{ relation }}\n            {{ 'union all' if not loop.last }}\n        {% endfor %}\n\n        {% endset %}\n        {% do return(overide_union) %}\n    {% else %}\n        {% set dbt_utils_unions = dbt_utils.union_relations(\n            relations = relations,\n            exclude = exclude,\n            include = include\n        ) %}\n        {% do return(dbt_utils_unions) %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2479835, "supported_languages": null}, "macro.sado_analytics_services.parse_naming_convention": {"name": "parse_naming_convention", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/parse_name.sql", "original_file_path": "macros/parse_name.sql", "unique_id": "macro.sado_analytics_services.parse_naming_convention", "macro_sql": "{%- macro parse_naming_convention(campaign_col,adset_col, ad_col)%}\n    {{parse_campaign_name(campaign_col)}}\n    {{parse_adset_name(adset_col)}}\n    {{parse_ad_name(ad_col)}}\n{% endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.sado_analytics_services.parse_campaign_name", "macro.sado_analytics_services.parse_adset_name", "macro.sado_analytics_services.parse_ad_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2510011, "supported_languages": null}, "macro.sado_analytics_services.parse_campaign_name": {"name": "parse_campaign_name", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/parse_name.sql", "original_file_path": "macros/parse_name.sql", "unique_id": "macro.sado_analytics_services.parse_campaign_name", "macro_sql": "{% macro parse_campaign_name(column_name) %}\n    -- fb_vn_engagement_{true summer_}_tung.ng\n    {%- set extracted_campaign -%}\n    REGEXP_EXTRACT({{column_name}},r\"{(.*)}\")\n    {%- endset -%}\n    {%- set extracted_fields %}\n    SPLIT({{column_name}},\"_\") [safe_offset(0)] AS channel,\n    SPLIT({{column_name}},\"_\") [safe_offset(1)] AS brand_name,\n    UPPER(SPLIT({{column_name}},\"_\") [safe_offset(2)]) AS ad_location,\n    CASE\n        length(SPLIT({{column_name}}, \"_\") [safe_offset(2)])\n        WHEN 2 THEN \"Country\"\n        WHEN 3 THEN \"Province\"\n        WHEN 4 THEN \"Economic Region\"\n        WHEN 5 THEN \"Store\"\n    END AS ad_location_layer,\n    SPLIT({{column_name}},\"_\") [safe_offset(3)] AS campaign_category,\n    SPLIT({{extracted_campaign}}, \"_\") [safe_offset(0)] AS event_name,\n    REGEXP_REPLACE(REGEXP_EXTRACT({{extracted_campaign}}, r\"_(.*)\"),r\"_\",\" \") AS content_edge,\n    REGEXP_EXTRACT({{column_name}}, r\"(?:.*)_(.*)$\") AS ad_pic,\n    {% endset -%}\n    {% do return(extracted_fields) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2518744, "supported_languages": null}, "macro.sado_analytics_services.parse_adset_name": {"name": "parse_adset_name", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/parse_name.sql", "original_file_path": "macros/parse_name.sql", "unique_id": "macro.sado_analytics_services.parse_adset_name", "macro_sql": "{% macro parse_adset_name(column_name) %}\n    -- int _1824fm-vn-web visitor\n    {%- set extracted_fields %}\n    SPLIT({{column_name}} ,\"_\") [safe_offset(0)] AS audience_type,\n    CASE LEFT({{column_name}} , 3)\n    WHEN 'lal' THEN 'Lookalike'\n    WHEN 'int' THEN 'Interest'\n    WHEN 'ret' THEN 'Retargeting'\n    WHEN 'mas' THEN 'Mass'\n    ELSE 'Unknown' END AS target_method,\n    SPLIT({{column_name}} ,\"_\") [safe_offset(1)] AS original_audience_name,\n    SPLIT(SPLIT({{column_name}} , \"_\") [safe_offset(1)], \"-\") [safe_offset(0)] AS audience_demographic,\n    SPLIT(SPLIT({{column_name}} , \"_\") [safe_offset(1)], \"-\") [safe_offset(1)] AS audience_region,\n    SPLIT(SPLIT({{column_name}} , \"_\") [safe_offset(1)], \"-\") [safe_offset(2)] AS audience_source_name,\n    {% endset -%}\n    {% do return(extracted_fields) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.252539, "supported_languages": null}, "macro.sado_analytics_services.parse_ad_name": {"name": "parse_ad_name", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/parse_name.sql", "original_file_path": "macros/parse_name.sql", "unique_id": "macro.sado_analytics_services.parse_ad_name", "macro_sql": "\n\n{%- macro parse_ad_name(column_name) %}\n    {% set media_types ={ \"crs\" :\"Carousel\",\n    \"vid\" :\"Video\",\n    \"sgm\" :\"Single Image\",\n    \"clt\" :\"Collection\",\n    \"rls\" :\"Reels\",\n    \"mix\" :\"Mixed\",\n    \"str\" :\"Story\",\n    \"pcr\" :\"Product Catalog + Carousel\",\n    \"pcl\" :\"Product Catalog + Collection\",\n    \"pcm\" :\"Product Catalog + Mixed\",\n    \"liv\" :\"Live Stream\",\n    \"txt\": \"Text\" } %}\n    -- int _1824fm-vn-web visitor\n    {%-set media_type_code-%}\n    SPLIT({{column_name}},\"_\") [safe_offset(0)]\n    {%-endset-%}\n    {%- set extracted_fields %}\n    case \n    {%-for code, media_type in media_types.items() %}\n    when {{media_type_code}} = '{{code}}' then '{{media_type}}'\n    {%endfor-%} end AS media_type,\n    regexp_extract({{column_name}},r\"_(\\w+)\") AS content_code,\n    {% endset -%}\n    {% do return(extracted_fields) %}\n{% endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.254236, "supported_languages": null}, "macro.sado_analytics_services.delete_outdated_tables": {"name": "delete_outdated_tables", "resource_type": "macro", "package_name": "sado_analytics_services", "path": "macros/delete_outdated_tables.sql", "original_file_path": "macros/delete_outdated_tables.sql", "unique_id": "macro.sado_analytics_services.delete_outdated_tables", "macro_sql": "{% macro delete_outdated_tables(schema) %} \n  {% if (schema is not string and schema is not iterable) or schema is mapping or schema|length <= 0 %}\n    {% do exceptions.raise_compiler_error('\"schema\" must be a string or a list') %}\n  {% endif %}\n\n  {% call statement('get_outdated_tables', fetch_result=True) %}\n    select _current.schema_name,\n           _current.ref_name,\n           _current.ref_type\n    from (\n      select table_schema as schema_name, \n             table_name  as ref_name, \n             \"TABLE\" as ref_type\n      from `{{target.schema}}.INFORMATION_SCHEMA.TABLES` pt\n      where table_type = 'BASE TABLE'\n      and table_schema in (\n        {%- if schema is iterable and (var is not string and var is not mapping) -%}\n          {%- for s in schema -%}\n            '{{ s }}'{% if not loop.last %},{% endif %}\n          {%- endfor -%}\n        {%- elif schema is string -%}\n          '{{ schema }}'\n        {%- endif -%}\n      )) as _current\n    left join (\n      select * from unnest([\n        STRUCT<schema_name string, ref_name string>\n      {%- for node in graph.nodes.values() | selectattr(\"resource_type\", \"equalto\", \"model\") | list\n                    + graph.nodes.values() | selectattr(\"resource_type\", \"equalto\", \"seed\")  | list %} \n        ('{{node.schema}}', '{{node.name}}'){% if not loop.last %},{% endif %}\n      {%- endfor %}\n    ])) as _desired on _desired.schema_name = _current.schema_name\n                                        and _desired.ref_name    = _current.ref_name\n    where _desired.ref_name is null\n  {% endcall %}\n\n  {%- for to_delete in load_result('get_outdated_tables')['data'] %} \n    {% call statement() -%}\n      {% do log('dropping ' ~ to_delete[2] ~ ' \"' ~ to_delete[0] ~ '.' ~ to_delete[1], info=true) %}\n      drop {{ to_delete[2] }} if exists `{{ to_delete[0] }}`.`{{ to_delete[1] }}` ;\n    {%- endcall %}\n  {%- endfor %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.258852, "supported_languages": null}, "macro.dbt_bigquery.date_sharded_table": {"name": "date_sharded_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.date_sharded_table", "macro_sql": "{% macro date_sharded_table(base_name) %}\n    {{ return(base_name ~ \"[DBT__PARTITION_DATE]\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2594495, "supported_languages": null}, "macro.dbt_bigquery.grant_access_to": {"name": "grant_access_to", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.grant_access_to", "macro_sql": "{% macro grant_access_to(entity, entity_type, role, grant_target_dict) -%}\n  {% do adapter.grant_access_to(entity, entity_type, role, grant_target_dict) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2598815, "supported_languages": null}, "macro.dbt_bigquery.get_partitions_metadata": {"name": "get_partitions_metadata", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.get_partitions_metadata", "macro_sql": "\n\n{%- macro get_partitions_metadata(table) -%}\n  {%- if execute -%}\n    {%- set res = adapter.get_partitions_metadata(table) -%}\n    {{- return(res) -}}\n  {%- endif -%}\n  {{- return(None) -}}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2604332, "supported_languages": null}, "macro.dbt_bigquery.partition_by": {"name": "partition_by", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.partition_by", "macro_sql": "{% macro partition_by(partition_config) -%}\n    {%- if partition_config is none -%}\n      {% do return('') %}\n    {%- elif partition_config.time_ingestion_partitioning -%}\n        partition by {{ partition_config.render_wrapped() }}\n    {%- elif partition_config.data_type | lower in ('date','timestamp','datetime') -%}\n        partition by {{ partition_config.render() }}\n    {%- elif partition_config.data_type | lower in ('int64') -%}\n        {%- set range = partition_config.range -%}\n        partition by range_bucket(\n            {{ partition_config.field }},\n            generate_array({{ range.start}}, {{ range.end }}, {{ range.interval }})\n        )\n    {%- endif -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2684946, "supported_languages": null}, "macro.dbt_bigquery.cluster_by": {"name": "cluster_by", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.cluster_by", "macro_sql": "{% macro cluster_by(raw_cluster_by) %}\n  {%- if raw_cluster_by is not none -%}\n  cluster by {% if raw_cluster_by is string -%}\n    {% set raw_cluster_by = [raw_cluster_by] %}\n  {%- endif -%}\n  {%- for cluster in raw_cluster_by -%}\n    {{ cluster }}\n    {%- if not loop.last -%}, {% endif -%}\n  {%- endfor -%}\n\n  {% endif %}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2692995, "supported_languages": null}, "macro.dbt_bigquery.bigquery_options": {"name": "bigquery_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery_options", "macro_sql": "{% macro bigquery_options(opts) %}\n  {% set options -%}\n    OPTIONS({% for opt_key, opt_val in opts.items() %}\n      {{ opt_key }}={{ opt_val }}{{ \",\" if not loop.last }}\n    {% endfor %})\n  {%- endset %}\n  {%- do return(options) -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.270036, "supported_languages": null}, "macro.dbt_bigquery.bigquery_table_options": {"name": "bigquery_table_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery_table_options", "macro_sql": "{% macro bigquery_table_options(config, node, temporary) %}\n  {% set opts = adapter.get_table_options(config, node, temporary) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2705965, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_table_as": {"name": "bigquery__create_table_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_table_as", "macro_sql": "{% macro bigquery__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {%- if language == 'sql' -%}\n    {%- set raw_partition_by = config.get('partition_by', none) -%}\n    {%- set raw_cluster_by = config.get('cluster_by', none) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- set partition_config = adapter.parse_partition_by(raw_partition_by) -%}\n    {%- if partition_config.time_ingestion_partitioning -%}\n    {%- set columns = get_columns_with_types_in_query_sql(sql) -%}\n    {%- set table_dest_columns_csv = columns_without_partition_fields_csv(partition_config, columns) -%}\n    {%- set columns = '(' ~ table_dest_columns_csv ~ ')' -%}\n    {%- endif -%}\n\n    {{ sql_header if sql_header is not none }}\n\n    create or replace table {{ relation }}\n      {%- set contract_config = config.get('contract') -%}\n      {%- if contract_config.enforced -%}\n        {{ get_assert_columns_equivalent(compiled_code) }}\n        {{ get_table_columns_and_constraints() }}\n        {%- set compiled_code = get_select_subquery(compiled_code) %}\n      {% else %}\n        {#-- cannot do contracts at the same time as time ingestion partitioning -#}\n        {{ columns }}\n      {% endif %}\n    {{ partition_by(partition_config) }}\n    {{ cluster_by(raw_cluster_by) }}\n\n    {{ bigquery_table_options(config, model, temporary) }}\n\n    {#-- PARTITION BY cannot be used with the AS query_statement clause.\n         https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language#partition_expression\n    -#}\n    {%- if not partition_config.time_ingestion_partitioning %}\n    as (\n      {{ compiled_code }}\n    );\n    {%- endif %}\n  {%- elif language == 'python' -%}\n    {#--\n    N.B. Python models _can_ write to temp views HOWEVER they use a different session\n    and have already expired by the time they need to be used (I.E. in merges for incremental models)\n\n    TODO: Deep dive into spark sessions to see if we can reuse a single session for an entire\n    dbt invocation.\n     --#}\n\n    {#-- when a user wants to change the schema of an existing relation, they must intentionally drop the table in the dataset --#}\n    {%- set old_relation = adapter.get_relation(database=relation.database, schema=relation.schema, identifier=relation.identifier) -%}\n    {%- if (old_relation.is_table and (should_full_refresh())) -%}\n      {% do adapter.drop_relation(relation) %}\n    {%- endif -%}\n    {{ py_write_table(compiled_code=compiled_code, target_relation=relation.quote(database=False, schema=False, identifier=False)) }}\n  {%- else -%}\n    {% do exceptions.raise_compiler_error(\"bigquery__create_table_as macro didn't get supported language, it got %s\" % language) %}\n  {%- endif -%}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.get_columns_with_types_in_query_sql", "macro.dbt_bigquery.columns_without_partition_fields_csv", "macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery", "macro.dbt_bigquery.partition_by", "macro.dbt_bigquery.cluster_by", "macro.dbt_bigquery.bigquery_table_options", "macro.dbt.should_full_refresh", "macro.dbt_bigquery.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2743602, "supported_languages": null}, "macro.dbt_bigquery.bigquery_view_options": {"name": "bigquery_view_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery_view_options", "macro_sql": "{% macro bigquery_view_options(config, node) %}\n  {% set opts = adapter.get_view_options(config, node) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2748785, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_view_as": {"name": "bigquery__create_view_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_view_as", "macro_sql": "{% macro bigquery__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace view {{ relation }}\n  {{ bigquery_view_options(config, model) }}\n  {%- set contract_config = config.get('contract') -%}\n  {%- if contract_config.enforced -%}\n    {{ get_assert_columns_equivalent(sql) }}\n  {%- endif %}\n  as {{ sql }};\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_view_options", "macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2758372, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_schema": {"name": "bigquery__drop_schema", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_schema", "macro_sql": "{% macro bigquery__drop_schema(relation) -%}\n  {{ adapter.drop_schema(relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.27612, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_relation": {"name": "bigquery__drop_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_relation", "macro_sql": "{% macro bigquery__drop_relation(relation) -%}\n  {% call statement('drop_relation') -%}\n    drop {{ relation.type }} if exists {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2765234, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_columns_in_relation": {"name": "bigquery__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_columns_in_relation", "macro_sql": "{% macro bigquery__get_columns_in_relation(relation) -%}\n  {{ return(adapter.get_columns_in_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2768357, "supported_languages": null}, "macro.dbt_bigquery.bigquery__list_relations_without_caching": {"name": "bigquery__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__list_relations_without_caching", "macro_sql": "{% macro bigquery__list_relations_without_caching(schema_relation) -%}\n  {{ return(adapter.list_relations_without_caching(schema_relation)) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2771504, "supported_languages": null}, "macro.dbt_bigquery.bigquery__list_schemas": {"name": "bigquery__list_schemas", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__list_schemas", "macro_sql": "{% macro bigquery__list_schemas(database) -%}\n  {{ return(adapter.list_schemas(database)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2775207, "supported_languages": null}, "macro.dbt_bigquery.bigquery__check_schema_exists": {"name": "bigquery__check_schema_exists", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__check_schema_exists", "macro_sql": "{% macro bigquery__check_schema_exists(information_schema, schema) %}\n  {{ return(adapter.check_schema_exists(information_schema.database, schema)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2779024, "supported_languages": null}, "macro.dbt_bigquery.bigquery__persist_docs": {"name": "bigquery__persist_docs", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__persist_docs", "macro_sql": "{% macro bigquery__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do alter_column_comment(relation, model.columns) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2784894, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_column_comment": {"name": "bigquery__alter_column_comment", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_column_comment", "macro_sql": "{% macro bigquery__alter_column_comment(relation, column_dict) -%}\n  {% do adapter.update_columns(relation, column_dict) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.278836, "supported_languages": null}, "macro.dbt_bigquery.bigquery__rename_relation": {"name": "bigquery__rename_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__rename_relation", "macro_sql": "{% macro bigquery__rename_relation(from_relation, to_relation) -%}\n  {% do adapter.rename_relation(from_relation, to_relation) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2791762, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_relation_add_columns": {"name": "bigquery__alter_relation_add_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_relation_add_columns", "macro_sql": "{% macro bigquery__alter_relation_add_columns(relation, add_columns) %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n        {% for column in add_columns %}\n          add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n        {% endfor %}\n\n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.280024, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_relation_drop_columns": {"name": "bigquery__alter_relation_drop_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_relation_drop_columns", "macro_sql": "{% macro bigquery__alter_relation_drop_columns(relation, drop_columns) %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n        {% for column in drop_columns %}\n          drop column {{ column.name }}{{ ',' if not loop.last }}\n        {% endfor %}\n\n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2808356, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_column_type": {"name": "bigquery__alter_column_type", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_column_type", "macro_sql": "{% macro bigquery__alter_column_type(relation, column_name, new_column_type) -%}\n  {#-- Changing a column's data type using a query requires you to scan the entire table.\n    The query charges can be significant if the table is very large.\n\n    https://cloud.google.com/bigquery/docs/manually-changing-schemas#changing_a_columns_data_type\n  #}\n  {% set relation_columns = get_columns_in_relation(relation) %}\n\n  {% set sql %}\n    select\n      {%- for col in relation_columns -%}\n        {% if col.column == column_name %}\n          CAST({{ col.quoted }} AS {{ new_column_type }}) AS {{ col.quoted }}\n        {%- else %}\n          {{ col.quoted }}\n        {%- endif %}\n        {%- if not loop.last %},{% endif -%}\n      {%- endfor %}\n    from {{ relation }}\n  {% endset %}\n\n  {% call statement('alter_column_type') %}\n    {{ create_table_as(False, relation, sql)}}\n  {%- endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_relation", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2822573, "supported_languages": null}, "macro.dbt_bigquery.bigquery__test_unique": {"name": "bigquery__test_unique", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__test_unique", "macro_sql": "{% macro bigquery__test_unique(model, column_name) %}\n\nwith dbt_test__target as (\n\n  select {{ column_name }} as unique_field\n  from {{ model }}\n  where {{ column_name }} is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2826095, "supported_languages": null}, "macro.dbt_bigquery.bigquery__upload_file": {"name": "bigquery__upload_file", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__upload_file", "macro_sql": "{% macro bigquery__upload_file(local_file_path, database, table_schema, table_name) %}\n\n  {{ log(\"kwargs: \" ~ kwargs) }}\n\n  {% do adapter.upload_file(local_file_path, database, table_schema, table_name, kwargs=kwargs) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2831855, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_catalog": {"name": "bigquery__get_catalog", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_catalog", "macro_sql": "{% macro bigquery__get_catalog(information_schema, schemas) -%}\n\n  {%- if (schemas | length) == 0 -%}\n    {# Hopefully nothing cares about the columns we return when there are no rows #}\n    {%- set query  = \"select 1 as id limit 0\" -%}\n  {%- else -%}\n\n  {%- set query -%}\n    with tables as (\n        select\n            project_id as table_database,\n            dataset_id as table_schema,\n            table_id as original_table_name,\n\n            concat(project_id, '.', dataset_id, '.', table_id) as relation_id,\n\n            row_count,\n            size_bytes as size_bytes,\n            case\n                when type = 1 then 'table'\n                when type = 2 then 'view'\n                else 'external'\n            end as table_type,\n\n            REGEXP_CONTAINS(table_id, '^.+[0-9]{8}$') and coalesce(type, 0) = 1 as is_date_shard,\n            REGEXP_EXTRACT(table_id, '^(.+)[0-9]{8}$') as shard_base_name,\n            REGEXP_EXTRACT(table_id, '^.+([0-9]{8})$') as shard_name\n\n        from {{ information_schema.replace(information_schema_view='__TABLES__') }}\n        where (\n          {%- for schema in schemas -%}\n            upper(dataset_id) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n          {%- endfor -%}\n        )\n    ),\n\n    table_options as (\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            JSON_VALUE(option_value) as table_comment\n\n        from {{ information_schema.replace(information_schema_view='TABLE_OPTIONS') }}\n        where option_name = 'description'\n    ),\n    extracted as (\n\n        select *,\n            case\n                when is_date_shard then shard_base_name\n                else original_table_name\n            end as table_name\n\n        from tables\n\n    ),\n\n    unsharded_tables as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            coalesce(table_type, 'external') as table_type,\n            is_date_shard,\n\n            struct(\n                min(shard_name) as shard_min,\n                max(shard_name) as shard_max,\n                count(*) as shard_count\n            ) as table_shards,\n\n            sum(size_bytes) as size_bytes,\n            sum(row_count) as row_count,\n\n            max(relation_id) as relation_id\n\n        from extracted\n        group by 1,2,3,4,5\n\n    ),\n\n    info_schema_columns as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            table_catalog as table_database,\n            table_schema,\n            table_name,\n\n            -- use the \"real\" column name from the paths query below\n            column_name as base_column_name,\n            ordinal_position as column_index,\n\n            is_partitioning_column,\n            clustering_ordinal_position\n\n        from {{ information_schema.replace(information_schema_view='COLUMNS') }}\n        where ordinal_position is not null\n\n    ),\n\n    info_schema_column_paths as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            field_path as column_name,\n            data_type as column_type,\n            column_name as base_column_name,\n            description as column_comment\n\n        from {{ information_schema.replace(information_schema_view='COLUMN_FIELD_PATHS') }}\n\n    ),\n\n    columns as (\n\n        select * except (base_column_name)\n        from info_schema_columns\n        join info_schema_column_paths using (relation_id, base_column_name)\n\n    ),\n\n    column_stats as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            max(relation_id) as relation_id,\n            max(case when is_partitioning_column = 'YES' then 1 else 0 end) = 1 as is_partitioned,\n            max(case when is_partitioning_column = 'YES' then column_name else null end) as partition_column,\n            max(case when clustering_ordinal_position is not null then 1 else 0 end) = 1 as is_clustered,\n            array_to_string(\n                array_agg(\n                    case\n                        when clustering_ordinal_position is not null then column_name\n                        else null\n                    end ignore nulls\n                    order by clustering_ordinal_position\n                ), ', '\n            ) as clustering_columns\n\n        from columns\n        group by 1,2,3\n\n    )\n\n    select\n        unsharded_tables.table_database,\n        unsharded_tables.table_schema,\n        case\n            when is_date_shard then concat(unsharded_tables.table_name, '*')\n            else unsharded_tables.table_name\n        end as table_name,\n        unsharded_tables.table_type,\n        table_options.table_comment,\n\n        -- coalesce name and type for External tables - these columns are not\n        -- present in the COLUMN_FIELD_PATHS resultset\n        coalesce(columns.column_name, '<unknown>') as column_name,\n        -- invent a row number to account for nested fields -- BQ does\n        -- not treat these nested properties as independent fields\n        row_number() over (\n            partition by relation_id\n            order by columns.column_index, columns.column_name\n        ) as column_index,\n        coalesce(columns.column_type, '<unknown>') as column_type,\n        columns.column_comment,\n\n        'Shard count' as `stats__date_shards__label`,\n        table_shards.shard_count as `stats__date_shards__value`,\n        'The number of date shards in this table' as `stats__date_shards__description`,\n        is_date_shard as `stats__date_shards__include`,\n\n        'Shard (min)' as `stats__date_shard_min__label`,\n        table_shards.shard_min as `stats__date_shard_min__value`,\n        'The first date shard in this table' as `stats__date_shard_min__description`,\n        is_date_shard as `stats__date_shard_min__include`,\n\n        'Shard (max)' as `stats__date_shard_max__label`,\n        table_shards.shard_max as `stats__date_shard_max__value`,\n        'The last date shard in this table' as `stats__date_shard_max__description`,\n        is_date_shard as `stats__date_shard_max__include`,\n\n        '# Rows' as `stats__num_rows__label`,\n        row_count as `stats__num_rows__value`,\n        'Approximate count of rows in this table' as `stats__num_rows__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_rows__include`,\n\n        'Approximate Size' as `stats__num_bytes__label`,\n        size_bytes as `stats__num_bytes__value`,\n        'Approximate size of table as reported by BigQuery' as `stats__num_bytes__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_bytes__include`,\n\n        'Partitioned By' as `stats__partitioning_type__label`,\n        partition_column as `stats__partitioning_type__value`,\n        'The partitioning column for this table' as `stats__partitioning_type__description`,\n        is_partitioned as `stats__partitioning_type__include`,\n\n        'Clustered By' as `stats__clustering_fields__label`,\n        clustering_columns as `stats__clustering_fields__value`,\n        'The clustering columns for this table' as `stats__clustering_fields__description`,\n        is_clustered as `stats__clustering_fields__include`\n\n    -- join using relation_id (an actual relation, not a shard prefix) to make\n    -- sure that column metadata is picked up through the join. This will only\n    -- return the column information for the \"max\" table in a date-sharded table set\n    from unsharded_tables\n    left join table_options using (relation_id)\n    left join columns using (relation_id)\n    left join column_stats using (relation_id)\n  {%- endset -%}\n\n  {%- endif -%}\n\n  {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2888243, "supported_languages": null}, "macro.dbt_bigquery.bigquery__resolve_model_name": {"name": "bigquery__resolve_model_name", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt_bigquery.bigquery__resolve_model_name", "macro_sql": "{% macro bigquery__resolve_model_name(input_model_name) -%}\n    {{ input_model_name | string | replace('`', '') | replace('\"', '\\\"') }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2893875, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_csv_table": {"name": "bigquery__create_csv_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_csv_table", "macro_sql": "{% macro bigquery__create_csv_table(model, agate_table) %}\n    -- no-op\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2900467, "supported_languages": null}, "macro.dbt_bigquery.bigquery__reset_csv_table": {"name": "bigquery__reset_csv_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__reset_csv_table", "macro_sql": "{% macro bigquery__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2903886, "supported_languages": null}, "macro.dbt_bigquery.bigquery__load_csv_rows": {"name": "bigquery__load_csv_rows", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__load_csv_rows", "macro_sql": "{% macro bigquery__load_csv_rows(model, agate_table) %}\n\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {{ adapter.load_dataframe(model['database'], model['schema'], model['alias'],\n  \t\t\t\t\t\t\tagate_table, column_override) }}\n\n  {% call statement() %}\n    alter table {{ this.render() }} set {{ bigquery_table_options(config, model) }}\n  {% endcall %}\n\n  {% if config.persist_relation_docs() and 'description' in model %}\n\n  \t{{ adapter.update_table_description(model['database'], model['schema'], model['alias'], model['description']) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_bigquery.bigquery_table_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2919345, "supported_languages": null}, "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy": {"name": "dbt_bigquery_validate_get_incremental_strategy", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_bigquery_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\") or 'merge' -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'insert_overwrite'\n  {%- endset %}\n  {% if strategy not in ['merge', 'insert_overwrite'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2955105, "supported_languages": null}, "macro.dbt_bigquery.source_sql_with_partition": {"name": "source_sql_with_partition", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.source_sql_with_partition", "macro_sql": "{% macro source_sql_with_partition(partition_by, source_sql) %}\n\n  {%- if partition_by.time_ingestion_partitioning %}\n    {{ return(wrap_with_time_ingestion_partitioning_sql(partition_by, source_sql, False))  }}\n  {% else %}\n    {{ return(source_sql)  }}\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2961116, "supported_languages": null}, "macro.dbt_bigquery.bq_create_table_as": {"name": "bq_create_table_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.bq_create_table_as", "macro_sql": "{% macro bq_create_table_as(partition_by, temporary, relation, compiled_code, language='sql') %}\n  {%- set _dbt_max_partition = declare_dbt_max_partition(this, partition_by, compiled_code, language) -%}\n  {% if partition_by.time_ingestion_partitioning and language == 'python' %}\n    {% do exceptions.raise_compiler_error(\n      \"Python models do not support ingestion time partitioning\"\n    ) %}\n  {% elif partition_by.time_ingestion_partitioning and language == 'sql' %}\n    {#-- Create the table before inserting data as ingestion time partitioned tables can't be created with the transformed data --#}\n    {% do run_query(create_table_as(temporary, relation, compiled_code)) %}\n    {{ return(_dbt_max_partition + bq_insert_into_ingestion_time_partitioned_table_sql(relation, compiled_code)) }}\n  {% else %}\n    {{ return(_dbt_max_partition + create_table_as(temporary, relation, compiled_code, language)) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.declare_dbt_max_partition", "macro.dbt.run_query", "macro.dbt.create_table_as", "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2976482, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_build_sql": {"name": "bq_generate_incremental_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro_sql": "{% macro bq_generate_incremental_build_sql(\n    strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions, incremental_predicates\n) %}\n  {#-- if partitioned, use BQ scripting to get the range of partition values to be updated --#}\n  {% if strategy == 'insert_overwrite' %}\n\n    {% set build_sql = bq_generate_incremental_insert_overwrite_build_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n    ) %}\n\n  {% else %} {# strategy == 'merge' #}\n\n    {% set build_sql = bq_generate_incremental_merge_build_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, incremental_predicates\n    ) %}\n\n  {% endif %}\n\n  {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql", "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.2989187, "supported_languages": null}, "macro.dbt_bigquery.materialization_incremental_bigquery": {"name": "materialization_incremental_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.materialization_incremental_bigquery", "macro_sql": "{% materialization incremental, adapter='bigquery', supported_languages=['sql', 'python'] -%}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n  {%- set language = model['language'] %}\n\n  {%- set target_relation = this %}\n  {%- set existing_relation = load_relation(this) %}\n  {%- set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_bigquery_validate_get_incremental_strategy(config) -%}\n\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set partitions = config.get('partitions', none) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n  {% set incremental_predicates = config.get('predicates', default=none) or config.get('incremental_predicates', default=none) %}\n\n   -- grab current tables grants config for comparison later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if partition_by.copy_partitions is true and strategy != 'insert_overwrite' %} {#-- We can't copy partitions with merge strategy --#}\n        {% set wrong_strategy_msg -%}\n        The 'copy_partitions' option requires the 'incremental_strategy' option to be set to 'insert_overwrite'.\n        {%- endset %}\n        {% do exceptions.raise_compiler_error(wrong_strategy_msg) %}\n\n  {% elif existing_relation is none %}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% elif existing_relation.is_view %}\n      {#-- There's no way to atomically replace a view with a table on BQ --#}\n      {{ adapter.drop_relation(existing_relation) }}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% elif full_refresh_mode %}\n      {#-- If the partition/cluster config has changed, then we must drop and recreate --#}\n      {% if not adapter.is_replaceable(existing_relation, partition_by, cluster_by) %}\n          {% do log(\"Hard refreshing \" ~ existing_relation ~ \" because it is not replaceable\") %}\n          {{ adapter.drop_relation(existing_relation) }}\n      {% endif %}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% else %}\n    {%- if language == 'python' and strategy == 'insert_overwrite' -%}\n      {#-- This lets us move forward assuming no python will be directly templated into a query --#}\n      {%- set python_unsupported_msg -%}\n        The 'insert_overwrite' strategy is not yet supported for python models.\n      {%- endset %}\n      {% do exceptions.raise_compiler_error(python_unsupported_msg) %}\n    {%- endif -%}\n\n    {% set tmp_relation_exists = false %}\n    {% if on_schema_change != 'ignore' or language == 'python' %}\n      {#-- Check first, since otherwise we may not build a temp table --#}\n      {#-- Python always needs to create a temp table --#}\n      {%- call statement('create_tmp_relation', language=language) -%}\n        {{ bq_create_table_as(partition_by, True, tmp_relation, compiled_code, language) }}\n      {%- endcall -%}\n      {% set tmp_relation_exists = true %}\n      {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n      {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% endif %}\n\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {#--  Add time ingestion pseudo column to destination column as not part of the 'schema' but still need it for actual data insertion --#}\n    {% if partition_by.time_ingestion_partitioning %}\n      {% set dest_columns = adapter.add_time_ingestion_partition_column(partition_by, dest_columns) %}\n    {% endif %}\n\n    {% set build_sql = bq_generate_incremental_build_sql(\n        strategy, tmp_relation, target_relation, compiled_code, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, partition_by.copy_partitions, incremental_predicates\n    ) %}\n\n    {%- call statement('main') -%}\n      {{ build_sql }}\n    {% endcall %}\n\n    {%- if language == 'python' and tmp_relation -%}\n      {{ adapter.drop_relation(tmp_relation) }}\n    {%- endif -%}\n\n  {% endif %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.process_schema_changes", "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3069117, "supported_languages": ["sql", "python"]}, "macro.dbt_bigquery.bigquery__can_clone_table": {"name": "bigquery__can_clone_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_bigquery.bigquery__can_clone_table", "macro_sql": "{% macro bigquery__can_clone_table() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.307375, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_or_replace_clone": {"name": "bigquery__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_or_replace_clone", "macro_sql": "{% macro bigquery__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace\n      table {{ this_relation }}\n      clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.307673, "supported_languages": null}, "macro.dbt_bigquery.materialization_copy_bigquery": {"name": "materialization_copy_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/copy.sql", "original_file_path": "macros/materializations/copy.sql", "unique_id": "macro.dbt_bigquery.materialization_copy_bigquery", "macro_sql": "{% materialization copy, adapter='bigquery' -%}\n\n  {# Setup #}\n  {{ run_hooks(pre_hooks) }}\n\n  {% set destination = this.incorporate(type='table') %}\n\n  {# there can be several ref() or source() according to BQ copy API docs #}\n  {# cycle over ref() and source() to create source tables array #}\n  {% set source_array = [] %}\n  {% for ref_table in model.refs %}\n    {{ source_array.append(ref(*ref_table)) }}\n  {% endfor %}\n\n  {% for src_table in model.sources %}\n    {{ source_array.append(source(*src_table)) }}\n  {% endfor %}\n\n  {# Call adapter copy_table function #}\n  {%- set result_str = adapter.copy_table(\n      source_array,\n      destination,\n      config.get('copy_materialization', default = 'table')) -%}\n\n  {{ store_result('main', response=result_str) }}\n\n  {# Clean up #}\n  {{ run_hooks(post_hooks) }}\n  {%- do apply_grants(target_relation, grant_config) -%}\n  {{ adapter.commit() }}\n\n  {{ return({'relations': [destination]}) }}\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.310036, "supported_languages": ["sql"]}, "macro.dbt_bigquery.materialization_table_bigquery": {"name": "materialization_table_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_bigquery.materialization_table_bigquery", "macro_sql": "{% materialization table, adapter='bigquery', supported_languages=['sql', 'python']-%}\n\n  {%- set language = model['language'] -%}\n  {%- set identifier = model['alias'] -%}\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n  {%- set target_relation = api.Relation.create(database=database, schema=schema, identifier=identifier, type='table') -%}\n\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {#\n      We only need to drop this thing if it is not a table.\n      If it _is_ already a table, then we can overwrite it without downtime\n      Unlike table -> view, no need for `--full-refresh`: dropping a view is no big deal\n  #}\n  {%- if exists_not_as_table -%}\n      {{ adapter.drop_relation(old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n  {% if not adapter.is_replaceable(old_relation, partition_by, cluster_by) %}\n    {% do log(\"Hard refreshing \" ~ old_relation ~ \" because it is not replaceable\") %}\n    {% do adapter.drop_relation(old_relation) %}\n  {% endif %}\n\n  -- build model\n  {%- call statement('main', language=language) -%}\n    {{ create_table_as(False, target_relation, compiled_code, language) }}\n  {%- endcall -%}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.315663, "supported_languages": ["sql", "python"]}, "macro.dbt_bigquery.py_write_table": {"name": "py_write_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_bigquery.py_write_table", "macro_sql": "{% macro py_write_table(compiled_code, target_relation) %}\nfrom pyspark.sql import SparkSession\n\nspark = SparkSession.builder.appName('smallTest').getOrCreate()\n\nspark.conf.set(\"viewsEnabled\",\"true\")\nspark.conf.set(\"temporaryGcsBucket\",\"{{target.gcs_bucket}}\")\n\n{{ compiled_code }}\ndbt = dbtObj(spark.read.format(\"bigquery\").load)\ndf = model(dbt, spark)\n\n# COMMAND ----------\n# this is materialization code dbt generated, please do not modify\n\nimport pyspark\n# make sure pandas exists before using it\ntry:\n  import pandas\n  pandas_available = True\nexcept ImportError:\n  pandas_available = False\n\n# make sure pyspark.pandas exists before using it\ntry:\n  import pyspark.pandas\n  pyspark_pandas_api_available = True\nexcept ImportError:\n  pyspark_pandas_api_available = False\n\n# make sure databricks.koalas exists before using it\ntry:\n  import databricks.koalas\n  koalas_available = True\nexcept ImportError:\n  koalas_available = False\n\n# preferentially convert pandas DataFrames to pandas-on-Spark or Koalas DataFrames first\n# since they know how to convert pandas DataFrames better than `spark.createDataFrame(df)`\n# and converting from pandas-on-Spark to Spark DataFrame has no overhead\nif pyspark_pandas_api_available and pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = pyspark.pandas.frame.DataFrame(df)\nelif koalas_available and pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = databricks.koalas.frame.DataFrame(df)\n\n# convert to pyspark.sql.dataframe.DataFrame\nif isinstance(df, pyspark.sql.dataframe.DataFrame):\n  pass  # since it is already a Spark DataFrame\nelif pyspark_pandas_api_available and isinstance(df, pyspark.pandas.frame.DataFrame):\n  df = df.to_spark()\nelif koalas_available and isinstance(df, databricks.koalas.frame.DataFrame):\n  df = df.to_spark()\nelif pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = spark.createDataFrame(df)\nelse:\n  msg = f\"{type(df)} is not a supported type for dbt Python materialization\"\n  raise Exception(msg)\n\ndf.write \\\n  .mode(\"overwrite\") \\\n  .format(\"bigquery\") \\\n  .option(\"writeMethod\", \"direct\").option(\"writeDisposition\", 'WRITE_TRUNCATE') \\\n  .save(\"{{target_relation}}\")\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.31623, "supported_languages": null}, "macro.dbt_bigquery.bigquery__handle_existing_table": {"name": "bigquery__handle_existing_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_bigquery.bigquery__handle_existing_table", "macro_sql": "{% macro bigquery__handle_existing_table(full_refresh, old_relation) %}\n    {%- if full_refresh -%}\n      {{ adapter.drop_relation(old_relation) }}\n    {%- else -%}\n      {{ exceptions.relation_wrong_type(old_relation, 'view') }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3172665, "supported_languages": null}, "macro.dbt_bigquery.materialization_view_bigquery": {"name": "materialization_view_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_bigquery.materialization_view_bigquery", "macro_sql": "{% materialization view, adapter='bigquery' -%}\n    -- grab current tables grants config for comparision later on\n    {% set grant_config = config.get('grants') %}\n\n    {% set to_return = create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {% if config.get('grant_access_to') %}\n      {% for grant_target_dict in config.get('grant_access_to') %}\n        {% do adapter.grant_access_to(this, 'view', None, grant_target_dict) %}\n      {% endfor %}\n    {% endif %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3186238, "supported_languages": ["sql"]}, "macro.dbt_bigquery.bigquery__snapshot_hash_arguments": {"name": "bigquery__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__snapshot_hash_arguments", "macro_sql": "{% macro bigquery__snapshot_hash_arguments(args) -%}\n  to_hex(md5(concat({%- for arg in args -%}\n    coalesce(cast({{ arg }} as string), ''){% if not loop.last %}, '|',{% endif -%}\n  {%- endfor -%}\n  )))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3193612, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_columns": {"name": "bigquery__create_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_columns", "macro_sql": "{% macro bigquery__create_columns(relation, columns) %}\n  {{ adapter.alter_table_add_columns(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3196902, "supported_languages": null}, "macro.dbt_bigquery.bigquery__post_snapshot": {"name": "bigquery__post_snapshot", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__post_snapshot", "macro_sql": "{% macro bigquery__post_snapshot(staging_relation) %}\n  -- Clean up the snapshot temp table\n  {% do drop_relation(staging_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.319972, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql": {"name": "bq_generate_incremental_insert_overwrite_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql", "macro_sql": "{% macro bq_generate_incremental_insert_overwrite_build_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n    {% if partition_by is none %}\n      {% set missing_partition_msg -%}\n      The 'insert_overwrite' strategy requires the `partition_by` config.\n      {%- endset %}\n      {% do exceptions.raise_compiler_error(missing_partition_msg) %}\n    {% endif %}\n\n    {% set build_sql = bq_insert_overwrite_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n    ) %}\n\n    {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3240993, "supported_languages": null}, "macro.dbt_bigquery.bq_copy_partitions": {"name": "bq_copy_partitions", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_copy_partitions", "macro_sql": "{% macro bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) %}\n\n  {% for partition in partitions %}\n    {% if partition_by.granularity == 'hour' %}\n      {% set partition = partition.strftime(\"%Y%m%d%H\") %}\n    {% elif partition_by.granularity == 'day' %}\n      {% set partition = partition.strftime(\"%Y%m%d\") %}\n    {% elif partition_by.granularity == 'month' %}\n      {% set partition = partition.strftime(\"%Y%m\") %}\n    {% elif partition_by.granularity == 'year' %}\n      {% set partition = partition.strftime(\"%Y\") %}\n    {% endif %}\n    {% set tmp_relation_partitioned = api.Relation.create(database=tmp_relation.database, schema=tmp_relation.schema, identifier=tmp_relation.table ~ '$' ~ partition, type=tmp_relation.type) %}\n    {% set target_relation_partitioned = api.Relation.create(database=target_relation.database, schema=target_relation.schema, identifier=target_relation.table ~ '$' ~ partition, type=target_relation.type) %}\n    {% do adapter.copy_table(tmp_relation_partitioned, target_relation_partitioned, \"table\") %}\n  {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3267567, "supported_languages": null}, "macro.dbt_bigquery.bq_insert_overwrite_sql": {"name": "bq_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_insert_overwrite_sql", "macro_sql": "{% macro bq_insert_overwrite_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n  {% if partitions is not none and partitions != [] %} {# static #}\n      {{ bq_static_insert_overwrite_sql(tmp_relation, target_relation, sql, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% else %} {# dynamic #}\n      {{ bq_dynamic_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_static_insert_overwrite_sql", "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3280857, "supported_languages": null}, "macro.dbt_bigquery.bq_static_insert_overwrite_sql": {"name": "bq_static_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_static_insert_overwrite_sql", "macro_sql": "{% macro bq_static_insert_overwrite_sql(\n    tmp_relation, target_relation, sql, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n\n      {% set predicate -%}\n          {{ partition_by.render_wrapped(alias='DBT_INTERNAL_DEST') }} in (\n              {{ partitions | join (', ') }}\n          )\n      {%- endset %}\n\n      {%- set source_sql -%}\n        (\n          {% if partition_by.time_ingestion_partitioning and tmp_relation_exists -%}\n          select\n            {{ partition_by.insertable_time_partitioning_field() }},\n            * from {{ tmp_relation }}\n          {% elif tmp_relation_exists -%}\n            select\n            * from {{ tmp_relation }}\n          {%- elif partition_by.time_ingestion_partitioning -%}\n            {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, True) }}\n          {%- else -%}\n            {{sql}}\n          {%- endif -%}\n\n        )\n      {%- endset -%}\n\n      {% if copy_partitions %}\n          {% do bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) %}\n      {% else %}\n\n      {#-- In case we're putting the model SQL _directly_ into the MERGE statement,\n         we need to prepend the MERGE statement with the user-configured sql_header,\n         which may be needed to resolve that model SQL (e.g. referencing a variable or UDF in the header)\n         in the \"temporary table exists\" case, we save the model SQL result as a temp table first, wherein the\n         sql_header is included by the create_table_as macro.\n      #}\n      -- 1. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header = not tmp_relation_exists) }};\n\n      {%- if tmp_relation_exists -%}\n      -- 2. clean up the temp table\n      drop table if exists {{ tmp_relation }};\n      {%- endif -%}\n\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro.dbt_bigquery.bq_copy_partitions", "macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3311558, "supported_languages": null}, "macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql": {"name": "bq_dynamic_copy_partitions_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql", "macro_sql": "{% macro bq_dynamic_copy_partitions_insert_overwrite_sql(\n  tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions\n  ) %}\n  {# We run temp table creation in a separated script to move to partitions copy #}\n  {%- call statement('create_tmp_relation_for_copy', language='sql') -%}\n    {{ bq_create_table_as(partition_by, True, tmp_relation, sql, 'sql')\n  }}\n  {%- endcall %}\n  {%- set partitions_sql -%}\n    select distinct {{ partition_by.render_wrapped() }}\n    from {{ tmp_relation }}\n  {%- endset -%}\n  {%- set partitions = run_query(partitions_sql).columns[0].values() -%}\n  {# We copy the partitions #}\n  {%- do bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) -%}\n  -- Clean up the temp table\n  drop table if exists {{ tmp_relation }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.run_query", "macro.dbt_bigquery.bq_copy_partitions"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3326283, "supported_languages": null}, "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql": {"name": "bq_dynamic_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql", "macro_sql": "{% macro bq_dynamic_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) %}\n  {%- if copy_partitions is true %}\n     {{ bq_dynamic_copy_partitions_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% else -%}\n      {% set predicate -%}\n          {{ partition_by.render_wrapped(alias='DBT_INTERNAL_DEST') }} in unnest(dbt_partitions_for_replacement)\n      {%- endset %}\n\n      {%- set source_sql -%}\n      (\n        select\n        {% if partition_by.time_ingestion_partitioning -%}\n        {{ partition_by.insertable_time_partitioning_field() }},\n        {%- endif -%}\n        * from {{ tmp_relation }}\n      )\n      {%- endset -%}\n\n      -- generated script to merge partitions into {{ target_relation }}\n      declare dbt_partitions_for_replacement array<{{ partition_by.data_type_for_partition() }}>;\n\n      {# have we already created the temp table to check for schema changes? #}\n      {% if not tmp_relation_exists %}\n       -- 1. create a temp table with model data\n        {{ bq_create_table_as(partition_by, True, tmp_relation, sql, 'sql') }}\n      {% else %}\n        -- 1. temp table already exists, we used it to check for schema changes\n      {% endif %}\n      {%- set partition_field = partition_by.time_partitioning_field() if partition_by.time_ingestion_partitioning else partition_by.render_wrapped() -%}\n\n      -- 2. define partitions to update\n      set (dbt_partitions_for_replacement) = (\n          select as struct\n              -- IGNORE NULLS: this needs to be aligned to _dbt_max_partition, which ignores null\n              array_agg(distinct {{ partition_field }} IGNORE NULLS)\n          from {{ tmp_relation }}\n      );\n\n      -- 3. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate]) }};\n\n      -- 4. clean up the temp table\n      drop table if exists {{ tmp_relation }}\n\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.335031, "supported_languages": null}, "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql": {"name": "wrap_with_time_ingestion_partitioning_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro_sql": "{% macro wrap_with_time_ingestion_partitioning_sql(partition_by, sql, is_nested) %}\n\n  select TIMESTAMP({{ partition_by.field }}) as {{ partition_by.insertable_time_partitioning_field() }}, * EXCEPT({{ partition_by.field }}) from (\n    {{ sql }}\n  ){%- if not is_nested -%};{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3372204, "supported_languages": null}, "macro.dbt_bigquery.get_quoted_with_types_csv": {"name": "get_quoted_with_types_csv", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.get_quoted_with_types_csv", "macro_sql": "{% macro get_quoted_with_types_csv(columns) %}\n    {% set quoted = [] %}\n    {% for col in columns -%}\n        {%- do quoted.append(adapter.quote(col.name) ~ \" \" ~ col.data_type) -%}\n    {%- endfor %}\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3381054, "supported_languages": null}, "macro.dbt_bigquery.columns_without_partition_fields_csv": {"name": "columns_without_partition_fields_csv", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.columns_without_partition_fields_csv", "macro_sql": "{% macro columns_without_partition_fields_csv(partition_config, columns) -%}\n  {%- set columns_no_partition = partition_config.reject_partition_field_column(columns) -%}\n  {% set columns_names = get_quoted_with_types_csv(columns_no_partition) %}\n  {{ return(columns_names) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.get_quoted_with_types_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3386474, "supported_languages": null}, "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql": {"name": "bq_insert_into_ingestion_time_partitioned_table_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql", "macro_sql": "{% macro bq_insert_into_ingestion_time_partitioned_table_sql(target_relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  {{ sql_header if sql_header is not none }}\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {% set dest_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set dest_columns_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n  insert into {{ target_relation }} ({{ partition_by.insertable_time_partitioning_field() }}, {{ dest_columns_csv }})\n    {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, False) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3399763, "supported_languages": null}, "macro.dbt_bigquery.get_columns_with_types_in_query_sql": {"name": "get_columns_with_types_in_query_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.get_columns_with_types_in_query_sql", "macro_sql": "{% macro get_columns_with_types_in_query_sql(select_sql) %}\n  {% set sql %}\n    {%- set sql_header = config.get('sql_header', none) -%}\n    {{ sql_header if sql_header is not none }}\n    select * from (\n      {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n  {% endset %}\n  {{ return(adapter.get_columns_in_select_sql(sql)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.340713, "supported_languages": null}, "macro.dbt_bigquery.declare_dbt_max_partition": {"name": "declare_dbt_max_partition", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/common.sql", "original_file_path": "macros/materializations/incremental_strategy/common.sql", "unique_id": "macro.dbt_bigquery.declare_dbt_max_partition", "macro_sql": "{% macro declare_dbt_max_partition(relation, partition_by, compiled_code, language='sql') %}\n\n  {#-- TODO: revisit partitioning with python models --#}\n  {%- if '_dbt_max_partition' in compiled_code and language == 'sql' -%}\n\n    declare _dbt_max_partition {{ partition_by.data_type_for_partition() }} default (\n      select max({{ partition_by.field }}) from {{ this }}\n      where {{ partition_by.field }} is not null\n    );\n\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3416266, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql": {"name": "bq_generate_incremental_merge_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/merge.sql", "original_file_path": "macros/materializations/incremental_strategy/merge.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql", "macro_sql": "{% macro bq_generate_incremental_merge_build_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, incremental_predicates\n) %}\n    {%- set source_sql -%}\n        {%- if tmp_relation_exists -%}\n        (\n        select\n        {% if partition_by.time_ingestion_partitioning -%}\n        {{ partition_by.insertable_time_partitioning_field() }},\n        {%- endif -%}\n        * from {{ tmp_relation }}\n        )\n        {%- else -%} {#-- wrap sql in parens to make it a subquery --#}\n        (\n            {%- if partition_by.time_ingestion_partitioning -%}\n            {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, True) }}\n            {%- else -%}\n            {{sql}}\n            {%- endif %}\n        )\n        {%- endif -%}\n    {%- endset -%}\n\n    {% set build_sql = get_merge_sql(target_relation, source_sql, unique_key, dest_columns, incremental_predicates) %}\n\n    {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3433754, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_show_grant_sql": {"name": "bigquery__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_show_grant_sql", "macro_sql": "{% macro bigquery__get_show_grant_sql(relation) %}\n    {% set location = adapter.get_dataset_location(relation) %}\n    {% set relation = relation.incorporate(location=location) %}\n\n    select privilege_type, grantee\n    from {{ relation.information_schema(\"OBJECT_PRIVILEGES\") }}\n    where object_schema = \"{{ relation.dataset }}\"\n      and object_name = \"{{ relation.identifier }}\"\n      -- filter out current user\n      and split(grantee, ':')[offset(1)] != session_user()\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3445623, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_grant_sql": {"name": "bigquery__get_grant_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_grant_sql", "macro_sql": "\n\n\n{%- macro bigquery__get_grant_sql(relation, privilege, grantee) -%}\n    grant `{{ privilege }}` on {{ relation.type }} {{ relation }} to {{ '\\\"' + grantee|join('\\\", \\\"') + '\\\"' }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3450937, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_revoke_sql": {"name": "bigquery__get_revoke_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_revoke_sql", "macro_sql": "{%- macro bigquery__get_revoke_sql(relation, privilege, grantee) -%}\n    revoke `{{ privilege }}` on {{ relation.type }} {{ relation }} from {{ '\\\"' + grantee|join('\\\", \\\"') + '\\\"' }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3456457, "supported_languages": null}, "macro.dbt_bigquery.bigquery__current_timestamp": {"name": "bigquery__current_timestamp", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() -%}\n  current_timestamp()\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3459911, "supported_languages": null}, "macro.dbt_bigquery.bigquery__snapshot_string_as_time": {"name": "bigquery__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__snapshot_string_as_time", "macro_sql": "{% macro bigquery__snapshot_string_as_time(timestamp) -%}\n    {%- set result = 'TIMESTAMP(\"' ~ timestamp ~ '\")' -%}\n    {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3463883, "supported_languages": null}, "macro.dbt_bigquery.bigquery__current_timestamp_backcompat": {"name": "bigquery__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__current_timestamp_backcompat", "macro_sql": "{% macro bigquery__current_timestamp_backcompat() -%}\n  current_timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3465629, "supported_languages": null}, "macro.dbt_bigquery.bigquery__position": {"name": "bigquery__position", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt_bigquery.bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3469431, "supported_languages": null}, "macro.dbt_bigquery.bigquery__format_column": {"name": "bigquery__format_column", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__format_column", "macro_sql": "{% macro bigquery__format_column(column) -%}\n  {% set data_type = column.data_type %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.34843, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_empty_schema_sql": {"name": "bigquery__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_empty_schema_sql", "macro_sql": "{% macro bigquery__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {% for col in columns.values() %}\n      {%- if col['data_type'] is not defined -%}\n        {{ col_err.append(col['name']) }}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- endif -%}\n\n    {%- set columns = adapter.nest_column_data_types(columns) -%}\n    {{ return(dbt.default__get_empty_schema_sql(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3497367, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_select_subquery": {"name": "bigquery__get_select_subquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_select_subquery", "macro_sql": "{% macro bigquery__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3501034, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_column_names": {"name": "bigquery__get_column_names", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_column_names", "macro_sql": "{% macro bigquery__get_column_names() %}\n  {#- loop through nested user_provided_columns to get column names -#}\n    {%- set user_provided_columns = adapter.nest_column_data_types(model['columns']) -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3510966, "supported_languages": null}, "macro.dbt_bigquery.bigquery__escape_single_quotes": {"name": "bigquery__escape_single_quotes", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt_bigquery.bigquery__escape_single_quotes", "macro_sql": "{% macro bigquery__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3514934, "supported_languages": null}, "macro.dbt_bigquery.bigquery__safe_cast": {"name": "bigquery__safe_cast", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt_bigquery.bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.351846, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_append": {"name": "bigquery__array_append", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_append", "macro_sql": "{% macro bigquery__array_append(array, new_element) -%}\n    {{ array_concat(array, array_construct([new_element])) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.array_concat", "macro.dbt.array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3522854, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_concat": {"name": "bigquery__array_concat", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_concat", "macro_sql": "{% macro bigquery__array_concat(array_1, array_2) -%}\n    array_concat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3526654, "supported_languages": null}, "macro.dbt_bigquery.bigquery__split_part": {"name": "bigquery__split_part", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt_bigquery.bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n  {% else %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset(\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 1 + {{ part_number }}\n        )]\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3538454, "supported_languages": null}, "macro.dbt_bigquery.bigquery__intersect": {"name": "bigquery__intersect", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt_bigquery.bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3540785, "supported_languages": null}, "macro.dbt_bigquery.bigquery__date_trunc": {"name": "bigquery__date_trunc", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt_bigquery.bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) -%}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3544462, "supported_languages": null}, "macro.dbt_bigquery.bigquery__bool_or": {"name": "bigquery__bool_or", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt_bigquery.bigquery__bool_or", "macro_sql": "{% macro bigquery__bool_or(expression) -%}\n\n    logical_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3547342, "supported_languages": null}, "macro.dbt_bigquery.bigquery__hash": {"name": "bigquery__hash", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt_bigquery.bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt.default__hash(field)}})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3551342, "supported_languages": null}, "macro.dbt_bigquery.bigquery__right": {"name": "bigquery__right", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt_bigquery.bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0\n        then ''\n    else\n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3556342, "supported_languages": null}, "macro.dbt_bigquery.bigquery__dateadd": {"name": "bigquery__dateadd", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt_bigquery.bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3561358, "supported_languages": null}, "macro.dbt_bigquery.bigquery__datediff": {"name": "bigquery__datediff", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt_bigquery.bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) -%}\n\n  {% if dbt_version[0] == 1 and dbt_version[2] >= 2 %}\n    {{ return(dbt.datediff(first_date, second_date, datepart)) }}\n  {% else %}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3571289, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_construct": {"name": "bigquery__array_construct", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_construct", "macro_sql": "{% macro bigquery__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    [ {{ inputs|join(' , ') }} ]\n    {% else %}\n    ARRAY<{{data_type}}>[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.357794, "supported_languages": null}, "macro.dbt_bigquery.bigquery__except": {"name": "bigquery__except", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt_bigquery.bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3580167, "supported_languages": null}, "macro.dbt_bigquery.bigquery__listagg": {"name": "bigquery__listagg", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt_bigquery.bigquery__listagg", "macro_sql": "{% macro bigquery__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        {% if limit_num -%}\n        limit {{ limit_num }}\n        {%- endif %}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3587987, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3611543, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3615236, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3631887, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.364032, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3652647, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3663492, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3665197, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3672984, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3680887, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.369022, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3696043, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3701935, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3709326, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3714678, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3742154, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3753955, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3759885, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3787663, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3812094, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3827572, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3832521, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.383933, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3845646, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3852181, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3871937, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3875973, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3879008, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.388206, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3885205, "supported_languages": null}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3890972, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation }} clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3894603, "supported_languages": null}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/clone.sql", "original_file_path": "macros/materializations/models/clone/clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% call statement('main') %}\n          {{ create_or_replace_clone(target_relation, defer_relation) }}\n      {% endcall %}\n\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3950312, "supported_languages": ["sql"]}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.395538, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3958116, "supported_languages": null}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3964105, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3968747, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3976905, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.3980515, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.398439, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.399323, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4021456, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.407251, "supported_languages": ["sql"]}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4144425, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.416939, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4194608, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4212022, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.428794, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4321022, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4326446, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4347394, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.435283, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4366121, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4458506, "supported_languages": ["sql"]}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4471455, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.449578, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4507072, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.452052, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.452546, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4540572, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4554975, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4559886, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.456386, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4569898, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4573953, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4579973, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.458448, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.459051, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4594598, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.459781, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4603646, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4618514, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4622326, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.463121, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4645379, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4655461, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4659362, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.466309, "supported_languages": null}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4714487, "supported_languages": ["sql"]}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4731321, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4734218, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4745193, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.474882, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4751732, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4777749, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.format_column", "macro.dbt_bigquery.bigquery__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4785628, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4792514, "supported_languages": null}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4863675, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4871597, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.487673, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_materialized_view_as_sql(target_relation, sql, existing_relation, backup_relation, intermediate_relation) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_materialized_view_as_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4904032, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.490894, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4922237, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4931448, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4935617, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4941633, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4944513, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "original_file_path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4952466, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "original_file_path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.495559, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4962032, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4965088, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_as_sql": {"name": "get_replace_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "unique_id": "macro.dbt.get_replace_materialized_view_as_sql", "macro_sql": "{% macro get_replace_materialized_view_as_sql(relation, sql, existing_relation, backup_relation, intermediate_relation) %}\n    {{- log('Applying REPLACE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_replace_materialized_view_as_sql', 'dbt')(relation, sql, existing_relation, backup_relation, intermediate_relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4973276, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_as_sql": {"name": "default__get_replace_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_as_sql", "macro_sql": "{% macro default__get_replace_materialized_view_as_sql(relation, sql, existing_relation, backup_relation, intermediate_relation) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.4976969, "supported_languages": null}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5030224, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5036347, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5039818, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.50418, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5044897, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5047517, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.505194, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5069695, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5073519, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5078685, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5087442, "supported_languages": null}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5095181, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5100696, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5161097, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5164785, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5169566, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5184639, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5188127, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.519427, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.522837, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.526296, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5372696, "supported_languages": ["sql"]}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.538127, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5387695, "supported_languages": null}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.539494, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.540294, "supported_languages": null}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.544162, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5509064, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5527465, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.553247, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.554242, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5546417, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5549352, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5552523, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5555031, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5558343, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5560842, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5570512, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.55746, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5599775, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.565841, "supported_languages": ["sql"]}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.566943, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5674253, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5680118, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5686378, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5719006, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5722458, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5728836, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5733597, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5737867, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5741687, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {{ col_err.append(col['name']) }}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      cast(null as {{ col['data_type'] }}) as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5757146, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5764256, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5768101, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5775487, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5780172, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5792449, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5797687, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5813756, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5835762, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5841286, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5845249, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.58487, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.58527, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5857918, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5862274, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5869033, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5872865, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5876231, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.588475, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.588795, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.589106, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5893536, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5897024, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5898693, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.590216, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_bigquery.bigquery__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.59057, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header -%}\n  {{ sql_header }}\n  {%- endif -%}\n  {%- if limit is not none -%}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n  {%- else -%}\n  {{ compiled_code }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5915291, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "{% macro get_limit_subquery_sql(sql, limit) %}\n  {{ adapter.dispatch('get_limit_subquery_sql', 'dbt')(sql, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.591933, "supported_languages": null}, "macro.dbt.default__get_limit_subquery_sql": {"name": "default__get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.default__get_limit_subquery_sql", "macro_sql": "{% macro default__get_limit_subquery_sql(sql, limit) %}\n    select *\n    from (\n        {{ sql }}\n    ) as model_limit_subq\n    limit {{ limit }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5922208, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5949702, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.595229, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5955935, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5958388, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5965664, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.596955, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.597195, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5976694, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.598063, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5985434, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.5989332, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.599399, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6007879, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6012232, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6017826, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6022851, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6046112, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6052148, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6056945, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6071184, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {%- if relation.is_table -%}\n            {{- drop_table(relation) -}}\n        {%- elif relation.is_view -%}\n            {{- drop_view(relation) -}}\n        {%- elif relation.is_materialized_view -%}\n            {{- drop_materialized_view(relation) -}}\n        {%- else -%}\n            drop {{ relation.type }} if exists {{ relation }} cascade\n        {%- endif -%}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.drop_table", "macro.dbt.drop_view", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6080472, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n  {{ return(adapter.dispatch('drop_table', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6084235, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6086438, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n  {{ return(adapter.dispatch('drop_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.609003, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6092496, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n  {{ return(adapter.dispatch('drop_materialized_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6096358, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6098661, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6112216, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6115217, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6118667, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6126933, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6130786, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6133904, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.613719, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6139843, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6147606, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6156282, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6163137, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6167064, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6170406, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6174467, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6213825, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6217391, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6221957, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6227932, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6232927, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.623943, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.624314, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6246574, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6250887, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6257002, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6262016, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.627319, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6277783, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6280756, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6284823, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6296458, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6300094, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.630432, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6307917, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6313462, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6323283, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6328347, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6330657, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6336622, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.633949, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6344368, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6346607, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6351902, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6354887, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6361616, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.636705, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6370156, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6375906, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.637883, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6384351, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6387253, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6403112, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6406412, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6409853, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6413302, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6416903, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6420135, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6423538, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6427271, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.643064, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.643378, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6437187, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6440241, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6443594, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6446652, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6452386, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6455274, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.646437, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.646786, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.647247, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6477046, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6478703, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6484208, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6486971, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6492076, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6494462, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6499548, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6503124, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6508825, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6511757, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6518245, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6521811, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6528158, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6531615, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6536787, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6540186, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6547403, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6552513, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6557415, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6560085, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6564596, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6566238, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6577444, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.658587, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6592238, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.659565, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6600518, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6602788, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6612325, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6617334, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.662323, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6628923, "supported_languages": null}, "macro.dbt_expectations.rand": {"name": "rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.rand", "macro_sql": "{% macro rand() -%}\n    {{ adapter.dispatch('rand', 'dbt_expectations') () }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.bigquery__rand"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.663504, "supported_languages": null}, "macro.dbt_expectations.default__rand": {"name": "default__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.default__rand", "macro_sql": "{% macro default__rand() -%}\n\n    rand()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.663681, "supported_languages": null}, "macro.dbt_expectations.bigquery__rand": {"name": "bigquery__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.bigquery__rand", "macro_sql": "{% macro bigquery__rand() -%}\n\n    rand()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.663845, "supported_languages": null}, "macro.dbt_expectations.snowflake__rand": {"name": "snowflake__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.snowflake__rand", "macro_sql": "{% macro snowflake__rand(seed) -%}\n\n    uniform(0::float, 1::float, random())\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6640794, "supported_languages": null}, "macro.dbt_expectations.postgres__rand": {"name": "postgres__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.postgres__rand", "macro_sql": "{% macro postgres__rand() -%}\n\n    random()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.664309, "supported_languages": null}, "macro.dbt_expectations.redshift__rand": {"name": "redshift__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.redshift__rand", "macro_sql": "{% macro redshift__rand() -%}\n\n    random()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6644995, "supported_languages": null}, "macro.dbt_expectations.duckdb__rand": {"name": "duckdb__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.duckdb__rand", "macro_sql": "{% macro duckdb__rand() -%}\n\n    random()\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6646628, "supported_languages": null}, "macro.dbt_expectations.log_natural": {"name": "log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.log_natural", "macro_sql": "{% macro log_natural(x) -%}\n    {{ adapter.dispatch('log_natural', 'dbt_expectations') (x) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.bigquery__log_natural"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6652982, "supported_languages": null}, "macro.dbt_expectations.default__log_natural": {"name": "default__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.default__log_natural", "macro_sql": "{% macro default__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.665532, "supported_languages": null}, "macro.dbt_expectations.bigquery__log_natural": {"name": "bigquery__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.bigquery__log_natural", "macro_sql": "{% macro bigquery__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.665756, "supported_languages": null}, "macro.dbt_expectations.snowflake__log_natural": {"name": "snowflake__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.snowflake__log_natural", "macro_sql": "{% macro snowflake__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.66599, "supported_languages": null}, "macro.dbt_expectations.spark__log_natural": {"name": "spark__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.spark__log_natural", "macro_sql": "{% macro spark__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.666207, "supported_languages": null}, "macro.dbt_expectations.percentile_cont": {"name": "percentile_cont", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.percentile_cont", "macro_sql": "{% macro percentile_cont(field, quantile, partition=None) %}\n  {{ adapter.dispatch('quantile', 'dbt_expectations') (field, quantile, partition) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.bigquery__quantile"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6671855, "supported_languages": null}, "macro.dbt_expectations.default__quantile": {"name": "default__quantile", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.default__quantile", "macro_sql": "{% macro default__quantile(field, quantile, partition)  -%}\n    percentile_cont({{ quantile }}) within group (order by {{ field }})\n    {%- if partition %}over(partition by {{ partition }}){% endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6676285, "supported_languages": null}, "macro.dbt_expectations.bigquery__quantile": {"name": "bigquery__quantile", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.bigquery__quantile", "macro_sql": "{% macro bigquery__quantile(field, quantile, partition) -%}\n    percentile_cont({{ field }}, {{ quantile }})\n    over({%- if partition %}partition by {{ partition }}{% endif -%})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6680582, "supported_languages": null}, "macro.dbt_expectations.spark__quantile": {"name": "spark__quantile", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.spark__quantile", "macro_sql": "{% macro spark__quantile(field, quantile, partition) -%}\n    percentile({{ field }}, {{ quantile }})\n    over({%- if partition %}partition by {{ partition }}{% endif -%})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.668499, "supported_languages": null}, "macro.dbt_expectations.median": {"name": "median", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/median.sql", "original_file_path": "macros/math/median.sql", "unique_id": "macro.dbt_expectations.median", "macro_sql": "{% macro median(field) %}\n{{ dbt_expectations.percentile_cont(field, 0.5) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.percentile_cont"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6689115, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_column_count_to_be_between": {"name": "test_expect_table_column_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_column_count_to_be_between.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_column_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_be_between", "macro_sql": "{%- test expect_table_column_count_to_be_between(model,\n                                                    min_value=None,\n                                                    max_value=None\n                                                    ) -%}\n{%- if min_value is none and max_value is none -%}\n{{ exceptions.raise_compiler_error(\n    \"You have to provide either a min_value, max_value or both.\"\n) }}\n{%- endif -%}\n{%- if execute -%}\n{%- set number_actual_columns = (adapter.get_columns_in_relation(model) | length) -%}\n\n{%- set expression %}\n( 1=1\n{%- if min_value %} and number_actual_columns >= min_value{% endif %}\n{%- if max_value %} and number_actual_columns <= max_value{% endif %}\n)\n{% endset -%}\n\nwith test_data as (\n\n    select\n        {{ number_actual_columns }} as number_actual_columns,\n        {{ min_value if min_value else 0 }} as min_value,\n        {{ max_value if max_value else 0 }} as max_value\n\n)\nselect *\nfrom test_data\nwhere\n    not {{ expression }}\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6707513, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_aggregation_to_equal_other_table": {"name": "test_expect_table_aggregation_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_aggregation_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_aggregation_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_table_aggregation_to_equal_other_table", "macro_sql": "{%- test expect_table_aggregation_to_equal_other_table(model,\n                                                expression,\n                                                compare_model,\n                                                compare_expression=None,\n                                                group_by=None,\n                                                compare_group_by=None,\n                                                row_condition=None,\n                                                compare_row_condition=None,\n                                                tolerance=0.0,\n                                                tolerance_percent=None\n                                                ) -%}\n\n\n{{ dbt_expectations.test_equal_expression(\n    model,\n    expression=expression,\n    compare_model=compare_model,\n    compare_expression=compare_expression,\n    group_by=group_by,\n    compare_group_by=compare_group_by,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition,\n    tolerance=tolerance,\n    tolerance_percent=tolerance_percent\n) }}\n\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6719353, "supported_languages": null}, "macro.dbt_expectations._get_column_list": {"name": "_get_column_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/_get_column_list.sql", "original_file_path": "macros/schema_tests/table_shape/_get_column_list.sql", "unique_id": "macro.dbt_expectations._get_column_list", "macro_sql": "{%- macro _get_column_list(model, transform=\"upper\") -%}\n{%- set relation_columns = adapter.get_columns_in_relation(model) -%}\n{%- set relation_column_names = relation_columns | map(attribute=\"name\") | map(transform) | list -%}\n{%- do return(relation_column_names) -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6726947, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_not_contain_set": {"name": "test_expect_table_columns_to_not_contain_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_not_contain_set.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_not_contain_set.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_not_contain_set", "macro_sql": "{%- test expect_table_columns_to_not_contain_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    -- catch any column in input list that is in the list of table columns\n    select *\n    from\n        input_columns i\n        inner join\n        relation_columns r on r.relation_column = i.input_column\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6748228, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_contain_set": {"name": "test_expect_table_columns_to_contain_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_contain_set.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_contain_set.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_contain_set", "macro_sql": "{%- test expect_table_columns_to_contain_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        input_columns i\n        left join\n        relation_columns r on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        r.relation_column is null\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6769571, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table_times_factor": {"name": "test_expect_table_row_count_to_equal_other_table_times_factor", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table_times_factor", "macro_sql": "{%- test expect_table_row_count_to_equal_other_table_times_factor(model,\n                                                                    compare_model,\n                                                                    factor,\n                                                                    group_by=None,\n                                                                    compare_group_by=None,\n                                                                    row_condition=None,\n                                                                    compare_row_condition=None\n                                            ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal_other_table_times_factor',\n                        'dbt_expectations') (model,\n                                                compare_model,\n                                                factor,\n                                                group_by,\n                                                compare_group_by,\n                                                row_condition,\n                                                compare_row_condition\n                                            ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table_times_factor"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6787367, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table_times_factor": {"name": "default__test_expect_table_row_count_to_equal_other_table_times_factor", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table_times_factor", "macro_sql": "\n\n{%- macro default__test_expect_table_row_count_to_equal_other_table_times_factor(model,\n                                                                    compare_model,\n                                                                    factor,\n                                                                    group_by,\n                                                                    compare_group_by,\n                                                                    row_condition,\n                                                                    compare_row_condition\n                                                                    ) -%}\n\n{{ dbt_expectations.test_expect_table_row_count_to_equal_other_table(model,\n    compare_model,\n    group_by=group_by,\n    compare_group_by=compare_group_by,\n    factor=factor,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6793587, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list": {"name": "test_expect_table_columns_to_match_ordered_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_match_ordered_list.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_match_ordered_list.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list", "macro_sql": "{%- test expect_table_columns_to_match_ordered_list(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select\n            {{ loop.index }} as relation_column_idx,\n            cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select\n            {{ loop.index }} as input_column_idx,\n            cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column and r.relation_column_idx = i.input_column_idx\n    where\n        -- catch any column in input list that is not in the sequence of table columns\n        -- or any table column that is not in the input sequence\n        r.relation_column is null or\n        i.input_column is null\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6818452, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_match_set": {"name": "test_expect_table_columns_to_match_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_match_set.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_match_set.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_match_set", "macro_sql": "{%- test expect_table_columns_to_match_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        -- or any table column that is not in the input list\n        r.relation_column is null or\n        i.input_column is null\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6840127, "supported_languages": null}, "macro.dbt_expectations.test_expect_grouped_row_values_to_have_recent_data": {"name": "test_expect_grouped_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.test_expect_grouped_row_values_to_have_recent_data", "macro_sql": "{% test expect_grouped_row_values_to_have_recent_data(model,\n                                                        group_by,\n                                                        timestamp_column,\n                                                        datepart,\n                                                        interval,\n                                                        row_condition=None) %}\n\n {{ adapter.dispatch('test_expect_grouped_row_values_to_have_recent_data', 'dbt_expectations') (model,\n                                                                                                group_by,\n                                                                                                timestamp_column,\n                                                                                                datepart,\n                                                                                                interval,\n                                                                                                row_condition) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6873996, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data": {"name": "default__test_expect_grouped_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data", "macro_sql": "{% macro default__test_expect_grouped_row_values_to_have_recent_data(model,\n                                                                        group_by,\n                                                                        timestamp_column,\n                                                                        datepart,\n                                                                        interval,\n                                                                        row_condition) %}\nwith latest_grouped_timestamps as (\n\n    select\n        {{ group_by | join(\",\") ~ \",\" if group_by }}\n        max(1) as join_key,\n        max(cast({{ timestamp_column }} as {{ dbt_expectations.type_timestamp() }})) as latest_timestamp_column\n    from\n        {{ model }}\n    where\n        -- to exclude erroneous future dates\n        cast({{ timestamp_column }} as {{ dbt_expectations.type_timestamp() }}) <= {{ dbt_date.now() }}\n        {% if row_condition %}\n        and {{ row_condition }}\n        {% endif %}\n\n    {% if group_by -%}\n    {{  dbt_expectations.group_by(group_by | length) }}\n    {%- endif %}\n),\ntotal_row_counts as (\n\n    select\n        {{ group_by | join(\",\") ~ \",\" if group_by }}\n        max(1) as join_key,\n        count(*) as row_count\n    from\n        latest_grouped_timestamps\n    {% if group_by -%}\n    {{  dbt_expectations.group_by(group_by | length) }}\n    {%- endif %}\n\n\n),\noutdated_grouped_timestamps as (\n\n    select *\n    from\n        latest_grouped_timestamps\n    where\n        -- are the max timestamps per group older than the specified cutoff?\n        latest_timestamp_column <\n            cast(\n                {{ dbt.dateadd(datepart, interval * -1, dbt_date.now()) }}\n                as {{ dbt_expectations.type_timestamp() }}\n            )\n\n),\nvalidation_errors as (\n\n    select\n        r.row_count,\n        t.*\n    from\n        total_row_counts r\n        left join\n        outdated_grouped_timestamps t\n        on\n            {% for g in group_by %}\n            r.{{ g }} = t.{{ g }} and\n            {% endfor %}\n            r.join_key = t.join_key\n    where\n        -- fail if either no rows were returned due to row_condition,\n        -- or the recency test returned failed rows\n        r.row_count = 0\n        or\n        t.join_key is not null\n\n)\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.type_timestamp", "macro.dbt_date.now", "macro.dbt_expectations.group_by", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6895406, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_be_between": {"name": "test_expect_table_row_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_be_between", "macro_sql": "{%- test expect_table_row_count_to_be_between(model,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                            ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_be_between',\n                        'dbt_expectations') (model,\n                                                min_value,\n                                                max_value,\n                                                group_by,\n                                                row_condition,\n                                                strictly\n                                                ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_be_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6910062, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_be_between": {"name": "default__test_expect_table_row_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_be_between", "macro_sql": "\n\n{%- macro default__test_expect_table_row_count_to_be_between(model,\n                                                min_value,\n                                                max_value,\n                                                group_by,\n                                                row_condition,\n                                                strictly\n                                                ) -%}\n{% set expression %}\ncount(*)\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n    expression=expression,\n    min_value=min_value,\n    max_value=max_value,\n    group_by_columns=group_by,\n    row_condition=row_condition,\n    strictly=strictly\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6917107, "supported_languages": null}, "macro.dbt_expectations.test_expect_row_values_to_have_recent_data": {"name": "test_expect_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.test_expect_row_values_to_have_recent_data", "macro_sql": "{% test expect_row_values_to_have_recent_data(model,\n                                                column_name,\n                                                datepart,\n                                                interval,\n                                                row_condition=None) %}\n\n {{ adapter.dispatch('test_expect_row_values_to_have_recent_data', 'dbt_expectations') (model,\n                                                                                        column_name,\n                                                                                        datepart,\n                                                                                        interval,\n                                                                                        row_condition) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.693503, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data": {"name": "default__test_expect_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data", "macro_sql": "{% macro default__test_expect_row_values_to_have_recent_data(model, column_name, datepart, interval, row_condition) %}\n{%- set default_start_date = '1970-01-01' -%}\nwith max_recency as (\n\n    select max(cast({{ column_name }} as {{ dbt_expectations.type_timestamp() }})) as max_timestamp\n    from\n        {{ model }}\n    where\n        -- to exclude erroneous future dates\n        cast({{ column_name }} as {{ dbt_expectations.type_timestamp() }}) <= {{ dbt_date.now() }}\n        {% if row_condition %}\n        and {{ row_condition }}\n        {% endif %}\n)\nselect\n    *\nfrom\n    max_recency\nwhere\n    -- if the row_condition excludes all rows, we need to compare against a default date\n    -- to avoid false negatives\n    coalesce(max_timestamp, cast('{{ default_start_date }}' as {{ dbt_expectations.type_timestamp() }}))\n        <\n        cast({{ dbt.dateadd(datepart, interval * -1, dbt_date.now()) }} as {{ dbt_expectations.type_timestamp() }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.type_timestamp", "macro.dbt_date.now", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6947532, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_equal": {"name": "test_expect_table_row_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal", "macro_sql": "{%- test expect_table_row_count_to_equal(model,\n                                            value,\n                                            group_by=None,\n                                            row_condition=None\n                                            ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal',\n                        'dbt_expectations') (model,\n                                                value,\n                                                group_by,\n                                                row_condition\n                                                ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6958897, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal": {"name": "default__test_expect_table_row_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal", "macro_sql": "\n\n\n\n{%- macro default__test_expect_table_row_count_to_equal(model,\n                                                value,\n                                                group_by,\n                                                row_condition\n                                                ) -%}\n{% set expression %}\ncount(*) = {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n    expression=expression,\n    group_by_columns=group_by,\n    row_condition=row_condition)\n    }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.696481, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_to_exist": {"name": "test_expect_column_to_exist", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_column_to_exist.sql", "original_file_path": "macros/schema_tests/table_shape/expect_column_to_exist.sql", "unique_id": "macro.dbt_expectations.test_expect_column_to_exist", "macro_sql": "{%- test expect_column_to_exist(model, column_name, column_index=None, transform=\"upper\") -%}\n{%- if execute -%}\n\n    {%- set column_name = column_name | map(transform) | join -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n\n    {%- set matching_column_index = relation_column_names.index(column_name) if column_name in relation_column_names else -1 %}\n\n    {%- if column_index -%}\n\n        {%- set column_index_0 = column_index - 1 if column_index > 0 else 0 -%}\n\n        {%- set column_index_matches = true if matching_column_index == column_index_0 else false %}\n\n    {%- else -%}\n\n        {%- set column_index_matches = true -%}\n\n    {%- endif %}\n\n    with test_data as (\n\n        select\n            cast('{{ column_name }}' as {{ dbt.type_string() }}) as column_name,\n            {{ matching_column_index }} as matching_column_index,\n            {{ column_index_matches }} as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.6986632, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table": {"name": "test_expect_table_row_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table", "macro_sql": "{%- test expect_table_row_count_to_equal_other_table(model,\n                                            compare_model,\n                                            group_by=None,\n                                            compare_group_by=None,\n                                            factor=1,\n                                            row_condition=None,\n                                            compare_row_condition=None\n                                        ) -%}\n\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal_other_table',\n                        'dbt_expectations') (model,\n                                                compare_model,\n                                                group_by,\n                                                compare_group_by,\n                                                factor,\n                                                row_condition,\n                                                compare_row_condition\n                                            ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7002988, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table": {"name": "default__test_expect_table_row_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table", "macro_sql": "\n\n{%- macro default__test_expect_table_row_count_to_equal_other_table(model,\n                                                    compare_model,\n                                                    group_by,\n                                                    compare_group_by,\n                                                    factor,\n                                                    row_condition,\n                                                    compare_row_condition\n                                                    ) -%}\n{{ dbt_expectations.test_equal_expression(model, \"count(*)\",\n    compare_model=compare_model,\n    compare_expression=\"count(*) * \" + factor|string,\n    group_by=group_by,\n    compare_group_by=compare_group_by,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7010083, "supported_languages": null}, "macro.dbt_expectations._list_intersect": {"name": "_list_intersect", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/_list_intersect.sql", "original_file_path": "macros/schema_tests/table_shape/_list_intersect.sql", "unique_id": "macro.dbt_expectations._list_intersect", "macro_sql": "{%- macro _list_intersect(list1, list2) -%}\n{%- set matching_items = [] -%}\n{%- for itm in list1 -%}\n    {%- if itm in list2 -%}\n        {%- do matching_items.append(itm) -%}\n    {%- endif -%}\n{%- endfor -%}\n{%- do return(matching_items) -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7018523, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_column_count_to_equal_other_table": {"name": "test_expect_table_column_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_equal_other_table", "macro_sql": "{%- test expect_table_column_count_to_equal_other_table(model, compare_model) -%}\n{%- if execute -%}\n{%- set number_columns = (adapter.get_columns_in_relation(model) | length) -%}\n{%- set compare_number_columns = (adapter.get_columns_in_relation(compare_model) | length) -%}\nwith test_data as (\n\n    select\n        {{ number_columns }} as number_columns,\n        {{ compare_number_columns }} as compare_number_columns\n\n)\nselect *\nfrom test_data\nwhere\n    number_columns != compare_number_columns\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7027655, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_column_count_to_equal": {"name": "test_expect_table_column_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_equal", "macro_sql": "{%- test expect_table_column_count_to_equal(model, value) -%}\n{%- if execute -%}\n{%- set number_actual_columns = (adapter.get_columns_in_relation(model) | length) -%}\nwith test_data as (\n\n    select\n        {{ number_actual_columns }} as number_actual_columns,\n        {{ value }} as value\n\n)\nselect *\nfrom test_data\nwhere\n    number_actual_columns != value\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7034643, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table": {"name": "test_expect_column_distinct_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table", "macro_sql": "{% test expect_column_distinct_count_to_equal_other_table(model,\n                                                                compare_model,\n                                                                column_name,\n                                                                compare_column_name,\n                                                                row_condition=None,\n                                                                compare_row_condition=None\n                                                                ) %}\n{%- set expression -%}\ncount(distinct {{ column_name }})\n{%- endset -%}\n{%- set compare_expression -%}\n{%- if compare_column_name -%}\ncount(distinct {{ compare_column_name }})\n{%- else -%}\n{{ expression }}\n{%- endif -%}\n{%- endset -%}\n{{ dbt_expectations.test_equal_expression(\n    model,\n    expression=expression,\n    compare_model=compare_model,\n    compare_expression=compare_expression,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7049174, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_min_to_be_between": {"name": "test_expect_column_min_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_min_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_min_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_min_to_be_between", "macro_sql": "{% test expect_column_min_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n{% set expression %}\nmin({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7063334, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_quantile_values_to_be_between": {"name": "test_expect_column_quantile_values_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_quantile_values_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_quantile_values_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_quantile_values_to_be_between", "macro_sql": "{% test expect_column_quantile_values_to_be_between(model, column_name,\n                                                            quantile,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n\n{% set expression %}\n{{ dbt_expectations.percentile_cont(column_name, quantile) }}\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.percentile_cont", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7078543, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_proportion_of_unique_values_to_be_between": {"name": "test_expect_column_proportion_of_unique_values_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_proportion_of_unique_values_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_proportion_of_unique_values_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_proportion_of_unique_values_to_be_between", "macro_sql": "{% test expect_column_proportion_of_unique_values_to_be_between(model, column_name,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n{% set expression %}\ncount(distinct {{ column_name }})*1.0/count({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7093527, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set": {"name": "test_expect_column_distinct_values_to_contain_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_contain_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_contain_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro_sql": "{% test expect_column_distinct_values_to_contain_set(model, column_name,\n                                                            value_set,\n                                                            quote_values=True,\n                                                            row_condition=None\n                                                            ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7109685, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_be_greater_than": {"name": "test_expect_column_distinct_count_to_be_greater_than", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_greater_than.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_greater_than.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_be_greater_than", "macro_sql": "{% test expect_column_distinct_count_to_be_greater_than(model,\n                                                          column_name,\n                                                          value,\n                                                          group_by=None,\n                                                          row_condition=None\n                                                          ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) > {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7120566, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_stdev_to_be_between": {"name": "test_expect_column_stdev_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_stdev_to_be_between", "macro_sql": "{% test expect_column_stdev_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) -%}\n    {{ adapter.dispatch('test_expect_column_stdev_to_be_between', 'dbt_expectations') (\n                                                    model, column_name,\n                                                    min_value,\n                                                    max_value,\n                                                    group_by,\n                                                    row_condition,\n                                                    strictly\n                                                    ) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_stdev_to_be_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7141643, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_stdev_to_be_between": {"name": "default__test_expect_column_stdev_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_stdev_to_be_between", "macro_sql": "{% macro default__test_expect_column_stdev_to_be_between(\n                                                    model, column_name,\n                                                    min_value,\n                                                    max_value,\n                                                    group_by,\n                                                    row_condition,\n                                                    strictly\n                                                    ) %}\n\n{% set expression %}\nstddev({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7150116, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_equal": {"name": "test_expect_column_distinct_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_equal", "macro_sql": "{% test expect_column_distinct_count_to_equal(model,\n                                                column_name,\n                                                value,\n                                                group_by=None,\n                                                row_condition=None\n                                                ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) = {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7160928, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_values_to_equal_set": {"name": "test_expect_column_distinct_values_to_equal_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_equal_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_equal_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_equal_set", "macro_sql": "{% test expect_column_distinct_values_to_equal_set(model, column_name,\n                                                            value_set,\n                                                            quote_values=True,\n                                                            row_condition=None\n                                                            ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as column_value\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        all_values v\n        full outer join\n        unique_set_values s on v.column_value = s.value_field\n    where\n        v.column_value is null or\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7177467, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_most_common_value_to_be_in_set": {"name": "test_expect_column_most_common_value_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_most_common_value_to_be_in_set", "macro_sql": "{% test expect_column_most_common_value_to_be_in_set(model,\n                                                       column_name,\n                                                       value_set,\n                                                       top_n,\n                                                       quote_values=True,\n                                                       data_type=\"decimal\",\n                                                       row_condition=None\n                                                       ) -%}\n\n    {{ adapter.dispatch('test_expect_column_most_common_value_to_be_in_set', 'dbt_expectations') (\n            model, column_name, value_set, top_n, quote_values, data_type, row_condition\n        ) }}\n\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7203653, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set": {"name": "default__test_expect_column_most_common_value_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set", "macro_sql": "{% macro default__test_expect_column_most_common_value_to_be_in_set(model,\n                                                                      column_name,\n                                                                      value_set,\n                                                                      top_n,\n                                                                      quote_values,\n                                                                      data_type,\n                                                                      row_condition\n                                                                      ) %}\n\nwith value_counts as (\n\n    select\n        {% if quote_values -%}\n        {{ column_name }}\n        {%- else -%}\n        cast({{ column_name }} as {{ data_type }})\n        {%- endif %} as value_field,\n        count(*) as value_count\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n    group by {% if quote_values -%}\n                {{ column_name }}\n            {%- else -%}\n                cast({{ column_name }} as {{ data_type }})\n            {%- endif %}\n\n),\nvalue_counts_ranked as (\n\n    select\n        *,\n        row_number() over(order by value_count desc) as value_count_rank\n    from\n        value_counts\n\n),\nvalue_count_top_n as (\n\n    select\n        value_field\n    from\n        value_counts_ranked\n    where\n        value_count_rank = {{ top_n }}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        cast({{ value }} as {{ data_type }})\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        value_field\n    from\n        value_count_top_n\n    where\n        value_field not in (select value_field from unique_set_values)\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7219865, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_values_to_be_in_set": {"name": "test_expect_column_distinct_values_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_be_in_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_be_in_set", "macro_sql": "{% test expect_column_distinct_values_to_be_in_set(model,\n                                                     column_name,\n                                                     value_set,\n                                                     quote_values=True,\n                                                     row_condition=None\n                                                     ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        v.value_field\n    from\n        all_values v\n        left join\n        unique_set_values s on v.value_field = s.value_field\n    where\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7235658, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_sum_to_be_between": {"name": "test_expect_column_sum_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_sum_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_sum_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_sum_to_be_between", "macro_sql": "{% test expect_column_sum_to_be_between(model, column_name,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                                ) %}\n{% set expression %}\nsum({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.72491, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_be_less_than": {"name": "test_expect_column_distinct_count_to_be_less_than", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_less_than.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_less_than.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_be_less_than", "macro_sql": "{% test expect_column_distinct_count_to_be_less_than(model,\n                                                       column_name,\n                                                       value,\n                                                       group_by=None,\n                                                       row_condition=None\n                                                       ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) < {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.72601, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_max_to_be_between": {"name": "test_expect_column_max_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_max_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_max_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_max_to_be_between", "macro_sql": "{% test expect_column_max_to_be_between(model, column_name,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                                ) %}\n{% set expression %}\nmax({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7273626, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_median_to_be_between": {"name": "test_expect_column_median_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_median_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_median_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_median_to_be_between", "macro_sql": "{% test expect_column_median_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.median(column_name) }}\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.median", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7287586, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_mean_to_be_between": {"name": "test_expect_column_mean_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_mean_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_mean_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_mean_to_be_between", "macro_sql": "{% test expect_column_mean_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n{% set expression %}\navg({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7301729, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_unique_value_count_to_be_between": {"name": "test_expect_column_unique_value_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_unique_value_count_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_unique_value_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_unique_value_count_to_be_between", "macro_sql": "{% test expect_column_unique_value_count_to_be_between(model, column_name,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n{% set expression %}\ncount(distinct {{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7315407, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_pair_values_A_to_be_greater_than_B": {"name": "test_expect_column_pair_values_A_to_be_greater_than_B", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_column_pair_values_A_to_be_greater_than_B.sql", "original_file_path": "macros/schema_tests/multi-column/expect_column_pair_values_A_to_be_greater_than_B.sql", "unique_id": "macro.dbt_expectations.test_expect_column_pair_values_A_to_be_greater_than_B", "macro_sql": "{% test expect_column_pair_values_A_to_be_greater_than_B(model,\n                                                                column_A,\n                                                                column_B,\n                                                                or_equal=False,\n                                                                row_condition=None\n                                                                ) %}\n\n{% set operator = \">=\" if or_equal else \">\" %}\n{% set expression = column_A ~ \" \" ~ operator ~ \" \" ~ column_B %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7327335, "supported_languages": null}, "macro.dbt_expectations.test_expect_compound_columns_to_be_unique": {"name": "test_expect_compound_columns_to_be_unique", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_compound_columns_to_be_unique.sql", "original_file_path": "macros/schema_tests/multi-column/expect_compound_columns_to_be_unique.sql", "unique_id": "macro.dbt_expectations.test_expect_compound_columns_to_be_unique", "macro_sql": "{% test expect_compound_columns_to_be_unique(model,\n                                                column_list,\n                                                quote_columns=False,\n                                                ignore_row_if=\"all_values_are_missing\",\n                                                row_condition=None\n                                                ) %}\n{% if not column_list %}\n    {{ exceptions.raise_compiler_error(\n        \"`column_list` must be specified as a list of columns. Got: '\" ~ column_list ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% if not quote_columns %}\n    {%- set columns=column_list %}\n{% elif quote_columns %}\n    {%- set columns=[] %}\n        {% for column in column_list -%}\n            {% set columns = columns.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for expect_compound_columns_to_be_unique test must be one of [True, False] Got: '\" ~ quote_columns ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set row_condition_ext -%}\n\n    {%- if row_condition  %}\n    {{ row_condition }} and\n    {% endif -%}\n\n    {{ dbt_expectations.ignore_row_if_expression(ignore_row_if, columns) }}\n\n{%- endset -%}\n\nwith validation_errors as (\n\n    select\n        {% for column in columns -%}\n        {{ column }},\n        {%- endfor %}\n        count(*) as {{adapter.quote(\"n_records\")}}\n    from {{ model }}\n    where\n        1=1\n    {%- if row_condition_ext %}\n        and {{ row_condition_ext }}\n    {% endif %}\n    group by\n        {% for column in columns -%}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {%- endfor %}\n    having count(*) > 1\n\n)\nselect * from validation_errors\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.ignore_row_if_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7364507, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_pair_values_to_be_equal": {"name": "test_expect_column_pair_values_to_be_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_equal.sql", "original_file_path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_column_pair_values_to_be_equal", "macro_sql": "{% test expect_column_pair_values_to_be_equal(model,\n                                                        column_A,\n                                                        column_B,\n                                                        row_condition=None\n                                                        ) %}\n\n{% set operator = \"=\" %}\n{% set expression = column_A ~ \" \" ~ operator ~ \" \" ~ column_B %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7375805, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_pair_values_to_be_in_set": {"name": "test_expect_column_pair_values_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_in_set.sql", "original_file_path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_pair_values_to_be_in_set", "macro_sql": "{% test expect_column_pair_values_to_be_in_set(model,\n                                                        column_A,\n                                                        column_B,\n                                                        value_pairs_set,\n                                                        row_condition=None\n                                                        ) %}\n\n{% set expression %}\n{% for pair in value_pairs_set %}\n{%- if (pair | length) == 2 %}\n({{ column_A }} = {{ pair[0] }} and {{ column_B }} = {{ pair[1] }}){% if not loop.last %} or {% endif %}\n{% else %}\n{{ exceptions.raise_compiler_error(\n        \"`value_pairs_set` argument for expect_column_pair_values_to_be_in_set test cannot have more than 2 item per element.\n        Got: '\" ~ pair ~ \"'.'\"\n    ) }}\n{% endif %}\n{% endfor %}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7399528, "supported_languages": null}, "macro.dbt_expectations.test_expect_multicolumn_sum_to_equal": {"name": "test_expect_multicolumn_sum_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_multicolumn_sum_to_equal.sql", "original_file_path": "macros/schema_tests/multi-column/expect_multicolumn_sum_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_multicolumn_sum_to_equal", "macro_sql": "{% test expect_multicolumn_sum_to_equal(model,\n                                                column_list,\n                                                sum_total,\n                                                group_by=None,\n                                                row_condition=None\n                                                ) %}\n\n{% set expression %}\n{% for column in column_list %}\nsum({{ column }}){% if not loop.last %} + {% endif %}\n{# the if just allows for column names or literal numbers #}\n{% endfor %} = {% if sum_total is number %}{{sum_total}}{% else %}sum({{ sum_total }}){% endif %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7417195, "supported_languages": null}, "macro.dbt_expectations.test_expect_select_column_values_to_be_unique_within_record": {"name": "test_expect_select_column_values_to_be_unique_within_record", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "original_file_path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "unique_id": "macro.dbt_expectations.test_expect_select_column_values_to_be_unique_within_record", "macro_sql": "{% test expect_select_column_values_to_be_unique_within_record(model,\n                                                    column_list,\n                                                    quote_columns=False,\n                                                    ignore_row_if=\"all_values_are_missing\",\n                                                    row_condition=None\n                                                    )  -%}\n    {{ adapter.dispatch('test_expect_select_column_values_to_be_unique_within_record', 'dbt_expectations') (model, column_list, quote_columns, ignore_row_if, row_condition) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7439432, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record": {"name": "default__test_expect_select_column_values_to_be_unique_within_record", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "original_file_path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "unique_id": "macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record", "macro_sql": "{% macro default__test_expect_select_column_values_to_be_unique_within_record(model,\n                                                    column_list,\n                                                    quote_columns,\n                                                    ignore_row_if,\n                                                    row_condition\n                                                    ) %}\n\n{% if not quote_columns %}\n    {%- set columns=column_list %}\n{% elif quote_columns %}\n    {%- set columns=[] %}\n        {% for column in column_list -%}\n            {% set columns = columns.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote_columns ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set row_condition_ext -%}\n\n    {%- if row_condition  %}\n    {{ row_condition }} and\n    {% endif -%}\n\n    {{ dbt_expectations.ignore_row_if_expression(ignore_row_if, columns) }}\n\n{%- endset -%}\n\nwith column_values as (\n\n    select\n        row_number() over(order by 1) as row_index,\n        {% for column in columns -%}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {%- endfor %}\n    from {{ model }}\n    where\n        1=1\n    {%- if row_condition_ext %}\n        and {{ row_condition_ext }}\n    {% endif %}\n\n),\nunpivot_columns as (\n\n    {% for column in columns %}\n    select row_index, '{{ column }}' as column_name, {{ column }} as column_value from column_values\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n\n    select\n        row_index,\n        count(distinct column_value) as column_values\n    from unpivot_columns\n    group by 1\n    having count(distinct column_value) < {{ columns | length }}\n\n)\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.ignore_row_if_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.746235, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_value_lengths_to_be_between": {"name": "test_expect_column_value_lengths_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_be_between.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro_sql": "{% test expect_column_value_lengths_to_be_between(model, column_name,\n                                                         min_value=None,\n                                                         max_value=None,\n                                                         row_condition=None,\n                                                         strictly=False\n                                                      ) %}\n{% set expression %}\n{{ dbt.length(column_name) }}\n{% endset %}\n\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=None,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.length", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7476256, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern_list": {"name": "test_expect_column_values_to_match_like_pattern_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern_list", "macro_sql": "{% test expect_column_values_to_match_like_pattern_list(model, column_name,\n                                                    like_pattern_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n    {% for like_pattern in like_pattern_list %}\n    {{ dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=True) }}\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7494037, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern": {"name": "test_expect_column_values_to_match_like_pattern", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern", "macro_sql": "{% test expect_column_values_to_match_like_pattern(model, column_name,\n                                                    like_pattern,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=True) %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7503543, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern": {"name": "test_expect_column_values_to_not_match_like_pattern", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern", "macro_sql": "{% test expect_column_values_to_not_match_like_pattern(model, column_name,\n                                                    like_pattern,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=False) %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.751293, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_regex": {"name": "test_expect_column_values_to_match_regex", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_regex", "macro_sql": "{% test expect_column_values_to_match_regex(model, column_name,\n                                                    regex,\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} > 0\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7525227, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_value_lengths_to_equal": {"name": "test_expect_column_value_lengths_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_equal.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_column_value_lengths_to_equal", "macro_sql": "{% test expect_column_value_lengths_to_equal(model, column_name,\n                                                    value,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt.length(column_name) ~ \" = \" ~ value %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.length", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.753465, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list": {"name": "test_expect_column_values_to_not_match_regex_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list", "macro_sql": "{% test expect_column_values_to_not_match_regex_list(model, column_name,\n                                                    regex_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n{% for regex in regex_list %}\n{{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} = 0\n{%- if not loop.last %}\n{{ \" and \" if match_on == \"all\" else \" or \"}}\n{% endif -%}\n{% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.755377, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list": {"name": "test_expect_column_values_to_not_match_like_pattern_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list", "macro_sql": "{% test expect_column_values_to_not_match_like_pattern_list(model, column_name,\n                                                    like_pattern_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n    {% for like_pattern in like_pattern_list %}\n    {{ dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=False) }}\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7571492, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_regex_list": {"name": "test_expect_column_values_to_match_regex_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_regex_list", "macro_sql": "{% test expect_column_values_to_match_regex_list(model, column_name,\n                                                    regex_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n    {% for regex in regex_list %}\n    {{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} > 0\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7591298, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_regex": {"name": "test_expect_column_values_to_not_match_regex", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_regex", "macro_sql": "{% test expect_column_values_to_not_match_regex(model, column_name,\n                                                    regex,\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} = 0\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.76037, "supported_languages": null}, "macro.dbt_expectations._get_like_pattern_expression": {"name": "_get_like_pattern_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/_get_like_pattern_expression.sql", "original_file_path": "macros/schema_tests/string_matching/_get_like_pattern_expression.sql", "unique_id": "macro.dbt_expectations._get_like_pattern_expression", "macro_sql": "{% macro _get_like_pattern_expression(column_name, like_pattern, positive) %}\n{{ column_name }} {{ \"not\" if not positive else \"\" }} like '{{ like_pattern }}'\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7608755, "supported_languages": null}, "macro.dbt_expectations.test_expression_between": {"name": "test_expression_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_between.sql", "original_file_path": "macros/schema_tests/_generalized/expression_between.sql", "unique_id": "macro.dbt_expectations.test_expression_between", "macro_sql": "{% test expression_between(model,\n                                 expression,\n                                 min_value=None,\n                                 max_value=None,\n                                 group_by_columns=None,\n                                 row_condition=None,\n                                 strictly=False\n                                 ) %}\n\n    {{ dbt_expectations.expression_between(model, expression, min_value, max_value, group_by_columns, row_condition, strictly) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7627275, "supported_languages": null}, "macro.dbt_expectations.expression_between": {"name": "expression_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_between.sql", "original_file_path": "macros/schema_tests/_generalized/expression_between.sql", "unique_id": "macro.dbt_expectations.expression_between", "macro_sql": "{% macro expression_between(model,\n                            expression,\n                            min_value,\n                            max_value,\n                            group_by_columns,\n                            row_condition,\n                            strictly\n                            ) %}\n\n{%- if min_value is none and max_value is none -%}\n{{ exceptions.raise_compiler_error(\n    \"You have to provide either a min_value, max_value or both.\"\n) }}\n{%- endif -%}\n\n{%- set strict_operator = \"\" if strictly else \"=\" -%}\n\n{% set expression_min_max %}\n( 1=1\n{%- if min_value is not none %} and {{ expression | trim }} >{{ strict_operator }} {{ min_value }}{% endif %}\n{%- if max_value is not none %} and {{ expression | trim }} <{{ strict_operator }} {{ max_value }}{% endif %}\n)\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression_min_max,\n                                        group_by_columns=group_by_columns,\n                                        row_condition=row_condition)\n                                        }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7642198, "supported_languages": null}, "macro.dbt_expectations.get_select": {"name": "get_select", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.get_select", "macro_sql": "{% macro get_select(model, expression, row_condition, group_by) -%}\n    {{ adapter.dispatch('get_select', 'dbt_expectations') (model, expression, row_condition, group_by) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__get_select"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7714217, "supported_languages": null}, "macro.dbt_expectations.default__get_select": {"name": "default__get_select", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.default__get_select", "macro_sql": "\n\n{%- macro default__get_select(model, expression, row_condition, group_by) %}\n    select\n        {% if group_by %}\n        {% for g in group_by -%}\n            {{ g }} as col_{{ loop.index }},\n        {% endfor -%}\n        {% endif %}\n        {{ expression }} as expression\n    from\n        {{ model }}\n    {%- if row_condition %}\n    where\n        {{ row_condition }}\n    {% endif %}\n    {% if group_by %}\n    group by\n        {% for g in group_by -%}\n            {{ loop.index }}{% if not loop.last %},{% endif %}\n        {% endfor %}\n    {% endif %}\n{% endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7725728, "supported_languages": null}, "macro.dbt_expectations.test_equal_expression": {"name": "test_equal_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.test_equal_expression", "macro_sql": "{% test equal_expression(model, expression,\n                                compare_model=None,\n                                compare_expression=None,\n                                group_by=None,\n                                compare_group_by=None,\n                                row_condition=None,\n                                compare_row_condition=None,\n                                tolerance=0.0,\n                                tolerance_percent=None\n                                ) -%}\n\n    {{ adapter.dispatch('test_equal_expression', 'dbt_expectations') (\n                                model,\n                                expression,\n                                compare_model,\n                                compare_expression,\n                                group_by,\n                                compare_group_by,\n                                row_condition,\n                                compare_row_condition,\n                                tolerance,\n                                tolerance_percent) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7735531, "supported_languages": null}, "macro.dbt_expectations.default__test_equal_expression": {"name": "default__test_equal_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.default__test_equal_expression", "macro_sql": "\n\n{%- macro default__test_equal_expression(\n                                model,\n                                expression,\n                                compare_model,\n                                compare_expression,\n                                group_by,\n                                compare_group_by,\n                                row_condition,\n                                compare_row_condition,\n                                tolerance,\n                                tolerance_percent) -%}\n\n    {%- set compare_model = model if not compare_model else compare_model -%}\n    {%- set compare_expression = expression if not compare_expression else compare_expression -%}\n    {%- set compare_row_condition = row_condition if not compare_row_condition else compare_row_condition -%}\n    {%- set compare_group_by = group_by if not compare_group_by else compare_group_by -%}\n\n    {%- set n_cols = (group_by|length) if group_by else 0 %}\n    with a as (\n        {{ dbt_expectations.get_select(model, expression, row_condition, group_by) }}\n    ),\n    b as (\n        {{ dbt_expectations.get_select(compare_model, compare_expression, compare_row_condition, compare_group_by) }}\n    ),\n    final as (\n\n        select\n            {% for i in range(1, n_cols + 1) -%}\n            coalesce(a.col_{{ i }}, b.col_{{ i }}) as col_{{ i }},\n            {% endfor %}\n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        {% if n_cols > 0 %}\n            a\n            full outer join\n            b on\n            {% for i in range(1, n_cols + 1) -%}\n                a.col_{{ i }} = b.col_{{ i }} {% if not loop.last %}and{% endif %}\n            {% endfor -%}\n        {% else %}\n            a cross join b\n        {% endif %}\n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        {% if tolerance_percent %}\n        expression_difference_percent > {{ tolerance_percent }}\n        {% else %}\n        expression_difference > {{ tolerance }}\n        {% endif %}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.get_select"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.776122, "supported_languages": null}, "macro.dbt_expectations.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_is_true.sql", "original_file_path": "macros/schema_tests/_generalized/expression_is_true.sql", "unique_id": "macro.dbt_expectations.test_expression_is_true", "macro_sql": "{% test expression_is_true(model,\n                                 expression,\n                                 test_condition=\"= true\",\n                                 group_by_columns=None,\n                                 row_condition=None\n                                 ) %}\n\n    {{ dbt_expectations.expression_is_true(model, expression, test_condition, group_by_columns, row_condition) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7776973, "supported_languages": null}, "macro.dbt_expectations.expression_is_true": {"name": "expression_is_true", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_is_true.sql", "original_file_path": "macros/schema_tests/_generalized/expression_is_true.sql", "unique_id": "macro.dbt_expectations.expression_is_true", "macro_sql": "{% macro expression_is_true(model,\n                                 expression,\n                                 test_condition=\"= true\",\n                                 group_by_columns=None,\n                                 row_condition=None\n                                 ) %}\n    {{ adapter.dispatch('expression_is_true', 'dbt_expectations') (model, expression, test_condition, group_by_columns, row_condition) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.778285, "supported_languages": null}, "macro.dbt_expectations.default__expression_is_true": {"name": "default__expression_is_true", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_is_true.sql", "original_file_path": "macros/schema_tests/_generalized/expression_is_true.sql", "unique_id": "macro.dbt_expectations.default__expression_is_true", "macro_sql": "{% macro default__expression_is_true(model, expression, test_condition, group_by_columns, row_condition) -%}\nwith grouped_expression as (\n    select\n        {% if group_by_columns %}\n        {% for group_by_column in group_by_columns -%}\n        {{ group_by_column }} as col_{{ loop.index }},\n        {% endfor -%}\n        {% endif %}\n        {{ dbt_expectations.truth_expression(expression) }}\n    from {{ model }}\n     {%- if row_condition %}\n    where\n        {{ row_condition }}\n    {% endif %}\n    {% if group_by_columns %}\n    group by\n    {% for group_by_column in group_by_columns -%}\n        {{ group_by_column }}{% if not loop.last %},{% endif %}\n    {% endfor %}\n    {% endif %}\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression {{ test_condition }})\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.truth_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7795556, "supported_languages": null}, "macro.dbt_expectations.truth_expression": {"name": "truth_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_truth_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_truth_expression.sql", "unique_id": "macro.dbt_expectations.truth_expression", "macro_sql": "{% macro truth_expression(expression) %}\n    {{ adapter.dispatch('truth_expression', 'dbt_expectations') (expression) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__truth_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7800372, "supported_languages": null}, "macro.dbt_expectations.default__truth_expression": {"name": "default__truth_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_truth_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_truth_expression.sql", "unique_id": "macro.dbt_expectations.default__truth_expression", "macro_sql": "{% macro default__truth_expression(expression) %}\n  {{ expression }} as expression\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.780255, "supported_languages": null}, "macro.dbt_expectations.ignore_row_if_expression": {"name": "ignore_row_if_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "unique_id": "macro.dbt_expectations.ignore_row_if_expression", "macro_sql": "{% macro ignore_row_if_expression(ignore_row_if, columns) %}\n    {{ adapter.dispatch('ignore_row_if_expression', 'dbt_expectations') (ignore_row_if, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__ignore_row_if_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7810674, "supported_languages": null}, "macro.dbt_expectations.default__ignore_row_if_expression": {"name": "default__ignore_row_if_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "unique_id": "macro.dbt_expectations.default__ignore_row_if_expression", "macro_sql": "{% macro default__ignore_row_if_expression(ignore_row_if, columns) %}\n  {%- set ignore_row_if_values = [\"all_values_are_missing\", \"any_value_is_missing\"] -%}\n    {% if ignore_row_if not in ignore_row_if_values %}\n        {{ exceptions.raise_compiler_error(\n            \"`ignore_row_if` must be one of \" ~ (ignore_row_if_values | join(\", \")) ~ \". Got: '\" ~ ignore_row_if ~\"'.'\"\n        ) }}\n    {% endif %}\n\n    {%- set op = \"and\" if ignore_row_if == \"all_values_are_missing\" else \"or\" -%}\n    not (\n        {% for column in columns -%}\n        {{ column }} is null{% if not loop.last %} {{ op }} {% endif %}\n        {% endfor %}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7823067, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_be_in_set": {"name": "test_expect_column_values_to_not_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_in_set.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_be_in_set", "macro_sql": "{% test expect_column_values_to_not_be_in_set(model, column_name,\n                                                   value_set,\n                                                   quote_values=True,\n                                                   row_condition=None\n                                                   ) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        cast('{{ value }}' as {{ dbt.type_string() }})\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n    -- values from the model that match the set\n    select\n        v.value_field\n    from\n        all_values v\n        join\n        set_values s on v.value_field = s.value_field\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7838993, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_be_null": {"name": "test_expect_column_values_to_not_be_null", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_null.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_null.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro_sql": "{% test expect_column_values_to_not_be_null(model, column_name, row_condition=None) %}\n\n{% set expression = column_name ~ \" is not null\" %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7847216, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_decreasing": {"name": "test_expect_column_values_to_be_decreasing", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_decreasing.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_decreasing.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_decreasing", "macro_sql": "{% test expect_column_values_to_be_decreasing(model, column_name,\n                                                   sort_column=None,\n                                                   strictly=True,\n                                                   row_condition=None,\n                                                   group_by=None) %}\n\n{%- set sort_column = column_name if not sort_column else sort_column -%}\n{%- set operator = \"<\" if strictly else \"<=\" %}\nwith all_values as (\n\n    select\n        {{ sort_column }} as sort_column,\n        {%- if group_by -%}\n        {{ group_by | join(\", \") }},\n        {%- endif %}\n        {{ column_name }} as value_field\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        value_field,\n        lag(value_field) over\n            {%- if not group_by -%}\n                (order by sort_column)\n            {%- else -%}\n                (partition by {{ group_by | join(\", \") }} order by sort_column)\n            {%- endif  %} as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (value_field {{ operator }} value_field_lag)\n\n)\nselect *\nfrom validation_errors\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7868545, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_in_set": {"name": "test_expect_column_values_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_set.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_in_set", "macro_sql": "{% test expect_column_values_to_be_in_set(model, column_name,\n                                                   value_set,\n                                                   quote_values=True,\n                                                   row_condition=None\n                                                   ) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        cast('{{ value }}' as {{ dbt.type_string() }})\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        v.value_field\n    from\n        all_values v\n        left join\n        set_values s on v.value_field = s.value_field\n    where\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7884674, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_increasing": {"name": "test_expect_column_values_to_be_increasing", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_increasing.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_increasing.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_increasing", "macro_sql": "{% test expect_column_values_to_be_increasing(model, column_name,\n                                                   sort_column=None,\n                                                   strictly=True,\n                                                   row_condition=None,\n                                                   group_by=None) %}\n\n{%- set sort_column = column_name if not sort_column else sort_column -%}\n{%- set operator = \">\" if strictly else \">=\" -%}\nwith all_values as (\n\n    select\n        {{ sort_column }} as sort_column,\n        {%- if group_by -%}\n        {{ group_by | join(\", \") }},\n        {%- endif %}\n        {{ column_name }} as value_field\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        {%- if group_by -%}\n        {{ group_by | join(\", \") }},\n        {%- endif %}\n        value_field,\n        lag(value_field) over\n            {%- if not group_by -%}\n                (order by sort_column)\n            {%- else -%}\n                (partition by {{ group_by | join(\", \") }} order by sort_column)\n            {%- endif  %} as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (value_field {{ operator }} value_field_lag)\n\n)\nselect *\nfrom validation_errors\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.790892, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_null": {"name": "test_expect_column_values_to_be_null", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_null.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_null.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_null", "macro_sql": "{% test expect_column_values_to_be_null(model, column_name, row_condition=None) %}\n\n{% set expression = column_name ~ \" is null\" %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7917101, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_of_type": {"name": "test_expect_column_values_to_be_of_type", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_of_type.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_of_type.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro_sql": "{%- test expect_column_values_to_be_of_type(model, column_name, column_type) -%}\n{{ dbt_expectations.test_expect_column_values_to_be_in_type_list(model, column_name, [column_type]) }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_in_type_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.792162, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_have_consistent_casing": {"name": "test_expect_column_values_to_have_consistent_casing", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_have_consistent_casing.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_have_consistent_casing.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_have_consistent_casing", "macro_sql": "{% test expect_column_values_to_have_consistent_casing(model, column_name, display_inconsistent_columns=False) %}\n\nwith test_data as (\n\n    select\n        distinct {{ column_name }} as distinct_values\n    from\n        {{ model }}\n\n ),\n {% if display_inconsistent_columns %}\n validation_errors as (\n\n    select\n        lower(distinct_values) as inconsistent_columns,\n        count(distinct_values) as set_count_case_insensitive\n    from\n        test_data\n    group by 1\n    having\n        count(distinct_values) > 1\n\n )\n select * from validation_errors\n {% else %}\n validation_errors as (\n\n    select\n        count(1) as set_count,\n        count(distinct lower(distinct_values)) as set_count_case_insensitive\n    from\n        test_data\n\n )\n select *\n from\n    validation_errors\n where\n    set_count != set_count_case_insensitive\n {% endif %}\n {%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7929096, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_between": {"name": "test_expect_column_values_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_between.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_between", "macro_sql": "{% test expect_column_values_to_be_between(model, column_name,\n                                                   min_value=None,\n                                                   max_value=None,\n                                                   row_condition=None,\n                                                   strictly=False\n                                                   ) %}\n\n{% set expression %}\n{{ column_name }}\n{% endset %}\n\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=None,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7942367, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_unique": {"name": "test_expect_column_values_to_be_unique", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_unique.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_unique.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro_sql": "{% test expect_column_values_to_be_unique(model, column_name, row_condition=None) %}\n{{ dbt_expectations.test_expect_compound_columns_to_be_unique(model, [column_name], row_condition=row_condition) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_compound_columns_to_be_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.794734, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_in_type_list": {"name": "test_expect_column_values_to_be_in_type_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_type_list.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_type_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_in_type_list", "macro_sql": "{%- test expect_column_values_to_be_in_type_list(model, column_name, column_type_list) -%}\n{%- if execute -%}\n\n    {%- set column_name = column_name | upper -%}\n    {%- set columns_in_relation = adapter.get_columns_in_relation(model) -%}\n    {%- set column_type_list = column_type_list| map(\"upper\") | list -%}\n    with relation_columns as (\n\n        {% for column in columns_in_relation %}\n        select\n            cast('{{ escape_single_quotes(column.name | upper) }}' as {{ dbt.type_string() }}) as relation_column,\n            cast('{{ column.dtype | upper }}' as {{ dbt.type_string() }}) as relation_column_type\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = '{{ column_name }}'\n            and\n            relation_column_type not in ('{{ column_type_list | join(\"', '\") }}')\n\n    )\n    select *\n    from test_data\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7967043, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs": {"name": "test_expect_column_values_to_be_within_n_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs", "macro_sql": "{% test expect_column_values_to_be_within_n_stdevs(model,\n                                  column_name,\n                                  group_by=None,\n                                  sigma_threshold=3\n                                ) -%}\n    {{\n        adapter.dispatch('test_expect_column_values_to_be_within_n_stdevs', 'dbt_expectations') (\n            model, column_name, group_by, sigma_threshold\n        )\n    }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.7983081, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs": {"name": "default__test_expect_column_values_to_be_within_n_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs", "macro_sql": "{% macro default__test_expect_column_values_to_be_within_n_stdevs(model,\n                                  column_name,\n                                  group_by,\n                                  sigma_threshold\n                                ) %}\n\nwith metric_values as (\n\n    select\n        {{ group_by | join(\",\") ~ \",\" if group_by }}\n        sum({{ column_name }}) as {{ column_name }}\n    from\n        {{ model }}\n    {% if group_by -%}\n    {{  dbt_expectations.group_by(group_by | length) }}\n    {%- endif %}\n\n),\nmetric_values_with_statistics as (\n\n    select\n        *,\n        avg({{ column_name }}) over() as {{ column_name }}_average,\n        stddev({{ column_name }}) over() as {{ column_name }}_stddev\n    from\n        metric_values\n\n),\nmetric_values_z_scores as (\n\n    select\n        *,\n        ({{ column_name }} - {{ column_name }}_average)/\n            nullif({{ column_name }}_stddev, 0) as {{ column_name }}_sigma\n    from\n        metric_values_with_statistics\n\n)\nselect\n    *\nfrom\n    metric_values_z_scores\nwhere\n    abs({{ column_name }}_sigma) > {{ sigma_threshold }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.799489, "supported_languages": null}, "macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart": {"name": "test_expect_row_values_to_have_data_for_every_n_datepart", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_row_values_to_have_data_for_every_n_datepart.sql", "original_file_path": "macros/schema_tests/distributional/expect_row_values_to_have_data_for_every_n_datepart.sql", "unique_id": "macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "macro_sql": "{%- test expect_row_values_to_have_data_for_every_n_datepart(model,\n                                                            date_col,\n                                                            date_part=\"day\",\n                                                            interval=None,\n                                                            row_condition=None,\n                                                            exclusion_condition=None,\n                                                            test_start_date=None,\n                                                            test_end_date=None) -%}\n{% if not execute %}\n    {{ return('') }}\n{% endif %}\n\n{% if not test_start_date or not test_end_date %}\n    {% set sql %}\n\n        select\n            min(cast({{ date_col }} as date)) as start_{{ date_part }},\n            max(cast({{ date_col }} as date)) as end_{{ date_part }}\n        from {{ model }}\n        {% if row_condition %}\n        where {{ row_condition }}\n        {% endif %}\n\n    {% endset %}\n\n    {%- set dr = run_query(sql) -%}\n\n    {%- set db_start_date = dr.columns[0].values()[0] -%}\n    {%- set db_end_date = dr.columns[1].values()[0] -%}\n\n    {% if db_start_date is not string %}\n        {%- set db_start_date = db_start_date.strftime('%Y-%m-%d') -%}\n        {%- set db_end_date = db_end_date.strftime('%Y-%m-%d') -%}\n    {% endif %}\n\n{% endif %}\n\n{% if not test_start_date %}\n{% set start_date = db_start_date %}\n{% else %}\n{% set start_date = test_start_date %}\n{% endif %}\n\n\n{% if not test_end_date %}\n{% set end_date = db_end_date %}\n{% else %}\n{% set end_date = test_end_date %}\n{% endif %}\n\nwith base_dates as (\n\n    {{ dbt_date.get_base_dates(start_date=start_date, end_date=end_date, datepart=date_part) }}\n    {% if interval %}\n    {#\n        Filter the date spine created above down to the interval granularity using a modulo operation.\n        The number of date_parts after the start_date divided by the integer interval will produce no remainder for the desired intervals,\n        e.g. for 2-day interval from a starting Jan 1, 2020:\n            params: start_date = '2020-01-01', date_part = 'day', interval = 2\n            date spine created above: [2020-01-01, 2020-01-02, 2020-01-03, 2020-01-04, 2020-01-05, ...]\n            The first parameter to the `mod` function would be the number of days between the start_date and the spine date, i.e. [0, 1, 2, 3, 4 ...]\n            The second parameter to the `mod` function would be the integer interval, i.e. 2\n            This modulo operation produces the following remainders: [0, 1, 0, 1, 0, ...]\n            Filtering the spine only where this remainder == 0 will return a spine with every other day as desired, i.e. [2020-01-01, 2020-01-03, 2020-01-05, ...]\n    #}\n    where mod(\n            cast({{ dbt.datediff(\"'\" ~ start_date ~ \"'\", 'date_' ~ date_part, date_part) }} as {{ dbt.type_int() }}),\n            cast({{interval}} as {{ dbt.type_int() }})\n        ) = 0\n    {% endif %}\n\n),\nmodel_data as (\n\n    select\n    {% if not interval %}\n\n        cast({{ dbt.date_trunc(date_part, date_col) }} as {{ dbt_expectations.type_datetime() }}) as date_{{ date_part }},\n\n    {% else %}\n        {#\n            Use a modulo operator to determine the number of intervals that a date_col is away from the interval-date spine\n            and subtracts that amount to effectively slice each date_col record into its corresponding spine bucket,\n            e.g. given a date_col of with records [2020-01-01, 2020-01-02, 2020-01-03, 2020-01-11, 2020-01-12]\n                if we want to slice these dates into their 2-day buckets starting Jan 1, 2020 (start_date = '2020-01-01', date_part='day', interval=2),\n                the modulo operation described above will produce these remainders: [0, 1, 0, 0, 1]\n                subtracting that number of days from the observations will produce records [2020-01-01, 2020-01-01, 2020-01-03, 2020-01-11, 2020-01-11],\n                all of which align with records from the interval-date spine\n        #}\n        {{ dbt.dateadd(\n            date_part,\n            \"mod(\n                cast(\" ~ dbt.datediff(\"'\" ~ start_date ~ \"'\", date_col, date_part) ~ \" as \" ~ dbt.type_int() ~ \" ),\n                cast(\" ~ interval ~ \" as  \" ~ dbt.type_int() ~ \" )\n            ) * (-1)\",\n            \"cast( \" ~ dbt.date_trunc(date_part, date_col) ~ \" as  \" ~ dbt_expectations.type_datetime() ~ \")\"\n        )}} as date_{{ date_part }},\n\n    {% endif %}\n\n        count(*) as row_cnt\n    from\n        {{ model }} f\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n    group by\n        date_{{date_part}}\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_{{ date_part }} as {{ dbt_expectations.type_datetime() }}) as date_{{ date_part }},\n        case when f.date_{{ date_part }} is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_{{ date_part }} as {{ dbt_expectations.type_datetime() }}) = f.date_{{ date_part }}\n)\nselect\n    *\nfrom final\nwhere row_cnt = 0\n{% if exclusion_condition %}\n  and {{ exclusion_condition }}\n{% endif %}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt_date.get_base_dates", "macro.dbt.datediff", "macro.dbt.type_int", "macro.dbt.date_trunc", "macro.dbt_expectations.type_datetime", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8070486, "supported_languages": null}, "macro.dbt_expectations._get_metric_expression": {"name": "_get_metric_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "unique_id": "macro.dbt_expectations._get_metric_expression", "macro_sql": "{%- macro _get_metric_expression(metric_column, take_logs) -%}\n\n{%- if take_logs %}\n{%- set expr = \"nullif(\" ~ metric_column ~ \", 0)\" -%}\ncoalesce({{ dbt_expectations.log_natural(expr) }}, 0)\n{%- else -%}\ncoalesce({{ metric_column }}, 0)\n{%- endif %}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_expectations.log_natural"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8128676, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs": {"name": "test_expect_column_values_to_be_within_n_moving_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs", "macro_sql": "{% test expect_column_values_to_be_within_n_moving_stdevs(model,\n                                  column_name,\n                                  date_column_name,\n                                  group_by=None,\n                                  period='day',\n                                  lookback_periods=1,\n                                  trend_periods=7,\n                                  test_periods=14,\n                                  sigma_threshold=3,\n                                  sigma_threshold_upper=None,\n                                  sigma_threshold_lower=None,\n                                  take_diffs=true,\n                                  take_logs=true\n                                ) -%}\n    {{ adapter.dispatch('test_expect_column_values_to_be_within_n_moving_stdevs', 'dbt_expectations') (model,\n                                  column_name,\n                                  date_column_name,\n                                  group_by,\n                                  period,\n                                  lookback_periods,\n                                  trend_periods,\n                                  test_periods,\n                                  sigma_threshold,\n                                  sigma_threshold_upper,\n                                  sigma_threshold_lower,\n                                  take_diffs,\n                                  take_logs\n                                ) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8139837, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs": {"name": "default__test_expect_column_values_to_be_within_n_moving_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs", "macro_sql": "{% macro default__test_expect_column_values_to_be_within_n_moving_stdevs(model,\n                                  column_name,\n                                  date_column_name,\n                                  group_by,\n                                  period,\n                                  lookback_periods,\n                                  trend_periods,\n                                  test_periods,\n                                  sigma_threshold,\n                                  sigma_threshold_upper,\n                                  sigma_threshold_lower,\n                                  take_diffs,\n                                  take_logs\n                                ) %}\n\n{%- set sigma_threshold_upper = sigma_threshold_upper if sigma_threshold_upper else sigma_threshold -%}\n{%- set sigma_threshold_lower = sigma_threshold_lower if sigma_threshold_lower else -1 * sigma_threshold -%}\n{%- set partition_by = \"partition by \" ~ (group_by | join(\",\")) if group_by -%}\n{%- set group_by_length = (group_by | length ) if group_by else 0 -%}\n\nwith metric_values as (\n\n    with grouped_metric_values as (\n\n        select\n            {{ dbt.date_trunc(period, date_column_name) }} as metric_period,\n            {{ group_by | join(\",\") ~ \",\" if group_by }}\n            sum({{ column_name }}) as agg_metric_value\n        from\n            {{ model }}\n        {{  dbt_expectations.group_by(1 + group_by_length) }}\n\n    )\n    {%- if take_diffs %}\n    , grouped_metric_values_with_priors as (\n\n        select\n            *,\n            lag(agg_metric_value, {{ lookback_periods }}) over(\n                {{ partition_by }}\n                order by metric_period) as prior_agg_metric_value\n    from\n        grouped_metric_values d\n\n    )\n    select\n        *,\n        {{ dbt_expectations._get_metric_expression(\"agg_metric_value\", take_logs) }}\n        -\n        {{ dbt_expectations._get_metric_expression(\"prior_agg_metric_value\", take_logs) }}\n        as metric_test_value\n    from\n        grouped_metric_values_with_priors d\n\n    {%- else %}\n\n    select\n        *,\n        {{ dbt_expectations._get_metric_expression(\"agg_metric_value\", take_logs) }}\n        as metric_test_value\n    from\n        grouped_metric_values\n\n    {%- endif %}\n\n),\nmetric_moving_calcs as (\n\n    select\n        *,\n        avg(metric_test_value)\n            over({{ partition_by }}\n                    order by metric_period rows\n                    between {{ trend_periods }} preceding and 1 preceding) as metric_test_rolling_average,\n        stddev(metric_test_value)\n            over({{ partition_by }}\n                    order by metric_period rows\n                    between {{ trend_periods }} preceding and 1 preceding) as metric_test_rolling_stddev\n    from\n        metric_values\n\n),\nmetric_sigma as (\n\n    select\n        *,\n        (metric_test_value - metric_test_rolling_average) as metric_test_delta,\n        (metric_test_value - metric_test_rolling_average)/\n            nullif(metric_test_rolling_stddev, 0) as metric_test_sigma\n    from\n        metric_moving_calcs\n\n)\nselect\n    *\nfrom\n    metric_sigma\nwhere\n\n    metric_period >= cast(\n            {{ dbt.dateadd(period, -test_periods, dbt.date_trunc(period, dbt_date.now())) }}\n            as {{ dbt_expectations.type_timestamp() }})\n    and\n    metric_period < {{ dbt.date_trunc(period, dbt_date.now()) }}\n    and\n\n    not (\n        metric_test_sigma >= {{ sigma_threshold_lower }} and\n        metric_test_sigma <= {{ sigma_threshold_upper }}\n    )\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt_expectations.group_by", "macro.dbt_expectations._get_metric_expression", "macro.dbt.dateadd", "macro.dbt_date.now", "macro.dbt_expectations.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8169603, "supported_languages": null}, "macro.dbt_expectations.regexp_instr": {"name": "regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.regexp_instr", "macro_sql": "{% macro regexp_instr(source_value, regexp, position=1, occurrence=1, is_raw=False, flags=\"\") %}\n\n    {{ adapter.dispatch('regexp_instr', 'dbt_expectations')(\n        source_value, regexp, position, occurrence, is_raw, flags\n    ) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.bigquery__regexp_instr"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.819444, "supported_languages": null}, "macro.dbt_expectations.default__regexp_instr": {"name": "default__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.default__regexp_instr", "macro_sql": "{% macro default__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{# unclear if other databases support raw strings or flags #}\n{% if is_raw or flags %}\n    {{ exceptions.warn(\n            \"is_raw and flags options are not supported for this adapter \"\n            ~ \"and are being ignored.\"\n    ) }}\n{% endif %}\nregexp_instr({{ source_value }}, '{{ regexp }}', {{ position }}, {{ occurrence }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.820159, "supported_languages": null}, "macro.dbt_expectations.snowflake__regexp_instr": {"name": "snowflake__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.snowflake__regexp_instr", "macro_sql": "{% macro snowflake__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{%- set regexp = \"$$\" ~ regexp ~ \"$$\" if is_raw else \"'\" ~ regexp ~ \"'\" -%}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'cimes') }}{% endif %}\nregexp_instr({{ source_value }}, {{ regexp }}, {{ position }}, {{ occurrence }}, 0, '{{ flags }}')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8210716, "supported_languages": null}, "macro.dbt_expectations.bigquery__regexp_instr": {"name": "bigquery__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.bigquery__regexp_instr", "macro_sql": "{% macro bigquery__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}\n    {{ dbt_expectations._validate_re2_flags(flags) }}\n    {# BigQuery prepends \"(?flags)\" to set flags for current group #}\n    {%- set regexp = \"(?\" ~ flags ~ \")\" ~ regexp -%}\n{% endif %}\n{%- set regexp = \"r'\" ~ regexp ~ \"'\" if is_raw else \"'\" ~ regexp ~ \"'\" -%}\nregexp_instr({{ source_value }}, {{ regexp }}, {{ position }}, {{ occurrence }})\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_re2_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8220956, "supported_languages": null}, "macro.dbt_expectations.postgres__regexp_instr": {"name": "postgres__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.postgres__regexp_instr", "macro_sql": "{% macro postgres__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'bcegimnpqstwx') }}{% endif %}\ncoalesce(array_length((select regexp_matches({{ source_value }}, '{{ regexp }}', '{{ flags }}')), 1), 0)\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8227062, "supported_languages": null}, "macro.dbt_expectations.redshift__regexp_instr": {"name": "redshift__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.redshift__regexp_instr", "macro_sql": "{% macro redshift__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'ciep') }}{% endif %}\nregexp_instr({{ source_value }}, '{{ regexp }}', {{ position }}, {{ occurrence }}, 0, '{{ flags }}')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8233845, "supported_languages": null}, "macro.dbt_expectations.duckdb__regexp_instr": {"name": "duckdb__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.duckdb__regexp_instr", "macro_sql": "{% macro duckdb__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'ciep') }}{% endif %}\nregexp_matches({{ source_value }}, '{{ regexp }}', '{{ flags }}')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.823984, "supported_languages": null}, "macro.dbt_expectations.spark__regexp_instr": {"name": "spark__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.spark__regexp_instr", "macro_sql": "{% macro spark__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if is_raw or flags %}\n    {{ exceptions.warn(\n            \"is_raw and flags options are not supported for this adapter \"\n            ~ \"and are being ignored.\"\n    ) }}\n{% endif %}\nlength(regexp_extract({{ source_value }}, '{{ regexp }}', 0))\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8246033, "supported_languages": null}, "macro.dbt_expectations._validate_flags": {"name": "_validate_flags", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations._validate_flags", "macro_sql": "{% macro _validate_flags(flags, alphabet) %}\n{% for flag in flags %}\n    {% if flag not in alphabet %}\n    {# Using raise_compiler_error causes disabled tests with invalid flags to fail compilation #}\n    {{ exceptions.warn(\n        \"flag \" ~ flag ~ \" not in list of allowed flags for this adapter: \" ~ alphabet | join(\", \")\n    ) }}\n    {% endif %}\n{% endfor %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8253489, "supported_languages": null}, "macro.dbt_expectations._validate_re2_flags": {"name": "_validate_re2_flags", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations._validate_re2_flags", "macro_sql": "{% macro _validate_re2_flags(flags) %}\n{# Re2 supports following flags: #}\n{# i  :  case-insensitive (default fault) #}\n{# m  :  multi-line mode: ^ and $ match begin/end line in addition to begin/end text (default false) #}\n{# s  :  let . match \\n (default false) #}\n{# U  :  ungreedy: swap meaning of x* and x*?, x+ and x+?, etc (default false) #}\n{# Flag syntax is xyz (set) or -xyz (clear) or xy-z (set xy, clear z).  #}\n\n{# Regex explanation: do not allow consecutive dashes, accept all re2 flags and clear operator, do not end with a dash  #}\n{% set re2_flags_pattern = '^(?!.*--)[-imsU]*(?<!-)$' %}\n{% set re = modules.re %}\n{% set is_match = re.match(re2_flags_pattern, flags) %}\n{% if not is_match %}\n    {# Using raise_compiler_error causes disabled tests with invalid flags to fail compilation #}\n    {{ exceptions.warn(\n        \"flags \" ~ flags ~ \" isn't a valid re2 flag pattern\"\n    ) }}\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8262732, "supported_languages": null}, "macro.dbt_expectations.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/groupby.sql", "original_file_path": "macros/utils/groupby.sql", "unique_id": "macro.dbt_expectations.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_expectations')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8268287, "supported_languages": null}, "macro.dbt_expectations.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/groupby.sql", "original_file_path": "macros/utils/groupby.sql", "unique_id": "macro.dbt_expectations.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}\n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.827343, "supported_languages": null}, "macro.dbt_expectations.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.type_timestamp", "macro_sql": "\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt_expectations')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_expectations.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8281074, "supported_languages": null}, "macro.dbt_expectations.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() -%}\n    timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8282785, "supported_languages": null}, "macro.dbt_expectations.snowflake__type_timestamp": {"name": "snowflake__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.snowflake__type_timestamp", "macro_sql": "{% macro snowflake__type_timestamp() -%}\n    timestamp_ntz\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8284497, "supported_languages": null}, "macro.dbt_expectations.postgres__type_timestamp": {"name": "postgres__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.postgres__type_timestamp", "macro_sql": "{% macro postgres__type_timestamp() -%}\n    timestamp without time zone\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8286111, "supported_languages": null}, "macro.dbt_expectations.type_datetime": {"name": "type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.type_datetime", "macro_sql": "{% macro type_datetime() -%}\n  {{ return(adapter.dispatch('type_datetime', 'dbt_expectations')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__type_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8289452, "supported_languages": null}, "macro.dbt_expectations.default__type_datetime": {"name": "default__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.default__type_datetime", "macro_sql": "{% macro default__type_datetime() -%}\n    datetime\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8291135, "supported_languages": null}, "macro.dbt_expectations.snowflake__type_datetime": {"name": "snowflake__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.snowflake__type_datetime", "macro_sql": "{% macro snowflake__type_datetime() -%}\n    timestamp_ntz\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8293004, "supported_languages": null}, "macro.dbt_expectations.postgres__type_datetime": {"name": "postgres__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.postgres__type_datetime", "macro_sql": "{% macro postgres__type_datetime() -%}\n    timestamp without time zone\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8294706, "supported_languages": null}, "macro.dbt_expectations.duckdb__type_datetime": {"name": "duckdb__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.duckdb__type_datetime", "macro_sql": "{% macro duckdb__type_datetime() -%}\n    timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8296287, "supported_languages": null}, "macro.dbt_expectations.spark__type_datetime": {"name": "spark__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.spark__type_datetime", "macro_sql": "{% macro spark__type_datetime() -%}\n    timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8297813, "supported_languages": null}, "macro.dbt_date.get_date_dimension": {"name": "get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.get_date_dimension", "macro_sql": "{% macro get_date_dimension(start_date, end_date) %}\n    {{ adapter.dispatch('get_date_dimension', 'dbt_date') (start_date, end_date) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_date_dimension"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.840264, "supported_languages": null}, "macro.dbt_date.default__get_date_dimension": {"name": "default__get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.default__get_date_dimension", "macro_sql": "{% macro default__get_date_dimension(start_date, end_date) %}\nwith base_dates as (\n    {{ dbt_date.get_base_dates(start_date, end_date) }}\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast({{ dbt.dateadd('year', -1 , 'd.date_day') }} as date) as prior_year_date_day,\n        cast({{ dbt.dateadd('day', -364 , 'd.date_day') }} as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    {{ dbt_date.yesterday('d.date_day') }} as prior_date_day,\n    {{ dbt_date.tomorrow('d.date_day') }} as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=false) }} as day_of_week,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=true) }} as day_of_week_iso,\n    {{ dbt_date.day_name('d.date_day', short=false) }} as day_of_week_name,\n    {{ dbt_date.day_name('d.date_day', short=true) }} as day_of_week_name_short,\n    {{ dbt_date.day_of_month('d.date_day') }} as day_of_month,\n    {{ dbt_date.day_of_year('d.date_day') }} as day_of_year,\n\n    {{ dbt_date.week_start('d.date_day') }} as week_start_date,\n    {{ dbt_date.week_end('d.date_day') }} as week_end_date,\n    {{ dbt_date.week_start('d.prior_year_over_year_date_day') }} as prior_year_week_start_date,\n    {{ dbt_date.week_end('d.prior_year_over_year_date_day') }} as prior_year_week_end_date,\n    {{ dbt_date.week_of_year('d.date_day') }} as week_of_year,\n\n    {{ dbt_date.iso_week_start('d.date_day') }} as iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.date_day') }} as iso_week_end_date,\n    {{ dbt_date.iso_week_start('d.prior_year_over_year_date_day') }} as prior_year_iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.prior_year_over_year_date_day') }} as prior_year_iso_week_end_date,\n    {{ dbt_date.iso_week_of_year('d.date_day') }} as iso_week_of_year,\n\n    {{ dbt_date.week_of_year('d.prior_year_over_year_date_day') }} as prior_year_week_of_year,\n    {{ dbt_date.iso_week_of_year('d.prior_year_over_year_date_day') }} as prior_year_iso_week_of_year,\n\n    cast({{ dbt_date.date_part('month', 'd.date_day') }} as {{ dbt.type_int() }}) as month_of_year,\n    {{ dbt_date.month_name('d.date_day', short=false) }}  as month_name,\n    {{ dbt_date.month_name('d.date_day', short=true) }}  as month_name_short,\n\n    cast({{ dbt.date_trunc('month', 'd.date_day') }} as date) as month_start_date,\n    cast({{ last_day('d.date_day', 'month') }} as date) as month_end_date,\n\n    cast({{ dbt.date_trunc('month', 'd.prior_year_date_day') }} as date) as prior_year_month_start_date,\n    cast({{ last_day('d.prior_year_date_day', 'month') }} as date) as prior_year_month_end_date,\n\n    cast({{ dbt_date.date_part('quarter', 'd.date_day') }} as {{ dbt.type_int() }}) as quarter_of_year,\n    cast({{ dbt.date_trunc('quarter', 'd.date_day') }} as date) as quarter_start_date,\n    cast({{ last_day('d.date_day', 'quarter') }} as date) as quarter_end_date,\n\n    cast({{ dbt_date.date_part('year', 'd.date_day') }} as {{ dbt.type_int() }}) as year_number,\n    cast({{ dbt.date_trunc('year', 'd.date_day') }} as date) as year_start_date,\n    cast({{ last_day('d.date_day', 'year') }} as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt.type_int", "macro.dbt_date.month_name", "macro.dbt.date_trunc", "macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8447936, "supported_languages": null}, "macro.dbt_date.postgres__get_date_dimension": {"name": "postgres__get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.postgres__get_date_dimension", "macro_sql": "{% macro postgres__get_date_dimension(start_date, end_date) %}\nwith base_dates as (\n    {{ dbt_date.get_base_dates(start_date, end_date) }}\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast({{ dbt.dateadd('year', -1 , 'd.date_day') }} as date) as prior_year_date_day,\n        cast({{ dbt.dateadd('day', -364 , 'd.date_day') }} as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    {{ dbt_date.yesterday('d.date_day') }} as prior_date_day,\n    {{ dbt_date.tomorrow('d.date_day') }} as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    {{ dbt_date.day_of_week('d.date_day', isoweek=true) }} as day_of_week,\n\n    {{ dbt_date.day_name('d.date_day', short=false) }} as day_of_week_name,\n    {{ dbt_date.day_name('d.date_day', short=true) }} as day_of_week_name_short,\n    {{ dbt_date.day_of_month('d.date_day') }} as day_of_month,\n    {{ dbt_date.day_of_year('d.date_day') }} as day_of_year,\n\n    {{ dbt_date.week_start('d.date_day') }} as week_start_date,\n    {{ dbt_date.week_end('d.date_day') }} as week_end_date,\n    {{ dbt_date.week_start('d.prior_year_over_year_date_day') }} as prior_year_week_start_date,\n    {{ dbt_date.week_end('d.prior_year_over_year_date_day') }} as prior_year_week_end_date,\n    {{ dbt_date.week_of_year('d.date_day') }} as week_of_year,\n\n    {{ dbt_date.iso_week_start('d.date_day') }} as iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.date_day') }} as iso_week_end_date,\n    {{ dbt_date.iso_week_start('d.prior_year_over_year_date_day') }} as prior_year_iso_week_start_date,\n    {{ dbt_date.iso_week_end('d.prior_year_over_year_date_day') }} as prior_year_iso_week_end_date,\n    {{ dbt_date.iso_week_of_year('d.date_day') }} as iso_week_of_year,\n\n    {{ dbt_date.week_of_year('d.prior_year_over_year_date_day') }} as prior_year_week_of_year,\n    {{ dbt_date.iso_week_of_year('d.prior_year_over_year_date_day') }} as prior_year_iso_week_of_year,\n\n    cast({{ dbt_date.date_part('month', 'd.date_day') }} as {{ dbt.type_int() }}) as month_of_year,\n    {{ dbt_date.month_name('d.date_day', short=false) }}  as month_name,\n    {{ dbt_date.month_name('d.date_day', short=true) }}  as month_name_short,\n\n    cast({{ dbt.date_trunc('month', 'd.date_day') }} as date) as month_start_date,\n    cast({{ last_day('d.date_day', 'month') }} as date) as month_end_date,\n\n    cast({{ dbt.date_trunc('month', 'd.prior_year_date_day') }} as date) as prior_year_month_start_date,\n    cast({{ last_day('d.prior_year_date_day', 'month') }} as date) as prior_year_month_end_date,\n\n    cast({{ dbt_date.date_part('quarter', 'd.date_day') }} as {{ dbt.type_int() }}) as quarter_of_year,\n    cast({{ dbt.date_trunc('quarter', 'd.date_day') }} as date) as quarter_start_date,\n    {# last_day does not support quarter because postgresql does not support quarter interval. #}\n    cast({{dbt.dateadd('day', '-1', dbt.dateadd('month', '3', dbt.date_trunc('quarter', 'd.date_day')))}} as date) as quarter_end_date,\n\n    cast({{ dbt_date.date_part('year', 'd.date_day') }} as {{ dbt.type_int() }}) as year_number,\n    cast({{ dbt.date_trunc('year', 'd.date_day') }} as date) as year_start_date,\n    cast({{ last_day('d.date_day', 'year') }} as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt.type_int", "macro.dbt_date.month_name", "macro.dbt.date_trunc", "macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8496404, "supported_languages": null}, "macro.dbt_date.get_base_dates": {"name": "get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.get_base_dates", "macro_sql": "{% macro get_base_dates(start_date=None, end_date=None, n_dateparts=None, datepart=\"day\") %}\n    {{ adapter.dispatch('get_base_dates', 'dbt_date') (start_date, end_date, n_dateparts, datepart) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__get_base_dates"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8513849, "supported_languages": null}, "macro.dbt_date.default__get_base_dates": {"name": "default__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.default__get_base_dates", "macro_sql": "{% macro default__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n{%- if start_date and end_date -%}\n{%- set start_date=\"cast('\" ~ start_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\" -%}\n{%- set end_date=\"cast('\" ~ end_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\"  -%}\n\n{%- elif n_dateparts and datepart -%}\n\n{%- set start_date = dbt.dateadd(datepart, -1 * n_dateparts, dbt_date.today()) -%}\n{%- set end_date = dbt_date.tomorrow() -%}\n{%- endif -%}\n\nwith date_spine as\n(\n\n    {{ dbt_date.date_spine(\n        datepart=datepart,\n        start_date=start_date,\n        end_date=end_date,\n       )\n    }}\n\n)\nselect\n    cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\nfrom\n    date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp", "macro.dbt.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8529346, "supported_languages": null}, "macro.dbt_date.bigquery__get_base_dates": {"name": "bigquery__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.bigquery__get_base_dates", "macro_sql": "{% macro bigquery__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n{%- if start_date and end_date -%}\n{%- set start_date=\"cast('\" ~ start_date ~ \"' as datetime )\" -%}\n{%- set end_date=\"cast('\" ~ end_date ~ \"' as datetime )\" -%}\n\n{%- elif n_dateparts and datepart -%}\n\n{%- set start_date = dbt.dateadd(datepart, -1 * n_dateparts, dbt_date.today()) -%}\n{%- set end_date = dbt_date.tomorrow() -%}\n{%- endif -%}\n\nwith date_spine as\n(\n\n    {{ dbt_date.date_spine(\n        datepart=datepart,\n        start_date=start_date,\n        end_date=end_date,\n       )\n    }}\n\n)\nselect\n    cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\nfrom\n    date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8543267, "supported_languages": null}, "macro.dbt_date.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_date')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8556638, "supported_languages": null}, "macro.dbt_date.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.856562, "supported_languages": null}, "macro.dbt_date.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_date')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8569663, "supported_languages": null}, "macro.dbt_date.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_date.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8580554, "supported_languages": null}, "macro.dbt_date.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_date')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8592246, "supported_languages": null}, "macro.dbt_date.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8604107, "supported_languages": null}, "macro.dbt_date.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_date')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8608792, "supported_languages": null}, "macro.dbt_date.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{\n        dbt_date.generate_series(\n            dbt_date.get_intervals_between(start_date, end_date, datepart)\n        )\n    }}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"(row_number() over (order by 1) - 1)\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.generate_series", "macro.dbt_date.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8616312, "supported_languages": null}, "macro.dbt_date.date": {"name": "date", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/modules_datetime.sql", "original_file_path": "macros/_utils/modules_datetime.sql", "unique_id": "macro.dbt_date.date", "macro_sql": "{% macro date(year, month, day) %}\n    {{ return(modules.datetime.date(year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.86225, "supported_languages": null}, "macro.dbt_date.datetime": {"name": "datetime", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/modules_datetime.sql", "original_file_path": "macros/_utils/modules_datetime.sql", "unique_id": "macro.dbt_date.datetime", "macro_sql": "{% macro datetime(year, month, day, hour=0, minute=0, second=0, microsecond=0, tz=None) %}\n    {% set tz = tz if tz else var(\"dbt_date:time_zone\") %}\n    {{ return(\n        modules.datetime.datetime(\n            year=year, month=month, day=day, hour=hour,\n            minute=minute, second=second, microsecond=microsecond,\n            tzinfo=modules.pytz.timezone(tz)\n        )\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.863342, "supported_languages": null}, "macro.dbt_date.get_fiscal_periods": {"name": "get_fiscal_periods", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_periods.sql", "original_file_path": "macros/fiscal_date/get_fiscal_periods.sql", "unique_id": "macro.dbt_date.get_fiscal_periods", "macro_sql": "{% macro get_fiscal_periods(dates, year_end_month, week_start_day, shift_year=1) %}\n{#\nThis macro requires you to pass in a ref to a date dimension, created via\ndbt_date.get_date_dimension()s\n#}\nwith fscl_year_dates_for_periods as (\n    {{ dbt_date.get_fiscal_year_dates(dates, year_end_month, week_start_day, shift_year) }}\n),\nfscl_year_w13 as (\n\n    select\n        f.*,\n        -- We count the weeks in a 13 week period\n        -- and separate the 4-5-4 week sequences\n        mod(cast(\n            (f.fiscal_week_of_year-1) as {{ dbt.type_int() }}\n            ), 13) as w13_number,\n        -- Chop weeks into 13 week merch quarters\n        cast(\n            least(\n                floor((f.fiscal_week_of_year-1)/13.0)\n                , 3)\n            as {{ dbt.type_int() }}) as quarter_number\n    from\n        fscl_year_dates_for_periods f\n\n),\nfscl_periods as (\n\n    select\n        f.date_day,\n        f.fiscal_year_number,\n        f.week_start_date,\n        f.week_end_date,\n        f.fiscal_week_of_year,\n        case\n            -- we move week 53 into the 3rd period of the quarter\n            when f.fiscal_week_of_year = 53 then 3\n            when f.w13_number between 0 and 3 then 1\n            when f.w13_number between 4 and 8 then 2\n            when f.w13_number between 9 and 12 then 3\n        end as period_of_quarter,\n        f.quarter_number\n    from\n        fscl_year_w13 f\n\n),\nfscl_periods_quarters as (\n\n    select\n        f.*,\n        cast((\n            (f.quarter_number * 3) + f.period_of_quarter\n         ) as {{ dbt.type_int() }}) as fiscal_period_number\n    from\n        fscl_periods f\n\n)\nselect\n    date_day,\n    fiscal_year_number,\n    week_start_date,\n    week_end_date,\n    fiscal_week_of_year,\n    dense_rank() over(partition by fiscal_period_number order by fiscal_week_of_year) as fiscal_week_of_period,\n    fiscal_period_number,\n    quarter_number+1 as fiscal_quarter_number,\n    period_of_quarter as fiscal_period_of_quarter\nfrom\n    fscl_periods_quarters\norder by 1,2\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_fiscal_year_dates", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.864763, "supported_languages": null}, "macro.dbt_date.get_fiscal_year_dates": {"name": "get_fiscal_year_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_year_dates.sql", "original_file_path": "macros/fiscal_date/get_fiscal_year_dates.sql", "unique_id": "macro.dbt_date.get_fiscal_year_dates", "macro_sql": "{% macro get_fiscal_year_dates(dates, year_end_month=12, week_start_day=1, shift_year=1) %}\n{{ adapter.dispatch('get_fiscal_year_dates', 'dbt_date') (dates, year_end_month, week_start_day, shift_year) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_fiscal_year_dates"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8671618, "supported_languages": null}, "macro.dbt_date.default__get_fiscal_year_dates": {"name": "default__get_fiscal_year_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_year_dates.sql", "original_file_path": "macros/fiscal_date/get_fiscal_year_dates.sql", "unique_id": "macro.dbt_date.default__get_fiscal_year_dates", "macro_sql": "{% macro default__get_fiscal_year_dates(dates, year_end_month, week_start_day, shift_year) %}\n-- this gets all the dates within a fiscal year\n-- determined by the given year-end-month\n-- ending on the saturday closest to that month's end date\nwith fsc_date_dimension as (\n    select * from {{ dates }}\n),\nyear_month_end as (\n\n    select\n       d.year_number - {{ shift_year }} as fiscal_year_number,\n       d.month_end_date\n    from\n        fsc_date_dimension d\n    where\n        d.month_of_year = {{ year_end_month }}\n    group by 1,2\n\n),\nweeks as (\n\n    select\n        d.year_number,\n        d.month_of_year,\n        d.date_day as week_start_date,\n        cast({{ dbt.dateadd('day', 6, 'd.date_day') }} as date) as week_end_date\n    from\n        fsc_date_dimension d\n    where\n        d.day_of_week = {{ week_start_day }}\n\n),\n-- get all the weeks that start in the month the year ends\nyear_week_ends as (\n\n    select\n        d.year_number - {{ shift_year }} as fiscal_year_number,\n        d.week_end_date\n    from\n        weeks d\n    where\n        d.month_of_year = {{ year_end_month }}\n    group by\n        1,2\n\n),\n-- then calculate which Saturday is closest to month end\nweeks_at_month_end as (\n\n    select\n        d.fiscal_year_number,\n        d.week_end_date,\n        m.month_end_date,\n        rank() over\n            (partition by d.fiscal_year_number\n                order by\n                abs({{ dbt.datediff('d.week_end_date', 'm.month_end_date', 'day') }})\n\n            ) as closest_to_month_end\n    from\n        year_week_ends d\n        join\n        year_month_end m on d.fiscal_year_number = m.fiscal_year_number\n),\nfiscal_year_range as (\n\n    select\n        w.fiscal_year_number,\n        cast(\n            {{ dbt.dateadd('day', 1,\n            'lag(w.week_end_date) over(order by w.week_end_date)') }}\n            as date) as fiscal_year_start_date,\n        w.week_end_date as fiscal_year_end_date\n    from\n        weeks_at_month_end w\n    where\n        w.closest_to_month_end = 1\n\n),\nfiscal_year_dates as (\n\n    select\n        d.date_day,\n        m.fiscal_year_number,\n        m.fiscal_year_start_date,\n        m.fiscal_year_end_date,\n        w.week_start_date,\n        w.week_end_date,\n        -- we reset the weeks of the year starting with the merch year start date\n        dense_rank()\n            over(\n                partition by m.fiscal_year_number\n                order by w.week_start_date\n                ) as fiscal_week_of_year\n    from\n        fsc_date_dimension d\n        join\n        fiscal_year_range m on d.date_day between m.fiscal_year_start_date and m.fiscal_year_end_date\n        join\n        weeks w on d.date_day between w.week_start_date and w.week_end_date\n\n)\nselect * from fiscal_year_dates order by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8683152, "supported_languages": null}, "macro.dbt_date.round_timestamp": {"name": "round_timestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/round_timestamp.sql", "original_file_path": "macros/calendar_date/round_timestamp.sql", "unique_id": "macro.dbt_date.round_timestamp", "macro_sql": "{% macro round_timestamp(timestamp) %}\n    {{ dbt.date_trunc(\"day\", dbt.dateadd(\"hour\", 12, timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8688173, "supported_languages": null}, "macro.dbt_date.next_month_name": {"name": "next_month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month_name.sql", "original_file_path": "macros/calendar_date/next_month_name.sql", "unique_id": "macro.dbt_date.next_month_name", "macro_sql": "{%- macro next_month_name(short=True, tz=None) -%}\n{{ dbt_date.month_name(dbt_date.next_month(tz), short=short) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.month_name", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.869333, "supported_languages": null}, "macro.dbt_date.to_unixtimestamp": {"name": "to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.to_unixtimestamp", "macro_sql": "{%- macro to_unixtimestamp(timestamp) -%}\n    {{ adapter.dispatch('to_unixtimestamp', 'dbt_date') (timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__to_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8699737, "supported_languages": null}, "macro.dbt_date.default__to_unixtimestamp": {"name": "default__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.default__to_unixtimestamp", "macro_sql": "\n\n{%- macro default__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part('epoch', timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8702714, "supported_languages": null}, "macro.dbt_date.snowflake__to_unixtimestamp": {"name": "snowflake__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.snowflake__to_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part('epoch_seconds', timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8705692, "supported_languages": null}, "macro.dbt_date.bigquery__to_unixtimestamp": {"name": "bigquery__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.bigquery__to_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__to_unixtimestamp(timestamp) -%}\n    unix_seconds({{ timestamp }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8707952, "supported_languages": null}, "macro.dbt_date.spark__to_unixtimestamp": {"name": "spark__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.spark__to_unixtimestamp", "macro_sql": "\n\n{%- macro spark__to_unixtimestamp(timestamp) -%}\n    unix_timestamp({{ timestamp }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8710165, "supported_languages": null}, "macro.dbt_date.iso_week_end": {"name": "iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.iso_week_end", "macro_sql": "{%- macro iso_week_end(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_end', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8718617, "supported_languages": null}, "macro.dbt_date._iso_week_end": {"name": "_iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date._iso_week_end", "macro_sql": "{%- macro _iso_week_end(date, week_type) -%}\n{%- set dt = dbt_date.iso_week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.iso_week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8722973, "supported_languages": null}, "macro.dbt_date.default__iso_week_end": {"name": "default__iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.default__iso_week_end", "macro_sql": "\n\n{%- macro default__iso_week_end(date) -%}\n{{ dbt_date._iso_week_end(date, 'isoweek') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8725944, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_end": {"name": "snowflake__iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_end", "macro_sql": "\n\n{%- macro snowflake__iso_week_end(date) -%}\n{{ dbt_date._iso_week_end(date, 'weekiso') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.872892, "supported_languages": null}, "macro.dbt_date.n_days_away": {"name": "n_days_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_days_away.sql", "original_file_path": "macros/calendar_date/n_days_away.sql", "unique_id": "macro.dbt_date.n_days_away", "macro_sql": "{%- macro n_days_away(n, date=None, tz=None) -%}\n{{ dbt_date.n_days_ago(-1 * n, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8734117, "supported_languages": null}, "macro.dbt_date.day_of_month": {"name": "day_of_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_month.sql", "original_file_path": "macros/calendar_date/day_of_month.sql", "unique_id": "macro.dbt_date.day_of_month", "macro_sql": "{%- macro day_of_month(date) -%}\n{{ dbt_date.date_part('day', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8738396, "supported_languages": null}, "macro.dbt_date.redshift__day_of_month": {"name": "redshift__day_of_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_month.sql", "original_file_path": "macros/calendar_date/day_of_month.sql", "unique_id": "macro.dbt_date.redshift__day_of_month", "macro_sql": "\n\n{%- macro redshift__day_of_month(date) -%}\ncast({{ dbt_date.date_part('day', date) }} as {{ dbt.type_bigint() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.87423, "supported_languages": null}, "macro.dbt_date.n_months_away": {"name": "n_months_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_months_away.sql", "original_file_path": "macros/calendar_date/n_months_away.sql", "unique_id": "macro.dbt_date.n_months_away", "macro_sql": "{%- macro n_months_away(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('month',\n    dbt.dateadd('month', n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8749208, "supported_languages": null}, "macro.dbt_date.yesterday": {"name": "yesterday", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/yesterday.sql", "original_file_path": "macros/calendar_date/yesterday.sql", "unique_id": "macro.dbt_date.yesterday", "macro_sql": "{%- macro yesterday(date=None, tz=None) -%}\n{{ dbt_date.n_days_ago(1, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.87536, "supported_languages": null}, "macro.dbt_date.n_weeks_ago": {"name": "n_weeks_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_weeks_ago.sql", "original_file_path": "macros/calendar_date/n_weeks_ago.sql", "unique_id": "macro.dbt_date.n_weeks_ago", "macro_sql": "{%- macro n_weeks_ago(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('week',\n    dbt.dateadd('week', -1 * n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8760755, "supported_languages": null}, "macro.dbt_date.day_name": {"name": "day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.day_name", "macro_sql": "{%- macro day_name(date, short=True) -%}\n    {{ adapter.dispatch('day_name', 'dbt_date') (date, short) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__day_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8773217, "supported_languages": null}, "macro.dbt_date.default__day_name": {"name": "default__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.default__day_name", "macro_sql": "\n\n{%- macro default__day_name(date, short) -%}\n{%- set f = 'Dy' if short else 'Day' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.877754, "supported_languages": null}, "macro.dbt_date.snowflake__day_name": {"name": "snowflake__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.snowflake__day_name", "macro_sql": "\n\n{%- macro snowflake__day_name(date, short) -%}\n    {%- if short -%}\n    dayname({{ date }})\n    {%- else -%}\n    -- long version not implemented on Snowflake so we're doing it manually :/\n    case dayname({{ date }})\n        when 'Mon' then 'Monday'\n        when 'Tue' then 'Tuesday'\n        when 'Wed' then 'Wednesday'\n        when 'Thu' then 'Thursday'\n        when 'Fri' then 'Friday'\n        when 'Sat' then 'Saturday'\n        when 'Sun' then 'Sunday'\n    end\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.878192, "supported_languages": null}, "macro.dbt_date.bigquery__day_name": {"name": "bigquery__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.bigquery__day_name", "macro_sql": "\n\n{%- macro bigquery__day_name(date, short) -%}\n{%- set f = '%a' if short else '%A' -%}\n    format_date('{{ f }}', cast({{ date }} as date))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.878612, "supported_languages": null}, "macro.dbt_date.postgres__day_name": {"name": "postgres__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.postgres__day_name", "macro_sql": "\n\n{%- macro postgres__day_name(date, short) -%}\n{# FM = Fill mode, which suppresses padding blanks #}\n{%- set f = 'FMDy' if short else 'FMDay' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8790689, "supported_languages": null}, "macro.dbt_date.duckdb__day_name": {"name": "duckdb__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.duckdb__day_name", "macro_sql": "\n\n{%- macro duckdb__day_name(date, short) -%}\n    {%- if short -%}\n    substr(dayname({{ date }}), 1, 3)\n    {%- else -%}\n    dayname({{ date }})\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8794692, "supported_languages": null}, "macro.dbt_date.spark__day_name": {"name": "spark__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.spark__day_name", "macro_sql": "\n\n{%- macro spark__day_name(date, short) -%}\n{%- set f = 'E' if short else 'EEEE' -%}\n    date_format({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8798852, "supported_languages": null}, "macro.dbt_date.week_start": {"name": "week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.week_start", "macro_sql": "{%- macro week_start(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_start', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.880858, "supported_languages": null}, "macro.dbt_date.default__week_start": {"name": "default__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.default__week_start", "macro_sql": "{%- macro default__week_start(date) -%}\ncast({{ dbt.date_trunc('week', date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8811944, "supported_languages": null}, "macro.dbt_date.snowflake__week_start": {"name": "snowflake__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.snowflake__week_start", "macro_sql": "\n\n{%- macro snowflake__week_start(date) -%}\n    {#\n        Get the day of week offset: e.g. if the date is a Sunday,\n        dbt_date.day_of_week returns 1, so we subtract 1 to get a 0 offset\n    #}\n    {% set off_set = dbt_date.day_of_week(date, isoweek=False) ~ \" - 1\" %}\n    cast({{ dbt.dateadd(\"day\", \"-1 * (\" ~ off_set ~ \")\", date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.day_of_week", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8818111, "supported_languages": null}, "macro.dbt_date.postgres__week_start": {"name": "postgres__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.postgres__week_start", "macro_sql": "\n\n{%- macro postgres__week_start(date) -%}\n-- Sunday as week start date\ncast({{ dbt.dateadd('day', -1, dbt.date_trunc('week', dbt.dateadd('day', 1, date))) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8823504, "supported_languages": null}, "macro.dbt_date.duckdb__week_start": {"name": "duckdb__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.duckdb__week_start", "macro_sql": "\n\n{%- macro duckdb__week_start(date) -%}\n{{ return(dbt_date.postgres__week_start(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8826559, "supported_languages": null}, "macro.dbt_date.from_unixtimestamp": {"name": "from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.from_unixtimestamp", "macro_sql": "{%- macro from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {{ adapter.dispatch('from_unixtimestamp', 'dbt_date') (epochs, format) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__from_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.88457, "supported_languages": null}, "macro.dbt_date.default__from_unixtimestamp": {"name": "default__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.default__from_unixtimestamp", "macro_sql": "\n\n{%- macro default__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    to_timestamp({{ epochs }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.885142, "supported_languages": null}, "macro.dbt_date.postgres__from_unixtimestamp": {"name": "postgres__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.postgres__from_unixtimestamp", "macro_sql": "\n\n{%- macro postgres__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    cast(to_timestamp({{ epochs }}) at time zone 'UTC' as timestamp)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8857036, "supported_languages": null}, "macro.dbt_date.snowflake__from_unixtimestamp": {"name": "snowflake__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.snowflake__from_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n    {%- set scale = 0 -%}\n    {%- elif format == \"milliseconds\" -%}\n    {%- set scale = 3 -%}\n    {%- elif format == \"microseconds\" -%}\n    {%- set scale = 6 -%}\n    {%- else -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n    to_timestamp_ntz({{ epochs }}, {{ scale }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8866637, "supported_languages": null}, "macro.dbt_date.bigquery__from_unixtimestamp": {"name": "bigquery__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.bigquery__from_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n        timestamp_seconds({{ epochs }})\n    {%- elif format == \"milliseconds\" -%}\n        timestamp_millis({{ epochs }})\n    {%- elif format == \"microseconds\" -%}\n        timestamp_micros({{ epochs }})\n    {%- else -%}\n    {{ exceptions.raise_compiler_error(\n        \"value \" ~ format ~ \" for `format` for from_unixtimestamp is not supported.\"\n        )\n    }}\n    {% endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8874688, "supported_languages": null}, "macro.dbt_date.today": {"name": "today", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/today.sql", "original_file_path": "macros/calendar_date/today.sql", "unique_id": "macro.dbt_date.today", "macro_sql": "{%- macro today(tz=None) -%}\ncast({{ dbt_date.now(tz) }} as date)\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8878405, "supported_languages": null}, "macro.dbt_date.next_week": {"name": "next_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_week.sql", "original_file_path": "macros/calendar_date/next_week.sql", "unique_id": "macro.dbt_date.next_week", "macro_sql": "{%- macro next_week(tz=None) -%}\n{{ dbt_date.n_weeks_away(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_weeks_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8882122, "supported_languages": null}, "macro.dbt_date.n_months_ago": {"name": "n_months_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_months_ago.sql", "original_file_path": "macros/calendar_date/n_months_ago.sql", "unique_id": "macro.dbt_date.n_months_ago", "macro_sql": "{%- macro n_months_ago(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('month',\n    dbt.dateadd('month', -1 * n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8889275, "supported_languages": null}, "macro.dbt_date.convert_timezone": {"name": "convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.convert_timezone", "macro_sql": "{%- macro convert_timezone(column, target_tz=None, source_tz=None) -%}\n{%- set source_tz = \"UTC\" if not source_tz else source_tz -%}\n{%- set target_tz = var(\"dbt_date:time_zone\") if not target_tz else target_tz -%}\n{{ adapter.dispatch('convert_timezone', 'dbt_date') (column, target_tz, source_tz) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.bigquery__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8906624, "supported_languages": null}, "macro.dbt_date.default__convert_timezone": {"name": "default__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.default__convert_timezone", "macro_sql": "{% macro default__convert_timezone(column, target_tz, source_tz) -%}\nconvert_timezone('{{ source_tz }}', '{{ target_tz }}',\n    cast({{ column }} as {{ dbt.type_timestamp() }})\n)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8911004, "supported_languages": null}, "macro.dbt_date.bigquery__convert_timezone": {"name": "bigquery__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.bigquery__convert_timezone", "macro_sql": "{%- macro bigquery__convert_timezone(column, target_tz, source_tz=None) -%}\ntimestamp(datetime({{ column }}, '{{ target_tz}}'))\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.891428, "supported_languages": null}, "macro.dbt_date.postgres__convert_timezone": {"name": "postgres__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.postgres__convert_timezone", "macro_sql": "{% macro postgres__convert_timezone(column, target_tz, source_tz) -%}\ncast(\n    cast({{ column }} as {{ dbt.type_timestamp() }})\n        at time zone '{{ source_tz }}' at time zone '{{ target_tz }}' as {{ dbt.type_timestamp() }}\n)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8919156, "supported_languages": null}, "macro.dbt_date.redshift__convert_timezone": {"name": "redshift__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.redshift__convert_timezone", "macro_sql": "{%- macro redshift__convert_timezone(column, target_tz, source_tz) -%}\n{{ return(dbt_date.default__convert_timezone(column, target_tz, source_tz)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.default__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8923016, "supported_languages": null}, "macro.dbt_date.duckdb__convert_timezone": {"name": "duckdb__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.duckdb__convert_timezone", "macro_sql": "{% macro duckdb__convert_timezone(column, target_tz, source_tz) -%}\n{{ return(dbt_date.postgres__convert_timezone(column, target_tz, source_tz)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.postgres__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8926897, "supported_languages": null}, "macro.dbt_date.spark__convert_timezone": {"name": "spark__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.spark__convert_timezone", "macro_sql": "{%- macro spark__convert_timezone(column, target_tz, source_tz) -%}\nfrom_utc_timestamp(\n        to_utc_timestamp({{ column }}, '{{ source_tz }}'),\n        '{{ target_tz }}'\n        )\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8930478, "supported_languages": null}, "macro.dbt_date.next_month_number": {"name": "next_month_number", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month_number.sql", "original_file_path": "macros/calendar_date/next_month_number.sql", "unique_id": "macro.dbt_date.next_month_number", "macro_sql": "{%- macro next_month_number(tz=None) -%}\n{{ dbt_date.date_part('month', dbt_date.next_month(tz)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.893509, "supported_languages": null}, "macro.dbt_date.periods_since": {"name": "periods_since", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/periods_since.sql", "original_file_path": "macros/calendar_date/periods_since.sql", "unique_id": "macro.dbt_date.periods_since", "macro_sql": "{%- macro periods_since(date_col, period_name='day', tz=None) -%}\n{{ dbt.datediff(date_col, dbt_date.now(tz), period_name) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.datediff", "macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8940465, "supported_languages": null}, "macro.dbt_date.day_of_year": {"name": "day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.day_of_year", "macro_sql": "{%- macro day_of_year(date) -%}\n{{ adapter.dispatch('day_of_year', 'dbt_date') (date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__day_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8946943, "supported_languages": null}, "macro.dbt_date.default__day_of_year": {"name": "default__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.default__day_of_year", "macro_sql": "\n\n{%- macro default__day_of_year(date) -%}\n    {{ dbt_date.date_part('dayofyear', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8949926, "supported_languages": null}, "macro.dbt_date.postgres__day_of_year": {"name": "postgres__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.postgres__day_of_year", "macro_sql": "\n\n{%- macro postgres__day_of_year(date) -%}\n    {{ dbt_date.date_part('doy', date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8952832, "supported_languages": null}, "macro.dbt_date.redshift__day_of_year": {"name": "redshift__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.redshift__day_of_year", "macro_sql": "\n\n{%- macro redshift__day_of_year(date) -%}\n    cast({{ dbt_date.date_part('dayofyear', date) }} as {{ dbt.type_bigint() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8956623, "supported_languages": null}, "macro.dbt_date.spark__day_of_year": {"name": "spark__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.spark__day_of_year", "macro_sql": "\n\n{%- macro spark__day_of_year(date) -%}\n    dayofyear({{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.895891, "supported_languages": null}, "macro.dbt_date.week_of_year": {"name": "week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.week_of_year", "macro_sql": "{%- macro week_of_year(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_of_year', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8967388, "supported_languages": null}, "macro.dbt_date.default__week_of_year": {"name": "default__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.default__week_of_year", "macro_sql": "{%- macro default__week_of_year(date) -%}\ncast({{ dbt_date.date_part('week', date) }} as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8971488, "supported_languages": null}, "macro.dbt_date.postgres__week_of_year": {"name": "postgres__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.postgres__week_of_year", "macro_sql": "\n\n{%- macro postgres__week_of_year(date) -%}\n{# postgresql 'week' returns isoweek. Use to_char instead.\n   WW = the first week starts on the first day of the year #}\ncast(to_char({{ date }}, 'WW') as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8974812, "supported_languages": null}, "macro.dbt_date.duckdb__week_of_year": {"name": "duckdb__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.duckdb__week_of_year", "macro_sql": "\n\n{%- macro duckdb__week_of_year(date) -%}\ncast(ceil(dayofyear({{ date }}) / 7) as int)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.897702, "supported_languages": null}, "macro.dbt_date.last_week": {"name": "last_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_week.sql", "original_file_path": "macros/calendar_date/last_week.sql", "unique_id": "macro.dbt_date.last_week", "macro_sql": "{%- macro last_week(tz=None) -%}\n{{ dbt_date.n_weeks_ago(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_weeks_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8980794, "supported_languages": null}, "macro.dbt_date.date_part": {"name": "date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.date_part", "macro_sql": "{% macro date_part(datepart, date) -%}\n    {{ adapter.dispatch('date_part', 'dbt_date') (datepart, date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8986585, "supported_languages": null}, "macro.dbt_date.default__date_part": {"name": "default__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.default__date_part", "macro_sql": "{% macro default__date_part(datepart, date) -%}\n    date_part('{{ datepart }}', {{  date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.898955, "supported_languages": null}, "macro.dbt_date.bigquery__date_part": {"name": "bigquery__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.bigquery__date_part", "macro_sql": "{% macro bigquery__date_part(datepart, date) -%}\n    extract({{ datepart }} from {{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.8992734, "supported_languages": null}, "macro.dbt_date.month_name": {"name": "month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.month_name", "macro_sql": "{%- macro month_name(date, short=True) -%}\n    {{ adapter.dispatch('month_name', 'dbt_date') (date, short) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__month_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9003308, "supported_languages": null}, "macro.dbt_date.default__month_name": {"name": "default__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.default__month_name", "macro_sql": "\n\n{%- macro default__month_name(date, short) -%}\n{%- set f = 'MON' if short else 'MONTH' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9007611, "supported_languages": null}, "macro.dbt_date.bigquery__month_name": {"name": "bigquery__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.bigquery__month_name", "macro_sql": "\n\n{%- macro bigquery__month_name(date, short) -%}\n{%- set f = '%b' if short else '%B' -%}\n    format_date('{{ f }}', cast({{ date }} as date))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.901222, "supported_languages": null}, "macro.dbt_date.snowflake__month_name": {"name": "snowflake__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.snowflake__month_name", "macro_sql": "\n\n{%- macro snowflake__month_name(date, short) -%}\n{%- set f = 'MON' if short else 'MMMM' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9016466, "supported_languages": null}, "macro.dbt_date.postgres__month_name": {"name": "postgres__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.postgres__month_name", "macro_sql": "\n\n{%- macro postgres__month_name(date, short) -%}\n{# FM = Fill mode, which suppresses padding blanks #}\n{%- set f = 'FMMon' if short else 'FMMonth' -%}\n    to_char({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9020808, "supported_languages": null}, "macro.dbt_date.duckdb__month_name": {"name": "duckdb__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.duckdb__month_name", "macro_sql": "\n\n\n{%- macro duckdb__month_name(date, short) -%}\n    {%- if short -%}\n    substr(monthname({{ date }}), 1, 3)\n    {%- else -%}\n    monthname({{ date }})\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9024765, "supported_languages": null}, "macro.dbt_date.spark__month_name": {"name": "spark__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.spark__month_name", "macro_sql": "\n\n{%- macro spark__month_name(date, short) -%}\n{%- set f = 'LLL' if short else 'LLLL' -%}\n    date_format({{ date }}, '{{ f }}')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9028895, "supported_languages": null}, "macro.dbt_date.week_end": {"name": "week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.week_end", "macro_sql": "{%- macro week_end(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('week_end', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9038277, "supported_languages": null}, "macro.dbt_date.default__week_end": {"name": "default__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.default__week_end", "macro_sql": "{%- macro default__week_end(date) -%}\n{{ last_day(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.904119, "supported_languages": null}, "macro.dbt_date.snowflake__week_end": {"name": "snowflake__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.snowflake__week_end", "macro_sql": "\n\n{%- macro snowflake__week_end(date) -%}\n{%- set dt = dbt_date.week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9045339, "supported_languages": null}, "macro.dbt_date.postgres__week_end": {"name": "postgres__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.postgres__week_end", "macro_sql": "\n\n{%- macro postgres__week_end(date) -%}\n{%- set dt = dbt_date.week_start(date) -%}\n{{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9049723, "supported_languages": null}, "macro.dbt_date.duckdb__week_end": {"name": "duckdb__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.duckdb__week_end", "macro_sql": "\n\n{%- macro duckdb__week_end(date) -%}\n{{ return(dbt_date.postgres__week_end(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.905298, "supported_languages": null}, "macro.dbt_date.n_days_ago": {"name": "n_days_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_days_ago.sql", "original_file_path": "macros/calendar_date/n_days_ago.sql", "unique_id": "macro.dbt_date.n_days_ago", "macro_sql": "{%- macro n_days_ago(n, date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{%- set n = n|int -%}\ncast({{ dbt.dateadd('day', -1 * n, dt) }} as date)\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9061112, "supported_languages": null}, "macro.dbt_date.tomorrow": {"name": "tomorrow", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/tomorrow.sql", "original_file_path": "macros/calendar_date/tomorrow.sql", "unique_id": "macro.dbt_date.tomorrow", "macro_sql": "{%- macro tomorrow(date=None, tz=None) -%}\n{{ dbt_date.n_days_away(1, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.906563, "supported_languages": null}, "macro.dbt_date.last_month_name": {"name": "last_month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month_name.sql", "original_file_path": "macros/calendar_date/last_month_name.sql", "unique_id": "macro.dbt_date.last_month_name", "macro_sql": "{%- macro last_month_name(short=True, tz=None) -%}\n{{ dbt_date.month_name(dbt_date.last_month(tz), short=short) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.month_name", "macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9070497, "supported_languages": null}, "macro.dbt_date.last_month_number": {"name": "last_month_number", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month_number.sql", "original_file_path": "macros/calendar_date/last_month_number.sql", "unique_id": "macro.dbt_date.last_month_number", "macro_sql": "{%- macro last_month_number(tz=None) -%}\n{{ dbt_date.date_part('month', dbt_date.last_month(tz)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9074821, "supported_languages": null}, "macro.dbt_date.now": {"name": "now", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/now.sql", "original_file_path": "macros/calendar_date/now.sql", "unique_id": "macro.dbt_date.now", "macro_sql": "{%- macro now(tz=None) -%}\n{{ dbt_date.convert_timezone(dbt.current_timestamp(), tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.convert_timezone", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9078841, "supported_languages": null}, "macro.dbt_date.day_of_week": {"name": "day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.day_of_week", "macro_sql": "{%- macro day_of_week(date, isoweek=true) -%}\n{{ adapter.dispatch('day_of_week', 'dbt_date') (date, isoweek) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.bigquery__day_of_week"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9110003, "supported_languages": null}, "macro.dbt_date.default__day_of_week": {"name": "default__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.default__day_of_week", "macro_sql": "\n\n{%- macro default__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (0) to Monday (1)\n        when {{ dow }} = 0 then 7\n        else {{ dow }}\n    end\n    {%- else -%}\n    {{ dow }} + 1\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9116297, "supported_languages": null}, "macro.dbt_date.snowflake__day_of_week": {"name": "snowflake__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.snowflake__day_of_week", "macro_sql": "\n\n{%- macro snowflake__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = 'dayofweekiso' -%}\n        {{ dbt_date.date_part(dow_part, date) }}\n    {%- else -%}\n        {%- set dow_part = 'dayofweek' -%}\n        case\n            when {{ dbt_date.date_part(dow_part, date) }} = 7 then 1\n            else {{ dbt_date.date_part(dow_part, date) }} + 1\n        end\n    {%- endif -%}\n\n\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9124641, "supported_languages": null}, "macro.dbt_date.bigquery__day_of_week": {"name": "bigquery__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.bigquery__day_of_week", "macro_sql": "\n\n{%- macro bigquery__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (1) to Monday (2)\n        when {{ dow }} = 1 then 7\n        else {{ dow }} - 1\n    end\n    {%- else -%}\n    {{ dow }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9130595, "supported_languages": null}, "macro.dbt_date.postgres__day_of_week": {"name": "postgres__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.postgres__day_of_week", "macro_sql": "\n\n\n{%- macro postgres__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = 'isodow' -%}\n        -- Monday(1) to Sunday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} as {{ dbt.type_int() }})\n    {%- else -%}\n        {%- set dow_part = 'dow' -%}\n        -- Sunday(1) to Saturday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} + 1 as {{ dbt.type_int() }})\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9139538, "supported_languages": null}, "macro.dbt_date.redshift__day_of_week": {"name": "redshift__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.redshift__day_of_week", "macro_sql": "\n\n\n{%- macro redshift__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part('dayofweek', date) -%}\n\n    {%- if isoweek -%}\n    case\n        -- Shift start of week from Sunday (0) to Monday (1)\n        when {{ dow }} = 0 then 7\n        else cast({{ dow }} as {{ dbt.type_bigint() }})\n    end\n    {%- else -%}\n    cast({{ dow }} + 1 as {{ dbt.type_bigint() }})\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9147193, "supported_languages": null}, "macro.dbt_date.duckdb__day_of_week": {"name": "duckdb__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.duckdb__day_of_week", "macro_sql": "\n\n{%- macro duckdb__day_of_week(date, isoweek) -%}\n{{ return(dbt_date.postgres__day_of_week(date, isoweek)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__day_of_week"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9150844, "supported_languages": null}, "macro.dbt_date.spark__day_of_week": {"name": "spark__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.spark__day_of_week", "macro_sql": "\n\n\n{%- macro spark__day_of_week(date, isoweek) -%}\n\n    {%- set dow = \"dayofweek_iso\" if isoweek else \"dayofweek\" -%}\n\n    {{ dbt_date.date_part(dow, date) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9155262, "supported_languages": null}, "macro.dbt_date.n_weeks_away": {"name": "n_weeks_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_weeks_away.sql", "original_file_path": "macros/calendar_date/n_weeks_away.sql", "unique_id": "macro.dbt_date.n_weeks_away", "macro_sql": "{%- macro n_weeks_away(n, tz=None) -%}\n{%- set n = n|int -%}\n{{ dbt.date_trunc('week',\n    dbt.dateadd('week', n,\n        dbt_date.today(tz)\n        )\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.916221, "supported_languages": null}, "macro.dbt_date.next_month": {"name": "next_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month.sql", "original_file_path": "macros/calendar_date/next_month.sql", "unique_id": "macro.dbt_date.next_month", "macro_sql": "{%- macro next_month(tz=None) -%}\n{{ dbt_date.n_months_away(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_months_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9166098, "supported_languages": null}, "macro.dbt_date.last_month": {"name": "last_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month.sql", "original_file_path": "macros/calendar_date/last_month.sql", "unique_id": "macro.dbt_date.last_month", "macro_sql": "{%- macro last_month(tz=None) -%}\n{{ dbt_date.n_months_ago(1, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_months_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9169753, "supported_languages": null}, "macro.dbt_date.iso_week_of_year": {"name": "iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.iso_week_of_year", "macro_sql": "{%- macro iso_week_of_year(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_of_year', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9181368, "supported_languages": null}, "macro.dbt_date._iso_week_of_year": {"name": "_iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date._iso_week_of_year", "macro_sql": "{%- macro _iso_week_of_year(date, week_type) -%}\ncast({{ dbt_date.date_part(week_type, date) }} as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9185443, "supported_languages": null}, "macro.dbt_date.default__iso_week_of_year": {"name": "default__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.default__iso_week_of_year", "macro_sql": "\n\n{%- macro default__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'isoweek') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.918845, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_of_year": {"name": "snowflake__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_of_year", "macro_sql": "\n\n{%- macro snowflake__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'weekiso') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9191513, "supported_languages": null}, "macro.dbt_date.postgres__iso_week_of_year": {"name": "postgres__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.postgres__iso_week_of_year", "macro_sql": "\n\n{%- macro postgres__iso_week_of_year(date) -%}\n-- postgresql week is isoweek, the first week of a year containing January 4 of that year.\n{{ dbt_date._iso_week_of_year(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9194605, "supported_languages": null}, "macro.dbt_date.duckdb__iso_week_of_year": {"name": "duckdb__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.duckdb__iso_week_of_year", "macro_sql": "\n\n{%- macro duckdb__iso_week_of_year(date) -%}\n{{ return(dbt_date.postgres__iso_week_of_year(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.919764, "supported_languages": null}, "macro.dbt_date.spark__iso_week_of_year": {"name": "spark__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.spark__iso_week_of_year", "macro_sql": "\n\n{%- macro spark__iso_week_of_year(date) -%}\n{{ dbt_date._iso_week_of_year(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9200766, "supported_languages": null}, "macro.dbt_date.iso_week_start": {"name": "iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.iso_week_start", "macro_sql": "{%- macro iso_week_start(date=None, tz=None) -%}\n{%-set dt = date if date else dbt_date.today(tz) -%}\n{{ adapter.dispatch('iso_week_start', 'dbt_date') (dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9211445, "supported_languages": null}, "macro.dbt_date._iso_week_start": {"name": "_iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date._iso_week_start", "macro_sql": "{%- macro _iso_week_start(date, week_type) -%}\ncast({{ dbt.date_trunc(week_type, date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9214962, "supported_languages": null}, "macro.dbt_date.default__iso_week_start": {"name": "default__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.default__iso_week_start", "macro_sql": "\n\n{%- macro default__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'isoweek') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9217913, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_start": {"name": "snowflake__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_start", "macro_sql": "\n\n{%- macro snowflake__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9220817, "supported_languages": null}, "macro.dbt_date.postgres__iso_week_start": {"name": "postgres__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.postgres__iso_week_start", "macro_sql": "\n\n{%- macro postgres__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9223733, "supported_languages": null}, "macro.dbt_date.duckdb__iso_week_start": {"name": "duckdb__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.duckdb__iso_week_start", "macro_sql": "\n\n{%- macro duckdb__iso_week_start(date) -%}\n{{ return(dbt_date.postgres__iso_week_start(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9226801, "supported_languages": null}, "macro.dbt_date.spark__iso_week_start": {"name": "spark__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.spark__iso_week_start", "macro_sql": "\n\n{%- macro spark__iso_week_start(date) -%}\n{{ dbt_date._iso_week_start(date, 'week') }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.922969, "supported_languages": null}, "macro.codegen.generate_column_yaml": {"name": "generate_column_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_model_yaml.sql", "original_file_path": "macros/generate_model_yaml.sql", "unique_id": "macro.codegen.generate_column_yaml", "macro_sql": "{% macro generate_column_yaml(column, model_yaml, column_desc_dict, include_data_types, parent_column_name=\"\") %}\n    {% if parent_column_name %}\n        {% set column_name = parent_column_name ~ \".\" ~ column.name %}\n    {% else %}\n        {% set column_name = column.name %}\n    {% endif %}\n\n    {% do model_yaml.append('      - name: ' ~ column_name  | lower ) %}\n    {% if include_data_types %}\n        {% do model_yaml.append('        data_type: ' ~ codegen.data_type_format_model(column)) %}\n    {% endif %}\n    {% do model_yaml.append('        description: \"' ~ column_desc_dict.get(column.name | lower,'') ~ '\"') %}\n    {% do model_yaml.append('') %}\n\n    {% if column.fields|length > 0 %}\n        {% for child_column in column.fields %}\n            {% set model_yaml = codegen.generate_column_yaml(child_column, model_yaml, column_desc_dict, include_data_types, parent_column_name=column_name) %}\n        {% endfor %}\n    {% endif %}\n    {% do return(model_yaml) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.data_type_format_model", "macro.codegen.generate_column_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9271822, "supported_languages": null}, "macro.codegen.generate_model_yaml": {"name": "generate_model_yaml", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_model_yaml.sql", "original_file_path": "macros/generate_model_yaml.sql", "unique_id": "macro.codegen.generate_model_yaml", "macro_sql": "{% macro generate_model_yaml(model_names=[], upstream_descriptions=False, include_data_types=True) %}\n\n    {% set model_yaml=[] %}\n\n    {% do model_yaml.append('version: 2') %}\n    {% do model_yaml.append('') %}\n    {% do model_yaml.append('models:') %}\n\n    {% if model_names is string %}\n        {{ exceptions.raise_compiler_error(\"The `model_names` argument must always be a list, even if there is only one model.\") }}\n    {% else %}\n        {% for model in model_names %}\n            {% do model_yaml.append('  - name: ' ~ model | lower) %}\n            {% do model_yaml.append('    description: \"\"') %}\n            {% do model_yaml.append('    columns:') %}\n\n            {% set relation=ref(model) %}\n            {%- set columns = adapter.get_columns_in_relation(relation) -%}\n            {% set column_desc_dict =  codegen.build_dict_column_descriptions(model) if upstream_descriptions else {} %}\n\n            {% for column in columns %}\n                {% set model_yaml = codegen.generate_column_yaml(column, model_yaml, column_desc_dict, include_data_types) %}\n            {% endfor %}\n        {% endfor %}\n    {% endif %}\n\n{% if execute %}\n\n    {% set joined = model_yaml | join ('\\n') %}\n    {{ log(joined, info=True) }}\n    {% do return(joined) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.build_dict_column_descriptions", "macro.codegen.generate_column_yaml"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.929986, "supported_languages": null}, "macro.codegen.generate_model_import_ctes": {"name": "generate_model_import_ctes", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_model_import_ctes.sql", "original_file_path": "macros/generate_model_import_ctes.sql", "unique_id": "macro.codegen.generate_model_import_ctes", "macro_sql": "{% macro generate_model_import_ctes(model_name, leading_commas = false) %}\n\n    {%- if execute -%}\n    {%- set nodes = graph.nodes.values() -%}\n\n    {%- set model = (nodes\n        | selectattr('name', 'equalto', model_name) \n        | selectattr('resource_type', 'equalto', 'model')\n        | list).pop() -%}\n\n    {%- set model_raw_sql = model.raw_sql or model.raw_code -%}\n    {%- else -%}\n    {%- set model_raw_sql = '' -%}\n    {%- endif -%}\n\n    {#-\n\n        REGEX Explanations\n\n        # with_regex\n        - matches (start of file followed by anything then whitespace\n        or whitespace\n        or a comma) followed by the word with then a space   \n\n        # from_ref \n        - matches (from or join) followed by some spaces and then {{ref(<something>)}}\n\n        # from_source \n        - matches (from or join) followed by some spaces and then {{source(<something>,<something_else>)}}\n\n        # from_var_1\n        - matches (from or join) followed by some spaces and then {{var(<something>)}}\n\n        # from_var_2\n        - matches (from or join) followed by some spaces and then {{var(<something>,<something_else>)}}\n\n        # from_table_1\n        - matches (from or join) followed by some spaces and then <something>.<something_else>\n          where each <something> is enclosed by (` or [ or \" or ' or nothing)\n\n        # from_table_2\n        - matches (from or join) followed by some spaces and then <something>.<something_else>.<something_different>\n          where each <something> is enclosed by (` or [ or \" or ' or nothing)\n\n        # from_table_3\n        - matches (from or join) followed by some spaces and then <something>\n          where <something> is enclosed by (` or [ or \" or ')\n\n        # config block\n        - matches the start of the file followed by anything and then {{config(<something>)}}\n\n    -#}\n\n    {%- set re = modules.re -%}\n\n    {%- set with_regex = '(?i)(?s)(^.*\\s*|\\s+|,)with\\s' -%}\n    {%- set does_raw_sql_contain_cte = re.search(with_regex, model_raw_sql) -%}\n\n    {%- set from_regexes = {\n        'from_ref':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), ref, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*ref\\s*\\(\\s*[\\'\\\"]?)\n            \n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n            \n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n        \n            ',\n        'from_source':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), source, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*source\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a comma\n            (,)\n\n            # sixth matching group\n            # 0 or more whitespace character(s), 1 or 0 quotation mark\n            (\\s*[\\'\\\"]?)\n\n            # seventh matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # eighth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # ninth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n\n            ',\n        'from_var_1':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n\n            # second matching group\n            # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark\n            ([^)\\'\\\"]+)\n\n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}\n            (\\)\\s*}})\n            \n            ',\n        'from_var_2':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character\n            (from|join)\\s+\n            \n            # second matching group\n            # opening {{, 0 or more whitespace character(s), var, 0 or more whitespace character(s), an opening parenthesis, 0 or more whitespace character(s), 1 or 0 quotation mark\n            ({{\\s*var\\s*\\(\\s*[\\'\\\"]?)\n\n            # third matching group\n            # at least 1 of anything except a parenthesis or quotation mark            \n            ([^)\\'\\\"]+)\n            \n            # fourth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)\n            ([\\'\\\"]?\\s*)\n\n            # fifth matching group\n            # a comma\n            (,)\n\n            # sixth matching group\n            # 0 or more whitespace character(s), 1 or 0 quotation mark            \n            (\\s*[\\'\\\"]?)\n\n            # seventh matching group\n            # at least 1 of anything except a parenthesis or quotation mark            \n            ([^)\\'\\\"]+)\n\n            # eighth matching group\n            # 1 or 0 quotation mark, 0 or more whitespace character(s)            \n            ([\\'\\\"]?\\s*)\n\n            # ninth matching group\n            # a closing parenthesis, 0 or more whitespace character(s), closing }}            \n            (\\)\\s*}})\n            \n            ',\n        'from_table_1':\n            '(?ix)\n            \n            # first matching group\n            # from or join followed by at least 1 whitespace character            \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n            \n            # third matching group\n            # at least 1 word character\n            (\\w+)\n            \n            # fouth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)\n            ([\\]`\\\"\\']?)\n            \n            # fifth matching group\n            # a period\n            (\\.)\n            \n            # sixth matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n            \n            # seventh matching group\n            # at least 1 word character\n            (\\w+)\n            \n            # eighth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\']?)(?=\\s|$)\n            \n            ',\n        'from_table_2':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)            \n            ([\\[`\\\"\\']?)\n            \n            # third matching group\n            # at least 1 word character\n            (\\w+)\n\n            # fouth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)            \n            ([\\]`\\\"\\']?)\n            \n            # fifth matching group\n            # a period            \n            (\\.)\n            \n            # sixth matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)\n            ([\\[`\\\"\\']?)\n\n            # seventh matching group\n            # at least 1 word character            \n            (\\w+)\n            \n            # eighth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) \n            ([\\]`\\\"\\']?)\n            \n            # ninth matching group\n            # a period             \n            (\\.)\n            \n            # tenth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark)             \n            ([\\[`\\\"\\']?)\n            \n            # eleventh matching group\n            # at least 1 word character   \n            (\\w+)\n\n            # twelfth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\']?)(?=\\s|$)\n            \n            ',\n        'from_table_3':\n            '(?ix)\n\n            # first matching group\n            # from or join followed by at least 1 whitespace character             \n            (from|join)\\s+\n            \n            # second matching group\n            # 1 or 0 of (opening bracket, backtick, or quotation mark)            \n            ([\\[`\\\"\\'])\n            \n            # third matching group\n            # at least 1 word character or space \n            ([\\w ]+)\n\n            # fourth matching group\n            # 1 or 0 of (closing bracket, backtick, or quotation mark) folowed by a whitespace character or end of string\n            ([\\]`\\\"\\'])(?=\\s|$)\n            \n            ',\n        'config_block':'(?i)(?s)^.*{{\\s*config\\s*\\([^)]+\\)\\s*}}'\n    } -%}\n\n    {%- set from_list = [] -%}\n    {%- set config_list = [] -%}\n    {%- set ns = namespace(model_sql = model_raw_sql) -%}\n\n    {%- for regex_name, regex_pattern in from_regexes.items() -%}\n\n        {%- set all_regex_matches = re.findall(regex_pattern, model_raw_sql) -%}\n\n        {%- for match in all_regex_matches -%}\n\n            {%- if regex_name == 'config_block' -%}\n                {%- set match_tuple = (match|trim, regex_name) -%}\n                {%- do config_list.append(match_tuple) -%}\n            {%- elif regex_name == 'from_source' -%}    \n                {%- set full_from_clause = match[1:]|join|trim -%}\n                {%- set cte_name = 'source_' + match[6]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%} \n            {%- elif regex_name == 'from_table_1' -%}\n                {%- set full_from_clause = match[1:]|join()|trim -%}\n                {%- set cte_name = match[2]|lower + '_' + match[6]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}   \n            {%- elif regex_name == 'from_table_2' -%}\n                {%- set full_from_clause = match[1:]|join()|trim -%}\n                {%- set cte_name = match[2]|lower + '_' + match[6]|lower + '_' + match[10]|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}                     \n            {%- else -%}\n                {%- set full_from_clause = match[1:]|join|trim -%}\n                {%- set cte_name = match[2]|trim|lower -%}\n                {%- set match_tuple = (cte_name, full_from_clause, regex_name) -%}\n                {%- do from_list.append(match_tuple) -%}\n            {%- endif -%}\n\n        {%- endfor -%}\n\n        {%- if regex_name == 'config_block' -%}\n        {%- elif regex_name == 'from_source' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> source_\\g<7>', ns.model_sql) -%}            \n        {%- elif regex_name == 'from_table_1' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>_\\g<7>', ns.model_sql) -%}     \n        {%- elif regex_name == 'from_table_2' -%}\n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>_\\g<7>_\\g<11>', ns.model_sql) -%} \n        {%- else -%}   \n            {%- set ns.model_sql = re.sub(regex_pattern, '\\g<1> \\g<3>', ns.model_sql) -%}         \n        {% endif %}\n\n    {%- endfor -%}\n\n{%- if from_list|length > 0 -%}\n\n{%- set model_import_ctes -%}\n\n    {%- for config_obj in config_list -%}\n\n    {%- set ns.model_sql = ns.model_sql|replace(config_obj[0], '') -%}\n\n{{ config_obj[0] }}\n\n{% endfor -%}\n\n    {%- for from_obj in from_list|unique|sort -%}\n\n{%- if loop.first -%}with {% else -%}{%- if leading_commas -%},{%- endif -%}{%- endif -%}{{ from_obj[0] }} as (\n\n    select * from {{ from_obj[1] }}\n    {%- if from_obj[2] == 'from_source' and from_list|length > 1 %} \n    -- CAUTION: It's best practice to create staging layer for raw sources\n    {%- elif from_obj[2] == 'from_table_1' or from_obj[2] == 'from_table_2' or from_obj[2] == 'from_table_3' %}\n    -- CAUTION: It's best practice to use the ref or source function instead of a direct reference\n    {%- elif from_obj[2] == 'from_var_1' or from_obj[2] == 'from_var_2' %}\n    -- CAUTION: It's best practice to use the ref or source function instead of a var\n    {%- endif %}\n  \n){%- if ((loop.last and does_raw_sql_contain_cte) or (not loop.last)) and not leading_commas -%},{%- endif %}\n\n{% endfor -%}\n\n{%- if does_raw_sql_contain_cte -%}\n    {%- if leading_commas -%}\n        {%- set replace_with = '\\g<1>,' -%}\n    {%- else -%}\n        {%- set replace_with = '\\g<1>' -%}\n    {%- endif -%}\n{{ re.sub(with_regex, replace_with, ns.model_sql, 1)|trim }}\n{%- else -%}\n{{ ns.model_sql|trim }}\n{%- endif -%}\n\n{%- endset -%}\n\n{%- else -%}\n\n{% set model_import_ctes = model_raw_sql %}\n\n{%- endif -%}\n\n{%- if execute -%}\n\n{{ log(model_import_ctes, info=True) }}\n{% do return(model_import_ctes) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9492726, "supported_languages": null}, "macro.codegen.get_tables_in_schema": {"name": "get_tables_in_schema", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_source.sql", "original_file_path": "macros/generate_source.sql", "unique_id": "macro.codegen.get_tables_in_schema", "macro_sql": "{% macro get_tables_in_schema(schema_name, database_name=target.database, table_pattern='%', exclude='') %}\n    \n    {% set tables=dbt_utils.get_relations_by_pattern(\n        schema_pattern=schema_name,\n        database=database_name,\n        table_pattern=table_pattern,\n        exclude=exclude\n    ) %}\n\n    {% set table_list= tables | map(attribute='identifier') %}\n\n    {{ return(table_list | sort) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9527037, "supported_languages": null}, "macro.codegen.generate_source": {"name": "generate_source", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_source.sql", "original_file_path": "macros/generate_source.sql", "unique_id": "macro.codegen.generate_source", "macro_sql": "{% macro generate_source(schema_name, database_name=target.database, generate_columns=False, include_descriptions=False, include_data_types=True, table_pattern='%', exclude='', name=schema_name, table_names=None, include_database=False, include_schema=False) %}\n\n{% set sources_yaml=[] %}\n{% do sources_yaml.append('version: 2') %}\n{% do sources_yaml.append('') %}\n{% do sources_yaml.append('sources:') %}\n{% do sources_yaml.append('  - name: ' ~ name | lower) %}\n\n{% if include_descriptions %}\n    {% do sources_yaml.append('    description: \"\"' ) %}\n{% endif %}\n\n{% if database_name != target.database or include_database %}\n{% do sources_yaml.append('    database: ' ~ database_name | lower) %}\n{% endif %}\n\n{% if schema_name != name or include_schema %}\n{% do sources_yaml.append('    schema: ' ~ schema_name | lower) %}\n{% endif %}\n\n{% do sources_yaml.append('    tables:') %}\n\n{% if table_names is none %}\n{% set tables=codegen.get_tables_in_schema(schema_name, database_name, table_pattern, exclude) %}\n{% else %}\n{% set tables = table_names %}\n{% endif %}\n\n{% for table in tables %}\n    {% do sources_yaml.append('      - name: ' ~ table | lower ) %}\n    {% if include_descriptions %}\n        {% do sources_yaml.append('        description: \"\"' ) %}\n    {% endif %}\n    {% if generate_columns %}\n    {% do sources_yaml.append('        columns:') %}\n\n        {% set table_relation=api.Relation.create(\n            database=database_name,\n            schema=schema_name,\n            identifier=table\n        ) %}\n\n        {% set columns=adapter.get_columns_in_relation(table_relation) %}\n\n        {% for column in columns %}\n            {% do sources_yaml.append('          - name: ' ~ column.name | lower ) %}\n            {% if include_data_types %}\n                {% do sources_yaml.append('            data_type: ' ~ codegen.data_type_format_source(column)) %}\n            {% endif %}\n            {% if include_descriptions %}\n                {% do sources_yaml.append('            description: \"\"' ) %}\n            {% endif %}\n        {% endfor %}\n            {% do sources_yaml.append('') %}\n\n    {% endif %}\n\n{% endfor %}\n\n{% if execute %}\n\n    {% set joined = sources_yaml | join ('\\n') %}\n    {{ log(joined, info=True) }}\n    {% do return(joined) %}\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.get_tables_in_schema", "macro.codegen.data_type_format_source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9578016, "supported_languages": null}, "macro.codegen.generate_base_model": {"name": "generate_base_model", "resource_type": "macro", "package_name": "codegen", "path": "macros/generate_base_model.sql", "original_file_path": "macros/generate_base_model.sql", "unique_id": "macro.codegen.generate_base_model", "macro_sql": "{% macro generate_base_model(source_name, table_name, leading_commas=False, case_sensitive_cols=False, materialized=None) %}\n\n{%- set source_relation = source(source_name, table_name) -%}\n\n{%- set columns = adapter.get_columns_in_relation(source_relation) -%}\n{% set column_names=columns | map(attribute='name') %}\n{% set base_model_sql %}\n\n{%- if materialized is not none -%}\n    {{ \"{{ config(materialized='\" ~ materialized ~ \"') }}\" }}\n{%- endif %}\n\nwith source as (\n\n    select * from {% raw %}{{ source({% endraw %}'{{ source_name }}', '{{ table_name }}'{% raw %}) }}{% endraw %}\n\n),\n\nrenamed as (\n\n    select\n        {%- if leading_commas -%}\n        {%- for column in column_names %}\n        {{\", \" if not loop.first}}{% if not case_sensitive_cols %}{{ column | lower }}{% elif target.type == \"bigquery\" %}{{ column }}{% else %}{{ \"\\\"\" ~ column ~ \"\\\"\" }}{% endif %}\n        {%- endfor %}\n        {%- else -%}\n        {%- for column in column_names %}\n        {% if not case_sensitive_cols %}{{ column | lower }}{% elif target.type == \"bigquery\" %}{{ column }}{% else %}{{ \"\\\"\" ~ column ~ \"\\\"\" }}{% endif %}{{\",\" if not loop.last}}\n        {%- endfor -%}\n        {%- endif %}\n\n    from source\n\n)\n\nselect * from renamed\n{% endset %}\n\n{% if execute %}\n\n{{ log(base_model_sql, info=True) }}\n{% do return(base_model_sql) %}\n\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9616446, "supported_languages": null}, "macro.codegen.create_base_models": {"name": "create_base_models", "resource_type": "macro", "package_name": "codegen", "path": "macros/create_base_models.sql", "original_file_path": "macros/create_base_models.sql", "unique_id": "macro.codegen.create_base_models", "macro_sql": "{% macro create_base_models(source_name, tables) %}\n\n{% set source_name = \"\"~ source_name ~\"\" %}\n\n{% set zsh_command_models = \"source dbt_packages/codegen/bash_scripts/base_model_creation.sh \"\"\"~ source_name ~\"\"\" \" %}\n\n{%- set models_array = [] -%}\n\n{% for t in tables %}\n    {% set help_command = zsh_command_models + t %}\n    {{ models_array.append(help_command) }}\n{% endfor %}\n\n{{ log(\"Run these commands in your shell to generate the models:\\n\" ~ models_array|join(' && \\n'), info=True) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9629629, "supported_languages": null}, "macro.codegen.format_column": {"name": "format_column", "resource_type": "macro", "package_name": "codegen", "path": "macros/vendored/dbt_core/format_column.sql", "original_file_path": "macros/vendored/dbt_core/format_column.sql", "unique_id": "macro.codegen.format_column", "macro_sql": "{% macro format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.963763, "supported_languages": null}, "macro.codegen.get_model_dependencies": {"name": "get_model_dependencies", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.get_model_dependencies", "macro_sql": "{% macro get_model_dependencies(model_name) %}\n    {% for node in graph.nodes.values() | selectattr('name', \"equalto\", model_name) %}\n        {{ return(node.depends_on.nodes) }}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.966027, "supported_languages": null}, "macro.codegen.add_model_column_descriptions_to_dict": {"name": "add_model_column_descriptions_to_dict", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.add_model_column_descriptions_to_dict", "macro_sql": "{% macro add_model_column_descriptions_to_dict(model_name,dict_with_descriptions={}) %}\n    {% for node in graph.nodes.values() | selectattr('name', \"equalto\", model_name) %}\n        {% for col_name, col_values in node.columns.items() %}\n            {% do dict_with_descriptions.update( {col_name: col_values.description} ) %}\n        {% endfor %}\n    {% endfor %}\n    {{ return(dict_with_descriptions) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9669874, "supported_languages": null}, "macro.codegen.build_dict_column_descriptions": {"name": "build_dict_column_descriptions", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.build_dict_column_descriptions", "macro_sql": "{% macro build_dict_column_descriptions(model_name) %}\n    {% if execute %}\n        {% set glob_dict = {} %}\n        {% for full_model in codegen.get_model_dependencies(model_name) %}\n            {% do codegen.add_model_column_descriptions_to_dict(full_model.split('.')[-1],glob_dict) %}\n        {% endfor %}\n        {{ return(glob_dict) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.get_model_dependencies", "macro.codegen.add_model_column_descriptions_to_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9678624, "supported_languages": null}, "macro.codegen.get_models": {"name": "get_models", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.get_models", "macro_sql": "{% macro get_models(directory=None, prefix=None) %}\n    {% set model_names=[] %}\n    {% set models = graph.nodes.values() | selectattr('resource_type', \"equalto\", 'model') %}\n    {% if directory and prefix %}\n        {% for model in models %}\n            {% set model_path = \"/\".join(model.path.split(\"/\")[:-1]) %}\n            {% if model_path == directory and model.name.startswith(prefix) %}\n                {% do model_names.append(model.name) %}\n            {% endif %} \n        {% endfor %}\n    {% elif directory %}\n        {% for model in models %}\n            {% set model_path = \"/\".join(model.path.split(\"/\")[:-1]) %}\n            {% if model_path == directory %}\n                {% do model_names.append(model.name) %}\n            {% endif %}\n        {% endfor %}\n    {% elif prefix %}\n        {% for model in models if model.name.startswith(prefix) %}\n            {% do model_names.append(model.name) %}\n        {% endfor %}\n    {% else %}\n        {% for model in models %}\n            {% do model_names.append(model.name) %}\n        {% endfor %}\n    {% endif %}\n    {{ return(model_names) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9707892, "supported_languages": null}, "macro.codegen.data_type_format_source": {"name": "data_type_format_source", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.data_type_format_source", "macro_sql": "{% macro data_type_format_source(column) -%}\n  {{ return(adapter.dispatch('data_type_format_source', 'codegen')(column)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.codegen.default__data_type_format_source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.971173, "supported_languages": null}, "macro.codegen.default__data_type_format_source": {"name": "default__data_type_format_source", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.default__data_type_format_source", "macro_sql": "{% macro default__data_type_format_source(column) %}\n    {% set formatted = codegen.format_column(column) %}\n    {{ return(formatted['data_type'] | lower) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9716392, "supported_languages": null}, "macro.codegen.data_type_format_model": {"name": "data_type_format_model", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.data_type_format_model", "macro_sql": "{% macro data_type_format_model(column) -%}\n  {{ return(adapter.dispatch('data_type_format_model', 'codegen')(column)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.codegen.default__data_type_format_model"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9720094, "supported_languages": null}, "macro.codegen.default__data_type_format_model": {"name": "default__data_type_format_model", "resource_type": "macro", "package_name": "codegen", "path": "macros/helpers/helpers.sql", "original_file_path": "macros/helpers/helpers.sql", "unique_id": "macro.codegen.default__data_type_format_model", "macro_sql": "{% macro default__data_type_format_model(column) %}\n    {% set formatted = codegen.format_column(column) %}\n    {{ return(formatted['data_type'] | lower) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.codegen.format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9724674, "supported_languages": null}, "macro.dbt_utils.get_tables_by_pattern_sql": {"name": "get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.bigquery__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9749312, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"name": "default__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9756725, "supported_languages": null}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"name": "bigquery__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9771473, "supported_languages": null}, "macro.dbt_utils._bigquery__get_matching_schemata": {"name": "_bigquery__get_matching_schemata", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.978211, "supported_languages": null}, "macro.dbt_utils.get_column_values": {"name": "get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9799993, "supported_languages": null}, "macro.dbt_utils.default__get_column_values": {"name": "default__get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9830444, "supported_languages": null}, "macro.dbt_utils.degrees_to_radians": {"name": "degrees_to_radians", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9846382, "supported_languages": null}, "macro.dbt_utils.haversine_distance": {"name": "haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.bigquery__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9852326, "supported_languages": null}, "macro.dbt_utils.default__haversine_distance": {"name": "default__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.986379, "supported_languages": null}, "macro.dbt_utils.bigquery__haversine_distance": {"name": "bigquery__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9880452, "supported_languages": null}, "macro.dbt_utils.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9885921, "supported_languages": null}, "macro.dbt_utils.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.989098, "supported_languages": null}, "macro.dbt_utils.nullcheck_table": {"name": "nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9897213, "supported_languages": null}, "macro.dbt_utils.default__nullcheck_table": {"name": "default__nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.990417, "supported_languages": null}, "macro.dbt_utils.get_filtered_columns_in_relation": {"name": "get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.991247, "supported_languages": null}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"name": "default__get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9927292, "supported_languages": null}, "macro.dbt_utils.get_query_results_as_dict": {"name": "get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9934587, "supported_languages": null}, "macro.dbt_utils.default__get_query_results_as_dict": {"name": "default__get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.99467, "supported_languages": null}, "macro.dbt_utils.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9959972, "supported_languages": null}, "macro.dbt_utils.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9968655, "supported_languages": null}, "macro.dbt_utils.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9972703, "supported_languages": null}, "macro.dbt_utils.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9983547, "supported_languages": null}, "macro.dbt_utils.safe_add": {"name": "safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.safe_add", "macro_sql": "{%- macro safe_add(field_list) -%}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268175.9990537, "supported_languages": null}, "macro.dbt_utils.default__safe_add": {"name": "default__safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_add` macro now takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0001488, "supported_languages": null}, "macro.dbt_utils.safe_divide": {"name": "safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.safe_divide", "macro_sql": "{% macro safe_divide(numerator, denominator) -%}\n  {{ return(adapter.dispatch('safe_divide', 'dbt_utils')(numerator, denominator)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_divide"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0007088, "supported_languages": null}, "macro.dbt_utils.default__safe_divide": {"name": "default__safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.default__safe_divide", "macro_sql": "{% macro default__safe_divide(numerator, denominator) %}\n    ( {{ numerator }} ) / nullif( ( {{ denominator }} ), 0)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0009902, "supported_languages": null}, "macro.dbt_utils.get_table_types_sql": {"name": "get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_utils.default__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.001922, "supported_languages": null}, "macro.dbt_utils.default__get_table_types_sql": {"name": "default__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0022326, "supported_languages": null}, "macro.dbt_utils.postgres__get_table_types_sql": {"name": "postgres__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0025284, "supported_languages": null}, "macro.dbt_utils.databricks__get_table_types_sql": {"name": "databricks__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.databricks__get_table_types_sql", "macro_sql": "{% macro databricks__get_table_types_sql() %}\n            case table_type\n                when 'MANAGED' then 'table'\n                when 'BASE TABLE' then 'table'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0028112, "supported_languages": null}, "macro.dbt_utils.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0072138, "supported_languages": null}, "macro.dbt_utils.default__union_relations": {"name": "default__union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n    {%- set all_excludes = [] -%}\n    {%- set all_includes = [] -%}\n\n    {%- if exclude -%}\n        {%- for exc in exclude -%}\n            {%- do all_excludes.append(exc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- if include -%}\n        {%- for inc in include -%}\n            {%- do all_includes.append(inc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column | lower in all_excludes -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column | lower not in all_includes -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n    {%- set dbt_command = flags.WHICH -%}\n\n\n    {% if dbt_command in ['run', 'build'] %}\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                {%- if source_column_name is not none %}\n                cast({{ dbt.string_literal(relation) }} as {{ dbt.type_string() }}) as {{ source_column_name }},\n                {%- endif %}\n\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.string_literal", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0141194, "supported_languages": null}, "macro.dbt_utils.deduplicate": {"name": "deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by) -%}\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.bigquery__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0153942, "supported_languages": null}, "macro.dbt_utils.default__deduplicate": {"name": "default__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0158265, "supported_languages": null}, "macro.dbt_utils.redshift__deduplicate": {"name": "redshift__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    {{ return(dbt_utils.default__deduplicate(relation, partition_by, order_by=order_by)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.016244, "supported_languages": null}, "macro.dbt_utils.postgres__deduplicate": {"name": "postgres__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.016649, "supported_languages": null}, "macro.dbt_utils.snowflake__deduplicate": {"name": "snowflake__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0170002, "supported_languages": null}, "macro.dbt_utils.bigquery__deduplicate": {"name": "bigquery__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.017375, "supported_languages": null}, "macro.dbt_utils.get_tables_by_prefix_sql": {"name": "get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0181446, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"name": "default__get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0187147, "supported_languages": null}, "macro.dbt_utils.get_single_value": {"name": "get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.get_single_value", "macro_sql": "{% macro get_single_value(query, default=none) %}\n    {{ return(adapter.dispatch('get_single_value', 'dbt_utils')(query, default)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_single_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0196052, "supported_languages": null}, "macro.dbt_utils.default__get_single_value": {"name": "default__get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.default__get_single_value", "macro_sql": "{% macro default__get_single_value(query, default) %}\n\n{# This macro returns the (0, 0) record in a query, i.e. the first row of the first column #}\n\n    {%- call statement('get_query_result', fetch_result=True, auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {%- if execute -%}\n\n        {% set r = load_result('get_query_result').table.columns[0].values() %}\n        {% if r | length == 0 %}\n            {% do print('Query `' ~ query ~ '` returned no rows. Using the default value: ' ~ default) %}\n            {% set sql_result = default %}\n        {% else %}\n            {% set sql_result = r[0] %}\n        {% endif %}\n        \n    {%- else -%}\n    \n        {% set sql_result = default %}\n    \n    {%- endif -%}\n\n    {% do return(sql_result) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0210853, "supported_languages": null}, "macro.dbt_utils.safe_subtract": {"name": "safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.safe_subtract", "macro_sql": "{%- macro safe_subtract(field_list) -%}\n    {{ return(adapter.dispatch('safe_subtract', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_subtract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.021807, "supported_languages": null}, "macro.dbt_utils.default__safe_subtract": {"name": "default__safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.default__safe_subtract", "macro_sql": "\n\n{%- macro default__safe_subtract(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_subtract` macro takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' -\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0229094, "supported_languages": null}, "macro.dbt_utils.get_relations_by_pattern": {"name": "get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0240436, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_pattern": {"name": "default__get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0257535, "supported_languages": null}, "macro.dbt_utils.surrogate_key": {"name": "surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.026477, "supported_languages": null}, "macro.dbt_utils.default__surrogate_key": {"name": "default__surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- set error_message = '\nWarning: `dbt_utils.surrogate_key` has been replaced by \\\n`dbt_utils.generate_surrogate_key`. The new macro treats null values \\\ndifferently to empty strings. To restore the behaviour of the original \\\nmacro, add a global variable in dbt_project.yml called \\\n`surrogate_key_treat_nulls_as_empty_strings` to your \\\ndbt_project.yml file with a value of True. \\\nThe {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.026951, "supported_languages": null}, "macro.dbt_utils.nullcheck": {"name": "nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0275815, "supported_languages": null}, "macro.dbt_utils.default__nullcheck": {"name": "default__nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.028284, "supported_languages": null}, "macro.dbt_utils.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0294409, "supported_languages": null}, "macro.dbt_utils.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0306444, "supported_languages": null}, "macro.dbt_utils.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0311112, "supported_languages": null}, "macro.dbt_utils.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0318246, "supported_languages": null}, "macro.dbt_utils.get_relations_by_prefix": {"name": "get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0329533, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_prefix": {"name": "default__get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0346525, "supported_languages": null}, "macro.dbt_utils.generate_surrogate_key": {"name": "generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.generate_surrogate_key", "macro_sql": "{%- macro generate_surrogate_key(field_list) -%}\n    {{ return(adapter.dispatch('generate_surrogate_key', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0354729, "supported_languages": null}, "macro.dbt_utils.default__generate_surrogate_key": {"name": "default__generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.default__generate_surrogate_key", "macro_sql": "\n\n{%- macro default__generate_surrogate_key(field_list) -%}\n\n{%- if var('surrogate_key_treat_nulls_as_empty_strings', False) -%}\n    {%- set default_null_value = \"\" -%}\n{%- else -%}\n    {%- set default_null_value = '_dbt_utils_surrogate_key_null_' -%}\n{%- endif -%}\n\n{%- set fields = [] -%}\n\n{%- for field in field_list -%}\n\n    {%- do fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt.type_string() ~ \"), '\" ~ default_null_value  ~\"')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- do fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{ dbt.hash(dbt.concat(fields)) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.hash", "macro.dbt.concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0367792, "supported_languages": null}, "macro.dbt_utils.star": {"name": "star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix, quote_identifiers)) }}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0387626, "supported_languages": null}, "macro.dbt_utils.default__star": {"name": "default__star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {%- do dbt_utils._is_relation(from, 'star') -%}\r\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\r\n\r\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\r\n    {%- if not execute -%}\r\n        {% do return('*') %}\r\n    {%- endif -%}\r\n\r\n    {% set cols = dbt_utils.get_filtered_columns_in_relation(from, except) %}\r\n\r\n    {%- if cols|length <= 0 -%}\r\n        {% if flags.WHICH == 'compile' %}\r\n            {% set response %}\r\n*\r\n/* No columns were returned. Maybe the relation doesn't exist yet \r\nor all columns were excluded. This star is only output during  \r\ndbt compile, and exists to keep SQLFluff happy. */\r\n            {% endset %}\r\n            {% do return(response) %}\r\n        {% else %}\r\n            {% do return(\"/* no columns returned from star() macro */\") %}\r\n        {% endif %}\r\n    {%- else -%}\r\n        {%- for col in cols %}\r\n            {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}\r\n                {%- if quote_identifiers -%}\r\n                    {{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {%- else -%}\r\n                    {{ col|trim }} {%- if prefix!='' or suffix!='' %} as {{ (prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {% endif %}\r\n            {%- if not loop.last %},{{ '\\n  ' }}{%- endif -%}\r\n        {%- endfor -%}\r\n    {% endif %}\r\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0416858, "supported_languages": null}, "macro.dbt_utils.unpivot": {"name": "unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0437415, "supported_languages": null}, "macro.dbt_utils.default__unpivot": {"name": "default__unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n\n    {% if not relation %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_string", "macro.dbt.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.046978, "supported_languages": null}, "macro.dbt_utils.width_bucket": {"name": "width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0482156, "supported_languages": null}, "macro.dbt_utils.default__width_bucket": {"name": "default__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt.safe_cast(expr, dbt.type_numeric() ) }},\n                    {{ dbt.safe_cast(bin_size, dbt.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.safe_cast", "macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0491924, "supported_languages": null}, "macro.dbt_utils.snowflake__width_bucket": {"name": "snowflake__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.049598, "supported_languages": null}, "macro.dbt_utils.pivot": {"name": "pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.051454, "supported_languages": null}, "macro.dbt_utils.default__pivot": {"name": "default__pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.053203, "supported_languages": null}, "macro.dbt_utils.test_equal_rowcount": {"name": "test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0545902, "supported_languages": null}, "macro.dbt_utils.default__test_equal_rowcount": {"name": "default__test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model, group_by_columns) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'sum(coalesce(diff_count, 0))') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(', ') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in fewer_rows_than. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_equal_rowcount'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from {{ model }}\n    {{groupby_gb_cols}}\n\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from {{ compare_model }}\n    {{groupby_gb_cols}}\n\n),\nfinal as (\n\n    select\n    \n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    {{join_gb_cols}}\n\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0568285, "supported_languages": null}, "macro.dbt_utils.test_recency": {"name": "test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.test_recency", "macro_sql": "{% test recency(model, field, datepart, interval, ignore_time_component=False, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval, ignore_time_component, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.058128, "supported_languages": null}, "macro.dbt_utils.default__test_recency": {"name": "default__test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval, ignore_time_component, group_by_columns) %}\n\n{% set threshold = 'cast(' ~ dbt.dateadd(datepart, interval * -1, dbt.current_timestamp()) ~ ' as ' ~ ('date' if ignore_time_component else dbt.type_timestamp()) ~ ')'  %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nwith recency as (\n\n    select \n\n      {{ select_gb_cols }}\n      {% if ignore_time_component %}\n        cast(max({{ field }}) as date) as most_recent\n      {%- else %}\n        max({{ field }}) as most_recent\n      {%- endif %}\n\n    from {{ model }}\n\n    {{ groupby_gb_cols }}\n\n)\n\nselect\n\n    {{ select_gb_cols }}\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.current_timestamp", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0598257, "supported_languages": null}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"name": "test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0643182, "supported_languages": null}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"name": "default__test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}, {{ upper_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc, {{ upper_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions more cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0674813, "supported_languages": null}, "macro.dbt_utils.test_sequential_values": {"name": "test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart, group_by_columns)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0689225, "supported_languages": null}, "macro.dbt_utils.default__test_sequential_values": {"name": "default__test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(',') + ', ' %}\n  {% set partition_gb_cols = 'partition by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith windowed as (\n\n    select\n        {{ select_gb_cols }}\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            {{partition_gb_cols}}\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt.type_timestamp() }})= cast({{ dbt.dateadd(datepart, interval, previous_column_name) }} as {{ dbt.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt.type_timestamp", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0707724, "supported_languages": null}, "macro.dbt_utils.test_unique_combination_of_columns": {"name": "test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0718153, "supported_languages": null}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"name": "default__test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0731113, "supported_languages": null}, "macro.dbt_utils.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None) %}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0739186, "supported_languages": null}, "macro.dbt_utils.default__test_expression_is_true": {"name": "default__test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else \"1\" %}\n\nselect\n    {{ column_list }}\nfrom {{ model }}\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0746577, "supported_languages": null}, "macro.dbt_utils.test_equality": {"name": "test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0759072, "supported_languages": null}, "macro.dbt_utils.default__test_equality": {"name": "default__test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0777495, "supported_languages": null}, "macro.dbt_utils.test_accepted_range": {"name": "test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0788176, "supported_languages": null}, "macro.dbt_utils.default__test_accepted_range": {"name": "default__test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.079765, "supported_languages": null}, "macro.dbt_utils.test_at_least_one": {"name": "test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0808625, "supported_languages": null}, "macro.dbt_utils.default__test_at_least_one": {"name": "default__test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name, group_by_columns) %}\n\n{% set pruned_cols = [column_name] %}\n\n{% if group_by_columns|length() > 0 %}\n\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n  {% set pruned_cols = group_by_columns %}\n\n  {% if column_name not in pruned_cols %}\n    {% do pruned_cols.append(column_name) %}\n  {% endif %}\n\n{% endif %}\n\n{% set select_pruned_cols = pruned_cols|join(' ,') %}\n\nselect *\nfrom (\n    with pruned_rows as (\n      select\n        {{ select_pruned_cols }}\n      from {{ model }}\n      where {{ column_name }} is not null\n      limit 1\n    )\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      {{select_gb_cols}}\n      count({{ column_name }}) as filler_column\n\n    from pruned_rows\n\n    {{groupby_gb_cols}}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0824914, "supported_languages": null}, "macro.dbt_utils.test_relationships_where": {"name": "test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.083598, "supported_languages": null}, "macro.dbt_utils.default__test_relationships_where": {"name": "default__test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.084289, "supported_languages": null}, "macro.dbt_utils.test_not_accepted_values": {"name": "test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.08526, "supported_languages": null}, "macro.dbt_utils.default__test_not_accepted_values": {"name": "default__test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0860639, "supported_languages": null}, "macro.dbt_utils.test_cardinality_equality": {"name": "test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.086985, "supported_languages": null}, "macro.dbt_utils.default__test_cardinality_equality": {"name": "default__test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.087694, "supported_languages": null}, "macro.dbt_utils.test_not_null_proportion": {"name": "test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, group_by_columns, **kwargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0887604, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_proportion": {"name": "default__test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model, group_by_columns) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith validation as (\n  select\n    {{select_gb_cols}}\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n  {{groupby_gb_cols}}\n),\nvalidation_errors as (\n  select\n    {{select_gb_cols}}\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0904582, "supported_languages": null}, "macro.dbt_utils.test_not_empty_string": {"name": "test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.test_not_empty_string", "macro_sql": "{% test not_empty_string(model, column_name, trim_whitespace=true) %}\n\n  {{ return(adapter.dispatch('test_not_empty_string', 'dbt_utils')(model, column_name, trim_whitespace)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.091365, "supported_languages": null}, "macro.dbt_utils.default__test_not_empty_string": {"name": "default__test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.default__test_not_empty_string", "macro_sql": "{% macro default__test_not_empty_string(model, column_name, trim_whitespace=true) %}\n\n    with\n    \n    all_values as (\n\n        select \n\n\n            {% if trim_whitespace == true -%}\n\n                trim({{ column_name }}) as {{ column_name }}\n\n            {%- else -%}\n\n                {{ column_name }}\n\n            {%- endif %}\n            \n        from {{ model }}\n\n    ),\n\n    errors as (\n\n        select * from all_values\n        where {{ column_name }} = ''\n\n    )\n\n    select * from errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.092005, "supported_languages": null}, "macro.dbt_utils.test_not_constant": {"name": "test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.test_not_constant", "macro_sql": "{% test not_constant(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0928683, "supported_languages": null}, "macro.dbt_utils.default__test_not_constant": {"name": "default__test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name, group_by_columns) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    {{select_gb_cols}}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\n  {{groupby_gb_cols}}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0938442, "supported_languages": null}, "macro.dbt_utils.test_fewer_rows_than": {"name": "test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0955007, "supported_languages": null}, "macro.dbt_utils.default__test_fewer_rows_than": {"name": "default__test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model, group_by_columns) %}\n\n{{ config(fail_calc = 'sum(coalesce(row_count_delta, 0))') }}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in equal_rowcount. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_fewer_rows_than'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_our_model \n    from {{ model }}\n    {{ groupby_gb_cols }}\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_comparison_model \n    from {{ compare_model }}\n    {{ groupby_gb_cols }}\n\n),\ncounts as (\n\n    select\n\n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_our_model,\n        count_comparison_model\n    from a\n    full join b on \n    a.id_dbtutils_test_fewer_rows_than = b.id_dbtutils_test_fewer_rows_than\n    {{ join_gb_cols }}\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.097603, "supported_languages": null}, "macro.dbt_utils.log_info": {"name": "log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.098127, "supported_languages": null}, "macro.dbt_utils.default__log_info": {"name": "default__log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0984852, "supported_languages": null}, "macro.dbt_utils.pretty_log_format": {"name": "pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0989926, "supported_languages": null}, "macro.dbt_utils.default__pretty_log_format": {"name": "default__pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.0993412, "supported_languages": null}, "macro.dbt_utils._is_relation": {"name": "_is_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_relation.sql", "original_file_path": "macros/jinja_helpers/_is_relation.sql", "unique_id": "macro.dbt_utils._is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1002064, "supported_languages": null}, "macro.dbt_utils.slugify": {"name": "slugify", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "unique_id": "macro.dbt_utils.slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n{#- Prepends \"_\" if string begins with a number -#}\n{% set string = modules.re.sub('^[0-9]', '_' + string[0], string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1014297, "supported_languages": null}, "macro.dbt_utils.pretty_time": {"name": "pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1020095, "supported_languages": null}, "macro.dbt_utils.default__pretty_time": {"name": "default__pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1024327, "supported_languages": null}, "macro.dbt_utils._is_ephemeral": {"name": "_is_ephemeral", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_ephemeral.sql", "original_file_path": "macros/jinja_helpers/_is_ephemeral.sql", "unique_id": "macro.dbt_utils._is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.104018, "supported_languages": null}, "macro.dbt_utils.get_url_path": {"name": "get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1048143, "supported_languages": null}, "macro.dbt_utils.default__get_url_path": {"name": "default__get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url =\n        dbt.replace(\n            dbt.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{ dbt.position(\"'/'\", stripped_url) }}, 0),\n            {{ dbt.position(\"'?'\", stripped_url) }} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt.split_part(\n            dbt.right(\n                stripped_url,\n                dbt.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ),\n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt.safe_cast(\n        parsed_path,\n        dbt.type_string()\n    )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.position", "macro.dbt.split_part", "macro.dbt.right", "macro.dbt.length", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1061683, "supported_languages": null}, "macro.dbt_utils.get_url_host": {"name": "get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1068106, "supported_languages": null}, "macro.dbt_utils.default__get_url_host": {"name": "default__get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt.split_part(\n        dbt.split_part(\n            dbt.replace(\n                dbt.replace(\n                    dbt.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt.safe_cast(\n        parsed,\n        dbt.type_string()\n        )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part", "macro.dbt.replace", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1077378, "supported_languages": null}, "macro.dbt_utils.get_url_parameter": {"name": "get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1083422, "supported_languages": null}, "macro.dbt_utils.default__get_url_parameter": {"name": "default__get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt.split_part(dbt.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1089933, "supported_languages": null}, "macro.ga4.unnest_key": {"name": "unnest_key", "resource_type": "macro", "package_name": "ga4", "path": "macros/unnest_key.sql", "original_file_path": "macros/unnest_key.sql", "unique_id": "macro.ga4.unnest_key", "macro_sql": "\n\n{%- macro unnest_key(column_to_unnest, key_to_extract, value_type = \"string_value\", rename_column = \"default\") -%}\n    {{ return(adapter.dispatch('unnest_key', 'ga4')(column_to_unnest, key_to_extract, value_type, rename_column)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.ga4.default__unnest_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.109982, "supported_languages": null}, "macro.ga4.default__unnest_key": {"name": "default__unnest_key", "resource_type": "macro", "package_name": "ga4", "path": "macros/unnest_key.sql", "original_file_path": "macros/unnest_key.sql", "unique_id": "macro.ga4.default__unnest_key", "macro_sql": "{%- macro default__unnest_key(column_to_unnest, key_to_extract, value_type = \"string_value\", rename_column = \"default\") -%}\n    (select \n        {% if value_type == \"lower_string_value\" %}\n            lower(value.string_value)   \n        {% else %}\n            value.{{value_type}}    \n        {% endif %}\n    from unnest({{column_to_unnest}}) where key = '{{key_to_extract}}') as \n    {% if  rename_column == \"default\" %}\n    {{ key_to_extract }}\n    {% else %}\n    {{rename_column}}\n    {% endif %}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1108217, "supported_languages": null}, "macro.ga4.default_channel_grouping": {"name": "default_channel_grouping", "resource_type": "macro", "package_name": "ga4", "path": "macros/default_channel_grouping.sql", "original_file_path": "macros/default_channel_grouping.sql", "unique_id": "macro.ga4.default_channel_grouping", "macro_sql": "{% macro default_channel_grouping(source, medium, source_category, campaign) %}\n  {{ return(adapter.dispatch('default_channel_grouping', 'ga4')(source, medium, source_category, campaign)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.ga4.default__default_channel_grouping"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1163285, "supported_languages": null}, "macro.ga4.default__default_channel_grouping": {"name": "default__default_channel_grouping", "resource_type": "macro", "package_name": "ga4", "path": "macros/default_channel_grouping.sql", "original_file_path": "macros/default_channel_grouping.sql", "unique_id": "macro.ga4.default__default_channel_grouping", "macro_sql": "{% macro default__default_channel_grouping(source, medium, source_category, campaign) %}\ncase\n  -- Direct: Source exactly matches \"(direct)\" AND Medium is one of (\"(not set)\", \"(none)\")\n  when (\n      {{source}} is null\n        and {{medium}} is null\n    )\n    or (\n      {{source}} = '(direct)'\n      and ({{medium}} = '(none)' or {{medium}} = '(not set)')\n    )\n    then 'Direct'\n\n  -- Cross-network: Campaign Name contains \"cross-network\"\n  when REGEXP_CONTAINS({{campaign}}, r\"cross-network\")\n    then 'Cross-network'\n\n  -- Paid Shopping:\n  --   (Source matches a list of shopping sites\n  --   OR\n  --   Campaign Name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$)\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when (\n      {{source_category}} = 'SOURCE_CATEGORY_SHOPPING'\n      or REGEXP_CONTAINS({{campaign}}, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    )\n    and REGEXP_CONTAINS({{medium}},r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Shopping'\n\n  -- Paid Search:\n  --   Source matches a list of search sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when {{source_category}} = 'SOURCE_CATEGORY_SEARCH'\n    and REGEXP_CONTAINS({{medium}}, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Search'\n\n  -- Paid Social:\n  --   Source matches a regex list of social sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when {{source_category}} = 'SOURCE_CATEGORY_SOCIAL'\n    and REGEXP_CONTAINS({{medium}}, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Social'\n\n  -- Paid Video:\n  --   Source matches a list of video sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when {{source_category}} = 'SOURCE_CATEGORY_VIDEO'\n    and REGEXP_CONTAINS({{medium}},r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Video'\n\n  -- Display:\n  --   Medium is one of (\"display\", \"banner\", \"expandable\", \"interstitial\", \"cpm\")\n  when {{medium}} in ('display', 'banner', 'expandable', 'interstitial', 'cpm')\n    then 'Display'\n\n  -- Paid Other:\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when REGEXP_CONTAINS({{medium}}, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Other'\n\n  -- Organic Shopping:\n  --   Source matches a list of shopping sites\n  --   OR\n  --   Campaign name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$\n  when {{source_category}} = 'SOURCE_CATEGORY_SHOPPING'\n    or REGEXP_CONTAINS({{campaign}}, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    then 'Organic Shopping'\n\n  -- Organic Social:\n  --   Source matches a regex list of social sites\n  --   OR\n  --   Medium is one of (\"social\", \"social-network\", \"social-media\", \"sm\", \"social network\", \"social media\")\n  when {{source_category}} = 'SOURCE_CATEGORY_SOCIAL'\n    or {{medium}} in (\"social\",\"social-network\",\"social-media\",\"sm\",\"social network\",\"social media\")\n    then 'Organic Social'\n\n  -- Organic Video:\n  --   Source matches a list of video sites\n  --   OR\n  --   Medium matches regex ^(.*video.*)$\n  when {{source_category}} = 'SOURCE_CATEGORY_VIDEO'\n    or REGEXP_CONTAINS({{medium}}, r\"^(.*video.*)$\")\n    then 'Organic Video'\n\n  -- Organic Search:\n  --   Source matches a list of search sites\n  --   OR\n  --   Medium exactly matches organic\n  when {{source_category}} = 'SOURCE_CATEGORY_SEARCH' or {{medium}} = 'organic'\n    then 'Organic Search'\n\n  -- Referral:\n  --   Medium is one of (\"referral\", \"app\", or \"link\")\n  when {{medium}} in (\"referral\", \"app\", \"link\")\n    then 'Referral'\n\n  -- Email:\n  --   Source = email|e-mail|e_mail|e mail\n  --   OR\n  --   Medium = email|e-mail|e_mail|e mail\n  when REGEXP_CONTAINS({{source}}, r\"email|e-mail|e_mail|e mail\")\n    or REGEXP_CONTAINS({{medium}}, r\"email|e-mail|e_mail|e mail\")\n    then 'Email'\n\n  -- Affiliates:\n  --   Medium = affiliate\n  when {{medium}} = 'affiliate'\n    then 'Affiliates'\n\n  -- Audio:\n  --   Medium exactly matches audio\n  when {{medium}} = 'audio'\n    then 'Audio'\n\n  -- SMS:\n  --   Source exactly matches sms\n  --   OR\n  --   Medium exactly matches sms\n  when {{source}} = 'sms'\n    or {{medium}} = 'sms'\n    then 'SMS'\n\n  -- Mobile Push Notifications:\n  --   Medium ends with \"push\"\n  --   OR\n  --   Medium contains \"mobile\" or \"notification\"\n  --   OR\n  --   Source exactly matches \"firebase\"\n  when REGEXP_CONTAINS({{medium}}, r\"push$\")\n    or REGEXP_CONTAINS({{medium}}, r\"mobile|notification\")\n    or {{source}} = 'firebase'\n    then 'Mobile Push Notifications'\n\n  -- Unassigned is the value Analytics uses when there are no other channel rules that match the event data.\n  else 'Unassigned'\nend\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1182022, "supported_languages": null}, "macro.ga4.extract_hostname_from_url": {"name": "extract_hostname_from_url", "resource_type": "macro", "package_name": "ga4", "path": "macros/url_parsing.sql", "original_file_path": "macros/url_parsing.sql", "unique_id": "macro.ga4.extract_hostname_from_url", "macro_sql": "{% macro extract_hostname_from_url(url) %}\n    REGEXP_EXTRACT({{ url }}, '(?:http[s]?://)?(?:www\\\\.)?(.*?)(?:(?:/|:)(?:.)*|$)')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1188796, "supported_languages": null}, "macro.ga4.extract_query_string_from_url": {"name": "extract_query_string_from_url", "resource_type": "macro", "package_name": "ga4", "path": "macros/url_parsing.sql", "original_file_path": "macros/url_parsing.sql", "unique_id": "macro.ga4.extract_query_string_from_url", "macro_sql": "{% macro extract_query_string_from_url(url) %}\n    REGEXP_EXTRACT({{ url }}, '\\\\?(.+)')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1190968, "supported_languages": null}, "macro.ga4.remove_query_parameters": {"name": "remove_query_parameters", "resource_type": "macro", "package_name": "ga4", "path": "macros/url_parsing.sql", "original_file_path": "macros/url_parsing.sql", "unique_id": "macro.ga4.remove_query_parameters", "macro_sql": "{% macro remove_query_parameters(url, parameters)%}\nREGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE({{url}}, '(\\\\?|&)({{ parameters|join(\"|\") }})=[^&]*', '\\\\1'), '\\\\?&+', '?'), '&+', '&'), '\\\\?$|&$', '')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1194286, "supported_languages": null}, "macro.ga4.extract_page_path": {"name": "extract_page_path", "resource_type": "macro", "package_name": "ga4", "path": "macros/url_parsing.sql", "original_file_path": "macros/url_parsing.sql", "unique_id": "macro.ga4.extract_page_path", "macro_sql": "{% macro extract_page_path(url) %}\n  {{ return(adapter.dispatch('extract_page_path', 'ga4')(url)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.ga4.default__extract_page_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.119812, "supported_languages": null}, "macro.ga4.default__extract_page_path": {"name": "default__extract_page_path", "resource_type": "macro", "package_name": "ga4", "path": "macros/url_parsing.sql", "original_file_path": "macros/url_parsing.sql", "unique_id": "macro.ga4.default__extract_page_path", "macro_sql": "{% macro default__extract_page_path(url) %}\n   REGEXP_EXTRACT({{url}}, '(?:\\\\w+:)?\\\\/\\\\/[^\\\\/]+([^?#]+)')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1200342, "supported_languages": null}, "macro.ga4.extract_query_parameter_value": {"name": "extract_query_parameter_value", "resource_type": "macro", "package_name": "ga4", "path": "macros/url_parsing.sql", "original_file_path": "macros/url_parsing.sql", "unique_id": "macro.ga4.extract_query_parameter_value", "macro_sql": "{% macro extract_query_parameter_value(url, param) %}\n    REGEXP_EXTRACT( {{url}}, r'{{param}}=([^&|\\?|#]*)'  )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1203132, "supported_languages": null}, "macro.ga4.combine_property_data": {"name": "combine_property_data", "resource_type": "macro", "package_name": "ga4", "path": "macros/combine_property_data.sql", "original_file_path": "macros/combine_property_data.sql", "unique_id": "macro.ga4.combine_property_data", "macro_sql": "{%- macro combine_property_data() -%}\n    {{ return(adapter.dispatch('combine_property_data', 'ga4')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.ga4.default__combine_property_data"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1216974, "supported_languages": null}, "macro.ga4.default__combine_property_data": {"name": "default__combine_property_data", "resource_type": "macro", "package_name": "ga4", "path": "macros/combine_property_data.sql", "original_file_path": "macros/combine_property_data.sql", "unique_id": "macro.ga4.default__combine_property_data", "macro_sql": "{% macro default__combine_property_data() %}\n\n    create schema if not exists `{{target.project}}.{{var('combined_dataset')}}`;\n\n    {# If incremental, then use static_incremental_days variable to find earliest shard to copy #}\n    {% if not should_full_refresh() %}\n        {% set earliest_shard_to_retrieve = (modules.datetime.date.today() - modules.datetime.timedelta(days=var('static_incremental_days')))|string|replace(\"-\", \"\")|int %}\n    {% else %}\n    {# Otherwise use 'start_date' variable #}\n\n        {% set earliest_shard_to_retrieve = var('start_date')|int %}\n    {% endif %}\n\n    {% for property_id in var('property_ids') %}\n        {%- set schema_name = \"analytics_\" + property_id|string -%}\n            {# Copy intraday tables #}\n            {%- set relations = dbt_utils.get_relations_by_pattern(schema_pattern=schema_name, table_pattern='events_intraday_%', database=var('source_project')) -%}\n            {% for relation in relations %}\n                {%- set relation_suffix = relation.identifier|replace('events_intraday_', '') -%}\n                {%- if relation_suffix|int >= earliest_shard_to_retrieve|int -%}\n                    CREATE OR REPLACE TABLE `{{target.project}}.{{var('combined_dataset')}}.events_intraday_{{relation_suffix}}{{property_id}}` CLONE `{{var('source_project')}}.analytics_{{property_id}}.events_intraday_{{relation_suffix}}`;\n                {%- endif -%}\n            {% endfor %}\n            {# Copy daily tables and drop old intraday table #}\n            {%- set relations = dbt_utils.get_relations_by_pattern(schema_pattern=schema_name, table_pattern='events_%', exclude='events_intraday_%', database=var('source_project')) -%}\n            {% for relation in relations %}\n                {%- set relation_suffix = relation.identifier|replace('events_', '') -%}\n                {%- if relation_suffix|int >= earliest_shard_to_retrieve|int -%}\n                    CREATE OR REPLACE TABLE `{{target.project}}.{{var('combined_dataset')}}.events_{{relation_suffix}}{{property_id}}` CLONE `{{var('source_project')}}.analytics_{{property_id}}.events_{{relation_suffix}}`;\n                    DROP TABLE IF EXISTS `{{target.project}}.{{var('combined_dataset')}}.events_intraday_{{relation_suffix}}{{property_id}}`;\n                {%- endif -%}\n            {% endfor %}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt_utils.get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.125452, "supported_languages": null}, "macro.ga4.unpack_struct": {"name": "unpack_struct", "resource_type": "macro", "package_name": "ga4", "path": "macros/unpack_struct.sql", "original_file_path": "macros/unpack_struct.sql", "unique_id": "macro.ga4.unpack_struct", "macro_sql": "{%- macro unpack_struct(column_to_unpack, fields) -%}\n{% for field in fields %}\n{{column_to_unpack}}.{{field}} as {{column_to_unpack}}_{{field}} {% if not loop.last %},{% endif %}\n{% endfor %}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.126199, "supported_languages": null}, "macro.ga4.base_select_source": {"name": "base_select_source", "resource_type": "macro", "package_name": "ga4", "path": "macros/base_select.sql", "original_file_path": "macros/base_select.sql", "unique_id": "macro.ga4.base_select_source", "macro_sql": "{% macro base_select_source() %}\n    {{ return(adapter.dispatch('base_select_source', 'ga4')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.ga4.default__base_select_source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1290147, "supported_languages": null}, "macro.ga4.default__base_select_source": {"name": "default__base_select_source", "resource_type": "macro", "package_name": "ga4", "path": "macros/base_select.sql", "original_file_path": "macros/base_select.sql", "unique_id": "macro.ga4.default__base_select_source", "macro_sql": "{% macro default__base_select_source() %}\n    parse_date('%Y%m%d',event_date) as event_date_dt\n    , event_timestamp\n    , event_name\n    , event_params\n    , event_previous_timestamp\n    , event_value_in_usd\n    , event_bundle_sequence_id\n    , event_server_timestamp_offset\n    , user_id\n    , user_pseudo_id\n    , privacy_info\n    , user_properties\n    , user_first_touch_timestamp\n    , user_ltv\n    , device\n    , geo\n    , app_info\n    , traffic_source\n    , stream_id\n    , platform\n    , ecommerce.total_item_quantity\n    , ecommerce.purchase_revenue_in_usd\n    , ecommerce.purchase_revenue\n    , ecommerce.refund_value_in_usd\n    , ecommerce.refund_value\n    , ecommerce.shipping_value_in_usd\n    , ecommerce.shipping_value\n    , ecommerce.tax_value_in_usd\n    , ecommerce.tax_value\n    , ecommerce.unique_items\n    , ecommerce.transaction_id\n    , items\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1292825, "supported_languages": null}, "macro.ga4.base_select_renamed": {"name": "base_select_renamed", "resource_type": "macro", "package_name": "ga4", "path": "macros/base_select.sql", "original_file_path": "macros/base_select.sql", "unique_id": "macro.ga4.base_select_renamed", "macro_sql": "{% macro base_select_renamed() %}\n    {{ return(adapter.dispatch('base_select_renamed', 'ga4')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.ga4.default__base_select_renamed"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1296332, "supported_languages": null}, "macro.ga4.default__base_select_renamed": {"name": "default__base_select_renamed", "resource_type": "macro", "package_name": "ga4", "path": "macros/base_select.sql", "original_file_path": "macros/base_select.sql", "unique_id": "macro.ga4.default__base_select_renamed", "macro_sql": "{% macro default__base_select_renamed() %}\n    event_date_dt\n    , event_timestamp\n    , lower(replace(trim(event_name), \" \", \"_\")) as event_name -- Clean up all event names to be snake cased\n    , event_params\n    , event_previous_timestamp\n    , event_value_in_usd\n    , event_bundle_sequence_id\n    , event_server_timestamp_offset\n    , user_id\n    , user_pseudo_id\n    , privacy_info.analytics_storage as privacy_info_analytics_storage\n    , privacy_info.ads_storage as privacy_info_ads_storage\n    , privacy_info.uses_transient_token as privacy_info_uses_transient_token\n    , user_properties\n    , user_first_touch_timestamp\n    , user_ltv.revenue as user_ltv_revenue\n    , user_ltv.currency as user_ltv_currency\n    , device.category as device_category\n    , device.mobile_brand_name as device_mobile_brand_name\n    , device.mobile_model_name as device_mobile_model_name\n    , device.mobile_marketing_name as device_mobile_marketing_name\n    , device.mobile_os_hardware_model as device_mobile_os_hardware_model\n    , device.operating_system as device_operating_system\n    , device.operating_system_version as device_operating_system_version\n    , device.vendor_id as device_vendor_id\n    , device.advertising_id as device_advertising_id\n    , device.language as device_language\n    , device.is_limited_ad_tracking as device_is_limited_ad_tracking\n    , device.time_zone_offset_seconds as device_time_zone_offset_seconds\n    , device.browser as device_browser\n    , device.browser_version as device_browser_version\n    , device.web_info.browser as device_web_info_browser\n    , device.web_info.browser_version as device_web_info_browser_version\n    , device.web_info.hostname as device_web_info_hostname\n    , geo.continent as geo_continent\n    , geo.country as geo_country\n    , geo.region as geo_region\n    , geo.city as geo_city\n    , geo.sub_continent as geo_sub_continent\n    , geo.metro as geo_metro\n    , app_info.id as app_info_id\n    , app_info.version as app_info_version\n    , app_info.install_store as app_info_install_store\n    , app_info.firebase_app_id as app_info_firebase_app_id\n    , app_info.install_source as app_info_install_source\n    , traffic_source.name as user_campaign\n    , traffic_source.medium as user_medium\n    , traffic_source.source as user_source\n    , stream_id\n    , platform\n    , struct(\n        total_item_quantity\n        , purchase_revenue_in_usd\n        , purchase_revenue\n        , refund_value_in_usd\n        , refund_value\n        , shipping_value_in_usd\n        , shipping_value\n        , tax_value_in_usd\n        , tax_value\n        , unique_items\n        , transaction_id        \n    ) as ecommerce\n    , (select \n        array_agg(struct(\n            unnested_items.item_id\n            , unnested_items.item_name\n            , unnested_items.item_brand\n            , unnested_items.item_variant\n            , unnested_items.item_category\n            , unnested_items.item_category2\n            , unnested_items.item_category3\n            , unnested_items.item_category4\n            , unnested_items.item_category5\n            , unnested_items.price_in_usd\n            , unnested_items.price\n            , unnested_items.quantity\n            , unnested_items.item_revenue_in_usd\n            , unnested_items.item_revenue\n            , unnested_items.item_refund_in_usd\n            , unnested_items.item_refund\n            , unnested_items.coupon\n            , unnested_items.affiliation\n            , unnested_items.location_id\n            , unnested_items.item_list_id\n            , unnested_items.item_list_name\n            , unnested_items.item_list_index\n            , unnested_items.promotion_id\n            , unnested_items.promotion_name\n            , unnested_items.creative_name\n            , unnested_items.creative_slot\n            , unnested_items.item_params\n        )) from unnest(items) as unnested_items \n    ) items\n    , {{ ga4.unnest_key('event_params', 'ga_session_id', 'int_value', 'session_id') }}\n    , {{ ga4.unnest_key('event_params', 'page_location') }}\n    , {{ ga4.unnest_key('event_params', 'ga_session_number',  'int_value', 'session_number') }}\n    , COALESCE(\n        (SELECT value.int_value FROM unnest(event_params) WHERE key = \"session_engaged\"),\n        (CASE WHEN (SELECT value.string_value FROM unnest(event_params) WHERE key = \"session_engaged\") = \"1\" THEN 1 END)\n    ) as session_engaged\n    , {{ ga4.unnest_key('event_params', 'engagement_time_msec', 'int_value') }}\n    , {{ ga4.unnest_key('event_params', 'page_title') }}\n    , {{ ga4.unnest_key('event_params', 'page_referrer') }}\n    , {{ ga4.unnest_key('event_params', 'source', 'lower_string_value', 'event_source') }}\n    , {{ ga4.unnest_key('event_params', 'medium', 'lower_string_value', 'event_medium') }}\n    , {{ ga4.unnest_key('event_params', 'campaign', 'lower_string_value', 'event_campaign') }}\n    , {{ ga4.unnest_key('event_params', 'content', 'lower_string_value', 'event_content') }}\n    , {{ ga4.unnest_key('event_params', 'term', 'lower_string_value', 'event_term') }}\n    , CASE \n        WHEN event_name = 'page_view' THEN 1\n        ELSE 0\n    END AS is_page_view\n    , CASE \n        WHEN event_name = 'purchase' THEN 1\n        ELSE 0\n    END AS is_purchase\n{% endmacro %}", "depends_on": {"macros": ["macro.ga4.unnest_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1318998, "supported_languages": null}, "macro.ga4.stage_custom_parameters": {"name": "stage_custom_parameters", "resource_type": "macro", "package_name": "ga4", "path": "macros/stage_custom_parameters.sql", "original_file_path": "macros/stage_custom_parameters.sql", "unique_id": "macro.ga4.stage_custom_parameters", "macro_sql": "{% macro stage_custom_parameters(custom_parameters ) %}\n    {% for cp in custom_parameters %}\n        ,{{ ga4.unnest_key('event_params',  cp.name ,  cp.value_type, cp.rename_to or \"default\" ) }}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.ga4.unnest_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1325963, "supported_languages": null}, "macro.ga4.create_custom_event": {"name": "create_custom_event", "resource_type": "macro", "package_name": "ga4", "path": "macros/create_custom_event.sql", "original_file_path": "macros/create_custom_event.sql", "unique_id": "macro.ga4.create_custom_event", "macro_sql": "{%- macro create_custom_event(event_name) -%}\n    {{ return(adapter.dispatch('create_custom_event', 'ga4')(event_name)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.ga4.default__create_custom_event"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1333876, "supported_languages": null}, "macro.ga4.default__create_custom_event": {"name": "default__create_custom_event", "resource_type": "macro", "package_name": "ga4", "path": "macros/create_custom_event.sql", "original_file_path": "macros/create_custom_event.sql", "unique_id": "macro.ga4.default__create_custom_event", "macro_sql": "{%- macro default__create_custom_event(event_name) -%}\n    select *\n        {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n            {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\", \"none\") )}}\n        {% endif %}\n        {% if var(event_name+\"_custom_parameters\", \"none\") != \"none\" %}\n            {{ ga4.stage_custom_parameters( var(event_name+\"_custom_parameters\") )}}\n        {% endif %}\n    from {{ref('stg_ga4__events')}}\n    where event_name = '{{event_name}}'\n{%- endmacro -%}", "depends_on": {"macros": ["macro.ga4.stage_custom_parameters"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.134494, "supported_languages": null}, "macro.audit_helper.compare_column_values_verbose": {"name": "compare_column_values_verbose", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_column_values_verbose.sql", "original_file_path": "macros/compare_column_values_verbose.sql", "unique_id": "macro.audit_helper.compare_column_values_verbose", "macro_sql": "{% macro compare_column_values_verbose(a_query, b_query, primary_key, column_to_compare) -%}\n  {{ return(adapter.dispatch('compare_column_values_verbose', 'audit_helper')(a_query, b_query, primary_key, column_to_compare)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_column_values_verbose"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1374924, "supported_languages": null}, "macro.audit_helper.default__compare_column_values_verbose": {"name": "default__compare_column_values_verbose", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_column_values_verbose.sql", "original_file_path": "macros/compare_column_values_verbose.sql", "unique_id": "macro.audit_helper.default__compare_column_values_verbose", "macro_sql": "{% macro default__compare_column_values_verbose(a_query, b_query, primary_key, column_to_compare) -%}\nwith a_query as (\n    {{ a_query }}\n),\n\nb_query as (\n    {{ b_query }}\n)\n    select\n        coalesce(a_query.{{ primary_key }}, b_query.{{ primary_key }}) as primary_key,\n\n        {% if target.name == 'postgres' or target.name == 'redshift' %}\n            '{{ column_to_compare }}'::text as column_name,\n        {% else %}\n            '{{ column_to_compare }}' as column_name,\n        {% endif %}\n\n        coalesce(\n            a_query.{{ column_to_compare }} = b_query.{{ column_to_compare }} and \n                a_query.{{ primary_key }} is not null and b_query.{{ primary_key }} is not null,\n            (a_query.{{ column_to_compare }} is null and b_query.{{ column_to_compare }} is null),\n            false\n        ) as perfect_match,\n        a_query.{{ column_to_compare }} is null and a_query.{{ primary_key }} is not null as null_in_a,\n        b_query.{{ column_to_compare }} is null and b_query.{{ primary_key }} is not null as null_in_b,\n        a_query.{{ primary_key }} is null as missing_from_a,\n        b_query.{{ primary_key }} is null as missing_from_b,\n        coalesce(\n            a_query.{{ primary_key }} is not null and b_query.{{ primary_key }} is not null and \n            -- ensure that neither value is missing before considering it a conflict\n            (\n                a_query.{{ column_to_compare }} != b_query.{{ column_to_compare }} or -- two not-null values that do not match\n                (a_query.{{ column_to_compare }} is not null and b_query.{{ column_to_compare }} is null) or -- null in b and not null in a\n                (a_query.{{ column_to_compare }} is null and b_query.{{ column_to_compare }} is not null) -- null in a and not null in b\n            ), \n            false\n        ) as conflicting_values\n        -- considered a conflict if the values do not match AND at least one of the values is not null.\n\n    from a_query\n\n    full outer join b_query on (a_query.{{ primary_key }} = b_query.{{ primary_key }})\n\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1391854, "supported_languages": null}, "macro.audit_helper.compare_all_columns": {"name": "compare_all_columns", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_all_columns.sql", "original_file_path": "macros/compare_all_columns.sql", "unique_id": "macro.audit_helper.compare_all_columns", "macro_sql": "{% macro compare_all_columns( a_relation, b_relation, primary_key,  exclude_columns=[],summarize=true ) -%}\n  {{ return(adapter.dispatch('compare_all_columns', 'audit_helper')( a_relation, b_relation, primary_key, exclude_columns, summarize )) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_all_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.141286, "supported_languages": null}, "macro.audit_helper.default__compare_all_columns": {"name": "default__compare_all_columns", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_all_columns.sql", "original_file_path": "macros/compare_all_columns.sql", "unique_id": "macro.audit_helper.default__compare_all_columns", "macro_sql": "{% macro default__compare_all_columns( a_relation, b_relation, primary_key, exclude_columns=[], summarize=true ) -%}\n\n  {% set column_names = dbt_utils.get_filtered_columns_in_relation(from=a_relation, except=exclude_columns) %}\n\n  {# We explictly select the primary_key and rename to support any sql as the primary_key -\n  a column or concatenated columns. this assumes that a_relation and b_relation do not already \n  have a field named dbt_audit_helper_pk #}\n\n  {% set a_query %}      \n    select\n      *,\n      {{ primary_key }} as dbt_audit_helper_pk\n    from {{ a_relation }}\n  {% endset %}\n\n  {% set b_query %}\n    select\n      *,\n      {{ primary_key }} as dbt_audit_helper_pk\n    from {{ b_relation }}\n  {% endset %}\n\n  {% for column_name in column_names %}\n\n    {% set audit_query = audit_helper.compare_column_values_verbose(\n      a_query=a_query,\n      b_query=b_query,\n      primary_key=\"dbt_audit_helper_pk\",\n      column_to_compare=column_name\n    ) %}\n\n    /*  Create a query combining results from all columns so that the user, or the \n    test suite, can examine all at once.\n    */\n    \n    {% if loop.first %}\n\n    /*  Create a CTE that wraps all the unioned subqueries that are created\n        in this for loop\n    */\n      with main as ( \n\n    {% endif %}\n\n    /*  There will be one audit_query subquery for each column\n    */\n    ( {{ audit_query }} )\n\n    {% if not loop.last %}\n\n      union all\n\n    {% else %}\n\n    ), \n    \n      {%- if summarize %}\n\n        final as (\n          select\n            upper(column_name) as column_name,\n            sum(case when perfect_match then 1 else 0 end) as perfect_match,\n            sum(case when null_in_a then 1 else 0 end) as null_in_a,\n            sum(case when null_in_b then 1 else 0 end) as null_in_b,\n            sum(case when missing_from_a then 1 else 0 end) as missing_from_a,\n            sum(case when missing_from_b then 1 else 0 end) as missing_from_b,\n            sum(case when conflicting_values then 1 else 0 end) as conflicting_values\n          from main\n          group by 1\n          order by column_name\n        )\n\n      {%- else %}\n\n        final as (\n          select\n            primary_key,           \n            upper(column_name) as column_name,\n            perfect_match,\n            null_in_a,\n            null_in_b,\n            missing_from_a,\n            missing_from_b,\n            conflicting_values\n          from main    \n          order by primary_key\n        )\n\n      {%- endif %}\n\n      select * from final\n    \n    {% endif %}\n\n  {% endfor %}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_filtered_columns_in_relation", "macro.audit_helper.compare_column_values_verbose"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1431997, "supported_languages": null}, "macro.audit_helper.compare_relation_columns": {"name": "compare_relation_columns", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.compare_relation_columns", "macro_sql": "{% macro compare_relation_columns(a_relation, b_relation) %}\n  {{ return(adapter.dispatch('compare_relation_columns', 'audit_helper')(a_relation, b_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_relation_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.144835, "supported_languages": null}, "macro.audit_helper.default__compare_relation_columns": {"name": "default__compare_relation_columns", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.default__compare_relation_columns", "macro_sql": "{% macro default__compare_relation_columns(a_relation, b_relation) %}\n\nwith a_cols as (\n    {{ audit_helper.get_columns_in_relation_sql(a_relation) }}\n),\n\nb_cols as (\n    {{ audit_helper.get_columns_in_relation_sql(b_relation) }}\n)\n\nselect\n    column_name,\n    a_cols.ordinal_position as a_ordinal_position,\n    b_cols.ordinal_position as b_ordinal_position,\n    a_cols.data_type as a_data_type,\n    b_cols.data_type as b_data_type,\n    coalesce(a_cols.ordinal_position = b_cols.ordinal_position, false) as has_ordinal_position_match,\n    coalesce(a_cols.data_type = b_cols.data_type, false) as has_data_type_match\nfrom a_cols\nfull outer join b_cols using (column_name)\norder by coalesce(a_cols.ordinal_position, b_cols.ordinal_position)\n\n{% endmacro %}", "depends_on": {"macros": ["macro.audit_helper.get_columns_in_relation_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1453137, "supported_languages": null}, "macro.audit_helper.get_columns_in_relation_sql": {"name": "get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.get_columns_in_relation_sql", "macro_sql": "{% macro get_columns_in_relation_sql(relation) %}\n\n{{ adapter.dispatch('get_columns_in_relation_sql', 'audit_helper')(relation) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.audit_helper.bigquery__get_columns_in_relation_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1456594, "supported_languages": null}, "macro.audit_helper.default__get_columns_in_relation_sql": {"name": "default__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.default__get_columns_in_relation_sql", "macro_sql": "{% macro default__get_columns_in_relation_sql(relation) %}\n    \n  {% set columns = adapter.get_columns_in_relation(relation) %}\n  {% for column in columns %}\n    select \n      {{ dbt.string_literal(column.name) }} as column_name, \n      {{ loop.index }} as ordinal_position,\n      {{ dbt.string_literal(column.data_type) }} as data_type\n\n  {% if not loop.last -%}\n    union all \n  {%- endif %}\n  {% endfor %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1465085, "supported_languages": null}, "macro.audit_helper.redshift__get_columns_in_relation_sql": {"name": "redshift__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.redshift__get_columns_in_relation_sql", "macro_sql": "{% macro redshift__get_columns_in_relation_sql(relation) %}\n  {# You can't store the results of an info schema query to a table/view in Redshift, because the data only lives on the leader node #}\n  {{ return (audit_helper.default__get_columns_in_relation_sql(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__get_columns_in_relation_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1468663, "supported_languages": null}, "macro.audit_helper.snowflake__get_columns_in_relation_sql": {"name": "snowflake__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.snowflake__get_columns_in_relation_sql", "macro_sql": "{% macro snowflake__get_columns_in_relation_sql(relation) %}\n{#-\nFrom: https://github.com/dbt-labs/dbt/blob/dev/louisa-may-alcott/plugins/snowflake/dbt/include/snowflake/macros/adapters.sql#L48\nEdited to include ordinal_position\n-#}\n  select\n      ordinal_position,\n      column_name,\n      data_type,\n      character_maximum_length,\n      numeric_precision,\n      numeric_scale\n\n  from\n  {{ relation.information_schema('columns') }}\n\n  where table_name ilike '{{ relation.identifier }}'\n    {% if relation.schema %}\n    and table_schema ilike '{{ relation.schema }}'\n    {% endif %}\n    {% if relation.database %}\n    and table_catalog ilike '{{ relation.database }}'\n    {% endif %}\n  order by ordinal_position\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1475718, "supported_languages": null}, "macro.audit_helper.postgres__get_columns_in_relation_sql": {"name": "postgres__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.postgres__get_columns_in_relation_sql", "macro_sql": "{% macro postgres__get_columns_in_relation_sql(relation) %}\n{#-\nFrom: https://github.com/dbt-labs/dbt/blob/23484b18b71010f701b5312f920f04529ceaa6b2/plugins/postgres/dbt/include/postgres/macros/adapters.sql#L32\nEdited to include ordinal_position\n-#}\n  select\n      ordinal_position,\n      column_name,\n      data_type,\n      character_maximum_length,\n      numeric_precision,\n      numeric_scale\n\n  from {{ relation.information_schema('columns') }}\n  where table_name = '{{ relation.identifier }}'\n    {% if relation.schema %}\n    and table_schema = '{{ relation.schema }}'\n    {% endif %}\n  order by ordinal_position\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1481125, "supported_languages": null}, "macro.audit_helper.bigquery__get_columns_in_relation_sql": {"name": "bigquery__get_columns_in_relation_sql", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relation_columns.sql", "original_file_path": "macros/compare_relation_columns.sql", "unique_id": "macro.audit_helper.bigquery__get_columns_in_relation_sql", "macro_sql": "{% macro bigquery__get_columns_in_relation_sql(relation) %}\n\n  select\n      ordinal_position,\n      column_name,\n      data_type\n\n  from `{{ relation.database }}`.`{{ relation.schema }}`.INFORMATION_SCHEMA.COLUMNS\n  where table_name = '{{ relation.identifier }}'\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1484673, "supported_languages": null}, "macro.audit_helper.compare_relations": {"name": "compare_relations", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_relations.sql", "original_file_path": "macros/compare_relations.sql", "unique_id": "macro.audit_helper.compare_relations", "macro_sql": "{% macro compare_relations(a_relation, b_relation, exclude_columns=[], primary_key=None, summarize=true) %}\n\n{% set column_names = dbt_utils.get_filtered_columns_in_relation(from=a_relation, except=exclude_columns) %}\n\n{% set column_selection %}\n\n  {% for column_name in column_names %} \n    {{ adapter.quote(column_name) }} \n    {% if not loop.last %}\n      , \n    {% endif %} \n  {% endfor %}\n\n{% endset %}\n\n{% set a_query %}\nselect\n\n  {{ column_selection }}\n\nfrom {{ a_relation }}\n{% endset %}\n\n{% set b_query %}\nselect\n\n  {{ column_selection }}\n\nfrom {{ b_relation }}\n{% endset %}\n\n{{ audit_helper.compare_queries(a_query, b_query, primary_key, summarize) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_filtered_columns_in_relation", "macro.audit_helper.compare_queries"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.15037, "supported_languages": null}, "macro.audit_helper.compare_column_values": {"name": "compare_column_values", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_column_values.sql", "original_file_path": "macros/compare_column_values.sql", "unique_id": "macro.audit_helper.compare_column_values", "macro_sql": "{% macro compare_column_values(a_query, b_query, primary_key, column_to_compare) -%}\n  {{ return(adapter.dispatch('compare_column_values', 'audit_helper')(a_query, b_query, primary_key, column_to_compare)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1546338, "supported_languages": null}, "macro.audit_helper.default__compare_column_values": {"name": "default__compare_column_values", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_column_values.sql", "original_file_path": "macros/compare_column_values.sql", "unique_id": "macro.audit_helper.default__compare_column_values", "macro_sql": "{% macro default__compare_column_values(a_query, b_query, primary_key, column_to_compare) -%}\nwith a_query as (\n    {{ a_query }}\n),\n\nb_query as (\n    {{ b_query }}\n),\n\njoined as (\n    select\n        coalesce(a_query.{{ primary_key }}, b_query.{{ primary_key }}) as {{ primary_key }},\n        a_query.{{ column_to_compare }} as a_query_value,\n        b_query.{{ column_to_compare }} as b_query_value,\n        case\n            when a_query.{{ column_to_compare }} = b_query.{{ column_to_compare }} then '\u2705: perfect match'\n            when a_query.{{ column_to_compare }} is null and b_query.{{ column_to_compare }} is null then '\u2705: both are null'\n            when a_query.{{ primary_key }} is null then '\ud83e\udd37: \u200dmissing from a'\n            when b_query.{{ primary_key }} is null then '\ud83e\udd37: missing from b'\n            when a_query.{{ column_to_compare }} is null then '\ud83e\udd37: value is null in a only'\n            when b_query.{{ column_to_compare }} is null then '\ud83e\udd37: value is null in b only'\n            when a_query.{{ column_to_compare }} != b_query.{{ column_to_compare }} then '\ud83d\ude45: \u200dvalues do not match'\n            else 'unknown' -- this should never happen\n        end as match_status,\n        case\n            when a_query.{{ column_to_compare }} = b_query.{{ column_to_compare }} then 0\n            when a_query.{{ column_to_compare }} is null and b_query.{{ column_to_compare }} is null then 1\n            when a_query.{{ primary_key }} is null then 2\n            when b_query.{{ primary_key }} is null then 3\n            when a_query.{{ column_to_compare }} is null then 4\n            when b_query.{{ column_to_compare }} is null then 5\n            when a_query.{{ column_to_compare }} != b_query.{{ column_to_compare }} then 6\n            else 7 -- this should never happen\n        end as match_order\n\n    from a_query\n\n    full outer join b_query on a_query.{{ primary_key }} = b_query.{{ primary_key }}\n),\n\naggregated as (\n    select\n        '{{ column_to_compare }}' as column_name,\n        match_status,\n        match_order,\n        count(*) as count_records\n    from joined\n\n    group by column_name, match_status, match_order\n)\n\nselect\n    column_name,\n    match_status,\n    count_records,\n    round(100.0 * count_records / sum(count_records) over (), 2) as percent_of_total\n\nfrom aggregated\n\norder by match_order\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1562667, "supported_languages": null}, "macro.audit_helper.compare_queries": {"name": "compare_queries", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_queries.sql", "original_file_path": "macros/compare_queries.sql", "unique_id": "macro.audit_helper.compare_queries", "macro_sql": "{% macro compare_queries(a_query, b_query, primary_key=None, summarize=true) -%}\n  {{ return(adapter.dispatch('compare_queries', 'audit_helper')(a_query, b_query, primary_key, summarize)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.audit_helper.default__compare_queries"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.157548, "supported_languages": null}, "macro.audit_helper.default__compare_queries": {"name": "default__compare_queries", "resource_type": "macro", "package_name": "audit_helper", "path": "macros/compare_queries.sql", "original_file_path": "macros/compare_queries.sql", "unique_id": "macro.audit_helper.default__compare_queries", "macro_sql": "{% macro default__compare_queries(a_query, b_query, primary_key=None, summarize=true) %}\n\nwith a as (\n\n    {{ a_query }}\n\n),\n\nb as (\n\n    {{ b_query }}\n\n),\n\na_intersect_b as (\n\n    select * from a\n    {{ dbt.intersect() }}\n    select * from b\n\n),\n\na_except_b as (\n\n    select * from a\n    {{ dbt.except() }}\n    select * from b\n\n),\n\nb_except_a as (\n\n    select * from b\n    {{ dbt.except() }}\n    select * from a\n\n),\n\nall_records as (\n\n    select\n        *,\n        true as in_a,\n        true as in_b\n    from a_intersect_b\n\n    union all\n\n    select\n        *,\n        true as in_a,\n        false as in_b\n    from a_except_b\n\n    union all\n\n    select\n        *,\n        false as in_a,\n        true as in_b\n    from b_except_a\n\n),\n\n{%- if summarize %}\n\nsummary_stats as (\n\n    select\n\n        in_a,\n        in_b,\n        count(*) as count\n\n    from all_records\n    group by 1, 2\n\n),\n\nfinal as (\n\n    select\n\n        *,\n        round(100.0 * count / sum(count) over (), 2) as percent_of_total\n\n    from summary_stats\n    order by in_a desc, in_b desc\n\n)\n\n{%- else %}\n\nfinal as (\n    \n    select * from all_records\n    where not (in_a and in_b)\n    order by {{ primary_key ~ \", \" if primary_key is not none }} in_a desc, in_b desc\n\n)\n\n{%- endif %}\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.intersect", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1585152, "supported_languages": null}, "macro.fb.unnest_json_key": {"name": "unnest_json_key", "resource_type": "macro", "package_name": "fb", "path": "macros/unnest_json_key.sql", "original_file_path": "macros/unnest_json_key.sql", "unique_id": "macro.fb.unnest_json_key", "macro_sql": "\n\n{%- macro unnest_json_key(column_to_unnest, key_field, key_to_extract,value_field,prefix=\"\",suffix=\"\",value_type=\"float64\", rename_column = \"default\") -%}\n    {{ return(adapter.dispatch('unnest_json_key', 'fb')(column_to_unnest, key_field, key_to_extract,value_field,prefix,suffix,value_type, rename_column)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.fb.default__unnest_json_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1597352, "supported_languages": null}, "macro.fb.default__unnest_json_key": {"name": "default__unnest_json_key", "resource_type": "macro", "package_name": "fb", "path": "macros/unnest_json_key.sql", "original_file_path": "macros/unnest_json_key.sql", "unique_id": "macro.fb.default__unnest_json_key", "macro_sql": "{%- macro default__unnest_json_key(column_to_unnest, key_field, key_to_extract,value_field,prefix=\"\",suffix=\"\",value_type=\"float64\", rename_column = \"default\") -%}\n    (\n    select \n        safe_cast(json_value(a.{{value_field}}) as {{value_type}})\n    from unnest({{column_to_unnest}}) as a\n        where json_value(a.{{key_field}}) = '{{key_to_extract}}'\n        ) as  \n    {%- if  rename_column == \"default\" %}\n        {{prefix+\"__\" if prefix else \"\"}}{{ key_to_extract | replace('.','__') }}{{\"__\"+suffix if suffix else \"\"}}\n    {%- else %}\n        {{rename_column}}\n    {%- endif %}\n    \n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1608696, "supported_languages": null}, "macro.fb.create_json_transform": {"name": "create_json_transform", "resource_type": "macro", "package_name": "fb", "path": "macros/json_extract.sql", "original_file_path": "macros/json_extract.sql", "unique_id": "macro.fb.create_json_transform", "macro_sql": "{% macro create_json_transform(schema) %}\n    {% call statement() %}\n        CREATE or replace FUNCTION {{schema}}.json_transform(input JSON) \n        returns ARRAY < json > LANGUAGE js AS \n        \"\"\" \n        return Object.entries(input).map(([k,v]) => ({key:k,value:v})); \n        \"\"\";\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1732268176.1613734, "supported_languages": null}}, "docs": {"doc.sado_analytics_services.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "homepage.md", "original_file_path": "models/homepage.md", "unique_id": "doc.sado_analytics_services.__overview__", "block_contents": "# Sado - analytics project\n\n- Link to [Github](<https://github.com/chienazazaz/sado_analytics_services>)\n- Link to [Report](<https://headscloud.dev>)\n\n## Conventions\n- snakecase\n- staging models: **[staging|base]_[source]__[entity]**\n- marts/core models: **[entity]** or **[dim|fct]__[entity]**\n\n## Schedule\n- on_push: select all modified models\n- every 2 hour (GMT+7): select all incremental and table models (exclude view) \n\n# Project structure\n``` yml\n\u2514\u2500\u2500 sado_analytics_service/\n    \u251c\u2500\u2500 analyses/\n    \u251c\u2500\u2500 snapshots/\n    \u2514\u2500\u2500 models/\n        \u251c\u2500\u2500 staging/\n        \u2502   \u251c\u2500\u2500 stg_models.sql\n        \u2502   \u251c\u2500\u2500 stg_models.yml\n        \u2502   \u2514\u2500\u2500 base/\n        \u251c\u2500\u2500 intermediate\n        \u251c\u2500\u2500 marts/\n        \u2502   \u251c\u2500\u2500 marketing/\n        \u2502   \u2502   \u251c\u2500\u2500 facebook: facebook ads/pages analytics models\n        \u2502   \u2502   \u251c\u2500\u2500 google: google ads analytics models\n        \u2502   \u2502   \u251c\u2500\u2500 analytics: website analytics models\n        \u2502   \u2502   \u2514\u2500\u2500 contact_center: contact center centric models\n        \u2502   \u251c\u2500\u2500 sales: offline sales models\n        \u2502   \u2514\u2500\u2500 online_sales: online sales models\n        \u251c\u2500\u2500 core: model for exposures only\n        \u2514\u2500\u2500 utilities: misc and reusable models (calendar, weather, geocoding)\n```"}, "doc.sado_analytics_services.column__nhanhvn__carrier_id": {"name": "column__nhanhvn__carrier_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__carrier_id", "block_contents": "Id nh\u00e0 v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__carrier_name": {"name": "column__nhanhvn__carrier_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__carrier_name", "block_contents": "T\u00ean nh\u00e0 v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__service_id": {"name": "column__nhanhvn__service_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__service_id", "block_contents": "Id d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__service_name": {"name": "column__nhanhvn__service_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__service_name", "block_contents": "T\u00ean d\u1ecbch v\u1ee5 v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__customer_name": {"name": "column__nhanhvn__customer_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__customer_name", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__gender": {"name": "column__nhanhvn__gender", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__gender", "block_contents": "Gi\u1edbi t\u00ednh kh\u00e1ch h\u00e0ng (1 = Nam, 2 = N\u1eef, Null: Ch\u01b0a c\u00f3 th\u00f4ng tin)"}, "doc.sado_analytics_services.column__nhanhvn__birthday": {"name": "column__nhanhvn__birthday", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__birthday", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__total_money": {"name": "column__nhanhvn__total_money", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__total_money", "block_contents": "T\u1ed5ng s\u1ed1 ti\u1ec1n kh\u00e1ch mua h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__first_purchase_date": {"name": "column__nhanhvn__first_purchase_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__first_purchase_date", "block_contents": "Ng\u00e0y b\u1eaft \u0111\u1ea7u mua h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__first_purchase_depot_id": {"name": "column__nhanhvn__first_purchase_depot_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__first_purchase_depot_id", "block_contents": "Kho b\u1eaft \u0111\u1ea7u mua h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__points": {"name": "column__nhanhvn__points", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__points", "block_contents": "\u0110i\u1ec3m t\u00edch l\u0169y hi\u1ec7n t\u1ea1i c\u1ee7a kh\u00e1ch h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__total_bills": {"name": "column__nhanhvn__total_bills", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__total_bills", "block_contents": "T\u1ed5ng s\u1ed1 ti\u1ec1n kh\u00e1ch thanh to\u00e1n"}, "doc.sado_analytics_services.column__nhanhvn__last_bought_date": {"name": "column__nhanhvn__last_bought_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__last_bought_date", "block_contents": "Ng\u00e0y g\u1ea7n nh\u1ea5t mua h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__depots_id": {"name": "column__nhanhvn__depots_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__depots_id", "block_contents": "ID kho h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__depot_name": {"name": "column__nhanhvn__depot_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__depot_name", "block_contents": "T\u00ean kho h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__city": {"name": "column__nhanhvn__city", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__city", "block_contents": "Th\u00e0nh ph\u1ed1"}, "doc.sado_analytics_services.column__nhanhvn__district": {"name": "column__nhanhvn__district", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__district", "block_contents": "Qu\u1eadn huy\u1ec7n"}, "doc.sado_analytics_services.column__nhanhvn__address": {"name": "column__nhanhvn__address", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__address", "block_contents": "\u0110\u1ecba ch\u1ec9 kho"}, "doc.sado_analytics_services.column__nhanhvn__order_id": {"name": "column__nhanhvn__order_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__order_id", "block_contents": "Id \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__shop_order_id": {"name": "column__nhanhvn__shop_order_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__shop_order_id", "block_contents": "Id website t\u00edch h\u1ee3p"}, "doc.sado_analytics_services.column__nhanhvn__sale_channel": {"name": "column__nhanhvn__sale_channel", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__sale_channel", "block_contents": "K\u00eanh b\u00e1n ph\u00e1t sinh \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__tracking_number": {"name": "column__nhanhvn__tracking_number", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__tracking_number", "block_contents": "M\u00e3 v\u1eadn \u0111\u01a1n"}, "doc.sado_analytics_services.column__nhanhvn__depot_id": {"name": "column__nhanhvn__depot_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__depot_id", "block_contents": "Id kho h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__order_type": {"name": "column__nhanhvn__order_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__order_type", "block_contents": "Lo\u1ea1i \u0111\u01a1n h\u00e0ng (Shipping | Shopping)"}, "doc.sado_analytics_services.column__nhanhvn__money_deposit": {"name": "column__nhanhvn__money_deposit", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__money_deposit", "block_contents": "Ti\u1ec1n \u0111\u1eb7t c\u1ecdc"}, "doc.sado_analytics_services.column__nhanhvn__money_transfer": {"name": "column__nhanhvn__money_transfer", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__money_transfer", "block_contents": "Ti\u1ec1n chuy\u1ec3n kho\u1ea3n"}, "doc.sado_analytics_services.column__nhanhvn__deposit_account": {"name": "column__nhanhvn__deposit_account", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__deposit_account", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__transfer_account": {"name": "column__nhanhvn__transfer_account", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__transfer_account", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__used_points": {"name": "column__nhanhvn__used_points", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__used_points", "block_contents": "S\u1ed1 \u0111i\u1ec3m \u0111\u00e3 ti\u00eau"}, "doc.sado_analytics_services.column__nhanhvn__money_used_points": {"name": "column__nhanhvn__money_used_points", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__money_used_points", "block_contents": "S\u1ed1 ti\u1ec1n ti\u00eau \u0111i\u1ec3m \u0111\u00e3 ti\u00eau"}, "doc.sado_analytics_services.column__nhanhvn__carrier_code": {"name": "column__nhanhvn__carrier_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__carrier_code", "block_contents": "M\u00e3 v\u1eadn \u0111\u01a1n, \u0111\u01a1n h\u00e0ng \u0111\u00e3 b\u1eafn sang h\u00e3ng v\u1eadn chuy\u1ec3n m\u1edbi c\u00f3 th\u00f4ng tin m\u00e3 v\u1eadn \u0111\u01a1n."}, "doc.sado_analytics_services.column__nhanhvn__ship_fee": {"name": "column__nhanhvn__ship_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__ship_fee", "block_contents": "Ph\u00ed v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__cod_fee": {"name": "column__nhanhvn__cod_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__cod_fee", "block_contents": "Ph\u00ed thu ti\u1ec1n h\u1ed9"}, "doc.sado_analytics_services.column__nhanhvn__customer_ship_fee": {"name": "column__nhanhvn__customer_ship_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__customer_ship_fee", "block_contents": "Ph\u00ed thu c\u1ee7a kh\u00e1ch"}, "doc.sado_analytics_services.column__nhanhvn__return_fee": {"name": "column__nhanhvn__return_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__return_fee", "block_contents": "Ph\u00ed chuy\u1ec3n ho\u00e0n"}, "doc.sado_analytics_services.column__nhanhvn__overweight_fee": {"name": "column__nhanhvn__overweight_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__overweight_fee", "block_contents": "Ph\u00ed v\u01b0\u1ee3t c\u00e2n"}, "doc.sado_analytics_services.column__nhanhvn__declared_fee": {"name": "column__nhanhvn__declared_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__declared_fee", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__description": {"name": "column__nhanhvn__description", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__description", "block_contents": "ghi ch\u00fa c\u1ee7a kh\u00e1ch h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__customer_id": {"name": "column__nhanhvn__customer_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__customer_id", "block_contents": "Id kh\u00e1ch h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__customer_contact_number": {"name": "column__nhanhvn__customer_contact_number", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__customer_contact_number", "block_contents": "S\u0110T kh\u00e1ch h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__ship_address": {"name": "column__nhanhvn__ship_address", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__ship_address", "block_contents": "\u0110\u1ecba ch\u1ec9 giao h\u00e0ng \u0111\u1ebfn c\u1ea5p ph\u01b0\u1eddng/x\u00e3"}, "doc.sado_analytics_services.column__nhanhvn__created_by_id": {"name": "column__nhanhvn__created_by_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__created_by_id", "block_contents": "ID ng\u01b0\u1eddi t\u1ea1o \u0111\u01a1n"}, "doc.sado_analytics_services.column__nhanhvn__sale_id": {"name": "column__nhanhvn__sale_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__sale_id", "block_contents": "ID nh\u00e2n vi\u00ean b\u00e1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__created_date": {"name": "column__nhanhvn__created_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__created_date", "block_contents": "Th\u1eddi gian t\u1ea1o \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__delivery_date": {"name": "column__nhanhvn__delivery_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__delivery_date", "block_contents": "Ng\u00e0y giao h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__send_carrier_date": {"name": "column__nhanhvn__send_carrier_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__send_carrier_date", "block_contents": "Ng\u00e0y giao b\u00ean v\u1eadn chuy\u1ec3n"}, "doc.sado_analytics_services.column__nhanhvn__order_status": {"name": "column__nhanhvn__order_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__order_status", "block_contents": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__receiveables": {"name": "column__nhanhvn__receiveables", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__receiveables", "block_contents": "T\u1ed5ng thu c\u1ee7a kh\u00e1ch"}, "doc.sado_analytics_services.column__nhanhvn__traffic_source_name": {"name": "column__nhanhvn__traffic_source_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__traffic_source_name", "block_contents": "T\u00ean ngu\u1ed3n \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__nhanhvn__coupon_code": {"name": "column__nhanhvn__coupon_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__coupon_code", "block_contents": "M\u00e3 coupon"}, "doc.sado_analytics_services.column__nhanhvn__product_code": {"name": "column__nhanhvn__product_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__product_code", "block_contents": "M\u00e3 s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__price": {"name": "column__nhanhvn__price", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__price", "block_contents": "Gi\u00e1 b\u00e1n l\u1ebb s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__quantity": {"name": "column__nhanhvn__quantity", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__quantity", "block_contents": "S\u1ed1 l\u01b0\u1ee3ng s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__discount": {"name": "column__nhanhvn__discount", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__discount", "block_contents": "Chi\u1ebft kh\u1ea5u"}, "doc.sado_analytics_services.column__nhanhvn__product_id": {"name": "column__nhanhvn__product_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__product_id", "block_contents": "ID s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn"}, "doc.sado_analytics_services.column__nhanhvn__category_id": {"name": "column__nhanhvn__category_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__category_id", "block_contents": "ID danh m\u1ee5c s\u1ea3n ph\u1ea9m tr\u00ean Nhanh.vn"}, "doc.sado_analytics_services.column__nhanhvn__type_name": {"name": "column__nhanhvn__type_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__type_name", "block_contents": "Lo\u1ea1i s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__avg_cost": {"name": "column__nhanhvn__avg_cost", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__avg_cost", "block_contents": "Gi\u00e1 v\u1ed1n s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__barcode": {"name": "column__nhanhvn__barcode", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__barcode", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__product_name": {"name": "column__nhanhvn__product_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__product_name", "block_contents": "T\u00ean s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__nhanhvn__product_status": {"name": "column__nhanhvn__product_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__product_status", "block_contents": "Tr\u1ea1ng th\u00e1i s\u1ea3n ph\u1ea9m New | Active | Inactive | Out of stock"}, "doc.sado_analytics_services.column__nhanhvn__user_id": {"name": "column__nhanhvn__user_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__user_id", "block_contents": "Id nh\u00e2n vi\u00ean"}, "doc.sado_analytics_services.column__nhanhvn__user_name": {"name": "column__nhanhvn__user_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__user_name", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__email": {"name": "column__nhanhvn__email", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__email", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__contact_number": {"name": "column__nhanhvn__contact_number", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__contact_number", "block_contents": ""}, "doc.sado_analytics_services.column__nhanhvn__role": {"name": "column__nhanhvn__role", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__role", "block_contents": "Nh\u00f3m quy\u1ec1n nh\u00e2n vi\u00ean"}, "doc.sado_analytics_services.column__nhanhvn__bill_id": {"name": "column__nhanhvn__bill_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__bill_id", "block_contents": "M\u00e3 ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho"}, "doc.sado_analytics_services.column__nhanhvn__bill_date": {"name": "column__nhanhvn__bill_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__bill_date", "block_contents": "Ng\u00e0y ho\u00e1 \u0111\u01a1n"}, "doc.sado_analytics_services.column__nhanhvn__bill_type": {"name": "column__nhanhvn__bill_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__bill_type", "block_contents": "Lo\u1ea1i ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho: Xu\u1ea5t kho | Nh\u1eadp kho"}, "doc.sado_analytics_services.column__nhanhvn__bill_mode": {"name": "column__nhanhvn__bill_mode", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__bill_mode", "block_contents": "Ki\u1ec3u ho\u00e1 \u0111\u01a1n xu\u1ea5t nh\u1eadp kho"}, "doc.sado_analytics_services.column__nhanhvn__related_bill_id": {"name": "column__nhanhvn__related_bill_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__related_bill_id", "block_contents": "M\u00e3 ho\u00e1 \u0111\u01a1n li\u00ean k\u1ebft"}, "doc.sado_analytics_services.column__nhanhvn__vat": {"name": "column__nhanhvn__vat", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__vat", "block_contents": "Thu\u1ebf VAT"}, "doc.sado_analytics_services.column__nhanhvn__receivables": {"name": "column__nhanhvn__receivables", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__receivables", "block_contents": "S\u1ed1 ti\u1ec1n ph\u1ea3i thu KH"}, "doc.sado_analytics_services.column__nhanhvn__item_gross_amount": {"name": "column__nhanhvn__item_gross_amount", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__item_gross_amount", "block_contents": "Gi\u00e1 tr\u1ecb s\u1ea3n ph\u1ea9m sau chi\u1ebft kh\u1ea5u"}, "doc.sado_analytics_services.column__nhanhvn__sub_total": {"name": "column__nhanhvn__sub_total", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__sub_total", "block_contents": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng sau chi\u1ebft kh\u1ea5u"}, "doc.sado_analytics_services.column__nhanhvn__delivery_fee": {"name": "column__nhanhvn__delivery_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__delivery_fee", "block_contents": "Chi ph\u00ed cho h\u00e3ng v\u1eadn chuy\u1ec3n, bao g\u1ed3m ph\u00ed giao h\u00e0ng & ph\u00ed thu h\u1ed9"}, "doc.sado_analytics_services.column__nhanhvn__fulfillment_time": {"name": "column__nhanhvn__fulfillment_time", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/nhanhvn/_nhanhvn__docs.md", "original_file_path": "models/staging/nhanhvn/_nhanhvn__docs.md", "unique_id": "doc.sado_analytics_services.column__nhanhvn__fulfillment_time", "block_contents": "Th\u1eddi gian chu\u1ea9n b\u1ecb h\u00e0ng, t\u1eeb th\u1eddi \u0111i\u1ec3m ph\u00e1t sinh \u0111\u01a1n h\u00e0ng t\u1edbi th\u1eddi \u0111i\u1ec3m giao."}, "doc.sado_analytics_services.column__kiotviet__on_hand": {"name": "column__kiotviet__on_hand", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__on_hand", "block_contents": "Number of items on storage"}, "doc.sado_analytics_services.column__kiotviet__reserved": {"name": "column__kiotviet__reserved", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__reserved", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__actual_reserved": {"name": "column__kiotviet__actual_reserved", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__actual_reserved", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__max_quantity": {"name": "column__kiotviet__max_quantity", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__max_quantity", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__min_quantity": {"name": "column__kiotviet__min_quantity", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__min_quantity", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet___batched_at": {"name": "column__kiotviet___batched_at", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet___batched_at", "block_contents": "lastest sync to datawarehouse"}, "doc.sado_analytics_services.column__kiotviet__address": {"name": "column__kiotviet__address", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__address", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__attributes": {"name": "column__kiotviet__attributes", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__attributes", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__bankaccount_id": {"name": "column__kiotviet__bankaccount_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__bankaccount_id", "block_contents": "Id t\u00e0i kho\u1ea3n NH tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__bankaccount_name": {"name": "column__kiotviet__bankaccount_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__bankaccount_name", "block_contents": "T\u00ean t\u00e0i kho\u1ea3n tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__birth_date": {"name": "column__kiotviet__birth_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__birth_date", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__birth_month": {"name": "column__kiotviet__birth_month", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__birth_month", "block_contents": "Th\u00e1ng sinh nh\u1eadt"}, "doc.sado_analytics_services.column__kiotviet__branch_id": {"name": "column__kiotviet__branch_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__branch_id", "block_contents": "ID C\u1eeda h\u00e0ng tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__branch_name": {"name": "column__kiotviet__branch_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__branch_name", "block_contents": "T\u00ean c\u1eeda h\u00e0ng tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__category_id": {"name": "column__kiotviet__category_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__category_id", "block_contents": "M\u00e3 nh\u00f3m h\u00e0ng tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__category": {"name": "column__kiotviet__category", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__category", "block_contents": "T\u00ean m\u00e3 nh\u00f3m h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__class_code": {"name": "column__kiotviet__class_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__class_code", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__class_name": {"name": "column__kiotviet__class_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__class_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__contact_number": {"name": "column__kiotviet__contact_number", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__contact_number", "block_contents": "S\u1ed1 \u0111i\u1ec7n tho\u1ea1i"}, "doc.sado_analytics_services.column__kiotviet__created_date": {"name": "column__kiotviet__created_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__created_date", "block_contents": "Ng\u00e0y t\u1ea1o"}, "doc.sado_analytics_services.column__kiotviet__customer_groups": {"name": "column__kiotviet__customer_groups", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_groups", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__customer_id": {"name": "column__kiotviet__customer_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_id", "block_contents": "ID kh\u00e1ch h\u00e0ng tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__customer_name": {"name": "column__kiotviet__customer_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__customer_recency_group": {"name": "column__kiotviet__customer_recency_group", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_recency_group", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__customer_type": {"name": "column__kiotviet__customer_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__customer_type", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__debt": {"name": "column__kiotviet__debt", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__debt", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__discount_ratio": {"name": "column__kiotviet__discount_ratio", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__discount_ratio", "block_contents": "T\u1ec9 l\u1ec7 gi\u1ea3m gi\u00e1"}, "doc.sado_analytics_services.column__kiotviet__discount": {"name": "column__kiotviet__discount", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__discount", "block_contents": "gi\u00e1 tr\u1ecb gi\u1ea3m"}, "doc.sado_analytics_services.column__kiotviet__district": {"name": "column__kiotviet__district", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__district", "block_contents": "Qu\u1eadn huy\u1ec7n"}, "doc.sado_analytics_services.column__kiotviet__email": {"name": "column__kiotviet__email", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__email", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__employee_id": {"name": "column__kiotviet__employee_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__employee_id", "block_contents": "Id nh\u00e2n vi\u00ean tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__first_purchase": {"name": "column__kiotviet__first_purchase", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__first_purchase", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__frequency": {"name": "column__kiotviet__frequency", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__frequency", "block_contents": "T\u1ea7n su\u1ea5t mua h\u00e0ng trong 1 kho\u1ea3ng th\u1eddi gian \u0111\u1ecbnh s\u1eb5n"}, "doc.sado_analytics_services.column__kiotviet__gender": {"name": "column__kiotviet__gender", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__gender", "block_contents": "true = Nam, false = N\u1eef, Null = Ch\u01b0a x\u00e1c \u0111\u1ecbnh"}, "doc.sado_analytics_services.column__kiotviet__given_name": {"name": "column__kiotviet__given_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__given_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__is_active": {"name": "column__kiotviet__is_active", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__is_active", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__last_purchase": {"name": "column__kiotviet__last_purchase", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__last_purchase", "block_contents": "Ng\u00e0y mua h\u00e0ng g\u1ea7n nh\u1ea5t"}, "doc.sado_analytics_services.column__kiotviet__last_transaction_id": {"name": "column__kiotviet__last_transaction_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__last_transaction_id", "block_contents": "M\u00e3 \u0111\u01a1n h\u00e0ng g\u1ea7n nh\u1ea5t"}, "doc.sado_analytics_services.column__kiotviet__modified_date": {"name": "column__kiotviet__modified_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__modified_date", "block_contents": "Ng\u00e0y ch\u1ec9nh s\u1eeda"}, "doc.sado_analytics_services.column__kiotviet__monetary": {"name": "column__kiotviet__monetary", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__monetary", "block_contents": "T\u1ed5ng gi\u00e1 tr\u1ecb mua h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__name": {"name": "column__kiotviet__name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__normalname": {"name": "column__kiotviet__normalname", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__normalname", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__partner_type": {"name": "column__kiotviet__partner_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__partner_type", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_amount": {"name": "column__kiotviet__payment_amount", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_amount", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_code": {"name": "column__kiotviet__payment_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_code", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_date": {"name": "column__kiotviet__payment_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_date", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_id": {"name": "column__kiotviet__payment_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_id", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_method": {"name": "column__kiotviet__payment_method", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_method", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__payment_status": {"name": "column__kiotviet__payment_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__payment_status", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__price": {"name": "column__kiotviet__price", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__price", "block_contents": "Gi\u00e1 s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__kiotviet__product_code": {"name": "column__kiotviet__product_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__product_code", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__product_id": {"name": "column__kiotviet__product_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__product_id", "block_contents": "Id s\u1ea3n ph\u1ea9m tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__product_name": {"name": "column__kiotviet__product_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__product_name", "block_contents": "T\u00ean s\u1ea3n ph\u1ea9m tr\u00ean Kiot"}, "doc.sado_analytics_services.column__kiotviet__productline": {"name": "column__kiotviet__productline", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__productline", "block_contents": "D\u00f2ng h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__province": {"name": "column__kiotviet__province", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__province", "block_contents": "T\u1ec9nh/Th\u00e0nh ph\u1ed1"}, "doc.sado_analytics_services.column__kiotviet__quantity": {"name": "column__kiotviet__quantity", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__quantity", "block_contents": "S\u1ed1 l\u01b0\u1ee3ng"}, "doc.sado_analytics_services.column__kiotviet__recency": {"name": "column__kiotviet__recency", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__recency", "block_contents": "S\u1ed1 ng\u00e0y t\u1eeb ng\u00e0y mua h\u00e0ng g\u1ea7n nh\u1ea5t"}, "doc.sado_analytics_services.column__kiotviet__reference_transaction_id": {"name": "column__kiotviet__reference_transaction_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__reference_transaction_id", "block_contents": "M\u00e3 \u0111\u01a1n \u0111\u1eb7t h\u00e0ng li\u00ean k\u1ebft (n\u1ebfu c\u00f3)"}, "doc.sado_analytics_services.column__kiotviet__return_fee": {"name": "column__kiotviet__return_fee", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__return_fee", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__rewardpoint": {"name": "column__kiotviet__rewardpoint", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__rewardpoint", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__salechannel_id": {"name": "column__kiotviet__salechannel_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__salechannel_id", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__sub_productline": {"name": "column__kiotviet__sub_productline", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__sub_productline", "block_contents": "Nh\u00e1nh d\u00f2ng h\u00e0ng, level d\u01b0\u1edbi d\u00f2ng h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__subtotal": {"name": "column__kiotviet__subtotal", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__subtotal", "block_contents": "Gi\u00e1 tr\u1ecb \u0111\u01a1n h\u00e0ng"}, "doc.sado_analytics_services.column__kiotviet__supplier_code": {"name": "column__kiotviet__supplier_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__supplier_code", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__supplier_id": {"name": "column__kiotviet__supplier_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__supplier_id", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__supplier_name": {"name": "column__kiotviet__supplier_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__supplier_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__total_invoiced": {"name": "column__kiotviet__total_invoiced", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__total_invoiced", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__total_payment": {"name": "column__kiotviet__total_payment", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__total_payment", "block_contents": "S\u1ed1 ti\u1ec1n \u0111\u00e3 thanh to\u00e1n"}, "doc.sado_analytics_services.column__kiotviet__total_point": {"name": "column__kiotviet__total_point", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__total_point", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__total": {"name": "column__kiotviet__total", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__total", "block_contents": "T\u1ed5ng gi\u00e1 tr\u1ecb sau gi\u1ea3m"}, "doc.sado_analytics_services.column__kiotviet__trademark_name": {"name": "column__kiotviet__trademark_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__trademark_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__transaction_code": {"name": "column__kiotviet__transaction_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__transaction_code", "block_contents": "M\u00e3 giao d\u1ecbch"}, "doc.sado_analytics_services.column__kiotviet__transaction_date": {"name": "column__kiotviet__transaction_date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__transaction_date", "block_contents": "ng\u00e0y giao d\u1ecbch"}, "doc.sado_analytics_services.column__kiotviet__transaction_id": {"name": "column__kiotviet__transaction_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__transaction_id", "block_contents": "ID giao d\u1ecbch tr\u00ean h\u1ec7 th\u1ed1ng Kiot"}, "doc.sado_analytics_services.column__kiotviet__transaction_status": {"name": "column__kiotviet__transaction_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__transaction_status", "block_contents": "Tr\u1ea1ng th\u00e1i \u0111\u01a1n h\u00e0ng, bao g\u1ed3m 'Ho\u00e0n th\u00e0nh' & '\u0110\u00e3 hu\u1ef7'"}, "doc.sado_analytics_services.column__kiotviet__type": {"name": "column__kiotviet__type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__type", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__user_id": {"name": "column__kiotviet__user_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__user_id", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__user_name": {"name": "column__kiotviet__user_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__user_name", "block_contents": ""}, "doc.sado_analytics_services.column__kiotviet__ward_name": {"name": "column__kiotviet__ward_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/kiotViet/_kiotViet__docs.md", "original_file_path": "models/staging/kiotViet/_kiotViet__docs.md", "unique_id": "doc.sado_analytics_services.column__kiotviet__ward_name", "block_contents": "Ph\u01b0\u1eddng/x\u00e3"}, "doc.sado_analytics_services.column__googleads__absolute_top_impression_percentage": {"name": "column__googleads__absolute_top_impression_percentage", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__absolute_top_impression_percentage", "block_contents": "The percent of your ad impressions that are shown as the very first ad above the organic search results.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb th\u1ee9 t\u1ef1 \u0111\u1ea7u ti\u00ean trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm."}, "doc.sado_analytics_services.column__googleads__item_id": {"name": "column__googleads__item_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__item_id", "block_contents": "Item ID of the product.M\u00e3 s\u1ea3n ph\u1ea9m"}, "doc.sado_analytics_services.column__googleads__content_impression_share": {"name": "column__googleads__content_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__content_impression_share", "block_contents": "The impressions you've received on the Display Network divided by the estimated number of impressions you were eligible to receive.T\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o qua Display Network tr\u00ean s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb."}, "doc.sado_analytics_services.column__googleads__content_rank_lost_impression_share": {"name": "column__googleads__content_rank_lost_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__content_rank_lost_impression_share", "block_contents": "The estimated percentage of impressions on the Display Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb tr\u00ean Display Network b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__search_impression_share": {"name": "column__googleads__search_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_impression_share", "block_contents": "The impressions you've received on the Search Network divided by the estimated number of impressions you were eligible to receive.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec3n th\u1ecb."}, "doc.sado_analytics_services.column__googleads__search_rank_lost_absolute_top_impression_share": {"name": "column__googleads__search_rank_lost_absolute_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_rank_lost_absolute_top_impression_share", "block_contents": "The number estimating how often your ad wasn't the very first ad above the organic search results due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__search_rank_lost_impression_share": {"name": "column__googleads__search_rank_lost_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_rank_lost_impression_share", "block_contents": "The estimated percentage of impressions on the Search Network that your ads didn't receive due to poor Ad Rank.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb b\u1ecb m\u1ea5t tr\u00ean k\u00eanh t\u00ecm ki\u1ebfm do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__search_rank_lost_top_impression_share": {"name": "column__googleads__search_rank_lost_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_rank_lost_top_impression_share", "block_contents": "The number estimating how often your ad didn't show anywhere above the organic search results due to poor Ad Rank\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm b\u1ecb m\u1ea5t do ch\u1ea5t l\u01b0\u1ee3ng qu\u1ea3ng c\u00e1o th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__account_name": {"name": "column__googleads__account_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__account_name", "block_contents": "The descriptive name of the account.T\u00ean t\u00e0i kho\u1ea3n qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__ad_group_id": {"name": "column__googleads__ad_group_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__ad_group_id", "block_contents": "The ID of the ad group.M\u00e3 ID c\u1ee7a nh\u00f3m qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__ad_group_name": {"name": "column__googleads__ad_group_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__ad_group_name", "block_contents": "The descriptive name of the ad group.T\u00ean nh\u00f3m qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__ad_group_type": {"name": "column__googleads__ad_group_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__ad_group_type", "block_contents": "The type of the ad group Lo\u1ea1i nh\u00f3m qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__advertising_channel": {"name": "column__googleads__advertising_channel", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__advertising_channel", "block_contents": "The primary serving target for ads within the campaign.K\u00eanh qu\u1ea3ng c\u00e1o: Search, Display, Video..."}, "doc.sado_analytics_services.column__googleads__all_conversions": {"name": "column__googleads__all_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__all_conversions", "block_contents": "The total number of conversions.To\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i (bao g\u1ed3m c\u1ea3 nh\u1eefng chuy\u1ec3n \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c gom trong nh\u00f3m qu\u1ea3ng c\u00e1o)"}, "doc.sado_analytics_services.column__googleads__all_conversions_from_interactions_rate": {"name": "column__googleads__all_conversions_from_interactions_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__all_conversions_from_interactions_rate", "block_contents": "All conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.To\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c."}, "doc.sado_analytics_services.column__googleads__all_conversions_value": {"name": "column__googleads__all_conversions_value", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__all_conversions_value", "block_contents": "The total value of all conversions.T\u1ed5ng gi\u00e1 tr\u1ecb c\u1ee7a to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__bidding_stategy": {"name": "column__googleads__bidding_stategy", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__bidding_stategy", "block_contents": "The type of bidding strategy.Chi\u1ebfn l\u01b0\u1ee3c th\u1ea7u."}, "doc.sado_analytics_services.column__googleads__campaign_id": {"name": "column__googleads__campaign_id", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__campaign_id", "block_contents": "The ID of the ad campaign.M\u00e3 ID c\u1ee7a chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__campaign_name": {"name": "column__googleads__campaign_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__campaign_name", "block_contents": "The name of the ad campaign.T\u00ean chi\u1ebfn d\u1ecbch qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__clicks": {"name": "column__googleads__clicks", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__clicks", "block_contents": "The number of clicks.S\u1ed1 l\u01b0\u1ee3t nh\u1ea5n (click)"}, "doc.sado_analytics_services.column__googleads__conversion_attribution_type": {"name": "column__googleads__conversion_attribution_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversion_attribution_type", "block_contents": "Conversion attribution event type.Lo\u1ea1i s\u1ef1 ki\u1ec7n chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__conversion_name": {"name": "column__googleads__conversion_name", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversion_name", "block_contents": "Conversion name.T\u00ean s\u1ef1 ki\u1ec7n chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__conversions": {"name": "column__googleads__conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversions", "block_contents": "The number of conversions.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__conversions_from_interactions_rate": {"name": "column__googleads__conversions_from_interactions_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversions_from_interactions_rate", "block_contents": "Conversions from interactions (as oppose to view through conversions) divided by the number of ad interactions.L\u01b0\u1ee3ng chuy\u1ec3n \u0111\u1ed5i t\u1eeb t\u01b0\u01a1ng t\u00e1c chia cho s\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c."}, "doc.sado_analytics_services.column__googleads__conversions_value": {"name": "column__googleads__conversions_value", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__conversions_value", "block_contents": "The total value of conversions.Gi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__cost": {"name": "column__googleads__cost", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__cost", "block_contents": "The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.Chi ph\u00ed qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__cost_per_all_conversions": {"name": "column__googleads__cost_per_all_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__cost_per_all_conversions", "block_contents": "The cost of ad interactions divided by all conversions.Chi ph\u00ed qu\u1ea3ng c\u00e1o chia cho to\u00e0n b\u1ed9 s\u1ed1 chuy\u1ec3n \u0111\u1ed5i (bao g\u1ed3m c\u1ea3 chuy\u1ec3n \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c gom trong nh\u00f3m)"}, "doc.sado_analytics_services.column__googleads__cost_per_conversion": {"name": "column__googleads__cost_per_conversion", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__cost_per_conversion", "block_contents": "The cost of ad interactions divided by conversions.Chi ph\u00ed qu\u1ea3ng c\u00e1o chia cho s\u1ed1 chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__cross_device_conversions": {"name": "column__googleads__cross_device_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__cross_device_conversions", "block_contents": "Conversions from when a customer clicks on a Google Ads ad on one device, then converts on a different device or browser. Cross-device conversions are already included in all_conversions.Chuy\u1ec3n \u0111\u1ed5i khi kh\u00e1ch h\u00e0ng nh\u1ea5n v\u00e0o qu\u1ea3ng c\u00e1o tr\u00ean m\u1ed9t thi\u1ebft b\u1ecb nh\u01b0ng th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i tr\u00ean thi\u1ebft b\u1ecb kh\u00e1c. \u0110\u00e3 \u0111\u01b0\u1ee3c bao g\u1ed3m trong to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__search_absolute_top_impression_share": {"name": "column__googleads__search_absolute_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_absolute_top_impression_share", "block_contents": "The percentage of the customer's Shopping or Search ad impressions that are shown in the most prominent Shopping position.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o t\u00ecm ki\u1ebfm ho\u1eb7c mua s\u1eafm \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb v\u1ecb tr\u00ed t\u1ed1t nh\u1ea5t."}, "doc.sado_analytics_services.column__googleads__search_budget_lost_absolute_top_impression_share": {"name": "column__googleads__search_budget_lost_absolute_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_budget_lost_absolute_top_impression_share", "block_contents": "The number estimating how often your ad wasn't the very first ad above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb t\u1ea1i v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean do ng\u00e2n s\u00e1ch th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__search_budget_lost_top_impression_share": {"name": "column__googleads__search_budget_lost_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_budget_lost_top_impression_share", "block_contents": "The number estimating how often your ad didn't show anywhere above the organic search results due to a low budget.\n\u01af\u1edbc t\u00ednh t\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o kh\u00f4ng \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb do ng\u00e2n s\u00e1ch th\u1ea5p."}, "doc.sado_analytics_services.column__googleads__currency_code": {"name": "column__googleads__currency_code", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__currency_code", "block_contents": "The currency in which the account operates. A subset of the currency codes from the ISO 4217 standard is supported.Lo\u1ea1i ti\u1ec1n t\u1ec7 \u0111\u01b0\u1ee3c t\u00ednh \u0111\u1ec3 v\u1eadn h\u00e0nh t\u00e0i kho\u1ea3n qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__budget": {"name": "column__googleads__budget", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__budget", "block_contents": "Ng\u00e2n s\u00e1ch qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__budget_period": {"name": "column__googleads__budget_period", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__budget_period", "block_contents": "Chu k\u1ef3 qu\u1ea3ng c\u00e1o (Daily...)"}, "doc.sado_analytics_services.column__googleads__date": {"name": "column__googleads__date", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__date", "block_contents": "Date to which metrics apply.Ng\u00e0y t\u00ednh ch\u1ec9 s\u1ed1"}, "doc.sado_analytics_services.column__googleads__device": {"name": "column__googleads__device", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__device", "block_contents": "Device to which metrics apply.Thi\u1ebft b\u1ecb"}, "doc.sado_analytics_services.column__googleads__engagements": {"name": "column__googleads__engagements", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__engagements", "block_contents": "The number of engagements. An engagement occurs when a viewer expands your Lightbox ad.S\u1ed1 l\u01b0\u1ee3ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. V\u1edbi qu\u1ea3ng c\u00e1o display s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng m\u1edf r\u1ed9ng qu\u1ea3ng c\u00e1o (Lightbox)"}, "doc.sado_analytics_services.column__googleads__impressions": {"name": "column__googleads__impressions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__impressions", "block_contents": "Count of how often your ad has appeared on a search results page or website on the Google Network.S\u1ed1 l\u01b0\u1ee3t hi\u1ec3n th\u1ecb c\u1ee7a qu\u1ea3ng c\u00e1o trong k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm ho\u1eb7c trang web thu\u1ed9c Google Network."}, "doc.sado_analytics_services.column__googleads__interactions": {"name": "column__googleads__interactions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__interactions", "block_contents": "The number of interactions. An interaction is the main user action associated with an ad format-clicks for text and shopping ads, views for video ads, and so on.S\u1ed1 l\u01b0\u1ee3t t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u1ea5n (click) ho\u1eb7c xem qu\u1ea3ng c\u00e1o video."}, "doc.sado_analytics_services.column__googleads__keyword": {"name": "column__googleads__keyword", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__keyword", "block_contents": "T\u1eeb kho\u00e1 t\u00ecm ki\u1ebfm."}, "doc.sado_analytics_services.column__googleads__match_type": {"name": "column__googleads__match_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__match_type", "block_contents": "The match type of the keyword.Ph\u01b0\u01a1ng ph\u00e1p so kh\u1edbp t\u1eeb kho\u00e1"}, "doc.sado_analytics_services.column__googleads__network_type": {"name": "column__googleads__network_type", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__network_type", "block_contents": "Ad network type.Ph\u00e2n lo\u1ea1i Network qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__search_term": {"name": "column__googleads__search_term", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_term", "block_contents": "The search term.C\u1ee5m t\u1eeb t\u00ecm ki\u1ebfm."}, "doc.sado_analytics_services.column__googleads__slot": {"name": "column__googleads__slot", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__slot", "block_contents": "Position of the ad.V\u1ecb tr\u00ed hi\u1ec3n th\u1ecb qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__top_impression_percentage": {"name": "column__googleads__top_impression_percentage", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__top_impression_percentage", "block_contents": "The percent of your ad impressions that are shown anywhere above the organic search results.T\u1ec9 l\u1ec7 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb ph\u00eda tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm."}, "doc.sado_analytics_services.column__googleads__value_per_all_conversions": {"name": "column__googleads__value_per_all_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__value_per_all_conversions", "block_contents": "The value of all conversions divided by the number of all conversions.T\u1ed5ng gi\u00e1 tr\u1ecb to\u00e0n b\u1ed9 chuy\u1ec3n \u0111\u1ed5i chia cho to\u00e0n b\u1ed9 s\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__value_per_conversion": {"name": "column__googleads__value_per_conversion", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__value_per_conversion", "block_contents": "The value of conversions divided by the number of conversions.Gi\u00e1 tr\u1ecb chuy\u1ec3n \u0111\u1ed5i tr\u00ean m\u1ed7i l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i."}, "doc.sado_analytics_services.column__googleads__video_quartile_p100_rate": {"name": "column__googleads__video_quartile_p100_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_quartile_p100_rate", "block_contents": "Percentage of impressions where the viewer watched all of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem to\u00e0n b\u1ed9 video qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__video_quartile_p25_rate": {"name": "column__googleads__video_quartile_p25_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_quartile_p25_rate", "block_contents": "Percentage of impressions where the viewer watched 25% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 25% video qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__video_quartile_p50_rate": {"name": "column__googleads__video_quartile_p50_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_quartile_p50_rate", "block_contents": "Percentage of impressions where the viewer watched 50% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 50% video qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__video_quartile_p75_rate": {"name": "column__googleads__video_quartile_p75_rate", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_quartile_p75_rate", "block_contents": "Percentage of impressions where the viewer watched 75% of your video.T\u1ec9 l\u1ec7 ng\u01b0\u1eddi d\u00f9ng xem 75% video qu\u1ea3ng c\u00e1o."}, "doc.sado_analytics_services.column__googleads__video_views": {"name": "column__googleads__video_views", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__video_views", "block_contents": "The number of times your video ads were viewed.S\u1ed1 l\u01b0\u1ee3t qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c xem."}, "doc.sado_analytics_services.column__googleads__view_status": {"name": "column__googleads__view_status", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__view_status", "block_contents": "Indicates whether the search term is currently one of your targeted or excluded keywords.C\u1ee5m t\u1eeb t\u00ecm ki\u1ebfm thu\u1ed9c nh\u00f3m t\u1eeb kho\u00e1 m\u1ee5c ti\u00eau hay lo\u1ea1i t\u1eeb"}, "doc.sado_analytics_services.column__googleads__search_top_impression_share": {"name": "column__googleads__search_top_impression_share", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__search_top_impression_share", "block_contents": "The impressions you've received in the top location (anywhere above the organic search results) compared to the estimated number of impressions you were eligible to receive in the top location.T\u1ec9 l\u1ec7 hi\u1ec3n th\u1ecb t\u1ea1i khu v\u1ef1c \u0111\u1ea7u (tr\u00ean k\u1ebft qu\u1ea3 t\u00ecm ki\u1ebfm) tr\u00ean t\u1ed5ng s\u1ed1 l\u01b0\u1ee3t tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n hi\u1ec7n th\u1ecb khu v\u1ef1c \u0111\u1ea7u."}, "doc.sado_analytics_services.column__googleads__relative_ctr": {"name": "column__googleads__relative_ctr", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__relative_ctr", "block_contents": "Your clickthrough rate (Ctr) divided by the average clickthrough rate of all advertisers on the websites that show your ads.T\u1ec9 l\u1ec7 nh\u1ea5p t\u01b0\u01a1ng \u0111\u1ed1i, t\u00ednh d\u1ef1a tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p tr\u00ean t\u1ec9 l\u1ec7 nh\u1ea5p trung b\u00ecnh c\u1ee7a c\u00e1c nh\u00e0 qu\u1ea3ng c\u00e1o kh\u00e1c tr\u00ean trang m\u00e0 qu\u1ea3ng c\u00e1o \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb."}, "doc.sado_analytics_services.column__googleads__view_through_conversions": {"name": "column__googleads__view_through_conversions", "resource_type": "doc", "package_name": "sado_analytics_services", "path": "staging/googleAds/_googleads__docs.md", "original_file_path": "models/staging/googleAds/_googleads__docs.md", "unique_id": "doc.sado_analytics_services.column__googleads__view_through_conversions", "block_contents": "The total number of view-through conversions. These happen when a customer sees an image or rich media ad, then later completes a conversion on your site without interacting with (for example, clicking on) another ad.S\u1ed1 l\u01b0\u1ee3t chuy\u1ec3n \u0111\u1ed5i t\u1eeb h\u00e0nh vi xem qu\u1ea3ng c\u00e1o. \u0110\u01b0\u1ee3c t\u00ednh khi ng\u01b0\u1eddi d\u00f9ng nh\u00ecn th\u1ea5y qu\u1ea3ng c\u00e1o v\u00e0 sau \u0111\u00f3 th\u1ef1c hi\u1ec7n chuy\u1ec3n \u0111\u1ed5i m\u00e0 kh\u00f4ng t\u01b0\u01a1ng t\u00e1c v\u1edbi qu\u1ea3ng c\u00e1o (bao g\u1ed3m c\u1ea3 qu\u1ea3ng c\u00e1o kh\u00e1c)"}, "doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {"exposure.sado_analytics_services.facebook_dashboard": {"name": "facebook_dashboard", "resource_type": "exposure", "package_name": "sado_analytics_services", "path": "exposures.yml", "original_file_path": "models/exposures.yml", "unique_id": "exposure.sado_analytics_services.facebook_dashboard", "fqn": ["sado_analytics_services", "facebook_dashboard"], "type": "dashboard", "owner": {"email": "lchien063@gmail.com", "name": "chienle"}, "description": "B\u00e1o c\u00e1o ch\u1ec9 s\u1ed1 facebook", "label": "B\u00e1o c\u00e1o Facebook - B&M", "maturity": "high", "meta": {}, "tags": ["facebook_ads", "offline_performance"], "config": {"enabled": true}, "unrendered_config": {"enabled": true}, "url": "https://headscloud.dev/projects/f688b398-d991-4533-a08c-529b76aa688c/dashboards/8604afc8-6d32-4bbe-b9bc-dcbb954aad25/", "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.facebook_dashboard", "model.sado_analytics_services.revenue_items", "model.sado_analytics_services.facebook_performance"]}, "refs": [{"name": "facebook_dashboard", "package": null, "version": null}, {"name": "revenue_items", "package": null, "version": null}, {"name": "facebook_performance", "package": null, "version": null}], "sources": [], "metrics": [], "created_at": 1732268179.6408446}, "exposure.sado_analytics_services.sales_dashboard": {"name": "sales_dashboard", "resource_type": "exposure", "package_name": "sado_analytics_services", "path": "exposures.yml", "original_file_path": "models/exposures.yml", "unique_id": "exposure.sado_analytics_services.sales_dashboard", "fqn": ["sado_analytics_services", "sales_dashboard"], "type": "dashboard", "owner": {"email": "lchien063@gmail.com", "name": "chienle"}, "description": "B\u00e1o c\u00e1o ch\u1ec9 s\u1ed1 kinh doanh", "label": "B\u00e1o c\u00e1o kinh doanh", "maturity": "high", "meta": {}, "tags": ["offline_performance", "sales"], "config": {"enabled": true}, "unrendered_config": {"enabled": true}, "url": "https://headscloud.dev/projects/f688b398-d991-4533-a08c-529b76aa688c/dashboards/67414d36-16cb-4e1a-bd7b-53164854d7e0", "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.revenue", "model.sado_analytics_services.revenue_items", "model.sado_analytics_services.rfm_movement"]}, "refs": [{"name": "revenue", "package": null, "version": null}, {"name": "revenue_items", "package": null, "version": null}, {"name": "rfm_movement", "package": null, "version": null}], "sources": [], "metrics": [], "created_at": 1732268179.6441689}, "exposure.sado_analytics_services.sales_dashboard2": {"name": "sales_dashboard2", "resource_type": "exposure", "package_name": "sado_analytics_services", "path": "exposures.yml", "original_file_path": "models/exposures.yml", "unique_id": "exposure.sado_analytics_services.sales_dashboard2", "fqn": ["sado_analytics_services", "sales_dashboard2"], "type": "dashboard", "owner": {"email": "lchien063@gmail.com", "name": "chienle"}, "description": "B\u00e1o c\u00e1o ch\u1ec9 s\u1ed1 kinh doanh2", "label": "B\u00e1o c\u00e1o kinh doanh m\u1edbi", "maturity": "high", "meta": {}, "tags": ["offline_performance", "sales"], "config": {"enabled": true}, "unrendered_config": {"enabled": true}, "url": "https://headscloud.dev/projects/f688b398-d991-4533-a08c-529b76aa688c/dashboards/0b62f888-3dfb-43e5-9d6b-97665d0223e6/view", "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.revenue", "model.sado_analytics_services.revenue_items", "model.sado_analytics_services.rfm_movement", "model.sado_analytics_services.sales_dashboard"]}, "refs": [{"name": "revenue", "package": null, "version": null}, {"name": "revenue_items", "package": null, "version": null}, {"name": "rfm_movement", "package": null, "version": null}, {"name": "sales_dashboard", "package": null, "version": null}], "sources": [], "metrics": [], "created_at": 1732268179.6470835}, "exposure.sado_analytics_services.customer_analysis": {"name": "customer_analysis", "resource_type": "exposure", "package_name": "sado_analytics_services", "path": "exposures.yml", "original_file_path": "models/exposures.yml", "unique_id": "exposure.sado_analytics_services.customer_analysis", "fqn": ["sado_analytics_services", "customer_analysis"], "type": "dashboard", "owner": {"email": "lchien063@gmail.com", "name": "chienle"}, "description": "B\u00e1o c\u00e1o kh\u00e1ch h\u00e0ng", "label": "B\u00e1o c\u00e1o kh\u00e1ch h\u00e0ng", "maturity": "high", "meta": {}, "tags": ["offline_performance", "customer_analysis"], "config": {"enabled": true}, "unrendered_config": {"enabled": true}, "url": "https://headscloud.dev/projects/f688b398-d991-4533-a08c-529b76aa688c/dashboards/e369fc15-569b-4b73-bbb2-e8019eb14d5a", "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.revenue", "model.sado_analytics_services.revenue_items", "model.sado_analytics_services.rfm_movement"]}, "refs": [{"name": "revenue", "package": null, "version": null}, {"name": "revenue_items", "package": null, "version": null}, {"name": "rfm_movement", "package": null, "version": null}], "sources": [], "metrics": [], "created_at": 1732268179.6498322}}, "metrics": {"metric.sado_analytics_services.fb_spend": {"name": "fb_spend", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_spend", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_spend"], "description": "", "label": "FB Ads Spend", "type": "simple", "type_params": {"measure": {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8571434, "group": null}, "metric.sado_analytics_services.fb_impresions": {"name": "fb_impresions", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_impresions", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_impresions"], "description": "", "label": "FB Ads Impressions", "type": "simple", "type_params": {"measure": {"name": "impressions", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "impressions", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8582923, "group": null}, "metric.sado_analytics_services.fb_clicks": {"name": "fb_clicks", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_clicks", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_clicks"], "description": "", "label": "FB Ads Clicks", "type": "simple", "type_params": {"measure": {"name": "clicks", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "clicks", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.859349, "group": null}, "metric.sado_analytics_services.fb_reach": {"name": "fb_reach", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_reach", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_reach"], "description": "", "label": "FB Ads Reach", "type": "simple", "type_params": {"measure": {"name": "reach", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "reach", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8604007, "group": null}, "metric.sado_analytics_services.fb_link_clicks": {"name": "fb_link_clicks", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_link_clicks", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_link_clicks"], "description": "", "label": "FB Ads Link Clicks", "type": "simple", "type_params": {"measure": {"name": "link_click", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "link_click", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8614752, "group": null}, "metric.sado_analytics_services.fb_post_engagement": {"name": "fb_post_engagement", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_post_engagement", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_post_engagement"], "description": "", "label": "FB Ads Post Engagment", "type": "simple", "type_params": {"measure": {"name": "post_engagement", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "post_engagement", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8625472, "group": null}, "metric.sado_analytics_services.fb_offline_conversion": {"name": "fb_offline_conversion", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_offline_conversion", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_offline_conversion"], "description": "", "label": "FB Ads Offline Conversions", "type": "simple", "type_params": {"measure": {"name": "offline_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "offline_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.863909, "group": null}, "metric.sado_analytics_services.fb_offline_conversion_value": {"name": "fb_offline_conversion_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_offline_conversion_value", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_offline_conversion_value"], "description": "", "label": "FB Ads Offline Conversions Value", "type": "simple", "type_params": {"measure": {"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.865305, "group": null}, "metric.sado_analytics_services.fb_online_conversion": {"name": "fb_online_conversion", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_online_conversion", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_online_conversion"], "description": "", "label": "FB Ads Online Conversion", "type": "simple", "type_params": {"measure": {"name": "online_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "online_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8666868, "group": null}, "metric.sado_analytics_services.fb_online_conversion_value": {"name": "fb_online_conversion_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_online_conversion_value", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_online_conversion_value"], "description": "", "label": "FB Ads Online Conversion Value", "type": "simple", "type_params": {"measure": {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8682413, "group": null}, "metric.sado_analytics_services.fb_meta_conversion": {"name": "fb_meta_conversion", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_meta_conversion", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_meta_conversion"], "description": "", "label": "FB Ads Onsite Conversion", "type": "simple", "type_params": {"measure": {"name": "meta_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "meta_conversion", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8696437, "group": null}, "metric.sado_analytics_services.fb_meta_conversion_value": {"name": "fb_meta_conversion_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_meta_conversion_value", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_meta_conversion_value"], "description": "", "label": "FB Ads Onsite Conversion Value", "type": "simple", "type_params": {"measure": {"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8710194, "group": null}, "metric.sado_analytics_services.fb_messages": {"name": "fb_messages", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.fb_messages", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "fb_messages"], "description": "", "label": "FB Ads Messages", "type": "simple", "type_params": {"measure": {"name": "messages", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "messages", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.872376, "group": null}, "metric.sado_analytics_services.roas": {"name": "roas", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.roas", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "roas"], "description": "", "label": "FB ROAS", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(fb_offline_conversion_value + fb_online_conversion_value + fb_meta_conversion_value)/fb_spend", "window": null, "grain_to_date": null, "metrics": [{"name": "fb_offline_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_online_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_meta_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_spend", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.fb_offline_conversion_value", "metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_spend"]}, "refs": [], "metrics": [], "created_at": 1732268179.874385, "group": null}, "metric.sado_analytics_services.online_roas": {"name": "online_roas", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.online_roas", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "online_roas"], "description": "", "label": "FB Online ROAS", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(fb_online_conversion_value + fb_meta_conversion_value)/fb_spend", "window": null, "grain_to_date": null, "metrics": [{"name": "fb_online_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_meta_conversion_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "fb_spend", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_spend"]}, "refs": [], "metrics": [], "created_at": 1732268179.8760016, "group": null}, "metric.sado_analytics_services.spend_7d": {"name": "spend_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.spend_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "spend_7d"], "description": "", "label": "FB spend 7d", "type": "cumulative", "type_params": {"measure": {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8777924, "group": null}, "metric.sado_analytics_services.offline_cv_7d": {"name": "offline_cv_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.offline_cv_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "offline_cv_7d"], "description": "", "label": "Offline CV 7d", "type": "cumulative", "type_params": {"measure": {"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8788996, "group": null}, "metric.sado_analytics_services.online_cv_7d": {"name": "online_cv_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.online_cv_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "online_cv_7d"], "description": "", "label": "Online CV 7d", "type": "cumulative", "type_params": {"measure": {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8799803, "group": null}, "metric.sado_analytics_services.meta_cv_7d": {"name": "meta_cv_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.meta_cv_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "meta_cv_7d"], "description": "", "label": "Meta CV 7d", "type": "cumulative", "type_params": {"measure": {"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "meta_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": {"count": 7, "granularity": "day"}, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.facebook_performance"]}, "refs": [], "metrics": [], "created_at": 1732268179.8810601, "group": null}, "metric.sado_analytics_services.roas_7d": {"name": "roas_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.roas_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "roas_7d"], "description": "", "label": "FB ROAS 7d", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(offline_cv_7d + online_cv_7d+meta_cv_7d)/spend_7d", "window": null, "grain_to_date": null, "metrics": [{"name": "offline_cv_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "online_cv_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "spend_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"]}, "refs": [], "metrics": [], "created_at": 1732268179.8826675, "group": null}, "metric.sado_analytics_services.online_roas_7d": {"name": "online_roas_7d", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "metric.sado_analytics_services.online_roas_7d", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "online_roas_7d"], "description": "", "label": "FB ROAS 7d", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "offline_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "online_conversion_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "spend", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "(online_cv_7d+meta_cv_7d)/spend_7d", "window": null, "grain_to_date": null, "metrics": [{"name": "offline_cv_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "online_cv_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "spend_7d", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"]}, "refs": [], "metrics": [], "created_at": 1732268179.8839803, "group": null}, "metric.sado_analytics_services.gross_revenue": {"name": "gross_revenue", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.gross_revenue", "fqn": ["sado_analytics_services", "marts", "sales", "gross_revenue"], "description": "", "label": "Gross Revenue", "type": "simple", "type_params": {"measure": {"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1732268180.3464315, "group": null}, "metric.sado_analytics_services.invoice_value": {"name": "invoice_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.invoice_value", "fqn": ["sado_analytics_services", "marts", "sales", "invoice_value"], "description": "", "label": "Value Sold", "type": "simple", "type_params": {"measure": {"name": "total_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "total_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1732268180.3478467, "group": null}, "metric.sado_analytics_services.invoice_count": {"name": "invoice_count", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.invoice_count", "fqn": ["sado_analytics_services", "marts", "sales", "invoice_count"], "description": "", "label": "No of Invoice", "type": "simple", "type_params": {"measure": {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1732268180.3492734, "group": null}, "metric.sado_analytics_services.return_count": {"name": "return_count", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.return_count", "fqn": ["sado_analytics_services", "marts", "sales", "return_count"], "description": "", "label": "No of Return", "type": "simple", "type_params": {"measure": {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'return'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1732268180.3503644, "group": null}, "metric.sado_analytics_services.invoice_paid_value": {"name": "invoice_paid_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.invoice_paid_value", "fqn": ["sado_analytics_services", "marts", "sales", "invoice_paid_value"], "description": "", "label": "Paid Value", "type": "simple", "type_params": {"measure": {"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1732268180.3514676, "group": null}, "metric.sado_analytics_services.returned_value": {"name": "returned_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.returned_value", "fqn": ["sado_analytics_services", "marts", "sales", "returned_value"], "description": "", "label": "Returned Value", "type": "simple", "type_params": {"measure": {"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'return'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1732268180.352563, "group": null}, "metric.sado_analytics_services.order_discounted_value": {"name": "order_discounted_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.order_discounted_value", "fqn": ["sado_analytics_services", "marts", "sales", "order_discounted_value"], "description": "", "label": "Order Discounted Value", "type": "simple", "type_params": {"measure": {"name": "order_discount", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "order_discount", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue"]}, "refs": [], "metrics": [], "created_at": 1732268180.3539872, "group": null}, "metric.sado_analytics_services.aov": {"name": "aov", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.aov", "fqn": ["sado_analytics_services", "marts", "sales", "aov"], "description": "", "label": "AOV", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "total_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "invoice_value/invoice_count", "window": null, "grain_to_date": null, "metrics": [{"name": "invoice_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "invoice_count", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.invoice_value", "metric.sado_analytics_services.invoice_count"]}, "refs": [], "metrics": [], "created_at": 1732268180.3552241, "group": null}, "metric.sado_analytics_services.pending_invoice": {"name": "pending_invoice", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.pending_invoice", "fqn": ["sado_analytics_services", "marts", "sales", "pending_invoice"], "description": "", "label": "Pending Income Value", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "total_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "received_transaction_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "invoice_value - invoice_paid_value", "window": null, "grain_to_date": null, "metrics": [{"name": "invoice_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "invoice_paid_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.invoice_value", "metric.sado_analytics_services.invoice_paid_value"]}, "refs": [], "metrics": [], "created_at": 1732268180.3567762, "group": null}, "metric.sado_analytics_services.pct_returned": {"name": "pct_returned", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "metric.sado_analytics_services.pct_returned", "fqn": ["sado_analytics_services", "marts", "sales", "pct_returned"], "description": "", "label": "Returned Percentage", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "return/invoice", "window": null, "grain_to_date": null, "metrics": [{"name": "return_count", "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'return'\n"}, "alias": "return", "offset_window": null, "offset_to_grain": null}, {"name": "invoice_count", "filter": {"where_sql_template": "{{Dimension('transaction__transaction_type')}} = 'invoice'\n"}, "alias": "invoice", "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.return_count", "metric.sado_analytics_services.invoice_count"]}, "refs": [], "metrics": [], "created_at": 1732268180.3590648, "group": null}, "metric.sado_analytics_services.qty_sold": {"name": "qty_sold", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.qty_sold", "fqn": ["sado_analytics_services", "marts", "sales", "qty_sold"], "description": "", "label": "Quantity Sold", "type": "simple", "type_params": {"measure": {"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_item__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_items"]}, "refs": [], "metrics": [], "created_at": 1732268180.3694372, "group": null}, "metric.sado_analytics_services.qty_returned": {"name": "qty_returned", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.qty_returned", "fqn": ["sado_analytics_services", "marts", "sales", "qty_returned"], "description": "", "label": "Quantity Returned", "type": "simple", "type_params": {"measure": {"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_item__transaction_type')}} = 'return'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_items"]}, "refs": [], "metrics": [], "created_at": 1732268180.370608, "group": null}, "metric.sado_analytics_services.item_discounted_value": {"name": "item_discounted_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.item_discounted_value", "fqn": ["sado_analytics_services", "marts", "sales", "item_discounted_value"], "description": "", "label": "Item Discounted Value", "type": "simple", "type_params": {"measure": {"name": "discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_item__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_items"]}, "refs": [], "metrics": [], "created_at": 1732268180.3720412, "group": null}, "metric.sado_analytics_services.item_sold_value": {"name": "item_sold_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.item_sold_value", "fqn": ["sado_analytics_services", "marts", "sales", "item_sold_value"], "description": "", "label": "Item Sold Value", "type": "simple", "type_params": {"measure": {"name": "item_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "item_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": {"where_sql_template": "{{Dimension('transaction_item__transaction_type')}} = 'invoice'\n"}, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.revenue_items"]}, "refs": [], "metrics": [], "created_at": 1732268180.3734806, "group": null}, "metric.sado_analytics_services.avg_discount_ratio": {"name": "avg_discount_ratio", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.avg_discount_ratio", "fqn": ["sado_analytics_services", "marts", "sales", "avg_discount_ratio"], "description": "", "label": "Average Discount Ratio", "type": "ratio", "type_params": {"measure": null, "input_measures": [{"name": "discounted_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "item_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": {"name": "item_discounted_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, "denominator": {"name": "item_sold_value", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.item_discounted_value", "metric.sado_analytics_services.item_sold_value"]}, "refs": [], "metrics": [], "created_at": 1732268180.3749328, "group": null}, "metric.sado_analytics_services.items_per_transaction": {"name": "items_per_transaction", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "metric.sado_analytics_services.items_per_transaction", "fqn": ["sado_analytics_services", "marts", "sales", "items_per_transaction"], "description": "", "label": "Items per Transaction", "type": "derived", "type_params": {"measure": null, "input_measures": [{"name": "num_items", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, {"name": "transaction_count", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": "qty_sold/invoice_count", "window": null, "grain_to_date": null, "metrics": [{"name": "qty_sold", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}, {"name": "invoice_count", "filter": null, "alias": null, "offset_window": null, "offset_to_grain": null}]}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["metric.sado_analytics_services.qty_sold", "metric.sado_analytics_services.invoice_count"]}, "refs": [], "metrics": [], "created_at": 1732268180.3764553, "group": null}, "metric.sado_analytics_services.num_customers_rfm": {"name": "num_customers_rfm", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.num_customers_rfm", "fqn": ["sado_analytics_services", "marts", "sales", "num_customers_rfm"], "description": "", "label": "No. Customers Segmented", "type": "simple", "type_params": {"measure": {"name": "num_customers", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "num_customers", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1732268180.4064982, "group": null}, "metric.sado_analytics_services.avg_monetary_value": {"name": "avg_monetary_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.avg_monetary_value", "fqn": ["sado_analytics_services", "marts", "sales", "avg_monetary_value"], "description": "", "label": "Avg Monetary Value", "type": "simple", "type_params": {"measure": {"name": "avg_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "avg_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1732268180.4075785, "group": null}, "metric.sado_analytics_services.med_monetary_value": {"name": "med_monetary_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.med_monetary_value", "fqn": ["sado_analytics_services", "marts", "sales", "med_monetary_value"], "description": "", "label": "Median Monetary Value", "type": "simple", "type_params": {"measure": {"name": "median_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "median_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1732268180.4089699, "group": null}, "metric.sado_analytics_services.total_monetary_value": {"name": "total_monetary_value", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.total_monetary_value", "fqn": ["sado_analytics_services", "marts", "sales", "total_monetary_value"], "description": "", "label": "Total Monetary Value", "type": "simple", "type_params": {"measure": {"name": "total_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "total_monetary_value", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1732268180.4093623, "group": null}, "metric.sado_analytics_services.avg_recency": {"name": "avg_recency", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.avg_recency", "fqn": ["sado_analytics_services", "marts", "sales", "avg_recency"], "description": "", "label": "Avg Recency", "type": "simple", "type_params": {"measure": {"name": "avg_recency", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "avg_recency", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1732268180.4104142, "group": null}, "metric.sado_analytics_services.median_recency": {"name": "median_recency", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.median_recency", "fqn": ["sado_analytics_services", "marts", "sales", "median_recency"], "description": "", "label": "Median Recency", "type": "simple", "type_params": {"measure": {"name": "median_recency", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "median_recency", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1732268180.4114573, "group": null}, "metric.sado_analytics_services.avg_freq": {"name": "avg_freq", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.avg_freq", "fqn": ["sado_analytics_services", "marts", "sales", "avg_freq"], "description": "", "label": "Avg Purchasing Frequency", "type": "simple", "type_params": {"measure": {"name": "avg_freq", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "avg_freq", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1732268180.4124937, "group": null}, "metric.sado_analytics_services.median_freq": {"name": "median_freq", "resource_type": "metric", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "metric.sado_analytics_services.median_freq", "fqn": ["sado_analytics_services", "marts", "sales", "median_freq"], "description": "", "label": "Median Purchasing Frequency", "type": "simple", "type_params": {"measure": {"name": "median_freq", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}, "input_measures": [{"name": "median_freq", "filter": null, "alias": null, "join_to_timespine": false, "fill_nulls_with": null}], "numerator": null, "denominator": null, "expr": null, "window": null, "grain_to_date": null, "metrics": []}, "filter": null, "metadata": null, "meta": {}, "tags": [], "config": {"enabled": true, "group": null}, "unrendered_config": {}, "sources": [], "depends_on": {"macros": [], "nodes": ["semantic_model.sado_analytics_services.rfm_movement"]}, "refs": [], "metrics": [], "created_at": 1732268180.4135542, "group": null}}, "groups": {}, "selectors": {}, "disabled": {"model.sado_analytics_services.facebook_performance__by_regions": [{"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "facebook_performance__by_regions", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/facebook_performance__by_regions.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance__by_regions.sql", "unique_id": "model.sado_analytics_services.facebook_performance__by_regions", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_performance__by_regions"], "alias": "facebook_performance__by_regions", "checksum": {"name": "sha256", "checksum": "a2e17dae360268a632fde2dc0c5f35070753cb378b9c49d36410232415aee8c5"}, "config": {"enabled": false, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily"], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id": {"name": "row_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region": {"name": "region", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/facebook_performance__by_regions.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": "row_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily"], "enabled": false}, "created_at": 1732268179.9040065, "config_call_dict": {"materialized": "incremental", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": "row_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance__by_regions`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date_start',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'merge',\n  unique_key = 'row_id',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'daily'],\n  enabled = false\n) }}\n\nSELECT\n  {{ dbt_utils.generate_surrogate_key(['account_id','date_start','region']) }} AS row_id,\n  account_id,\n  date_start,\n  region,\n  SUM(impressions) impressions,\n  SUM(spend) spend,\n  SUM(clicks) clicks,\n  SUM(reach) reach,\n  SUM(link_click) link_click,\n  SUM(post_engagement) post_engagement,\n  SUM(offline_conversion_purchase) offline_conversion_purchase,\n  SUM(offline_conversion_purchase_value) offline_conversion_purchase_value,\n  SUM(pixel_purchase) pixel_purchase,\n  SUM(pixel_purchase_value) pixel_purchase_value,\n  SUM(messaging_conversation_started_7d) messaging_conversation_started_7d\nFROM\n  {{ ref('stg_facebookads__regioninsights') }}\n  {% if is_incremental() %}\n    where date_start >= date_add(date(_dbt_max_partition), interval -3 day)\n  {% endif %}\n  {{ dbt_utils.group_by(4) }}", "language": "sql", "refs": [{"name": "stg_facebookads__regioninsights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.facebook_performance__by_audience": [{"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "facebook_performance__by_audience", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/facebook_performance__by_audience.sql", "original_file_path": "models/marts/marketing/facebook/facebook_performance__by_audience.sql", "unique_id": "model.sado_analytics_services.facebook_performance__by_audience", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_performance__by_audience"], "alias": "facebook_performance__by_audience", "checksum": {"name": "sha256", "checksum": "868ef15cdf46e5e3ada310fbc07f1aca10a98e4418678f8aed7571ebfc97818d"}, "config": {"enabled": false, "alias": null, "schema": "marketing", "database": null, "tags": ["incremental", "daily"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "row_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily"], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date_start": {"name": "date_start", "description": "", "meta": {"dimension": {"type": "date", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "messaging_conversation_started_7d": {"name": "messaging_conversation_started_7d", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "row_id": {"name": "row_id", "description": "unique id for each record", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "age": {"name": "age", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/facebook/facebook_performance__by_audience.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": "row_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily"], "enabled": false}, "created_at": 1732268179.9107158, "config_call_dict": {"materialized": "incremental", "partition_by": {"field": "date_start", "data_type": "date", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": "row_id", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance__by_audience`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date_start',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'merge',\n  unique_key = 'row_id',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'daily'],\n  enabled = false\n) }}\n\nSELECT\n  {{ dbt_utils.generate_surrogate_key(['account_id','date_start','age','gender']) }} AS row_id,\n  account_id,\n  date_start,\n  age,\n  gender,\n  SUM(impressions) impressions,\n  SUM(spend) spend,\n  SUM(clicks) clicks,\n  SUM(reach) reach,\n  SUM(link_click) link_click,\n  SUM(post_engagement) post_engagement,\n  SUM(offline_conversion_purchase) offline_conversion_purchase,\n  SUM(offline_conversion_purchase_value) offline_conversion_purchase_value,\n  SUM(pixel_purchase) pixel_purchase,\n  SUM(pixel_purchase_value) pixel_purchase_value,\n  SUM(messaging_conversation_started_7d) messaging_conversation_started_7d\nFROM\n  {{ ref('stg_facebookads__audienceinsights') }}\n  {% if is_incremental() %}\n    where date_start >= date_add(date(_dbt_max_partition), interval -3 day)\n  {% endif %}\n  {{ dbt_utils.group_by(5) }}", "language": "sql", "refs": [{"name": "stg_facebookads__audienceinsights", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.generate_surrogate_key", "macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.dim__web_items": [{"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "dim__web_items", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/web_analytics/dim__web_items.sql", "original_file_path": "models/marts/marketing/web_analytics/dim__web_items.sql", "unique_id": "model.sado_analytics_services.dim__web_items", "fqn": ["sado_analytics_services", "marts", "marketing", "web_analytics", "dim__web_items"], "alias": "dim__web_items", "checksum": {"name": "sha256", "checksum": "388b82f9a9a53a710d0d3cffad7fbc6300ce2b3c0e1acf6b01fce837b48b8152"}, "config": {"enabled": false, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "a dimension table that contains information about the products available on the website", "columns": {"product_code": {"name": "product_code", "description": "The unique identifier for each product", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "product_name": {"name": "product_name", "description": "The name of the product.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "category": {"name": "category", "description": "The category to which the product belongs. ", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "parent_category": {"name": "parent_category", "description": "The 'parent_category' column represents the main category under which a product falls.", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "sub_productline": {"name": "sub_productline", "description": "The 'sub_productline' column represents the subcategory of the product line", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}, "product_line": {"name": "product_line", "description": "The 'product_line' column represents the specific product line to which a product belongs", "meta": {"dimension": {"type": "string"}}, "data_type": "STRING", "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/web_analytics/dim__web_items.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "marketing", "enabled": false}, "created_at": 1732268180.0650053, "config_call_dict": {"materialized": "table", "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`dim__web_items`", "raw_code": "{{\n  config(\n    materialized = 'table',\n    enabled = false\n    )\n}}\n\nWITH products AS (\n    SELECT\n        product_name,\n        product_code,\n        categories.id AS category_id\n    FROM\n        {{ ref(\"stg_5sfashion__products\") }}\n        LEFT JOIN unnest(categories) categories\n    WHERE\n        product_code IS NOT NULL\n),\ncategories AS (\n    SELECT\n        *\n    FROM\n        {{ ref(\"stg_5sfashion__categories\") }}\n        where  product_line not in ('B\u1ed8 S\u01afU T\u1eacP')\n)\nSELECT\n    product_code,\n    product_name,\n    coalesce(C.category,'(Ch\u01b0a ph\u00e2n lo\u1ea1i)') as category,\n    coalesce(C.parent_category,'(Ch\u01b0a ph\u00e2n lo\u1ea1i)') as parent_category,\n    coalesce(C.sub_productline, '(Ch\u01b0a ph\u00e2n lo\u1ea1i)') as sub_productline,\n    coalesce(C.product_line, '(Ch\u01b0a ph\u00e2n lo\u1ea1i)') as product_line,\nFROM\n    products p\n    LEFT JOIN categories C\n    ON p.category_id = C.category_id \nqualify ROW_NUMBER() over (\n        PARTITION BY product_code\n        ORDER BY\n            C.product_line_depth DESC,\n            C.sub_productline_depth DESC,\n            C.depth DESC\n    ) = 1", "language": "sql", "refs": [{"name": "stg_5sfashion__products", "package": null, "version": null}, {"name": "stg_5sfashion__categories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.tickets": [{"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "tickets", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/contact_center/tickets.sql", "original_file_path": "models/marts/marketing/contact_center/tickets.sql", "unique_id": "model.sado_analytics_services.tickets", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "tickets"], "alias": "tickets", "checksum": {"name": "sha256", "checksum": "0c1019a8c48ce9c7804a3220174dea12742b506144ed898a6c05610153341581"}, "config": {"enabled": false, "alias": null, "schema": "marketing", "database": null, "tags": ["caresoft", "fact", "incremental", "inactive"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${tickets.created_at})", "fields": ["date", "month_name", "year_month", "period", "no_days", "period_code"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.id} = ${tickets.assignee_id}", "fields": ["id", "group_name", "username"]}, {"join": "stg_caresoft__contacts", "sql_on": "${stg_caresoft__contacts.contact_id} = ${tickets.contact_id}", "fields": ["contact_id", "created_at", "contact_type"]}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "ticket_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "created_at", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "incremental", "inactive"], "description": "", "columns": {"ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_tickets": {"type": "count_distinct", "label": "No. Tickets", "group_label": "Contact Center Metrics", "compact": "thousands"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_id": {"name": "assignee_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_agents": {"type": "count_distinct", "label": "No. Agents", "group_label": "Contact Center Metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_contacts_engaged": {"type": "count_distinct", "label": "No. Contacts", "group_label": "Contact Center Metrics"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_subject": {"name": "ticket_subject", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_status": {"name": "ticket_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source": {"name": "ticket_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_freq": {"name": "engagement_freq", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_details": {"name": "service_details", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "procedure": {"name": "procedure", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sales_details": {"name": "sales_details", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee": {"name": "employee", "description": "", "meta": {"dimension": {"type": "string", "sql": "coalesce(${TABLE}.employee, ${stg_caresoft__agents.username})"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_category": {"name": "engagement_category", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_id": {"name": "ad_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_name": {"name": "ad_name", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "utm_campaign": {"name": "utm_campaign", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "utm_source": {"name": "utm_source", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "utm_medium": {"name": "utm_medium", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${tickets.created_at})", "fields": ["date", "month_name", "year_month", "period", "no_days", "period_code"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.id} = ${tickets.assignee_id}", "fields": ["id", "group_name", "username"]}, {"join": "stg_caresoft__contacts", "sql_on": "${stg_caresoft__contacts.contact_id} = ${tickets.contact_id}", "fields": ["contact_id", "created_at", "contact_type"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/contact_center/tickets.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${tickets.created_at})", "fields": ["date", "month_name", "year_month", "period", "no_days", "period_code"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.id} = ${tickets.assignee_id}", "fields": ["id", "group_name", "username"]}, {"join": "stg_caresoft__contacts", "sql_on": "${stg_caresoft__contacts.contact_id} = ${tickets.contact_id}", "fields": ["contact_id", "created_at", "contact_type"]}]}, "unique_key": "ticket_id", "partition_by": {"field": "created_at", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["caresoft", "fact", "incremental", "inactive"], "enabled": false}, "created_at": 1732268180.2515337, "config_call_dict": {"materialized": "incremental", "unique_key": "ticket_id", "partition_by": {"field": "created_at", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["caresoft", "fact", "incremental", "inactive"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`tickets`", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key='ticket_id',\n        partition_by ={ 'field': 'created_at',\n        'data_type': 'timestamp',\n        'granularity': 'day' },\n        incremental_strategy = 'insert_overwrite',\n        on_schema_change = 'sync_all_columns',\n        tags=['caresoft','fact','incremental','inactive'],\n        enabled=false\n    )\n}}\n\n{% set label_mapping = {\n\"T\u1ea7n su\u1ea5t t\u01b0\u01a1ng t\u00e1c\":\"engagement_freq\",\n\"Chi ti\u1ebft c\u00f4ng vi\u1ec7c\":\"service_details\",\n\"Ti\u1ebfn tr\u00ecnh t\u01b0 v\u1ea5n\":\"procedure\",\n\"Chi ti\u1ebft b\u00e1n h\u00e0ng\":\"sales_details\",\n\"Nh\u00e2n vi\u00ean x\u1eed l\u00fd\":\"employee\",\n\"Ph\u00e2n lo\u1ea1i t\u01b0\u01a1ng t\u00e1c\":\"engagement_category\",\n}%}\n{% set tags = ['ad_id','ad_name','utm_campaign','utm_source','utm_medium']%}\n\nwith unnested as (\n select\nticket_id,\nassignee_id,\nrequester_id as contact_id,\ncampaign_id,\nticket_subject,\nticket_status,\ncreated_at,\nupdated_at,\nticket_source,\ncf.custom_field_label as custom_field_label,\ncf.value_label as custom_field_value,\nregexp_extract(tags.name,r'^([a-z\\-_]+)[\\:\\-\\.]\\s?.*$') as tag_key,\nregexp_extract(tags.name,r'^[a-z\\-_]+[\\:\\-\\.]\\s?(.*)$') as tag_value,\nfrom {{ref('stg_caresoft__tickets')}}\nleft join unnest(custom_fields) custom_fields\nleft join unnest(tags) tags\nleft join {{ref(\"stg_caresoft__ticket_custom_fields\")}} cf on safe_cast(custom_fields.id as int64) = cf.custom_field_id and safe_cast(custom_fields.value as int64) = cf.value_id\n\n{% if is_incremental() %}\n                WHERE\n                      date(created_at) >= date(_dbt_max_partition)\n\n                   OR date(created_at) >= date_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}\n\n),\npivot_custom_fields as (\n    select * \n    from unnested\n    pivot (\n    any_value(custom_field_value) for custom_field_label in (\n        {%for key, value in label_mapping.items()%}\n            '{{key}}' as {{value}} {{ ',' if not loop.last}}\n        {%endfor%}\n    )\n)\n),\n\npivot_tags as (\n    select * \n    from pivot_custom_fields\n     pivot (\n    any_value(tag_value) for tag_key in (\n        {%for value in tags%}\n            '{{value}}' {{ ',' if not loop.last}}\n        {%endfor%}\n    )\n)\n)\n\nselect * from pivot_tags", "language": "sql", "refs": [{"name": "stg_caresoft__tickets", "package": null, "version": null}, {"name": "stg_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.engagements_details": [{"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "engagements_details", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/marketing/contact_center/engagements_details.sql", "original_file_path": "models/marts/marketing/contact_center/engagements_details.sql", "unique_id": "model.sado_analytics_services.engagements_details", "fqn": ["sado_analytics_services", "marts", "marketing", "contact_center", "engagements_details"], "alias": "engagements_details", "checksum": {"name": "sha256", "checksum": "17aae8cf700609a78b61666877aa9dc4dae599bf8295120617c89e900d57129c"}, "config": {"enabled": false, "alias": null, "schema": "marketing", "database": null, "tags": ["caresoft", "fact", "incremental", "inactive"], "meta": {"joins": [{"join": "tickets", "sql_on": "${engagements_details.ticket_id} = ${tickets.ticket_id}"}, {"join": "stg_caresoft__contacts", "sql_on": "${engagements_details.customer_id} = ${stg_caresoft__contacts.contact_id}"}, {"join": "calendar", "sql_on": "date(${engagements_details.start_time}) = ${calendar.date}", "fields": ["date", "month_name", "year_month", "period", "period_code", "no_days"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.agent_id} = ${engagements_details.agent_id}"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "engagement_id", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "start_time", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "incremental", "inactive"], "description": "T\u1ed5ng h\u1ee3p t\u01b0\u01a1ng t\u00e1c (g\u1ecdi & chat) th\u00f4ng qua caresoft", "columns": {"ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_time": {"name": "start_time", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_time": {"name": "end_time", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_id": {"name": "agent_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_id": {"name": "engagement_id", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_status": {"name": "engagement_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_type": {"name": "engagement_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_duration": {"name": "engagement_duration", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_duration": {"type": "average", "label": "Avg Engaged Duration", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wait_duration": {"name": "wait_duration", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_avg_duration": {"type": "average", "label": "Avg Engaged Duration", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "missed_reason": {"name": "missed_reason", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "engagement_channel": {"name": "engagement_channel", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "tickets", "sql_on": "${engagements_details.ticket_id} = ${tickets.ticket_id}"}, {"join": "stg_caresoft__contacts", "sql_on": "${engagements_details.customer_id} = ${stg_caresoft__contacts.contact_id}"}, {"join": "calendar", "sql_on": "date(${engagements_details.start_time}) = ${calendar.date}", "fields": ["date", "month_name", "year_month", "period", "period_code", "no_days"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.agent_id} = ${engagements_details.agent_id}"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/marketing/contact_center/engagements_details.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "marketing", "meta": {"joins": [{"join": "tickets", "sql_on": "${engagements_details.ticket_id} = ${tickets.ticket_id}"}, {"join": "stg_caresoft__contacts", "sql_on": "${engagements_details.customer_id} = ${stg_caresoft__contacts.contact_id}"}, {"join": "calendar", "sql_on": "date(${engagements_details.start_time}) = ${calendar.date}", "fields": ["date", "month_name", "year_month", "period", "period_code", "no_days"]}, {"join": "stg_caresoft__agents", "sql_on": "${stg_caresoft__agents.agent_id} = ${engagements_details.agent_id}"}]}, "unique_key": "engagement_id", "partition_by": {"field": "start_time", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["caresoft", "fact", "incremental", "inactive"], "enabled": false}, "created_at": 1732268180.2154171, "config_call_dict": {"materialized": "incremental", "unique_key": "engagement_id", "partition_by": {"field": "start_time", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["caresoft", "fact", "incremental", "inactive"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`engagements_details`", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key='engagement_id',\n        partition_by ={ 'field': 'start_time',\n        'data_type': 'timestamp',\n        'granularity': 'day' },\n        incremental_strategy = 'insert_overwrite',\n        on_schema_change = 'sync_all_columns',\n        tags=['caresoft','fact','incremental','inactive'],\n        enabled=false\n    )\n}}\n\nselect\nticket_id,\ncustomer_id,\nsafe_cast(service_id as int64) service_id,\nstart_time,\nend_time,\nsafe_cast(agent_id as int64) agent_id,\ncall_id as engagement_id,\ncall_status as engagement_status,\ncase call_type \n    when 0 then 'call in'\n    when 1 then 'call out'\n    when 3 then 'IVR call' \nend as engagement_type,\nunix_seconds(parse_timestamp('%H:%M:%S',talk_time)) as engagement_duration,\nunix_seconds(parse_timestamp('%H:%M:%S',wait_time)) as wait_duration,\nmissed_reason,\n'hotline' as engagement_channel,\nfrom \n{{ref(\"stg_caresoft__calls\")}} calls\n{% if is_incremental() %}\n    WHERE date(start_time) >= date_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}\n\nunion all\n\nselect\nticket_id,\ncustomer_id,\nservice_id,\ntimestamp(start_time) start_time,\ntimestamp(end_time) end_time,\nsafe_cast(agents.id as int64) agent_id,\nconversation_id as engagement_id,\ncase chat_status \n    when 'LBL_CHAT_STATUS_MISS' then 'miss'\n    when 'LBL_CHAT_STATUS_MEET' then 'metAgent'\n end as engagement_status,\nconversation_type as engagement_type,\nchat_duration as engagement_duration,\n3600 * cast(regexp_extract(wait_time, r'^\\d*') as int64) + unix_seconds(parse_timestamp('%H:%M:%S',regexp_replace('44:01:35', r'^\\d*', '00'))) as wait_duration,\ncast(null as string) missed_reason,\nconversation_type as engagement_channel,\n\nfrom \n{{ref(\"stg_caresoft__chats\")}} chats\nleft join {{ref(\"stg_caresoft__agents\")}} agents on agents.email = chats.agent_email\n\n{% if is_incremental() %}\n                WHERE\n                      date(start_time) >= date(_dbt_max_partition)\n\n                   OR date(start_time) >= date_SUB(CURRENT_DATE(), INTERVAL 2 DAY)\n{% endif %}", "language": "sql", "refs": [{"name": "stg_caresoft__calls", "package": null, "version": null}, {"name": "stg_caresoft__chats", "package": null, "version": null}, {"name": "stg_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.dim__offline_stores": [{"database": "agile-scheme-394814", "schema": "dbt_prod_dimensions", "name": "dim__offline_stores", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/dimensions/dim__offline_stores.sql", "original_file_path": "models/marts/dimensions/dim__offline_stores.sql", "unique_id": "model.sado_analytics_services.dim__offline_stores", "fqn": ["sado_analytics_services", "marts", "dimensions", "dim__offline_stores"], "alias": "dim__offline_stores", "checksum": {"name": "sha256", "checksum": "a783defcf400a3ea9396f9bdc9c1f771e21c483ab211ac374df044a03ec6f2f1"}, "config": {"enabled": false, "alias": null, "schema": "dimensions", "database": null, "tags": ["table", "dimension", "sdc"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "dimension", "sdc"], "description": "Danh s\u00e1ch CH offline t\u1ed3n t\u1ea1i tr\u00ean kiotviet, map v\u1edbi th\u00f4ng tin page ch\u1ea1y ads & ng\u01b0\u1eddi ch\u1ea1y ads t\u01b0\u01a1ng \u1ee9ng", "columns": {"branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_name": {"name": "branch_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "asm_name": {"name": "asm_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone": {"name": "phone", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "local_page": {"name": "local_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region_page": {"name": "region_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fb_ads_pic": {"name": "fb_ads_pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "province": {"name": "province", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "region": {"name": "region", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/dimensions/dim__offline_stores.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "dimensions", "tags": ["table", "dimension", "sdc"], "enabled": false}, "created_at": 1732268180.2917411, "config_call_dict": {"tags": ["table", "dimension", "sdc"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_dimensions`.`dim__offline_stores`", "raw_code": "{{\n  config(\n    tags=['table','dimension','sdc'],\n    enabled = False\n    )\n}}\n\nWITH branches AS (\n    SELECT\n        *\n    FROM\n        {{ ref(\"stg_kiotviet__branches\") }}\n    WHERE\n        branch_name LIKE '5S%'\n        and branch_id not in (1000087891)\n),\n\nasm_list as ( \nselect \n    distinct\n    asm_name,\n    store_name,\n    local_page,\n    region_page,\n    pic as fb_ads_pic,\n    phone, \n    email,\n    province,\n    region,\nfrom {{ ref(\"stg_gsheet__asms\") }}\n)\n\nSELECT\n    asm_list.asm_name,\n    branches.branch_id,\n    branches.branch_name,\n    asm_list.phone,\n    asm_list.email,\n    asm_list.local_page,\n    asm_list.region_page,\n    asm_list.fb_ads_pic,\n    asm_list.province,\n    asm_list.region,\nFROM\n    asm_list\n    LEFT JOIN  branches\n    ON asm_list.store_name = branches.branch_name", "language": "sql", "refs": [{"name": "stg_kiotviet__branches", "package": null, "version": null}, {"name": "stg_gsheet__asms", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.revenue_payments": [{"database": "agile-scheme-394814", "schema": "dbt_prod_sales", "name": "revenue_payments", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/sales/revenue_payments.sql", "original_file_path": "models/marts/sales/revenue_payments.sql", "unique_id": "model.sado_analytics_services.revenue_payments", "fqn": ["sado_analytics_services", "marts", "sales", "revenue_payments"], "alias": "revenue_payments", "checksum": {"name": "sha256", "checksum": "6df44d909c72c95306c9e80cc74e0a9655ca4285980a7ef4344d77e6b7b284cc"}, "config": {"enabled": false, "alias": null, "schema": "sales", "database": null, "tags": ["incremental", "daily", "fact", "kiotviet"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(revenue_payments.transaction_date)"}]}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["payment_id", "transaction_id"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "fact", "kiotviet"], "description": "", "columns": {"transaction_id": {"name": "transaction_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_code": {"name": "transaction_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reference_transaction_id": {"name": "reference_transaction_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_date": {"name": "transaction_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_status": {"name": "transaction_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_id": {"name": "payment_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_code": {"name": "payment_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_status": {"name": "payment_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_date": {"name": "payment_date", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_amount": {"name": "payment_amount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bankaccount_id": {"name": "bankaccount_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "branch_id": {"name": "branch_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "employee_id": {"name": "employee_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(revenue_payments.transaction_date)"}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/sales/revenue_payments.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "sales", "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(revenue_payments.transaction_date)"}]}, "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": ["payment_id", "transaction_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "fact", "kiotviet"], "enabled": false}, "created_at": 1732268180.386727, "config_call_dict": {"materialized": "incremental", "partition_by": {"field": "transaction_date", "data_type": "timestamp", "granularity": "day"}, "incremental_strategy": "merge", "unique_key": ["payment_id", "transaction_id"], "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "fact", "kiotviet"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue_payments`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'transaction_date',\n    'data_type': 'timestamp',\n    'granularity': 'day' },\n    incremental_strategy = 'merge',\n    unique_key = ['payment_id','transaction_id'],\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'daily','fact','kiotviet'],\n    enabled = false\n) }}\n\nSELECT\n    invoices.transaction_id,\n    invoices.transaction_code,\n    CAST(NULL AS int64) AS reference_transaction_id,\n    invoices.transaction_date,\n    invoices.transaction_status,\n    invoices.branch_id,\n    invoices.employee_id,\n    invoices.customer_id,\n    invoices.payment_id,\n    invoices.payment_code,\n    invoices.payment_status,\n    invoices.payment_date,\n    invoices.payment_amount,\n    invoices.payment_method,\n    invoices.bankaccount_id,\n    invoices.transaction_type,\nFROM\n    {{ ref('stg_kiotviet__invoicepayments') }}\n    invoices\nWHERE\n    invoices.transaction_status = 'Ho\u00e0n th\u00e0nh'\n    {% if is_incremental() %}\n      and date(coalesce(invoices.modified_date, invoices.transaction_date)) >= date_add(date(_dbt_max_partition), interval -1 day)\n    {% endif %}\nUNION ALL\nSELECT\n    returns.transaction_id,\n    returns.transaction_code,\n    returns.reference_transaction_id,\n    returns.transaction_date,\n    returns.transaction_status,\n    returns.branch_id,\n    returns.employee_id,\n    returns.customer_id,\n    returns.payment_id,\n    returns.payment_code,\n    returns.payment_status,\n    returns.payment_date,\n    returns.payment_amount,\n    returns.payment_method,\n    returns.bankaccount_id,\n    returns.transaction_type,\nFROM\n    {{ ref('stg_kiotviet__returnpayments') }}\n    returns\nWHERE\n    returns.transaction_status = '\u0110\u00e3 tr\u1ea3'\n{% if is_incremental() %}\n      and date(coalesce(returns.modified_date, returns.transaction_date)) >= date_add(date(_dbt_max_partition), interval -1 day)\n    {% endif %}", "language": "sql", "refs": [{"name": "stg_kiotviet__invoicepayments", "package": null, "version": null}, {"name": "stg_kiotviet__returnpayments", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.online_balance": [{"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "online_balance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/online_balance.sql", "original_file_path": "models/marts/online_sales/online_balance.sql", "unique_id": "model.sado_analytics_services.online_balance", "fqn": ["sado_analytics_services", "marts", "online_sales", "online_balance"], "alias": "online_balance", "checksum": {"name": "sha256", "checksum": "103c0f01bf939a84a73d464a3d053f2d3887a263d9d82cfb54f1963a576b8b88"}, "config": {"enabled": false, "alias": null, "schema": "online_sales", "database": null, "tags": ["table", "fact", "nhanhvn"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "nhanhvn"], "description": "", "columns": {"bill_id": {"name": "bill_id", "description": "{{ doc('column__nhanhvn__bill_id') }}", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_date": {"name": "bill_date", "description": "{{ doc('column__nhanhvn__bill_date') }}", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_date": {"name": "created_date", "description": "{{ doc('column__nhanhvn__created_date') }}", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_type": {"name": "bill_type", "description": "{{ doc('column__nhanhvn__bill_type') }}", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "bill_mode": {"name": "bill_mode", "description": "{{ doc('column__nhanhvn__bill_mode') }}", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "order_id": {"name": "order_id", "description": "{{ doc('column__nhanhvn__order_id') }}", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "{{ doc('column__nhanhvn__depot_name') }}", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "{{ doc('column__nhanhvn__customer_id') }}", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_by_id": {"name": "created_by_id", "description": "{{ doc('column__nhanhvn__created_by_id') }}", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_id": {"name": "product_id", "description": "{{ doc('column__nhanhvn__product_id') }}", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "discount": {"name": "discount", "description": "{{ doc('column__nhanhvn__discount') }}", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity": {"name": "quantity", "description": "{{ doc('column__nhanhvn__quantity') }}", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "{{ doc('column__nhanhvn__price') }}", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "vat": {"name": "vat", "description": "{{ doc('column__nhanhvn__vat') }}", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "item_net_amount": {"name": "item_net_amount", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/online_balance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "online_sales", "tags": ["table", "fact", "nhanhvn"], "enabled": false}, "created_at": 1732268180.5274405, "config_call_dict": {"tags": ["table", "fact", "nhanhvn"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`online_balance`", "raw_code": "{{ config(\n  tags = ['table', 'fact','nhanhvn'],\n  enabled=false\n) }}\n\nSELECT\n  bills.bill_id,\n  bills.bill_date,\n  bills.created_date,\n  bills.bill_type,\n  bills.bill_mode,\n  bills.order_id,\n  depots.depot_name,\n  bills.customer_id,\n  bills.created_by_id,\n  bills.product_id,\n  bills.discount,\n  bills.quantity,\n  bills.price,\n  bills.vat,\n  ((bills.price - bills.discount) * bills.quantity - COALESCE(bills.vat, 0)) AS item_net_amount,\nFROM\n  {{ ref('int_nhanhvn__bills_reference_orders') }}\n  bills\n  LEFT JOIN {{ ref('stg_nhanhvn__depots') }}\n  depots\n  ON bills.depot_id = depots.depot_id", "language": "sql", "refs": [{"name": "int_nhanhvn__bills_reference_orders", "package": null, "version": null}, {"name": "stg_nhanhvn__depots", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.online_inventory_balance": [{"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "online_inventory_balance", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/online_inventory_balance.sql", "original_file_path": "models/marts/online_sales/online_inventory_balance.sql", "unique_id": "model.sado_analytics_services.online_inventory_balance", "fqn": ["sado_analytics_services", "marts", "online_sales", "online_inventory_balance"], "alias": "online_inventory_balance", "checksum": {"name": "sha256", "checksum": "dd4514f7e5a50ae7200e5f993812561c52735444536bda4751ebdce72f4185f2"}, "config": {"enabled": false, "alias": null, "schema": "online_sales", "database": null, "tags": ["incremental", "daily", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "concat(product_id,date)", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "nhanhvn"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_ending_remain": {"name": "daily_ending_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_beginning_remain": {"name": "daily_beginning_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_ending_available": {"name": "daily_ending_available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_beginning_available": {"name": "daily_beginning_available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_qty_sold": {"name": "daily_qty_sold", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_average_remain": {"name": "daily_average_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_average_available": {"name": "daily_average_available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_in": {"name": "quantity_in", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_out": {"name": "quantity_out", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_out_issue": {"name": "quantity_out_issue", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_out_adjust": {"name": "quantity_out_adjust", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/online_inventory_balance.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "online_sales", "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "concat(product_id,date)", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "nhanhvn"], "enabled": false}, "created_at": 1732268180.5611527, "config_call_dict": {"materialized": "incremental", "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "concat(product_id,date)", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "nhanhvn"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`online_inventory_balance`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  unique_key = 'concat(product_id,date)',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'daily','nhanhvn'],\n  enabled=false\n) }}\n\nWITH inventory AS (\n\n  SELECT\n    *\n  EXCEPT(\n      daily_beginning_remain,\n      daily_beginning_available\n    ),\n    COALESCE(LAG(daily_ending_remain) over (PARTITION BY product_id\n  ORDER BY\n    DATE ASC), daily_beginning_remain) daily_beginning_remain,\n    COALESCE(LAG(daily_ending_available) over (PARTITION BY product_id\n  ORDER BY\n    DATE ASC), daily_beginning_available) daily_beginning_available,\n  FROM\n    (\n      SELECT\n        DISTINCT product_id,\n        DATE(updated_at) AS DATE,\n        FIRST_VALUE(DATE(updated_at) ignore nulls) over w2 AS first_inventory_date,\n        FIRST_VALUE(\n          remain ignore nulls\n        ) over w1 AS daily_ending_remain,\n        FIRST_VALUE(\n          remain ignore nulls\n        ) over w2 AS daily_beginning_remain,\n        FIRST_VALUE(\n          available ignore nulls\n        ) over w1 AS daily_ending_available,\n        FIRST_VALUE(\n          available ignore nulls\n        ) over w2 AS daily_beginning_available,\n      FROM\n        {{ ref('stg_nhanhvn__inventories') }}\n      WHERE\n        updated_at >= '2023-09-20'\n        AND depot_name = 'KHO ONLINE H\u00c0 N\u1ed8I' window w1 AS (\n          PARTITION BY product_id,\n          DATE(updated_at)\n          ORDER BY\n            updated_at DESC\n        ),\n        w2 AS (\n          PARTITION BY product_id,\n          DATE(updated_at)\n          ORDER BY\n            updated_at ASC\n        )\n    )\n  WHERE\n    daily_ending_remain IS NOT NULL\n),\ncalendar AS (\n  SELECT\n    p.product_id,\n    C.date,\n  FROM\n    {{ ref('calendar') }} C\n    CROSS JOIN {{ ref('stg_nhanhvn__products') }}\n    p\n    CROSS JOIN {{ ref('stg_nhanhvn__depots') }}\n    d\n  WHERE\n    C.date <= CURRENT_DATE()\n    AND C.date >= '2023-09-20'\n),\ntransform AS (\n  SELECT\n    COALESCE(\n      inv.product_id,\n      C.product_id\n    ) AS product_id,\n    inv.date AS inv_date,\n    C.date AS c_date,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_ending_remain\n    END AS daily_ending_remain,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_beginning_remain\n    END AS daily_beginning_remain,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_ending_available\n    END AS daily_ending_available,\n    CASE\n      WHEN inv.date = C.date THEN inv.daily_beginning_available\n    END AS daily_beginning_available,\n  FROM\n    calendar C\n    LEFT JOIN inventory inv\n    ON C.product_id = inv.product_id\n    AND C.date = inv.date\n    AND C.date >= inv.first_inventory_date\n),\ndaily_inventory AS (\n  SELECT\n    DISTINCT product_id,\n    c_date AS DATE,\n    COALESCE(\n      daily_ending_remain,\n      FIRST_VALUE(\n        daily_ending_remain ignore nulls\n      ) over w1\n    ) AS daily_ending_remain,\n    COALESCE(\n      daily_beginning_remain,\n      FIRST_VALUE(\n        daily_ending_remain ignore nulls\n      ) over w1\n    ) AS daily_beginning_remain,\n    COALESCE(\n      daily_ending_available,\n      FIRST_VALUE(\n        daily_ending_available ignore nulls\n      ) over w1\n    ) AS daily_ending_available,\n    COALESCE(\n      daily_beginning_available,\n      FIRST_VALUE(\n        daily_ending_available ignore nulls\n      ) over w1\n    ) AS daily_beginning_available,\n  FROM\n    transform\n  WHERE\n    1 = 1 window w1 AS (\n      PARTITION BY product_id\n      ORDER BY\n        c_date DESC rows BETWEEN CURRENT ROW\n        AND unbounded following\n    )\n),\ndaily_sales AS (\n  SELECT\n    product_id,\n    DATE(created_date) AS DATE,\n    SUM(quantity) AS daily_qty_sold\n  FROM\n    {{ ref('orders_items') }}\n  GROUP BY\n    1,\n    2\n),\ndaily_bills AS (\n  SELECT\n    product_id,\n    DATE(bill_date) bill_date,\n    SUM(\n      CASE\n        WHEN bill_type = 'Nh\u1eadp kho' THEN quantity\n      END\n    ) quantity_in,\n    SUM(\n      CASE\n        WHEN bill_type = 'Xu\u1ea5t kho' THEN quantity\n      END\n    ) quantity_out,\n    SUM(\n      CASE\n        WHEN bill_type = 'Xu\u1ea5t kho'\n        AND bill_mode = 'Giao h\u00e0ng' THEN quantity\n      END\n    ) quantity_out_issue,\n    SUM(\n      CASE\n        WHEN bill_type = 'Xu\u1ea5t kho'\n        AND bill_mode <> 'Giao h\u00e0ng' THEN quantity\n      END\n    ) quantity_out_adjust,\n  FROM\n    {{ ref('int_nhanhvn__bills_reference_orders') }}\n  WHERE\n    bill_date >= '2023-09-20'\n  GROUP BY\n    1,\n    2\n)\nSELECT\n  inv.*,\n  COALESCE(\n    s.daily_qty_sold,\n    0\n  ) daily_qty_sold,\n  (\n    inv.daily_ending_remain + inv.daily_beginning_remain\n  ) / 2 AS daily_average_remain,\n  (\n    inv.daily_ending_available + inv.daily_beginning_available\n  ) / 2 AS daily_average_available,\n  COALESCE(\n    b.quantity_in,\n    0\n  ) quantity_in,\n  COALESCE(\n    b.quantity_out,\n    0\n  ) quantity_out,\n  COALESCE(\n    b.quantity_out_issue,\n    0\n  ) quantity_out_issue,\n  COALESCE(\n    b.quantity_out_adjust,\n    0\n  ) quantity_out_adjust,\nFROM\n  daily_inventory inv\n  LEFT JOIN daily_sales s\n  ON inv.product_id = s.product_id\n  AND inv.date = s.date\n  LEFT JOIN daily_bills b\n  ON inv.product_id = b.product_id\n  AND inv.date = b.bill_date", "language": "sql", "refs": [{"name": "stg_nhanhvn__inventories", "package": null, "version": null}, {"name": "calendar", "package": null, "version": null}, {"name": "stg_nhanhvn__products", "package": null, "version": null}, {"name": "stg_nhanhvn__depots", "package": null, "version": null}, {"name": "orders_items", "package": null, "version": null}, {"name": "int_nhanhvn__bills_reference_orders", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.current_inventory": [{"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "current_inventory", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/current_inventory.sql", "original_file_path": "models/marts/online_sales/current_inventory.sql", "unique_id": "model.sado_analytics_services.current_inventory", "fqn": ["sado_analytics_services", "marts", "online_sales", "current_inventory"], "alias": "current_inventory", "checksum": {"name": "sha256", "checksum": "fbd5a915f5cb6c1f0f543e1947ba32f35700cc6ba2f0f6f4a070140267c6b751"}, "config": {"enabled": false, "alias": null, "schema": "online_sales", "database": null, "tags": ["table", "fact", "nhanhvn"], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["table", "fact", "nhanhvn"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "depot_name": {"name": "depot_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "available": {"name": "available", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "remain": {"name": "remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "shipping": {"name": "shipping", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "damaged": {"name": "damaged", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "holding": {"name": "holding", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty": {"name": "warranty", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "warranty_holding": {"name": "warranty_holding", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/current_inventory.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "online_sales", "tags": ["table", "fact", "nhanhvn"], "enabled": false}, "created_at": 1732268180.5230994, "config_call_dict": {"tags": ["table", "fact", "nhanhvn"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`current_inventory`", "raw_code": "{{ config(\n    tags = ['table', 'fact','nhanhvn'],\n    enabled=false\n) }}\n\n{{ dbt_utils.deduplicate(\n    relation = ref('stg_nhanhvn__inventories'), \n    partition_by = 'product_id,depot_name', \n    order_by = \"updated_at desc\",\n    ) \n    }}", "language": "sql", "refs": [{"name": "stg_nhanhvn__inventories", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.deduplicate"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.fsn_analysis": [{"database": "agile-scheme-394814", "schema": "dbt_prod_online_sales", "name": "fsn_analysis", "resource_type": "model", "package_name": "sado_analytics_services", "path": "marts/online_sales/fsn_analysis.sql", "original_file_path": "models/marts/online_sales/fsn_analysis.sql", "unique_id": "model.sado_analytics_services.fsn_analysis", "fqn": ["sado_analytics_services", "marts", "online_sales", "fsn_analysis"], "alias": "fsn_analysis", "checksum": {"name": "sha256", "checksum": "2f16f8ee4e5da252691aa79f49e38d4878c4b278008937087c667842c3b46f88"}, "config": {"enabled": false, "alias": null, "schema": "online_sales", "database": null, "tags": ["incremental", "daily", "nhanhvn"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "concat(class_code,date)", "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "daily", "nhanhvn"], "description": "", "columns": {"class_code": {"name": "class_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_beginning_remain": {"name": "daily_beginning_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_ending_remain": {"name": "daily_ending_remain", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_in": {"name": "quantity_in", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "quantity_out": {"name": "quantity_out", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "adjustment": {"name": "adjustment", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "openning_balance": {"name": "openning_balance", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inventory_holding_days": {"name": "inventory_holding_days", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "receive_qty": {"name": "receive_qty", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "issue_qty": {"name": "issue_qty", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_stay": {"name": "avg_stay", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consumption_rate": {"name": "consumption_rate", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "inventory_stay_classification": {"name": "inventory_stay_classification", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "consumption_classification": {"name": "consumption_classification", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "fsn_classification": {"name": "fsn_classification", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/marts/online_sales/fsn_analysis.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "online_sales", "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "concat(class_code,date)", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "nhanhvn"], "enabled": false}, "created_at": 1732268180.5736039, "config_call_dict": {"materialized": "incremental", "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "unique_key": "concat(class_code,date)", "on_schema_change": "sync_all_columns", "tags": ["incremental", "daily", "nhanhvn"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_online_sales`.`fsn_analysis`", "raw_code": "{{ config(\n    materialized = 'incremental',\n    partition_by ={ 'field': 'date',\n    'data_type': 'date',\n    'granularity': 'day' },\n    incremental_strategy = 'insert_overwrite',\n    unique_key = 'concat(class_code,date)',\n    on_schema_change = 'sync_all_columns',\n    tags = ['incremental', 'daily', 'nhanhvn'],\n    enabled=false\n) }}\n\nWITH inventory AS (\n\n    SELECT\n        products.class_code,\n        balance.date,\n        SUM(\n            balance.daily_beginning_remain\n        ) daily_beginning_remain,\n        SUM(\n            balance.daily_ending_remain\n        ) daily_ending_remain,\n        SUM(\n            balance.quantity_in\n        ) quantity_in,\n        SUM(\n            balance.quantity_out_issue\n        ) quantity_out,\n        SUM(\n            balance.quantity_out_adjust\n        ) adjustment,\n    FROM\n        {{ ref('online_inventory_balance') }}\n        balance\n        LEFT JOIN dbt_dev.stg_nhanhvn__products products\n        ON balance.product_id = products.product_id\n    WHERE\n        products.class_code IS NOT NULL\n        AND balance.daily_ending_remain IS NOT NULL\n    GROUP BY\n        1,\n        2\n),\naggregated_data AS (\n    SELECT\n        *,\n        FIRST_VALUE(daily_beginning_remain) over w1 AS openning_balance,\n        SUM(daily_ending_remain) over w1 AS inventory_holding_days,\n        SUM(quantity_in) over w1 AS receive_qty,\n        SUM(quantity_out) over w1 AS issue_qty,\n        ROUND(\n            safe_divide(SUM(daily_ending_remain) over w1,(SUM(quantity_in) over w1 + COALESCE(FIRST_VALUE(daily_beginning_remain) over w1, 0))),\n            2) AS avg_stay,\n            ROUND(safe_divide(SUM(quantity_out) over w1, 7), 2) AS consumption_rate\n            FROM\n                inventory window w1 AS (\n                    PARTITION BY class_code\n                    ORDER BY\n                        unix_date(DATE) RANGE BETWEEN 7 preceding\n                        AND CURRENT ROW\n                )\n        ),\n        classification_data AS (\n            SELECT\n                *,\n                SUM(avg_stay) over w1 AS cummulative_avg_stay,\n                SUM(consumption_rate) over w3 AS cummulative_consumption_rate,\n            FROM\n                aggregated_data d\n            WHERE\n                DATE >= '2023-09-25' window w1 AS (\n                    PARTITION BY DATE\n                    ORDER BY\n                        avg_stay DESC RANGE BETWEEN unbounded preceding\n                        AND CURRENT ROW\n                ),\n                w2 AS (\n                    PARTITION BY DATE\n                ),\n                w3 AS (\n                    PARTITION BY DATE\n                    ORDER BY\n                        consumption_rate DESC RANGE BETWEEN unbounded preceding\n                        AND CURRENT ROW\n                )\n            ORDER BY\n                DATE,\n                consumption_rate DESC\n        ),\n        RESULT AS (\n            SELECT\n                *\n            EXCEPT(\n                    cummulative_avg_stay,\n                    cummulative_consumption_rate\n                ),\n                CASE\n                    WHEN avg_stay IS NOT NULL THEN NTILE(10) over (\n                        PARTITION BY DATE\n                        ORDER BY\n                            cummulative_avg_stay DESC\n                    )\n                    ELSE 10\n                END AS avg_stay_score,\n                CASE\n                    WHEN consumption_rate IS NOT NULL THEN NTILE(10) over (\n                        PARTITION BY DATE\n                        ORDER BY\n                            cummulative_consumption_rate\n                    )\n                    ELSE 10\n                END AS consumption_rate_score,\n            FROM\n                classification_data\n            WHERE\n                (\n                    avg_stay IS NOT NULL\n                    OR consumption_rate <> 0\n                )\n        )\n    SELECT\n        *\n    EXCEPT\n        (\n            avg_stay_score,\n            consumption_rate_score\n        ),\n        CASE\n            WHEN avg_stay_score IN (1) THEN 'F'\n            WHEN avg_stay_score IN (\n                2,\n                3\n            ) THEN 'S'\n            ELSE 'N'\n        END AS inventory_stay_classification,\n        CASE\n            WHEN consumption_rate_score IN (1) THEN 'F'\n            WHEN consumption_rate_score IN (\n                2,\n                3\n            ) THEN 'S'\n            ELSE 'N'\n        END AS consumption_classification,\n        CASE NTILE(3) over (PARTITION BY DATE\n    ORDER BY\n        (avg_stay_score + consumption_rate_score) DESC)\n        WHEN 3 THEN 'F'\n        WHEN 2 THEN 'S'\n        ELSE 'N'END AS fsn_classification\n    FROM\n        RESULT", "language": "sql", "refs": [{"name": "online_inventory_balance", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.stg_caresoft__tickets": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__tickets", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__tickets.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__tickets.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__tickets", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__tickets"], "alias": "stg_caresoft__tickets", "checksum": {"name": "sha256", "checksum": "d79f0c72bd193ec3ba8281a6f0416f71ef2c5cd6badba849a91d3bd1bd16b269"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "fact", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "view"], "description": "", "columns": {"assignee": {"name": "assignee", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ccs": {"name": "ccs", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_fields": {"name": "custom_fields", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "follows": {"name": "follows", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_overdue": {"name": "is_overdue", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requester": {"name": "requester", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requester_id": {"name": "requester_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tags": {"name": "tags", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_no": {"name": "ticket_no", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_priority": {"name": "ticket_priority", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source": {"name": "ticket_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source_end_status": {"name": "ticket_source_end_status", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_status": {"name": "ticket_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_subject": {"name": "ticket_subject", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_id": {"name": "assignee_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "automessage_id": {"name": "automessage_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comments": {"name": "comments", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_agent": {"name": "current_agent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duedate": {"name": "duedate", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "feedback_status": {"name": "feedback_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "incident_id": {"name": "incident_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qa_agent": {"name": "qa_agent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qa_script_id": {"name": "qa_script_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction": {"name": "satisfaction", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction_at": {"name": "satisfaction_at", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction_content": {"name": "satisfaction_content", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction_send": {"name": "satisfaction_send", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sla": {"name": "sla", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sla_id": {"name": "sla_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source_detail_id": {"name": "ticket_source_detail_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__tickets.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false, "tags": ["caresoft", "fact", "view"]}, "created_at": 1732268180.6766677, "config_call_dict": {"tags": ["caresoft", "fact", "view"]}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__tickets`", "raw_code": "{{\n    config(\n        tags=['caresoft','fact','view']\n    )\n}}\n\nWITH tickets AS (\n    SELECT\n        *\n    FROM\n        {{ ref('base_caresoft__tickets') }}\n),\nticket_details AS (\n    SELECT\n        *\n    FROM\n        {{ ref('base_caresoft__ticket_details') }}\n)\nSELECT\n    t.assignee,\n    t.ccs,\n    t.created_at,\n    t.custom_fields,\n    t.follows,\n    t.is_overdue,\n    t.requester,\n    t.requester_id,\n    t.service_id,\n    t.tags,\n    t.ticket_id,\n    t.ticket_no,\n    t.ticket_priority,\n    t.ticket_source,\n    t.ticket_source_end_status,\n    t.ticket_status,\n    t.ticket_subject,\n    t.updated_at,\n    t.assignee_id,\n    td.account_id,\n    td.automessage_id,\n    td.campaign_id,\n    td.comments,\n    td.current_agent,\n    td.duedate,\n    td.feedback_status,\n    td.group_id,\n    td.incident_id,\n    td.qa_agent,\n    td.qa_script_id,\n    td.satisfaction,\n    td.satisfaction_at,\n    td.satisfaction_content,\n    td.satisfaction_send,\n    td.sla,\n    td.sla_id,\n    td.ticket_source_detail_id,\nFROM\n    tickets t\n    LEFT JOIN ticket_details td\n    ON t.ticket_id = td.ticket_id", "language": "sql", "refs": [{"name": "base_caresoft__tickets", "package": null, "version": null}, {"name": "base_caresoft__ticket_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.stg_caresoft__ticket_custom_fields": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__ticket_custom_fields", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__ticket_custom_fields.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__ticket_custom_fields.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__ticket_custom_fields", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__ticket_custom_fields"], "alias": "stg_caresoft__ticket_custom_fields", "checksum": {"name": "sha256", "checksum": "35bbeeaf355ddeefbd106c2ebeac43b21b1fcabe57ec7c73be05799028534173"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "dimension", "view"], "description": "caresoft ticket custom fields", "columns": {"custom_field_id": {"name": "custom_field_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_field_label": {"name": "custom_field_label", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_id": {"name": "value_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_label": {"name": "value_label", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "value_parent_id": {"name": "value_parent_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__ticket_custom_fields.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false, "tags": ["caresoft", "dimension", "view"]}, "created_at": 1732268180.61073, "config_call_dict": {"tags": ["caresoft", "dimension", "view"]}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__ticket_custom_fields`", "raw_code": "{{\n    config(\n        tags=['caresoft','dimension','view']\n    )\n}}\nselect\n    custom_field_id,\n    custom_field_lable custom_field_label,\n    f.type,\n    values.id as value_id,\n    values.lable as value_label,\n    case values.parent_value_id when -1 then null else values.parent_value_id end as value_parent_id\nfrom {{ref('base_caresoft__ticket_custom_fields')}} f, unnest(values)  values", "language": "sql", "refs": [{"name": "base_caresoft__ticket_custom_fields", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.stg_caresoft__calls": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__calls", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__calls.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__calls.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__calls", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__calls"], "alias": "stg_caresoft__calls", "checksum": {"name": "sha256", "checksum": "b1df3d3deb3e5bb3a69b08936dfec632aa8bf8e897dd29159bfc50ac58775edb"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "fact", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "view"], "description": "Danh s\u00e1ch cu\u1ed9c g\u1ecdi ch\u1ee7 \u0111\u1ed9ng & b\u1ecb \u0111\u1ed9ng qua caresoft", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_id": {"name": "call_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "caller": {"name": "caller", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "called": {"name": "called", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_id": {"name": "agent_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_type": {"name": "call_type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_time": {"name": "start_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_status": {"name": "call_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_time": {"name": "end_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wait_time": {"name": "wait_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hold_time": {"name": "hold_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "talk_time": {"name": "talk_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_status": {"name": "end_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_agent_id": {"name": "last_agent_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dtmf": {"name": "dtmf", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_user_id": {"name": "last_user_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_survey": {"name": "call_survey", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_survey_result": {"name": "call_survey_result", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "missed_reason": {"name": "missed_reason", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__calls.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false, "tags": ["caresoft", "fact", "view"]}, "created_at": 1732268180.6221032, "config_call_dict": {"tags": ["caresoft", "fact", "view"]}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__calls`", "raw_code": "{{\n    config(\n        tags=['caresoft','fact','view']\n    )\n}}\n\nSELECT\n    id,\n    customer_id,\n    call_id,\n    caller,\n    called,\n    user_id,\n    agent_id,\n    group_id,\n    call_type,\n    start_time,\n    call_status,\n    end_time,\n    wait_time,\n    hold_time,\n    talk_time,\n    end_status,\n    ticket_id,\n    last_agent_id,\n    dtmf,\n    last_user_id,\n    call_survey,\n    call_survey_result,\n    service_id,\n    missed_reason,\nFROM\n    {{ ref('base_caresoft__calls') }}", "language": "sql", "refs": [{"name": "base_caresoft__calls", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.stg_caresoft__contacts": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__contacts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__contacts.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__contacts.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__contacts", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__contacts"], "alias": "stg_caresoft__contacts", "checksum": {"name": "sha256", "checksum": "1004f46cc1d918d4c7f733d29d4cf24bb4570867d3380638156d019eda40f4d3"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "fact", "view"], "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_caresoft__contacts.created_at})", "fields": ["date", "month_name", "year_month", "period"]}]}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "view"], "description": "", "columns": {"created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}, "additional_dimensions": {"contact_type": {"type": "string", "sql": "case when date(${TABLE}.created_at) < date_trunc(${calendar.date},month) then 'old' else 'new' end"}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contact_id": {"name": "contact_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}, "metrics": {"m_num_contacts": {"type": "count_distinct", "label": "No. contacts", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no": {"name": "phone_no", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}, "metrics": {"m_num_phones": {"type": "count_distinct", "label": "No. phones", "compact": "thousands", "round": 1}}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_handler_id": {"name": "campaign_handler_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city_id": {"name": "city_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_from": {"name": "created_from", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_fields": {"name": "custom_fields", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "district_id": {"name": "district_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email2": {"name": "email2", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organization": {"name": "organization", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organization_id": {"name": "organization_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no2": {"name": "phone_no2", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no3": {"name": "phone_no3", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "psid": {"name": "psid", "description": "", "meta": {"dimension": {"type": "string", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role_id": {"name": "role_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "take_email_at": {"name": "take_email_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "take_phone_at": {"name": "take_phone_at", "description": "", "meta": {"dimension": {"type": "timestamp", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_caresoft__contacts.created_at})", "fields": ["date", "month_name", "year_month", "period"]}]}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__contacts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false, "meta": {"joins": [{"join": "calendar", "sql_on": "${calendar.date} = date(${stg_caresoft__contacts.created_at})", "fields": ["date", "month_name", "year_month", "period"]}]}, "tags": ["caresoft", "fact", "view"]}, "created_at": 1732268180.6403327, "config_call_dict": {"tags": ["caresoft", "fact", "view"]}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__contacts`", "raw_code": "{{\n    config(\n        tags=['caresoft','fact','view']\n    )\n}}\n\nWITH contacts AS (\n    SELECT\n        *\n    FROM\n        {{ ref('base_caresoft__contacts') }}\n),\ncontact_details AS (\n    SELECT\n        *\n    FROM\n        {{ ref('base_caresoft__contact_details') }}\n)\nSELECT\n    C.created_at,\n    C.id AS contact_id,\n    C.phone_no,\n    C.updated_at,\n    C.username,\n    cd.account_id,\n    cd.address,\n    cd.campaign_handler_id,\n    cd.city_id,\n    cd.created_from,\n    cd.custom_fields,\n    cd.district_id,\n    cd.email,\n    cd.email2,\n    cd.gender,\n    cd.organization,\n    cd.organization_id,\n    cd.phone_no2,\n    cd.phone_no3,\n    cd.psid,\n    cd.role_id,\n    cd.take_email_at,\n    cd.take_phone_at,\nFROM\n    contacts C\n    LEFT JOIN contact_details cd\n    ON C.id = cd.id", "language": "sql", "refs": [{"name": "base_caresoft__contacts", "package": null, "version": null}, {"name": "base_caresoft__contact_details", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.stg_caresoft__agents": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__agents", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__agents.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__agents.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__agents", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__agents"], "alias": "stg_caresoft__agents", "checksum": {"name": "sha256", "checksum": "5838ecc436870aa39f6acd1c4ee316c28408bbbb01b0ffcf443898454fef134d"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "dimension", "view"], "description": "Danh s\u00e1ch ng\u01b0\u1eddi d\u00f9ng caresoft", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no": {"name": "phone_no", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_id": {"name": "agent_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_name": {"name": "group_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role_id": {"name": "role_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "login_status": {"name": "login_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_status": {"name": "call_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__agents.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false, "tags": ["caresoft", "dimension", "view"]}, "created_at": 1732268180.646256, "config_call_dict": {"tags": ["caresoft", "dimension", "view"]}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__agents`", "raw_code": "{{\n    config(\n        tags=['caresoft','dimension','view']\n    )\n}}\n\nSELECT\n    id,\n    username,\n    email,\n    phone_no,\n    safe_cast(agent_id as int64) agent_id,\n    created_at,\n    updated_at,\n    group_id,\n    group_name,\n    role_id,\n    login_status,\n    call_status,\nFROM\n    {{ ref('base_caresoft__agents') }}", "language": "sql", "refs": [{"name": "base_caresoft__agents", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.stg_caresoft__chats": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_caresoft__chats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/stg_caresoft__chats.sql", "original_file_path": "models/staging/caresoft/stg_caresoft__chats.sql", "unique_id": "model.sado_analytics_services.stg_caresoft__chats", "fqn": ["sado_analytics_services", "staging", "caresoft", "stg_caresoft__chats"], "alias": "stg_caresoft__chats", "checksum": {"name": "sha256", "checksum": "fa5ce27e2d1e67c32e6247d0c1bede8a81bd61c03161feeb77e3accec09208e9"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["caresoft", "fact", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["caresoft", "fact", "view"], "description": "", "columns": {"ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_no": {"name": "ticket_no", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_name": {"name": "group_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_id": {"name": "conversation_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cus_email": {"name": "cus_email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cus_name": {"name": "cus_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cus_phone": {"name": "cus_phone", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_time": {"name": "start_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_time": {"name": "end_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chat_duration": {"name": "chat_duration", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_email": {"name": "agent_email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_name": {"name": "agent_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ring_time": {"name": "ring_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meet_time": {"name": "meet_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "answer_time": {"name": "answer_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chat_status": {"name": "chat_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landing_page": {"name": "landing_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referrer": {"name": "referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_trigger": {"name": "is_trigger", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "facebook_page_id": {"name": "facebook_page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wait_time": {"name": "wait_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_type": {"name": "conversation_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/stg_caresoft__chats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false, "tags": ["caresoft", "fact", "view"]}, "created_at": 1732268180.661317, "config_call_dict": {"tags": ["caresoft", "fact", "view"]}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_caresoft__chats`", "raw_code": "{{\n    config(\n        tags=['caresoft','fact','view']\n    )\n}}\nSELECT\n    ticket_id,\n    ticket_no,\n    customer_id,\n    group_name,\n    conversation_id,\n    cus_email,\n    cus_name,\n    cus_phone,\n    start_time,\n    end_time,\n    chat_duration,\n    agent_email,\n    agent_name,\n    ring_time,\n    meet_time,\n    waitTime as wait_time,\n    answer_time,\n    chat_status,\n    landing_page,\n    referrer,\n    is_trigger,\n    facebook_page_id,\n    service_id,\n    conversation_type,\nfrom {{ref('base_caresoft__chats')}}", "language": "sql", "refs": [{"name": "base_caresoft__chats", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_caresoft__ticket_custom_fields": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__ticket_custom_fields", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__ticket_custom_fields.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__ticket_custom_fields.sql", "unique_id": "model.sado_analytics_services.base_caresoft__ticket_custom_fields", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__ticket_custom_fields"], "alias": "base_caresoft__ticket_custom_fields", "checksum": {"name": "sha256", "checksum": "ea587342e687226364565194467b9e419b60e1afe8c1039258a3abf574b23d0a"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"custom_field_id": {"name": "custom_field_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_field_lable": {"name": "custom_field_lable", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "type": {"name": "type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "values": {"name": "values", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/base/base_caresoft__ticket_custom_fields.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268180.7050009, "config_call_dict": {}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__ticket_custom_fields`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY custom_field_id\n                ORDER BY\n                    _batched_at DESC\n                \n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'ticket_custom_fields'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "ticket_custom_fields"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_caresoft__tickets": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__tickets", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__tickets.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__tickets.sql", "unique_id": "model.sado_analytics_services.base_caresoft__tickets", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__tickets"], "alias": "base_caresoft__tickets", "checksum": {"name": "sha256", "checksum": "0fd1fc8412990c985f4c4b0401349b107445adfe86a30540c56a199da688fd45"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"ticket_no": {"name": "ticket_no", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_status": {"name": "ticket_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_subject": {"name": "ticket_subject", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source_end_status": {"name": "ticket_source_end_status", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source": {"name": "ticket_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_priority": {"name": "ticket_priority", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requester_id": {"name": "requester_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_id": {"name": "assignee_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_overdue": {"name": "is_overdue", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_fields": {"name": "custom_fields", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee": {"name": "assignee", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requester": {"name": "requester", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tags": {"name": "tags", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ccs": {"name": "ccs", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "follows": {"name": "follows", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/base/base_caresoft__tickets.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268180.7071126, "config_call_dict": {}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__tickets`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY ticket_id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'tickets'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "tickets"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_caresoft__calls": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__calls", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__calls.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__calls.sql", "unique_id": "model.sado_analytics_services.base_caresoft__calls", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__calls"], "alias": "base_caresoft__calls", "checksum": {"name": "sha256", "checksum": "04f7d15474f1aa6429d9427756742cca865b43809db1b8c9060efc2cc753e3a7"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_id": {"name": "call_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "caller": {"name": "caller", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "called": {"name": "called", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "user_id": {"name": "user_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_id": {"name": "agent_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_type": {"name": "call_type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_time": {"name": "start_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_status": {"name": "call_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_time": {"name": "end_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "wait_time": {"name": "wait_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "hold_time": {"name": "hold_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "talk_time": {"name": "talk_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_status": {"name": "end_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_agent_id": {"name": "last_agent_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "dtmf": {"name": "dtmf", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "last_user_id": {"name": "last_user_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_survey": {"name": "call_survey", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_survey_result": {"name": "call_survey_result", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "missed_reason": {"name": "missed_reason", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/base/base_caresoft__calls.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268180.7033234, "config_call_dict": {}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__calls`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY call_id\n                ORDER BY\n                    _batched_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'calls'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "calls"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_caresoft__groups": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__groups", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__groups.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__groups.sql", "unique_id": "model.sado_analytics_services.base_caresoft__groups", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__groups"], "alias": "base_caresoft__groups", "checksum": {"name": "sha256", "checksum": "7977ddfe8d7f0670ff4403887776b9f205bb0f88af2970229c1a0fbbfab33443"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_name": {"name": "group_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/base/base_caresoft__groups.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268180.695983, "config_call_dict": {}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__groups`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY group_id\n                ORDER BY\n                    _batched_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'groups'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "groups"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_caresoft__contact_details": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__contact_details", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__contact_details.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__contact_details.sql", "unique_id": "model.sado_analytics_services.base_caresoft__contact_details", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__contact_details"], "alias": "base_caresoft__contact_details", "checksum": {"name": "sha256", "checksum": "f22070fb64fcb22e67cd19b79e2bd66056aaef90b2db098a4385795a3c812287"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no": {"name": "phone_no", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email2": {"name": "email2", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no2": {"name": "phone_no2", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no3": {"name": "phone_no3", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "gender": {"name": "gender", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organization_id": {"name": "organization_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "address": {"name": "address", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "city_id": {"name": "city_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_from": {"name": "created_from", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "district_id": {"name": "district_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role_id": {"name": "role_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_handler_id": {"name": "campaign_handler_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "take_phone_at": {"name": "take_phone_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "take_email_at": {"name": "take_email_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_fields": {"name": "custom_fields", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "organization": {"name": "organization", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "psid": {"name": "psid", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/base/base_caresoft__contact_details.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268180.7105496, "config_call_dict": {}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__contact_details`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'contact_details'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "contact_details"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_caresoft__contacts": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__contacts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__contacts.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__contacts.sql", "unique_id": "model.sado_analytics_services.base_caresoft__contacts", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__contacts"], "alias": "base_caresoft__contacts", "checksum": {"name": "sha256", "checksum": "018f8791056120d5f515256182b5b82c773470c541213cd4a5d4bfdcc829549a"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no": {"name": "phone_no", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/base/base_caresoft__contacts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268180.7081873, "config_call_dict": {}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__contacts`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'contacts'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "contacts"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_caresoft__agents": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__agents", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__agents.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__agents.sql", "unique_id": "model.sado_analytics_services.base_caresoft__agents", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__agents"], "alias": "base_caresoft__agents", "checksum": {"name": "sha256", "checksum": "79180b5e1e4be00fae0a1cb08c1d9fb7a079bd06c2b37b8fe21feb082e46ed8d"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "username": {"name": "username", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "email": {"name": "email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "phone_no": {"name": "phone_no", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_id": {"name": "agent_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_name": {"name": "group_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "role_id": {"name": "role_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "login_status": {"name": "login_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "call_status": {"name": "call_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/base/base_caresoft__agents.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268180.697585, "config_call_dict": {}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__agents`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'agents'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "agents"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_caresoft__chats": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__chats", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__chats.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__chats.sql", "unique_id": "model.sado_analytics_services.base_caresoft__chats", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__chats"], "alias": "base_caresoft__chats", "checksum": {"name": "sha256", "checksum": "4fc46b80ef302a6395ba0230739dedb98bdf9cdb73d300c262b5c19f89074ab0"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_no": {"name": "ticket_no", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_name": {"name": "group_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_id": {"name": "conversation_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cus_email": {"name": "cus_email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cus_name": {"name": "cus_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "cus_phone": {"name": "cus_phone", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "start_time": {"name": "start_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "end_time": {"name": "end_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chat_duration": {"name": "chat_duration", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_email": {"name": "agent_email", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "agent_name": {"name": "agent_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ring_time": {"name": "ring_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meet_time": {"name": "meet_time", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "waittime": {"name": "waittime", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "answer_time": {"name": "answer_time", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "chat_status": {"name": "chat_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "landing_page": {"name": "landing_page", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "referrer": {"name": "referrer", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_trigger": {"name": "is_trigger", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "facebook_page_id": {"name": "facebook_page_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "conversation_type": {"name": "conversation_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/base/base_caresoft__chats.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268180.6950066, "config_call_dict": {}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__chats`", "raw_code": "{# SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY conversation_id\n                ORDER BY\n                    _batched_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'chats'\n            ) }}\n    )\nWHERE\n    rn_ = 1 #}\n\n\nwith union_ as (\n    {{union_relations(\n    relations=[\n        source('caresoft', 'chats_fb'),\n        source('caresoft', 'chats_live'),\n        source('caresoft', 'chats_zalo')\n        ],\n) }}\n), \n{{deduplicate_cte(\n    cte = 'union_',\n    partition_fields=['conversation_id'],\n    last_updated_fields=['_batched_at']\n    )}}", "language": "sql", "refs": [], "sources": [["caresoft", "chats_fb"], ["caresoft", "chats_live"], ["caresoft", "chats_zalo"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.sado_analytics_services.union_relations"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_caresoft__ticket_details": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_caresoft__ticket_details", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/caresoft/base/base_caresoft__ticket_details.sql", "original_file_path": "models/staging/caresoft/base/base_caresoft__ticket_details.sql", "unique_id": "model.sado_analytics_services.base_caresoft__ticket_details", "fqn": ["sado_analytics_services", "staging", "caresoft", "base", "base_caresoft__ticket_details"], "alias": "base_caresoft__ticket_details", "checksum": {"name": "sha256", "checksum": "7f0488129056f9fd291c6539846375bf835e212d749c867d740e061990d34161"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"ticket_no": {"name": "ticket_no", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_status": {"name": "ticket_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_subject": {"name": "ticket_subject", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source_end_status": {"name": "ticket_source_end_status", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source": {"name": "ticket_source", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_priority": {"name": "ticket_priority", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "service_id": {"name": "service_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_id": {"name": "ticket_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requester_id": {"name": "requester_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee_id": {"name": "assignee_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_overdue": {"name": "is_overdue", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "custom_fields": {"name": "custom_fields", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assignee": {"name": "assignee", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "requester": {"name": "requester", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tags": {"name": "tags", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ccs": {"name": "ccs", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "follows": {"name": "follows", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sla_id": {"name": "sla_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "group_id": {"name": "group_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "duedate": {"name": "duedate", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction": {"name": "satisfaction", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction_at": {"name": "satisfaction_at", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction_send": {"name": "satisfaction_send", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "satisfaction_content": {"name": "satisfaction_content", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "campaign_id": {"name": "campaign_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "automessage_id": {"name": "automessage_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "feedback_status": {"name": "feedback_status", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "incident_id": {"name": "incident_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qa_script_id": {"name": "qa_script_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "qa_agent": {"name": "qa_agent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "current_agent": {"name": "current_agent", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ticket_source_detail_id": {"name": "ticket_source_detail_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "comments": {"name": "comments", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "sla": {"name": "sla", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "_batched_at": {"name": "_batched_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/caresoft/base/base_caresoft__ticket_details.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268180.7008893, "config_call_dict": {}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_caresoft__ticket_details`", "raw_code": "SELECT\n    *\nEXCEPT(rn_)\nFROM\n    (\n        SELECT\n            *,\n            ROW_NUMBER() over (\n                PARTITION BY ticket_id\n                ORDER BY\n                    _batched_at DESC,\n                    updated_at DESC\n            ) rn_\n        FROM\n            {{ source(\n                'caresoft',\n                'ticket_details'\n            ) }}\n    )\nWHERE\n    rn_ = 1", "language": "sql", "refs": [], "sources": [["caresoft", "ticket_details"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.stg_facebookads__accounts": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_facebookads__accounts", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/stg_facebookads__accounts.sql", "original_file_path": "models/staging/facebookAds/stg_facebookads__accounts.sql", "unique_id": "model.sado_analytics_services.stg_facebookads__accounts", "fqn": ["sado_analytics_services", "staging", "facebookAds", "stg_facebookads__accounts"], "alias": "stg_facebookads__accounts", "checksum": {"name": "sha256", "checksum": "b3b2ed7ccb202dc404efa4fed399bcea5dd6d07d2f1f99c4edb8caaa87dd3556"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["fb", "dimension", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["fb", "dimension", "view"], "description": "", "columns": {"account_id": {"name": "account_id", "description": "", "meta": {"dimension": {"type": "number", "hidden": true}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "account_name": {"name": "account_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/facebookAds/stg_facebookads__accounts.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["fb", "dimension", "view"], "enabled": false}, "created_at": 1732268181.1070805, "config_call_dict": {"materialized": "view", "tags": ["fb", "dimension", "view"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_facebookads__accounts`", "raw_code": "{{ config(\n    materialized = 'view',\n    tags = ['fb','dimension','view'],\n    enabled =False\n) }}\n\n    SELECT\n        DISTINCT account_id,\n        FIRST_VALUE (account_name) over  account_window AS account_name,\n    FROM\n        {{ source(\n            'facebookAds',\n            'p_AdsInsights__*'\n        ) }}\n        window account_window as (partition by account_id order by _batched_at desc)\n        \n\n    {# select * \n    from {{ ref(\"stg_fb__ad_accounts\") }} #}", "language": "sql", "refs": [], "sources": [["facebookAds", "p_AdsInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.base_facebookAds__adsInsights": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "base_facebookAds__adsInsights", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/facebookAds/base/base_facebookAds__adsInsights.sql", "original_file_path": "models/staging/facebookAds/base/base_facebookAds__adsInsights.sql", "unique_id": "model.sado_analytics_services.base_facebookAds__adsInsights", "fqn": ["sado_analytics_services", "staging", "facebookAds", "base", "base_facebookAds__adsInsights"], "alias": "base_facebookAds__adsInsights", "checksum": {"name": "sha256", "checksum": "317d5b625a028810d49e155416a21ecfa9e619fcd0112b9d39ce94dd96ec84d1"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268178.2214413, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`base_facebookAds__adsInsights`", "raw_code": "{{\n  config(\n    enabled=false,\n    )\n}}\nWITH source AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'facebookAds',\n            'p_AdsInsights__*'\n        ),\n        partition_by = 'account_id,\n            campaign_id,\n            adset_id,\n            ad_id,\n            date_start',\n        order_by = \"_batched_at desc\",\n    ) }}\n)\nSELECT\n    account_id,\n    campaign_id,\n    adset_id,\n    ad_id,\n    date_start,\n    clicks,\n    impressions,\n    spend,\n    reach,\n    actions,\n    action_values,\n    cost_per_action_type,\n    cost_per_unique_action_type,\nFROM\n    source", "language": "sql", "refs": [], "sources": [["facebookAds", "p_AdsInsights__*"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.stg_5sfashion__categories": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_5sfashion__categories", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/stg_5sfashion__categories.sql", "original_file_path": "models/staging/5sfashion/stg_5sfashion__categories.sql", "unique_id": "model.sado_analytics_services.stg_5sfashion__categories", "fqn": ["sado_analytics_services", "staging", "5sfashion", "stg_5sfashion__categories"], "alias": "stg_5sfashion__categories", "checksum": {"name": "sha256", "checksum": "2873183c92f71e35e783ca478389877a2f4046ae7f65e8a4264142df9ebdc910"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["website", "dimensions", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["website", "dimensions", "view"], "description": "", "columns": {"category_id": {"name": "category_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "category_name": {"name": "category_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_order_type": {"name": "product_order_type", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "homepage_position": {"name": "homepage_position", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_show_on_homepage": {"name": "is_show_on_homepage", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "is_show_on_website": {"name": "is_show_on_website", "description": "", "meta": {"dimension": {"type": "boolean"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/5sfashion/stg_5sfashion__categories.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["website", "dimensions", "view"], "enabled": false}, "created_at": 1732268181.2907507, "config_call_dict": {"tags": ["website", "dimensions", "view"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__categories`", "raw_code": "{{ config(\n    tags = ['website','dimensions','view'],\n    enabled = false\n) }}\n\nWITH categories AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'web',\n            'categories'\n        ),\n        partition_by = '_id',\n        order_by = '_batched_at desc'\n    ) }}\n),\nmenu_items AS (\n    {{ dbt_utils.deduplicate(\n        relation = source(\n            'web',\n            'cms_menu_items'\n        ),\n        partition_by = '_id',\n        order_by = '_batched_at desc'\n    ) }}\n),\n\nmenu_categoried as (\n    SELECT\n        c1.target_value,\n        c1.title as parent_category,\n        c1.depth,\n        coalesce(c2.title,c1.title) AS sub_productline,\n        c2.depth AS sub_productline_depth,\n        coalesce(c3.title,c2.title, c1.title) AS product_line,\n        c3.depth AS product_line_depth,\n    from menu_items c1\n    LEFT JOIN menu_items c2\n        ON c1.parent_id = c2._id\n    LEFT JOIN menu_items c3\n        ON c2.parent_id = c3._id\n    WHERE\n        c1.cms_menu_id = \"63e5ee4fa056b1c6920ed1df\"\n        {# and (c2.parent_id is not null or c2.title = 'PH\u1ee4 KI\u1ec6N') #}\n)\n\nselect \nm.* except(target_value),\nc._id as category_id,\nc.name as category,\nfrom menu_categoried m\nleft join categories c on m.target_value = c._id", "language": "sql", "refs": [], "sources": [["web", "categories"], ["web", "cms_menu_items"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.stg_5sfashion__products": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_5sfashion__products", "resource_type": "model", "package_name": "sado_analytics_services", "path": "staging/5sfashion/stg_5sfashion__products.sql", "original_file_path": "models/staging/5sfashion/stg_5sfashion__products.sql", "unique_id": "model.sado_analytics_services.stg_5sfashion__products", "fqn": ["sado_analytics_services", "staging", "5sfashion", "stg_5sfashion__products"], "alias": "stg_5sfashion__products", "checksum": {"name": "sha256", "checksum": "69ed9a0efed21110fcb364b1d679051b8b768b9121d482ea0a72864af17b13b1"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["website", "dimensions", "view"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["website", "dimensions", "view"], "description": "", "columns": {"product_id": {"name": "product_id", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_type": {"name": "product_type", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_name": {"name": "product_name", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_keyword": {"name": "product_keyword", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "categories": {"name": "categories", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "published_at": {"name": "published_at", "description": "", "meta": {"dimension": {"type": "timestamp"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "product_code": {"name": "product_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/staging/5sfashion/stg_5sfashion__products.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "tags": ["website", "dimensions", "view"], "enabled": false}, "created_at": 1732268181.279878, "config_call_dict": {"tags": ["website", "dimensions", "view"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_5sfashion__products`", "raw_code": "{{\n    config(\n        tags=['website','dimensions','view'],\n        enabled = false\n    )\n}}\n\nwith base_products as (\n    {{dbt_utils.deduplicate(\n        relation = source(\n            'web',\n            'products'\n        ),\n        partition_by = 'id',\n        order_by = '_batched_at desc'\n    )}}\n),\nbase_product_details as (\n    {{dbt_utils.deduplicate(\n        relation = source(\n            'web',\n            'product_details'\n        ),\n        partition_by = 'id',\n        order_by = '_batched_at desc'\n    )}}\n),\nbase_categories as (\n    {{dbt_utils.deduplicate(\n        relation = source(\n            'web',\n            'categories'\n        ),\n        partition_by = 'id',\n        order_by = '_batched_at desc'\n    )}}\n)\n\nselect * \nfrom base_product_details pd \nleft join base_products p on pd.product_id = p.id", "language": "sql", "refs": [], "sources": [["web", "products"], ["web", "product_details"], ["web", "categories"]], "metrics": [], "depends_on": {"macros": ["macro.sado_analytics_services.source", "macro.dbt_utils.deduplicate"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.facebook_dashboard__by_location_group": [{"database": "agile-scheme-394814", "schema": "dbt_prod_core", "name": "facebook_dashboard__by_location_group", "resource_type": "model", "package_name": "sado_analytics_services", "path": "core/dashboards/facebook_dashboard__by_location_group.sql", "original_file_path": "models/core/dashboards/facebook_dashboard__by_location_group.sql", "unique_id": "model.sado_analytics_services.facebook_dashboard__by_location_group", "fqn": ["sado_analytics_services", "core", "dashboards", "facebook_dashboard__by_location_group"], "alias": "facebook_dashboard__by_location_group", "checksum": {"name": "sha256", "checksum": "2da379e6b0d98f809a4f9fc474ca22115a1794b09b61111206102d14f8944667"}, "config": {"enabled": false, "alias": null, "schema": "core", "database": null, "tags": ["incremental", "fact", "dashboard"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "post-hook": [], "pre-hook": []}, "tags": ["incremental", "fact", "dashboard"], "description": "", "columns": {"impressions": {"name": "impressions", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spend": {"name": "spend", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "clicks": {"name": "clicks", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "reach": {"name": "reach", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "link_click": {"name": "link_click", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "post_engagement": {"name": "post_engagement", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase": {"name": "offline_conversion_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offline_conversion_purchase_value": {"name": "offline_conversion_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase": {"name": "pixel_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "pixel_purchase_value": {"name": "pixel_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase": {"name": "meta_purchase", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "meta_purchase_value": {"name": "meta_purchase_value", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "val_transaction_id": {"name": "val_transaction_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_invoice_transaction_id": {"name": "num_invoice_transaction_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_return_transaction_id": {"name": "num_return_transaction_id", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "val_total": {"name": "val_total", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_invoice_total": {"name": "num_invoice_total", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_return_total": {"name": "num_return_total", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "val_total_payment": {"name": "val_total_payment", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_invoice_total_payment": {"name": "num_invoice_total_payment", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_return_total_payment": {"name": "num_return_total_payment", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "num_stores": {"name": "num_stores", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_budget": {"name": "daily_budget", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_sales_target": {"name": "daily_sales_target", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "daily_traffic_target": {"name": "daily_traffic_target", "description": "", "meta": {"dimension": {"type": "number"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "", "meta": {"dimension": {"type": "date"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "local_page_code": {"name": "local_page_code", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "ad_pic": {"name": "ad_pic", "description": "", "meta": {"dimension": {"type": "string"}}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "sado_analytics_services://models/core/dashboards/facebook_dashboard__by_location_group.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "core", "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["incremental", "fact", "dashboard"], "enabled": false}, "created_at": 1732268181.3644738, "config_call_dict": {"materialized": "incremental", "partition_by": {"field": "date", "data_type": "date", "granularity": "day"}, "incremental_strategy": "insert_overwrite", "on_schema_change": "sync_all_columns", "tags": ["incremental", "fact", "dashboard"], "enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`facebook_dashboard__by_location_group`", "raw_code": "{{ config(\n  materialized = 'incremental',\n  partition_by ={ 'field': 'date',\n  'data_type': 'date',\n  'granularity': 'day' },\n  incremental_strategy = 'insert_overwrite',\n  on_schema_change = 'sync_all_columns',\n  tags = ['incremental', 'fact','dashboard'],\n  enabled = false\n) }}\n\n{% set metrics = [\"impressions\",\"spend\",\"clicks\",\"reach\",\"link_click\",\"post_engagement\",\"offline_conversion_purchase\",\"offline_conversion_purchase_value\",\"pixel_purchase\",\"pixel_purchase_value\",\"meta_purchase\",\"meta_purchase_value\"] %}\n{% set targets = [\"budget\", \"sales_target\", \"traffic_target\"] %}\n{% set rev_calcols ={ \"transaction_id\" :\"count(distinct \",\n\"total\" :\"sum(\",\n\"total_payment\" :\"sum(\" } %}\n{% set rev_types = [\"invoice\", \"return\"] %}\n\nwith offline_performance as (\n  SELECT\n  asm.local_page_code, \n  asm.fb_ads_pic AS pic,\n  DATE(r.transaction_date) transaction_date,\n    {%- for col,cal in rev_calcols.items() %}\n      {{ cal }} {{ col }}{{ \")\" }} AS val_{{ col }},\n      {%- for type in rev_types %}\n        {{ cal }}\n        CASE\n          WHEN transaction_type = '{{type}}' THEN {{ col }}\n        END {{ \")\" }} AS num_{{ type }}_{{ col }},\n      {% endfor -%}\n    {% endfor -%}\n    COUNT(\n      DISTINCT r.branch_id\n    ) AS num_stores,\n  FROM\n    {{ ref(\"fct__transactions\") }} r\n    INNER JOIN {{ ref(\"dim__branches\") }} asm\n    ON r.branch_id = asm.branch_id\n  WHERE\n  {%- if is_incremental() %}\n    date(r.transaction_date) >= date_add(current_date, interval -3 day)\n  {% else %}\n    r.transaction_date >= '2023-11-01'\n  {% endif -%}\n    AND r.branch_id NOT IN (1000087891)\n    and asm.asm_name is not null\n    and asm.channel = 'Offline'\n  {{dbt_utils.group_by(3)}} \n),\n\nfacebook_budget AS (\n  SELECT\n    budget.local_page_code,\n    budget.date,\n    {%- for target in targets %}\n      SUM(daily_{{ target }}) AS daily_{{ target }},\n    {% endfor -%}\n  FROM\n    {{ ref(\"facebook_budget\") }}\n    budget\n  WHERE\n    budget.date <= CURRENT_DATE()\n    {%- if is_incremental() %}\n    and budget.date >= date_add(current_date, interval -3 day)\n    {% else %}\n    and budget.date >= '2023-11-01'\n  {% endif -%}\n  {{dbt_utils.group_by(2)}}\n),\nfacebook_performance as (\n  SELECT\n    cp.ad_group_location,\n    cp.ad_pic,\n    fb.date_start,\n    {% for metric in metrics %}\n      SUM(fb.{{ metric }}) AS {{ metric }},\n    {% endfor %}\n  FROM\n    {{ ref(\"stg_facebookads__adsinsights\") }} fb\n    left join {{ref(\"dim__campaigns\")}} cp on fb.ad_key = cp.ad_key\n  WHERE \n  {% if is_incremental() %}\n    date_start >= date_add(current_date, interval -3 day)\n  {% else %}\n    date_start >= '2023-11-01'\n  {% endif %}\n  {# and cp.ad_group_location = 'Store' #}\n  and fb.account_id not in (311864311227191,622771789982135,3744530109108893)\n  {{dbt_utils.group_by(3)}}\n)\n\nselect f.* except(date_start,ad_group_location,ad_pic),\n  o.* except(transaction_date,local_page_code,pic),\n  b.* except(date,local_page_code),\n  coalesce(f.date_start, o.transaction_date,b.date) as date,\n  coalesce(f.ad_group_location, o.local_page_code, b.local_page_code) as local_page_code,\n  coalesce(f.ad_pic,o.pic) as ad_pic\nfrom facebook_performance f\nfull outer join  offline_performance o \non f.date_start = o.transaction_date \nand f.ad_group_location = o.local_page_code \nfull outer join facebook_budget b\non coalesce(f.date_start,o.transaction_date) = b.date\nand coalesce(f.ad_group_location,o.local_page_code) = b.local_page_code", "language": "sql", "refs": [{"name": "fct__transactions", "package": null, "version": null}, {"name": "dim__branches", "package": null, "version": null}, {"name": "facebook_budget", "package": null, "version": null}, {"name": "stg_facebookads__adsinsights", "package": null, "version": null}, {"name": "dim__campaigns", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt_utils.group_by"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.sado_analytics_services.google_local_storage": [{"database": "agile-scheme-394814", "schema": "dbt_prod_core", "name": "google_local_storage", "resource_type": "model", "package_name": "sado_analytics_services", "path": "core/integration/google_local_storage.sql", "original_file_path": "models/core/integration/google_local_storage.sql", "unique_id": "model.sado_analytics_services.google_local_storage", "fqn": ["sado_analytics_services", "core", "integration", "google_local_storage"], "alias": "google_local_storage", "checksum": {"name": "sha256", "checksum": "18e94f9e6b3c99433f9edfa5bf6a632bca5935e4d55041c764c572c31e7c94d8"}, "config": {"enabled": false, "alias": null, "schema": "core", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "core", "enabled": false}, "created_at": 1732268178.4190712, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_core`.`google_local_storage`", "raw_code": "{{\n  config(\n    enabled = false\n    )\n}}\n\n{# select \nfrom {{ ref(\"dim__branches\") }} #}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.fct_ga4__user_ids": [{"database": "agile-scheme-394814", "schema": "dbt_prod_marketing", "name": "fct_ga4__user_ids", "resource_type": "model", "package_name": "ga4", "path": "marts/core/fct_ga4__user_ids.sql", "original_file_path": "models/marts/core/fct_ga4__user_ids.sql", "unique_id": "model.ga4.fct_ga4__user_ids", "fqn": ["ga4", "marts", "core", "fct_ga4__user_ids"], "alias": "fct_ga4__user_ids", "checksum": {"name": "sha256", "checksum": "3d2d3189b821557a9395f13c23271a558cef8b5f152d3f20824f030eaa3a49d9"}, "config": {"enabled": false, "alias": null, "schema": "marketing", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Fact table with aggregate metrics at the level of the user_id when one is present, otherwise at the device level (as indicated by the client_key). Metrics are aggregated from fct_ga4__client_keys.", "columns": {"user_id_or_client_key": {"name": "user_id_or_client_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/marts/core/fct_ga4__user_ids.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "enabled": false, "schema": "marketing"}, "created_at": 1732268181.4652066, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`fct_ga4__user_ids`", "raw_code": "{{\n      config(\n        enabled = var('is_user_id_implemented', true),\n        )\n    }}\n\n\nwith user_id_mapped as (\n    select \n        client_keys.*,\n        -- Use a user_id if it exists, otherwise fall back to the client_key\n        coalesce(user_id_mapping.last_seen_user_id, client_keys.client_key) as user_id_or_client_key,\n        -- Indicate whether the user_id_or_client_key value is a user_id\n        CASE \n            WHEN user_id_mapping.last_seen_user_id is null THEN 0 ELSE 1\n        END as is_user_id\n    from {{ref('fct_ga4__client_keys')}} client_keys\n    left join {{ref('stg_ga4__user_id_mapping')}} user_id_mapping using (client_key)\n)\n\nselect\n    user_id_or_client_key,\n    stream_id,\n    max(is_user_id) as is_user_id,\n    min(first_seen_timestamp) as first_seen_timestamp,\n    max(last_seen_session_timestamp) as last_seen_session_timestamp,\n    min(first_seen_date) as first_seen_date,\n    max(last_seen_date) as last_seen_date,\n    sum(count_pageviews) as count_pageviews,\n    sum(count_engaged_sessions) as count_engaged_sessions,\n    sum(sum_event_value_in_usd) as sum_event_value_in_usd,\n    sum(sum_engaged_time_msec) as sum_engaged_time_msec,\n    sum(count_sessions) as count_sessions\n    {% if var('conversion_events', false) %}\n        {% for ce in var('conversion_events',[]) %}\n            , sum(count_{{ce}}) as count_{{ce}}\n        {% endfor %}\n    {% endif %}\nfrom user_id_mapped\ngroup by 1, 2", "language": "sql", "refs": [{"name": "fct_ga4__client_keys", "package": null, "version": null}, {"name": "stg_ga4__user_id_mapping", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__derived_session_properties_daily": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__derived_session_properties_daily", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__derived_session_properties_daily.sql", "original_file_path": "models/staging/stg_ga4__derived_session_properties_daily.sql", "unique_id": "model.ga4.stg_ga4__derived_session_properties_daily", "fqn": ["ga4", "staging", "stg_ga4__derived_session_properties_daily"], "alias": "stg_ga4__derived_session_properties_daily", "checksum": {"name": "sha256", "checksum": "b6c3bbb0acdf17f43bceccc0e3c5dea9431d3fdb63e359b883b19205280cacca"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": ["incremental"], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"], "post-hook": [], "pre-hook": []}, "tags": ["incremental"], "description": "Optional model that will pull out the most recent instance of a particular event parameter for each session_partition_key.  Later used in the fct_ga4__sessions_daily fact table.\n", "columns": {"session_partition_key": {"name": "session_partition_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__derived_session_properties_daily.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "enabled": false, "incremental_strategy": "insert_overwrite", "tags": ["incremental"], "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"]}, "created_at": 1732268181.5026207, "config_call_dict": {"enabled": false, "materialized": "incremental", "incremental_strategy": "insert_overwrite", "tags": ["incremental"], "partition_by": {"field": "session_partition_date", "data_type": "date", "granularity": "day"}, "partitions": ["current_date", "date_sub(current_date, interval 1 day)"]}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__derived_session_properties_daily`", "raw_code": "{% set partitions_to_replace = ['current_date'] %}\n{% for i in range(var('static_incremental_days')) %}\n    {% set partitions_to_replace = partitions_to_replace.append('date_sub(current_date, interval ' + (i+1)|string + ' day)') %}\n{% endfor %}\n{{\n    config(\n        enabled = true if var('derived_session_properties', false) else false,\n        materialized = 'incremental',\n        incremental_strategy = 'insert_overwrite',\n        tags = [\"incremental\"],\n        partition_by={\n            \"field\": \"session_partition_date\",\n            \"data_type\": \"date\",\n            \"granularity\": \"day\"\n        },\n        partitions = partitions_to_replace\n    )\n}}\n\n\nwith unnest_event_params as\n(\n    select \n        session_partition_key\n        ,event_date_dt as session_partition_date\n        ,event_timestamp\n        {% for sp in var('derived_session_properties', []) %}\n            {% if sp.user_property %}\n                , {{ ga4.unnest_key('user_properties', sp.user_property, sp.value_type) }}\n            {% else %}\n                , {{ ga4.unnest_key('event_params', sp.event_parameter, sp.value_type) }}\n            {% endif %}\n        {% endfor %}\n    from {{ref('stg_ga4__events')}}\n    where event_key is not null\n    {% if is_incremental() %}\n            and event_date_dt in ({{ partitions_to_replace | join(',') }})\n    {% endif %}\n\n)\n\nSELECT DISTINCT\n    session_partition_key\n    ,session_partition_date\n    {% for sp in var('derived_session_properties', []) %}\n        , LAST_VALUE({{ sp.user_property | default(sp.event_parameter) }} IGNORE NULLS) OVER (session_window) AS {{ sp.session_property_name }}\n    {% endfor %}\nFROM unnest_event_params\nWINDOW session_window AS (PARTITION BY session_partition_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__derived_session_properties": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__derived_session_properties", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__derived_session_properties.sql", "original_file_path": "models/staging/stg_ga4__derived_session_properties.sql", "unique_id": "model.ga4.stg_ga4__derived_session_properties", "fqn": ["ga4", "staging", "stg_ga4__derived_session_properties"], "alias": "stg_ga4__derived_session_properties", "checksum": {"name": "sha256", "checksum": "e96379f2bf197d444bc234499560e559a53c3aa5549c7d0a9449ceac27ec274b"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Optional model that will pull out the most recent instance of a particular event parameter for each session_key.  Later used in the fct_ga4__sessions fact table.\n", "columns": {"session_key": {"name": "session_key", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__derived_session_properties.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "enabled": false}, "created_at": 1732268181.5278883, "config_call_dict": {"enabled": false, "materialized": "table"}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__derived_session_properties`", "raw_code": "{{ config(\n  enabled = true if var('derived_session_properties', false) else false,\n  materialized = \"table\"\n) }}\n\n-- Remove null session_keys (users with privacy enabled)\nwith events_from_valid_users as (\n    select * from {{ref('stg_ga4__events')}}\n    where session_key is not null\n),\nunnest_event_params as\n(\n    select \n        session_key,\n        event_timestamp\n        {% for sp in var('derived_session_properties', []) %}\n            {% if sp.user_property %}\n                , {{ ga4.unnest_key('user_properties', sp.user_property, sp.value_type) }}\n            {% else %}\n                , {{ ga4.unnest_key('event_params', sp.event_parameter, sp.value_type) }}\n            {% endif %}\n        {% endfor %}\n    from events_from_valid_users\n)\n\nSELECT DISTINCT\n    session_key\n    {% for sp in var('derived_session_properties', []) %}\n        , LAST_VALUE({{ sp.user_property | default(sp.event_parameter) }} IGNORE NULLS) OVER (session_window) AS {{ sp.session_property_name }}\n    {% endfor %}\nFROM unnest_event_params\nWINDOW session_window AS (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__user_id_mapping": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__user_id_mapping", "resource_type": "model", "package_name": "ga4", "path": "staging/stg_ga4__user_id_mapping.sql", "original_file_path": "models/staging/stg_ga4__user_id_mapping.sql", "unique_id": "model.ga4.stg_ga4__user_id_mapping", "fqn": ["ga4", "staging", "stg_ga4__user_id_mapping"], "alias": "stg_ga4__user_id_mapping", "checksum": {"name": "sha256", "checksum": "d5471fbbdc966749dffdd36ddf38aca67f8ff79c41431a49e07eb133dc3dd92b"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Mapping table that contains the latest association between client_key and user_id. Unique on client_key", "columns": {"client_key": {"name": "client_key", "description": "Hashed combination of user_pseudo_id and stream_id", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/stg_ga4__user_id_mapping.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268181.5308998, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__user_id_mapping`", "raw_code": "{{\n      config(\n        enabled = var('is_user_id_implemented', true),\n        )\n    }}\n\nwith events_with_user_id as (\n    select \n        user_id,\n        client_key,\n        event_timestamp \n    from {{ref('stg_ga4__events')}}\n    where user_id is not null\n        and client_key is not null\n),\ninclude_last_seen_timestamp as (\n    select \n        user_id,\n        client_key,\n        max(event_timestamp) as last_seen_user_id_timestamp\n    from events_with_user_id\n    group by 1,2\n),\npick_latest_timestamp as (\n    select\n        user_id as last_seen_user_id,\n        client_key,\n        last_seen_user_id_timestamp\n    from include_last_seen_timestamp\n    -- Find the latest mapping between client_key and user_id\n    qualify row_number() over(partition by client_key order by last_seen_user_id_timestamp desc) = 1\n\n)\n\nselect * from pick_latest_timestamp", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_generate_lead": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_generate_lead", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_generate_lead.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_generate_lead.sql", "unique_id": "model.ga4.stg_ga4__event_generate_lead", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_generate_lead"], "alias": "stg_ga4__event_generate_lead", "checksum": {"name": "sha256", "checksum": "17dbecd1a132c2ab31b53779c4fa5674e7ef928ba4d1826db71d58cda5127fa9"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.1627824, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_generate_lead`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n\nwith generate_lead_with_params as (\n    select *,\n    {{ ga4.unnest_key('event_params', 'currency') }},\n    {{ ga4.unnest_key('event_params', 'value') }}\n    {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n    {% endif %}\n    {% if var(\"generate_lead_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"generate_lead_custom_parameters\") )}}\n    {% endif %}\n    from {{ref('stg_ga4__events')}}\n    where event_name = 'generate_lead'\n)\n\nselect * from generate_lead_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_purchase_deduplicated": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_purchase_deduplicated", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_purchase_deduplicated.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_purchase_deduplicated.sql", "unique_id": "model.ga4.stg_ga4__event_purchase_deduplicated", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_purchase_deduplicated"], "alias": "stg_ga4__event_purchase_deduplicated", "checksum": {"name": "sha256", "checksum": "6db7768459b2067ddb6fcd2b1d2669a066c5903a8ca9a05ffe6e4457418914c9"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.171632, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_purchase_deduplicated`", "raw_code": "{% if not flags.FULL_REFRESH %}\n    {% set partitions_to_query = ['current_date'] %}\n    {% for i in range(var('static_incremental_days', 1)) %}\n        {% set partitions_to_query = partitions_to_query.append('date_sub(current_date, interval ' + (i+1)|string + ' day)') %}\n    {% endfor %}\n{% endif %}\n\n{{\n  config(\n      enabled = false,\n  )\n}}\nwith purch as (\n    select\n        *\n    from {{ref('stg_ga4__event_purchase')}}\n    {% if not flags.FULL_REFRESH %}\n        where event_date_dt in ({{ partitions_to_query | join(',') }})\n    {% endif %}\n    qualify row_number() over(\n        partition by transaction_id\n            order by event_timestamp\n    ) = 1\n)\nselect\n    *\nfrom purch", "language": "sql", "refs": [{"name": "stg_ga4__event_purchase", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_add_to_wishlist": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_add_to_wishlist", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_add_to_wishlist.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_add_to_wishlist.sql", "unique_id": "model.ga4.stg_ga4__event_add_to_wishlist", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_add_to_wishlist"], "alias": "stg_ga4__event_add_to_wishlist", "checksum": {"name": "sha256", "checksum": "2d791fc11afad48fbd0f2d7d6539256c7a7631bcceda9903f456abd4e122aaf8"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.18059, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_add_to_wishlist`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n with add_to_wishlist_with_params as (\n   select * except (items),\n   (select items FROM unnest(items) items LIMIT 1) as items,\n      {{ ga4.unnest_key('event_params', 'currency') }},\n      {{ ga4.unnest_key('event_params', 'value', 'float_value') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"add_to_wishlist_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"add_to_wishlist_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}, \n  unnest(items)\n where event_name = 'add_to_wishlist'\n)\n\nselect * from add_to_wishlist_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_purchase": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_purchase", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_purchase.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_purchase.sql", "unique_id": "model.ga4.stg_ga4__event_purchase", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_purchase"], "alias": "stg_ga4__event_purchase", "checksum": {"name": "sha256", "checksum": "d21ae3329860ae7d2749937fbd12552a034343150e4b5ffdc413176137dba80a"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "GA4 events filtered to only show 'purchase' events. Pivots common event parameters into separate columns.", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "ga4://models/staging/recommended_events/stg_ga4__event_purchase.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268181.5511847, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_purchase`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\nwith purchase_with_params as (\n  select * except (ecommerce),\n    ecommerce.total_item_quantity,\n    ecommerce.purchase_revenue_in_usd,\n    ecommerce.purchase_revenue,\n    ecommerce.shipping_value_in_usd,\n    ecommerce.shipping_value,\n    ecommerce.tax_value_in_usd,\n    ecommerce.tax_value,\n    ecommerce.unique_items,\n    {{ ga4.unnest_key('event_params', 'coupon') }},\n    {{ ga4.unnest_key('event_params', 'transaction_id') }},\n    {{ ga4.unnest_key('event_params', 'currency') }},\n    {{ ga4.unnest_key('event_params', 'value', 'double_value') }},\n    {{ ga4.unnest_key('event_params', 'tax', 'double_value') }},\n    {{ ga4.unnest_key('event_params', 'shipping', 'double_value') }},\n    {{ ga4.unnest_key('event_params', 'affiliation') }}\n    {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n    {% endif %}\n    {% if var(\"purchase_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"purchase_custom_parameters\") )}}\n    {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'purchase'\n)\n\nselect * from purchase_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_view_item": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_view_item", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_view_item.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_view_item.sql", "unique_id": "model.ga4.stg_ga4__event_view_item", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_view_item"], "alias": "stg_ga4__event_view_item", "checksum": {"name": "sha256", "checksum": "37fbfc2879ee2471756cf2f1a5366d5e473a5cf930f0983ef6f8129ca97c1244"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2007055, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_view_item`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\nwith view_item_with_params as (\n  select * except (items)\n  , {{ ga4.unnest_key('event_params', 'currency') }}\n  , {{ ga4.unnest_key('event_params', 'value', 'double_value') }}\n  , (select items from unnest(items) items limit 1) as items\n  {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n    {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n  {% endif %}\n  {% if var(\"view_item_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"view_item_custom_parameters\") )}}\n  {% endif %}\n from {{ref('stg_ga4__events')}}, \n  unnest(items)\n where event_name = 'view_item'\n)\n\nselect * from view_item_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_view_cart": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_view_cart", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_view_cart.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_view_cart.sql", "unique_id": "model.ga4.stg_ga4__event_view_cart", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_view_cart"], "alias": "stg_ga4__event_view_cart", "checksum": {"name": "sha256", "checksum": "2cc658a8184ac5534cdeaa7bd2748b1484515bf411d335ff3e02bb0cfcff23fa"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2097456, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_view_cart`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\nwith view_cart_with_params as (\n  select *,\n    {{ ga4.unnest_key('event_params', 'currency') }},\n    {{ ga4.unnest_key('event_params', 'value', 'float_value') }}\n    {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n    {% endif %}\n    {% if var(\"view_cart_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"view_cart_custom_parameters\") )}}\n    {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'view_cart'\n)\n\nselect * from view_cart_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_select_promotion": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_select_promotion", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_select_promotion.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_select_promotion.sql", "unique_id": "model.ga4.stg_ga4__event_select_promotion", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_select_promotion"], "alias": "stg_ga4__event_select_promotion", "checksum": {"name": "sha256", "checksum": "2355d1c8c8b1621d0624ab8aadeb92c51b9cabc7b4d8d7184865f941a3892b88"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2188008, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_select_promotion`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\nwith select_promotion_with_params as (\n  select * except (items),\n  (select items from unnest(items) items limit 1) as items\n  {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n    {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n  {% endif %}\n  {% if var(\"select_promotion_custom_parameters\", \"none\") != \"none\" %}\n    {{ ga4.stage_custom_parameters( var(\"select_promotion_custom_parameters\") )}}\n  {% endif %}\n from {{ref('stg_ga4__events')}}, \n  unnest(items)\n where event_name = 'select_promotion'\n)\n\nselect * from select_promotion_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_view_promotion": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_view_promotion", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_view_promotion.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_view_promotion.sql", "unique_id": "model.ga4.stg_ga4__event_view_promotion", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_view_promotion"], "alias": "stg_ga4__event_view_promotion", "checksum": {"name": "sha256", "checksum": "b1816d4016a0a3b65ab7f17cd3e8034c4abf41d9981e8250cdf008ee7860ec32"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2268581, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_view_promotion`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\nwith view_promotion_with_params as (\n  select * except (items),\n  (select items from unnest(items) items limit 1) as items\n  {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n    {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n  {% endif %}\n  {% if var(\"view_promotion_custom_parameters\", \"none\") != \"none\" %}\n    {{ ga4.stage_custom_parameters( var(\"view_promotion_custom_parameters\") )}}\n  {% endif %}\n from {{ref('stg_ga4__events')}}, \n  unnest(items)\n where event_name = 'view_promotion'\n)\n\nselect * from view_promotion_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_begin_checkout": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_begin_checkout", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_begin_checkout.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_begin_checkout.sql", "unique_id": "model.ga4.stg_ga4__event_begin_checkout", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_begin_checkout"], "alias": "stg_ga4__event_begin_checkout", "checksum": {"name": "sha256", "checksum": "92c6fc56cf2a11c6338a3d0b17aac1edb8b012ed9ca44a71103313dbccd7eda2"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2348902, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_begin_checkout`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n with begin_checkout_with_params as (\n   select *\n   , {{ ga4.unnest_key('event_params', 'currency') }}\n   , {{ ga4.unnest_key('event_params', 'value', 'double_value') }}\n   , {{ ga4.unnest_key('event_params', 'coupon') }}\n    {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n    {% endif %}\n    {% if var(\"begin_checkout_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"begin_checkout_custom_parameters\") )}}\n    {% endif %}\n from {{ref('stg_ga4__events')}}    \n where event_name = 'begin_checkout'\n)\n\nselect * from begin_checkout_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_share": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_share", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_share.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_share.sql", "unique_id": "model.ga4.stg_ga4__event_share", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_share"], "alias": "stg_ga4__event_share", "checksum": {"name": "sha256", "checksum": "05969237f5a160ad9ee7cc7175d2c99474699858904290cc85c2158b926135e6"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2445388, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_share`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n\nwith share_with_params as (\n    select *,\n    {{ ga4.unnest_key('event_params', 'method') }},\n    {{ ga4.unnest_key('event_params', 'content_type') }},\n    {{ ga4.unnest_key('event_params', 'item_id') }}\n    {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n    {% endif %}\n    {% if var(\"share_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"share_custom_parameters\") )}}\n    {% endif %}\n    from {{ref('stg_ga4__events')}}\n    where event_name = 'share'\n\n)\n\nselect * from share_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_add_shipping_info": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_add_shipping_info", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_add_shipping_info.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_add_shipping_info.sql", "unique_id": "model.ga4.stg_ga4__event_add_shipping_info", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_add_shipping_info"], "alias": "stg_ga4__event_add_shipping_info", "checksum": {"name": "sha256", "checksum": "00b8c89737ac3b5c765f4d6f69c555f4c33b7665f6804af4e8bedf0233d667b2"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.253949, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_add_shipping_info`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n with add_shipping_info_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'coupon') }},\n      {{ ga4.unnest_key('event_params', 'currency') }},\n      {{ ga4.unnest_key('event_params', 'shipping_tier') }},\n      {{ ga4.unnest_key('event_params', 'value', 'float_value') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"add_shipping_info_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"add_shipping_info_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'add_shipping_info'\n)\n\nselect * from add_shipping_info_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_search": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_search", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_search.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_search.sql", "unique_id": "model.ga4.stg_ga4__event_search", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_search"], "alias": "stg_ga4__event_search", "checksum": {"name": "sha256", "checksum": "8aa66ca17f413475a9ad1ae65befbf0018a32bf8d0dbdaf9f85fe1c3f7c5b3f0"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2638705, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_search`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n\n with search_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'search_term') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"search_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"search_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'search'\n)\n\nselect * from search_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_login": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_login", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_login.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_login.sql", "unique_id": "model.ga4.stg_ga4__event_login", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_login"], "alias": "stg_ga4__event_login", "checksum": {"name": "sha256", "checksum": "e4f0893aa855da9cf2eab6fda92b3f8c8ab1285570002b8393b6f7e58ce1c86c"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2722793, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_login`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n\n with login_with_params as (\n   select *\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"login_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"login_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'login'\n)\n\nselect * from login_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_add_to_cart": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_add_to_cart", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_add_to_cart.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_add_to_cart.sql", "unique_id": "model.ga4.stg_ga4__event_add_to_cart", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_add_to_cart"], "alias": "stg_ga4__event_add_to_cart", "checksum": {"name": "sha256", "checksum": "d8a444e67bcddca4f2367112187a024130a138efa32c05566bf7c225781d3f42"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2801468, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_add_to_cart`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n with add_to_cart_with_params as (\n   select *except (items),\n   {{ ga4.unnest_key('event_params', 'currency') }},\n   {{ ga4.unnest_key('event_params', 'value', 'double_value') }},\n   (select items FROM UNNEST(items) items LIMIT 1) as items\n    {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n    {% endif %}\n    {% if var(\"add_to_cart_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"add_to_cart_custom_parameters\") )}}\n    {% endif %}\n from {{ref('stg_ga4__events')}}, \n  unnest(items)\n where event_name = 'add_to_cart'\n)\n\nselect * from add_to_cart_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_view_item_list": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_view_item_list", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_view_item_list.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_view_item_list.sql", "unique_id": "model.ga4.stg_ga4__event_view_item_list", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_view_item_list"], "alias": "stg_ga4__event_view_item_list", "checksum": {"name": "sha256", "checksum": "8c3fe6f756d68bcf7b506a514e8d14b060abb4762b9458251a4441782970074e"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.289264, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_view_item_list`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\nwith view_item_list_with_params as (\n  select *\n  , {{ ga4.unnest_key('event_params', 'item_list_id') }}\n  , {{ ga4.unnest_key('event_params', 'item_list_name') }}\n  {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n    {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n  {% endif %}\n  {% if var(\"view_item_list_custom_parameters\", \"none\") != \"none\" %}\n    {{ ga4.stage_custom_parameters( var(\"view_item_list_custom_parameters\") )}}\n  {% endif %}\n from {{ref('stg_ga4__events')}}    \n where event_name = 'view_item_list'\n)\n\nselect * from view_item_list_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_sign_up": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_sign_up", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_sign_up.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_sign_up.sql", "unique_id": "model.ga4.stg_ga4__event_sign_up", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_sign_up"], "alias": "stg_ga4__event_sign_up", "checksum": {"name": "sha256", "checksum": "2ca335db7619769e6d9fdc378979524789dc785578b052d809bd2cb3ae13e793"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.2982006, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_sign_up`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n\n with sign_up_with_params as (\n   select *\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"sign_up_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"sign_up_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'sign_up'\n)\n\nselect * from sign_up_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_refund": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_refund", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_refund.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_refund.sql", "unique_id": "model.ga4.stg_ga4__event_refund", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_refund"], "alias": "stg_ga4__event_refund", "checksum": {"name": "sha256", "checksum": "4885c33e98e5d067f4f96a2eeae039af4977ffa498e6cf47139800969500bf8a"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.306112, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_refund`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\nwith refund_with_params as (\n  select * except (ecommerce),\n    ecommerce.total_item_quantity,\n    ecommerce.purchase_revenue_in_usd,\n    ecommerce.purchase_revenue,\n    ecommerce.shipping_value_in_usd,\n    ecommerce.shipping_value,\n    ecommerce.refund_value_in_usd,\n    ecommerce.refund_value,\n    ecommerce.tax_value_in_usd,\n    ecommerce.tax_value,\n    ecommerce.unique_items,\n    {{ ga4.unnest_key('event_params', 'coupon') }},\n    {{ ga4.unnest_key('event_params', 'transaction_id') }},\n    {{ ga4.unnest_key('event_params', 'currency') }},\n    {{ ga4.unnest_key('event_params', 'value', 'float_value') }},\n    {{ ga4.unnest_key('event_params', 'tax', 'float_value') }},\n    {{ ga4.unnest_key('event_params', 'shipping', 'float_value') }},\n    {{ ga4.unnest_key('event_params', 'affiliation') }}\n    {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n    {% endif %}\n    {% if var(\"refund_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"refund_custom_parameters\") )}}\n    {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'refund'\n)\n\nselect * from refund_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_add_payment_info": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_add_payment_info", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_add_payment_info.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_add_payment_info.sql", "unique_id": "model.ga4.stg_ga4__event_add_payment_info", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_add_payment_info"], "alias": "stg_ga4__event_add_payment_info", "checksum": {"name": "sha256", "checksum": "32e559e2fd4815ff087f26cb615a0308b034a86e9043a8ac4eed4de3b27d8118"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.3174524, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_add_payment_info`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\n\n with add_payment_info_with_params as (\n   select *,\n      {{ ga4.unnest_key('event_params', 'coupon') }},\n      {{ ga4.unnest_key('event_params', 'currency') }},\n      {{ ga4.unnest_key('event_params', 'payment_type') }},\n      {{ ga4.unnest_key('event_params', 'value', 'float_value') }}\n      {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n      {% endif %}\n      {% if var(\"add_payment_info_custom_parameters\", \"none\") != \"none\" %}\n        {{ ga4.stage_custom_parameters( var(\"add_payment_info_custom_parameters\") )}}\n      {% endif %}\n from {{ref('stg_ga4__events')}}\n where event_name = 'add_payment_info'\n)\n\nselect * from add_payment_info_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_select_item": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_select_item", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_select_item.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_select_item.sql", "unique_id": "model.ga4.stg_ga4__event_select_item", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_select_item"], "alias": "stg_ga4__event_select_item", "checksum": {"name": "sha256", "checksum": "61cf777d7661adb400c0a8a7fb31e4fa78e0bff141bd59b31d94fa966536e979"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.3276465, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_select_item`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\nwith select_item_with_params as (\n  select * except (items),\n  (select items from unnest(items) items limit 1) as items\n  {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n    {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n  {% endif %}\n  {% if var(\"select_item_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"select_item_custom_parameters\") )}}\n  {% endif %}\n from {{ref('stg_ga4__events')}},\n  unnest(items)   \n where event_name = 'select_item'\n)\n\nselect * from select_item_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}], "model.ga4.stg_ga4__event_remove_from_cart": [{"database": "agile-scheme-394814", "schema": "dbt_prod", "name": "stg_ga4__event_remove_from_cart", "resource_type": "model", "package_name": "ga4", "path": "staging/recommended_events/stg_ga4__event_remove_from_cart.sql", "original_file_path": "models/staging/recommended_events/stg_ga4__event_remove_from_cart.sql", "unique_id": "model.ga4.stg_ga4__event_remove_from_cart", "fqn": ["ga4", "staging", "recommended_events", "stg_ga4__event_remove_from_cart"], "alias": "stg_ga4__event_remove_from_cart", "checksum": {"name": "sha256", "checksum": "8fe4ffa5b3d2e20701b533534ef948cf17c1894adbd505bfc4c257058f1fbc56"}, "config": {"enabled": false, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "enabled": false}, "created_at": 1732268179.3357925, "config_call_dict": {"enabled": false}, "relation_name": "`agile-scheme-394814`.`dbt_prod`.`stg_ga4__event_remove_from_cart`", "raw_code": "{{\n  config(\n      enabled = false,\n  )\n}}\nwith remove_from_cart_with_params as (\n  select * except (items)\n  , {{ ga4.unnest_key('event_params', 'currency') }}\n  , {{ ga4.unnest_key('event_params', 'value', 'double_value') }}\n  , (select items from unnest(items) items limit 1) as items\n  {% if var(\"default_custom_parameters\", \"none\") != \"none\" %}\n    {{ ga4.stage_custom_parameters( var(\"default_custom_parameters\") )}}\n  {% endif %}\n  {% if var(\"remove_from_cart_custom_parameters\", \"none\") != \"none\" %}\n      {{ ga4.stage_custom_parameters( var(\"remove_from_cart_custom_parameters\") )}}\n  {% endif %}\nfrom {{ref('stg_ga4__events')}}, \nunnest(items)\n where event_name = 'remove_from_cart'\n)\n\nselect * from remove_from_cart_with_params", "language": "sql", "refs": [{"name": "stg_ga4__events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.ga4.unnest_key"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "defer_relation": null}]}, "parent_map": {"model.sado_analytics_services.fct__constructing_tasks": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.stg_gsheet__construction"], "model.sado_analytics_services.fct__construction_estimates": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.stg_gsheet__construction"], "model.sado_analytics_services.fct__manufactoring_progress": ["model.sado_analytics_services.stg_gsheet__manufacture_plan", "model.sado_analytics_services.stg_kiotviet__products", "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails"], "model.sado_analytics_services.fct__cs_calls": ["model.sado_analytics_services.fct__customers", "model.sado_analytics_services.fct__transactions", "model.sado_analytics_services.stg_gsheet__cs_calls"], "model.sado_analytics_services.dim__contents": ["model.sado_analytics_services.stg_gsheet__contents"], "model.sado_analytics_services.dim__posts": ["model.fb.dim_fb__posts"], "model.sado_analytics_services.fct__facebook_performance": [], "model.sado_analytics_services.fct__page_impressions_by_city": ["model.fb.fct_fb__page_impressions_by_city"], "model.sado_analytics_services.fct__video_view_time_by_city": ["model.fb.fct_fb__video_view_time_by_city"], "model.sado_analytics_services.offline_conversion": ["model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_kiotviet__customers", "model.sado_analytics_services.stg_kiotviet__invoices"], "model.sado_analytics_services.dim__ad_accounts": ["model.fb.stg_fb__ad_accounts"], "model.sado_analytics_services.fct__post_insights": ["model.fb.fct_fb__post_insights"], "model.sado_analytics_services.dim__campaigns": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.dim__provinces", "model.sado_analytics_services.dim__regions", "model.sado_analytics_services.int__product_group", "model.sado_analytics_services.stg_facebookads__campaigns"], "model.sado_analytics_services.fct__video_view_time_by_age_gender": ["model.fb.fct_fb__video_view_time_by_age_gender"], "model.sado_analytics_services.fct__page_impressions_by_age_gender": ["model.fb.fct_fb__page_impressions_by_age_gender"], "model.sado_analytics_services.fct__video_retention": ["model.fb.fct_fb__video_retention"], "model.sado_analytics_services.fct__page_insights": ["model.fb.fct_fb__page_insights"], "model.sado_analytics_services.facebook_performance": ["model.sado_analytics_services.stg_facebookads__adsinsights"], "model.sado_analytics_services.dim__pages": ["model.fb.stg_fb__pages", "model.sado_analytics_services.dim__location_groups"], "model.sado_analytics_services.facebook_budget": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.dim__branches", "model.sado_analytics_services.stg_gsheet__facebook_budget", "seed.sado_analytics_services.kiotviet__removed_branch"], "model.sado_analytics_services.dim__location_groups": ["model.sado_analytics_services.dim__branches"], "model.sado_analytics_services.fct__sms_revenue": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.fct__customers", "model.sado_analytics_services.fct__transactions", "model.sado_analytics_services.stg_esms__sent_data"], "model.sado_analytics_services.google_ad_group_performance": ["model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats", "model.sado_analytics_services.stg_googleads__ad_group_stats"], "model.sado_analytics_services.google_campaign_performance": ["model.sado_analytics_services.stg_googleads__campaign_conversion_stats", "model.sado_analytics_services.stg_googleads__campaign_stats"], "model.sado_analytics_services.dim__client_keys": ["model.ga4.dim_ga4__client_keys"], "model.sado_analytics_services.dim__sessions": ["model.ga4.dim_ga4__sessions"], "model.sado_analytics_services.fct__pagespeed_cwv": ["model.sado_analytics_services.stg_pagespeed__metrics"], "model.sado_analytics_services.dim__sessions_daily": ["model.ga4.dim_ga4__sessions_daily"], "model.sado_analytics_services.fct__sessions_daily": ["model.ga4.fct_ga4__sessions_daily", "model.sado_analytics_services.dim__excluded_clients"], "model.sado_analytics_services.fct__client_keys": ["model.ga4.fct_ga4__client_keys", "model.sado_analytics_services.dim__excluded_clients"], "model.sado_analytics_services.fct__pages": ["model.ga4.fct_ga4__pages"], "model.sado_analytics_services.fct__pagespeed_score": ["model.sado_analytics_services.stg_pagespeed__metrics"], "model.sado_analytics_services.fct__items_performance": ["model.ga4.stg_ga4__event_items", "model.sado_analytics_services.dim__excluded_clients"], "model.sado_analytics_services.fct__sessions": ["model.ga4.fct_ga4__sessions", "model.sado_analytics_services.dim__excluded_clients"], "model.sado_analytics_services.dim__excluded_clients": ["model.ga4.dim_ga4__client_keys"], "model.sado_analytics_services.pancake_performance__by__users": ["model.sado_analytics_services.stg_pancake__orders", "model.sado_analytics_services.stg_pancake__user_stats"], "model.sado_analytics_services.conversations_engaged": ["model.sado_analytics_services.stg_pancake__conversations", "model.sado_analytics_services.stg_pancake__tags"], "model.sado_analytics_services.fct__daily_inventory": ["model.sado_analytics_services.int_kiotviet__inventory_change", "model.sado_analytics_services.int_kiotviet__return_items", "model.sado_analytics_services.int_kiotviet__revenue_items", "model.sado_analytics_services.stg_kiotviet__transfers_details"], "model.sado_analytics_services.fct__curent_inventory": ["model.sado_analytics_services.stg_kiotviet__inventories"], "model.sado_analytics_services.dim__regions": ["seed.sado_analytics_services.regions"], "model.sado_analytics_services.dim__inventory_classes": ["model.sado_analytics_services.dim__inventory_items"], "model.sado_analytics_services.dim__branches": ["model.sado_analytics_services.stg_gsheet__asms", "model.sado_analytics_services.stg_kiotviet__branches", "model.sado_analytics_services.stg_nhanhvn__sales_channels"], "model.sado_analytics_services.fct__working_days": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.dim__branches", "seed.sado_analytics_services.promotions"], "model.sado_analytics_services.dim__sms_campaigns": ["model.sado_analytics_services.stg_esms__sent_data"], "model.sado_analytics_services.dim__provinces": ["seed.sado_analytics_services.provinces"], "model.sado_analytics_services.dim__inventory_items": ["model.sado_analytics_services.int__product_group", "model.sado_analytics_services.stg_kiotviet__products", "model.sado_analytics_services.stg_nhanhvn__products"], "model.sado_analytics_services.rfm_movement": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.fct__transactions"], "model.sado_analytics_services.fct__revenue_items": ["model.sado_analytics_services.int_kiotviet__return_items", "model.sado_analytics_services.int_kiotviet__revenue_items", "model.sado_analytics_services.int_nhanhvn__revenue_items", "snapshot.sado_analytics_services.stg_gsheet__cogs"], "model.sado_analytics_services.revenue_items": ["model.sado_analytics_services.stg_kiotviet__invoicedetails", "model.sado_analytics_services.stg_kiotviet__returndetails"], "model.sado_analytics_services.fct__customers_attributes": ["model.sado_analytics_services.fct__transactions"], "model.sado_analytics_services.revenue": ["model.sado_analytics_services.stg_kiotviet__invoices", "model.sado_analytics_services.stg_kiotviet__returns"], "model.sado_analytics_services.fct__customers": ["model.sado_analytics_services.stg_kiotviet__customers", "model.sado_analytics_services.stg_nhanhvn__customers"], "model.sado_analytics_services.fct__transactions": ["model.sado_analytics_services.int_kiotviet__invoices", "model.sado_analytics_services.int_kiotviet__returns", "model.sado_analytics_services.int_nhanhvn__ordersdetails"], "model.sado_analytics_services.orders_items": ["model.sado_analytics_services.stg_nhanhvn__carriers", "model.sado_analytics_services.stg_nhanhvn__ordersdetails"], "model.sado_analytics_services.fct_sp__orders": ["model.sado_analytics_services.stg_sp__orders"], "model.sado_analytics_services.calendar": ["model.sado_analytics_services.stg_gsheet__facebook_budget"], "model.sado_analytics_services.weather": ["source.sado_analytics_services.misc.weather", "source.sado_analytics_services.misc.weather_hourly"], "model.sado_analytics_services.metricflow_time_spine": [], "model.sado_analytics_services.stg_forecaster__forecast": ["source.sado_analytics_services.forecaster.forecast"], "model.sado_analytics_services.stg_nhanhvn__sales_channels": [], "model.sado_analytics_services.stg_nhanhvn__products": ["source.sado_analytics_services.nhanhvn.p_categories", "source.sado_analytics_services.nhanhvn.p_products"], "model.sado_analytics_services.stg_nhanhvn__customers": ["source.sado_analytics_services.nhanhvn.p_customers"], "model.sado_analytics_services.stg_nhanhvn__depots": ["source.sado_analytics_services.nhanhvn.p_stores"], "model.sado_analytics_services.stg_nhanhvn__bills": ["source.sado_analytics_services.nhanhvn.p_bills"], "model.sado_analytics_services.stg_nhanhvn__inventories": ["model.sado_analytics_services.stg_nhanhvn__depots", "source.sado_analytics_services.nhanhvn.p_inventory", "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange"], "model.sado_analytics_services.stg_nhanhvn__users": ["source.sado_analytics_services.nhanhvn.p_users"], "model.sado_analytics_services.stg_nhanhvn__categories": ["source.sado_analytics_services.nhanhvn.p_categories"], "model.sado_analytics_services.stg_nhanhvn__ordersdetails": ["source.sado_analytics_services.nhanhvn.p_orders", "source.sado_analytics_services.nhanhvn.p_webhook_orderDelete"], "model.sado_analytics_services.stg_nhanhvn__carriers": ["source.sado_analytics_services.nhanhvn.p_carriers"], "model.sado_analytics_services.stg_kiotviet__inventories": ["source.sado_analytics_services.kiotViet.p_products_inventory", "source.sado_analytics_services.kiotViet.p_webhook_inventory_update"], "model.sado_analytics_services.stg_kiotviet__products": ["model.sado_analytics_services.stg_kiotviet__categories", "source.sado_analytics_services.kiotViet.p_products_list", "source.sado_analytics_services.kiotViet.webhook_product_delete"], "model.sado_analytics_services.stg_kiotviet__invoicepayments": ["model.sado_analytics_services.base_kiotViet__invoices"], "model.sado_analytics_services.stg_kiotviet__bankaccounts": ["source.sado_analytics_services.kiotViet.p_bankAccounts_list"], "model.sado_analytics_services.stg_kiotviet__customers": ["model.sado_analytics_services.base_kiotViet__customers", "model.sado_analytics_services.stg_kiotviet__branches"], "model.sado_analytics_services.stg_kiotviet__branches": ["source.sado_analytics_services.kiotViet.p_branches_list"], "model.sado_analytics_services.stg_kiotviet__transfers_details": ["source.sado_analytics_services.kiotViet.p_transfers_list"], "model.sado_analytics_services.stg_kiotviet__purchaseorders": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "model.sado_analytics_services.stg_kiotviet__suppliers": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "model.sado_analytics_services.stg_kiotviet__returnpayments": ["model.sado_analytics_services.base_kiotViet__returns"], "model.sado_analytics_services.stg_kiotviet__categories": ["source.sado_analytics_services.kiotViet.p_categories_list"], "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "model.sado_analytics_services.stg_kiotviet__returndetails": ["model.sado_analytics_services.base_kiotViet__returns"], "model.sado_analytics_services.stg_kiotviet__returns": ["model.sado_analytics_services.base_kiotViet__returns"], "model.sado_analytics_services.stg_kiotviet__locations": ["source.sado_analytics_services.kiotViet.p_locations_list"], "model.sado_analytics_services.stg_kiotviet__users": ["source.sado_analytics_services.kiotViet.p_users_list"], "model.sado_analytics_services.stg_kiotviet__invoices": ["model.sado_analytics_services.base_kiotViet__invoices"], "model.sado_analytics_services.stg_kiotviet__invoicedetails": ["model.sado_analytics_services.base_kiotViet__invoices"], "model.sado_analytics_services.base_kiotViet__invoices": ["source.sado_analytics_services.kiotViet.p_invoices_list", "source.sado_analytics_services.kiotViet.p_invoices_list2"], "model.sado_analytics_services.base_kiotViet__returns": ["source.sado_analytics_services.kiotViet.p_returns_list", "source.sado_analytics_services.kiotViet.p_returns_list2"], "model.sado_analytics_services.base_kiotViet__customers": ["source.sado_analytics_services.kiotViet.p_customers_list", "source.sado_analytics_services.kiotViet.p_webhook_customer_update"], "model.sado_analytics_services.base_kiotViet__purchaseOrders": ["source.sado_analytics_services.kiotViet.p_purchaseorders_list", "source.sado_analytics_services.kiotViet.p_purchaseorders_list2"], "model.sado_analytics_services.stg_esms__sent_data": ["source.sado_analytics_services.esms.sms_sent_data", "source.sado_analytics_services.esms.sms_sent_data_history"], "model.sado_analytics_services.stg_pagespeed__metrics": ["source.sado_analytics_services.pagespeed.pagespeed"], "model.sado_analytics_services.stg_googleads__ad_groups": ["model.sado_analytics_services.base_googleAds__adgroups"], "model.sado_analytics_services.stg_googleads__campaign_stats": ["source.sado_analytics_services.googleads.campaign_basic_stats"], "model.sado_analytics_services.stg_googleads__ad_group_stats": ["source.sado_analytics_services.googleads.ad_group_basic_stats"], "model.sado_analytics_services.stg_googleads__campaigns": ["model.sado_analytics_services.base_googleAds__accounts", "model.sado_analytics_services.base_googleAds__campaigns"], "model.sado_analytics_services.stg_googleads__shopping_product_stats": ["source.sado_analytics_services.googleads.shopping_product_stats"], "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats": ["source.sado_analytics_services.googleads.ad_group_cross_device_stats"], "model.sado_analytics_services.stg_googleads__search_query_stats": ["source.sado_analytics_services.googleads.search_query_stats"], "model.sado_analytics_services.stg_googleads__keyword_stats": ["source.sado_analytics_services.googleads.keyword", "source.sado_analytics_services.googleads.keyword_basic_stats"], "model.sado_analytics_services.stg_googleads__campaign_conversion_stats": ["source.sado_analytics_services.googleads.campaign_conversion_stats"], "model.sado_analytics_services.base_googleAds__campaigns": ["source.sado_analytics_services.googleads.campaign"], "model.sado_analytics_services.base_googleAds__accounts": ["source.sado_analytics_services.googleads.customer"], "model.sado_analytics_services.base_googleAds__adgroups": ["source.sado_analytics_services.googleads.ad_group"], "model.sado_analytics_services.base_googleAds__criterions": ["source.sado_analytics_services.googleads.ad_group_criterion"], "model.sado_analytics_services.stg_pancake__customers": ["model.sado_analytics_services.base_pancake__customers"], "model.sado_analytics_services.stg_pancake__orders": ["source.sado_analytics_services.pancake.pos_orders"], "model.sado_analytics_services.stg_pancake__posts": ["model.sado_analytics_services.base_pancake__posts"], "model.sado_analytics_services.stg_pancake__tags": ["model.sado_analytics_services.stg_gsheet__pancake_tags", "source.sado_analytics_services.pancake.tags"], "model.sado_analytics_services.stg_pancake__page_stats": ["source.sado_analytics_services.pancake.page_stats"], "model.sado_analytics_services.stg_pancake__pages": ["source.sado_analytics_services.pancake.pages"], "model.sado_analytics_services.stg_pancake__conversations": ["model.sado_analytics_services.base_pancake__conversations"], "model.sado_analytics_services.stg_pancake__user_stats": ["source.sado_analytics_services.pancake.user_stats"], "model.sado_analytics_services.stg_pancake__customer_engagements": ["source.sado_analytics_services.pancake.customer_engagements"], "model.sado_analytics_services.stg_pancake__users": ["source.sado_analytics_services.pancake.users"], "model.sado_analytics_services.base_pancake__conversations": ["source.sado_analytics_services.pancake.conversations"], "model.sado_analytics_services.base_pancake__posts": ["source.sado_analytics_services.pancake.posts"], "model.sado_analytics_services.base_pancake__customers": ["source.sado_analytics_services.pancake.customers"], "model.sado_analytics_services.stg_gsheet__manufacture_plan": ["source.sado_analytics_services.gSheet.manufacture_plan"], "model.sado_analytics_services.stg_gsheet__cs_calls": ["source.sado_analytics_services.gSheet.cs_calls"], "model.sado_analytics_services.stg_gsheet__facebook_budget": ["source.sado_analytics_services.gSheet.facebook_budget"], "model.sado_analytics_services.stg_gsheet__construction": ["source.sado_analytics_services.gSheet.constructing"], "model.sado_analytics_services.stg_gsheet__contents": ["source.sado_analytics_services.gSheet.content"], "model.sado_analytics_services.stg_gsheet__traffic": ["source.sado_analytics_services.gSheet.traffic"], "model.sado_analytics_services.stg_gsheet__maintainance": ["source.sado_analytics_services.gSheet.maintainance_sheet"], "model.sado_analytics_services.stg_gsheet__pancake_tags": ["source.sado_analytics_services.gSheet._ext_pancake_tags"], "model.sado_analytics_services.stg_gsheet__asms": ["source.sado_analytics_services.gSheet.asm_list"], "model.sado_analytics_services.stg_facebookads__regioninsights": ["model.fb.stg_fb__region_demographic", "model.sado_analytics_services.base_facebookAds__regionInsights"], "model.sado_analytics_services.stg__ad_product_categories": ["seed.sado_analytics_services.product_categories"], "model.sado_analytics_services.stg_facebookads__accountinsights": ["model.fb.stg_fb__account_insights", "model.sado_analytics_services.base_facebookAds__accountInsights"], "model.sado_analytics_services.stg_facebookads__creatives": ["model.sado_analytics_services.base_facebookAds__creatives"], "model.sado_analytics_services.stg_facebookads__campaigns": ["model.fb.dim_fb__campaigns", "source.sado_analytics_services.facebookAds.p_AdsInsights__*"], "model.sado_analytics_services.stg_facebookads__audienceinsights": ["model.fb.stg_fb__age_gender_demographic", "model.sado_analytics_services.base_facebookAds__audienceInsights"], "model.sado_analytics_services.stg_facebookads__adsinsights": ["model.fb.stg_fb__ad_insights", "source.sado_analytics_services.facebookAds.p_AdsInsights__*"], "model.sado_analytics_services.base_facebookAds__creatives": ["source.sado_analytics_services.facebookAds.p_CreativesInsights__*"], "model.sado_analytics_services.base_facebookAds__accountInsights": ["source.sado_analytics_services.facebookAds.p_AccountInsights__*"], "model.sado_analytics_services.base_facebookAds__regionInsights": ["source.sado_analytics_services.facebookAds.p_RegionInsights__*"], "model.sado_analytics_services.base_facebookAds__audienceInsights": ["source.sado_analytics_services.facebookAds.p_AudienceInsights__*"], "model.sado_analytics_services.stg_tiktokads__adgroups": ["source.sado_analytics_services.tiktok.adgroup"], "model.sado_analytics_services.stg_tiktokads__age_gender_insights": ["source.sado_analytics_services.tiktok.ad_age_gender"], "model.sado_analytics_services.stg_tiktokads__ads": ["source.sado_analytics_services.tiktok.ad"], "model.sado_analytics_services.stg_tiktokads__campaigns": ["source.sado_analytics_services.tiktok.campaign"], "model.sado_analytics_services.stg_tiktokads__ad_insights": ["source.sado_analytics_services.tiktok.ad_report_daily"], "model.sado_analytics_services.stg_tiktokads__video_insight": ["source.sado_analytics_services.tiktok.video_insight"], "model.sado_analytics_services.stg_tiktokads__creative_report": ["source.sado_analytics_services.tiktok.creative_report"], "model.sado_analytics_services.stg_5sfashion__orders": ["source.sado_analytics_services.web.order_shipings", "source.sado_analytics_services.web.orders"], "model.sado_analytics_services.stg_sp__orders": ["source.sado_analytics_services.shopee.order_list"], "model.sado_analytics_services.stg_sp__items": ["source.sado_analytics_services.shopee.item_list"], "model.sado_analytics_services.stg_sp__daily_performance": ["source.sado_analytics_services.shopee.ad_daily_performance"], "model.sado_analytics_services.stg_sp__hourly_performance": ["source.sado_analytics_services.shopee.ad_hourly_performance"], "model.sado_analytics_services.facebook_dashboard": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.dim__campaigns", "model.sado_analytics_services.facebook_budget", "model.sado_analytics_services.fct__transactions", "model.sado_analytics_services.stg_facebookads__adsinsights"], "model.sado_analytics_services.sales_forecast": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.sales_dashboard", "model.sado_analytics_services.stg_forecaster__forecast"], "model.sado_analytics_services.sales_dashboard": ["model.sado_analytics_services.facebook_budget", "model.sado_analytics_services.fct__transactions", "model.sado_analytics_services.int__working_days", "model.sado_analytics_services.stg_gsheet__traffic"], "model.sado_analytics_services.sms_dashboard": ["model.sado_analytics_services.fct__sms_revenue", "model.sado_analytics_services.rfm_movement", "model.sado_analytics_services.stg_esms__sent_data", "model.sado_analytics_services.stg_kiotviet__customers"], "model.sado_analytics_services.cohort_analysis": ["model.sado_analytics_services.fct__transactions", "model.sado_analytics_services.rfm_movement"], "model.sado_analytics_services.int_kiotviet__inventory_change": ["model.sado_analytics_services.int__working_days", "model.sado_analytics_services.stg_kiotviet__inventories"], "model.sado_analytics_services.int_customer_id_converter": ["model.sado_analytics_services.fct__customers"], "model.sado_analytics_services.int_pancake__ad_post_id": ["model.sado_analytics_services.base_pancake__conversations"], "model.sado_analytics_services.int_kiotviet__returns": ["model.sado_analytics_services.stg_kiotviet__returns"], "model.sado_analytics_services.int_nhanhvn__bills_reference_orders": ["model.sado_analytics_services.stg_nhanhvn__bills"], "model.sado_analytics_services.int_kiotviet__revenue_items": ["model.sado_analytics_services.stg_kiotviet__invoicedetails"], "model.sado_analytics_services.int_nhanhvn__ordersdetails": ["model.sado_analytics_services.int_customer_id_converter", "model.sado_analytics_services.stg_nhanhvn__ordersdetails"], "model.sado_analytics_services.int__product_group": ["model.sado_analytics_services.stg__ad_product_categories"], "model.sado_analytics_services.int_kiotviet__return_items": ["model.sado_analytics_services.stg_kiotviet__returndetails"], "model.sado_analytics_services.int__working_days": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.dim__branches", "seed.sado_analytics_services.promotions"], "model.sado_analytics_services.int_nhanhvn__revenue_items": ["model.sado_analytics_services.int_customer_id_converter", "model.sado_analytics_services.orders_items"], "model.sado_analytics_services.int_kiotviet__invoices": ["model.sado_analytics_services.stg_kiotviet__invoices"], "snapshot.sado_analytics_services.stg_gsheet__cogs": ["source.sado_analytics_services.gSheet.cogs"], "analysis.sado_analytics_services.sms_performance": ["model.sado_analytics_services.revenue", "model.sado_analytics_services.rfm_movement", "model.sado_analytics_services.stg_esms__sent_data", "model.sado_analytics_services.stg_kiotviet__customers"], "seed.sado_analytics_services.kiotviet__removed_branch": [], "seed.sado_analytics_services.regions": [], "seed.sado_analytics_services.product_categories": [], "seed.sado_analytics_services.promotions": [], "seed.sado_analytics_services.provinces": [], "model.ga4.dim_ga4__client_keys": ["model.ga4.stg_ga4__client_key_first_last_events", "model.ga4.stg_ga4__client_key_first_last_pageviews", "model.ga4.stg_ga4__derived_user_properties", "model.ga4.stg_ga4__user_properties"], "model.ga4.dim_ga4__sessions_daily": ["model.ga4.stg_ga4__events", "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"], "model.ga4.fct_ga4__client_keys": ["model.ga4.fct_ga4__sessions"], "model.ga4.fct_ga4__sessions": ["model.ga4.fct_ga4__sessions_daily", "model.ga4.stg_ga4__sessions_first_last_pageviews"], "model.ga4.fct_ga4__sessions_daily": ["model.ga4.stg_ga4__events", "model.ga4.stg_ga4__session_conversions_daily"], "model.ga4.dim_ga4__sessions": ["model.ga4.stg_ga4__events", "model.ga4.stg_ga4__sessions_first_last_pageviews", "model.ga4.stg_ga4__sessions_traffic_sources"], "model.ga4.fct_ga4__pages": ["model.ga4.stg_ga4__event_page_view", "model.ga4.stg_ga4__event_scroll", "model.ga4.stg_ga4__page_conversions", "model.ga4.stg_ga4__page_engaged_time"], "model.ga4.stg_ga4__client_key_first_last_events": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__sessions_traffic_sources": ["model.ga4.stg_ga4__events", "model.ga4.stg_ga4__sessions_first_last_pageviews", "seed.ga4.ga4_source_categories"], "model.ga4.stg_ga4__sessions_first_last_pageviews": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__events": ["model.ga4.base_ga4__events"], "model.ga4.stg_ga4__event_items": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__client_key_first_last_pageviews": ["model.ga4.stg_ga4__event_page_view"], "model.ga4.stg_ga4__sessions_traffic_sources_daily": ["model.ga4.stg_ga4__events", "seed.ga4.ga4_source_categories"], "model.ga4.stg_ga4__page_engaged_time": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__session_conversions_daily": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily": ["model.ga4.stg_ga4__sessions_traffic_sources_daily"], "model.ga4.stg_ga4__page_conversions": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__derived_user_properties": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_to_query_string_params": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__user_properties": ["model.ga4.stg_ga4__events"], "model.ga4.base_ga4__events": ["source.ga4.ga4.events"], "model.ga4.stg_ga4__event_page_view": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_file_download": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_first_visit": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_user_engagement": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_click": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_video_start": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_video_complete": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_session_start": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_scroll": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_view_search_results": ["model.ga4.stg_ga4__events"], "test.ga4.page_location_with_gclid_is_cpc": ["model.ga4.stg_ga4__events"], "seed.ga4.ga4_source_categories": [], "model.fb.fct_fb__video_view_time_by_city": ["model.fb.stg_fb__post_insights"], "model.fb.dim_fb__campaigns": ["model.fb.stg_fb__ad_accounts", "model.fb.stg_fb__ad_insights"], "model.fb.fct_fb__page_impressions_by_city": ["model.fb.stg_fb__page_insights"], "model.fb.fct_fb__video_retention": ["model.fb.stg_fb__post_insights"], "model.fb.fct_fb__post_insights": ["model.fb.stg_fb__post_insights"], "model.fb.dim_fb__posts": ["model.fb.stg_fb__page_posts"], "model.fb.fct_fb__video_view_time_by_age_gender": ["model.fb.stg_fb__post_insights"], "model.fb.fct_fb__page_insights": ["model.fb.stg_fb__page_insights"], "model.fb.fct_fb__page_impressions_by_age_gender": ["model.fb.stg_fb__page_insights"], "model.fb.stg_fb__page_insights": ["source.fb.fb.page_insights"], "model.fb.stg_fb__page_posts": ["source.fb.fb.page_posts"], "model.fb.stg_fb__post_insights": ["source.fb.fb.post_insights"], "model.fb.stg_fb__ad_accounts": ["source.fb.fb.ad_accounts"], "model.fb.stg_fb__ad_insights": ["source.fb.fb.ad_insights"], "model.fb.stg_fb__pages": ["source.fb.fb.pages"], "model.fb.stg_fb__age_gender_demographic": ["source.fb.fb.age_gender_demographic"], "model.fb.stg_fb__region_demographic": ["source.fb.fb.region_demographic"], "model.fb.stg_fb__account_insights": ["source.fb.fb.account_insights"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_performance_date_start__ad_key.086a5acd08": ["model.sado_analytics_services.facebook_performance"], "test.sado_analytics_services.unique_dim__location_groups_local_page_code.ec23d72d30": ["model.sado_analytics_services.dim__location_groups"], "test.sado_analytics_services.not_null_dim__location_groups_local_page_code.04c63063c8": ["model.sado_analytics_services.dim__location_groups"], "test.sado_analytics_services.not_null_facebook_performance__by_regions_row_id.150c8e7afb": [], "test.sado_analytics_services.unique_facebook_performance__by_regions_row_id.0700b95982": [], "test.sado_analytics_services.not_null_facebook_performance__by_audience_row_id.6dbacdaafb": [], "test.sado_analytics_services.unique_facebook_performance__by_audience_row_id.027825ed59": [], "test.sado_analytics_services.not_null_dim__campaigns_ad_key.aa80a608f1": ["model.sado_analytics_services.dim__campaigns"], "test.sado_analytics_services.unique_dim__campaigns_ad_key.125cd75bbe": ["model.sado_analytics_services.dim__campaigns"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_fct__sms_revenue_customer_id__transaction_date.74e3b79b6b": ["model.sado_analytics_services.fct__sms_revenue"], "test.sado_analytics_services.not_null_engagements_details_engagement_id.ba4b05a1b3": [], "test.sado_analytics_services.unique_engagements_details_engagement_id.fa02ef7234": [], "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58": ["model.sado_analytics_services.pancake_performance__by__users"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29": ["model.sado_analytics_services.pancake_performance__by__users"], "test.sado_analytics_services.not_null_tickets_ticket_id.6d0b33ca1c": [], "test.sado_analytics_services.unique_tickets_ticket_id.7bb6098968": [], "test.sado_analytics_services.unique_dim__inventory_classes_class_code.e12511cf37": ["model.sado_analytics_services.dim__inventory_classes"], "test.sado_analytics_services.unique_dim__offline_stores_branch_id.f6e48f9b5a": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_dim__inventory_items_extended_code__kiotviet_product_id__nhanhvn_product_id.ae3a5bfc21": ["model.sado_analytics_services.dim__inventory_items"], "test.sado_analytics_services.not_null_rfm_movement_first_purchase.597a31a8ff": ["model.sado_analytics_services.rfm_movement"], "test.sado_analytics_services.not_null_rfm_movement_last_purchase.f325cc0b69": ["model.sado_analytics_services.rfm_movement"], "test.sado_analytics_services.not_null_rfm_movement_segment.ef3b4c6511": ["model.sado_analytics_services.rfm_movement"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_rfm_movement_customer_id__start_of_month.d9b269e396": ["model.sado_analytics_services.rfm_movement"], "test.sado_analytics_services.not_null_fct__customers_attributes_registered_branch_id.2b83352f22": ["model.sado_analytics_services.fct__customers_attributes"], "test.sado_analytics_services.not_null_fct__customers_attributes_last_purchase_branch_id.8b2ec2edef": ["model.sado_analytics_services.fct__customers_attributes"], "test.sado_analytics_services.unique_revenue_transaction_id.716496c532": ["model.sado_analytics_services.revenue"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_revenue_items_transaction_id__product_id__price.e8265edabd": ["model.sado_analytics_services.revenue_items"], "test.sado_analytics_services.not_null_fct__customers_contact_number.7ec23edb3d": ["model.sado_analytics_services.fct__customers"], "test.sado_analytics_services.unique_fct__customers_contact_number.5bd80552c1": ["model.sado_analytics_services.fct__customers"], "test.sado_analytics_services.not_null_fct__customers_universal_customer_id.e16d885fed": ["model.sado_analytics_services.fct__customers"], "test.sado_analytics_services.unique_fct__customers_universal_customer_id.942475d339": ["model.sado_analytics_services.fct__customers"], "test.sado_analytics_services.not_null_fct__transactions_transaction_id.fb8e6580ac": ["model.sado_analytics_services.fct__transactions"], "test.sado_analytics_services.not_null_fct__transactions_branch_id.eaaf3373a0": ["model.sado_analytics_services.fct__transactions"], "test.sado_analytics_services.accepted_values_fct__transactions_transaction_type__invoice__return.9c79d27315": ["model.sado_analytics_services.fct__transactions"], "test.sado_analytics_services.unique_fct__transactions_transaction_source_id.52bdef8734": ["model.sado_analytics_services.fct__transactions"], "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d": ["model.sado_analytics_services.calendar"], "test.sado_analytics_services.unique_calendar_date.b4cbc0583a": ["model.sado_analytics_services.calendar"], "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_value_id.ff7804063b": [], "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_value_id.a076bcc09a": [], "test.sado_analytics_services.not_null_stg_caresoft__calls_id.2fb2499c5a": [], "test.sado_analytics_services.unique_stg_caresoft__calls_id.aede802cc2": [], "test.sado_analytics_services.not_null_stg_caresoft__calls_call_id.8d621fb840": [], "test.sado_analytics_services.unique_stg_caresoft__calls_call_id.62c4fd8e66": [], "test.sado_analytics_services.not_null_stg_caresoft__contacts_contact_id.eb790c43e2": [], "test.sado_analytics_services.unique_stg_caresoft__contacts_contact_id.9463562ba4": [], "test.sado_analytics_services.not_null_stg_caresoft__agents_id.718cd3c440": [], "test.sado_analytics_services.unique_stg_caresoft__agents_id.1dc507e0f7": [], "test.sado_analytics_services.unique_stg_caresoft__agents_email.90f55cfcb1": [], "test.sado_analytics_services.not_null_stg_caresoft__agents_email.360e1d9d56": [], "test.sado_analytics_services.not_null_stg_caresoft__chats_conversation_id.f2a0e81461": [], "test.sado_analytics_services.unique_stg_caresoft__chats_conversation_id.0f9e5f32bb": [], "test.sado_analytics_services.not_null_stg_caresoft__tickets_ticket_id.44b9236f2a": [], "test.sado_analytics_services.unique_stg_caresoft__tickets_ticket_id.d6716e1775": [], "test.sado_analytics_services.unique_stg_nhanhvn__ordersdetails_order_id.866b820324": ["model.sado_analytics_services.stg_nhanhvn__ordersdetails"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_kiotviet__transfers_details_transfer_id__product_id.3f26bf0e47": ["model.sado_analytics_services.stg_kiotviet__transfers_details"], "test.sado_analytics_services.unique_stg_kiotviet__products_product_id.487bb521de": ["model.sado_analytics_services.stg_kiotviet__products"], "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c": ["model.sado_analytics_services.stg_kiotviet__products"], "test.sado_analytics_services.unique_stg_kiotviet__invoices_transaction_id.a5024f2ad6": ["model.sado_analytics_services.stg_kiotviet__invoices"], "test.sado_analytics_services.not_null_stg_kiotviet__invoices_modified_date.ee9db5f44f": ["model.sado_analytics_services.stg_kiotviet__invoices"], "test.sado_analytics_services.not_null_stg_esms__sent_data_sent_id.47c6bc997c": ["model.sado_analytics_services.stg_esms__sent_data"], "test.sado_analytics_services.unique_stg_esms__sent_data_sent_id.7d9e07e2b4": ["model.sado_analytics_services.stg_esms__sent_data"], "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d": ["model.sado_analytics_services.stg_googleads__campaign_stats"], "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226": ["model.sado_analytics_services.stg_googleads__campaign_stats"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__manufacture_plan_plan_month__product_code__vendor.2222cb482c": ["model.sado_analytics_services.stg_gsheet__manufacture_plan"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__maintainance_branch_code__created_at__description.19787c00ce": ["model.sado_analytics_services.stg_gsheet__maintainance"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__age_gender_insights_ad_id__adgroup_id__campaign_id__date__age__gender.b054b6c435": ["model.sado_analytics_services.stg_tiktokads__age_gender_insights"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__ad_insights_ad_id__adgroup_id__campaign_id__date.31b24e06d5": ["model.sado_analytics_services.stg_tiktokads__ad_insights"], "test.sado_analytics_services.unique_stg_5sfashion__orders__order_id_.cc1d908e3a": ["model.sado_analytics_services.stg_5sfashion__orders"], "test.sado_analytics_services.not_null_stg_5sfashion__orders__order_id_.a11aa2146b": ["model.sado_analytics_services.stg_5sfashion__orders"], "test.sado_analytics_services.not_null_sales_forecast_date.c667cc5e3b": ["model.sado_analytics_services.sales_forecast"], "test.sado_analytics_services.unique_sales_forecast_date.52db94e4c4": ["model.sado_analytics_services.sales_forecast"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard__by_location_group_date__local_page_code__ad_pic.48c9fe0c1e": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sales_dashboard_branch_id__date.c916901df6": ["model.sado_analytics_services.sales_dashboard"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sms_dashboard_sent_time__segment__previous_segment__sms_id.7801047a52": ["model.sado_analytics_services.sms_dashboard"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard_date__local_page_code__ad_pic.0aed4662f1": ["model.sado_analytics_services.facebook_dashboard"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_cohort_analysis_customer_id__transaction_month.384c841fc7": ["model.sado_analytics_services.cohort_analysis"], "test.ga4.unique_fct_ga4__pages__event_date_dt_stream_id_page_location_.7db1d0597c": ["model.ga4.fct_ga4__pages"], "test.ga4.unique_dim_ga4__sessions_session_key.5ade237063": ["model.ga4.dim_ga4__sessions"], "test.ga4.unique_dim_ga4__client_keys_client_key.971e8b17de": ["model.ga4.dim_ga4__client_keys"], "test.ga4.unique_fct_ga4__client_keys_client_key.47115ed1b5": ["model.ga4.fct_ga4__client_keys"], "test.ga4.unique_fct_ga4__user_ids_md5_user_id_or_client_key_stream_id_.dcd4dac43e": [], "test.ga4.unique_fct_ga4__sessions_daily_session_partition_key.c7a2a3ef6c": ["model.ga4.fct_ga4__sessions_daily"], "test.ga4.unique_fct_ga4__sessions_session_key.93f6a798f0": ["model.ga4.fct_ga4__sessions"], "test.ga4.unique_dim_ga4__sessions_daily_session_partition_key.e40d884a13": ["model.ga4.dim_ga4__sessions_daily"], "test.ga4.unique_stg_ga4__user_properties_client_key.1ff0272413": ["model.ga4.stg_ga4__user_properties"], "test.ga4.unique_stg_ga4__events_event_key.985cc306e5": ["model.ga4.stg_ga4__events"], "test.ga4.unique_stg_ga4__sessions_first_last_pageviews_session_key.8984455c5e": ["model.ga4.stg_ga4__sessions_first_last_pageviews"], "test.ga4.unique_stg_ga4__client_key_first_last_pageviews_client_key.4cb23d702f": ["model.ga4.stg_ga4__client_key_first_last_pageviews"], "test.ga4.unique_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_partition_key.5383afcda4": ["model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_source.db8c720050": ["model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_source.449fe23be6": ["model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_default_channel_grouping.2483b5ae6b": ["model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily"], "test.ga4.unique_stg_ga4__derived_session_properties_daily_session_partition_key.03cee96a93": [], "test.ga4.unique_stg_ga4__session_conversions_daily_session_partition_key.03be265557": ["model.ga4.stg_ga4__session_conversions_daily"], "test.ga4.unique_stg_ga4__client_key_first_last_events_client_key.ed9b2aba25": ["model.ga4.stg_ga4__client_key_first_last_events"], "test.ga4.unique_stg_ga4__sessions_traffic_sources_session_key.417549e35d": ["model.ga4.stg_ga4__sessions_traffic_sources"], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_session_source.49313fe211": ["model.ga4.stg_ga4__sessions_traffic_sources"], "test.ga4.unique_stg_ga4__sessions_traffic_sources_daily_session_partition_key.0a63631827": ["model.ga4.stg_ga4__sessions_traffic_sources_daily"], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_daily_session_source.5204b8a71d": ["model.ga4.stg_ga4__sessions_traffic_sources_daily"], "test.ga4.unique_stg_ga4__derived_session_properties_session_key.64e97d9e4f": [], "test.ga4.not_null_stg_ga4__user_id_mapping_client_key.7c63d41e4c": [], "test.ga4.unique_stg_ga4__user_id_mapping_client_key.cae6196948": [], "test.ga4.unique_stg_ga4__derived_user_properties_client_key.74573345b3": ["model.ga4.stg_ga4__derived_user_properties"], "test.ga4.not_null_stg_ga4__event_page_view_page_location.8b37318084": ["model.ga4.stg_ga4__event_page_view"], "source.sado_analytics_services.misc.weather": [], "source.sado_analytics_services.misc.weather_hourly": [], "source.sado_analytics_services.caresoft.tickets": [], "source.sado_analytics_services.caresoft.ticket_details": [], "source.sado_analytics_services.caresoft.contacts": [], "source.sado_analytics_services.caresoft.contact_details": [], "source.sado_analytics_services.caresoft.calls": [], "source.sado_analytics_services.caresoft.chats": [], "source.sado_analytics_services.caresoft.chats_live": [], "source.sado_analytics_services.caresoft.chats_fb": [], "source.sado_analytics_services.caresoft.chats_zalo": [], "source.sado_analytics_services.caresoft.agents": [], "source.sado_analytics_services.caresoft.groups": [], "source.sado_analytics_services.caresoft.ticket_custom_fields": [], "source.sado_analytics_services.forecaster.forecast": [], "source.sado_analytics_services.nhanhvn.p_bills": [], "source.sado_analytics_services.nhanhvn.p_carriers": [], "source.sado_analytics_services.nhanhvn.p_categories": [], "source.sado_analytics_services.nhanhvn.p_customers": [], "source.sado_analytics_services.nhanhvn.p_orders": [], "source.sado_analytics_services.nhanhvn.p_products": [], "source.sado_analytics_services.nhanhvn.p_stores": [], "source.sado_analytics_services.nhanhvn.p_users": [], "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange": [], "source.sado_analytics_services.nhanhvn.p_webhook_orderAdd": [], "source.sado_analytics_services.nhanhvn.p_webhook_orderUpdate": [], "source.sado_analytics_services.nhanhvn.p_webhook_orderDelete": [], "source.sado_analytics_services.nhanhvn.p_inventory": [], "source.sado_analytics_services.kiotViet.p_products_list": [], "source.sado_analytics_services.kiotViet.p_branches_list": [], "source.sado_analytics_services.kiotViet.p_orders_list": [], "source.sado_analytics_services.kiotViet.p_pricebooks_branches": [], "source.sado_analytics_services.kiotViet.p_surcharges_list": [], "source.sado_analytics_services.kiotViet.p_pricebooks_users": [], "source.sado_analytics_services.kiotViet.p_users_list": [], "source.sado_analytics_services.kiotViet.p_categories_list": [], "source.sado_analytics_services.kiotViet.p_purchaseorders_list": [], "source.sado_analytics_services.kiotViet.p_purchaseorders_list2": [], "source.sado_analytics_services.kiotViet.p_customersGroups_list": [], "source.sado_analytics_services.kiotViet.p_pricebooks_customer_groups": [], "source.sado_analytics_services.kiotViet.p_invoices_list": [], "source.sado_analytics_services.kiotViet.p_invoices_list2": [], "source.sado_analytics_services.kiotViet.p_returns_list": [], "source.sado_analytics_services.kiotViet.p_returns_list2": [], "source.sado_analytics_services.kiotViet.p_bankAccounts_list": [], "source.sado_analytics_services.kiotViet.p_saleschannels_list": [], "source.sado_analytics_services.kiotViet.p_customers_list": [], "source.sado_analytics_services.kiotViet.p_locations_list": [], "source.sado_analytics_services.kiotViet.p_products_inventory": [], "source.sado_analytics_services.kiotViet.p_pricebooks_list": [], "source.sado_analytics_services.kiotViet.p_webhook_invoice_update": [], "source.sado_analytics_services.kiotViet.p_webhook_inventory_update": [], "source.sado_analytics_services.kiotViet.p_webhook_customer_update": [], "source.sado_analytics_services.kiotViet.p_transfers_list": [], "source.sado_analytics_services.kiotViet.webhook_product_delete": [], "source.sado_analytics_services.esms.sms_sent_data": [], "source.sado_analytics_services.esms.sms_sent_data_history": [], "source.sado_analytics_services.pagespeed.pagespeed": [], "source.sado_analytics_services.googleads.account_conversion_stats": [], "source.sado_analytics_services.googleads.keyword_cross_device_stats": [], "source.sado_analytics_services.googleads.hourly_account_stats": [], "source.sado_analytics_services.googleads.gender": [], "source.sado_analytics_services.googleads.ad_conversion_stats": [], "source.sado_analytics_services.googleads.search_query_conversion_stats": [], "source.sado_analytics_services.googleads.video_non_click_stats": [], "source.sado_analytics_services.googleads.ad_group_conversion_stats": [], "source.sado_analytics_services.googleads.hourly_campaign_stats": [], "source.sado_analytics_services.googleads.campaign_cross_device_stats": [], "source.sado_analytics_services.googleads.gender_non_click_stats": [], "source.sado_analytics_services.googleads.video": [], "source.sado_analytics_services.googleads.video_basic_stats": [], "source.sado_analytics_services.googleads.campaign_audience_non_click_stats": [], "source.sado_analytics_services.googleads.hourly_account_conversion_stats": [], "source.sado_analytics_services.googleads.video_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_audience": [], "source.sado_analytics_services.googleads.age_range_non_click_stats": [], "source.sado_analytics_services.googleads.account_non_click_stats": [], "source.sado_analytics_services.googleads.parental_status_basic_stats": [], "source.sado_analytics_services.googleads.ad_stats": [], "source.sado_analytics_services.googleads.hourly_ad_group_conversion_stats": [], "source.sado_analytics_services.googleads.parental_status_stats": [], "source.sado_analytics_services.googleads.bid_goal": [], "source.sado_analytics_services.googleads.ad_cross_device_stats": [], "source.sado_analytics_services.googleads.ad_group_ad_label": [], "source.sado_analytics_services.googleads.ad_group_audience_conversion_stats": [], "source.sado_analytics_services.googleads.search_query_stats": [], "source.sado_analytics_services.googleads.ad_group_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.budget": [], "source.sado_analytics_services.googleads.bid_goal_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_cross_device_stats": [], "source.sado_analytics_services.googleads.age_range_stats": [], "source.sado_analytics_services.googleads.campaign_audience": [], "source.sado_analytics_services.googleads.keyword_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.campaign": [], "source.sado_analytics_services.googleads.ad_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.placement_basic_stats": [], "source.sado_analytics_services.googleads.age_range_basic_stats": [], "source.sado_analytics_services.googleads.keyword_basic_stats": [], "source.sado_analytics_services.googleads.parental_status_non_click_stats": [], "source.sado_analytics_services.googleads.gender_conversion_stats": [], "source.sado_analytics_services.googleads.placement_stats": [], "source.sado_analytics_services.googleads.ad_group": [], "source.sado_analytics_services.googleads.ad_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_stats": [], "source.sado_analytics_services.googleads.placement_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_stats": [], "source.sado_analytics_services.googleads.campaign_conversion_stats": [], "source.sado_analytics_services.googleads.budget_stats": [], "source.sado_analytics_services.googleads.account_basic_stats": [], "source.sado_analytics_services.googleads.customer": [], "source.sado_analytics_services.googleads.campaign_label": [], "source.sado_analytics_services.googleads.age_range_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_audience_basic_stats": [], "source.sado_analytics_services.googleads.keyword_stats": [], "source.sado_analytics_services.googleads.hourly_ad_group_stats": [], "source.sado_analytics_services.googleads.placement": [], "source.sado_analytics_services.googleads.video_stats": [], "source.sado_analytics_services.googleads.campaign_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_label": [], "source.sado_analytics_services.googleads.parental_status_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_stats": [], "source.sado_analytics_services.googleads.campaign_audience_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_criterion": [], "source.sado_analytics_services.googleads.hourly_bid_goal_stats": [], "source.sado_analytics_services.googleads.click_stats": [], "source.sado_analytics_services.googleads.campaign_audience_stats": [], "source.sado_analytics_services.googleads.parental_status": [], "source.sado_analytics_services.googleads.geo_stats": [], "source.sado_analytics_services.googleads.ad_group_criterion_label": [], "source.sado_analytics_services.googleads.age_range": [], "source.sado_analytics_services.googleads.geo_conversion_stats": [], "source.sado_analytics_services.googleads.hourly_campaign_conversion_stats": [], "source.sado_analytics_services.googleads.keyword": [], "source.sado_analytics_services.googleads.campaign_cookie_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_criterion": [], "source.sado_analytics_services.googleads.paid_organic_stats": [], "source.sado_analytics_services.googleads.location_based_campaign_criterion": [], "source.sado_analytics_services.googleads.gender_stats": [], "source.sado_analytics_services.googleads.account_stats": [], "source.sado_analytics_services.googleads.shopping_product_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.product_group_stats": [], "source.sado_analytics_services.googleads.gender_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_bid_modifier": [], "source.sado_analytics_services.googleads.campaign_location_target_stats": [], "source.sado_analytics_services.googleads.ad_group_basic_stats": [], "source.sado_analytics_services.googleads.keyword_conversion_stats": [], "source.sado_analytics_services.googleads.shopping_product_stats": [], "source.sado_analytics_services.googleads.placement_non_click_stats": [], "source.sado_analytics_services.googleads.bid_goal_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_non_click_stats": [], "source.sado_analytics_services.googleads.ad": [], "source.sado_analytics_services.pancake.users": [], "source.sado_analytics_services.pancake.conversations": [], "source.sado_analytics_services.pancake.customer_engagements": [], "source.sado_analytics_services.pancake.pages": [], "source.sado_analytics_services.pancake.user_stats": [], "source.sado_analytics_services.pancake.posts": [], "source.sado_analytics_services.pancake.tags": [], "source.sado_analytics_services.pancake.page": [], "source.sado_analytics_services.pancake.customers": [], "source.sado_analytics_services.pancake.page_stats": [], "source.sado_analytics_services.pancake.pos_orders": [], "source.sado_analytics_services.gSheet.asm_list": [], "source.sado_analytics_services.gSheet._ext_asm_list2": [], "source.sado_analytics_services.gSheet.facebook_budget": [], "source.sado_analytics_services.gSheet._ext_pancake_tags": [], "source.sado_analytics_services.gSheet.content": [], "source.sado_analytics_services.gSheet.maintainance_sheet": [], "source.sado_analytics_services.gSheet.constructing": [], "source.sado_analytics_services.gSheet.cs_calls": [], "source.sado_analytics_services.gSheet.manufacture_plan": [], "source.sado_analytics_services.gSheet.traffic": [], "source.sado_analytics_services.gSheet.cogs": [], "source.sado_analytics_services.facebookAds.p_AdsInsights__*": [], "source.sado_analytics_services.facebookAds.p_AccountInsights__*": [], "source.sado_analytics_services.facebookAds.p_AudienceInsights__*": [], "source.sado_analytics_services.facebookAds.p_RegionInsights__*": [], "source.sado_analytics_services.facebookAds.p_CreativesInsights__*": [], "source.sado_analytics_services.tiktok.campaign": [], "source.sado_analytics_services.tiktok.adgroup": [], "source.sado_analytics_services.tiktok.ad": [], "source.sado_analytics_services.tiktok.ad_age_gender": [], "source.sado_analytics_services.tiktok.ad_report_daily": [], "source.sado_analytics_services.tiktok.image_report": [], "source.sado_analytics_services.tiktok.search_report": [], "source.sado_analytics_services.tiktok.creative_report": [], "source.sado_analytics_services.tiktok.video_insight": [], "source.sado_analytics_services.web.orders": [], "source.sado_analytics_services.web.order_details": [], "source.sado_analytics_services.web.categories": [], "source.sado_analytics_services.web.order_shipings": [], "source.sado_analytics_services.web.products": [], "source.sado_analytics_services.web.product_details": [], "source.sado_analytics_services.shopee.order_list": [], "source.sado_analytics_services.shopee.item_list": [], "source.sado_analytics_services.shopee.ad_daily_performance": [], "source.sado_analytics_services.shopee.ad_hourly_performance": [], "source.ga4.ga4.events": [], "source.fb.fb.ad_accounts": [], "source.fb.fb.pages": [], "source.fb.fb.ad_insights": [], "source.fb.fb.region_demographic": [], "source.fb.fb.age_gender_demographic": [], "source.fb.fb.account_insights": [], "source.fb.fb.page_insights": [], "source.fb.fb.post_insights": [], "source.fb.fb.page_posts": [], "exposure.sado_analytics_services.facebook_dashboard": ["model.sado_analytics_services.facebook_dashboard", "model.sado_analytics_services.facebook_performance", "model.sado_analytics_services.revenue_items"], "exposure.sado_analytics_services.sales_dashboard": ["model.sado_analytics_services.revenue", "model.sado_analytics_services.revenue_items", "model.sado_analytics_services.rfm_movement"], "exposure.sado_analytics_services.sales_dashboard2": ["model.sado_analytics_services.revenue", "model.sado_analytics_services.revenue_items", "model.sado_analytics_services.rfm_movement", "model.sado_analytics_services.sales_dashboard"], "exposure.sado_analytics_services.customer_analysis": ["model.sado_analytics_services.revenue", "model.sado_analytics_services.revenue_items", "model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.fb_spend": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_impresions": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_clicks": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_reach": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_link_clicks": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_post_engagement": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_offline_conversion": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_offline_conversion_value": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_online_conversion": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_online_conversion_value": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_meta_conversion": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_meta_conversion_value": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.fb_messages": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.roas": ["metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_offline_conversion_value", "metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_spend"], "metric.sado_analytics_services.online_roas": ["metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_spend"], "metric.sado_analytics_services.spend_7d": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.offline_cv_7d": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.online_cv_7d": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.meta_cv_7d": ["semantic_model.sado_analytics_services.facebook_performance"], "metric.sado_analytics_services.roas_7d": ["metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"], "metric.sado_analytics_services.online_roas_7d": ["metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"], "metric.sado_analytics_services.gross_revenue": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.invoice_value": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.invoice_count": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.return_count": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.invoice_paid_value": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.returned_value": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.order_discounted_value": ["semantic_model.sado_analytics_services.revenue"], "metric.sado_analytics_services.aov": ["metric.sado_analytics_services.invoice_count", "metric.sado_analytics_services.invoice_value"], "metric.sado_analytics_services.pending_invoice": ["metric.sado_analytics_services.invoice_paid_value", "metric.sado_analytics_services.invoice_value"], "metric.sado_analytics_services.pct_returned": ["metric.sado_analytics_services.invoice_count", "metric.sado_analytics_services.return_count"], "metric.sado_analytics_services.qty_sold": ["semantic_model.sado_analytics_services.revenue_items"], "metric.sado_analytics_services.qty_returned": ["semantic_model.sado_analytics_services.revenue_items"], "metric.sado_analytics_services.item_discounted_value": ["semantic_model.sado_analytics_services.revenue_items"], "metric.sado_analytics_services.item_sold_value": ["semantic_model.sado_analytics_services.revenue_items"], "metric.sado_analytics_services.avg_discount_ratio": ["metric.sado_analytics_services.item_discounted_value", "metric.sado_analytics_services.item_sold_value"], "metric.sado_analytics_services.items_per_transaction": ["metric.sado_analytics_services.invoice_count", "metric.sado_analytics_services.qty_sold"], "metric.sado_analytics_services.num_customers_rfm": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.avg_monetary_value": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.med_monetary_value": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.total_monetary_value": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.avg_recency": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.median_recency": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.avg_freq": ["semantic_model.sado_analytics_services.rfm_movement"], "metric.sado_analytics_services.median_freq": ["semantic_model.sado_analytics_services.rfm_movement"], "semantic_model.sado_analytics_services.facebook_performance": ["model.sado_analytics_services.facebook_performance"], "semantic_model.sado_analytics_services.revenue": ["model.sado_analytics_services.revenue"], "semantic_model.sado_analytics_services.revenue_items": ["model.sado_analytics_services.revenue_items"], "semantic_model.sado_analytics_services.rfm_movement": ["model.sado_analytics_services.rfm_movement"]}, "child_map": {"model.sado_analytics_services.fct__constructing_tasks": [], "model.sado_analytics_services.fct__construction_estimates": [], "model.sado_analytics_services.fct__manufactoring_progress": [], "model.sado_analytics_services.fct__cs_calls": [], "model.sado_analytics_services.dim__contents": [], "model.sado_analytics_services.dim__posts": [], "model.sado_analytics_services.fct__facebook_performance": [], "model.sado_analytics_services.fct__page_impressions_by_city": [], "model.sado_analytics_services.fct__video_view_time_by_city": [], "model.sado_analytics_services.offline_conversion": [], "model.sado_analytics_services.dim__ad_accounts": [], "model.sado_analytics_services.fct__post_insights": [], "model.sado_analytics_services.dim__campaigns": ["model.sado_analytics_services.facebook_dashboard", "test.sado_analytics_services.not_null_dim__campaigns_ad_key.aa80a608f1", "test.sado_analytics_services.unique_dim__campaigns_ad_key.125cd75bbe"], "model.sado_analytics_services.fct__video_view_time_by_age_gender": [], "model.sado_analytics_services.fct__page_impressions_by_age_gender": [], "model.sado_analytics_services.fct__video_retention": [], "model.sado_analytics_services.fct__page_insights": [], "model.sado_analytics_services.facebook_performance": ["exposure.sado_analytics_services.facebook_dashboard", "semantic_model.sado_analytics_services.facebook_performance", "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_performance_date_start__ad_key.086a5acd08"], "model.sado_analytics_services.dim__pages": [], "model.sado_analytics_services.facebook_budget": ["model.sado_analytics_services.facebook_dashboard", "model.sado_analytics_services.sales_dashboard"], "model.sado_analytics_services.dim__location_groups": ["model.sado_analytics_services.dim__pages", "test.sado_analytics_services.not_null_dim__location_groups_local_page_code.04c63063c8", "test.sado_analytics_services.unique_dim__location_groups_local_page_code.ec23d72d30"], "model.sado_analytics_services.fct__sms_revenue": ["model.sado_analytics_services.sms_dashboard", "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_fct__sms_revenue_customer_id__transaction_date.74e3b79b6b"], "model.sado_analytics_services.google_ad_group_performance": [], "model.sado_analytics_services.google_campaign_performance": [], "model.sado_analytics_services.dim__client_keys": [], "model.sado_analytics_services.dim__sessions": [], "model.sado_analytics_services.fct__pagespeed_cwv": [], "model.sado_analytics_services.dim__sessions_daily": [], "model.sado_analytics_services.fct__sessions_daily": [], "model.sado_analytics_services.fct__client_keys": [], "model.sado_analytics_services.fct__pages": [], "model.sado_analytics_services.fct__pagespeed_score": [], "model.sado_analytics_services.fct__items_performance": [], "model.sado_analytics_services.fct__sessions": [], "model.sado_analytics_services.dim__excluded_clients": ["model.sado_analytics_services.fct__client_keys", "model.sado_analytics_services.fct__items_performance", "model.sado_analytics_services.fct__sessions", "model.sado_analytics_services.fct__sessions_daily"], "model.sado_analytics_services.pancake_performance__by__users": ["test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29", "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58"], "model.sado_analytics_services.conversations_engaged": [], "model.sado_analytics_services.fct__daily_inventory": [], "model.sado_analytics_services.fct__curent_inventory": [], "model.sado_analytics_services.dim__regions": ["model.sado_analytics_services.dim__campaigns"], "model.sado_analytics_services.dim__inventory_classes": ["test.sado_analytics_services.unique_dim__inventory_classes_class_code.e12511cf37"], "model.sado_analytics_services.dim__branches": ["model.sado_analytics_services.dim__campaigns", "model.sado_analytics_services.dim__location_groups", "model.sado_analytics_services.facebook_budget", "model.sado_analytics_services.facebook_dashboard", "model.sado_analytics_services.fct__constructing_tasks", "model.sado_analytics_services.fct__construction_estimates", "model.sado_analytics_services.fct__sms_revenue", "model.sado_analytics_services.fct__working_days", "model.sado_analytics_services.int__working_days", "model.sado_analytics_services.sales_forecast"], "model.sado_analytics_services.fct__working_days": [], "model.sado_analytics_services.dim__sms_campaigns": [], "model.sado_analytics_services.dim__provinces": ["model.sado_analytics_services.dim__campaigns"], "model.sado_analytics_services.dim__inventory_items": ["model.sado_analytics_services.dim__inventory_classes", "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_dim__inventory_items_extended_code__kiotviet_product_id__nhanhvn_product_id.ae3a5bfc21"], "model.sado_analytics_services.rfm_movement": ["analysis.sado_analytics_services.sms_performance", "exposure.sado_analytics_services.customer_analysis", "exposure.sado_analytics_services.sales_dashboard", "exposure.sado_analytics_services.sales_dashboard2", "model.sado_analytics_services.cohort_analysis", "model.sado_analytics_services.sms_dashboard", "semantic_model.sado_analytics_services.rfm_movement", "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_rfm_movement_customer_id__start_of_month.d9b269e396", "test.sado_analytics_services.not_null_rfm_movement_first_purchase.597a31a8ff", "test.sado_analytics_services.not_null_rfm_movement_last_purchase.f325cc0b69", "test.sado_analytics_services.not_null_rfm_movement_segment.ef3b4c6511"], "model.sado_analytics_services.fct__revenue_items": [], "model.sado_analytics_services.revenue_items": ["exposure.sado_analytics_services.customer_analysis", "exposure.sado_analytics_services.facebook_dashboard", "exposure.sado_analytics_services.sales_dashboard", "exposure.sado_analytics_services.sales_dashboard2", "semantic_model.sado_analytics_services.revenue_items", "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_revenue_items_transaction_id__product_id__price.e8265edabd"], "model.sado_analytics_services.fct__customers_attributes": ["test.sado_analytics_services.not_null_fct__customers_attributes_last_purchase_branch_id.8b2ec2edef", "test.sado_analytics_services.not_null_fct__customers_attributes_registered_branch_id.2b83352f22"], "model.sado_analytics_services.revenue": ["analysis.sado_analytics_services.sms_performance", "exposure.sado_analytics_services.customer_analysis", "exposure.sado_analytics_services.sales_dashboard", "exposure.sado_analytics_services.sales_dashboard2", "semantic_model.sado_analytics_services.revenue", "test.sado_analytics_services.unique_revenue_transaction_id.716496c532"], "model.sado_analytics_services.fct__customers": ["model.sado_analytics_services.fct__cs_calls", "model.sado_analytics_services.fct__sms_revenue", "model.sado_analytics_services.int_customer_id_converter", "test.sado_analytics_services.not_null_fct__customers_contact_number.7ec23edb3d", "test.sado_analytics_services.not_null_fct__customers_universal_customer_id.e16d885fed", "test.sado_analytics_services.unique_fct__customers_contact_number.5bd80552c1", "test.sado_analytics_services.unique_fct__customers_universal_customer_id.942475d339"], "model.sado_analytics_services.fct__transactions": ["model.sado_analytics_services.cohort_analysis", "model.sado_analytics_services.facebook_dashboard", "model.sado_analytics_services.fct__cs_calls", "model.sado_analytics_services.fct__customers_attributes", "model.sado_analytics_services.fct__sms_revenue", "model.sado_analytics_services.rfm_movement", "model.sado_analytics_services.sales_dashboard", "test.sado_analytics_services.accepted_values_fct__transactions_transaction_type__invoice__return.9c79d27315", "test.sado_analytics_services.not_null_fct__transactions_branch_id.eaaf3373a0", "test.sado_analytics_services.not_null_fct__transactions_transaction_id.fb8e6580ac", "test.sado_analytics_services.unique_fct__transactions_transaction_source_id.52bdef8734"], "model.sado_analytics_services.orders_items": ["model.sado_analytics_services.int_nhanhvn__revenue_items"], "model.sado_analytics_services.fct_sp__orders": [], "model.sado_analytics_services.calendar": ["model.sado_analytics_services.facebook_budget", "model.sado_analytics_services.fct__working_days", "model.sado_analytics_services.int__working_days", "model.sado_analytics_services.rfm_movement", "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d", "test.sado_analytics_services.unique_calendar_date.b4cbc0583a"], "model.sado_analytics_services.weather": [], "model.sado_analytics_services.metricflow_time_spine": [], "model.sado_analytics_services.stg_forecaster__forecast": ["model.sado_analytics_services.sales_forecast"], "model.sado_analytics_services.stg_nhanhvn__sales_channels": ["model.sado_analytics_services.dim__branches"], "model.sado_analytics_services.stg_nhanhvn__products": ["model.sado_analytics_services.dim__inventory_items"], "model.sado_analytics_services.stg_nhanhvn__customers": ["model.sado_analytics_services.fct__customers"], "model.sado_analytics_services.stg_nhanhvn__depots": ["model.sado_analytics_services.stg_nhanhvn__inventories"], "model.sado_analytics_services.stg_nhanhvn__bills": ["model.sado_analytics_services.int_nhanhvn__bills_reference_orders"], "model.sado_analytics_services.stg_nhanhvn__inventories": [], "model.sado_analytics_services.stg_nhanhvn__users": [], "model.sado_analytics_services.stg_nhanhvn__categories": [], "model.sado_analytics_services.stg_nhanhvn__ordersdetails": ["model.sado_analytics_services.int_nhanhvn__ordersdetails", "model.sado_analytics_services.orders_items", "test.sado_analytics_services.unique_stg_nhanhvn__ordersdetails_order_id.866b820324"], "model.sado_analytics_services.stg_nhanhvn__carriers": ["model.sado_analytics_services.orders_items"], "model.sado_analytics_services.stg_kiotviet__inventories": ["model.sado_analytics_services.fct__curent_inventory", "model.sado_analytics_services.int_kiotviet__inventory_change"], "model.sado_analytics_services.stg_kiotviet__products": ["model.sado_analytics_services.dim__inventory_items", "model.sado_analytics_services.fct__manufactoring_progress", "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c", "test.sado_analytics_services.unique_stg_kiotviet__products_product_id.487bb521de"], "model.sado_analytics_services.stg_kiotviet__invoicepayments": [], "model.sado_analytics_services.stg_kiotviet__bankaccounts": [], "model.sado_analytics_services.stg_kiotviet__customers": ["analysis.sado_analytics_services.sms_performance", "model.sado_analytics_services.fct__customers", "model.sado_analytics_services.offline_conversion", "model.sado_analytics_services.sms_dashboard"], "model.sado_analytics_services.stg_kiotviet__branches": ["model.sado_analytics_services.dim__branches", "model.sado_analytics_services.offline_conversion", "model.sado_analytics_services.stg_kiotviet__customers"], "model.sado_analytics_services.stg_kiotviet__transfers_details": ["model.sado_analytics_services.fct__daily_inventory", "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_kiotviet__transfers_details_transfer_id__product_id.3f26bf0e47"], "model.sado_analytics_services.stg_kiotviet__purchaseorders": [], "model.sado_analytics_services.stg_kiotviet__suppliers": [], "model.sado_analytics_services.stg_kiotviet__returnpayments": [], "model.sado_analytics_services.stg_kiotviet__categories": ["model.sado_analytics_services.stg_kiotviet__products"], "model.sado_analytics_services.stg_kiotviet__purchaseorderdetails": ["model.sado_analytics_services.fct__manufactoring_progress"], "model.sado_analytics_services.stg_kiotviet__returndetails": ["model.sado_analytics_services.int_kiotviet__return_items", "model.sado_analytics_services.revenue_items"], "model.sado_analytics_services.stg_kiotviet__returns": ["model.sado_analytics_services.int_kiotviet__returns", "model.sado_analytics_services.revenue"], "model.sado_analytics_services.stg_kiotviet__locations": [], "model.sado_analytics_services.stg_kiotviet__users": [], "model.sado_analytics_services.stg_kiotviet__invoices": ["model.sado_analytics_services.int_kiotviet__invoices", "model.sado_analytics_services.offline_conversion", "model.sado_analytics_services.revenue", "test.sado_analytics_services.not_null_stg_kiotviet__invoices_modified_date.ee9db5f44f", "test.sado_analytics_services.unique_stg_kiotviet__invoices_transaction_id.a5024f2ad6"], "model.sado_analytics_services.stg_kiotviet__invoicedetails": ["model.sado_analytics_services.int_kiotviet__revenue_items", "model.sado_analytics_services.revenue_items"], "model.sado_analytics_services.base_kiotViet__invoices": ["model.sado_analytics_services.stg_kiotviet__invoicedetails", "model.sado_analytics_services.stg_kiotviet__invoicepayments", "model.sado_analytics_services.stg_kiotviet__invoices"], "model.sado_analytics_services.base_kiotViet__returns": ["model.sado_analytics_services.stg_kiotviet__returndetails", "model.sado_analytics_services.stg_kiotviet__returnpayments", "model.sado_analytics_services.stg_kiotviet__returns"], "model.sado_analytics_services.base_kiotViet__customers": ["model.sado_analytics_services.stg_kiotviet__customers"], "model.sado_analytics_services.base_kiotViet__purchaseOrders": ["model.sado_analytics_services.stg_kiotviet__purchaseorderdetails", "model.sado_analytics_services.stg_kiotviet__purchaseorders", "model.sado_analytics_services.stg_kiotviet__suppliers"], "model.sado_analytics_services.stg_esms__sent_data": ["analysis.sado_analytics_services.sms_performance", "model.sado_analytics_services.dim__sms_campaigns", "model.sado_analytics_services.fct__sms_revenue", "model.sado_analytics_services.sms_dashboard", "test.sado_analytics_services.not_null_stg_esms__sent_data_sent_id.47c6bc997c", "test.sado_analytics_services.unique_stg_esms__sent_data_sent_id.7d9e07e2b4"], "model.sado_analytics_services.stg_pagespeed__metrics": ["model.sado_analytics_services.fct__pagespeed_cwv", "model.sado_analytics_services.fct__pagespeed_score"], "model.sado_analytics_services.stg_googleads__ad_groups": [], "model.sado_analytics_services.stg_googleads__campaign_stats": ["model.sado_analytics_services.google_campaign_performance", "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226", "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d"], "model.sado_analytics_services.stg_googleads__ad_group_stats": ["model.sado_analytics_services.google_ad_group_performance"], "model.sado_analytics_services.stg_googleads__campaigns": [], "model.sado_analytics_services.stg_googleads__shopping_product_stats": [], "model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats": ["model.sado_analytics_services.google_ad_group_performance"], "model.sado_analytics_services.stg_googleads__search_query_stats": [], "model.sado_analytics_services.stg_googleads__keyword_stats": [], "model.sado_analytics_services.stg_googleads__campaign_conversion_stats": ["model.sado_analytics_services.google_campaign_performance"], "model.sado_analytics_services.base_googleAds__campaigns": ["model.sado_analytics_services.stg_googleads__campaigns"], "model.sado_analytics_services.base_googleAds__accounts": ["model.sado_analytics_services.stg_googleads__campaigns"], "model.sado_analytics_services.base_googleAds__adgroups": ["model.sado_analytics_services.stg_googleads__ad_groups"], "model.sado_analytics_services.base_googleAds__criterions": [], "model.sado_analytics_services.stg_pancake__customers": [], "model.sado_analytics_services.stg_pancake__orders": ["model.sado_analytics_services.pancake_performance__by__users"], "model.sado_analytics_services.stg_pancake__posts": [], "model.sado_analytics_services.stg_pancake__tags": ["model.sado_analytics_services.conversations_engaged"], "model.sado_analytics_services.stg_pancake__page_stats": [], "model.sado_analytics_services.stg_pancake__pages": [], "model.sado_analytics_services.stg_pancake__conversations": ["model.sado_analytics_services.conversations_engaged"], "model.sado_analytics_services.stg_pancake__user_stats": ["model.sado_analytics_services.pancake_performance__by__users"], "model.sado_analytics_services.stg_pancake__customer_engagements": [], "model.sado_analytics_services.stg_pancake__users": [], "model.sado_analytics_services.base_pancake__conversations": ["model.sado_analytics_services.int_pancake__ad_post_id", "model.sado_analytics_services.stg_pancake__conversations"], "model.sado_analytics_services.base_pancake__posts": ["model.sado_analytics_services.stg_pancake__posts"], "model.sado_analytics_services.base_pancake__customers": ["model.sado_analytics_services.stg_pancake__customers"], "model.sado_analytics_services.stg_gsheet__manufacture_plan": ["model.sado_analytics_services.fct__manufactoring_progress", "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__manufacture_plan_plan_month__product_code__vendor.2222cb482c"], "model.sado_analytics_services.stg_gsheet__cs_calls": ["model.sado_analytics_services.fct__cs_calls"], "model.sado_analytics_services.stg_gsheet__facebook_budget": ["model.sado_analytics_services.calendar", "model.sado_analytics_services.facebook_budget"], "model.sado_analytics_services.stg_gsheet__construction": ["model.sado_analytics_services.fct__constructing_tasks", "model.sado_analytics_services.fct__construction_estimates"], "model.sado_analytics_services.stg_gsheet__contents": ["model.sado_analytics_services.dim__contents"], "model.sado_analytics_services.stg_gsheet__traffic": ["model.sado_analytics_services.sales_dashboard"], "model.sado_analytics_services.stg_gsheet__maintainance": ["test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__maintainance_branch_code__created_at__description.19787c00ce"], "model.sado_analytics_services.stg_gsheet__pancake_tags": ["model.sado_analytics_services.stg_pancake__tags"], "model.sado_analytics_services.stg_gsheet__asms": ["model.sado_analytics_services.dim__branches"], "model.sado_analytics_services.stg_facebookads__regioninsights": [], "model.sado_analytics_services.stg__ad_product_categories": ["model.sado_analytics_services.int__product_group"], "model.sado_analytics_services.stg_facebookads__accountinsights": [], "model.sado_analytics_services.stg_facebookads__creatives": [], "model.sado_analytics_services.stg_facebookads__campaigns": ["model.sado_analytics_services.dim__campaigns"], "model.sado_analytics_services.stg_facebookads__audienceinsights": [], "model.sado_analytics_services.stg_facebookads__adsinsights": ["model.sado_analytics_services.facebook_dashboard", "model.sado_analytics_services.facebook_performance"], "model.sado_analytics_services.base_facebookAds__creatives": ["model.sado_analytics_services.stg_facebookads__creatives"], "model.sado_analytics_services.base_facebookAds__accountInsights": ["model.sado_analytics_services.stg_facebookads__accountinsights"], "model.sado_analytics_services.base_facebookAds__regionInsights": ["model.sado_analytics_services.stg_facebookads__regioninsights"], "model.sado_analytics_services.base_facebookAds__audienceInsights": ["model.sado_analytics_services.stg_facebookads__audienceinsights"], "model.sado_analytics_services.stg_tiktokads__adgroups": [], "model.sado_analytics_services.stg_tiktokads__age_gender_insights": ["test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__age_gender_insights_ad_id__adgroup_id__campaign_id__date__age__gender.b054b6c435"], "model.sado_analytics_services.stg_tiktokads__ads": [], "model.sado_analytics_services.stg_tiktokads__campaigns": [], "model.sado_analytics_services.stg_tiktokads__ad_insights": ["test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__ad_insights_ad_id__adgroup_id__campaign_id__date.31b24e06d5"], "model.sado_analytics_services.stg_tiktokads__video_insight": [], "model.sado_analytics_services.stg_tiktokads__creative_report": [], "model.sado_analytics_services.stg_5sfashion__orders": ["test.sado_analytics_services.not_null_stg_5sfashion__orders__order_id_.a11aa2146b", "test.sado_analytics_services.unique_stg_5sfashion__orders__order_id_.cc1d908e3a"], "model.sado_analytics_services.stg_sp__orders": ["model.sado_analytics_services.fct_sp__orders"], "model.sado_analytics_services.stg_sp__items": [], "model.sado_analytics_services.stg_sp__daily_performance": [], "model.sado_analytics_services.stg_sp__hourly_performance": [], "model.sado_analytics_services.facebook_dashboard": ["exposure.sado_analytics_services.facebook_dashboard", "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard_date__local_page_code__ad_pic.0aed4662f1"], "model.sado_analytics_services.sales_forecast": ["test.sado_analytics_services.not_null_sales_forecast_date.c667cc5e3b", "test.sado_analytics_services.unique_sales_forecast_date.52db94e4c4"], "model.sado_analytics_services.sales_dashboard": ["exposure.sado_analytics_services.sales_dashboard2", "model.sado_analytics_services.sales_forecast", "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sales_dashboard_branch_id__date.c916901df6"], "model.sado_analytics_services.sms_dashboard": ["test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sms_dashboard_sent_time__segment__previous_segment__sms_id.7801047a52"], "model.sado_analytics_services.cohort_analysis": ["test.sado_analytics_services.dbt_utils_unique_combination_of_columns_cohort_analysis_customer_id__transaction_month.384c841fc7"], "model.sado_analytics_services.int_kiotviet__inventory_change": ["model.sado_analytics_services.fct__daily_inventory"], "model.sado_analytics_services.int_customer_id_converter": ["model.sado_analytics_services.int_nhanhvn__ordersdetails", "model.sado_analytics_services.int_nhanhvn__revenue_items"], "model.sado_analytics_services.int_pancake__ad_post_id": [], "model.sado_analytics_services.int_kiotviet__returns": ["model.sado_analytics_services.fct__transactions"], "model.sado_analytics_services.int_nhanhvn__bills_reference_orders": [], "model.sado_analytics_services.int_kiotviet__revenue_items": ["model.sado_analytics_services.fct__daily_inventory", "model.sado_analytics_services.fct__revenue_items"], "model.sado_analytics_services.int_nhanhvn__ordersdetails": ["model.sado_analytics_services.fct__transactions"], "model.sado_analytics_services.int__product_group": ["model.sado_analytics_services.dim__campaigns", "model.sado_analytics_services.dim__inventory_items"], "model.sado_analytics_services.int_kiotviet__return_items": ["model.sado_analytics_services.fct__daily_inventory", "model.sado_analytics_services.fct__revenue_items"], "model.sado_analytics_services.int__working_days": ["model.sado_analytics_services.int_kiotviet__inventory_change", "model.sado_analytics_services.sales_dashboard"], "model.sado_analytics_services.int_nhanhvn__revenue_items": ["model.sado_analytics_services.fct__revenue_items"], "model.sado_analytics_services.int_kiotviet__invoices": ["model.sado_analytics_services.fct__transactions"], "snapshot.sado_analytics_services.stg_gsheet__cogs": ["model.sado_analytics_services.fct__revenue_items"], "analysis.sado_analytics_services.sms_performance": [], "seed.sado_analytics_services.kiotviet__removed_branch": ["model.sado_analytics_services.facebook_budget"], "seed.sado_analytics_services.regions": ["model.sado_analytics_services.dim__regions"], "seed.sado_analytics_services.product_categories": ["model.sado_analytics_services.stg__ad_product_categories"], "seed.sado_analytics_services.promotions": ["model.sado_analytics_services.fct__working_days", "model.sado_analytics_services.int__working_days"], "seed.sado_analytics_services.provinces": ["model.sado_analytics_services.dim__provinces"], "model.ga4.dim_ga4__client_keys": ["model.sado_analytics_services.dim__client_keys", "model.sado_analytics_services.dim__excluded_clients", "test.ga4.unique_dim_ga4__client_keys_client_key.971e8b17de"], "model.ga4.dim_ga4__sessions_daily": ["model.sado_analytics_services.dim__sessions_daily", "test.ga4.unique_dim_ga4__sessions_daily_session_partition_key.e40d884a13"], "model.ga4.fct_ga4__client_keys": ["model.sado_analytics_services.fct__client_keys", "test.ga4.unique_fct_ga4__client_keys_client_key.47115ed1b5"], "model.ga4.fct_ga4__sessions": ["model.ga4.fct_ga4__client_keys", "model.sado_analytics_services.fct__sessions", "test.ga4.unique_fct_ga4__sessions_session_key.93f6a798f0"], "model.ga4.fct_ga4__sessions_daily": ["model.ga4.fct_ga4__sessions", "model.sado_analytics_services.fct__sessions_daily", "test.ga4.unique_fct_ga4__sessions_daily_session_partition_key.c7a2a3ef6c"], "model.ga4.dim_ga4__sessions": ["model.sado_analytics_services.dim__sessions", "test.ga4.unique_dim_ga4__sessions_session_key.5ade237063"], "model.ga4.fct_ga4__pages": ["model.sado_analytics_services.fct__pages", "test.ga4.unique_fct_ga4__pages__event_date_dt_stream_id_page_location_.7db1d0597c"], "model.ga4.stg_ga4__client_key_first_last_events": ["model.ga4.dim_ga4__client_keys", "test.ga4.unique_stg_ga4__client_key_first_last_events_client_key.ed9b2aba25"], "model.ga4.stg_ga4__sessions_traffic_sources": ["model.ga4.dim_ga4__sessions", "test.ga4.not_null_stg_ga4__sessions_traffic_sources_session_source.49313fe211", "test.ga4.unique_stg_ga4__sessions_traffic_sources_session_key.417549e35d"], "model.ga4.stg_ga4__sessions_first_last_pageviews": ["model.ga4.dim_ga4__sessions", "model.ga4.fct_ga4__sessions", "model.ga4.stg_ga4__sessions_traffic_sources", "test.ga4.unique_stg_ga4__sessions_first_last_pageviews_session_key.8984455c5e"], "model.ga4.stg_ga4__events": ["model.ga4.dim_ga4__sessions", "model.ga4.dim_ga4__sessions_daily", "model.ga4.fct_ga4__sessions_daily", "model.ga4.stg_ga4__client_key_first_last_events", "model.ga4.stg_ga4__derived_user_properties", "model.ga4.stg_ga4__event_click", "model.ga4.stg_ga4__event_file_download", "model.ga4.stg_ga4__event_first_visit", "model.ga4.stg_ga4__event_items", "model.ga4.stg_ga4__event_page_view", "model.ga4.stg_ga4__event_scroll", "model.ga4.stg_ga4__event_session_start", "model.ga4.stg_ga4__event_to_query_string_params", "model.ga4.stg_ga4__event_user_engagement", "model.ga4.stg_ga4__event_video_complete", "model.ga4.stg_ga4__event_video_start", "model.ga4.stg_ga4__event_view_search_results", "model.ga4.stg_ga4__page_conversions", "model.ga4.stg_ga4__page_engaged_time", "model.ga4.stg_ga4__session_conversions_daily", "model.ga4.stg_ga4__sessions_first_last_pageviews", "model.ga4.stg_ga4__sessions_traffic_sources", "model.ga4.stg_ga4__sessions_traffic_sources_daily", "model.ga4.stg_ga4__user_properties", "test.ga4.page_location_with_gclid_is_cpc", "test.ga4.unique_stg_ga4__events_event_key.985cc306e5"], "model.ga4.stg_ga4__event_items": ["model.sado_analytics_services.fct__items_performance"], "model.ga4.stg_ga4__client_key_first_last_pageviews": ["model.ga4.dim_ga4__client_keys", "test.ga4.unique_stg_ga4__client_key_first_last_pageviews_client_key.4cb23d702f"], "model.ga4.stg_ga4__sessions_traffic_sources_daily": ["model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily", "test.ga4.not_null_stg_ga4__sessions_traffic_sources_daily_session_source.5204b8a71d", "test.ga4.unique_stg_ga4__sessions_traffic_sources_daily_session_partition_key.0a63631827"], "model.ga4.stg_ga4__page_engaged_time": ["model.ga4.fct_ga4__pages"], "model.ga4.stg_ga4__session_conversions_daily": ["model.ga4.fct_ga4__sessions_daily", "test.ga4.unique_stg_ga4__session_conversions_daily_session_partition_key.03be265557"], "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily": ["model.ga4.dim_ga4__sessions_daily", "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_default_channel_grouping.2483b5ae6b", "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_source.449fe23be6", "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_source.db8c720050", "test.ga4.unique_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_partition_key.5383afcda4"], "model.ga4.stg_ga4__page_conversions": ["model.ga4.fct_ga4__pages"], "model.ga4.stg_ga4__derived_user_properties": ["model.ga4.dim_ga4__client_keys", "test.ga4.unique_stg_ga4__derived_user_properties_client_key.74573345b3"], "model.ga4.stg_ga4__event_to_query_string_params": [], "model.ga4.stg_ga4__user_properties": ["model.ga4.dim_ga4__client_keys", "test.ga4.unique_stg_ga4__user_properties_client_key.1ff0272413"], "model.ga4.base_ga4__events": ["model.ga4.stg_ga4__events"], "model.ga4.stg_ga4__event_page_view": ["model.ga4.fct_ga4__pages", "model.ga4.stg_ga4__client_key_first_last_pageviews", "test.ga4.not_null_stg_ga4__event_page_view_page_location.8b37318084"], "model.ga4.stg_ga4__event_file_download": [], "model.ga4.stg_ga4__event_first_visit": [], "model.ga4.stg_ga4__event_user_engagement": [], "model.ga4.stg_ga4__event_click": [], "model.ga4.stg_ga4__event_video_start": [], "model.ga4.stg_ga4__event_video_complete": [], "model.ga4.stg_ga4__event_session_start": [], "model.ga4.stg_ga4__event_scroll": ["model.ga4.fct_ga4__pages"], "model.ga4.stg_ga4__event_view_search_results": [], "test.ga4.page_location_with_gclid_is_cpc": [], "seed.ga4.ga4_source_categories": ["model.ga4.stg_ga4__sessions_traffic_sources", "model.ga4.stg_ga4__sessions_traffic_sources_daily"], "model.fb.fct_fb__video_view_time_by_city": ["model.sado_analytics_services.fct__video_view_time_by_city"], "model.fb.dim_fb__campaigns": ["model.sado_analytics_services.stg_facebookads__campaigns"], "model.fb.fct_fb__page_impressions_by_city": ["model.sado_analytics_services.fct__page_impressions_by_city"], "model.fb.fct_fb__video_retention": ["model.sado_analytics_services.fct__video_retention"], "model.fb.fct_fb__post_insights": ["model.sado_analytics_services.fct__post_insights"], "model.fb.dim_fb__posts": ["model.sado_analytics_services.dim__posts"], "model.fb.fct_fb__video_view_time_by_age_gender": ["model.sado_analytics_services.fct__video_view_time_by_age_gender"], "model.fb.fct_fb__page_insights": ["model.sado_analytics_services.fct__page_insights"], "model.fb.fct_fb__page_impressions_by_age_gender": ["model.sado_analytics_services.fct__page_impressions_by_age_gender"], "model.fb.stg_fb__page_insights": ["model.fb.fct_fb__page_impressions_by_age_gender", "model.fb.fct_fb__page_impressions_by_city", "model.fb.fct_fb__page_insights"], "model.fb.stg_fb__page_posts": ["model.fb.dim_fb__posts"], "model.fb.stg_fb__post_insights": ["model.fb.fct_fb__post_insights", "model.fb.fct_fb__video_retention", "model.fb.fct_fb__video_view_time_by_age_gender", "model.fb.fct_fb__video_view_time_by_city"], "model.fb.stg_fb__ad_accounts": ["model.fb.dim_fb__campaigns", "model.sado_analytics_services.dim__ad_accounts"], "model.fb.stg_fb__ad_insights": ["model.fb.dim_fb__campaigns", "model.sado_analytics_services.stg_facebookads__adsinsights"], "model.fb.stg_fb__pages": ["model.sado_analytics_services.dim__pages"], "model.fb.stg_fb__age_gender_demographic": ["model.sado_analytics_services.stg_facebookads__audienceinsights"], "model.fb.stg_fb__region_demographic": ["model.sado_analytics_services.stg_facebookads__regioninsights"], "model.fb.stg_fb__account_insights": ["model.sado_analytics_services.stg_facebookads__accountinsights"], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_performance_date_start__ad_key.086a5acd08": [], "test.sado_analytics_services.unique_dim__location_groups_local_page_code.ec23d72d30": [], "test.sado_analytics_services.not_null_dim__location_groups_local_page_code.04c63063c8": [], "test.sado_analytics_services.not_null_facebook_performance__by_regions_row_id.150c8e7afb": [], "test.sado_analytics_services.unique_facebook_performance__by_regions_row_id.0700b95982": [], "test.sado_analytics_services.not_null_facebook_performance__by_audience_row_id.6dbacdaafb": [], "test.sado_analytics_services.unique_facebook_performance__by_audience_row_id.027825ed59": [], "test.sado_analytics_services.not_null_dim__campaigns_ad_key.aa80a608f1": [], "test.sado_analytics_services.unique_dim__campaigns_ad_key.125cd75bbe": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_fct__sms_revenue_customer_id__transaction_date.74e3b79b6b": [], "test.sado_analytics_services.not_null_engagements_details_engagement_id.ba4b05a1b3": [], "test.sado_analytics_services.unique_engagements_details_engagement_id.fa02ef7234": [], "test.sado_analytics_services.not_null_pancake_performance__by__users_user_id.1d5fe2fa58": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_pancake_performance__by__users_user_id__hour.41b935da29": [], "test.sado_analytics_services.not_null_tickets_ticket_id.6d0b33ca1c": [], "test.sado_analytics_services.unique_tickets_ticket_id.7bb6098968": [], "test.sado_analytics_services.unique_dim__inventory_classes_class_code.e12511cf37": [], "test.sado_analytics_services.unique_dim__offline_stores_branch_id.f6e48f9b5a": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_dim__inventory_items_extended_code__kiotviet_product_id__nhanhvn_product_id.ae3a5bfc21": [], "test.sado_analytics_services.not_null_rfm_movement_first_purchase.597a31a8ff": [], "test.sado_analytics_services.not_null_rfm_movement_last_purchase.f325cc0b69": [], "test.sado_analytics_services.not_null_rfm_movement_segment.ef3b4c6511": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_rfm_movement_customer_id__start_of_month.d9b269e396": [], "test.sado_analytics_services.not_null_fct__customers_attributes_registered_branch_id.2b83352f22": [], "test.sado_analytics_services.not_null_fct__customers_attributes_last_purchase_branch_id.8b2ec2edef": [], "test.sado_analytics_services.unique_revenue_transaction_id.716496c532": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_revenue_items_transaction_id__product_id__price.e8265edabd": [], "test.sado_analytics_services.not_null_fct__customers_contact_number.7ec23edb3d": [], "test.sado_analytics_services.unique_fct__customers_contact_number.5bd80552c1": [], "test.sado_analytics_services.not_null_fct__customers_universal_customer_id.e16d885fed": [], "test.sado_analytics_services.unique_fct__customers_universal_customer_id.942475d339": [], "test.sado_analytics_services.not_null_fct__transactions_transaction_id.fb8e6580ac": [], "test.sado_analytics_services.not_null_fct__transactions_branch_id.eaaf3373a0": [], "test.sado_analytics_services.accepted_values_fct__transactions_transaction_type__invoice__return.9c79d27315": [], "test.sado_analytics_services.unique_fct__transactions_transaction_source_id.52bdef8734": [], "test.sado_analytics_services.not_null_calendar_date.97c1f4c05d": [], "test.sado_analytics_services.unique_calendar_date.b4cbc0583a": [], "test.sado_analytics_services.unique_stg_caresoft__ticket_custom_fields_value_id.ff7804063b": [], "test.sado_analytics_services.not_null_stg_caresoft__ticket_custom_fields_value_id.a076bcc09a": [], "test.sado_analytics_services.not_null_stg_caresoft__calls_id.2fb2499c5a": [], "test.sado_analytics_services.unique_stg_caresoft__calls_id.aede802cc2": [], "test.sado_analytics_services.not_null_stg_caresoft__calls_call_id.8d621fb840": [], "test.sado_analytics_services.unique_stg_caresoft__calls_call_id.62c4fd8e66": [], "test.sado_analytics_services.not_null_stg_caresoft__contacts_contact_id.eb790c43e2": [], "test.sado_analytics_services.unique_stg_caresoft__contacts_contact_id.9463562ba4": [], "test.sado_analytics_services.not_null_stg_caresoft__agents_id.718cd3c440": [], "test.sado_analytics_services.unique_stg_caresoft__agents_id.1dc507e0f7": [], "test.sado_analytics_services.unique_stg_caresoft__agents_email.90f55cfcb1": [], "test.sado_analytics_services.not_null_stg_caresoft__agents_email.360e1d9d56": [], "test.sado_analytics_services.not_null_stg_caresoft__chats_conversation_id.f2a0e81461": [], "test.sado_analytics_services.unique_stg_caresoft__chats_conversation_id.0f9e5f32bb": [], "test.sado_analytics_services.not_null_stg_caresoft__tickets_ticket_id.44b9236f2a": [], "test.sado_analytics_services.unique_stg_caresoft__tickets_ticket_id.d6716e1775": [], "test.sado_analytics_services.unique_stg_nhanhvn__ordersdetails_order_id.866b820324": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_kiotviet__transfers_details_transfer_id__product_id.3f26bf0e47": [], "test.sado_analytics_services.unique_stg_kiotviet__products_product_id.487bb521de": [], "test.sado_analytics_services.not_null_stg_kiotviet__products_product_group.f1311dd27c": [], "test.sado_analytics_services.unique_stg_kiotviet__invoices_transaction_id.a5024f2ad6": [], "test.sado_analytics_services.not_null_stg_kiotviet__invoices_modified_date.ee9db5f44f": [], "test.sado_analytics_services.not_null_stg_esms__sent_data_sent_id.47c6bc997c": [], "test.sado_analytics_services.unique_stg_esms__sent_data_sent_id.7d9e07e2b4": [], "test.sado_analytics_services.unique_stg_googleads__campaign_stats_row_id.81e8540f9d": [], "test.sado_analytics_services.not_null_stg_googleads__campaign_stats_date.33ec93f226": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__manufacture_plan_plan_month__product_code__vendor.2222cb482c": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_gsheet__maintainance_branch_code__created_at__description.19787c00ce": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__age_gender_insights_ad_id__adgroup_id__campaign_id__date__age__gender.b054b6c435": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_stg_tiktokads__ad_insights_ad_id__adgroup_id__campaign_id__date.31b24e06d5": [], "test.sado_analytics_services.unique_stg_5sfashion__orders__order_id_.cc1d908e3a": [], "test.sado_analytics_services.not_null_stg_5sfashion__orders__order_id_.a11aa2146b": [], "test.sado_analytics_services.not_null_sales_forecast_date.c667cc5e3b": [], "test.sado_analytics_services.unique_sales_forecast_date.52db94e4c4": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard__by_location_group_date__local_page_code__ad_pic.48c9fe0c1e": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sales_dashboard_branch_id__date.c916901df6": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_sms_dashboard_sent_time__segment__previous_segment__sms_id.7801047a52": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_facebook_dashboard_date__local_page_code__ad_pic.0aed4662f1": [], "test.sado_analytics_services.dbt_utils_unique_combination_of_columns_cohort_analysis_customer_id__transaction_month.384c841fc7": [], "test.ga4.unique_fct_ga4__pages__event_date_dt_stream_id_page_location_.7db1d0597c": [], "test.ga4.unique_dim_ga4__sessions_session_key.5ade237063": [], "test.ga4.unique_dim_ga4__client_keys_client_key.971e8b17de": [], "test.ga4.unique_fct_ga4__client_keys_client_key.47115ed1b5": [], "test.ga4.unique_fct_ga4__user_ids_md5_user_id_or_client_key_stream_id_.dcd4dac43e": [], "test.ga4.unique_fct_ga4__sessions_daily_session_partition_key.c7a2a3ef6c": [], "test.ga4.unique_fct_ga4__sessions_session_key.93f6a798f0": [], "test.ga4.unique_dim_ga4__sessions_daily_session_partition_key.e40d884a13": [], "test.ga4.unique_stg_ga4__user_properties_client_key.1ff0272413": [], "test.ga4.unique_stg_ga4__events_event_key.985cc306e5": [], "test.ga4.unique_stg_ga4__sessions_first_last_pageviews_session_key.8984455c5e": [], "test.ga4.unique_stg_ga4__client_key_first_last_pageviews_client_key.4cb23d702f": [], "test.ga4.unique_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_partition_key.5383afcda4": [], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_source.db8c720050": [], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_source.449fe23be6": [], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_default_channel_grouping.2483b5ae6b": [], "test.ga4.unique_stg_ga4__derived_session_properties_daily_session_partition_key.03cee96a93": [], "test.ga4.unique_stg_ga4__session_conversions_daily_session_partition_key.03be265557": [], "test.ga4.unique_stg_ga4__client_key_first_last_events_client_key.ed9b2aba25": [], "test.ga4.unique_stg_ga4__sessions_traffic_sources_session_key.417549e35d": [], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_session_source.49313fe211": [], "test.ga4.unique_stg_ga4__sessions_traffic_sources_daily_session_partition_key.0a63631827": [], "test.ga4.not_null_stg_ga4__sessions_traffic_sources_daily_session_source.5204b8a71d": [], "test.ga4.unique_stg_ga4__derived_session_properties_session_key.64e97d9e4f": [], "test.ga4.not_null_stg_ga4__user_id_mapping_client_key.7c63d41e4c": [], "test.ga4.unique_stg_ga4__user_id_mapping_client_key.cae6196948": [], "test.ga4.unique_stg_ga4__derived_user_properties_client_key.74573345b3": [], "test.ga4.not_null_stg_ga4__event_page_view_page_location.8b37318084": [], "source.sado_analytics_services.misc.weather": ["model.sado_analytics_services.weather"], "source.sado_analytics_services.misc.weather_hourly": ["model.sado_analytics_services.weather"], "source.sado_analytics_services.caresoft.tickets": [], "source.sado_analytics_services.caresoft.ticket_details": [], "source.sado_analytics_services.caresoft.contacts": [], "source.sado_analytics_services.caresoft.contact_details": [], "source.sado_analytics_services.caresoft.calls": [], "source.sado_analytics_services.caresoft.chats": [], "source.sado_analytics_services.caresoft.chats_live": [], "source.sado_analytics_services.caresoft.chats_fb": [], "source.sado_analytics_services.caresoft.chats_zalo": [], "source.sado_analytics_services.caresoft.agents": [], "source.sado_analytics_services.caresoft.groups": [], "source.sado_analytics_services.caresoft.ticket_custom_fields": [], "source.sado_analytics_services.forecaster.forecast": ["model.sado_analytics_services.stg_forecaster__forecast"], "source.sado_analytics_services.nhanhvn.p_bills": ["model.sado_analytics_services.stg_nhanhvn__bills"], "source.sado_analytics_services.nhanhvn.p_carriers": ["model.sado_analytics_services.stg_nhanhvn__carriers"], "source.sado_analytics_services.nhanhvn.p_categories": ["model.sado_analytics_services.stg_nhanhvn__categories", "model.sado_analytics_services.stg_nhanhvn__products"], "source.sado_analytics_services.nhanhvn.p_customers": ["model.sado_analytics_services.stg_nhanhvn__customers"], "source.sado_analytics_services.nhanhvn.p_orders": ["model.sado_analytics_services.stg_nhanhvn__ordersdetails"], "source.sado_analytics_services.nhanhvn.p_products": ["model.sado_analytics_services.stg_nhanhvn__products"], "source.sado_analytics_services.nhanhvn.p_stores": ["model.sado_analytics_services.stg_nhanhvn__depots"], "source.sado_analytics_services.nhanhvn.p_users": ["model.sado_analytics_services.stg_nhanhvn__users"], "source.sado_analytics_services.nhanhvn.p_webhook_inventoryChange": ["model.sado_analytics_services.stg_nhanhvn__inventories"], "source.sado_analytics_services.nhanhvn.p_webhook_orderAdd": [], "source.sado_analytics_services.nhanhvn.p_webhook_orderUpdate": [], "source.sado_analytics_services.nhanhvn.p_webhook_orderDelete": ["model.sado_analytics_services.stg_nhanhvn__ordersdetails"], "source.sado_analytics_services.nhanhvn.p_inventory": ["model.sado_analytics_services.stg_nhanhvn__inventories"], "source.sado_analytics_services.kiotViet.p_products_list": ["model.sado_analytics_services.stg_kiotviet__products"], "source.sado_analytics_services.kiotViet.p_branches_list": ["model.sado_analytics_services.stg_kiotviet__branches"], "source.sado_analytics_services.kiotViet.p_orders_list": [], "source.sado_analytics_services.kiotViet.p_pricebooks_branches": [], "source.sado_analytics_services.kiotViet.p_surcharges_list": [], "source.sado_analytics_services.kiotViet.p_pricebooks_users": [], "source.sado_analytics_services.kiotViet.p_users_list": ["model.sado_analytics_services.stg_kiotviet__users"], "source.sado_analytics_services.kiotViet.p_categories_list": ["model.sado_analytics_services.stg_kiotviet__categories"], "source.sado_analytics_services.kiotViet.p_purchaseorders_list": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "source.sado_analytics_services.kiotViet.p_purchaseorders_list2": ["model.sado_analytics_services.base_kiotViet__purchaseOrders"], "source.sado_analytics_services.kiotViet.p_customersGroups_list": [], "source.sado_analytics_services.kiotViet.p_pricebooks_customer_groups": [], "source.sado_analytics_services.kiotViet.p_invoices_list": ["model.sado_analytics_services.base_kiotViet__invoices"], "source.sado_analytics_services.kiotViet.p_invoices_list2": ["model.sado_analytics_services.base_kiotViet__invoices"], "source.sado_analytics_services.kiotViet.p_returns_list": ["model.sado_analytics_services.base_kiotViet__returns"], "source.sado_analytics_services.kiotViet.p_returns_list2": ["model.sado_analytics_services.base_kiotViet__returns"], "source.sado_analytics_services.kiotViet.p_bankAccounts_list": ["model.sado_analytics_services.stg_kiotviet__bankaccounts"], "source.sado_analytics_services.kiotViet.p_saleschannels_list": [], "source.sado_analytics_services.kiotViet.p_customers_list": ["model.sado_analytics_services.base_kiotViet__customers"], "source.sado_analytics_services.kiotViet.p_locations_list": ["model.sado_analytics_services.stg_kiotviet__locations"], "source.sado_analytics_services.kiotViet.p_products_inventory": ["model.sado_analytics_services.stg_kiotviet__inventories"], "source.sado_analytics_services.kiotViet.p_pricebooks_list": [], "source.sado_analytics_services.kiotViet.p_webhook_invoice_update": [], "source.sado_analytics_services.kiotViet.p_webhook_inventory_update": ["model.sado_analytics_services.stg_kiotviet__inventories"], "source.sado_analytics_services.kiotViet.p_webhook_customer_update": ["model.sado_analytics_services.base_kiotViet__customers"], "source.sado_analytics_services.kiotViet.p_transfers_list": ["model.sado_analytics_services.stg_kiotviet__transfers_details"], "source.sado_analytics_services.kiotViet.webhook_product_delete": ["model.sado_analytics_services.stg_kiotviet__products"], "source.sado_analytics_services.esms.sms_sent_data": ["model.sado_analytics_services.stg_esms__sent_data"], "source.sado_analytics_services.esms.sms_sent_data_history": ["model.sado_analytics_services.stg_esms__sent_data"], "source.sado_analytics_services.pagespeed.pagespeed": ["model.sado_analytics_services.stg_pagespeed__metrics"], "source.sado_analytics_services.googleads.account_conversion_stats": [], "source.sado_analytics_services.googleads.keyword_cross_device_stats": [], "source.sado_analytics_services.googleads.hourly_account_stats": [], "source.sado_analytics_services.googleads.gender": [], "source.sado_analytics_services.googleads.ad_conversion_stats": [], "source.sado_analytics_services.googleads.search_query_conversion_stats": [], "source.sado_analytics_services.googleads.video_non_click_stats": [], "source.sado_analytics_services.googleads.ad_group_conversion_stats": [], "source.sado_analytics_services.googleads.hourly_campaign_stats": [], "source.sado_analytics_services.googleads.campaign_cross_device_stats": [], "source.sado_analytics_services.googleads.gender_non_click_stats": [], "source.sado_analytics_services.googleads.video": [], "source.sado_analytics_services.googleads.video_basic_stats": [], "source.sado_analytics_services.googleads.campaign_audience_non_click_stats": [], "source.sado_analytics_services.googleads.hourly_account_conversion_stats": [], "source.sado_analytics_services.googleads.video_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_audience": [], "source.sado_analytics_services.googleads.age_range_non_click_stats": [], "source.sado_analytics_services.googleads.account_non_click_stats": [], "source.sado_analytics_services.googleads.parental_status_basic_stats": [], "source.sado_analytics_services.googleads.ad_stats": [], "source.sado_analytics_services.googleads.hourly_ad_group_conversion_stats": [], "source.sado_analytics_services.googleads.parental_status_stats": [], "source.sado_analytics_services.googleads.bid_goal": [], "source.sado_analytics_services.googleads.ad_cross_device_stats": [], "source.sado_analytics_services.googleads.ad_group_ad_label": [], "source.sado_analytics_services.googleads.ad_group_audience_conversion_stats": [], "source.sado_analytics_services.googleads.search_query_stats": ["model.sado_analytics_services.stg_googleads__search_query_stats"], "source.sado_analytics_services.googleads.ad_group_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.budget": [], "source.sado_analytics_services.googleads.bid_goal_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_cross_device_stats": ["model.sado_analytics_services.stg_googleads__ad_group_cross_device_stats"], "source.sado_analytics_services.googleads.age_range_stats": [], "source.sado_analytics_services.googleads.campaign_audience": [], "source.sado_analytics_services.googleads.keyword_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.campaign": ["model.sado_analytics_services.base_googleAds__campaigns"], "source.sado_analytics_services.googleads.ad_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.placement_basic_stats": [], "source.sado_analytics_services.googleads.age_range_basic_stats": [], "source.sado_analytics_services.googleads.keyword_basic_stats": ["model.sado_analytics_services.stg_googleads__keyword_stats"], "source.sado_analytics_services.googleads.parental_status_non_click_stats": [], "source.sado_analytics_services.googleads.gender_conversion_stats": [], "source.sado_analytics_services.googleads.placement_stats": [], "source.sado_analytics_services.googleads.ad_group": ["model.sado_analytics_services.base_googleAds__adgroups"], "source.sado_analytics_services.googleads.ad_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_stats": [], "source.sado_analytics_services.googleads.placement_conversion_stats": [], "source.sado_analytics_services.googleads.ad_group_stats": [], "source.sado_analytics_services.googleads.campaign_conversion_stats": ["model.sado_analytics_services.stg_googleads__campaign_conversion_stats"], "source.sado_analytics_services.googleads.budget_stats": [], "source.sado_analytics_services.googleads.account_basic_stats": [], "source.sado_analytics_services.googleads.customer": ["model.sado_analytics_services.base_googleAds__accounts"], "source.sado_analytics_services.googleads.campaign_label": [], "source.sado_analytics_services.googleads.age_range_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_audience_basic_stats": [], "source.sado_analytics_services.googleads.keyword_stats": [], "source.sado_analytics_services.googleads.hourly_ad_group_stats": [], "source.sado_analytics_services.googleads.placement": [], "source.sado_analytics_services.googleads.video_stats": [], "source.sado_analytics_services.googleads.campaign_basic_stats": ["model.sado_analytics_services.stg_googleads__campaign_stats"], "source.sado_analytics_services.googleads.ad_group_label": [], "source.sado_analytics_services.googleads.parental_status_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_stats": [], "source.sado_analytics_services.googleads.campaign_audience_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_criterion": [], "source.sado_analytics_services.googleads.hourly_bid_goal_stats": [], "source.sado_analytics_services.googleads.click_stats": [], "source.sado_analytics_services.googleads.campaign_audience_stats": [], "source.sado_analytics_services.googleads.parental_status": [], "source.sado_analytics_services.googleads.geo_stats": [], "source.sado_analytics_services.googleads.ad_group_criterion_label": [], "source.sado_analytics_services.googleads.age_range": [], "source.sado_analytics_services.googleads.geo_conversion_stats": [], "source.sado_analytics_services.googleads.hourly_campaign_conversion_stats": [], "source.sado_analytics_services.googleads.keyword": ["model.sado_analytics_services.stg_googleads__keyword_stats"], "source.sado_analytics_services.googleads.campaign_cookie_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_criterion": ["model.sado_analytics_services.base_googleAds__criterions"], "source.sado_analytics_services.googleads.paid_organic_stats": [], "source.sado_analytics_services.googleads.location_based_campaign_criterion": [], "source.sado_analytics_services.googleads.gender_stats": [], "source.sado_analytics_services.googleads.account_stats": [], "source.sado_analytics_services.googleads.shopping_product_conversion_stats": [], "source.sado_analytics_services.googleads.campaign_cross_device_conversion_stats": [], "source.sado_analytics_services.googleads.product_group_stats": [], "source.sado_analytics_services.googleads.gender_basic_stats": [], "source.sado_analytics_services.googleads.ad_group_bid_modifier": [], "source.sado_analytics_services.googleads.campaign_location_target_stats": [], "source.sado_analytics_services.googleads.ad_group_basic_stats": ["model.sado_analytics_services.stg_googleads__ad_group_stats"], "source.sado_analytics_services.googleads.keyword_conversion_stats": [], "source.sado_analytics_services.googleads.shopping_product_stats": ["model.sado_analytics_services.stg_googleads__shopping_product_stats"], "source.sado_analytics_services.googleads.placement_non_click_stats": [], "source.sado_analytics_services.googleads.bid_goal_stats": [], "source.sado_analytics_services.googleads.ad_group_audience_non_click_stats": [], "source.sado_analytics_services.googleads.ad": [], "source.sado_analytics_services.pancake.users": ["model.sado_analytics_services.stg_pancake__users"], "source.sado_analytics_services.pancake.conversations": ["model.sado_analytics_services.base_pancake__conversations"], "source.sado_analytics_services.pancake.customer_engagements": ["model.sado_analytics_services.stg_pancake__customer_engagements"], "source.sado_analytics_services.pancake.pages": ["model.sado_analytics_services.stg_pancake__pages"], "source.sado_analytics_services.pancake.user_stats": ["model.sado_analytics_services.stg_pancake__user_stats"], "source.sado_analytics_services.pancake.posts": ["model.sado_analytics_services.base_pancake__posts"], "source.sado_analytics_services.pancake.tags": ["model.sado_analytics_services.stg_pancake__tags"], "source.sado_analytics_services.pancake.page": [], "source.sado_analytics_services.pancake.customers": ["model.sado_analytics_services.base_pancake__customers"], "source.sado_analytics_services.pancake.page_stats": ["model.sado_analytics_services.stg_pancake__page_stats"], "source.sado_analytics_services.pancake.pos_orders": ["model.sado_analytics_services.stg_pancake__orders"], "source.sado_analytics_services.gSheet.asm_list": ["model.sado_analytics_services.stg_gsheet__asms"], "source.sado_analytics_services.gSheet._ext_asm_list2": [], "source.sado_analytics_services.gSheet.facebook_budget": ["model.sado_analytics_services.stg_gsheet__facebook_budget"], "source.sado_analytics_services.gSheet._ext_pancake_tags": ["model.sado_analytics_services.stg_gsheet__pancake_tags"], "source.sado_analytics_services.gSheet.content": ["model.sado_analytics_services.stg_gsheet__contents"], "source.sado_analytics_services.gSheet.maintainance_sheet": ["model.sado_analytics_services.stg_gsheet__maintainance"], "source.sado_analytics_services.gSheet.constructing": ["model.sado_analytics_services.stg_gsheet__construction"], "source.sado_analytics_services.gSheet.cs_calls": ["model.sado_analytics_services.stg_gsheet__cs_calls"], "source.sado_analytics_services.gSheet.manufacture_plan": ["model.sado_analytics_services.stg_gsheet__manufacture_plan"], "source.sado_analytics_services.gSheet.traffic": ["model.sado_analytics_services.stg_gsheet__traffic"], "source.sado_analytics_services.gSheet.cogs": ["snapshot.sado_analytics_services.stg_gsheet__cogs"], "source.sado_analytics_services.facebookAds.p_AdsInsights__*": ["model.sado_analytics_services.stg_facebookads__adsinsights", "model.sado_analytics_services.stg_facebookads__campaigns"], "source.sado_analytics_services.facebookAds.p_AccountInsights__*": ["model.sado_analytics_services.base_facebookAds__accountInsights"], "source.sado_analytics_services.facebookAds.p_AudienceInsights__*": ["model.sado_analytics_services.base_facebookAds__audienceInsights"], "source.sado_analytics_services.facebookAds.p_RegionInsights__*": ["model.sado_analytics_services.base_facebookAds__regionInsights"], "source.sado_analytics_services.facebookAds.p_CreativesInsights__*": ["model.sado_analytics_services.base_facebookAds__creatives"], "source.sado_analytics_services.tiktok.campaign": ["model.sado_analytics_services.stg_tiktokads__campaigns"], "source.sado_analytics_services.tiktok.adgroup": ["model.sado_analytics_services.stg_tiktokads__adgroups"], "source.sado_analytics_services.tiktok.ad": ["model.sado_analytics_services.stg_tiktokads__ads"], "source.sado_analytics_services.tiktok.ad_age_gender": ["model.sado_analytics_services.stg_tiktokads__age_gender_insights"], "source.sado_analytics_services.tiktok.ad_report_daily": ["model.sado_analytics_services.stg_tiktokads__ad_insights"], "source.sado_analytics_services.tiktok.image_report": [], "source.sado_analytics_services.tiktok.search_report": [], "source.sado_analytics_services.tiktok.creative_report": ["model.sado_analytics_services.stg_tiktokads__creative_report"], "source.sado_analytics_services.tiktok.video_insight": ["model.sado_analytics_services.stg_tiktokads__video_insight"], "source.sado_analytics_services.web.orders": ["model.sado_analytics_services.stg_5sfashion__orders"], "source.sado_analytics_services.web.order_details": [], "source.sado_analytics_services.web.categories": [], "source.sado_analytics_services.web.order_shipings": ["model.sado_analytics_services.stg_5sfashion__orders"], "source.sado_analytics_services.web.products": [], "source.sado_analytics_services.web.product_details": [], "source.sado_analytics_services.shopee.order_list": ["model.sado_analytics_services.stg_sp__orders"], "source.sado_analytics_services.shopee.item_list": ["model.sado_analytics_services.stg_sp__items"], "source.sado_analytics_services.shopee.ad_daily_performance": ["model.sado_analytics_services.stg_sp__daily_performance"], "source.sado_analytics_services.shopee.ad_hourly_performance": ["model.sado_analytics_services.stg_sp__hourly_performance"], "source.ga4.ga4.events": ["model.ga4.base_ga4__events"], "source.fb.fb.ad_accounts": ["model.fb.stg_fb__ad_accounts"], "source.fb.fb.pages": ["model.fb.stg_fb__pages"], "source.fb.fb.ad_insights": ["model.fb.stg_fb__ad_insights"], "source.fb.fb.region_demographic": ["model.fb.stg_fb__region_demographic"], "source.fb.fb.age_gender_demographic": ["model.fb.stg_fb__age_gender_demographic"], "source.fb.fb.account_insights": ["model.fb.stg_fb__account_insights"], "source.fb.fb.page_insights": ["model.fb.stg_fb__page_insights"], "source.fb.fb.post_insights": ["model.fb.stg_fb__post_insights"], "source.fb.fb.page_posts": ["model.fb.stg_fb__page_posts"], "exposure.sado_analytics_services.facebook_dashboard": [], "exposure.sado_analytics_services.sales_dashboard": [], "exposure.sado_analytics_services.sales_dashboard2": [], "exposure.sado_analytics_services.customer_analysis": [], "metric.sado_analytics_services.fb_spend": ["metric.sado_analytics_services.online_roas", "metric.sado_analytics_services.roas"], "metric.sado_analytics_services.fb_impresions": [], "metric.sado_analytics_services.fb_clicks": [], "metric.sado_analytics_services.fb_reach": [], "metric.sado_analytics_services.fb_link_clicks": [], "metric.sado_analytics_services.fb_post_engagement": [], "metric.sado_analytics_services.fb_offline_conversion": [], "metric.sado_analytics_services.fb_offline_conversion_value": ["metric.sado_analytics_services.roas"], "metric.sado_analytics_services.fb_online_conversion": [], "metric.sado_analytics_services.fb_online_conversion_value": ["metric.sado_analytics_services.online_roas", "metric.sado_analytics_services.roas"], "metric.sado_analytics_services.fb_meta_conversion": [], "metric.sado_analytics_services.fb_meta_conversion_value": ["metric.sado_analytics_services.online_roas", "metric.sado_analytics_services.roas"], "metric.sado_analytics_services.fb_messages": [], "metric.sado_analytics_services.roas": [], "metric.sado_analytics_services.online_roas": [], "metric.sado_analytics_services.spend_7d": ["metric.sado_analytics_services.online_roas_7d", "metric.sado_analytics_services.roas_7d"], "metric.sado_analytics_services.offline_cv_7d": ["metric.sado_analytics_services.online_roas_7d", "metric.sado_analytics_services.roas_7d"], "metric.sado_analytics_services.online_cv_7d": ["metric.sado_analytics_services.online_roas_7d", "metric.sado_analytics_services.roas_7d"], "metric.sado_analytics_services.meta_cv_7d": [], "metric.sado_analytics_services.roas_7d": [], "metric.sado_analytics_services.online_roas_7d": [], "metric.sado_analytics_services.gross_revenue": [], "metric.sado_analytics_services.invoice_value": ["metric.sado_analytics_services.aov", "metric.sado_analytics_services.pending_invoice"], "metric.sado_analytics_services.invoice_count": ["metric.sado_analytics_services.aov", "metric.sado_analytics_services.items_per_transaction", "metric.sado_analytics_services.pct_returned"], "metric.sado_analytics_services.return_count": ["metric.sado_analytics_services.pct_returned"], "metric.sado_analytics_services.invoice_paid_value": ["metric.sado_analytics_services.pending_invoice"], "metric.sado_analytics_services.returned_value": [], "metric.sado_analytics_services.order_discounted_value": [], "metric.sado_analytics_services.aov": [], "metric.sado_analytics_services.pending_invoice": [], "metric.sado_analytics_services.pct_returned": [], "metric.sado_analytics_services.qty_sold": ["metric.sado_analytics_services.items_per_transaction"], "metric.sado_analytics_services.qty_returned": [], "metric.sado_analytics_services.item_discounted_value": ["metric.sado_analytics_services.avg_discount_ratio"], "metric.sado_analytics_services.item_sold_value": ["metric.sado_analytics_services.avg_discount_ratio"], "metric.sado_analytics_services.avg_discount_ratio": [], "metric.sado_analytics_services.items_per_transaction": [], "metric.sado_analytics_services.num_customers_rfm": [], "metric.sado_analytics_services.avg_monetary_value": [], "metric.sado_analytics_services.med_monetary_value": [], "metric.sado_analytics_services.total_monetary_value": [], "metric.sado_analytics_services.avg_recency": [], "metric.sado_analytics_services.median_recency": [], "metric.sado_analytics_services.avg_freq": [], "metric.sado_analytics_services.median_freq": [], "semantic_model.sado_analytics_services.facebook_performance": ["metric.sado_analytics_services.fb_clicks", "metric.sado_analytics_services.fb_impresions", "metric.sado_analytics_services.fb_link_clicks", "metric.sado_analytics_services.fb_messages", "metric.sado_analytics_services.fb_meta_conversion", "metric.sado_analytics_services.fb_meta_conversion_value", "metric.sado_analytics_services.fb_offline_conversion", "metric.sado_analytics_services.fb_offline_conversion_value", "metric.sado_analytics_services.fb_online_conversion", "metric.sado_analytics_services.fb_online_conversion_value", "metric.sado_analytics_services.fb_post_engagement", "metric.sado_analytics_services.fb_reach", "metric.sado_analytics_services.fb_spend", "metric.sado_analytics_services.meta_cv_7d", "metric.sado_analytics_services.offline_cv_7d", "metric.sado_analytics_services.online_cv_7d", "metric.sado_analytics_services.spend_7d"], "semantic_model.sado_analytics_services.revenue": ["metric.sado_analytics_services.gross_revenue", "metric.sado_analytics_services.invoice_count", "metric.sado_analytics_services.invoice_paid_value", "metric.sado_analytics_services.invoice_value", "metric.sado_analytics_services.order_discounted_value", "metric.sado_analytics_services.return_count", "metric.sado_analytics_services.returned_value"], "semantic_model.sado_analytics_services.revenue_items": ["metric.sado_analytics_services.item_discounted_value", "metric.sado_analytics_services.item_sold_value", "metric.sado_analytics_services.qty_returned", "metric.sado_analytics_services.qty_sold"], "semantic_model.sado_analytics_services.rfm_movement": ["metric.sado_analytics_services.avg_freq", "metric.sado_analytics_services.avg_monetary_value", "metric.sado_analytics_services.avg_recency", "metric.sado_analytics_services.med_monetary_value", "metric.sado_analytics_services.median_freq", "metric.sado_analytics_services.median_recency", "metric.sado_analytics_services.num_customers_rfm", "metric.sado_analytics_services.total_monetary_value"]}, "group_map": {}, "semantic_models": {"semantic_model.sado_analytics_services.facebook_performance": {"name": "facebook_performance", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/marketing/facebook/semantic__facebook_performance.yml", "original_file_path": "models/marts/marketing/facebook/semantic__facebook_performance.yml", "unique_id": "semantic_model.sado_analytics_services.facebook_performance", "fqn": ["sado_analytics_services", "marts", "marketing", "facebook", "facebook_performance"], "model": "ref('facebook_performance')", "node_relation": {"alias": "facebook_performance", "schema_name": "dbt_prod_marketing", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_marketing`.`facebook_performance`"}, "description": "Facebook performance metrics", "label": null, "defaults": {"agg_time_dimension": "date"}, "entities": [{"name": "campaign_date", "type": "primary", "description": null, "label": null, "role": null, "expr": "concat(campaign_name,\".\",unix_date(date_start))"}], "measures": [{"name": "spend", "agg": "sum", "description": "total spend on facebook ads", "label": null, "create_metric": false, "expr": "spend", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "impressions", "agg": "sum", "description": "total FB ads impressions", "label": null, "create_metric": false, "expr": "impressions", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "clicks", "agg": "sum", "description": "total FB ads clicks", "label": null, "create_metric": false, "expr": "clicks", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "reach", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "reach", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "link_click", "agg": "sum", "description": "total FB ads link clicks", "label": null, "create_metric": false, "expr": "link_click", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "post_engagement", "agg": "sum", "description": "total FB ads post engagements", "label": null, "create_metric": false, "expr": "post_engagement", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "offline_conversion", "agg": "sum", "description": "total offline transactions matched by FB", "label": null, "create_metric": false, "expr": "offline_conversion_purchase", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "offline_conversion_value", "agg": "sum", "description": "total offline transactions value matched by FB", "label": null, "create_metric": false, "expr": "offline_conversion_purchase_value", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "online_conversion", "agg": "sum", "description": "total online transactions attributed for ads, captured via pixel", "label": null, "create_metric": false, "expr": "pixel_purchase", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "online_conversion_value", "agg": "sum", "description": "total online transactions value attributed for ads, captured via pixel", "label": null, "create_metric": false, "expr": "pixel_purchase_value", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "meta_conversion", "agg": "sum", "description": "total transactions attributed for ads, captured directly on facebook", "label": null, "create_metric": false, "expr": "meta_purchase", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "meta_conversion_value", "agg": "sum", "description": "total transactions value attributed for ads, captured directly on facebook", "label": null, "create_metric": false, "expr": "meta_purchase_value", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "messages", "agg": "sum", "description": "number of messages generated from ads", "label": null, "create_metric": false, "expr": "messaging_conversation_started_7d", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(date_start)", "metadata": null}, {"name": "account", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "account_name", "metadata": null}, {"name": "campaign", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "campaign_name", "metadata": null}, {"name": "event", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "big_campaign", "metadata": null}, {"name": "pic", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "pic", "metadata": null}, {"name": "content_group", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "content_group", "metadata": null}, {"name": "page", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "page", "metadata": null}, {"name": "promoted_productline", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "promoted_productline", "metadata": null}, {"name": "media", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "media_type", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.facebook_performance"]}, "refs": [{"name": "facebook_performance", "package": null, "version": null}], "created_at": 1732268179.9011679, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.revenue": {"name": "revenue", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue.yml", "original_file_path": "models/marts/sales/semantic__revenue.yml", "unique_id": "semantic_model.sado_analytics_services.revenue", "fqn": ["sado_analytics_services", "marts", "sales", "revenue"], "model": "ref('revenue')", "node_relation": {"alias": "revenue", "schema_name": "dbt_prod_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue`"}, "description": "revenue fact table with single revenue stream per row, excluding terminated transaction", "label": null, "defaults": {"agg_time_dimension": "transaction_date"}, "entities": [{"name": "transaction", "type": "primary", "description": null, "label": null, "role": null, "expr": "transaction_id"}, {"name": "branch", "type": "foreign", "description": null, "label": null, "role": null, "expr": "branch_id"}, {"name": "customer", "type": "foreign", "description": null, "label": null, "role": null, "expr": "customer_id"}, {"name": "employee", "type": "foreign", "description": null, "label": null, "role": null, "expr": "employee_id"}], "measures": [{"name": "transaction_count", "agg": "count_distinct", "description": "total number of transaction", "label": null, "create_metric": false, "expr": "transaction_id", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "total_transaction_value", "agg": "sum", "description": "total value sold", "label": null, "create_metric": false, "expr": "total", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "received_transaction_value", "agg": "sum", "description": "total revenue received via payments", "label": null, "create_metric": false, "expr": "total_payment", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "return_fee", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "return_fee", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "order_discount", "agg": "sum", "description": "total order discount value", "label": null, "create_metric": false, "expr": "discount", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "transaction_date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(transaction_date)", "metadata": null}, {"name": "transaction_type", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "transaction_type", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.revenue"]}, "refs": [{"name": "revenue", "package": null, "version": null}], "created_at": 1732268180.365976, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.revenue_items": {"name": "revenue_items", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__revenue_items.yml", "original_file_path": "models/marts/sales/semantic__revenue_items.yml", "unique_id": "semantic_model.sado_analytics_services.revenue_items", "fqn": ["sado_analytics_services", "marts", "sales", "revenue_items"], "model": "ref('revenue_items')", "node_relation": {"alias": "revenue_items", "schema_name": "dbt_prod_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`revenue_items`"}, "description": "revenue fact table with single revenue stream per row, excluding terminated transaction", "label": null, "defaults": {"agg_time_dimension": "transaction_date"}, "entities": [{"name": "transaction_item", "type": "primary", "description": null, "label": null, "role": null, "expr": "concat(transaction_id, '.',product_id)"}, {"name": "branch", "type": "foreign", "description": null, "label": null, "role": null, "expr": "branch_id"}, {"name": "customer", "type": "foreign", "description": null, "label": null, "role": null, "expr": "customer_id"}, {"name": "employee", "type": "foreign", "description": null, "label": null, "role": null, "expr": "employee_id"}, {"name": "product", "type": "foreign", "description": null, "label": null, "role": null, "expr": "product_id"}], "measures": [{"name": "num_items", "agg": "sum", "description": "total number of item_sold", "label": null, "create_metric": false, "expr": "quantity", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "discounted_value", "agg": "sum", "description": "value discounted for item", "label": null, "create_metric": false, "expr": "discount", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "item_value", "agg": "sum", "description": "value of item on transaction", "label": null, "create_metric": false, "expr": "subtotal", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "transaction_date", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "date(transaction_date)", "metadata": null}, {"name": "transaction_type", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "transaction_type", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.revenue_items"]}, "refs": [{"name": "revenue_items", "package": null, "version": null}], "created_at": 1732268180.3796303, "config": {"enabled": true}, "primary_entity": null}, "semantic_model.sado_analytics_services.rfm_movement": {"name": "rfm_movement", "resource_type": "semantic_model", "package_name": "sado_analytics_services", "path": "marts/sales/semantic__rfm_movement.yml", "original_file_path": "models/marts/sales/semantic__rfm_movement.yml", "unique_id": "semantic_model.sado_analytics_services.rfm_movement", "fqn": ["sado_analytics_services", "marts", "sales", "rfm_movement"], "model": "ref('rfm_movement')", "node_relation": {"alias": "rfm_movement", "schema_name": "dbt_prod_sales", "database": "agile-scheme-394814", "relation_name": "`agile-scheme-394814`.`dbt_prod_sales`.`rfm_movement`"}, "description": "rfm segmentation semantic model", "label": null, "defaults": {"agg_time_dimension": "start_of_month"}, "entities": [{"name": "rfm_customer", "type": "primary", "description": null, "label": null, "role": null, "expr": "customer_id"}], "measures": [{"name": "num_customers", "agg": "count_distinct", "description": null, "label": null, "create_metric": false, "expr": "customer_id", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "avg_monetary_value", "agg": "average", "description": null, "label": null, "create_metric": false, "expr": "monetary", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "median_monetary_value", "agg": "median", "description": null, "label": null, "create_metric": false, "expr": "monetary", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "total_monetary_value", "agg": "sum", "description": null, "label": null, "create_metric": false, "expr": "monetary", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "avg_recency", "agg": "average", "description": null, "label": null, "create_metric": false, "expr": "recency", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "median_recency", "agg": "median", "description": null, "label": null, "create_metric": false, "expr": "recency", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "avg_freq", "agg": "average", "description": null, "label": null, "create_metric": false, "expr": "frequency", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}, {"name": "median_freq", "agg": "median", "description": null, "label": null, "create_metric": false, "expr": "frequency", "agg_params": null, "non_additive_dimension": null, "agg_time_dimension": null}], "dimensions": [{"name": "segment", "type": "categorical", "description": null, "label": null, "is_partition": false, "type_params": null, "expr": "segment", "metadata": null}, {"name": "start_of_month", "type": "time", "description": null, "label": null, "is_partition": false, "type_params": {"time_granularity": "day", "validity_params": null}, "expr": "start_of_month", "metadata": null}], "metadata": null, "depends_on": {"macros": [], "nodes": ["model.sado_analytics_services.rfm_movement"]}, "refs": [{"name": "rfm_movement", "package": null, "version": null}], "created_at": 1732268180.41551, "config": {"enabled": true}, "primary_entity": null}}}